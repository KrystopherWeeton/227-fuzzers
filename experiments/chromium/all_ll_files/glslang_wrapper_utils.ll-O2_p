; ModuleID = '../../third_party/angle/src/libANGLE/renderer/glslang_wrapper_utils.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/glslang_wrapper_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.angle::PackedEnumMap.253" = type { %"struct.std::__1::array.254" }
%"struct.std::__1::array.254" = type { [6 x i8*] }
%"struct.rx::ShaderInterfaceVariableInfo" = type <{ i32, i32, i32, i32, i32, %"class.angle::BitSetT.62", [3 x i8], %"struct.rx::ShaderInterfaceVariableXfbInfo", %"class.std::__1::vector.145", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.angle::BitSetT.62" = type { i8 }
%"struct.rx::ShaderInterfaceVariableXfbInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.145" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"* }
%"class.rx::ShaderInterfaceVariableInfoMap" = type { %"class.angle::PackedEnumMap.152" }
%"class.angle::PackedEnumMap.152" = type { %"struct.std::__1::array.153" }
%"struct.std::__1::array.153" = type { [6 x %"class.absl::flat_hash_map.154"] }
%"class.absl::flat_hash_map.154" = type { %"class.absl::container_internal::raw_hash_map.155" }
%"class.absl::container_internal::raw_hash_map.155" = type { %"class.absl::container_internal::raw_hash_set.156" }
%"class.absl::container_internal::raw_hash_set.156" = type { i8*, %"union.absl::container_internal::map_slot_type.157"*, i64, i64, %"class.absl::container_internal::CompressedTuple.158" }
%"union.absl::container_internal::map_slot_type.157" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"struct.rx::ShaderInterfaceVariableInfo" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::container_internal::CompressedTuple.158" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.159" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.159" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rx::ShaderInterfaceVariableInfoMap::Iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::const_iterator", %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::const_iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::iterator" = type { i8*, %union.anon.163 }
%union.anon.163 = type { %"union.absl::container_internal::map_slot_type.157"* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.rx::GlslangSourceOptions" = type { i8, i8, i8, i8 }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap", i32, %"class.std::__1::vector.46", %"class.std::__1::vector.53", %"class.std::__1::vector.60", %"class.gl::Range", %"class.angle::BitSetT.68", %"class.std::__1::vector", %"class.angle::BitSetT.69", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.40", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.std::__1::vector.13", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.20, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.8" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.6", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.20 = type { i8, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.24", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.31" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.30", %"struct.std::__1::array.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.30" = type { [3 x i32] }
%"class.angle::PackedEnumMap.31" = type { %"struct.std::__1::array.32" }
%"struct.std::__1::array.32" = type { [6 x %"class.std::__1::vector.33"] }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.35" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.gl::ShaderProgramManager" = type opaque
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.55" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.63" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.62" }>
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.68" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.angle::BitSetT.69" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.62", %"class.angle::BitSetT.62", [6 x i8], %"class.angle::BitSetT.83", i32, [4 x i8], %"class.angle::BitSetT.69", %"class.angle::BitSetT.83", %"class.angle::BitSetArray", %"struct.std::__1::array.86", %"struct.std::__1::array.87", %"class.angle::BitSetArray", %"struct.std::__1::array.88", %"struct.std::__1::array.89", %"class.angle::BitSetArray", %"struct.std::__1::array.89", i8, [7 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.53", %"class.std::__1::vector.53", i8, [7 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.90", %"class.std::__1::vector.97", i32, [4 x i8], %"class.std::__1::vector.104", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.111", %"class.angle::BitSetT.118", %"class.std::__1::vector.119", %"class.gl::Range", %"class.std::__1::vector.111", %"class.std::__1::vector.111", %"class.gl::Range", %"class.std::__1::vector.126", %"class.std::__1::vector.133", %"class.std::__1::vector.133", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.140", %"class.angle::PackedEnumMap.140", %"class.angle::PackedEnumMap.142", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.144, [6 x i8] }>
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array.76", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array.76" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::basic_stringstream"* }
%"class.angle::BitSetT.83" = type { i64 }
%"struct.std::__1::array.86" = type { [96 x i32] }
%"struct.std::__1::array.87" = type { [96 x i8] }
%"struct.std::__1::array.88" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.84" }
%"struct.std::__1::array.84" = type { [2 x %"class.angle::BitSetT.85"] }
%"class.angle::BitSetT.85" = type { i64 }
%"struct.std::__1::array.89" = type { [96 x %"class.angle::BitSetT.62"] }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.92" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i32*, i32*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i32* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.106" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.gl::LinkedUniform"* }
%"class.angle::BitSetT.118" = type { i64 }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.121" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.113" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.128" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.135" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.140" = type { %"struct.std::__1::array.141" }
%"struct.std::__1::array.141" = type { [6 x %"class.std::__1::vector.6"] }
%"class.angle::PackedEnumMap.142" = type { %"struct.std::__1::array.143" }
%"struct.std::__1::array.143" = type { [6 x i32] }
%struct.Optional.144 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.gl::ProgramVaryingPacking" = type <{ [8 x i8], %"class.angle::PackedEnumMap.165", %"class.angle::PackedEnumMap.190", [2 x i8] }>
%"class.angle::PackedEnumMap.165" = type { %"struct.std::__1::array.166" }
%"struct.std::__1::array.166" = type { [6 x %"class.gl::VaryingPacking"] }
%"class.gl::VaryingPacking" = type { %"class.std::__1::vector.167", %"class.std::__1::vector.174", %"class.std::__1::vector.181", %"class.angle::PackedEnumMap.188", %"class.angle::PackedEnumMap.188" }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.gl::VaryingPacking::Register"*, %"struct.gl::VaryingPacking::Register"*, %"class.std::__1::__compressed_pair.169" }
%"struct.gl::VaryingPacking::Register" = type { [4 x i8] }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.gl::VaryingPacking::Register"* }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"*, %"class.std::__1::__compressed_pair.176" }
%"struct.gl::PackedVaryingRegister" = type { %"struct.gl::PackedVarying"*, i32, i32, i32, i32 }
%"struct.gl::PackedVarying" = type <{ [8 x i8], %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.gl::VaryingInShaderRef" = type { %"struct.sh::ShaderVariable"*, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.gl::PackedVaryingRegister"* }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"*, %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.gl::PackedVarying"* }
%"class.angle::PackedEnumMap.188" = type { %"struct.std::__1::array.189" }
%"struct.std::__1::array.189" = type { [6 x %"class.std::__1::vector.46"] }
%"class.angle::PackedEnumMap.190" = type { %"struct.std::__1::array.191" }
%"struct.std::__1::array.191" = type { [6 x i8] }
%"struct.rx::GlslangProgramInterfaceInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.245" = type { [3 x %"class.std::__1::basic_string"] }
%"struct.gl::ProgramLinkedResources" = type { %"class.gl::ProgramVaryingPacking", %"class.gl::UniformBlockLinker", %"class.gl::ShaderStorageBlockLinker", %"class.gl::AtomicCounterBufferLinker", %"class.std::__1::vector.194", %"class.std::__1::vector.46" }
%"class.gl::UniformBlockLinker" = type { %"class.gl::InterfaceBlockLinker", %"class.std::__1::vector.104"* }
%"class.gl::InterfaceBlockLinker" = type { i32 (...)**, %"class.angle::PackedEnumMap.192", %"class.std::__1::vector.111"*, %"class.std::__1::vector.46"* }
%"class.angle::PackedEnumMap.192" = type { %"struct.std::__1::array.193" }
%"struct.std::__1::array.193" = type { [6 x %"class.std::__1::vector.13"*] }
%"class.gl::ShaderStorageBlockLinker" = type { %"class.gl::InterfaceBlockLinker", %"class.std::__1::vector.60"* }
%"class.gl::AtomicCounterBufferLinker" = type { %"class.std::__1::vector.119"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::UnusedUniform"*, %"struct.gl::UnusedUniform"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::UnusedUniform" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::UnusedUniform"* }
%"class.angle::PackedEnumMap.201" = type { %"struct.std::__1::array.202" }
%"struct.std::__1::array.202" = type { [6 x %"class.std::__1::vector"*] }
%"struct.rx::GlslangSpirvOptions" = type <{ i8, [3 x i8], i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.angle::spirv::BoxedUint32" = type { %"struct.angle::spirv::IdRefHelper" }
%"struct.angle::spirv::IdRefHelper" = type { i32 }
%"class.angle::FastVector.271" = type { %"struct.std::__1::array.272", %"class.angle::spirv::BoxedUint32.273"*, i64, i64 }
%"struct.std::__1::array.272" = type { [8 x %"class.angle::spirv::BoxedUint32.273"] }
%"class.angle::spirv::BoxedUint32.273" = type { %"struct.angle::spirv::LiteralIntegerHelper" }
%"struct.angle::spirv::LiteralIntegerHelper" = type { i32 }
%"class.angle::FastVector.278" = type { %"struct.std::__1::array.279", %"class.angle::spirv::BoxedUint32"*, i64, i64 }
%"struct.std::__1::array.279" = type { [8 x %"class.angle::spirv::BoxedUint32"] }
%"class.rx::(anonymous namespace)::SpirvTransformer" = type { %"class.rx::(anonymous namespace)::SpirvTransformerBase", %"struct.rx::GlslangSpirvOptions", i8, %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", [4 x i8], %"class.rx::(anonymous namespace)::SpirvIDDiscoverer", %"class.rx::(anonymous namespace)::SpirvPerVertexTrimmer", %"class.rx::(anonymous namespace)::SpirvInactiveVaryingRemover", %"class.rx::(anonymous namespace)::SpirvVaryingPrecisionFixer", %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator", %"class.rx::(anonymous namespace)::SpirvPositionTransformer" }
%"class.rx::(anonymous namespace)::SpirvTransformerBase" = type { %"class.std::__1::vector"*, %"class.rx::ShaderInterfaceVariableInfoMap"*, %"class.std::__1::vector"*, i64, i8, %"class.std::__1::vector.203", %"struct.rx::ShaderInterfaceVariableInfo" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"**, %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.rx::ShaderInterfaceVariableInfo"** }
%"class.rx::(anonymous namespace)::SpirvIDDiscoverer" = type <{ %"class.std::__1::vector.210", %"class.std::__1::vector.217", %"struct.rx::(anonymous namespace)::SpirvIDDiscoverer::PerVertexData", %"struct.rx::(anonymous namespace)::SpirvIDDiscoverer::PerVertexData", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", [4 x i8] }>
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { i8**, i8**, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { i8** }
%"class.std::__1::vector.217" = type { i64*, i64, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { i64 }
%"struct.rx::(anonymous namespace)::SpirvIDDiscoverer::PerVertexData" = type { %"class.angle::spirv::BoxedUint32", i32 }
%"class.rx::(anonymous namespace)::SpirvPerVertexTrimmer" = type { i8 }
%"class.rx::(anonymous namespace)::SpirvInactiveVaryingRemover" = type { %"class.std::__1::vector.223" }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.angle::spirv::BoxedUint32"* }
%"class.rx::(anonymous namespace)::SpirvVaryingPrecisionFixer" = type { %"class.std::__1::vector.223", %"class.std::__1::vector.223", %"class.std::__1::vector.223" }
%"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator" = type { i8, i8, %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"struct.std::__1::array.230", %"struct.std::__1::array.230", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32", %"class.angle::FastVector.231", %"struct.std::__1::array.232" }
%"struct.std::__1::array.230" = type { [4 x %"class.angle::spirv::BoxedUint32"] }
%"class.angle::FastVector.231" = type { %"struct.std::__1::array.230", %"class.angle::spirv::BoxedUint32"*, i64, i64 }
%"struct.std::__1::array.232" = type { [4 x %"class.std::__1::vector.233"] }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"class.std::__1::__compressed_pair.235" }
%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"class.angle::spirv::BoxedUint32", i32 }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* }
%"class.rx::(anonymous namespace)::SpirvPositionTransformer" = type { %"struct.rx::GlslangSpirvOptions" }
%"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer" = type <{ %"class.rx::(anonymous namespace)::SpirvTransformerBase", %"struct.std::__1::array.240", %"class.std::__1::vector.217", %"class.std::__1::vector.223", i8, i8, [2 x i8], %"class.angle::spirv::BoxedUint32", %"struct.std::__1::array.241", %"struct.std::__1::array.241", %"struct.std::__1::array.241", %"struct.std::__1::array.241", %"struct.std::__1::array.241", [4 x i8] }>
%"struct.std::__1::array.240" = type { [16 x %"struct.rx::(anonymous namespace)::AliasingAttributeMap"] }
%"struct.rx::(anonymous namespace)::AliasingAttributeMap" = type { %"class.angle::spirv::BoxedUint32", %"class.std::__1::vector.223" }
%"struct.std::__1::array.241" = type { [5 x %"class.angle::spirv::BoxedUint32"] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::allocator.161" = type { i8 }

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv = comdat any

$_Z3Stri = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv = comdat any

$_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE8__appendEmRKS2_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIPKN2rx27ShaderInterfaceVariableInfoENS_9allocatorIS4_EEE8__appendEmRKS4_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPjEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_ = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZN2rx27ShaderInterfaceVariableInfo8kInvalidE = hidden local_unnamed_addr constant i32 -1, align 4
@_ZN2sh22kUserDefinedNamePrefixE = external constant [0 x i8], align 1
@_ZN2sh2vk28kXfbEmulationBufferBlockNameE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [12 x i8] c"gl_Position\00", align 1
@_ZN2sh2vk28kXfbExtensionPositionOutNameE = external constant [0 x i8], align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@.str.3 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"gl_FragDepth\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"gl_SampleMask\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"gl_FragStencilRefARB\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"webgl_FragColor\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"webgl_FragData\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"gl_SecondaryFragColorEXT\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"angle_SecondaryFragColor\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"gl_SecondaryFragDataEXT\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"angle_SecondaryFragData\00", align 1
@_ZN2sh2vk28kLineRasterEmulationPositionE = external constant [0 x i8], align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"gl_PerVertex\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"gl_PointSize\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"gl_ClipDistance\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"gl_CullDistance\00", align 1
@_ZN2rxL20kDefaultUniformNamesE = internal unnamed_addr constant %"class.angle::PackedEnumMap.253" { %"struct.std::__1::array.254" { [6 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameVSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kDefaultUniformsNameTCSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kDefaultUniformsNameTESE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameGSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameFSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameCSE, i32 0, i32 0)] } }, align 8
@_ZN2sh2vk24kDriverUniformsBlockNameE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameVSE = external constant [0 x i8], align 1
@_ZN2sh2vk23kDefaultUniformsNameTCSE = external constant [0 x i8], align 1
@_ZN2sh2vk23kDefaultUniformsNameTESE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameGSE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameFSE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameCSE = external constant [0 x i8], align 1
@_ZN2sh2vk24kAtomicCountersBlockNameE = external constant [0 x i8], align 1
@_ZN2sh2vk23kXfbEmulationBufferNameE = external constant [0 x i8], align 1
@_ZN2sh2vk35kXfbEmulationGetOffsetsFunctionNameE = external constant [0 x i8], align 1
@_ZN2sh2vk32kXfbEmulationCaptureFunctionNameE = external constant [0 x i8], align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN2rx27ShaderInterfaceVariableInfoC1Ev = hidden unnamed_addr alias void (%"struct.rx::ShaderInterfaceVariableInfo"*), void (%"struct.rx::ShaderInterfaceVariableInfo"*)* @_ZN2rx27ShaderInterfaceVariableInfoC2Ev
@_ZN2rx30ShaderInterfaceVariableInfoMapC1Ev = hidden unnamed_addr alias void (%"class.rx::ShaderInterfaceVariableInfoMap"*), void (%"class.rx::ShaderInterfaceVariableInfoMap"*)* @_ZN2rx30ShaderInterfaceVariableInfoMapC2Ev
@_ZN2rx30ShaderInterfaceVariableInfoMapD1Ev = hidden unnamed_addr alias void (%"class.rx::ShaderInterfaceVariableInfoMap"*), void (%"class.rx::ShaderInterfaceVariableInfoMap"*)* @_ZN2rx30ShaderInterfaceVariableInfoMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx27ShaderInterfaceVariableInfoC2Ev(%"struct.rx::ShaderInterfaceVariableInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %0, i64 0, i32 5, i32 0
  %3 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -1, i64 20, i1 false)
  store i8 0, i8* %2, align 1
  %4 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %0, i64 0, i32 7, i32 7
  %6 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %0, i64 0, i32 7, i32 8
  %8 = bitcast %"class.std::__1::vector.145"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 53, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx30ShaderInterfaceVariableInfoMapC2Ev(%"class.rx::ShaderInterfaceVariableInfoMap"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"union.absl::container_internal::map_slot_type.157"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #14
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %5, align 8
  %6 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0, i32 1
  %7 = bitcast %"union.absl::container_internal::map_slot_type.157"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #14
  %8 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0, i32 1
  %10 = bitcast %"union.absl::container_internal::map_slot_type.157"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #14
  %11 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0, i32 1
  %13 = bitcast %"union.absl::container_internal::map_slot_type.157"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #14
  %14 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 0, i32 1
  %16 = bitcast %"union.absl::container_internal::map_slot_type.157"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #14
  %17 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 0, i32 1
  %19 = bitcast %"union.absl::container_internal::map_slot_type.157"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx30ShaderInterfaceVariableInfoMapD2Ev(%"class.rx::ShaderInterfaceVariableInfoMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %2) #14
  %3 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %3) #14
  %4 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %4) #14
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %5) #14
  %6 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %6) #14
  %7 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx30ShaderInterfaceVariableInfoMap5clearEv(%"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"* %2)
  %3 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"* %3)
  %4 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"* %4)
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"* %5)
  %6 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"* %6)
  %7 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"* %7)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.156"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"* %0)
  br label %66

6:                                                ; preds = %1
  %7 = icmp eq i64 %3, 0
  br i1 %7, label %66, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  br label %25

11:                                               ; preds = %62
  %12 = add i64 %26, 17
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 2
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 -128, i64 %12, i1 false) #14
  %16 = load i8*, i8** %14, align 8
  %17 = load i64, i64* %2, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  store i8 -1, i8* %18, align 1
  %19 = load i64, i64* %2, align 8
  %20 = lshr i64 %19, 3
  %21 = sub i64 %19, %20
  %22 = load i64, i64* %13, align 8
  %23 = sub i64 %21, %22
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  br label %66

25:                                               ; preds = %8, %62
  %26 = phi i64 [ 0, %8 ], [ %63, %62 ]
  %27 = load i8*, i8** %9, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = load i8, i8* %28, align 1
  %30 = icmp sgt i8 %29, -1
  br i1 %30, label %31, label %62

31:                                               ; preds = %25
  %32 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %10, align 8
  %33 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %32, i64 %26
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %32, i64 %26, i32 0, i32 1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %34) #14
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %32, i64 %26, i32 0, i32 1, i32 7, i32 8, i32 0
  %36 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %35, i64 0, i32 0
  %37 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %36, align 8
  %38 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %31
  %40 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37 to i8*
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %32, i64 %26, i32 0, i32 1, i32 7, i32 8, i32 0, i32 1
  %42 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %41, align 8
  %43 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %42, %37
  br i1 %43, label %52, label %44

44:                                               ; preds = %39, %44
  %45 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %46, %44 ], [ %42, %39 ]
  %46 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %45, i64 -1
  %47 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %45, i64 -1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %47) #14
  %48 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %46, %37
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = bitcast %"class.std::__1::__vector_base.146"* %35 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %39
  %53 = phi i8* [ %51, %49 ], [ %40, %39 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %41, align 8
  tail call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %52, %31
  %55 = bitcast %"union.absl::container_internal::map_slot_type.157"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %59, %54, %25
  %63 = add i64 %26, 1
  %64 = load i64, i64* %2, align 8
  %65 = icmp eq i64 %63, %64
  br i1 %65, label %11, label %25

66:                                               ; preds = %6, %11, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2rx30ShaderInterfaceVariableInfoMap8containsEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %20

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10, %13
  %21 = phi i64 [ %15, %13 ], [ %12, %10 ]
  %22 = phi i64 [ %17, %13 ], [ %11, %10 ]
  %23 = inttoptr i64 %21 to i8*
  %24 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %25 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %24, i8* %23, i64 %22) #14
  %26 = add i64 %25, %22
  %27 = zext i64 %26 to i128
  %28 = mul nuw i128 %27, 11376068507788127593
  %29 = lshr i128 %28, 64
  %30 = xor i128 %29, %28
  %31 = trunc i128 %30 to i64
  %32 = tail call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %31) #14
  %33 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %32, 0
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %20
  %36 = load i8, i8* %33, align 1
  %37 = icmp sgt i8 %36, -1
  br i1 %37, label %39, label %38, !prof !2

38:                                               ; preds = %35
  tail call void @llvm.trap() #14
  unreachable

39:                                               ; preds = %20, %35
  %40 = icmp ne i8* %33, null
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZNK2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %20

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10, %13
  %21 = phi i64 [ %15, %13 ], [ %12, %10 ]
  %22 = phi i64 [ %17, %13 ], [ %11, %10 ]
  %23 = inttoptr i64 %21 to i8*
  %24 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %25 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %24, i8* %23, i64 %22) #14
  %26 = add i64 %25, %22
  %27 = zext i64 %26 to i128
  %28 = mul nuw i128 %27, 11376068507788127593
  %29 = lshr i128 %28, 64
  %30 = xor i128 %29, %28
  %31 = trunc i128 %30 to i64
  %32 = tail call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %31) #14
  %33 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %32, 0
  %34 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %32, 1
  %35 = icmp eq i8* %33, null
  br i1 %35, label %39, label %36, !prof !3

36:                                               ; preds = %20
  %37 = load i8, i8* %33, align 1
  %38 = icmp sgt i8 %37, -1
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %36, %20
  tail call void @llvm.trap() #14
  unreachable

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %34, i64 0, i32 0, i32 1
  ret %"struct.rx::ShaderInterfaceVariableInfo"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %20

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10, %13
  %21 = phi i64 [ %15, %13 ], [ %12, %10 ]
  %22 = phi i64 [ %17, %13 ], [ %11, %10 ]
  %23 = inttoptr i64 %21 to i8*
  %24 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %25 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %24, i8* %23, i64 %22) #14
  %26 = add i64 %25, %22
  %27 = zext i64 %26 to i128
  %28 = mul nuw i128 %27, 11376068507788127593
  %29 = lshr i128 %28, 64
  %30 = xor i128 %29, %28
  %31 = trunc i128 %30 to i64
  %32 = tail call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %31) #14
  %33 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %32, 0
  %34 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %32, 1
  %35 = icmp eq i8* %33, null
  br i1 %35, label %39, label %36, !prof !3

36:                                               ; preds = %20
  %37 = load i8, i8* %33, align 1
  %38 = icmp sgt i8 %37, -1
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %36, %20
  tail call void @llvm.trap() #14
  unreachable

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %34, i64 0, i32 0, i32 1
  ret %"struct.rx::ShaderInterfaceVariableInfo"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3addEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %5, i64 0, i32 0
  %7 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %2) #14, !noalias !4
  %8 = extractvalue { i64, i8 } %7, 0
  %9 = extractvalue { i64, i8 } %7, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %38, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i32 1
  %14 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %13, align 8, !noalias !4
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !4
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = bitcast %"union.absl::container_internal::map_slot_type.157"* %15 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #14, !noalias !4
  br label %29

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %15, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !4
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !4
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #14, !noalias !4
  br label %29

29:                                               ; preds = %23, %20
  %30 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 5, i32 0
  %32 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 -1, i64 20, i1 false) #14, !noalias !4
  store i8 0, i8* %31, align 1, !noalias !4
  %33 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 7
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 7, i32 7
  %35 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 -1, i64 28, i1 false) #14, !noalias !4
  store i32 5126, i32* %34, align 4, !noalias !4
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 7, i32 8
  %37 = bitcast %"class.std::__1::vector.145"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 53, i1 false) #14, !noalias !4
  br label %38

38:                                               ; preds = %29, %3
  %39 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %5, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !noalias !4
  %41 = getelementptr inbounds i8, i8* %40, i64 %8
  %42 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i32 1
  %43 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %42, align 8, !noalias !4
  %44 = icmp ne i8* %41, null
  tail call void @llvm.assume(i1 %44) #14, !noalias !4
  %45 = load i8, i8* %41, align 1
  %46 = icmp sgt i8 %45, -1
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #14
  unreachable

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %43, i64 %8, i32 0, i32 1
  ret %"struct.rx::ShaderInterfaceVariableInfo"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap8addOrGetEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %5, i64 0, i32 0
  %7 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %2) #14, !noalias !9
  %8 = extractvalue { i64, i8 } %7, 0
  %9 = extractvalue { i64, i8 } %7, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %38, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i32 1
  %14 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %13, align 8, !noalias !9
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !9
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = bitcast %"union.absl::container_internal::map_slot_type.157"* %15 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #14, !noalias !9
  br label %29

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %15, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !9
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !9
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #14, !noalias !9
  br label %29

29:                                               ; preds = %23, %20
  %30 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 5, i32 0
  %32 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 -1, i64 20, i1 false) #14, !noalias !9
  store i8 0, i8* %31, align 1, !noalias !9
  %33 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 7
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 7, i32 7
  %35 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 -1, i64 28, i1 false) #14, !noalias !9
  store i32 5126, i32* %34, align 4, !noalias !9
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %14, i64 %8, i32 0, i32 1, i32 7, i32 8
  %37 = bitcast %"class.std::__1::vector.145"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 53, i1 false) #14, !noalias !9
  br label %38

38:                                               ; preds = %29, %3
  %39 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %5, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !noalias !9
  %41 = getelementptr inbounds i8, i8* %40, i64 %8
  %42 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i32 1
  %43 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %42, align 8, !noalias !9
  %44 = icmp ne i8* %41, null
  tail call void @llvm.assume(i1 %44) #14, !noalias !9
  %45 = load i8, i8* %41, align 1
  %46 = icmp sgt i8 %45, -1
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #14
  unreachable

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %43, i64 %8, i32 0, i32 1
  ret %"struct.rx::ShaderInterfaceVariableInfo"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx30ShaderInterfaceVariableInfoMap11getIteratorEN2gl10ShaderTypeE(%"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* noalias nocapture sret, %"class.rx::ShaderInterfaceVariableInfoMap"* nocapture readonly, i8 zeroext) local_unnamed_addr #2 align 2 {
  %4 = zext i8 %2 to i64
  %5 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %1, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %1, i64 0, i32 0, i32 0, i32 0, i64 %4, i32 0, i32 0, i32 1
  %8 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %7, align 8
  %9 = icmp ne i8* %6, null
  tail call void @llvm.assume(i1 %9) #14
  %10 = load i8, i8* %6, align 1
  %11 = icmp slt i8 %10, -1
  br i1 %11, label %12, label %27

12:                                               ; preds = %3, %12
  %13 = phi %"union.absl::container_internal::map_slot_type.157"* [ %24, %12 ], [ %8, %3 ]
  %14 = phi i8* [ %23, %12 ], [ %6, %3 ]
  %15 = bitcast i8* %14 to <16 x i8>*
  %16 = load <16 x i8>, <16 x i8>* %15, align 1
  %17 = icmp slt <16 x i8> %16, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %18 = bitcast <16 x i1> %17 to i16
  %19 = zext i16 %18 to i32
  %20 = add nuw nsw i32 %19, 1
  %21 = tail call i32 @llvm.cttz.i32(i32 %20, i1 true) #14, !range !14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %14, i64 %22
  %24 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %13, i64 %22
  %25 = load i8, i8* %23, align 1
  %26 = icmp slt i8 %25, -1
  br i1 %26, label %12, label %27

27:                                               ; preds = %12, %3
  %28 = phi %"union.absl::container_internal::map_slot_type.157"* [ %8, %3 ], [ %24, %12 ]
  %29 = phi i8* [ %6, %3 ], [ %23, %12 ]
  %30 = phi i8 [ %10, %3 ], [ %25, %12 ]
  %31 = icmp eq i8 %30, -1
  %32 = select i1 %31, i8* null, i8* %29, !prof !3
  %33 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type.157"* %28, %"union.absl::container_internal::map_slot_type.157"** %34, align 8
  %35 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %0, i64 0, i32 1, i32 0, i32 0
  store i8* null, i8** %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2rx26GetImageNameWithoutIndicesEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %14 = zext i8 %5 to i64
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i8* [ %9, %7 ], [ %13, %12 ]
  %17 = phi i64 [ %11, %7 ], [ %14, %12 ]
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 93
  br i1 %21, label %22, label %35

22:                                               ; preds = %15
  %23 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122UniformNameIsIndexZeroERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0)
  br i1 %23, label %24, label %35

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 91, i64 0) #14
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %26, %"class.std::__1::allocator"* dereferenceable(1) %27) #14
  %28 = load i8, i8* %4, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %30, %24
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %25, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  br label %35

35:                                               ; preds = %22, %15, %33
  %36 = phi i1 [ true, %33 ], [ true, %15 ], [ false, %22 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122UniformNameIsIndexZeroERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %34, %1
  %10 = phi i64 [ 0, %1 ], [ %14, %34 ]
  %11 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 91, i64 %10) #14
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %35, label %13

13:                                               ; preds = %9
  %14 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 93, i64 %11) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  %15 = add nuw i64 %11, 1
  %16 = xor i64 %11, -1
  %17 = add i64 %14, %16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %15, i64 %17, %"class.std::__1::allocator"* dereferenceable(1) %4) #14
  %18 = load i8, i8* %6, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i64, i64* %7, align 8
  %21 = zext i8 %18 to i64
  %22 = select i1 %19, i64 %20, i64 %21
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %13
  %25 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #14
  %26 = icmp ne i32 %25, 0
  %27 = load i8, i8* %6, align 1
  br label %28

28:                                               ; preds = %13, %24
  %29 = phi i8 [ %27, %24 ], [ %18, %13 ]
  %30 = phi i1 [ %26, %24 ], [ true, %13 ]
  %31 = icmp slt i8 %29, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %33) #17
  br label %34

34:                                               ; preds = %28, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  br i1 %30, label %35, label %9

35:                                               ; preds = %34, %9
  %36 = phi i1 [ true, %9 ], [ false, %34 ]
  ret i1 %36
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load i8, i8* %7, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #14
  br label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %16, i64 %18) #14
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i8* [ %12, %11 ], [ %19, %14 ]
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %4, align 8
  %27 = load i64, i64* %5, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %21
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %128, label %33

33:                                               ; preds = %20
  %34 = icmp ult i64 %30, 16
  br i1 %34, label %35, label %37

35:                                               ; preds = %126, %33
  %36 = phi i8* [ %29, %33 ], [ %39, %126 ]
  br label %130

37:                                               ; preds = %33
  %38 = and i64 %30, -16
  %39 = getelementptr i8, i8* %29, i64 %38
  br label %40

40:                                               ; preds = %123, %37
  %41 = phi i64 [ 0, %37 ], [ %124, %123 ]
  %42 = getelementptr i8, i8* %29, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %44, <i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46, i8 46>
  %46 = extractelement <16 x i1> %45, i32 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  store i8 95, i8* %42, align 1
  br label %48

48:                                               ; preds = %47, %40
  %49 = extractelement <16 x i1> %45, i32 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %48
  %51 = or i64 %41, 1
  %52 = getelementptr i8, i8* %29, i64 %51
  store i8 95, i8* %52, align 1
  br label %53

53:                                               ; preds = %50, %48
  %54 = extractelement <16 x i1> %45, i32 2
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = or i64 %41, 2
  %57 = getelementptr i8, i8* %29, i64 %56
  store i8 95, i8* %57, align 1
  br label %58

58:                                               ; preds = %55, %53
  %59 = extractelement <16 x i1> %45, i32 3
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = or i64 %41, 3
  %62 = getelementptr i8, i8* %29, i64 %61
  store i8 95, i8* %62, align 1
  br label %63

63:                                               ; preds = %60, %58
  %64 = extractelement <16 x i1> %45, i32 4
  br i1 %64, label %65, label %68

65:                                               ; preds = %63
  %66 = or i64 %41, 4
  %67 = getelementptr i8, i8* %29, i64 %66
  store i8 95, i8* %67, align 1
  br label %68

68:                                               ; preds = %65, %63
  %69 = extractelement <16 x i1> %45, i32 5
  br i1 %69, label %70, label %73

70:                                               ; preds = %68
  %71 = or i64 %41, 5
  %72 = getelementptr i8, i8* %29, i64 %71
  store i8 95, i8* %72, align 1
  br label %73

73:                                               ; preds = %70, %68
  %74 = extractelement <16 x i1> %45, i32 6
  br i1 %74, label %75, label %78

75:                                               ; preds = %73
  %76 = or i64 %41, 6
  %77 = getelementptr i8, i8* %29, i64 %76
  store i8 95, i8* %77, align 1
  br label %78

78:                                               ; preds = %75, %73
  %79 = extractelement <16 x i1> %45, i32 7
  br i1 %79, label %80, label %83

80:                                               ; preds = %78
  %81 = or i64 %41, 7
  %82 = getelementptr i8, i8* %29, i64 %81
  store i8 95, i8* %82, align 1
  br label %83

83:                                               ; preds = %80, %78
  %84 = extractelement <16 x i1> %45, i32 8
  br i1 %84, label %85, label %88

85:                                               ; preds = %83
  %86 = or i64 %41, 8
  %87 = getelementptr i8, i8* %29, i64 %86
  store i8 95, i8* %87, align 1
  br label %88

88:                                               ; preds = %85, %83
  %89 = extractelement <16 x i1> %45, i32 9
  br i1 %89, label %90, label %93

90:                                               ; preds = %88
  %91 = or i64 %41, 9
  %92 = getelementptr i8, i8* %29, i64 %91
  store i8 95, i8* %92, align 1
  br label %93

93:                                               ; preds = %90, %88
  %94 = extractelement <16 x i1> %45, i32 10
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  %96 = or i64 %41, 10
  %97 = getelementptr i8, i8* %29, i64 %96
  store i8 95, i8* %97, align 1
  br label %98

98:                                               ; preds = %95, %93
  %99 = extractelement <16 x i1> %45, i32 11
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = or i64 %41, 11
  %102 = getelementptr i8, i8* %29, i64 %101
  store i8 95, i8* %102, align 1
  br label %103

103:                                              ; preds = %100, %98
  %104 = extractelement <16 x i1> %45, i32 12
  br i1 %104, label %105, label %108

105:                                              ; preds = %103
  %106 = or i64 %41, 12
  %107 = getelementptr i8, i8* %29, i64 %106
  store i8 95, i8* %107, align 1
  br label %108

108:                                              ; preds = %105, %103
  %109 = extractelement <16 x i1> %45, i32 13
  br i1 %109, label %110, label %113

110:                                              ; preds = %108
  %111 = or i64 %41, 13
  %112 = getelementptr i8, i8* %29, i64 %111
  store i8 95, i8* %112, align 1
  br label %113

113:                                              ; preds = %110, %108
  %114 = extractelement <16 x i1> %45, i32 14
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = or i64 %41, 14
  %117 = getelementptr i8, i8* %29, i64 %116
  store i8 95, i8* %117, align 1
  br label %118

118:                                              ; preds = %115, %113
  %119 = extractelement <16 x i1> %45, i32 15
  br i1 %119, label %120, label %123

120:                                              ; preds = %118
  %121 = or i64 %41, 15
  %122 = getelementptr i8, i8* %29, i64 %121
  store i8 95, i8* %122, align 1
  br label %123

123:                                              ; preds = %120, %118
  %124 = add i64 %41, 16
  %125 = icmp eq i64 %124, %38
  br i1 %125, label %126, label %40, !llvm.loop !15

126:                                              ; preds = %123
  %127 = icmp eq i64 %30, %38
  br i1 %127, label %138, label %35

128:                                              ; preds = %20
  %129 = ptrtoint i8* %26 to i64
  br label %145

130:                                              ; preds = %35, %135
  %131 = phi i8* [ %136, %135 ], [ %36, %35 ]
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 46
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  store i8 95, i8* %131, align 1
  br label %135

135:                                              ; preds = %134, %130
  %136 = getelementptr inbounds i8, i8* %131, i64 1
  %137 = icmp eq i8* %136, %31
  br i1 %137, label %138, label %130, !llvm.loop !17

138:                                              ; preds = %135, %126
  %139 = load i8, i8* %23, align 1
  %140 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = inttoptr i64 %141 to i8*
  %143 = load i64, i64* %5, align 8
  %144 = zext i8 %139 to i64
  br label %145

145:                                              ; preds = %128, %138
  %146 = phi i8* [ %26, %128 ], [ %142, %138 ]
  %147 = phi i64 [ %28, %128 ], [ %144, %138 ]
  %148 = phi i64 [ %27, %128 ], [ %143, %138 ]
  %149 = phi i64 [ %129, %128 ], [ %141, %138 ]
  %150 = phi i8 [ %24, %128 ], [ %139, %138 ]
  %151 = icmp slt i8 %150, 0
  %152 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %153 = select i1 %151, i64 %149, i64 %152
  %154 = select i1 %151, i8* %146, i8* %21
  %155 = select i1 %151, i8* %146, i8* %21
  %156 = select i1 %151, i64 %148, i64 %147
  %157 = getelementptr inbounds i8, i8* %155, i64 %156
  %158 = icmp eq i8* %154, %157
  br i1 %158, label %159, label %190

159:                                              ; preds = %212, %145
  %160 = phi i64 [ %156, %145 ], [ %224, %212 ]
  %161 = phi i64 [ %147, %145 ], [ %222, %212 ]
  %162 = phi i8* [ %146, %145 ], [ %213, %212 ]
  %163 = phi i64 [ %148, %145 ], [ %215, %212 ]
  %164 = phi i8* [ %146, %145 ], [ %214, %212 ]
  %165 = phi i64 [ %153, %145 ], [ %219, %212 ]
  %166 = phi i1 [ %151, %145 ], [ %221, %212 ]
  %167 = getelementptr inbounds i8, i8* %164, i64 %163
  %168 = ptrtoint i8* %164 to i64
  %169 = getelementptr inbounds i8, i8* %21, i64 %161
  %170 = select i1 %166, i8* %167, i8* %169
  %171 = select i1 %166, i64 %168, i64 %152
  %172 = ptrtoint i8* %170 to i64
  %173 = sub i64 %165, %171
  %174 = sub i64 %172, %165
  %175 = icmp ult i64 %160, %173
  br i1 %175, label %176, label %178

176:                                              ; preds = %159
  %177 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %177) #18
  unreachable

178:                                              ; preds = %159
  %179 = icmp eq i64 %174, -1
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  br i1 %166, label %181, label %183

181:                                              ; preds = %180
  %182 = getelementptr inbounds i8, i8* %162, i64 %173
  store i8 0, i8* %182, align 1
  store i64 %173, i64* %5, align 8
  br label %187

183:                                              ; preds = %180
  %184 = getelementptr inbounds i8, i8* %21, i64 %173
  store i8 0, i8* %184, align 1
  %185 = trunc i64 %173 to i8
  store i8 %185, i8* %23, align 1
  br label %187

186:                                              ; preds = %178
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 %173, i64 %174) #14
  br label %187

187:                                              ; preds = %181, %183, %186
  %188 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 46, i64 0) #14
  %189 = icmp eq i64 %188, -1
  br i1 %189, label %227, label %234

190:                                              ; preds = %145, %212
  %191 = phi i8* [ %213, %212 ], [ %146, %145 ]
  %192 = phi i8* [ %214, %212 ], [ %146, %145 ]
  %193 = phi i64 [ %215, %212 ], [ %148, %145 ]
  %194 = phi i8* [ %216, %212 ], [ %146, %145 ]
  %195 = phi i8 [ %217, %212 ], [ %150, %145 ]
  %196 = phi i64 [ %219, %212 ], [ %153, %145 ]
  %197 = phi i8* [ %220, %212 ], [ %154, %145 ]
  %198 = load i8, i8* %197, align 1
  %199 = icmp eq i8 %198, 91
  br i1 %199, label %200, label %205

200:                                              ; preds = %190, %200
  %201 = phi i8* [ %202, %200 ], [ %197, %190 ]
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, 93
  br i1 %204, label %212, label %200

205:                                              ; preds = %190
  %206 = inttoptr i64 %196 to i8*
  %207 = getelementptr inbounds i8, i8* %206, i64 1
  %208 = ptrtoint i8* %207 to i64
  store i8 %198, i8* %206, align 1
  %209 = load i8, i8* %23, align 1
  %210 = load i8*, i8** %4, align 8
  %211 = load i64, i64* %5, align 8
  br label %212

212:                                              ; preds = %200, %205
  %213 = phi i8* [ %210, %205 ], [ %191, %200 ]
  %214 = phi i8* [ %210, %205 ], [ %192, %200 ]
  %215 = phi i64 [ %211, %205 ], [ %193, %200 ]
  %216 = phi i8* [ %210, %205 ], [ %194, %200 ]
  %217 = phi i8 [ %209, %205 ], [ %195, %200 ]
  %218 = phi i8* [ %197, %205 ], [ %202, %200 ]
  %219 = phi i64 [ %208, %205 ], [ %196, %200 ]
  %220 = getelementptr inbounds i8, i8* %218, i64 1
  %221 = icmp slt i8 %217, 0
  %222 = zext i8 %217 to i64
  %223 = select i1 %221, i8* %216, i8* %21
  %224 = select i1 %221, i64 %215, i64 %222
  %225 = getelementptr inbounds i8, i8* %223, i64 %224
  %226 = icmp eq i8* %220, %225
  br i1 %226, label %159, label %190

227:                                              ; preds = %187
  %228 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #14
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh22kUserDefinedNamePrefixE, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %0) #14
  %229 = load i8, i8* %23, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %227
  %232 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %232) #17
  br label %233

233:                                              ; preds = %231, %227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %228, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #14
  br label %234

234:                                              ; preds = %233, %187
  ret void
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16GetXfbBufferNameEj(%"class.std::__1::basic_string"* noalias nocapture sret, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  call void @_Z3Stri(%"class.std::__1::basic_string"* nonnull sret %3, i32 %1)
  %5 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %3, i64 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbEmulationBufferBlockNameE, i64 0, i64 0)) #14, !noalias !19
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14, !noalias !19
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_Z3Stri(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #5 comdat {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 272, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = load i8*, i8** %15, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #14
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %38 = inttoptr i64 %35 to i8*
  %39 = getelementptr i8, i8* %38, i64 -24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %45, i64* %13, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %4, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #14
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 3
  %56 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #14
  store i32 24, i32* %55, align 8
  %57 = bitcast %"class.std::__1::basic_ostream.base"* %34 to %"class.std::__1::basic_ostream"*
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %57, i32 %1) #14
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %10) #14
  %59 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %59, i64* %13, align 8
  %60 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %61 = inttoptr i64 %59 to i8*
  %62 = getelementptr i8, i8* %61, i64 -24
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds i8, i8* %4, i64 %64
  %66 = bitcast i8* %65 to i64*
  store i64 %60, i64* %66, align 8
  %67 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %67, i64* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %2, %72
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #14
  %76 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %76, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  %77 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %78 = bitcast %"class.std::__1::basic_ios.base"* %77 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %78) #14
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx22GlslangAssignLocationsERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_21ProgramVaryingPackingENS3_10ShaderTypeESA_bPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* nocapture readonly dereferenceable(4), %"class.gl::ProgramState"* dereferenceable(304), %"class.gl::ProgramVaryingPacking"* dereferenceable(2176), i8 zeroext, i8 zeroext, i1 zeroext, %"struct.rx::GlslangProgramInterfaceInfo"* nocapture, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #0 {
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"struct.std::__1::array.245", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %29 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %28, align 8
  switch i8 %3, label %300 [
    i8 4, label %30
    i8 0, label %267
  ]

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 16
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %300, label %35

35:                                               ; preds = %30
  %36 = bitcast %"struct.std::__1::array.245"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 72, i1 false) #14
  %37 = bitcast %"struct.std::__1::array.245"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 12, i8* %38, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12, i1 false) #14
  %39 = getelementptr inbounds i8, i8* %36, i64 12
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %"struct.std::__1::array.245", %"struct.std::__1::array.245"* %21, i64 0, i32 0, i64 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 13, i8* %42, align 1
  %43 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i64 13, i1 false) #14
  %44 = getelementptr inbounds i8, i8* %43, i64 13
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %"struct.std::__1::array.245", %"struct.std::__1::array.245"* %21, i64 0, i32 0, i64 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 20, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i64 20, i1 false) #14
  %49 = getelementptr inbounds i8, i8* %48, i64 20
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 21, i32 0, i32 0
  %51 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %50, align 8
  %52 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 21, i32 0, i32 1
  %53 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %52, align 8
  %54 = icmp eq %"struct.gl::VariableLocation"* %51, %53
  br i1 %54, label %59, label %55

55:                                               ; preds = %35
  %56 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 20, i32 0, i32 0
  br label %196

57:                                               ; preds = %248
  %58 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %28, align 8
  br label %59

59:                                               ; preds = %57, %35
  %60 = phi %"class.gl::ProgramExecutable"* [ %58, %57 ], [ %29, %35 ]
  %61 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %60, i64 0, i32 22, i32 0, i32 0
  %62 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %61, align 8
  %63 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %60, i64 0, i32 22, i32 0, i32 1
  %64 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %63, align 8
  %65 = icmp eq %"struct.gl::VariableLocation"* %62, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %60, i64 0, i32 20, i32 0, i32 0
  br label %71

68:                                               ; preds = %98, %59
  %69 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 4) #14
  %70 = icmp eq %"class.gl::Shader"* %69, null
  br i1 %70, label %174, label %101

71:                                               ; preds = %98, %66
  %72 = phi %"struct.gl::VariableLocation"* [ %62, %66 ], [ %99, %98 ]
  %73 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %98

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %72, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %98, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %72, i64 0, i32 2
  %82 = load i8, i8* %81, align 4, !range !22
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %80
  %85 = zext i32 %78 to i64
  %86 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %67, align 8
  %87 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %86, i64 %85, i32 11
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, -1
  %90 = select i1 %89, i32 0, i32 %88
  %91 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %86, i64 %85, i32 3
  %92 = tail call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 4, %"class.std::__1::basic_string"* dereferenceable(24) %91, i32 %90, i32 -1, i8 zeroext 0, i8 zeroext 0) #14
  %93 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %86, i64 %85, i32 19
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %96, label %98

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %92, i64 0, i32 4
  store i32 1, i32* %97, align 8
  br label %98

98:                                               ; preds = %96, %84, %80, %76, %71
  %99 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %72, i64 1
  %100 = icmp eq %"struct.gl::VariableLocation"* %99, %64
  br i1 %100, label %68, label %71

101:                                              ; preds = %68
  %102 = tail call i32 @_ZN2gl6Shader16getShaderVersionEv(%"class.gl::Shader"* nonnull %69) #14
  %103 = icmp eq i32 %102, 100
  br i1 %103, label %104, label %174

104:                                              ; preds = %101
  %105 = tail call dereferenceable(24) %"class.std::__1::vector.6"* @_ZN2gl6Shader24getActiveOutputVariablesEv(%"class.gl::Shader"* nonnull %69) #14
  %106 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %105, i64 0, i32 0, i32 0
  %107 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %105, i64 0, i32 0, i32 1
  %109 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %108, align 8
  %110 = icmp eq %"struct.sh::ShaderVariable"* %107, %109
  br i1 %110, label %174, label %111

111:                                              ; preds = %104
  %112 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = bitcast i64* %114 to <2 x i64>*
  %123 = bitcast i64* %119 to <2 x i64>*
  br label %124

124:                                              ; preds = %171, %111
  %125 = phi %"struct.sh::ShaderVariable"* [ %107, %111 ], [ %172, %171 ]
  %126 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %125, i64 0, i32 2
  %127 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  %131 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = zext i8 %129 to i64
  %134 = select i1 %130, i64 %132, i64 %133
  %135 = icmp eq i64 %134, 24
  br i1 %135, label %136, label %152

136:                                              ; preds = %124
  %137 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %126, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i64 24) #14
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %136
  %140 = load i8, i8* %128, align 1
  %141 = load i64, i64* %131, align 8
  %142 = zext i8 %140 to i64
  br label %152

143:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #14
  %144 = call i8* @_Znwm(i64 32) #17
  store i8* %144, i8** %118, align 8
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %123, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %144, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i64 24, i1 false) #14
  %145 = getelementptr inbounds i8, i8* %144, i64 24
  store i8 0, i8* %145, align 1
  %146 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19, i32 0, i32 -1, i8 zeroext 0, i8 zeroext 0) #14
  %147 = load i8, i8* %121, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %150) #17
  br label %151

151:                                              ; preds = %149, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #14
  br label %171

152:                                              ; preds = %139, %124
  %153 = phi i64 [ %142, %139 ], [ %133, %124 ]
  %154 = phi i64 [ %141, %139 ], [ %132, %124 ]
  %155 = phi i8 [ %140, %139 ], [ %129, %124 ]
  %156 = icmp slt i8 %155, 0
  %157 = select i1 %156, i64 %154, i64 %153
  %158 = icmp eq i64 %157, 23
  br i1 %158, label %159, label %171

159:                                              ; preds = %152
  %160 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %126, i64 0, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i64 23) #14
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %171

162:                                              ; preds = %159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #14
  %163 = call i8* @_Znwm(i64 32) #17
  store i8* %163, i8** %113, align 8
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %163, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i64 23, i1 false) #14
  %164 = getelementptr inbounds i8, i8* %163, i64 23
  store i8 0, i8* %164, align 1
  %165 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, i32 0, i32 -1, i8 zeroext 0, i8 zeroext 0) #14
  %166 = load i8, i8* %116, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %169) #17
  br label %170

170:                                              ; preds = %168, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #14
  br label %171

171:                                              ; preds = %170, %159, %152, %151
  %172 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %125, i64 1
  %173 = icmp eq %"struct.sh::ShaderVariable"* %172, %109
  br i1 %173, label %174, label %124

174:                                              ; preds = %171, %104, %101, %68
  %175 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #14
  %176 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  store i8 15, i8* %177, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %175, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i64 15, i1 false) #14
  %178 = getelementptr inbounds i8, i8* %175, i64 15
  store i8 0, i8* %178, align 1
  %179 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22, i32 0, i32 0, i8 zeroext 0, i8 zeroext 0) #14
  %180 = load i8, i8* %177, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #17
  br label %185

185:                                              ; preds = %182, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #14
  %186 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #14
  %187 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  store i8 14, i8* %188, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %186, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14, i1 false) #14
  %189 = getelementptr inbounds i8, i8* %186, i64 14
  store i8 0, i8* %189, align 2
  %190 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23, i32 0, i32 0, i8 zeroext 0, i8 zeroext 0) #14
  %191 = load i8, i8* %188, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %266

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #17
  br label %266

196:                                              ; preds = %248, %55
  %197 = phi %"struct.gl::VariableLocation"* [ %51, %55 ], [ %249, %248 ]
  %198 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %197, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %248

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %197, i64 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, -1
  br i1 %204, label %248, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %197, i64 0, i32 2
  %207 = load i8, i8* %206, align 4, !range !22
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %248

209:                                              ; preds = %205
  %210 = zext i32 %203 to i64
  %211 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %56, align 8
  %212 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %211, i64 %210, i32 11
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, -1
  br i1 %214, label %215, label %244

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %211, i64 %210, i32 2
  %217 = bitcast %"class.std::__1::basic_string"* %216 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  %221 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %211, i64 %210, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = zext i8 %219 to i64
  %224 = select i1 %220, i64 %222, i64 %223
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = bitcast %"class.std::__1::basic_string"* %216 to i8*
  %228 = select i1 %220, i8* %226, i8* %227
  switch i64 %224, label %244 [
    i64 12, label %229
    i64 13, label %251
  ]

229:                                              ; preds = %215
  %230 = load i8, i8* %228, align 1
  %231 = icmp eq i8 %230, 103
  br i1 %231, label %232, label %244

232:                                              ; preds = %229, %239
  %233 = phi i64 [ %236, %239 ], [ 12, %229 ]
  %234 = phi i8* [ %237, %239 ], [ %36, %229 ]
  %235 = phi i8* [ %240, %239 ], [ %228, %229 ]
  %236 = add nsw i64 %233, -1
  %237 = getelementptr inbounds i8, i8* %234, i64 1
  %238 = icmp eq i64 %236, 0
  br i1 %238, label %244, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds i8, i8* %235, i64 1
  %241 = load i8, i8* %237, align 1
  %242 = load i8, i8* %240, align 1
  %243 = icmp eq i8 %241, %242
  br i1 %243, label %232, label %244

244:                                              ; preds = %261, %254, %232, %239, %251, %229, %215, %209
  %245 = phi i32 [ %213, %209 ], [ 0, %251 ], [ 0, %229 ], [ 0, %215 ], [ 0, %239 ], [ 0, %232 ], [ 0, %254 ], [ 0, %261 ]
  %246 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %211, i64 %210, i32 3
  %247 = tail call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 4, %"class.std::__1::basic_string"* dereferenceable(24) %246, i32 %245, i32 -1, i8 zeroext 0, i8 zeroext 0) #14
  br label %248

248:                                              ; preds = %244, %205, %201, %196
  %249 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %197, i64 1
  %250 = icmp eq %"struct.gl::VariableLocation"* %249, %53
  br i1 %250, label %57, label %196

251:                                              ; preds = %215
  %252 = load i8, i8* %228, align 1
  %253 = icmp eq i8 %252, 103
  br i1 %253, label %254, label %244

254:                                              ; preds = %251, %261
  %255 = phi i64 [ %258, %261 ], [ 13, %251 ]
  %256 = phi i8* [ %259, %261 ], [ %43, %251 ]
  %257 = phi i8* [ %262, %261 ], [ %228, %251 ]
  %258 = add nsw i64 %255, -1
  %259 = getelementptr inbounds i8, i8* %256, i64 1
  %260 = icmp eq i64 %258, 0
  br i1 %260, label %244, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds i8, i8* %257, i64 1
  %263 = load i8, i8* %259, align 1
  %264 = load i8, i8* %262, align 1
  %265 = icmp eq i8 %263, %264
  br i1 %265, label %254, label %244

266:                                              ; preds = %193, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #14
  br label %300

267:                                              ; preds = %8
  %268 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %269 = load i8, i8* %268, align 1
  %270 = and i8 %269, 1
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %300, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 25, i32 0, i32 0
  %274 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %273, align 8
  %275 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 25, i32 0, i32 1
  %276 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %275, align 8
  %277 = icmp eq %"struct.sh::ShaderVariable"* %274, %276
  br i1 %277, label %300, label %278

278:                                              ; preds = %272, %278
  %279 = phi %"struct.sh::ShaderVariable"* [ %298, %278 ], [ %274, %272 ]
  %280 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %279, i64 0, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = call i32 @_ZN2gl19VariableColumnCountEj(i32 %281) #14
  %283 = trunc i32 %282 to i8
  %284 = load i32, i32* %280, align 8
  %285 = call i32 @_ZN2gl16VariableRowCountEj(i32 %284) #14
  %286 = trunc i32 %285 to i8
  %287 = and i32 %282, 254
  %288 = icmp ne i32 %287, 0
  %289 = and i32 %285, 254
  %290 = icmp ne i32 %289, 0
  %291 = and i1 %288, %290
  %292 = select i1 %291, i8 %286, i8 %283
  %293 = select i1 %291, i8 %283, i8 %286
  %294 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %279, i64 0, i32 3
  %295 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %279, i64 0, i32 11
  %296 = load i32, i32* %295, align 4
  %297 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext 0, %"class.std::__1::basic_string"* dereferenceable(24) %294, i32 %296, i32 -1, i8 zeroext %292, i8 zeroext %293) #14
  %298 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %279, i64 1
  %299 = icmp eq %"struct.sh::ShaderVariable"* %298, %276
  br i1 %299, label %300, label %278

300:                                              ; preds = %278, %266, %30, %267, %272, %8
  %301 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 3, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = and i8 %302, 32
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %1071

305:                                              ; preds = %300
  %306 = call dereferenceable(360) %"class.gl::VaryingPacking"* @_ZNK2gl21ProgramVaryingPacking15getInputPackingENS_10ShaderTypeE(%"class.gl::ProgramVaryingPacking"* %2, i8 zeroext %3) #14
  %307 = call dereferenceable(360) %"class.gl::VaryingPacking"* @_ZNK2gl21ProgramVaryingPacking16getOutputPackingENS_10ShaderTypeE(%"class.gl::ProgramVaryingPacking"* %2, i8 zeroext %3) #14
  %308 = icmp eq i8 %3, 0
  br i1 %308, label %311, label %309

309:                                              ; preds = %305
  call fastcc void @_ZN2rx12_GLOBAL__N_122AssignVaryingLocationsERKNS_20GlslangSourceOptionsERKN2gl14VaryingPackingENS4_10ShaderTypeES8_PNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* dereferenceable(4) %0, %"class.gl::VaryingPacking"* dereferenceable(360) %306, i8 zeroext %3, i8 zeroext %4, %"struct.rx::GlslangProgramInterfaceInfo"* %6, %"class.rx::ShaderInterfaceVariableInfoMap"* %7)
  %310 = icmp eq i8 %3, 4
  br i1 %310, label %312, label %311

311:                                              ; preds = %305, %309
  call fastcc void @_ZN2rx12_GLOBAL__N_122AssignVaryingLocationsERKNS_20GlslangSourceOptionsERKN2gl14VaryingPackingENS4_10ShaderTypeES8_PNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* dereferenceable(4) %0, %"class.gl::VaryingPacking"* dereferenceable(360) %307, i8 zeroext %3, i8 zeroext %4, %"struct.rx::GlslangProgramInterfaceInfo"* %6, %"class.rx::ShaderInterfaceVariableInfoMap"* %7)
  br label %312

312:                                              ; preds = %309, %311
  %313 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 26
  %314 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %313, i64 0, i32 0, i32 0
  %315 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %314, align 8
  %316 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 26, i32 0, i32 1
  %317 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %316, align 8
  %318 = icmp eq %"struct.gl::TransformFeedbackVarying"* %315, %317
  br i1 %318, label %1071, label %319

319:                                              ; preds = %312
  %320 = call zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"* %29) #14
  %321 = icmp eq i8 %320, %3
  br i1 %321, label %322, label %1071

322:                                              ; preds = %319
  %323 = getelementptr inbounds %"struct.rx::GlslangSourceOptions", %"struct.rx::GlslangSourceOptions"* %0, i64 0, i32 0
  %324 = load i8, i8* %323, align 1, !range !22
  %325 = icmp ne i8 %324, 0
  %326 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 28
  %327 = load i32, i32* %326, align 8
  %328 = icmp eq i32 %327, 35980
  %329 = bitcast %"struct.gl::TransformFeedbackVarying"** %316 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = bitcast %"class.std::__1::vector.90"* %313 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = icmp eq i64 %330, %332
  br i1 %333, label %1071, label %334

334:                                              ; preds = %322
  %335 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 27, i32 0, i32 0
  %336 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %307, i64 0, i32 1, i32 0, i32 0
  %337 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %307, i64 0, i32 1, i32 0, i32 1
  %338 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %341 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %342 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %341, i64 0, i32 1, i32 0
  %343 = zext i8 %3 to i64
  %344 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %7, i64 0, i32 0, i32 0, i32 0, i64 %343, i32 0, i32 0
  %345 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %346 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %347 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = getelementptr inbounds i8, i8* %346, i64 12
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %354 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %355 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %356 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %355, i64 0, i32 1, i32 0
  %357 = ptrtoint %"class.std::__1::basic_string"* %16 to i64
  %358 = bitcast %"class.std::__1::basic_string"* %16 to i64*
  %359 = add i64 %345, 7302149625293532263
  %360 = zext i64 %359 to i128
  %361 = mul nuw i128 %360, 11376068507788127593
  %362 = lshr i128 %361, 64
  %363 = xor i128 %362, %361
  %364 = trunc i128 %363 to i64
  %365 = add i64 %364, 2019914866
  %366 = zext i64 %365 to i128
  %367 = mul nuw i128 %366, 11376068507788127593
  %368 = lshr i128 %367, 64
  %369 = xor i128 %368, %367
  %370 = trunc i128 %369 to i64
  %371 = add i64 %370, 12
  %372 = zext i64 %371 to i128
  %373 = mul nuw i128 %372, 11376068507788127593
  %374 = lshr i128 %373, 64
  %375 = xor i128 %374, %373
  %376 = trunc i128 %375 to i64
  br label %377

377:                                              ; preds = %1031, %334
  %378 = phi i64 [ %332, %334 ], [ %1035, %1031 ]
  %379 = phi i64 [ 0, %334 ], [ %1033, %1031 ]
  %380 = phi i32 [ 0, %334 ], [ %1032, %1031 ]
  %381 = phi i32 [ 0, %334 ], [ %418, %1031 ]
  %382 = inttoptr i64 %378 to %"struct.gl::TransformFeedbackVarying"*
  br i1 %328, label %383, label %413

383:                                              ; preds = %377
  %384 = icmp eq i32 %380, 0
  br i1 %384, label %409, label %385

385:                                              ; preds = %383
  %386 = add i32 %380, -1
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %382, i64 %387, i32 0, i32 4, i32 0, i32 0
  %389 = load i32*, i32** %388, align 8
  %390 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %382, i64 %387, i32 0, i32 4, i32 0, i32 1
  %391 = load i32*, i32** %390, align 8
  %392 = icmp eq i32* %389, %391
  br i1 %392, label %400, label %393

393:                                              ; preds = %385
  %394 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %382, i64 %387, i32 1
  %395 = load i32, i32* %394, align 8
  %396 = icmp eq i32 %395, -1
  br i1 %396, label %397, label %400

397:                                              ; preds = %393
  %398 = getelementptr inbounds i32, i32* %391, i64 -1
  %399 = load i32, i32* %398, align 4
  br label %400

400:                                              ; preds = %397, %393, %385
  %401 = phi i32 [ %399, %397 ], [ 1, %393 ], [ 1, %385 ]
  %402 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %382, i64 %387, i32 0, i32 0
  %403 = load i32, i32* %402, align 8
  %404 = call i64 @_ZN2gl20VariableExternalSizeEj(i32 %403) #14
  %405 = trunc i64 %404 to i32
  %406 = mul i32 %401, %405
  %407 = add i32 %406, %381
  %408 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %314, align 8
  br label %409

409:                                              ; preds = %400, %383
  %410 = phi %"struct.gl::TransformFeedbackVarying"* [ %408, %400 ], [ %382, %383 ]
  %411 = phi i32 [ %407, %400 ], [ %381, %383 ]
  %412 = load i32*, i32** %335, align 8
  br label %416

413:                                              ; preds = %377
  %414 = load i32*, i32** %335, align 8
  %415 = getelementptr inbounds i32, i32* %414, i64 %379
  br label %416

416:                                              ; preds = %413, %409
  %417 = phi %"struct.gl::TransformFeedbackVarying"* [ %410, %409 ], [ %382, %413 ]
  %418 = phi i32 [ %411, %409 ], [ 0, %413 ]
  %419 = phi i32* [ %412, %409 ], [ %415, %413 ]
  %420 = phi i32 [ 0, %409 ], [ %380, %413 ]
  %421 = load i32, i32* %419, align 4
  %422 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379
  %423 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %422, i64 0, i32 0
  %424 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %422, i64 0, i32 0, i32 0
  %425 = load i32, i32* %424, align 8
  %426 = call dereferenceable(72) %"struct.gl::UniformTypeInfo"* @_ZN2gl18GetUniformTypeInfoEj(i32 %425) #14
  %427 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 4, i32 0, i32 0
  %428 = load i32*, i32** %427, align 8
  %429 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 4, i32 0, i32 1
  %430 = load i32*, i32** %429, align 8
  %431 = icmp eq i32* %428, %430
  br i1 %431, label %439, label %432

432:                                              ; preds = %416
  %433 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 1
  %434 = load i32, i32* %433, align 8
  %435 = icmp eq i32 %434, -1
  br i1 %435, label %436, label %439

436:                                              ; preds = %432
  %437 = getelementptr inbounds i32, i32* %430, i64 -1
  %438 = load i32, i32* %437, align 4
  br label %439

439:                                              ; preds = %436, %432, %416
  %440 = phi i32 [ -1, %416 ], [ %438, %436 ], [ 1, %432 ]
  %441 = call zeroext i1 @_ZNK2sh14ShaderVariable9isBuiltInEv(%"struct.sh::ShaderVariable"* %423) #14
  br i1 %441, label %442, label %620

442:                                              ; preds = %439
  br i1 %325, label %443, label %525

443:                                              ; preds = %442
  %444 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 2
  %445 = bitcast %"class.std::__1::basic_string"* %444 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %446 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %445, i64 0, i32 1, i32 0
  %447 = load i8, i8* %446, align 1
  %448 = icmp slt i8 %447, 0
  %449 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %450 = load i64, i64* %449, align 8
  %451 = zext i8 %447 to i64
  %452 = select i1 %448, i64 %450, i64 %451
  %453 = icmp eq i64 %452, 11
  br i1 %453, label %454, label %525

454:                                              ; preds = %443
  %455 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %444, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11) #14
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %525

457:                                              ; preds = %454
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #14
  %458 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0)) #14
  %459 = icmp ugt i64 %458, -17
  br i1 %459, label %460, label %462

460:                                              ; preds = %457
  %461 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %461) #18
  unreachable

462:                                              ; preds = %457
  %463 = icmp ult i64 %458, 23
  br i1 %463, label %469, label %464

464:                                              ; preds = %462
  %465 = add nuw i64 %458, 16
  %466 = and i64 %465, -16
  %467 = call i8* @_Znwm(i64 %466) #17
  store i8* %467, i8** %352, align 8
  %468 = or i64 %466, -9223372036854775808
  store i64 %468, i64* %353, align 8
  store i64 %458, i64* %354, align 8
  br label %472

469:                                              ; preds = %462
  %470 = trunc i64 %458 to i8
  store i8 %470, i8* %356, align 1
  %471 = icmp eq i64 %458, 0
  br i1 %471, label %474, label %472

472:                                              ; preds = %469, %464
  %473 = phi i8* [ %467, %464 ], [ %351, %469 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %473, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0), i64 %458, i1 false) #14
  br label %474

474:                                              ; preds = %472, %469
  %475 = phi i8* [ %351, %469 ], [ %473, %472 ]
  %476 = getelementptr inbounds i8, i8* %475, i64 %458
  store i8 0, i8* %476, align 1
  %477 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 8
  %478 = load i32, i32* %477, align 4
  %479 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 7
  %480 = load i32, i32* %479, align 8
  %481 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 1
  %482 = load i32, i32* %481, align 4
  %483 = load i8, i8* %356, align 1
  %484 = icmp slt i8 %483, 0
  br i1 %484, label %487, label %485

485:                                              ; preds = %474
  %486 = zext i8 %483 to i64
  br label %492

487:                                              ; preds = %474
  %488 = load i64, i64* %358, align 8
  %489 = load i64, i64* %354, align 8
  %490 = icmp sgt i64 %489, -1
  br i1 %490, label %492, label %491, !prof !2

491:                                              ; preds = %487
  call void @llvm.trap() #14
  unreachable

492:                                              ; preds = %487, %485
  %493 = phi i64 [ %488, %487 ], [ %357, %485 ]
  %494 = phi i64 [ %489, %487 ], [ %486, %485 ]
  %495 = inttoptr i64 %493 to i8*
  %496 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %345, i8* %495, i64 %494) #14
  %497 = add i64 %496, %494
  %498 = zext i64 %497 to i128
  %499 = mul nuw i128 %498, 11376068507788127593
  %500 = lshr i128 %499, 64
  %501 = xor i128 %500, %499
  %502 = trunc i128 %501 to i64
  %503 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %344, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, i64 %502) #14
  %504 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %503, 0
  %505 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %503, 1
  %506 = icmp eq i8* %504, null
  br i1 %506, label %510, label %507, !prof !3

507:                                              ; preds = %492
  %508 = load i8, i8* %504, align 1
  %509 = icmp sgt i8 %508, -1
  br i1 %509, label %511, label %510, !prof !2

510:                                              ; preds = %507, %492
  call void @llvm.trap() #14
  unreachable

511:                                              ; preds = %507
  %512 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 0
  store i32 %420, i32* %512, align 8
  %513 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 1
  store i32 %418, i32* %513, align 4
  %514 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 2
  store i32 %421, i32* %514, align 8
  %515 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 3
  store i32 %440, i32* %515, align 4
  %516 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 4
  store i32 %478, i32* %516, align 8
  %517 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 5
  store i32 %480, i32* %517, align 4
  %518 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 6
  store i32 -1, i32* %518, align 8
  %519 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %505, i64 0, i32 0, i32 1, i32 7, i32 7
  store i32 %482, i32* %519, align 4
  %520 = load i8, i8* %356, align 1
  %521 = icmp slt i8 %520, 0
  br i1 %521, label %522, label %524

522:                                              ; preds = %511
  %523 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %523) #17
  br label %524

524:                                              ; preds = %522, %511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #14
  br label %1031

525:                                              ; preds = %442, %454, %443
  %526 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 2
  %527 = bitcast %"class.std::__1::basic_string"* %526 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %528 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %527, i64 0, i32 1, i32 0
  %529 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %530 = load i8, i8* %528, align 1
  %531 = icmp slt i8 %530, 0
  %532 = load i64, i64* %529, align 8
  %533 = zext i8 %530 to i64
  %534 = select i1 %531, i64 %532, i64 %533
  %535 = icmp eq i64 %534, 11
  br i1 %535, label %536, label %543

536:                                              ; preds = %525
  %537 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %526, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11) #14
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %550, label %539

539:                                              ; preds = %536
  %540 = load i8, i8* %528, align 1
  %541 = load i64, i64* %529, align 8
  %542 = zext i8 %540 to i64
  br label %543

543:                                              ; preds = %539, %525
  %544 = phi i64 [ %542, %539 ], [ %533, %525 ]
  %545 = phi i64 [ %541, %539 ], [ %532, %525 ]
  %546 = phi i8 [ %540, %539 ], [ %530, %525 ]
  %547 = icmp slt i8 %546, 0
  %548 = select i1 %547, i64 %545, i64 %544
  %549 = icmp eq i64 %548, 12
  br i1 %549, label %1039, label %1046

550:                                              ; preds = %1070, %1067, %1053, %1039, %536
  %551 = phi i32 [ 0, %536 ], [ 1, %1039 ], [ 2, %1053 ], [ 3, %1067 ], [ -1, %1070 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %346) #14
  store i8 12, i8* %348, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %346, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i1 false) #14
  store i8 0, i8* %349, align 4
  %552 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 8
  %553 = load i32, i32* %552, align 4
  %554 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 7
  %555 = load i32, i32* %554, align 8
  %556 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %344, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, i64 %376) #14
  %559 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %558, 0
  %560 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %558, 1
  %561 = icmp eq i8* %559, null
  br i1 %561, label %565, label %562, !prof !3

562:                                              ; preds = %550
  %563 = load i8, i8* %559, align 1
  %564 = icmp sgt i8 %563, -1
  br i1 %564, label %566, label %565, !prof !2

565:                                              ; preds = %562, %550
  call void @llvm.trap() #14
  unreachable

566:                                              ; preds = %562
  %567 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %560, i64 0, i32 0, i32 1, i32 7
  %568 = icmp sgt i32 %551, -1
  br i1 %568, label %569, label %605

569:                                              ; preds = %566
  %570 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %560, i64 0, i32 0, i32 1, i32 8
  %571 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %560, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %572 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %571 to i64*
  %573 = load i64, i64* %572, align 8
  %574 = bitcast %"class.std::__1::vector.145"* %570 to i64*
  %575 = load i64, i64* %574, align 8
  %576 = sub i64 %573, %575
  %577 = sdiv exact i64 %576, 56
  %578 = sext i32 %551 to i64
  %579 = icmp ugt i64 %577, %578
  %580 = inttoptr i64 %575 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %579, label %602, label %581

581:                                              ; preds = %569
  %582 = add nuw nsw i32 %551, 1
  %583 = sext i32 %582 to i64
  %584 = icmp ult i64 %577, %583
  %585 = inttoptr i64 %573 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %584, label %586, label %588

586:                                              ; preds = %581
  %587 = sub nsw i64 %583, %577
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.145"* %570, i64 %587) #14
  br label %599

588:                                              ; preds = %581
  %589 = icmp ugt i64 %577, %583
  br i1 %589, label %590, label %599

590:                                              ; preds = %588
  %591 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %580, i64 %583
  %592 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %591, %585
  br i1 %592, label %598, label %593

593:                                              ; preds = %590, %593
  %594 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %595, %593 ], [ %585, %590 ]
  %595 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %594, i64 -1
  %596 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %594, i64 -1, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %596) #14
  %597 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %595, %591
  br i1 %597, label %598, label %593

598:                                              ; preds = %593, %590
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %591, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %571, align 8
  br label %599

599:                                              ; preds = %598, %588, %586
  %600 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %570, i64 0, i32 0, i32 0
  %601 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %600, align 8
  br label %602

602:                                              ; preds = %599, %569
  %603 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %580, %569 ], [ %601, %599 ]
  %604 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %603, i64 %578
  br label %605

605:                                              ; preds = %602, %566
  %606 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %604, %602 ], [ %567, %566 ]
  %607 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 0
  store i32 %420, i32* %607, align 8
  %608 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 1
  store i32 %418, i32* %608, align 4
  %609 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 2
  store i32 %421, i32* %609, align 8
  %610 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 3
  store i32 %440, i32* %610, align 4
  %611 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 4
  store i32 %553, i32* %611, align 8
  %612 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 5
  store i32 %555, i32* %612, align 4
  %613 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 6
  store i32 -1, i32* %613, align 8
  %614 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %606, i64 0, i32 7
  store i32 %557, i32* %614, align 4
  %615 = load i8, i8* %348, align 1
  %616 = icmp slt i8 %615, 0
  br i1 %616, label %617, label %619

617:                                              ; preds = %605
  %618 = load i8*, i8** %350, align 8
  call void @_ZdlPv(i8* %618) #17
  br label %619

619:                                              ; preds = %617, %605
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %346) #14
  br label %1031

620:                                              ; preds = %439
  br i1 %325, label %621, label %629

621:                                              ; preds = %620
  %622 = load i32*, i32** %427, align 8
  %623 = load i32*, i32** %429, align 8
  %624 = icmp eq i32* %622, %623
  br i1 %624, label %629, label %625

625:                                              ; preds = %621
  %626 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 1
  %627 = load i32, i32* %626, align 8
  %628 = icmp eq i32 %627, -1
  br i1 %628, label %629, label %1031

629:                                              ; preds = %625, %621, %620
  %630 = load %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"** %336, align 8
  %631 = load %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"** %337, align 8
  %632 = icmp eq %"struct.gl::PackedVaryingRegister"* %630, %631
  br i1 %632, label %1031, label %633

633:                                              ; preds = %629
  %634 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 23
  %635 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 8
  %636 = bitcast %"class.std::__1::basic_string"* %635 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %637 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %636, i64 0, i32 1, i32 0
  %638 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %639 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %635, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %640 = bitcast %"class.std::__1::basic_string"* %635 to i8*
  %641 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 2
  %642 = bitcast %"class.std::__1::basic_string"* %641 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %643 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %642, i64 0, i32 1, i32 0
  %644 = bitcast %"class.std::__1::basic_string"* %641 to i8*
  %645 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %641, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %647 = bitcast %"class.std::__1::basic_string"* %641 to %"class.std::__1::allocator"*
  br label %648

648:                                              ; preds = %872, %633
  %649 = phi %"struct.gl::PackedVarying"* [ null, %633 ], [ %873, %872 ]
  %650 = phi %"struct.gl::PackedVaryingRegister"* [ %630, %633 ], [ %874, %872 ]
  %651 = load i8, i8* %634, align 1, !range !22
  %652 = icmp eq i8 %651, 0
  %653 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %650, i64 0, i32 0
  %654 = load %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"** %653, align 8
  br i1 %652, label %655, label %692

655:                                              ; preds = %648
  %656 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 1, i32 0
  %657 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %656, align 8
  %658 = icmp eq %"struct.sh::ShaderVariable"* %657, null
  br i1 %658, label %670, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 1, i32 2
  %661 = bitcast %"class.std::__1::basic_string"* %660 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %662 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %661, i64 0, i32 1, i32 0
  %663 = load i8, i8* %662, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %668

665:                                              ; preds = %659
  %666 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %667 = load i64, i64* %666, align 8
  br label %681

668:                                              ; preds = %659
  %669 = zext i8 %663 to i64
  br label %681

670:                                              ; preds = %655
  %671 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 2, i32 2
  %672 = bitcast %"class.std::__1::basic_string"* %671 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  %674 = load i8, i8* %673, align 1
  %675 = icmp slt i8 %674, 0
  br i1 %675, label %676, label %679

676:                                              ; preds = %670
  %677 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %678 = load i64, i64* %677, align 8
  br label %681

679:                                              ; preds = %670
  %680 = zext i8 %674 to i64
  br label %681

681:                                              ; preds = %679, %676, %668, %665
  %682 = phi i64 [ %667, %665 ], [ %669, %668 ], [ %678, %676 ], [ %680, %679 ]
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %692, label %684

684:                                              ; preds = %681
  %685 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 7
  %686 = load i32, i32* %685, align 4
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %688, label %872

688:                                              ; preds = %684
  %689 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 8
  %690 = load i32, i32* %689, align 8
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %692, label %872

692:                                              ; preds = %688, %681, %648
  %693 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %650, i64 0, i32 1
  %694 = load i32, i32* %693, align 8
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %696, label %872

696:                                              ; preds = %692
  %697 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 4
  %698 = load i32, i32* %697, align 4
  switch i32 %698, label %872 [
    i32 -1, label %699
    i32 0, label %699
  ]

699:                                              ; preds = %696, %696
  %700 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %650, i64 0, i32 2
  %701 = load i32, i32* %700, align 4
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %703, label %872

703:                                              ; preds = %699
  %704 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 1
  br i1 %652, label %824, label %705

705:                                              ; preds = %703
  %706 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 1, i32 2
  %707 = bitcast %"class.std::__1::basic_string"* %706 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %708 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %707, i64 0, i32 1, i32 0
  %709 = load i8, i8* %708, align 1
  %710 = icmp slt i8 %709, 0
  %711 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %654, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %712 = load i64, i64* %711, align 8
  %713 = zext i8 %709 to i64
  %714 = select i1 %710, i64 %712, i64 %713
  %715 = load i8, i8* %637, align 1
  %716 = icmp slt i8 %715, 0
  %717 = load i64, i64* %638, align 8
  %718 = zext i8 %715 to i64
  %719 = select i1 %716, i64 %717, i64 %718
  %720 = icmp eq i64 %714, %719
  br i1 %720, label %721, label %872

721:                                              ; preds = %705
  %722 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %706, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load i8*, i8** %722, align 8
  %724 = bitcast %"class.std::__1::basic_string"* %706 to i8*
  %725 = select i1 %710, i8* %723, i8* %724
  %726 = load i8*, i8** %639, align 8
  %727 = select i1 %716, i8* %726, i8* %640
  %728 = icmp eq i64 %714, 0
  br i1 %710, label %735, label %729

729:                                              ; preds = %721
  br i1 %728, label %751, label %730

730:                                              ; preds = %729
  %731 = ptrtoint i8* %723 to i64
  %732 = trunc i64 %731 to i8
  %733 = load i8, i8* %727, align 1
  %734 = icmp eq i8 %733, %732
  br i1 %734, label %736, label %872

735:                                              ; preds = %721
  br i1 %728, label %751, label %748

736:                                              ; preds = %730, %743
  %737 = phi i64 [ %740, %743 ], [ %713, %730 ]
  %738 = phi i8* [ %741, %743 ], [ %724, %730 ]
  %739 = phi i8* [ %744, %743 ], [ %727, %730 ]
  %740 = add i64 %737, -1
  %741 = getelementptr inbounds i8, i8* %738, i64 1
  %742 = icmp eq i64 %740, 0
  br i1 %742, label %751, label %743

743:                                              ; preds = %736
  %744 = getelementptr inbounds i8, i8* %739, i64 1
  %745 = load i8, i8* %741, align 1
  %746 = load i8, i8* %744, align 1
  %747 = icmp eq i8 %745, %746
  br i1 %747, label %736, label %872

748:                                              ; preds = %735
  %749 = call i32 @bcmp(i8* %725, i8* %727, i64 %714) #14
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %872

751:                                              ; preds = %736, %748, %735, %729
  %752 = load i8, i8* %643, align 1
  %753 = icmp slt i8 %752, 0
  br i1 %753, label %754, label %757

754:                                              ; preds = %751
  %755 = load i8*, i8** %645, align 8
  %756 = load i64, i64* %646, align 8
  br label %759

757:                                              ; preds = %751
  %758 = zext i8 %752 to i64
  br label %759

759:                                              ; preds = %757, %754
  %760 = phi i8* [ %755, %754 ], [ %644, %757 ]
  %761 = phi i64 [ %756, %754 ], [ %758, %757 ]
  %762 = icmp eq i64 %761, 0
  br i1 %762, label %777, label %763

763:                                              ; preds = %759
  %764 = getelementptr inbounds i8, i8* %760, i64 %761
  br label %765

765:                                              ; preds = %769, %763
  %766 = phi i8* [ %760, %763 ], [ %770, %769 ]
  %767 = load i8, i8* %766, align 1
  %768 = icmp eq i8 %767, 46
  br i1 %768, label %772, label %769

769:                                              ; preds = %765
  %770 = getelementptr inbounds i8, i8* %766, i64 1
  %771 = icmp eq i8* %770, %764
  br i1 %771, label %777, label %765

772:                                              ; preds = %765
  %773 = icmp eq i8* %766, %764
  %774 = ptrtoint i8* %766 to i64
  %775 = ptrtoint i8* %760 to i64
  %776 = sub i64 %774, %775
  br i1 %773, label %777, label %778

777:                                              ; preds = %769, %772, %759
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 -86, i64 24, i1 false) #14
  br label %780

778:                                              ; preds = %772
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #14
  %779 = icmp eq i64 %776, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 -86, i64 24, i1 false) #14
  br i1 %779, label %780, label %787

780:                                              ; preds = %778, %777
  %781 = load i8, i8* %643, align 1
  %782 = icmp slt i8 %781, 0
  br i1 %782, label %784, label %783

783:                                              ; preds = %780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %338, i8* align 8 %644, i64 24, i1 false) #14
  br label %789

784:                                              ; preds = %780
  %785 = load i8*, i8** %645, align 8
  %786 = load i64, i64* %646, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %18, i8* %785, i64 %786) #14
  br label %789

787:                                              ; preds = %778
  %788 = add nuw i64 %776, 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %18, %"class.std::__1::basic_string"* dereferenceable(24) %641, i64 %788, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %647) #14
  br label %789

789:                                              ; preds = %787, %784, %783
  %790 = getelementptr inbounds %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef"* %704, i64 0, i32 0
  %791 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %790, align 8
  %792 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %791, i64 0, i32 2
  %793 = bitcast %"class.std::__1::basic_string"* %792 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %794 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %793, i64 0, i32 1, i32 0
  %795 = load i8, i8* %794, align 1
  %796 = icmp slt i8 %795, 0
  br i1 %796, label %797, label %800

797:                                              ; preds = %789
  %798 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %792, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %799 = load i8*, i8** %798, align 8
  br label %802

800:                                              ; preds = %789
  %801 = bitcast %"class.std::__1::basic_string"* %792 to i8*
  br label %802

802:                                              ; preds = %800, %797
  %803 = phi i8* [ %799, %797 ], [ %801, %800 ]
  %804 = call i64 @strlen(i8* %803) #14
  %805 = load i8, i8* %342, align 1
  %806 = icmp slt i8 %805, 0
  %807 = load i64, i64* %340, align 8
  %808 = zext i8 %805 to i64
  %809 = select i1 %806, i64 %807, i64 %808
  %810 = icmp eq i64 %804, %809
  br i1 %810, label %811, label %814

811:                                              ; preds = %802
  %812 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %18, i64 0, i64 -1, i8* %803, i64 %804) #14
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %815, label %814

814:                                              ; preds = %811, %802
  br label %815

815:                                              ; preds = %814, %811
  %816 = phi i32 [ 0, %814 ], [ 8, %811 ]
  %817 = phi %"struct.gl::PackedVarying"* [ %649, %814 ], [ %654, %811 ]
  %818 = load i8, i8* %342, align 1
  %819 = icmp slt i8 %818, 0
  br i1 %819, label %820, label %822

820:                                              ; preds = %815
  %821 = load i8*, i8** %339, align 8
  call void @_ZdlPv(i8* %821) #17
  br label %822

822:                                              ; preds = %820, %815
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %338) #14
  %823 = icmp eq i32 %816, 0
  br i1 %823, label %872, label %876

824:                                              ; preds = %703
  %825 = getelementptr inbounds %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef"* %704, i64 0, i32 0
  %826 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %825, align 8
  %827 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %826, i64 0, i32 2
  %828 = bitcast %"class.std::__1::basic_string"* %827 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %829 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %828, i64 0, i32 1, i32 0
  %830 = load i8, i8* %829, align 1
  %831 = icmp slt i8 %830, 0
  %832 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %826, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %833 = load i64, i64* %832, align 8
  %834 = zext i8 %830 to i64
  %835 = select i1 %831, i64 %833, i64 %834
  %836 = load i8, i8* %643, align 1
  %837 = icmp slt i8 %836, 0
  %838 = load i64, i64* %646, align 8
  %839 = zext i8 %836 to i64
  %840 = select i1 %837, i64 %838, i64 %839
  %841 = icmp eq i64 %835, %840
  br i1 %841, label %842, label %872

842:                                              ; preds = %824
  %843 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %827, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %844 = load i8*, i8** %843, align 8
  %845 = bitcast %"class.std::__1::basic_string"* %827 to i8*
  %846 = select i1 %831, i8* %844, i8* %845
  %847 = load i8*, i8** %645, align 8
  %848 = select i1 %837, i8* %847, i8* %644
  %849 = icmp eq i64 %835, 0
  br i1 %831, label %856, label %850

850:                                              ; preds = %842
  br i1 %849, label %876, label %851

851:                                              ; preds = %850
  %852 = ptrtoint i8* %844 to i64
  %853 = trunc i64 %852 to i8
  %854 = load i8, i8* %848, align 1
  %855 = icmp eq i8 %854, %853
  br i1 %855, label %857, label %872

856:                                              ; preds = %842
  br i1 %849, label %876, label %869

857:                                              ; preds = %851, %864
  %858 = phi i64 [ %861, %864 ], [ %834, %851 ]
  %859 = phi i8* [ %862, %864 ], [ %845, %851 ]
  %860 = phi i8* [ %865, %864 ], [ %848, %851 ]
  %861 = add i64 %858, -1
  %862 = getelementptr inbounds i8, i8* %859, i64 1
  %863 = icmp eq i64 %861, 0
  br i1 %863, label %876, label %864

864:                                              ; preds = %857
  %865 = getelementptr inbounds i8, i8* %860, i64 1
  %866 = load i8, i8* %862, align 1
  %867 = load i8, i8* %865, align 1
  %868 = icmp eq i8 %866, %867
  br i1 %868, label %857, label %872

869:                                              ; preds = %856
  %870 = call i32 @bcmp(i8* %846, i8* %848, i64 %835) #14
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %876, label %872

872:                                              ; preds = %743, %864, %730, %851, %869, %824, %822, %748, %705, %699, %696, %692, %688, %684
  %873 = phi %"struct.gl::PackedVarying"* [ %817, %822 ], [ %649, %748 ], [ %649, %869 ], [ %649, %705 ], [ %649, %824 ], [ %649, %699 ], [ %649, %688 ], [ %649, %684 ], [ %649, %696 ], [ %649, %692 ], [ %649, %851 ], [ %649, %730 ], [ %649, %864 ], [ %649, %743 ]
  %874 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %650, i64 1
  %875 = icmp eq %"struct.gl::PackedVaryingRegister"* %874, %631
  br i1 %875, label %876, label %648

876:                                              ; preds = %872, %869, %856, %850, %822, %857
  %877 = phi %"struct.gl::PackedVarying"* [ %654, %857 ], [ %873, %872 ], [ %817, %822 ], [ %654, %850 ], [ %654, %856 ], [ %654, %869 ]
  %878 = icmp eq %"struct.gl::PackedVarying"* %877, null
  br i1 %878, label %1031, label %879

879:                                              ; preds = %876
  %880 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 1, i32 0
  %881 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %880, align 8
  %882 = icmp eq %"struct.sh::ShaderVariable"* %881, null
  br i1 %882, label %894, label %883

883:                                              ; preds = %879
  %884 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 1, i32 2
  %885 = bitcast %"class.std::__1::basic_string"* %884 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %886 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %885, i64 0, i32 1, i32 0
  %887 = load i8, i8* %886, align 1
  %888 = icmp slt i8 %887, 0
  br i1 %888, label %889, label %892

889:                                              ; preds = %883
  %890 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %891 = load i64, i64* %890, align 8
  br label %905

892:                                              ; preds = %883
  %893 = zext i8 %887 to i64
  br label %905

894:                                              ; preds = %879
  %895 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 2, i32 2
  %896 = bitcast %"class.std::__1::basic_string"* %895 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %897 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %896, i64 0, i32 1, i32 0
  %898 = load i8, i8* %897, align 1
  %899 = icmp slt i8 %898, 0
  br i1 %899, label %900, label %903

900:                                              ; preds = %894
  %901 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %902 = load i64, i64* %901, align 8
  br label %905

903:                                              ; preds = %894
  %904 = zext i8 %898 to i64
  br label %905

905:                                              ; preds = %903, %900, %892, %889
  %906 = phi i64 [ %891, %889 ], [ %893, %892 ], [ %902, %900 ], [ %904, %903 ]
  %907 = icmp eq i64 %906, 0
  %908 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 1, i32 3
  %909 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %881, i64 0, i32 3
  %910 = select i1 %907, %"class.std::__1::basic_string"* %909, %"class.std::__1::basic_string"* %908
  %911 = load i8, i8* %634, align 1, !range !22
  %912 = icmp eq i8 %911, 0
  br i1 %912, label %916, label %913

913:                                              ; preds = %905
  %914 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %877, i64 0, i32 7
  %915 = load i32, i32* %914, align 4
  br label %916

916:                                              ; preds = %913, %905
  %917 = phi i32 [ %915, %913 ], [ -1, %905 ]
  %918 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %417, i64 %379, i32 1
  %919 = load i32, i32* %918, align 8
  %920 = icmp eq i32 %919, -1
  %921 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 8
  %922 = load i32, i32* %921, align 4
  %923 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 7
  %924 = load i32, i32* %923, align 8
  %925 = getelementptr inbounds %"struct.gl::UniformTypeInfo", %"struct.gl::UniformTypeInfo"* %426, i64 0, i32 1
  %926 = load i32, i32* %925, align 4
  %927 = bitcast %"class.std::__1::basic_string"* %910 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %928 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %927, i64 0, i32 1, i32 0
  %929 = load i8, i8* %928, align 1
  %930 = icmp slt i8 %929, 0
  br i1 %930, label %934, label %931

931:                                              ; preds = %916
  %932 = zext i8 %929 to i64
  %933 = ptrtoint %"class.std::__1::basic_string"* %910 to i64
  br label %941

934:                                              ; preds = %916
  %935 = bitcast %"class.std::__1::basic_string"* %910 to i64*
  %936 = load i64, i64* %935, align 8
  %937 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %910, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %938 = load i64, i64* %937, align 8
  %939 = icmp sgt i64 %938, -1
  br i1 %939, label %941, label %940, !prof !2

940:                                              ; preds = %934
  call void @llvm.trap() #14
  unreachable

941:                                              ; preds = %934, %931
  %942 = phi i64 [ %936, %934 ], [ %933, %931 ]
  %943 = phi i64 [ %938, %934 ], [ %932, %931 ]
  %944 = inttoptr i64 %942 to i8*
  %945 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %345, i8* %944, i64 %943) #14
  %946 = add i64 %945, %943
  %947 = zext i64 %946 to i128
  %948 = mul nuw i128 %947, 11376068507788127593
  %949 = lshr i128 %948, 64
  %950 = xor i128 %949, %948
  %951 = trunc i128 %950 to i64
  %952 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %344, %"class.std::__1::basic_string"* dereferenceable(24) %910, i64 %951) #14
  %953 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %952, 0
  %954 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %952, 1
  %955 = icmp eq i8* %953, null
  br i1 %955, label %959, label %956, !prof !3

956:                                              ; preds = %941
  %957 = load i8, i8* %953, align 1
  %958 = icmp sgt i8 %957, -1
  br i1 %958, label %960, label %959, !prof !2

959:                                              ; preds = %956, %941
  call void @llvm.trap() #14
  unreachable

960:                                              ; preds = %956
  %961 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %954, i64 0, i32 0, i32 1, i32 7
  %962 = icmp sgt i32 %917, -1
  br i1 %962, label %963, label %999

963:                                              ; preds = %960
  %964 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %954, i64 0, i32 0, i32 1, i32 8
  %965 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %954, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %966 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %965 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = bitcast %"class.std::__1::vector.145"* %964 to i64*
  %969 = load i64, i64* %968, align 8
  %970 = sub i64 %967, %969
  %971 = sdiv exact i64 %970, 56
  %972 = sext i32 %917 to i64
  %973 = icmp ugt i64 %971, %972
  %974 = inttoptr i64 %969 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %973, label %996, label %975

975:                                              ; preds = %963
  %976 = add nuw nsw i32 %917, 1
  %977 = sext i32 %976 to i64
  %978 = icmp ult i64 %971, %977
  %979 = inttoptr i64 %967 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %978, label %980, label %982

980:                                              ; preds = %975
  %981 = sub nsw i64 %977, %971
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.145"* %964, i64 %981) #14
  br label %993

982:                                              ; preds = %975
  %983 = icmp ugt i64 %971, %977
  br i1 %983, label %984, label %993

984:                                              ; preds = %982
  %985 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %974, i64 %977
  %986 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %985, %979
  br i1 %986, label %992, label %987

987:                                              ; preds = %984, %987
  %988 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %989, %987 ], [ %979, %984 ]
  %989 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %988, i64 -1
  %990 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %988, i64 -1, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %990) #14
  %991 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %989, %985
  br i1 %991, label %992, label %987

992:                                              ; preds = %987, %984
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %985, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %965, align 8
  br label %993

993:                                              ; preds = %992, %982, %980
  %994 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %964, i64 0, i32 0, i32 0
  %995 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %994, align 8
  br label %996

996:                                              ; preds = %993, %963
  %997 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %974, %963 ], [ %995, %993 ]
  %998 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %997, i64 %972
  br label %999

999:                                              ; preds = %996, %960
  %1000 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %998, %996 ], [ %961, %960 ]
  br i1 %920, label %1021, label %1001

1001:                                             ; preds = %999
  %1002 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1000, i64 0, i32 8, i32 0, i32 1
  %1003 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1002, align 8
  %1004 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1000, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %1005 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1004, align 8
  %1006 = icmp ult %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1003, %1005
  br i1 %1006, label %1007, label %1015

1007:                                             ; preds = %1001
  %1008 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1003 to i8*
  %1009 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1003, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* align 8 %1008, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %1009, align 4
  %1010 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1003, i64 0, i32 8
  %1011 = bitcast %"class.std::__1::vector.145"* %1010 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1011, i8 0, i64 24, i1 false) #14
  %1012 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1003, i64 1
  %1013 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1012 to i64
  %1014 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1002 to i64*
  store i64 %1013, i64* %1014, align 8
  br label %1018

1015:                                             ; preds = %1001
  %1016 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1000, i64 0, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.145"* %1016) #14
  %1017 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1002, align 8
  br label %1018

1018:                                             ; preds = %1015, %1007
  %1019 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %1012, %1007 ], [ %1017, %1015 ]
  %1020 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1019, i64 -1
  br label %1021

1021:                                             ; preds = %1018, %999
  %1022 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %1020, %1018 ], [ %1000, %999 ]
  %1023 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 0
  store i32 %420, i32* %1023, align 8
  %1024 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 1
  store i32 %418, i32* %1024, align 4
  %1025 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 2
  store i32 %421, i32* %1025, align 8
  %1026 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 3
  store i32 %440, i32* %1026, align 4
  %1027 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 4
  store i32 %922, i32* %1027, align 8
  %1028 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 5
  store i32 %924, i32* %1028, align 4
  %1029 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 6
  store i32 %919, i32* %1029, align 8
  %1030 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1022, i64 0, i32 7
  store i32 %926, i32* %1030, align 4
  br label %1031

1031:                                             ; preds = %1021, %876, %629, %625, %619, %524
  %1032 = add i32 %380, 1
  %1033 = zext i32 %1032 to i64
  %1034 = load i64, i64* %329, align 8
  %1035 = load i64, i64* %331, align 8
  %1036 = sub i64 %1034, %1035
  %1037 = sdiv exact i64 %1036, 216
  %1038 = icmp ugt i64 %1037, %1033
  br i1 %1038, label %377, label %1071

1039:                                             ; preds = %543
  %1040 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %526, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #14
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %550, label %1042

1042:                                             ; preds = %1039
  %1043 = load i8, i8* %528, align 1
  %1044 = load i64, i64* %529, align 8
  %1045 = zext i8 %1043 to i64
  br label %1046

1046:                                             ; preds = %1042, %543
  %1047 = phi i64 [ %1045, %1042 ], [ %544, %543 ]
  %1048 = phi i64 [ %1044, %1042 ], [ %545, %543 ]
  %1049 = phi i8 [ %1043, %1042 ], [ %546, %543 ]
  %1050 = icmp slt i8 %1049, 0
  %1051 = select i1 %1050, i64 %1048, i64 %1047
  %1052 = icmp eq i64 %1051, 15
  br i1 %1052, label %1053, label %1060

1053:                                             ; preds = %1046
  %1054 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %526, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 15) #14
  %1055 = icmp eq i32 %1054, 0
  br i1 %1055, label %550, label %1056

1056:                                             ; preds = %1053
  %1057 = load i8, i8* %528, align 1
  %1058 = load i64, i64* %529, align 8
  %1059 = zext i8 %1057 to i64
  br label %1060

1060:                                             ; preds = %1056, %1046
  %1061 = phi i64 [ %1059, %1056 ], [ %1047, %1046 ]
  %1062 = phi i64 [ %1058, %1056 ], [ %1048, %1046 ]
  %1063 = phi i8 [ %1057, %1056 ], [ %1049, %1046 ]
  %1064 = icmp slt i8 %1063, 0
  %1065 = select i1 %1064, i64 %1062, i64 %1061
  %1066 = icmp eq i64 %1065, 15
  br i1 %1066, label %1067, label %1070

1067:                                             ; preds = %1060
  %1068 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %526, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i64 15) #14
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %550, label %1070

1070:                                             ; preds = %1067, %1060
  br label %550

1071:                                             ; preds = %1031, %300, %322, %312, %319
  %1072 = icmp eq i8 %3, 5
  br i1 %1072, label %1073, label %1076

1073:                                             ; preds = %1071
  %1074 = load i8, i8* %301, align 1
  %1075 = and i8 %1074, 32
  br label %1083

1076:                                             ; preds = %1071
  %1077 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1078 = load i8, i8* %1077, align 1
  %1079 = zext i8 %3 to i32
  %1080 = shl i32 1, %1079
  %1081 = trunc i32 %1080 to i8
  %1082 = and i8 %1078, %1081
  br label %1083

1083:                                             ; preds = %1076, %1073
  %1084 = phi i8 [ %1075, %1073 ], [ %1082, %1076 ]
  %1085 = icmp eq i8 %1084, 0
  br i1 %1085, label %1212, label %1086

1086:                                             ; preds = %1083
  %1087 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1087) #14
  %1088 = zext i8 %3 to i64
  %1089 = getelementptr inbounds %"class.angle::PackedEnumMap.253", %"class.angle::PackedEnumMap.253"* @_ZN2rxL20kDefaultUniformNamesE, i64 0, i32 0, i32 0, i64 %1088
  %1090 = load i8*, i8** %1089, align 8
  %1091 = call i64 @strlen(i8* %1090) #14
  %1092 = icmp ugt i64 %1091, -17
  br i1 %1092, label %1093, label %1095

1093:                                             ; preds = %1086
  %1094 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1094) #18
  unreachable

1095:                                             ; preds = %1086
  %1096 = icmp ult i64 %1091, 23
  br i1 %1096, label %1106, label %1097

1097:                                             ; preds = %1095
  %1098 = add nuw i64 %1091, 16
  %1099 = and i64 %1098, -16
  %1100 = call i8* @_Znwm(i64 %1099) #17
  %1101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1100, i8** %1101, align 8
  %1102 = or i64 %1099, -9223372036854775808
  %1103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1102, i64* %1103, align 8
  %1104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1091, i64* %1104, align 8
  %1105 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %1111

1106:                                             ; preds = %1095
  %1107 = trunc i64 %1091 to i8
  %1108 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1108, i64 0, i32 1, i32 0
  store i8 %1107, i8* %1109, align 1
  %1110 = icmp eq i64 %1091, 0
  br i1 %1110, label %1114, label %1111

1111:                                             ; preds = %1106, %1097
  %1112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1108, %1106 ], [ %1105, %1097 ]
  %1113 = phi i8* [ %1087, %1106 ], [ %1100, %1097 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1113, i8* align 1 %1090, i64 %1091, i1 false) #14
  br label %1114

1114:                                             ; preds = %1111, %1106
  %1115 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1108, %1106 ], [ %1112, %1111 ]
  %1116 = phi i8* [ %1087, %1106 ], [ %1113, %1111 ]
  %1117 = getelementptr inbounds i8, i8* %1116, i64 %1091
  store i8 0, i8* %1117, align 1
  %1118 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 0
  %1119 = load i32, i32* %1118, align 4
  %1120 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 1
  %1121 = load i32, i32* %1120, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, i32 %1119, i32 %1121) #14
  %1122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1115, i64 0, i32 1, i32 0
  %1123 = load i8, i8* %1122, align 1
  %1124 = icmp slt i8 %1123, 0
  br i1 %1124, label %1125, label %1128

1125:                                             ; preds = %1114
  %1126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1127 = load i8*, i8** %1126, align 8
  call void @_ZdlPv(i8* %1127) #17
  br label %1128

1128:                                             ; preds = %1125, %1114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1087) #14
  %1129 = load i32, i32* %1120, align 4
  %1130 = add i32 %1129, 1
  store i32 %1130, i32* %1120, align 4
  %1131 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1131) #14
  %1132 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kDriverUniformsBlockNameE, i64 0, i64 0)) #14
  %1133 = icmp ugt i64 %1132, -17
  br i1 %1133, label %1134, label %1136

1134:                                             ; preds = %1128
  %1135 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1135) #18
  unreachable

1136:                                             ; preds = %1128
  %1137 = icmp ult i64 %1132, 23
  br i1 %1137, label %1146, label %1138

1138:                                             ; preds = %1136
  %1139 = add nuw i64 %1132, 16
  %1140 = and i64 %1139, -16
  %1141 = call i8* @_Znwm(i64 %1140) #17
  %1142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1141, i8** %1142, align 8
  %1143 = or i64 %1140, -9223372036854775808
  %1144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1143, i64* %1144, align 8
  %1145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1132, i64* %1145, align 8
  br label %1151

1146:                                             ; preds = %1136
  %1147 = trunc i64 %1132 to i8
  %1148 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1148, i64 0, i32 1, i32 0
  store i8 %1147, i8* %1149, align 1
  %1150 = icmp eq i64 %1132, 0
  br i1 %1150, label %1153, label %1151

1151:                                             ; preds = %1146, %1138
  %1152 = phi i8* [ %1141, %1138 ], [ %1131, %1146 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1152, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kDriverUniformsBlockNameE, i64 0, i64 0), i64 %1132, i1 false) #14
  br label %1153

1153:                                             ; preds = %1151, %1146
  %1154 = phi i8* [ %1131, %1146 ], [ %1152, %1151 ]
  %1155 = getelementptr inbounds i8, i8* %1154, i64 %1132
  store i8 0, i8* %1155, align 1
  %1156 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 6
  %1157 = load i32, i32* %1156, align 4
  %1158 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %7, i64 0, i32 0, i32 0, i32 0, i64 %1088, i32 0
  %1159 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %1158, i64 0, i32 0
  %1160 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %1159, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #14, !noalias !23
  %1161 = extractvalue { i64, i8 } %1160, 0
  %1162 = extractvalue { i64, i8 } %1160, 1
  %1163 = and i8 %1162, 1
  %1164 = icmp eq i8 %1163, 0
  br i1 %1164, label %1190, label %1165

1165:                                             ; preds = %1153
  %1166 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %7, i64 0, i32 0, i32 0, i32 0, i64 %1088, i32 0, i32 0, i32 1
  %1167 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %1166, align 8, !noalias !23
  %1168 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1167, i64 %1161
  %1169 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1169, i64 0, i32 1, i32 0
  %1171 = load i8, i8* %1170, align 1, !noalias !23
  %1172 = icmp slt i8 %1171, 0
  br i1 %1172, label %1175, label %1173

1173:                                             ; preds = %1165
  %1174 = bitcast %"union.absl::container_internal::map_slot_type.157"* %1168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1174, i8* nonnull align 8 %1131, i64 24, i1 false) #14, !noalias !23
  br label %1181

1175:                                             ; preds = %1165
  %1176 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1168, i64 0, i32 0, i32 0
  %1177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1178 = load i8*, i8** %1177, align 8, !noalias !23
  %1179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1180 = load i64, i64* %1179, align 8, !noalias !23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %1176, i8* %1178, i64 %1180) #14, !noalias !23
  br label %1181

1181:                                             ; preds = %1175, %1173
  %1182 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1167, i64 %1161, i32 0, i32 1
  %1183 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1167, i64 %1161, i32 0, i32 1, i32 5, i32 0
  %1184 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %1182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1184, i8 -1, i64 20, i1 false) #14, !noalias !23
  store i8 0, i8* %1183, align 1, !noalias !23
  %1185 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1167, i64 %1161, i32 0, i32 1, i32 7
  %1186 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1167, i64 %1161, i32 0, i32 1, i32 7, i32 7
  %1187 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1187, i8 -1, i64 28, i1 false) #14, !noalias !23
  store i32 5126, i32* %1186, align 4, !noalias !23
  %1188 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1167, i64 %1161, i32 0, i32 1, i32 7, i32 8
  %1189 = bitcast %"class.std::__1::vector.145"* %1188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1189, i8 0, i64 53, i1 false) #14, !noalias !23
  br label %1190

1190:                                             ; preds = %1181, %1153
  %1191 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %1158, i64 0, i32 0, i32 0
  %1192 = load i8*, i8** %1191, align 8, !noalias !23
  %1193 = getelementptr inbounds i8, i8* %1192, i64 %1161
  %1194 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %7, i64 0, i32 0, i32 0, i32 0, i64 %1088, i32 0, i32 0, i32 1
  %1195 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %1194, align 8, !noalias !23
  %1196 = icmp ne i8* %1193, null
  call void @llvm.assume(i1 %1196) #14, !noalias !23
  %1197 = load i8, i8* %1193, align 1
  %1198 = icmp sgt i8 %1197, -1
  br i1 %1198, label %1200, label %1199, !prof !2

1199:                                             ; preds = %1190
  call void @llvm.trap() #14
  unreachable

1200:                                             ; preds = %1190
  %1201 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1195, i64 %1161, i32 0, i32 1, i32 0
  store i32 %1157, i32* %1201, align 8
  %1202 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1195, i64 %1161, i32 0, i32 1, i32 1
  store i32 0, i32* %1202, align 4
  %1203 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1195, i64 %1161, i32 0, i32 1, i32 5, i32 0
  store i8 63, i8* %1203, align 1
  %1204 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1204, i64 0, i32 1, i32 0
  %1206 = load i8, i8* %1205, align 1
  %1207 = icmp slt i8 %1206, 0
  br i1 %1207, label %1208, label %1211

1208:                                             ; preds = %1200
  %1209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1210 = load i8*, i8** %1209, align 8
  call void @_ZdlPv(i8* %1210) #17
  br label %1211

1211:                                             ; preds = %1208, %1200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1131) #14
  br label %1212

1212:                                             ; preds = %1083, %1211
  %1213 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 32, i32 0
  %1214 = load i32, i32* %1213, align 4
  %1215 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 32, i32 1
  %1216 = load i32, i32* %1215, align 4
  %1217 = icmp eq i32 %1214, %1216
  br i1 %1217, label %1264, label %1218

1218:                                             ; preds = %1212
  %1219 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 30, i32 0, i32 0
  %1220 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %1221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1222 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1223 = zext i8 %3 to i32
  %1224 = shl i32 1, %1223
  %1225 = trunc i32 %1224 to i8
  %1226 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 2
  %1227 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 3
  %1228 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1228, i64 0, i32 1, i32 0
  br label %1230

1230:                                             ; preds = %1261, %1218
  %1231 = phi i32 [ %1214, %1218 ], [ %1262, %1261 ]
  %1232 = zext i32 %1231 to i64
  %1233 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %1219, align 8
  %1234 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1233, i64 %1232, i32 1, i32 2
  %1235 = call zeroext i1 @_ZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1234) #14
  br i1 %1235, label %1261, label %1236

1236:                                             ; preds = %1230
  %1237 = call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122UniformNameIsIndexZeroERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1234) #14
  br i1 %1237, label %1238, label %1261

1238:                                             ; preds = %1236
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1220) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1220, i8 -86, i64 24, i1 false) #14
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %13, %"class.std::__1::basic_string"* dereferenceable(24) %1234) #14
  %1239 = load i8, i8* %301, align 1
  %1240 = and i8 %1239, 32
  %1241 = load i8, i8* %1222, align 1
  %1242 = and i8 %1241, %1225
  %1243 = select i1 %1072, i8 %1240, i8 %1242
  %1244 = icmp eq i8 %1243, 0
  br i1 %1244, label %1255, label %1245

1245:                                             ; preds = %1238
  %1246 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1233, i64 %1232, i32 0, i32 1, i32 0
  %1247 = load i8, i8* %1246, align 1
  %1248 = and i8 %1247, %1225
  %1249 = icmp eq i8 %1248, 0
  br i1 %1249, label %1255, label %1250

1250:                                             ; preds = %1245
  %1251 = load i32, i32* %1226, align 4
  %1252 = load i32, i32* %1227, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i32 %1251, i32 %1252) #14
  %1253 = load i32, i32* %1227, align 4
  %1254 = add i32 %1253, 1
  store i32 %1254, i32* %1227, align 4
  br label %1255

1255:                                             ; preds = %1250, %1245, %1238
  %1256 = load i8, i8* %1229, align 1
  %1257 = icmp slt i8 %1256, 0
  br i1 %1257, label %1258, label %1260

1258:                                             ; preds = %1255
  %1259 = load i8*, i8** %1221, align 8
  call void @_ZdlPv(i8* %1259) #17
  br label %1260

1260:                                             ; preds = %1258, %1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1220) #14
  br label %1261

1261:                                             ; preds = %1260, %1236, %1230
  %1262 = add i32 %1231, 1
  %1263 = icmp eq i32 %1262, %1216
  br i1 %1263, label %1264, label %1230

1264:                                             ; preds = %1261, %1212
  %1265 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 30
  %1266 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 5
  %1267 = load i32, i32* %1266, align 4
  %1268 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 39, i32 0
  %1269 = load i32, i32* %1268, align 4
  %1270 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 39, i32 1
  %1271 = load i32, i32* %1270, align 4
  %1272 = icmp eq i32 %1269, %1271
  br i1 %1272, label %1336, label %1273

1273:                                             ; preds = %1264
  %1274 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %1275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1276 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %1265, i64 0, i32 0, i32 0
  %1277 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1277, i64 0, i32 1, i32 0
  %1279 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1280 = zext i8 %3 to i32
  %1281 = shl i32 1, %1280
  %1282 = trunc i32 %1281 to i8
  %1283 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 4
  br label %1287

1284:                                             ; preds = %1330
  %1285 = and i8 %1325, 1
  %1286 = icmp eq i8 %1285, 0
  br i1 %1286, label %1336, label %1333

1287:                                             ; preds = %1330, %1273
  %1288 = phi i8 [ 0, %1273 ], [ %1325, %1330 ]
  %1289 = phi i32 [ %1269, %1273 ], [ %1331, %1330 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1274) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1274, i8 0, i64 24, i1 false) #14
  %1290 = zext i32 %1289 to i64
  %1291 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %1276, align 8
  %1292 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1291, i64 %1290, i32 1, i32 3
  %1293 = icmp eq %"class.std::__1::basic_string"* %10, %1292
  br i1 %1293, label %1307, label %1294

1294:                                             ; preds = %1287
  %1295 = bitcast %"class.std::__1::basic_string"* %1292 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1295, i64 0, i32 1, i32 0
  %1297 = load i8, i8* %1296, align 1
  %1298 = icmp slt i8 %1297, 0
  br i1 %1298, label %1301, label %1299

1299:                                             ; preds = %1294
  %1300 = bitcast %"class.std::__1::basic_string"* %1292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1274, i8* align 8 %1300, i64 24, i1 false) #14
  br label %1307

1301:                                             ; preds = %1294
  %1302 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1292, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1303 = load i8*, i8** %1302, align 8
  %1304 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1291, i64 %1290, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1305 = load i64, i64* %1304, align 8
  %1306 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %1303, i64 %1305) #14
  br label %1307

1307:                                             ; preds = %1301, %1299, %1287
  %1308 = load i8, i8* %301, align 1
  %1309 = and i8 %1308, 32
  %1310 = load i8, i8* %1279, align 1
  %1311 = and i8 %1310, %1282
  %1312 = select i1 %1072, i8 %1309, i8 %1311
  %1313 = icmp eq i8 %1312, 0
  br i1 %1313, label %1324, label %1314

1314:                                             ; preds = %1307
  %1315 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1291, i64 %1290, i32 0, i32 1, i32 0
  %1316 = load i8, i8* %1315, align 1
  %1317 = and i8 %1316, %1282
  %1318 = icmp eq i8 %1317, 0
  br i1 %1318, label %1324, label %1319

1319:                                             ; preds = %1314
  %1320 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1291, i64 %1290, i32 1, i32 11
  %1321 = load i32, i32* %1320, align 4
  %1322 = add i32 %1321, %1267
  %1323 = load i32, i32* %1283, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i32 %1323, i32 %1322) #14
  br label %1324

1324:                                             ; preds = %1319, %1314, %1307
  %1325 = phi i8 [ 1, %1319 ], [ %1288, %1314 ], [ %1288, %1307 ]
  %1326 = load i8, i8* %1278, align 1
  %1327 = icmp slt i8 %1326, 0
  br i1 %1327, label %1328, label %1330

1328:                                             ; preds = %1324
  %1329 = load i8*, i8** %1275, align 8
  call void @_ZdlPv(i8* %1329) #17
  br label %1330

1330:                                             ; preds = %1328, %1324
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1274) #14
  %1331 = add i32 %1289, 1
  %1332 = icmp eq i32 %1331, %1271
  br i1 %1332, label %1284, label %1287

1333:                                             ; preds = %1284
  %1334 = load i32, i32* %1266, align 4
  %1335 = add i32 %1334, 8
  store i32 %1335, i32* %1266, align 4
  br label %1336

1336:                                             ; preds = %1333, %1284, %1264
  %1337 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 33, i32 0, i32 0
  %1338 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %1337, align 8
  %1339 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 33, i32 0, i32 1
  %1340 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %1339, align 8
  %1341 = icmp eq %"struct.gl::InterfaceBlock"* %1338, %1340
  br i1 %1341, label %1378, label %1342

1342:                                             ; preds = %1336
  %1343 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1344 = zext i8 %3 to i32
  %1345 = shl i32 1, %1344
  %1346 = trunc i32 %1345 to i8
  %1347 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 4
  br label %1348

1348:                                             ; preds = %1375, %1342
  %1349 = phi %"struct.gl::InterfaceBlock"* [ %1338, %1342 ], [ %1376, %1375 ]
  %1350 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1349, i64 0, i32 3
  %1351 = load i8, i8* %1350, align 8, !range !22
  %1352 = icmp eq i8 %1351, 0
  br i1 %1352, label %1357, label %1353

1353:                                             ; preds = %1348
  %1354 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1349, i64 0, i32 5
  %1355 = load i32, i32* %1354, align 4
  %1356 = icmp eq i32 %1355, 0
  br i1 %1356, label %1357, label %1375

1357:                                             ; preds = %1353, %1348
  %1358 = load i8, i8* %301, align 1
  %1359 = and i8 %1358, 32
  %1360 = load i8, i8* %1343, align 1
  %1361 = and i8 %1360, %1346
  %1362 = select i1 %1072, i8 %1359, i8 %1361
  %1363 = icmp eq i8 %1362, 0
  br i1 %1363, label %1375, label %1364

1364:                                             ; preds = %1357
  %1365 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1349, i64 0, i32 0, i32 0, i32 1, i32 0
  %1366 = load i8, i8* %1365, align 1
  %1367 = and i8 %1366, %1346
  %1368 = icmp eq i8 %1367, 0
  br i1 %1368, label %1375, label %1369

1369:                                             ; preds = %1364
  %1370 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1349, i64 0, i32 2
  %1371 = load i32, i32* %1347, align 4
  %1372 = load i32, i32* %1266, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* dereferenceable(24) %1370, i32 %1371, i32 %1372) #14
  %1373 = load i32, i32* %1266, align 4
  %1374 = add i32 %1373, 1
  store i32 %1374, i32* %1266, align 4
  br label %1375

1375:                                             ; preds = %1369, %1364, %1357, %1353
  %1376 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1349, i64 1
  %1377 = icmp eq %"struct.gl::InterfaceBlock"* %1376, %1340
  br i1 %1377, label %1378, label %1348

1378:                                             ; preds = %1375, %1336
  %1379 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 55
  %1380 = load i8, i8* %1379, align 4, !range !22
  %1381 = icmp eq i8 %1380, 0
  %1382 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 37
  %1383 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 38
  %1384 = select i1 %1381, %"class.std::__1::vector.111"* %1383, %"class.std::__1::vector.111"* %1382
  %1385 = getelementptr inbounds %"class.std::__1::vector.111", %"class.std::__1::vector.111"* %1384, i64 0, i32 0, i32 0
  %1386 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %1385, align 8
  %1387 = getelementptr inbounds %"class.std::__1::vector.111", %"class.std::__1::vector.111"* %1384, i64 0, i32 0, i32 1
  %1388 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %1387, align 8
  %1389 = icmp eq %"struct.gl::InterfaceBlock"* %1386, %1388
  br i1 %1389, label %1426, label %1390

1390:                                             ; preds = %1378
  %1391 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1392 = zext i8 %3 to i32
  %1393 = shl i32 1, %1392
  %1394 = trunc i32 %1393 to i8
  %1395 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 4
  br label %1396

1396:                                             ; preds = %1423, %1390
  %1397 = phi %"struct.gl::InterfaceBlock"* [ %1386, %1390 ], [ %1424, %1423 ]
  %1398 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1397, i64 0, i32 3
  %1399 = load i8, i8* %1398, align 8, !range !22
  %1400 = icmp eq i8 %1399, 0
  br i1 %1400, label %1405, label %1401

1401:                                             ; preds = %1396
  %1402 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1397, i64 0, i32 5
  %1403 = load i32, i32* %1402, align 4
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1405, label %1423

1405:                                             ; preds = %1401, %1396
  %1406 = load i8, i8* %301, align 1
  %1407 = and i8 %1406, 32
  %1408 = load i8, i8* %1391, align 1
  %1409 = and i8 %1408, %1394
  %1410 = select i1 %1072, i8 %1407, i8 %1409
  %1411 = icmp eq i8 %1410, 0
  br i1 %1411, label %1423, label %1412

1412:                                             ; preds = %1405
  %1413 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1397, i64 0, i32 0, i32 0, i32 1, i32 0
  %1414 = load i8, i8* %1413, align 1
  %1415 = and i8 %1414, %1394
  %1416 = icmp eq i8 %1415, 0
  br i1 %1416, label %1423, label %1417

1417:                                             ; preds = %1412
  %1418 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1397, i64 0, i32 2
  %1419 = load i32, i32* %1395, align 4
  %1420 = load i32, i32* %1266, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* dereferenceable(24) %1418, i32 %1419, i32 %1420) #14
  %1421 = load i32, i32* %1266, align 4
  %1422 = add i32 %1421, 1
  store i32 %1422, i32* %1266, align 4
  br label %1423

1423:                                             ; preds = %1417, %1412, %1405, %1401
  %1424 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1397, i64 1
  %1425 = icmp eq %"struct.gl::InterfaceBlock"* %1424, %1388
  br i1 %1425, label %1426, label %1396

1426:                                             ; preds = %1423, %1378
  %1427 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 35
  %1428 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 35, i32 0, i32 1
  %1429 = bitcast %"struct.gl::ShaderVariableBuffer"** %1428 to i64*
  %1430 = load i64, i64* %1429, align 8
  %1431 = bitcast %"class.std::__1::vector.119"* %1427 to i64*
  %1432 = load i64, i64* %1431, align 8
  %1433 = icmp eq i64 %1430, %1432
  br i1 %1433, label %1489, label %1434

1434:                                             ; preds = %1426
  br i1 %1072, label %1435, label %1438

1435:                                             ; preds = %1434
  %1436 = load i8, i8* %301, align 1
  %1437 = and i8 %1436, 32
  br label %1445

1438:                                             ; preds = %1434
  %1439 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1440 = load i8, i8* %1439, align 1
  %1441 = zext i8 %3 to i32
  %1442 = shl i32 1, %1441
  %1443 = trunc i32 %1442 to i8
  %1444 = and i8 %1440, %1443
  br label %1445

1445:                                             ; preds = %1438, %1435
  %1446 = phi i8 [ %1437, %1435 ], [ %1444, %1438 ]
  %1447 = icmp eq i8 %1446, 0
  br i1 %1447, label %1489, label %1448

1448:                                             ; preds = %1445
  %1449 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1449) #14
  %1450 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kAtomicCountersBlockNameE, i64 0, i64 0)) #14
  %1451 = icmp ugt i64 %1450, -17
  br i1 %1451, label %1452, label %1454

1452:                                             ; preds = %1448
  %1453 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1453) #18
  unreachable

1454:                                             ; preds = %1448
  %1455 = icmp ult i64 %1450, 23
  br i1 %1455, label %1465, label %1456

1456:                                             ; preds = %1454
  %1457 = add nuw i64 %1450, 16
  %1458 = and i64 %1457, -16
  %1459 = call i8* @_Znwm(i64 %1458) #17
  %1460 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1459, i8** %1460, align 8
  %1461 = or i64 %1458, -9223372036854775808
  %1462 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1461, i64* %1462, align 8
  %1463 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1450, i64* %1463, align 8
  %1464 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %1470

1465:                                             ; preds = %1454
  %1466 = trunc i64 %1450 to i8
  %1467 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1468 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1467, i64 0, i32 1, i32 0
  store i8 %1466, i8* %1468, align 1
  %1469 = icmp eq i64 %1450, 0
  br i1 %1469, label %1473, label %1470

1470:                                             ; preds = %1465, %1456
  %1471 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1467, %1465 ], [ %1464, %1456 ]
  %1472 = phi i8* [ %1449, %1465 ], [ %1459, %1456 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1472, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kAtomicCountersBlockNameE, i64 0, i64 0), i64 %1450, i1 false) #14
  br label %1473

1473:                                             ; preds = %1470, %1465
  %1474 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1467, %1465 ], [ %1471, %1470 ]
  %1475 = phi i8* [ %1449, %1465 ], [ %1472, %1470 ]
  %1476 = getelementptr inbounds i8, i8* %1475, i64 %1450
  store i8 0, i8* %1476, align 1
  %1477 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 4
  %1478 = load i32, i32* %1477, align 4
  %1479 = load i32, i32* %1266, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 %1478, i32 %1479) #14
  %1480 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1474, i64 0, i32 1, i32 0
  %1481 = load i8, i8* %1480, align 1
  %1482 = icmp slt i8 %1481, 0
  br i1 %1482, label %1483, label %1486

1483:                                             ; preds = %1473
  %1484 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1485 = load i8*, i8** %1484, align 8
  call void @_ZdlPv(i8* %1485) #17
  br label %1486

1486:                                             ; preds = %1483, %1473
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1449) #14
  %1487 = load i32, i32* %1266, align 4
  %1488 = add i32 %1487, 1
  store i32 %1488, i32* %1266, align 4
  br label %1489

1489:                                             ; preds = %1486, %1445, %1426
  %1490 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 36, i32 0
  %1491 = load i32, i32* %1490, align 4
  %1492 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 36, i32 1
  %1493 = load i32, i32* %1492, align 4
  %1494 = icmp eq i32 %1491, %1493
  br i1 %1494, label %1566, label %1495

1495:                                             ; preds = %1489
  %1496 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %1265, i64 0, i32 0, i32 0
  %1497 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %1498 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1499 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1500 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1501 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1500, i64 0, i32 1, i32 0
  %1502 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %1503 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::allocator"*
  %1504 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2, i32 0
  %1505 = zext i8 %3 to i32
  %1506 = shl i32 1, %1505
  %1507 = trunc i32 %1506 to i8
  %1508 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 4
  br label %1509

1509:                                             ; preds = %1563, %1495
  %1510 = phi i32 [ %1491, %1495 ], [ %1564, %1563 ]
  %1511 = zext i32 %1510 to i64
  %1512 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %1496, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1497) #14
  %1513 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1512, i64 %1511, i32 1, i32 3
  %1514 = bitcast %"class.std::__1::basic_string"* %1513 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1515 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1514, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1497, i8 -86, i64 24, i1 false) #14
  %1516 = load i8, i8* %1515, align 1
  %1517 = icmp slt i8 %1516, 0
  br i1 %1517, label %1520, label %1518

1518:                                             ; preds = %1509
  %1519 = bitcast %"class.std::__1::basic_string"* %1513 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1497, i8* align 8 %1519, i64 24, i1 false) #14
  br label %1525

1520:                                             ; preds = %1509
  %1521 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1513, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1522 = load i8*, i8** %1521, align 8
  %1523 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %1512, i64 %1511, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1524 = load i64, i64* %1523, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %1522, i64 %1524) #14
  br label %1525

1525:                                             ; preds = %1520, %1518
  %1526 = load i8, i8* %1501, align 1
  %1527 = icmp slt i8 %1526, 0
  %1528 = load i8*, i8** %1498, align 8
  %1529 = load i64, i64* %1499, align 8
  %1530 = zext i8 %1526 to i64
  %1531 = select i1 %1527, i8* %1528, i8* %1497
  %1532 = select i1 %1527, i64 %1529, i64 %1530
  %1533 = getelementptr inbounds i8, i8* %1531, i64 -1
  %1534 = getelementptr inbounds i8, i8* %1533, i64 %1532
  %1535 = load i8, i8* %1534, align 1
  %1536 = icmp eq i8 %1535, 93
  br i1 %1536, label %1537, label %1546

1537:                                             ; preds = %1525
  %1538 = call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122UniformNameIsIndexZeroERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #14
  br i1 %1538, label %1539, label %1558

1539:                                             ; preds = %1537
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1502) #14
  %1540 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %12, i8 signext 91, i64 0) #14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i64 0, i64 %1540, %"class.std::__1::allocator"* nonnull dereferenceable(1) %1503) #14
  %1541 = load i8, i8* %1501, align 1
  %1542 = icmp slt i8 %1541, 0
  br i1 %1542, label %1543, label %1545

1543:                                             ; preds = %1539
  %1544 = load i8*, i8** %1498, align 8
  call void @_ZdlPv(i8* %1544) #17
  br label %1545

1545:                                             ; preds = %1543, %1539
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1497, i8* nonnull align 8 %1502, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1502) #14
  br label %1546

1546:                                             ; preds = %1545, %1525
  %1547 = load i8, i8* %301, align 1
  %1548 = and i8 %1547, 32
  %1549 = load i8, i8* %1504, align 1
  %1550 = and i8 %1549, %1507
  %1551 = select i1 %1072, i8 %1548, i8 %1550
  %1552 = icmp eq i8 %1551, 0
  br i1 %1552, label %1558, label %1553

1553:                                             ; preds = %1546
  %1554 = load i32, i32* %1508, align 4
  %1555 = load i32, i32* %1266, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i32 %1554, i32 %1555) #14
  %1556 = load i32, i32* %1266, align 4
  %1557 = add i32 %1556, 1
  store i32 %1557, i32* %1266, align 4
  br label %1558

1558:                                             ; preds = %1553, %1546, %1537
  %1559 = load i8, i8* %1501, align 1
  %1560 = icmp slt i8 %1559, 0
  br i1 %1560, label %1561, label %1563

1561:                                             ; preds = %1558
  %1562 = load i8*, i8** %1498, align 8
  call void @_ZdlPv(i8* %1562) #17
  br label %1563

1563:                                             ; preds = %1561, %1558
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1497) #14
  %1564 = add i32 %1510, 1
  %1565 = icmp eq i32 %1564, %1493
  br i1 %1565, label %1566, label %1509

1566:                                             ; preds = %1563, %1489
  %1567 = getelementptr inbounds %"struct.rx::GlslangSourceOptions", %"struct.rx::GlslangSourceOptions"* %0, i64 0, i32 1
  %1568 = load i8, i8* %1567, align 1, !range !22
  %1569 = icmp eq i8 %1568, 0
  br i1 %1569, label %1693, label %1570

1570:                                             ; preds = %1566
  %1571 = call zeroext i1 @_ZN2gl35ShaderTypeSupportsTransformFeedbackENS_10ShaderTypeE(i8 zeroext %3) #14
  br i1 %1571, label %1572, label %1693

1572:                                             ; preds = %1570
  %1573 = getelementptr inbounds %"struct.rx::GlslangSourceOptions", %"struct.rx::GlslangSourceOptions"* %0, i64 0, i32 2
  %1574 = load i8, i8* %1573, align 1
  %1575 = icmp ne i8 %1574, 0
  %1576 = and i1 %1575, %5
  br i1 %1576, label %1577, label %1607

1577:                                             ; preds = %1572
  %1578 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %28, align 8
  %1579 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1578, i64 0, i32 28
  %1580 = load i32, i32* %1579, align 8
  %1581 = icmp eq i32 %1580, 35980
  br i1 %1581, label %1592, label %1582

1582:                                             ; preds = %1577
  %1583 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1578, i64 0, i32 26
  %1584 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1578, i64 0, i32 26, i32 0, i32 1
  %1585 = bitcast %"struct.gl::TransformFeedbackVarying"** %1584 to i64*
  %1586 = load i64, i64* %1585, align 8
  %1587 = bitcast %"class.std::__1::vector.90"* %1583 to i64*
  %1588 = load i64, i64* %1587, align 8
  %1589 = sub i64 %1586, %1588
  %1590 = sdiv exact i64 %1589, 216
  %1591 = icmp eq i64 %1589, 0
  br i1 %1591, label %1607, label %1592

1592:                                             ; preds = %1582, %1577
  %1593 = phi i64 [ %1590, %1582 ], [ 1, %1577 ]
  %1594 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %1595 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %1596 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1597 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1596, i64 0, i32 1, i32 0
  %1598 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1599 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 0
  %1600 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %6, i64 0, i32 1
  %1601 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1602 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1601, i64 0, i32 1, i32 0
  %1603 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1623

1604:                                             ; preds = %1638
  %1605 = trunc i64 %1593 to i32
  %1606 = icmp ult i32 %1605, 4
  br i1 %1606, label %1607, label %1693

1607:                                             ; preds = %1604, %1582, %1572
  %1608 = phi i32 [ %1605, %1604 ], [ 0, %1582 ], [ 0, %1572 ]
  %1609 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %1610 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %1611 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1612 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1611, i64 0, i32 1, i32 0
  %1613 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1614 = zext i8 %3 to i64
  %1615 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %7, i64 0, i32 0, i32 0, i32 0, i64 %1614, i32 0
  %1616 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %1615, i64 0, i32 0
  %1617 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %7, i64 0, i32 0, i32 0, i32 0, i64 %1614, i32 0, i32 0, i32 1
  %1618 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1619 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1618, i64 0, i32 1, i32 0
  %1620 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1621 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1622 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %1615, i64 0, i32 0, i32 0
  br label %1644

1623:                                             ; preds = %1638, %1592
  %1624 = phi i32 [ 0, %1592 ], [ %1641, %1638 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1594) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1595) #14, !noalias !28
  call void @_Z3Stri(%"class.std::__1::basic_string"* nonnull sret %25, i32 %1624) #14, !noalias !28
  %1625 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %25, i64 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbEmulationBufferBlockNameE, i64 0, i64 0)) #14, !noalias !31
  %1626 = bitcast %"class.std::__1::basic_string"* %1625 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1594, i8* align 8 %1626, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %1626, i8 0, i64 24, i1 false) #14, !noalias !31
  %1627 = load i8, i8* %1597, align 1, !noalias !28
  %1628 = icmp slt i8 %1627, 0
  br i1 %1628, label %1629, label %1631

1629:                                             ; preds = %1623
  %1630 = load i8*, i8** %1598, align 8, !noalias !28
  call void @_ZdlPv(i8* %1630) #17, !noalias !28
  br label %1631

1631:                                             ; preds = %1629, %1623
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1595) #14, !noalias !28
  %1632 = load i32, i32* %1599, align 4
  %1633 = load i32, i32* %1600, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"* %7, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26, i32 %1632, i32 %1633) #14
  %1634 = load i8, i8* %1602, align 1
  %1635 = icmp slt i8 %1634, 0
  br i1 %1635, label %1636, label %1638

1636:                                             ; preds = %1631
  %1637 = load i8*, i8** %1603, align 8
  call void @_ZdlPv(i8* %1637) #17
  br label %1638

1638:                                             ; preds = %1636, %1631
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1594) #14
  %1639 = load i32, i32* %1600, align 4
  %1640 = add i32 %1639, 1
  store i32 %1640, i32* %1600, align 4
  %1641 = add i32 %1624, 1
  %1642 = zext i32 %1641 to i64
  %1643 = icmp ugt i64 %1593, %1642
  br i1 %1643, label %1623, label %1604

1644:                                             ; preds = %1690, %1607
  %1645 = phi i32 [ %1608, %1607 ], [ %1691, %1690 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1609) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1610) #14, !noalias !34
  call void @_Z3Stri(%"class.std::__1::basic_string"* nonnull sret %24, i32 %1645) #14, !noalias !34
  %1646 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %24, i64 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbEmulationBufferBlockNameE, i64 0, i64 0)) #14, !noalias !37
  %1647 = bitcast %"class.std::__1::basic_string"* %1646 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1609, i8* align 8 %1647, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %1647, i8 0, i64 24, i1 false) #14, !noalias !37
  %1648 = load i8, i8* %1612, align 1, !noalias !34
  %1649 = icmp slt i8 %1648, 0
  br i1 %1649, label %1650, label %1652

1650:                                             ; preds = %1644
  %1651 = load i8*, i8** %1613, align 8, !noalias !34
  call void @_ZdlPv(i8* %1651) #17, !noalias !34
  br label %1652

1652:                                             ; preds = %1650, %1644
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1610) #14, !noalias !34
  %1653 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %1616, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #14, !noalias !40
  %1654 = extractvalue { i64, i8 } %1653, 0
  %1655 = extractvalue { i64, i8 } %1653, 1
  %1656 = and i8 %1655, 1
  %1657 = icmp eq i8 %1656, 0
  br i1 %1657, label %1678, label %1658

1658:                                             ; preds = %1652
  %1659 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %1617, align 8, !noalias !40
  %1660 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1659, i64 %1654
  %1661 = load i8, i8* %1619, align 1, !noalias !40
  %1662 = icmp slt i8 %1661, 0
  br i1 %1662, label %1665, label %1663

1663:                                             ; preds = %1658
  %1664 = bitcast %"union.absl::container_internal::map_slot_type.157"* %1660 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1664, i8* nonnull align 8 %1609, i64 24, i1 false) #14, !noalias !40
  br label %1669

1665:                                             ; preds = %1658
  %1666 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1660, i64 0, i32 0, i32 0
  %1667 = load i8*, i8** %1620, align 8, !noalias !40
  %1668 = load i64, i64* %1621, align 8, !noalias !40
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %1666, i8* %1667, i64 %1668) #14, !noalias !40
  br label %1669

1669:                                             ; preds = %1665, %1663
  %1670 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1659, i64 %1654, i32 0, i32 1
  %1671 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1659, i64 %1654, i32 0, i32 1, i32 5, i32 0
  %1672 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %1670 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1672, i8 -1, i64 20, i1 false) #14, !noalias !40
  store i8 0, i8* %1671, align 1, !noalias !40
  %1673 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1659, i64 %1654, i32 0, i32 1, i32 7
  %1674 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1659, i64 %1654, i32 0, i32 1, i32 7, i32 7
  %1675 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1673 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1675, i8 -1, i64 28, i1 false) #14, !noalias !40
  store i32 5126, i32* %1674, align 4, !noalias !40
  %1676 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1659, i64 %1654, i32 0, i32 1, i32 7, i32 8
  %1677 = bitcast %"class.std::__1::vector.145"* %1676 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1677, i8 0, i64 53, i1 false) #14, !noalias !40
  br label %1678

1678:                                             ; preds = %1669, %1652
  %1679 = load i8*, i8** %1622, align 8, !noalias !40
  %1680 = getelementptr inbounds i8, i8* %1679, i64 %1654
  %1681 = icmp ne i8* %1680, null
  call void @llvm.assume(i1 %1681) #14, !noalias !40
  %1682 = load i8, i8* %1680, align 1
  %1683 = icmp sgt i8 %1682, -1
  br i1 %1683, label %1685, label %1684, !prof !2

1684:                                             ; preds = %1678
  call void @llvm.trap() #14
  unreachable

1685:                                             ; preds = %1678
  %1686 = load i8, i8* %1619, align 1
  %1687 = icmp slt i8 %1686, 0
  br i1 %1687, label %1688, label %1690

1688:                                             ; preds = %1685
  %1689 = load i8*, i8** %1620, align 8
  call void @_ZdlPv(i8* %1689) #17
  br label %1690

1690:                                             ; preds = %1688, %1685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1609) #14
  %1691 = add i32 %1645, 1
  %1692 = icmp eq i32 %1691, 4
  br i1 %1692, label %1693, label %1644

1693:                                             ; preds = %1690, %1604, %1566, %1570
  ret void
}

declare dereferenceable(360) %"class.gl::VaryingPacking"* @_ZNK2gl21ProgramVaryingPacking15getInputPackingENS_10ShaderTypeE(%"class.gl::ProgramVaryingPacking"*, i8 zeroext) local_unnamed_addr #4

declare dereferenceable(360) %"class.gl::VaryingPacking"* @_ZNK2gl21ProgramVaryingPacking16getOutputPackingENS_10ShaderTypeE(%"class.gl::ProgramVaryingPacking"*, i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_122AssignVaryingLocationsERKNS_20GlslangSourceOptionsERKN2gl14VaryingPackingENS4_10ShaderTypeES8_PNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* nocapture readonly dereferenceable(4), %"class.gl::VaryingPacking"* nocapture readonly dereferenceable(360), i8 zeroext, i8 zeroext, %"struct.rx::GlslangProgramInterfaceInfo"* nocapture readonly, %"class.rx::ShaderInterfaceVariableInfoMap"*) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %4, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.rx::GlslangSourceOptions", %"struct.rx::GlslangSourceOptions"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !range !22
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %52, label %14

14:                                               ; preds = %6
  %15 = add i32 %10, 1
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kLineRasterEmulationPositionE, i64 0, i64 0)) #14
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #18
  unreachable

21:                                               ; preds = %14
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #17
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %30, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %37

32:                                               ; preds = %21
  %33 = trunc i64 %17 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 %33, i8* %35, align 1
  %36 = icmp eq i64 %17, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32, %23
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %34, %32 ], [ %31, %23 ]
  %39 = phi i8* [ %16, %32 ], [ %26, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kLineRasterEmulationPositionE, i64 0, i64 0), i64 %17, i1 false) #14
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %34, %32 ], [ %38, %37 ]
  %42 = phi i8* [ %16, %32 ], [ %39, %37 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %17
  store i8 0, i8* %43, align 1
  %44 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %5, i8 zeroext %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 %10, i32 -1, i8 zeroext 0, i8 zeroext 0)
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #17
  br label %51

51:                                               ; preds = %40, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  br label %52

52:                                               ; preds = %6, %51
  %53 = phi i32 [ %15, %51 ], [ %10, %6 ]
  %54 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 1, i32 0, i32 0
  %55 = load %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"** %54, align 8
  %56 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 1, i32 0, i32 1
  %57 = load %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"** %56, align 8
  %58 = icmp eq %"struct.gl::PackedVaryingRegister"* %55, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %194, %52
  %60 = zext i8 %2 to i64
  %61 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 3, i32 0, i32 0, i64 %60, i32 0, i32 0
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %61, align 8
  %63 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 3, i32 0, i32 0, i64 %60, i32 0, i32 1
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %63, align 8
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %64
  br i1 %65, label %197, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0, i32 0
  %68 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %69 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0
  %70 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %69, i64 0, i32 0, i32 0
  br label %212

73:                                               ; preds = %52, %194
  %74 = phi %"struct.gl::PackedVaryingRegister"* [ %195, %194 ], [ %55, %52 ]
  %75 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %74, i64 0, i32 0
  %76 = load %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"** %75, align 8
  %77 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 0
  %78 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %77, align 8
  %79 = icmp eq %"struct.sh::ShaderVariable"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 2
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  br label %102

89:                                               ; preds = %80
  %90 = zext i8 %84 to i64
  br label %102

91:                                               ; preds = %73
  %92 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 2
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  br label %102

100:                                              ; preds = %91
  %101 = zext i8 %95 to i64
  br label %102

102:                                              ; preds = %100, %97, %89, %86
  %103 = phi i64 [ %88, %86 ], [ %90, %89 ], [ %99, %97 ], [ %101, %100 ]
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 7
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %194

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 8
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %194

113:                                              ; preds = %109, %102
  %114 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %74, i64 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %194

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 4
  %119 = load i32, i32* %118, align 4
  switch i32 %119, label %194 [
    i32 -1, label %120
    i32 0, label %120
  ]

120:                                              ; preds = %117, %117
  %121 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %74, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %194

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %74, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, %53
  %128 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %74, i64 0, i32 4
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  %131 = select i1 %130, i32 -1, i32 %129
  br i1 %79, label %154, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 1
  %134 = load i8, i8* %133, align 8
  %135 = icmp eq i8 %134, %2
  br i1 %135, label %136, label %154

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 2
  %138 = bitcast %"class.std::__1::basic_string"* %137 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  br label %147

145:                                              ; preds = %136
  %146 = zext i8 %140 to i64
  br label %147

147:                                              ; preds = %142, %145
  %148 = phi i64 [ %144, %142 ], [ %146, %145 ]
  %149 = icmp eq i64 %148, 0
  %150 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 3
  %151 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %78, i64 0, i32 3
  %152 = select i1 %149, %"class.std::__1::basic_string"* %151, %"class.std::__1::basic_string"* %150
  %153 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %5, i8 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %152, i32 %127, i32 %131, i8 zeroext 0, i8 zeroext 0) #14
  br label %154

154:                                              ; preds = %124, %147, %132
  %155 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 0
  %156 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %155, align 8
  %157 = icmp eq %"struct.sh::ShaderVariable"* %156, null
  br i1 %157, label %194, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 1
  %160 = load i8, i8* %159, align 8
  %161 = icmp eq i8 %160, %2
  br i1 %161, label %162, label %194

162:                                              ; preds = %158
  %163 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %77, align 8
  %164 = icmp eq %"struct.sh::ShaderVariable"* %163, null
  br i1 %164, label %176, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 2
  %167 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  br label %187

174:                                              ; preds = %165
  %175 = zext i8 %169 to i64
  br label %187

176:                                              ; preds = %162
  %177 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 2
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  br label %187

185:                                              ; preds = %176
  %186 = zext i8 %180 to i64
  br label %187

187:                                              ; preds = %171, %174, %182, %185
  %188 = phi i64 [ %173, %171 ], [ %175, %174 ], [ %184, %182 ], [ %186, %185 ]
  %189 = icmp eq i64 %188, 0
  %190 = getelementptr inbounds %"struct.gl::PackedVarying", %"struct.gl::PackedVarying"* %76, i64 0, i32 2, i32 3
  %191 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %156, i64 0, i32 3
  %192 = select i1 %189, %"class.std::__1::basic_string"* %191, %"class.std::__1::basic_string"* %190
  %193 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %5, i8 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %192, i32 %127, i32 %131, i8 zeroext 0, i8 zeroext 0) #14
  br label %194

194:                                              ; preds = %113, %117, %105, %109, %158, %187, %154, %120
  %195 = getelementptr inbounds %"struct.gl::PackedVaryingRegister", %"struct.gl::PackedVaryingRegister"* %74, i64 1
  %196 = icmp eq %"struct.gl::PackedVaryingRegister"* %195, %57
  br i1 %196, label %59, label %73

197:                                              ; preds = %282, %59
  %198 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 4, i32 0, i32 0, i64 %60, i32 0, i32 0
  %199 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %198, align 8
  %200 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 4, i32 0, i32 0, i64 %60, i32 0, i32 1
  %201 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %200, align 8
  %202 = icmp eq %"class.std::__1::basic_string"* %199, %201
  br i1 %202, label %285, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0
  %205 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %204, i64 0, i32 0
  %206 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0, i32 0, i32 1
  %207 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %204, i64 0, i32 0, i32 0
  %208 = zext i8 %2 to i32
  %209 = shl i32 1, %208
  %210 = trunc i32 %209 to i8
  %211 = and i8 %210, 63
  br label %287

212:                                              ; preds = %66, %282
  %213 = phi %"class.std::__1::basic_string"* [ %62, %66 ], [ %283, %282 ]
  %214 = bitcast %"class.std::__1::basic_string"* %213 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %212
  %219 = zext i8 %216 to i64
  %220 = ptrtoint %"class.std::__1::basic_string"* %213 to i64
  br label %228

221:                                              ; preds = %212
  %222 = bitcast %"class.std::__1::basic_string"* %213 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = icmp sgt i64 %225, -1
  br i1 %226, label %228, label %227, !prof !2

227:                                              ; preds = %221
  call void @llvm.trap() #14
  unreachable

228:                                              ; preds = %221, %218
  %229 = phi i64 [ %223, %221 ], [ %220, %218 ]
  %230 = phi i64 [ %225, %221 ], [ %219, %218 ]
  %231 = inttoptr i64 %229 to i8*
  %232 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %68, i8* %231, i64 %230) #14
  %233 = add i64 %232, %230
  %234 = zext i64 %233 to i128
  %235 = mul nuw i128 %234, 11376068507788127593
  %236 = lshr i128 %235, 64
  %237 = xor i128 %236, %235
  %238 = trunc i128 %237 to i64
  %239 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %67, %"class.std::__1::basic_string"* dereferenceable(24) %213, i64 %238) #14
  %240 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %239, 0
  %241 = icmp eq i8* %240, null
  br i1 %241, label %246, label %242

242:                                              ; preds = %228
  %243 = load i8, i8* %240, align 1
  %244 = icmp sgt i8 %243, -1
  br i1 %244, label %282, label %245, !prof !2

245:                                              ; preds = %242
  call void @llvm.trap() #14
  unreachable

246:                                              ; preds = %228
  %247 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %70, %"class.std::__1::basic_string"* dereferenceable(24) %213) #14, !noalias !45
  %248 = extractvalue { i64, i8 } %247, 0
  %249 = extractvalue { i64, i8 } %247, 1
  %250 = and i8 %249, 1
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %275, label %252

252:                                              ; preds = %246
  %253 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %71, align 8, !noalias !45
  %254 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %253, i64 %248
  %255 = load i8, i8* %215, align 1, !noalias !45
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %252
  %258 = bitcast %"union.absl::container_internal::map_slot_type.157"* %254 to i8*
  %259 = bitcast %"class.std::__1::basic_string"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 24, i1 false) #14, !noalias !45
  br label %266

260:                                              ; preds = %252
  %261 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %254, i64 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i8*, i8** %262, align 8, !noalias !45
  %264 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %265 = load i64, i64* %264, align 8, !noalias !45
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %261, i8* %263, i64 %265) #14, !noalias !45
  br label %266

266:                                              ; preds = %260, %257
  %267 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %253, i64 %248, i32 0, i32 1
  %268 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %253, i64 %248, i32 0, i32 1, i32 5, i32 0
  %269 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %267 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 -1, i64 20, i1 false) #14, !noalias !45
  store i8 0, i8* %268, align 1, !noalias !45
  %270 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %253, i64 %248, i32 0, i32 1, i32 7
  %271 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %253, i64 %248, i32 0, i32 1, i32 7, i32 7
  %272 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %270 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 -1, i64 28, i1 false) #14, !noalias !45
  store i32 5126, i32* %271, align 4, !noalias !45
  %273 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %253, i64 %248, i32 0, i32 1, i32 7, i32 8
  %274 = bitcast %"class.std::__1::vector.145"* %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 53, i1 false) #14, !noalias !45
  br label %275

275:                                              ; preds = %266, %246
  %276 = load i8*, i8** %72, align 8, !noalias !45
  %277 = getelementptr inbounds i8, i8* %276, i64 %248
  %278 = icmp ne i8* %277, null
  call void @llvm.assume(i1 %278) #14, !noalias !45
  %279 = load i8, i8* %277, align 1
  %280 = icmp sgt i8 %279, -1
  br i1 %280, label %282, label %281, !prof !2

281:                                              ; preds = %275
  call void @llvm.trap() #14
  unreachable

282:                                              ; preds = %242, %275
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %213, i64 1
  %284 = icmp eq %"class.std::__1::basic_string"* %283, %64
  br i1 %284, label %197, label %212

285:                                              ; preds = %327, %197
  %286 = icmp eq i8 %3, 6
  br i1 %286, label %397, label %334

287:                                              ; preds = %203, %327
  %288 = phi %"class.std::__1::basic_string"* [ %199, %203 ], [ %332, %327 ]
  %289 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %205, %"class.std::__1::basic_string"* dereferenceable(24) %288) #14, !noalias !50
  %290 = extractvalue { i64, i8 } %289, 0
  %291 = extractvalue { i64, i8 } %289, 1
  %292 = and i8 %291, 1
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %319, label %294

294:                                              ; preds = %287
  %295 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %206, align 8, !noalias !50
  %296 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %295, i64 %290
  %297 = bitcast %"class.std::__1::basic_string"* %288 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1, !noalias !50
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %294
  %302 = bitcast %"union.absl::container_internal::map_slot_type.157"* %296 to i8*
  %303 = bitcast %"class.std::__1::basic_string"* %288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %303, i64 24, i1 false) #14, !noalias !50
  br label %310

304:                                              ; preds = %294
  %305 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %296, i64 0, i32 0, i32 0
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %288, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8, !noalias !50
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %288, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %309 = load i64, i64* %308, align 8, !noalias !50
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %305, i8* %307, i64 %309) #14, !noalias !50
  br label %310

310:                                              ; preds = %304, %301
  %311 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %295, i64 %290, i32 0, i32 1
  %312 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %295, i64 %290, i32 0, i32 1, i32 5, i32 0
  %313 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %311 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %313, i8 -1, i64 20, i1 false) #14, !noalias !50
  store i8 0, i8* %312, align 1, !noalias !50
  %314 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %295, i64 %290, i32 0, i32 1, i32 7
  %315 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %295, i64 %290, i32 0, i32 1, i32 7, i32 7
  %316 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %314 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 -1, i64 28, i1 false) #14, !noalias !50
  store i32 5126, i32* %315, align 4, !noalias !50
  %317 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %295, i64 %290, i32 0, i32 1, i32 7, i32 8
  %318 = bitcast %"class.std::__1::vector.145"* %317 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 53, i1 false) #14, !noalias !50
  br label %319

319:                                              ; preds = %310, %287
  %320 = load i8*, i8** %207, align 8, !noalias !50
  %321 = getelementptr inbounds i8, i8* %320, i64 %290
  %322 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %206, align 8, !noalias !50
  %323 = icmp ne i8* %321, null
  call void @llvm.assume(i1 %323) #14, !noalias !50
  %324 = load i8, i8* %321, align 1
  %325 = icmp sgt i8 %324, -1
  br i1 %325, label %327, label %326, !prof !2

326:                                              ; preds = %319
  call void @llvm.trap() #14
  unreachable

327:                                              ; preds = %319
  %328 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %322, i64 %290, i32 0, i32 1, i32 5, i32 0
  %329 = load i8, i8* %328, align 1
  %330 = or i8 %329, %211
  store i8 %330, i8* %328, align 1
  %331 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %322, i64 %290, i32 0, i32 1, i32 11
  store i8 1, i8* %331, align 2
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %288, i64 1
  %333 = icmp eq %"class.std::__1::basic_string"* %332, %201
  br i1 %333, label %285, label %287

334:                                              ; preds = %285
  %335 = zext i8 %3 to i64
  %336 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 4, i32 0, i32 0, i64 %335, i32 0, i32 0
  %337 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %336, align 8
  %338 = getelementptr inbounds %"class.gl::VaryingPacking", %"class.gl::VaryingPacking"* %1, i64 0, i32 4, i32 0, i32 0, i64 %335, i32 0, i32 1
  %339 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %338, align 8
  %340 = icmp eq %"class.std::__1::basic_string"* %337, %339
  br i1 %340, label %397, label %341

341:                                              ; preds = %334
  %342 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0
  %343 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %342, i64 0, i32 0
  %344 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0, i32 0, i32 1
  %345 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %342, i64 0, i32 0, i32 0
  %346 = zext i8 %2 to i32
  %347 = shl i32 1, %346
  %348 = trunc i32 %347 to i8
  %349 = and i8 %348, 63
  br label %350

350:                                              ; preds = %341, %390
  %351 = phi %"class.std::__1::basic_string"* [ %337, %341 ], [ %395, %390 ]
  %352 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %343, %"class.std::__1::basic_string"* dereferenceable(24) %351) #14, !noalias !55
  %353 = extractvalue { i64, i8 } %352, 0
  %354 = extractvalue { i64, i8 } %352, 1
  %355 = and i8 %354, 1
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %382, label %357

357:                                              ; preds = %350
  %358 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %344, align 8, !noalias !55
  %359 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %358, i64 %353
  %360 = bitcast %"class.std::__1::basic_string"* %351 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1, !noalias !55
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %367, label %364

364:                                              ; preds = %357
  %365 = bitcast %"union.absl::container_internal::map_slot_type.157"* %359 to i8*
  %366 = bitcast %"class.std::__1::basic_string"* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 24, i1 false) #14, !noalias !55
  br label %373

367:                                              ; preds = %357
  %368 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %359, i64 0, i32 0, i32 0
  %369 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %351, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load i8*, i8** %369, align 8, !noalias !55
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %351, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %372 = load i64, i64* %371, align 8, !noalias !55
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %368, i8* %370, i64 %372) #14, !noalias !55
  br label %373

373:                                              ; preds = %367, %364
  %374 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %358, i64 %353, i32 0, i32 1
  %375 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %358, i64 %353, i32 0, i32 1, i32 5, i32 0
  %376 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %374 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %376, i8 -1, i64 20, i1 false) #14, !noalias !55
  store i8 0, i8* %375, align 1, !noalias !55
  %377 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %358, i64 %353, i32 0, i32 1, i32 7
  %378 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %358, i64 %353, i32 0, i32 1, i32 7, i32 7
  %379 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %377 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 -1, i64 28, i1 false) #14, !noalias !55
  store i32 5126, i32* %378, align 4, !noalias !55
  %380 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %358, i64 %353, i32 0, i32 1, i32 7, i32 8
  %381 = bitcast %"class.std::__1::vector.145"* %380 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 53, i1 false) #14, !noalias !55
  br label %382

382:                                              ; preds = %373, %350
  %383 = load i8*, i8** %345, align 8, !noalias !55
  %384 = getelementptr inbounds i8, i8* %383, i64 %353
  %385 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %344, align 8, !noalias !55
  %386 = icmp ne i8* %384, null
  call void @llvm.assume(i1 %386) #14, !noalias !55
  %387 = load i8, i8* %384, align 1
  %388 = icmp sgt i8 %387, -1
  br i1 %388, label %390, label %389, !prof !2

389:                                              ; preds = %382
  call void @llvm.trap() #14
  unreachable

390:                                              ; preds = %382
  %391 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %385, i64 %353, i32 0, i32 1, i32 5, i32 0
  %392 = load i8, i8* %391, align 1
  %393 = or i8 %392, %349
  store i8 %393, i8* %391, align 1
  %394 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %385, i64 %353, i32 0, i32 1, i32 10
  store i8 1, i8* %394, align 1
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %351, i64 1
  %396 = icmp eq %"class.std::__1::basic_string"* %395, %339
  br i1 %396, label %397, label %350

397:                                              ; preds = %390, %334, %285
  %398 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #14
  %399 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %400 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %399, i64 0, i32 1, i32 0
  store i8 12, i8* %400, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %398, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i1 false) #14
  %401 = getelementptr inbounds i8, i8* %398, i64 12
  store i8 0, i8* %401, align 4
  %402 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0
  %403 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %402, i64 0, i32 0
  %404 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %403, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #14, !noalias !60
  %405 = extractvalue { i64, i8 } %404, 0
  %406 = extractvalue { i64, i8 } %404, 1
  %407 = and i8 %406, 1
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %432, label %409

409:                                              ; preds = %397
  %410 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0, i32 0, i32 1
  %411 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %410, align 8, !noalias !60
  %412 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %411, i64 %405
  %413 = load i8, i8* %400, align 1, !noalias !60
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %417, label %415

415:                                              ; preds = %409
  %416 = bitcast %"union.absl::container_internal::map_slot_type.157"* %412 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %416, i8* nonnull align 8 %398, i64 24, i1 false) #14, !noalias !60
  br label %423

417:                                              ; preds = %409
  %418 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %412, i64 0, i32 0, i32 0
  %419 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = load i8*, i8** %419, align 8, !noalias !60
  %421 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %422 = load i64, i64* %421, align 8, !noalias !60
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %418, i8* %420, i64 %422) #14, !noalias !60
  br label %423

423:                                              ; preds = %417, %415
  %424 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %411, i64 %405, i32 0, i32 1
  %425 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %411, i64 %405, i32 0, i32 1, i32 5, i32 0
  %426 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %424 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %426, i8 -1, i64 20, i1 false) #14, !noalias !60
  store i8 0, i8* %425, align 1, !noalias !60
  %427 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %411, i64 %405, i32 0, i32 1, i32 7
  %428 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %411, i64 %405, i32 0, i32 1, i32 7, i32 7
  %429 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %427 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %429, i8 -1, i64 28, i1 false) #14, !noalias !60
  store i32 5126, i32* %428, align 4, !noalias !60
  %430 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %411, i64 %405, i32 0, i32 1, i32 7, i32 8
  %431 = bitcast %"class.std::__1::vector.145"* %430 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %431, i8 0, i64 53, i1 false) #14, !noalias !60
  br label %432

432:                                              ; preds = %423, %397
  %433 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %402, i64 0, i32 0, i32 0
  %434 = load i8*, i8** %433, align 8, !noalias !60
  %435 = getelementptr inbounds i8, i8* %434, i64 %405
  %436 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %5, i64 0, i32 0, i32 0, i32 0, i64 %60, i32 0, i32 0, i32 1
  %437 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %436, align 8, !noalias !60
  %438 = icmp ne i8* %435, null
  call void @llvm.assume(i1 %438) #14, !noalias !60
  %439 = load i8, i8* %435, align 1
  %440 = icmp sgt i8 %439, -1
  br i1 %440, label %442, label %441, !prof !2

441:                                              ; preds = %432
  call void @llvm.trap() #14
  unreachable

442:                                              ; preds = %432
  %443 = load i8, i8* %400, align 1
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %448

445:                                              ; preds = %442
  %446 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = load i8*, i8** %446, align 8
  call void @_ZdlPv(i8* %447) #17
  br label %448

448:                                              ; preds = %442, %445
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #14
  %449 = zext i8 %2 to i32
  %450 = shl i32 1, %449
  %451 = trunc i32 %450 to i8
  %452 = and i8 %451, 63
  %453 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %437, i64 %405, i32 0, i32 1, i32 5, i32 0
  %454 = load i8, i8* %453, align 1
  %455 = or i8 %454, %452
  store i8 %455, i8* %453, align 1
  ret void
}

declare zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2gl35ShaderTypeSupportsTransformFeedbackENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx39GlslangAssignTransformFeedbackLocationsEN2gl10ShaderTypeERKNS0_12ProgramStateEbPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(i8 zeroext, %"class.gl::ProgramState"* nocapture readonly dereferenceable(304), i1 zeroext, %"struct.rx::GlslangProgramInterfaceInfo"* nocapture, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  br i1 %2, label %10, label %89

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 26
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 26, i32 0, i32 1
  %13 = bitcast %"struct.gl::TransformFeedbackVarying"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.90"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %89, label %18

18:                                               ; preds = %10, %40
  %19 = phi i64 [ %41, %40 ], [ %16, %10 ]
  %20 = phi i64 [ %42, %40 ], [ %14, %10 ]
  %21 = phi i64 [ %44, %40 ], [ 0, %10 ]
  %22 = phi i32 [ %43, %40 ], [ 0, %10 ]
  %23 = inttoptr i64 %19 to %"struct.gl::TransformFeedbackVarying"*
  %24 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %23, i64 %21, i32 0, i32 3
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %23, i64 %21, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 11
  br i1 %33, label %34, label %40

34:                                               ; preds = %18
  %35 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %24, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %34
  %38 = load i64, i64* %13, align 8
  %39 = load i64, i64* %15, align 8
  br label %40

40:                                               ; preds = %37, %18
  %41 = phi i64 [ %39, %37 ], [ %19, %18 ]
  %42 = phi i64 [ %38, %37 ], [ %20, %18 ]
  %43 = add i32 %22, 1
  %44 = zext i32 %43 to i64
  %45 = sub i64 %42, %41
  %46 = sdiv exact i64 %45, 216
  %47 = icmp ugt i64 %46, %44
  br i1 %47, label %18, label %89

48:                                               ; preds = %34
  %49 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %50 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0)) #14
  %51 = icmp ugt i64 %50, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %53) #18
  unreachable

54:                                               ; preds = %48
  %55 = icmp ult i64 %50, 23
  br i1 %55, label %65, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %50, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #17
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8
  %61 = or i64 %58, -9223372036854775808
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %50, i64* %63, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %70

65:                                               ; preds = %54
  %66 = trunc i64 %50 to i8
  %67 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  store i8 %66, i8* %68, align 1
  %69 = icmp eq i64 %50, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %65, %56
  %71 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %65 ], [ %64, %56 ]
  %72 = phi i8* [ %49, %65 ], [ %59, %56 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %72, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0), i64 %50, i1 false) #14
  br label %73

73:                                               ; preds = %65, %70
  %74 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %65 ], [ %71, %70 ]
  %75 = phi i8* [ %49, %65 ], [ %72, %70 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %50
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %3, i64 0, i32 7
  %78 = load i32, i32* %77, align 4
  %79 = call fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"* %4, i8 zeroext %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 %78, i32 0, i8 zeroext 0, i8 zeroext 0)
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #17
  br label %86

86:                                               ; preds = %73, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %87 = load i32, i32* %77, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %77, align 4
  br label %165

89:                                               ; preds = %40, %10, %5
  %90 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #14
  %91 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0)) #14
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #18
  unreachable

95:                                               ; preds = %89
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %105, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = tail call i8* @_Znwm(i64 %99) #17
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  br label %110

105:                                              ; preds = %95
  %106 = trunc i64 %91 to i8
  %107 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  store i8 %106, i8* %108, align 1
  %109 = icmp eq i64 %91, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %105, %97
  %111 = phi i8* [ %100, %97 ], [ %90, %105 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %111, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0), i64 %91, i1 false) #14
  br label %112

112:                                              ; preds = %105, %110
  %113 = phi i8* [ %90, %105 ], [ %111, %110 ]
  %114 = getelementptr inbounds i8, i8* %113, i64 %91
  store i8 0, i8* %114, align 1
  %115 = zext i8 %0 to i64
  %116 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %4, i64 0, i32 0, i32 0, i32 0, i64 %115, i32 0
  %117 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %116, i64 0, i32 0
  %118 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %117, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #14, !noalias !65
  %119 = extractvalue { i64, i8 } %118, 0
  %120 = extractvalue { i64, i8 } %118, 1
  %121 = and i8 %120, 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %148, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %4, i64 0, i32 0, i32 0, i32 0, i64 %115, i32 0, i32 0, i32 1
  %125 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %124, align 8, !noalias !65
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 %119
  %127 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1, !noalias !65
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %123
  %132 = bitcast %"union.absl::container_internal::map_slot_type.157"* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %90, i64 24, i1 false) #14, !noalias !65
  br label %139

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %126, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8, !noalias !65
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8, !noalias !65
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %134, i8* %136, i64 %138) #14, !noalias !65
  br label %139

139:                                              ; preds = %133, %131
  %140 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 %119, i32 0, i32 1
  %141 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 %119, i32 0, i32 1, i32 5, i32 0
  %142 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 -1, i64 20, i1 false) #14, !noalias !65
  store i8 0, i8* %141, align 1, !noalias !65
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 %119, i32 0, i32 1, i32 7
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 %119, i32 0, i32 1, i32 7, i32 7
  %145 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 -1, i64 28, i1 false) #14, !noalias !65
  store i32 5126, i32* %144, align 4, !noalias !65
  %146 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 %119, i32 0, i32 1, i32 7, i32 8
  %147 = bitcast %"class.std::__1::vector.145"* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 53, i1 false) #14, !noalias !65
  br label %148

148:                                              ; preds = %139, %112
  %149 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %116, i64 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8, !noalias !65
  %151 = getelementptr inbounds i8, i8* %150, i64 %119
  %152 = icmp ne i8* %151, null
  call void @llvm.assume(i1 %152) #14, !noalias !65
  %153 = load i8, i8* %151, align 1
  %154 = icmp sgt i8 %153, -1
  br i1 %154, label %156, label %155, !prof !2

155:                                              ; preds = %148
  call void @llvm.trap() #14
  unreachable

156:                                              ; preds = %148
  %157 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %163) #17
  br label %164

164:                                              ; preds = %156, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #14
  br label %165

165:                                              ; preds = %164, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx12_GLOBAL__N_115AddLocationInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjjhh(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 {
  %8 = zext i8 %1 to i64
  %9 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %8, i32 0
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %9, i64 0, i32 0
  %11 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %10, %"class.std::__1::basic_string"* dereferenceable(24) %2) #14, !noalias !70
  %12 = extractvalue { i64, i8 } %11, 0
  %13 = extractvalue { i64, i8 } %11, 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %42, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %8, i32 0, i32 0, i32 1
  %18 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %17, align 8, !noalias !70
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %18, i64 %12
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !70
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = bitcast %"union.absl::container_internal::map_slot_type.157"* %19 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #14, !noalias !70
  br label %33

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %19, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8, !noalias !70
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !noalias !70
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %30, i64 %32) #14, !noalias !70
  br label %33

33:                                               ; preds = %27, %24
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %18, i64 %12, i32 0, i32 1
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %18, i64 %12, i32 0, i32 1, i32 5, i32 0
  %36 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 -1, i64 20, i1 false) #14, !noalias !70
  store i8 0, i8* %35, align 1, !noalias !70
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %18, i64 %12, i32 0, i32 1, i32 7
  %38 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %18, i64 %12, i32 0, i32 1, i32 7, i32 7
  %39 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 -1, i64 28, i1 false) #14, !noalias !70
  store i32 5126, i32* %38, align 4, !noalias !70
  %40 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %18, i64 %12, i32 0, i32 1, i32 7, i32 8
  %41 = bitcast %"class.std::__1::vector.145"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 53, i1 false) #14, !noalias !70
  br label %42

42:                                               ; preds = %33, %7
  %43 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %9, i64 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8, !noalias !70
  %45 = getelementptr inbounds i8, i8* %44, i64 %12
  %46 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %8, i32 0, i32 0, i32 1
  %47 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %46, align 8, !noalias !70
  %48 = icmp ne i8* %45, null
  tail call void @llvm.assume(i1 %48) #14, !noalias !70
  %49 = load i8, i8* %45, align 1
  %50 = icmp sgt i8 %49, -1
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #14
  unreachable

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %47, i64 %12, i32 0, i32 1
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %47, i64 %12, i32 0, i32 1, i32 2
  store i32 %3, i32* %54, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %47, i64 %12, i32 0, i32 1, i32 3
  store i32 %4, i32* %55, align 4
  %56 = zext i8 %1 to i32
  %57 = shl i32 1, %56
  %58 = trunc i32 %57 to i8
  %59 = and i8 %58, 63
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %47, i64 %12, i32 0, i32 1, i32 5, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = or i8 %61, %59
  store i8 %62, i8* %60, align 1
  %63 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %47, i64 %12, i32 0, i32 1, i32 12
  store i8 %5, i8* %63, align 1
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %47, i64 %12, i32 0, i32 1, i32 13
  store i8 %6, i8* %64, align 4
  ret %"struct.rx::ShaderInterfaceVariableInfo"* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx25GlslangGetShaderSpirvCodeERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_22ProgramLinkedResourcesEPNS_27GlslangProgramInterfaceInfoEPN5angle13PackedEnumMapINS3_10ShaderTypeEPKNSt3__16vectorIjNSF_9allocatorIjEEEELm6EEEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* nocapture readonly dereferenceable(4), %"class.gl::ProgramState"* dereferenceable(304), %"struct.gl::ProgramLinkedResources"* dereferenceable(2392), %"struct.rx::GlslangProgramInterfaceInfo"* nocapture, %"class.angle::PackedEnumMap.201"* nocapture, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #0 {
  %7 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 0) #14
  %8 = icmp eq %"class.gl::Shader"* %7, null
  br i1 %8, label %15, label %13

9:                                                ; preds = %120
  %10 = zext i8 %133 to i32
  %11 = tail call i32 @llvm.cttz.i32(i32 %10, i1 true) #14, !range !14
  %12 = getelementptr inbounds %"struct.rx::GlslangSourceOptions", %"struct.rx::GlslangSourceOptions"* %0, i64 0, i32 0
  br label %38

13:                                               ; preds = %6
  %14 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"* nonnull %7) #14
  br label %15

15:                                               ; preds = %6, %13
  %16 = phi %"class.std::__1::vector"* [ %14, %13 ], [ null, %6 ]
  %17 = getelementptr inbounds %"class.angle::PackedEnumMap.201", %"class.angle::PackedEnumMap.201"* %4, i64 0, i32 0, i32 0, i64 0
  store %"class.std::__1::vector"* %16, %"class.std::__1::vector"** %17, align 8
  %18 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 1) #14
  %19 = icmp eq %"class.gl::Shader"* %18, null
  br i1 %19, label %92, label %90

20:                                               ; preds = %57
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %124, align 8
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 55
  %23 = load i8, i8* %22, align 4, !range !22
  br label %24

24:                                               ; preds = %120, %20
  %25 = phi i8 [ %23, %20 ], [ %127, %120 ]
  %26 = phi %"class.gl::ProgramExecutable"* [ %21, %20 ], [ %125, %120 ]
  %27 = icmp eq i8 %25, 0
  %28 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %26, i64 0, i32 3
  %29 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %26, i64 0, i32 2
  %30 = select i1 %27, %"class.angle::BitSetT.62"* %29, %"class.angle::BitSetT.62"* %28
  %31 = getelementptr inbounds %"class.angle::BitSetT.62", %"class.angle::BitSetT.62"* %30, i64 0, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !75
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %66, label %34

34:                                               ; preds = %24
  %35 = zext i8 %32 to i32
  %36 = tail call i32 @llvm.cttz.i32(i32 %35, i1 true) #14, !range !14
  %37 = getelementptr inbounds %"struct.gl::ProgramLinkedResources", %"struct.gl::ProgramLinkedResources"* %2, i64 0, i32 0
  br label %67

38:                                               ; preds = %63, %9
  %39 = phi i8 [ %133, %9 ], [ %61, %63 ]
  %40 = phi i32 [ %11, %9 ], [ %65, %63 ]
  %41 = trunc i32 %40 to i8
  %42 = icmp eq i8 %123, %41
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %124, align 8
  %45 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %44, i64 0, i32 26, i32 0, i32 0
  %46 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %45, align 8
  %47 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %44, i64 0, i32 26, i32 0, i32 1
  %48 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %47, align 8
  %49 = icmp ne %"struct.gl::TransformFeedbackVarying"* %46, %48
  br label %50

50:                                               ; preds = %43, %38
  %51 = phi i1 [ false, %38 ], [ %49, %43 ]
  %52 = load i8, i8* %12, align 1, !range !22
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZN2gl35ShaderTypeSupportsTransformFeedbackENS_10ShaderTypeE(i8 zeroext %41) #14
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @_ZN2rx39GlslangAssignTransformFeedbackLocationsEN2gl10ShaderTypeERKNS0_12ProgramStateEbPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(i8 zeroext %41, %"class.gl::ProgramState"* dereferenceable(304) %1, i1 zeroext %51, %"struct.rx::GlslangProgramInterfaceInfo"* %3, %"class.rx::ShaderInterfaceVariableInfoMap"* %5)
  br label %57

57:                                               ; preds = %50, %56, %54
  %58 = shl i32 1, %40
  %59 = trunc i32 %58 to i8
  %60 = xor i8 %59, -1
  %61 = and i8 %39, %60
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %20, label %63

63:                                               ; preds = %57
  %64 = zext i8 %61 to i32
  %65 = tail call i32 @llvm.cttz.i32(i32 %64, i1 true) #14, !range !14
  br label %38

66:                                               ; preds = %80, %24
  ret void

67:                                               ; preds = %87, %34
  %68 = phi i8 [ 6, %34 ], [ %71, %87 ]
  %69 = phi i8 [ %32, %34 ], [ %85, %87 ]
  %70 = phi i32 [ %36, %34 ], [ %89, %87 ]
  %71 = trunc i32 %70 to i8
  %72 = icmp eq i8 %123, %71
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %124, align 8
  %75 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %74, i64 0, i32 26, i32 0, i32 0
  %76 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %75, align 8
  %77 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %74, i64 0, i32 26, i32 0, i32 1
  %78 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %77, align 8
  %79 = icmp ne %"struct.gl::TransformFeedbackVarying"* %76, %78
  br label %80

80:                                               ; preds = %73, %67
  %81 = phi i1 [ false, %67 ], [ %79, %73 ]
  tail call void @_ZN2rx22GlslangAssignLocationsERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_21ProgramVaryingPackingENS3_10ShaderTypeESA_bPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* dereferenceable(4) %0, %"class.gl::ProgramState"* dereferenceable(304) %1, %"class.gl::ProgramVaryingPacking"* dereferenceable(2176) %37, i8 zeroext %71, i8 zeroext %68, i1 zeroext %81, %"struct.rx::GlslangProgramInterfaceInfo"* %3, %"class.rx::ShaderInterfaceVariableInfoMap"* %5)
  %82 = shl i32 1, %70
  %83 = trunc i32 %82 to i8
  %84 = xor i8 %83, -1
  %85 = and i8 %69, %84
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %66, label %87

87:                                               ; preds = %80
  %88 = zext i8 %85 to i32
  %89 = tail call i32 @llvm.cttz.i32(i32 %88, i1 true) #14, !range !14
  br label %67

90:                                               ; preds = %15
  %91 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"* nonnull %18) #14
  br label %92

92:                                               ; preds = %90, %15
  %93 = phi %"class.std::__1::vector"* [ %91, %90 ], [ null, %15 ]
  %94 = getelementptr inbounds %"class.angle::PackedEnumMap.201", %"class.angle::PackedEnumMap.201"* %4, i64 0, i32 0, i32 0, i64 1
  store %"class.std::__1::vector"* %93, %"class.std::__1::vector"** %94, align 8
  %95 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 2) #14
  %96 = icmp eq %"class.gl::Shader"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"* nonnull %95) #14
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi %"class.std::__1::vector"* [ %98, %97 ], [ null, %92 ]
  %101 = getelementptr inbounds %"class.angle::PackedEnumMap.201", %"class.angle::PackedEnumMap.201"* %4, i64 0, i32 0, i32 0, i64 2
  store %"class.std::__1::vector"* %100, %"class.std::__1::vector"** %101, align 8
  %102 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 3) #14
  %103 = icmp eq %"class.gl::Shader"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"* nonnull %102) #14
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi %"class.std::__1::vector"* [ %105, %104 ], [ null, %99 ]
  %108 = getelementptr inbounds %"class.angle::PackedEnumMap.201", %"class.angle::PackedEnumMap.201"* %4, i64 0, i32 0, i32 0, i64 3
  store %"class.std::__1::vector"* %107, %"class.std::__1::vector"** %108, align 8
  %109 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 4) #14
  %110 = icmp eq %"class.gl::Shader"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  %112 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"* nonnull %109) #14
  br label %113

113:                                              ; preds = %111, %106
  %114 = phi %"class.std::__1::vector"* [ %112, %111 ], [ null, %106 ]
  %115 = getelementptr inbounds %"class.angle::PackedEnumMap.201", %"class.angle::PackedEnumMap.201"* %4, i64 0, i32 0, i32 0, i64 4
  store %"class.std::__1::vector"* %114, %"class.std::__1::vector"** %115, align 8
  %116 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext 5) #14
  %117 = icmp eq %"class.gl::Shader"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"* nonnull %116) #14
  br label %120

120:                                              ; preds = %118, %113
  %121 = phi %"class.std::__1::vector"* [ %119, %118 ], [ null, %113 ]
  %122 = getelementptr inbounds %"class.angle::PackedEnumMap.201", %"class.angle::PackedEnumMap.201"* %4, i64 0, i32 0, i32 0, i64 5
  store %"class.std::__1::vector"* %121, %"class.std::__1::vector"** %122, align 8
  %123 = tail call zeroext i8 @_ZNK2gl12ProgramState33getAttachedTransformFeedbackStageEv(%"class.gl::ProgramState"* %1) #14
  %124 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %125 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %124, align 8
  %126 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %125, i64 0, i32 55
  %127 = load i8, i8* %126, align 4, !range !22
  %128 = icmp eq i8 %127, 0
  %129 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %125, i64 0, i32 3
  %130 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %125, i64 0, i32 2
  %131 = select i1 %128, %"class.angle::BitSetT.62"* %130, %"class.angle::BitSetT.62"* %129
  %132 = getelementptr inbounds %"class.angle::BitSetT.62", %"class.angle::BitSetT.62"* %131, i64 0, i32 0
  %133 = load i8, i8* %132, align 1, !noalias !78
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %24, label %9
}

declare %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"*, i8 zeroext) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN2gl6Shader17getCompiledBinaryEv(%"class.gl::Shader"*) local_unnamed_addr #4

declare zeroext i8 @_ZNK2gl12ProgramState33getAttachedTransformFeedbackStageEv(%"class.gl::ProgramState"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx25GlslangTransformSpirvCodeERKNS_19GlslangSpirvOptionsERKNS_30ShaderInterfaceVariableInfoMapERKNSt3__16vectorIjNS6_9allocatorIjEEEEPSA_(%"struct.rx::GlslangSpirvOptions"* nocapture readonly dereferenceable(16), %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #2 {
  %5 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %6 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.angle::FastVector.271", align 8
  %11 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %"class.angle::FastVector.278", align 8
  %16 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %19 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %20 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %21 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %22 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %23 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %24 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %25 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %26 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %27 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %28 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %29 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %30 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %31 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %32 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %33 = alloca %"class.angle::FastVector.278", align 8
  %34 = alloca %"class.angle::FastVector.278", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %38 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %39 = alloca i32, align 4
  %40 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %41 = alloca %"struct.rx::ShaderInterfaceVariableInfo"*, align 8
  %42 = alloca %"struct.rx::ShaderInterfaceVariableInfo"*, align 8
  %43 = alloca %"class.rx::(anonymous namespace)::SpirvTransformer", align 8
  %44 = alloca %"class.std::__1::vector", align 16
  %45 = alloca %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", align 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %47, %49
  br i1 %50, label %1693, label %51

51:                                               ; preds = %4
  %52 = bitcast %"class.rx::(anonymous namespace)::SpirvTransformer"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 656, i8* nonnull %52) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 656, i1 false)
  %53 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 0
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** %53, align 8
  %54 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 1
  store %"class.rx::ShaderInterfaceVariableInfoMap"* %1, %"class.rx::ShaderInterfaceVariableInfoMap"** %54, align 8
  %55 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* %3, %"class.std::__1::vector"** %55, align 8
  %56 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 3
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 4
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 5
  %59 = bitcast %"class.std::__1::vector.203"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #14
  %60 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6
  %61 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 5, i32 0
  %62 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 -1, i64 20, i1 false) #14
  %63 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 7
  %64 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 7, i32 7
  %65 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %64, align 4
  %66 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 7, i32 8
  %67 = bitcast %"class.std::__1::vector.145"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 53, i1 false) #14
  store i8 63, i8* %61, align 4
  %68 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 4 %69, i64 16, i1 false) #14
  %70 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 2
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 3, i32 0, i32 0
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 4, i32 0, i32 0
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 6
  %74 = bitcast %"class.rx::(anonymous namespace)::SpirvIDDiscoverer"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 100, i1 false) #14
  %75 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 8
  %76 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %0, i64 0, i32 8
  %77 = bitcast %"class.rx::(anonymous namespace)::SpirvInactiveVaryingRemover"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 96, i1 false) #14
  %78 = load i8, i8* %76, align 1, !range !22
  %79 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 0
  store i8 %78, i8* %79, align 8
  %80 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 1
  store i8 0, i8* %80, align 1
  %81 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 2, i32 0, i32 0
  %82 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 17, i32 1
  %83 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 17, i32 0, i32 0, i64 0
  %84 = bitcast i32* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 100, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %83, %"class.angle::spirv::BoxedUint32"** %82, align 8
  %85 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 17, i32 2
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %86, align 8
  %87 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18
  %88 = bitcast %"struct.std::__1::array.232"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 96, i1 false) #14
  %89 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 11, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 4 %69, i64 16, i1 false) #14
  call fastcc void @_ZN2rx12_GLOBAL__N_116SpirvTransformer9transformEv(%"class.rx::(anonymous namespace)::SpirvTransformer"* nonnull %43)
  %90 = load i8, i8* %69, align 4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %1531

92:                                               ; preds = %51
  %93 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %1, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8, !noalias !81, !nonnull !84
  %95 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %1, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i32 1
  %96 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %95, align 8, !noalias !81
  %97 = load i8, i8* %94, align 1, !noalias !81
  %98 = icmp slt i8 %97, -1
  br i1 %98, label %99, label %114

99:                                               ; preds = %92, %99
  %100 = phi %"union.absl::container_internal::map_slot_type.157"* [ %111, %99 ], [ %96, %92 ]
  %101 = phi i8* [ %110, %99 ], [ %94, %92 ]
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !noalias !81
  %104 = icmp slt <16 x i8> %103, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %105 = bitcast <16 x i1> %104 to i16
  %106 = zext i16 %105 to i32
  %107 = add nuw nsw i32 %106, 1
  %108 = call i32 @llvm.cttz.i32(i32 %107, i1 true) #14, !range !14
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %101, i64 %109
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %100, i64 %109
  %112 = load i8, i8* %110, align 1, !noalias !81
  %113 = icmp slt i8 %112, -1
  br i1 %113, label %99, label %114

114:                                              ; preds = %99, %92
  %115 = phi %"union.absl::container_internal::map_slot_type.157"* [ %96, %92 ], [ %111, %99 ]
  %116 = phi i8* [ %94, %92 ], [ %110, %99 ]
  %117 = phi i8 [ %97, %92 ], [ %112, %99 ]
  %118 = icmp eq i8 %117, -1
  %119 = icmp eq i8* %116, null
  %120 = or i1 %119, %118
  br i1 %120, label %1531, label %121

121:                                              ; preds = %114
  %122 = icmp sgt i8 %117, -1
  br i1 %122, label %124, label %123, !prof !2

123:                                              ; preds = %181, %121
  call void @llvm.trap() #14
  unreachable

124:                                              ; preds = %121, %181
  %125 = phi %"union.absl::container_internal::map_slot_type.157"* [ %175, %181 ], [ %115, %121 ]
  %126 = phi i8* [ %179, %181 ], [ %116, %121 ]
  %127 = phi i64 [ %154, %181 ], [ 0, %121 ]
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 0, i32 0, i32 1, i32 12
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %153, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 0, i32 0, i32 1, i32 13
  %133 = load i8, i8* %132, align 4
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %153, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 0, i32 0, i32 1, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = zext i8 %133 to i64
  br label %139

139:                                              ; preds = %148, %135
  %140 = phi i64 [ 0, %135 ], [ %151, %148 ]
  %141 = phi i64 [ %127, %135 ], [ %150, %148 ]
  %142 = trunc i64 %140 to i32
  %143 = add i32 %137, %142
  %144 = zext i32 %143 to i64
  %145 = shl i64 1, %144
  %146 = and i64 %145, %141
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %184

148:                                              ; preds = %139
  %149 = and i64 %145, 65535
  %150 = or i64 %149, %141
  %151 = add nuw nsw i64 %140, 1
  %152 = icmp eq i64 %151, %138
  br i1 %152, label %153, label %139

153:                                              ; preds = %148, %131, %124
  %154 = phi i64 [ %127, %124 ], [ %127, %131 ], [ %150, %148 ]
  %155 = getelementptr inbounds i8, i8* %126, i64 1
  %156 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %125, i64 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp slt i8 %157, -1
  br i1 %158, label %159, label %174

159:                                              ; preds = %153, %159
  %160 = phi %"union.absl::container_internal::map_slot_type.157"* [ %171, %159 ], [ %156, %153 ]
  %161 = phi i8* [ %170, %159 ], [ %155, %153 ]
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1
  %164 = icmp slt <16 x i8> %163, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %165 = bitcast <16 x i1> %164 to i16
  %166 = zext i16 %165 to i32
  %167 = add nuw nsw i32 %166, 1
  %168 = call i32 @llvm.cttz.i32(i32 %167, i1 true) #14, !range !14
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %161, i64 %169
  %171 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %160, i64 %169
  %172 = load i8, i8* %170, align 1
  %173 = icmp slt i8 %172, -1
  br i1 %173, label %159, label %174

174:                                              ; preds = %159, %153
  %175 = phi %"union.absl::container_internal::map_slot_type.157"* [ %156, %153 ], [ %171, %159 ]
  %176 = phi i8* [ %155, %153 ], [ %170, %159 ]
  %177 = phi i8 [ %157, %153 ], [ %172, %159 ]
  %178 = icmp eq i8 %177, -1
  %179 = select i1 %178, i8* null, i8* %176, !prof !3
  %180 = icmp eq i8* %179, null
  br i1 %180, label %1531, label %181

181:                                              ; preds = %174
  %182 = load i8, i8* %179, align 1
  %183 = icmp sgt i8 %182, -1
  br i1 %183, label %124, label %123, !prof !2

184:                                              ; preds = %139
  %185 = bitcast %"class.std::__1::vector"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #14
  %186 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 1
  %188 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 2, i32 0, i32 0
  %189 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8
  %191 = bitcast i32** %187 to i64*
  %192 = bitcast %"class.std::__1::vector"* %44 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %192, align 16
  %193 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %194 = bitcast i32** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast i32** %188 to i64*
  store i64 %195, i64* %196, align 16
  %197 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 24, i1 false) #14
  %198 = bitcast %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 848, i8* nonnull %198) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 -86, i64 848, i1 false)
  %199 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 0
  store %"class.std::__1::vector"* %44, %"class.std::__1::vector"** %199, align 8
  %200 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 1
  store %"class.rx::ShaderInterfaceVariableInfoMap"* %1, %"class.rx::ShaderInterfaceVariableInfoMap"** %200, align 8
  %201 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* %3, %"class.std::__1::vector"** %201, align 8
  %202 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 3
  store i64 0, i64* %202, align 8
  %203 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 4
  store i8 0, i8* %203, align 8
  %204 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 5
  %205 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6
  %206 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 5, i32 0
  %207 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 -1, i64 20, i1 false) #14
  %208 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 7
  %209 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 7, i32 7
  %210 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %209, align 4
  %211 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 7, i32 8
  %212 = bitcast %"class.std::__1::vector.145"* %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 53, i1 false) #14
  store i8 63, i8* %206, align 4
  %213 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %213, align 8
  %214 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 0, i32 1
  %215 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 1, i32 1
  %216 = bitcast %"class.std::__1::vector.223"* %214 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 28, i1 false) #14
  %217 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 2, i32 1
  %218 = bitcast %"class.std::__1::vector.223"* %215 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 28, i1 false) #14
  %219 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 3, i32 1
  %220 = bitcast %"class.std::__1::vector.223"* %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 28, i1 false) #14
  %221 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 4, i32 1
  %222 = bitcast %"class.std::__1::vector.223"* %219 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %222, i8 0, i64 28, i1 false) #14
  %223 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 5, i32 1
  %224 = bitcast %"class.std::__1::vector.223"* %221 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 28, i1 false) #14
  %225 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 6, i32 1
  %226 = bitcast %"class.std::__1::vector.223"* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 28, i1 false) #14
  %227 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 7, i32 1
  %228 = bitcast %"class.std::__1::vector.223"* %225 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 28, i1 false) #14
  %229 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 8, i32 1
  %230 = bitcast %"class.std::__1::vector.223"* %227 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 28, i1 false) #14
  %231 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 9, i32 1
  %232 = bitcast %"class.std::__1::vector.223"* %229 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 28, i1 false) #14
  %233 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 10, i32 1
  %234 = bitcast %"class.std::__1::vector.223"* %231 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 28, i1 false) #14
  %235 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 11, i32 1
  %236 = bitcast %"class.std::__1::vector.223"* %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %236, i8 0, i64 28, i1 false) #14
  %237 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 12, i32 1
  %238 = bitcast %"class.std::__1::vector.223"* %235 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 28, i1 false) #14
  %239 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 13, i32 1
  %240 = bitcast %"class.std::__1::vector.223"* %237 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 28, i1 false) #14
  %241 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 14, i32 1
  %242 = bitcast %"class.std::__1::vector.223"* %239 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 28, i1 false) #14
  %243 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 15, i32 1
  %244 = bitcast %"class.std::__1::vector.223"* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %244, i8 0, i64 28, i1 false) #14
  %245 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 7, i32 0, i32 0
  %246 = bitcast %"class.std::__1::vector.223"* %243 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 74, i1 false) #14
  %247 = bitcast i32* %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %247, i8 0, i64 104, i1 false) #14
  %248 = bitcast %"class.std::__1::vector.203"* %204 to i64*
  %249 = bitcast %"class.std::__1::vector.203"* %58 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 8
  %251 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 5, i32 0, i32 1
  %252 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %251 to i64*
  %253 = bitcast %"class.std::__1::vector.203"* %204 to <2 x i64>*
  store <2 x i64> %250, <2 x i64>* %253, align 8
  %254 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %255 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %258 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %257 to i64*
  store i64 %256, i64* %258, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #14
  %259 = load i32*, i32** %186, align 16
  %260 = getelementptr inbounds i32, i32* %259, i64 5
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %3, i32* %259, i32* %260) #14
  store i64 5, i64* %202, align 8
  %261 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %199, align 8
  %262 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %261, i64 0, i32 0, i32 0
  %263 = load i32*, i32** %262, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 3
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i64
  %267 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #14
  store %"struct.rx::ShaderInterfaceVariableInfo"* null, %"struct.rx::ShaderInterfaceVariableInfo"** %41, align 8
  %268 = load i64, i64* %252, align 8
  %269 = load i64, i64* %248, align 8
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 3
  %272 = icmp ult i64 %271, %266
  %273 = inttoptr i64 %269 to %"struct.rx::ShaderInterfaceVariableInfo"**
  br i1 %272, label %274, label %276

274:                                              ; preds = %184
  %275 = sub nsw i64 %266, %271
  call void @_ZNSt3__16vectorIPKN2rx27ShaderInterfaceVariableInfoENS_9allocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.203"* %204, i64 %275, %"struct.rx::ShaderInterfaceVariableInfo"** nonnull dereferenceable(8) %41) #14
  br label %280

276:                                              ; preds = %184
  %277 = icmp ugt i64 %271, %266
  br i1 %277, label %278, label %280

278:                                              ; preds = %276
  %279 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %273, i64 %266
  store %"struct.rx::ShaderInterfaceVariableInfo"** %279, %"struct.rx::ShaderInterfaceVariableInfo"*** %251, align 8
  br label %280

280:                                              ; preds = %278, %276, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #14
  %281 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 2
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.217"* %281, i64 %266, i1 zeroext false) #14
  %282 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 3
  %283 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 3, i32 0, i32 1
  %284 = bitcast %"class.angle::spirv::BoxedUint32"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector.223"* %282 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = sub i64 %285, %287
  %289 = ashr exact i64 %288, 2
  %290 = icmp ult i64 %289, %266
  %291 = inttoptr i64 %287 to %"class.angle::spirv::BoxedUint32"*
  br i1 %290, label %292, label %294

292:                                              ; preds = %280
  %293 = sub nsw i64 %266, %289
  call void @_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.223"* %282, i64 %293) #14
  br label %298

294:                                              ; preds = %280
  %295 = icmp ugt i64 %289, %266
  br i1 %295, label %296, label %298

296:                                              ; preds = %294
  %297 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %291, i64 %266
  store %"class.angle::spirv::BoxedUint32"* %297, %"class.angle::spirv::BoxedUint32"** %283, align 8
  br label %298

298:                                              ; preds = %296, %294, %292
  %299 = icmp ugt i32 %265, 1
  br i1 %299, label %300, label %452

300:                                              ; preds = %298
  %301 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %204, i64 0, i32 0, i32 0
  %302 = getelementptr inbounds %"class.std::__1::vector.223", %"class.std::__1::vector.223"* %282, i64 0, i32 0, i32 0
  %303 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %42 to i8*
  %304 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %281, i64 0, i32 0
  br label %305

305:                                              ; preds = %449, %300
  %306 = phi i64 [ 1, %300 ], [ %450, %449 ]
  %307 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %301, align 8
  %308 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %307, i64 %306
  %309 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %308, align 8
  %310 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %309, null
  br i1 %310, label %449, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %309, i64 0, i32 12
  %313 = load i8, i8* %312, align 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %449, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %309, i64 0, i32 13
  %317 = load i8, i8* %316, align 4
  %318 = icmp ugt i8 %317, 1
  %319 = icmp eq i8 %317, 0
  br i1 %319, label %449, label %320

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %309, i64 0, i32 2
  %322 = trunc i64 %306 to i32
  br label %323

323:                                              ; preds = %444, %320
  %324 = phi i32 [ 0, %320 ], [ %445, %444 ]
  %325 = load i32, i32* %321, align 8
  %326 = add i32 %325, %324
  br i1 %318, label %327, label %357

327:                                              ; preds = %323
  %328 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %329 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %328, i64 0, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 3
  %332 = load i32, i32* %331, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %331, align 4
  %334 = icmp eq i32 %324, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %302, align 8
  %337 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %336, i64 %306, i32 0, i32 0
  store i32 %332, i32* %337, align 4
  br label %338

338:                                              ; preds = %335, %327
  %339 = zext i32 %333 to i64
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.217"* %281, i64 %339, i1 zeroext false) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #14
  store %"struct.rx::ShaderInterfaceVariableInfo"* null, %"struct.rx::ShaderInterfaceVariableInfo"** %42, align 8
  %340 = load i64, i64* %252, align 8
  %341 = load i64, i64* %248, align 8
  %342 = sub i64 %340, %341
  %343 = ashr exact i64 %342, 3
  %344 = icmp ult i64 %343, %339
  %345 = inttoptr i64 %341 to %"struct.rx::ShaderInterfaceVariableInfo"**
  br i1 %344, label %346, label %349

346:                                              ; preds = %338
  %347 = sub nsw i64 %339, %343
  call void @_ZNSt3__16vectorIPKN2rx27ShaderInterfaceVariableInfoENS_9allocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.203"* %204, i64 %347, %"struct.rx::ShaderInterfaceVariableInfo"** nonnull dereferenceable(8) %42) #14
  %348 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %301, align 8
  br label %353

349:                                              ; preds = %338
  %350 = icmp ugt i64 %343, %339
  br i1 %350, label %351, label %353

351:                                              ; preds = %349
  %352 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %345, i64 %339
  store %"struct.rx::ShaderInterfaceVariableInfo"** %352, %"struct.rx::ShaderInterfaceVariableInfo"*** %251, align 8
  br label %353

353:                                              ; preds = %351, %349, %346
  %354 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %348, %346 ], [ %345, %349 ], [ %345, %351 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #14
  %355 = zext i32 %332 to i64
  %356 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %354, i64 %355
  store %"struct.rx::ShaderInterfaceVariableInfo"* %309, %"struct.rx::ShaderInterfaceVariableInfo"** %356, align 8
  br label %357

357:                                              ; preds = %353, %323
  %358 = phi i32 [ %332, %353 ], [ %322, %323 ]
  %359 = zext i32 %326 to i64
  %360 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %359, i32 0, i32 0, i32 0
  %361 = load i32, i32* %360, align 8
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %364

363:                                              ; preds = %357
  store i32 %358, i32* %360, align 8
  br label %444

364:                                              ; preds = %357
  %365 = zext i32 %361 to i64
  %366 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %301, align 8
  %367 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %366, i64 %365
  %368 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %367, align 8
  %369 = load i8, i8* %312, align 1
  %370 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %368, i64 0, i32 12
  %371 = load i8, i8* %370, align 1
  %372 = icmp ugt i8 %369, %371
  br i1 %372, label %373, label %374

373:                                              ; preds = %364
  store i32 %358, i32* %360, align 8
  br label %374

374:                                              ; preds = %373, %364
  %375 = phi i32 [ %361, %373 ], [ %358, %364 ]
  %376 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %359, i32 1
  %377 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %359, i32 1, i32 0, i32 1
  %378 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %377, align 8
  %379 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %359, i32 1, i32 0, i32 2, i32 0, i32 0
  %380 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %379, align 8
  %381 = icmp eq %"class.angle::spirv::BoxedUint32"* %378, %380
  %382 = ptrtoint %"class.angle::spirv::BoxedUint32"* %380 to i64
  br i1 %381, label %388, label %383

383:                                              ; preds = %374
  %384 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %378, i64 0, i32 0, i32 0
  store i32 %375, i32* %384, align 4
  %385 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %378, i64 1
  %386 = ptrtoint %"class.angle::spirv::BoxedUint32"* %385 to i64
  %387 = bitcast %"class.angle::spirv::BoxedUint32"** %377 to i64*
  store i64 %386, i64* %387, align 8
  br label %435

388:                                              ; preds = %374
  %389 = ptrtoint %"class.angle::spirv::BoxedUint32"* %378 to i64
  %390 = bitcast %"class.angle::spirv::BoxedUint32"** %377 to i64*
  %391 = bitcast %"class.std::__1::vector.223"* %376 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = sub i64 %389, %392
  %394 = ashr exact i64 %393, 2
  %395 = add nsw i64 %394, 1
  %396 = icmp ugt i64 %395, 4611686018427387903
  br i1 %396, label %397, label %399

397:                                              ; preds = %388
  %398 = bitcast %"class.std::__1::vector.223"* %376 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %398) #18
  unreachable

399:                                              ; preds = %388
  %400 = bitcast %"class.angle::spirv::BoxedUint32"** %379 to i64*
  %401 = sub i64 %382, %392
  %402 = ashr exact i64 %401, 2
  %403 = icmp ult i64 %402, 2305843009213693951
  br i1 %403, label %404, label %412

404:                                              ; preds = %399
  %405 = ashr exact i64 %401, 1
  %406 = icmp ult i64 %405, %395
  %407 = select i1 %406, i64 %395, i64 %405
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %417, label %409

409:                                              ; preds = %404
  %410 = icmp ugt i64 %407, 4611686018427387903
  br i1 %410, label %411, label %412

411:                                              ; preds = %409
  call void @abort() #18
  unreachable

412:                                              ; preds = %409, %399
  %413 = phi i64 [ %407, %409 ], [ 4611686018427387903, %399 ]
  %414 = shl i64 %413, 2
  %415 = call i8* @_Znwm(i64 %414) #17
  %416 = bitcast i8* %415 to %"class.angle::spirv::BoxedUint32"*
  br label %417

417:                                              ; preds = %412, %404
  %418 = phi i64 [ %413, %412 ], [ 0, %404 ]
  %419 = phi i8* [ %415, %412 ], [ null, %404 ]
  %420 = phi %"class.angle::spirv::BoxedUint32"* [ %416, %412 ], [ null, %404 ]
  %421 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %420, i64 %394
  %422 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %420, i64 %418
  %423 = ptrtoint %"class.angle::spirv::BoxedUint32"* %422 to i64
  %424 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %421, i64 0, i32 0, i32 0
  store i32 %375, i32* %424, align 4
  %425 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %421, i64 1
  %426 = ptrtoint %"class.angle::spirv::BoxedUint32"* %425 to i64
  %427 = ptrtoint %"class.angle::spirv::BoxedUint32"* %420 to i64
  %428 = icmp sgt i64 %393, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %417
  %430 = inttoptr i64 %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %419, i8* align 4 %430, i64 %393, i1 false) #14
  br label %431

431:                                              ; preds = %429, %417
  store i64 %427, i64* %391, align 8
  store i64 %426, i64* %390, align 8
  store i64 %423, i64* %400, align 8
  %432 = icmp eq i64 %392, 0
  br i1 %432, label %435, label %433

433:                                              ; preds = %431
  %434 = inttoptr i64 %392 to i8*
  call void @_ZdlPv(i8* %434) #17
  br label %435

435:                                              ; preds = %433, %431, %383
  %436 = zext i32 %375 to i64
  %437 = load i64*, i64** %304, align 8
  %438 = lshr i64 %436, 6
  %439 = getelementptr inbounds i64, i64* %437, i64 %438
  %440 = and i64 %436, 63
  %441 = shl i64 1, %440
  %442 = load i64, i64* %439, align 8
  %443 = or i64 %442, %441
  store i64 %443, i64* %439, align 8
  br label %444

444:                                              ; preds = %435, %363
  %445 = add nuw nsw i32 %324, 1
  %446 = load i8, i8* %316, align 4
  %447 = zext i8 %446 to i32
  %448 = icmp ult i32 %445, %447
  br i1 %448, label %323, label %449

449:                                              ; preds = %444, %315, %311, %305
  %450 = add nuw nsw i64 %306, 1
  %451 = icmp eq i64 %450, %266
  br i1 %451, label %452, label %305

452:                                              ; preds = %449, %298
  %453 = load i64, i64* %202, align 8
  %454 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %199, align 8
  %455 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %454, i64 0, i32 0, i32 1
  %456 = bitcast i32** %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = bitcast %"class.std::__1::vector"* %454 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = sub i64 %457, %459
  %461 = ashr exact i64 %460, 2
  %462 = icmp ult i64 %453, %461
  br i1 %462, label %463, label %1339

463:                                              ; preds = %452
  %464 = bitcast i32* %35 to i8*
  %465 = bitcast i32* %36 to i8*
  %466 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 4
  %467 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 5, i32 0, i32 0
  %468 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 2, i32 0
  %469 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 1, i32 0, i32 0
  %470 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 11, i32 0, i64 1, i32 0, i32 0
  %471 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 2, i32 0, i32 0
  %472 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 11, i32 0, i64 2, i32 0, i32 0
  %473 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 3, i32 0, i32 0
  %474 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 11, i32 0, i64 3, i32 0, i32 0
  %475 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 4, i32 0, i32 0
  %476 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 11, i32 0, i64 4, i32 0, i32 0
  %477 = bitcast %"class.angle::spirv::BoxedUint32"* %37 to i8*
  %478 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %37, i64 0, i32 0, i32 0
  %479 = bitcast %"class.angle::spirv::BoxedUint32"* %38 to i8*
  %480 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %38, i64 0, i32 0, i32 0
  %481 = bitcast i32* %39 to i8*
  %482 = bitcast %"class.angle::spirv::BoxedUint32"* %40 to i8*
  %483 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %40, i64 0, i32 0, i32 0
  %484 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 5
  %485 = bitcast %"class.angle::FastVector.278"* %34 to i8*
  %486 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 1
  %487 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 0, i32 0, i64 0
  %488 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 2
  %489 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 3
  %490 = bitcast %"class.angle::spirv::BoxedUint32"** %486 to i8**
  %491 = bitcast %"class.angle::spirv::BoxedUint32"* %27 to i8*
  %492 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %27, i64 0, i32 0, i32 0
  %493 = bitcast %"class.angle::spirv::BoxedUint32"* %28 to i8*
  %494 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %28, i64 0, i32 0, i32 0
  %495 = bitcast %"class.angle::spirv::BoxedUint32"* %29 to i8*
  %496 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %29, i64 0, i32 0, i32 0
  %497 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 3, i32 0, i32 0
  %498 = bitcast %"class.angle::spirv::BoxedUint32"* %30 to i8*
  %499 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %30, i64 0, i32 0, i32 0
  %500 = bitcast %"class.angle::spirv::BoxedUint32"* %31 to i8*
  %501 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %31, i64 0, i32 0, i32 0
  %502 = bitcast %"class.angle::spirv::BoxedUint32"* %32 to i8*
  %503 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %32, i64 0, i32 0, i32 0
  %504 = bitcast %"class.angle::FastVector.278"* %33 to i8*
  %505 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 1
  %506 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 0, i32 0, i64 0
  %507 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 2
  %508 = bitcast %"class.angle::spirv::BoxedUint32"* %5 to i8*
  %509 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %5, i64 0, i32 0, i32 0
  %510 = bitcast %"class.angle::spirv::BoxedUint32"* %6 to i8*
  %511 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %6, i64 0, i32 0, i32 0
  %512 = bitcast i32* %7 to i8*
  %513 = bitcast %"class.angle::spirv::BoxedUint32"* %8 to i8*
  %514 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %8, i64 0, i32 0, i32 0
  %515 = bitcast i32* %9 to i8*
  %516 = bitcast %"class.angle::FastVector.271"* %10 to i8*
  %517 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %10, i64 0, i32 1
  %518 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %10, i64 0, i32 0, i32 0, i64 0
  %519 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %10, i64 0, i32 2
  %520 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %10, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %521 = bitcast %"class.angle::spirv::BoxedUint32"* %11 to i8*
  %522 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %11, i64 0, i32 0, i32 0
  %523 = bitcast i8** %12 to i8*
  %524 = bitcast i32* %13 to i8*
  %525 = bitcast i8** %14 to i8*
  %526 = bitcast %"class.angle::FastVector.278"* %15 to i8*
  %527 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %15, i64 0, i32 1
  %528 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %15, i64 0, i32 0, i32 0, i64 0
  %529 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %15, i64 0, i32 2
  %530 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %15, i64 0, i32 3
  %531 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 7
  %532 = bitcast %"class.angle::spirv::BoxedUint32"** %527 to i8**
  %533 = bitcast %"class.angle::spirv::BoxedUint32"* %16 to i8*
  %534 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %16, i64 0, i32 0, i32 0
  %535 = bitcast i32* %17 to i8*
  %536 = bitcast %"class.angle::spirv::BoxedUint32"* %18 to i8*
  %537 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %18, i64 0, i32 0, i32 0
  %538 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 2, i32 0, i32 0
  %539 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 3, i32 0, i32 0
  %540 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 4, i32 0, i32 0
  %541 = bitcast %"class.angle::spirv::BoxedUint32"* %19 to i8*
  %542 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %19, i64 0, i32 0, i32 0
  %543 = bitcast %"class.angle::spirv::BoxedUint32"* %20 to i8*
  %544 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %20, i64 0, i32 0, i32 0
  %545 = bitcast %"class.angle::spirv::BoxedUint32.273"* %21 to i8*
  %546 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %21, i64 0, i32 0, i32 0
  %547 = bitcast %"class.angle::spirv::BoxedUint32"* %22 to i8*
  %548 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %22, i64 0, i32 0, i32 0
  %549 = bitcast %"class.angle::spirv::BoxedUint32"* %23 to i8*
  %550 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %23, i64 0, i32 0, i32 0
  %551 = bitcast %"class.angle::spirv::BoxedUint32.273"* %24 to i8*
  %552 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %24, i64 0, i32 0, i32 0
  %553 = bitcast %"class.angle::spirv::BoxedUint32"* %25 to i8*
  %554 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %25, i64 0, i32 0, i32 0
  %555 = bitcast %"class.angle::spirv::BoxedUint32.273"* %26 to i8*
  %556 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %26, i64 0, i32 0, i32 0
  %557 = bitcast i64* %488 to <2 x i64>*
  %558 = bitcast i64* %507 to <2 x i64>*
  %559 = bitcast i64* %519 to <2 x i64>*
  %560 = bitcast i64* %529 to <2 x i64>*
  br label %561

561:                                              ; preds = %1325, %463
  %562 = phi %"class.std::__1::vector"* [ %454, %463 ], [ %1330, %1325 ]
  %563 = phi i64 [ %453, %463 ], [ %1329, %1325 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %464) #14
  store i32 -1431655766, i32* %35, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %465) #14
  store i32 -1431655766, i32* %36, align 4
  %564 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %562, i64 0, i32 0, i32 0
  %565 = load i32*, i32** %564, align 8
  %566 = getelementptr inbounds i32, i32* %565, i64 %563
  call void @_ZN5angle5spirv25GetInstructionOpAndLengthEPKjPN3spv2OpEPj(i32* %566, i32* nonnull %36, i32* nonnull %35) #14
  %567 = load i32, i32* %36, align 4
  %568 = icmp eq i32 %567, 54
  br i1 %568, label %569, label %725

569:                                              ; preds = %561
  %570 = load i8, i8* %466, align 8, !range !22
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %572, label %720

572:                                              ; preds = %569
  %573 = load i64, i64* %284, align 8
  %574 = load i64, i64* %286, align 8
  %575 = sub i64 %573, %574
  %576 = ashr exact i64 %575, 2
  %577 = icmp ugt i64 %576, 1
  br i1 %577, label %584, label %578

578:                                              ; preds = %657, %572
  %579 = load i32, i32* %469, align 4
  %580 = icmp ne i32 %579, 0
  %581 = load i32, i32* %470, align 4
  %582 = icmp eq i32 %581, 0
  %583 = and i1 %580, %582
  br i1 %583, label %665, label %674

584:                                              ; preds = %572, %657
  %585 = phi i64 [ %661, %657 ], [ %574, %572 ]
  %586 = phi i64 [ %659, %657 ], [ 1, %572 ]
  %587 = phi i32 [ %658, %657 ], [ 1, %572 ]
  %588 = inttoptr i64 %585 to %"class.angle::spirv::BoxedUint32"*
  %589 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %588, i64 %586, i32 0, i32 0
  %590 = load i32, i32* %589, align 4
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %657, label %592

592:                                              ; preds = %584
  %593 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %594 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %593, i64 %586
  %595 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %594, align 8
  %596 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %595, i64 0, i32 12
  %597 = load i8, i8* %596, align 1
  %598 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %595, i64 0, i32 13
  %599 = load i8, i8* %598, align 4
  %600 = zext i8 %599 to i64
  %601 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 12, i32 0, i64 %600, i32 0, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %614

604:                                              ; preds = %592
  %605 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %606 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %605, i64 0, i32 0, i32 0
  %607 = load i32*, i32** %606, align 8
  %608 = getelementptr inbounds i32, i32* %607, i64 3
  %609 = load i32, i32* %608, align 4
  %610 = add i32 %609, 1
  store i32 %610, i32* %608, align 4
  store i32 %609, i32* %601, align 4
  %611 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %612 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 %600, i32 0, i32 0
  %613 = load i32, i32* %612, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %611, i32 %609, i32 6, i32 %613) #14
  br label %614

614:                                              ; preds = %604, %592
  %615 = phi i32 [ %602, %592 ], [ %609, %604 ]
  %616 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %616, i32 %615, i32 %587, i32 6, %"class.angle::spirv::BoxedUint32"* null) #14
  %617 = zext i8 %597 to i64
  %618 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 10, i32 0, i64 %617, i32 0, i32 0
  %619 = load i32, i32* %618, align 4
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %631

621:                                              ; preds = %614
  %622 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %623 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %622, i64 0, i32 0, i32 0
  %624 = load i32*, i32** %623, align 8
  %625 = getelementptr inbounds i32, i32* %624, i64 3
  %626 = load i32, i32* %625, align 4
  %627 = add i32 %626, 1
  store i32 %627, i32* %625, align 4
  store i32 %626, i32* %618, align 4
  %628 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %629 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 %617, i32 0, i32 0
  %630 = load i32, i32* %629, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %628, i32 %626, i32 1, i32 %630) #14
  br label %631

631:                                              ; preds = %621, %614
  %632 = phi i32 [ %619, %614 ], [ %626, %621 ]
  %633 = load i8, i8* %598, align 4
  %634 = icmp eq i8 %633, 0
  br i1 %634, label %657, label %635

635:                                              ; preds = %631, %652
  %636 = phi i8 [ %653, %652 ], [ %633, %631 ]
  %637 = phi i64 [ %654, %652 ], [ 0, %631 ]
  %638 = trunc i64 %637 to i32
  %639 = add i32 %590, %638
  %640 = zext i32 %639 to i64
  %641 = load i64*, i64** %468, align 8
  %642 = lshr i64 %640, 6
  %643 = getelementptr inbounds i64, i64* %641, i64 %642
  %644 = and i64 %640, 63
  %645 = shl i64 1, %644
  %646 = load i64, i64* %643, align 8
  %647 = and i64 %645, %646
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %649, label %652

649:                                              ; preds = %635
  %650 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %650, i32 %632, i32 %639, i32 1, %"class.angle::spirv::BoxedUint32"* null) #14
  %651 = load i8, i8* %598, align 4
  br label %652

652:                                              ; preds = %649, %635
  %653 = phi i8 [ %636, %635 ], [ %651, %649 ]
  %654 = add nuw nsw i64 %637, 1
  %655 = zext i8 %653 to i64
  %656 = icmp ult i64 %654, %655
  br i1 %656, label %635, label %657

657:                                              ; preds = %652, %631, %584
  %658 = add i32 %587, 1
  %659 = zext i32 %658 to i64
  %660 = load i64, i64* %284, align 8
  %661 = load i64, i64* %286, align 8
  %662 = sub i64 %660, %661
  %663 = ashr exact i64 %662, 2
  %664 = icmp ugt i64 %663, %659
  br i1 %664, label %584, label %578

665:                                              ; preds = %578
  %666 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %667 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %666, i64 0, i32 0, i32 0
  %668 = load i32*, i32** %667, align 8
  %669 = getelementptr inbounds i32, i32* %668, i64 3
  %670 = load i32, i32* %669, align 4
  %671 = add i32 %670, 1
  store i32 %671, i32* %669, align 4
  store i32 %670, i32* %470, align 4
  %672 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %673 = load i32, i32* %469, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %672, i32 %670, i32 6, i32 %673) #14
  br label %674

674:                                              ; preds = %578, %665
  %675 = load i32, i32* %471, align 8
  %676 = icmp ne i32 %675, 0
  %677 = load i32, i32* %472, align 4
  %678 = icmp eq i32 %677, 0
  %679 = and i1 %676, %678
  br i1 %679, label %680, label %689

680:                                              ; preds = %674
  %681 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %682 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %681, i64 0, i32 0, i32 0
  %683 = load i32*, i32** %682, align 8
  %684 = getelementptr inbounds i32, i32* %683, i64 3
  %685 = load i32, i32* %684, align 4
  %686 = add i32 %685, 1
  store i32 %686, i32* %684, align 4
  store i32 %685, i32* %472, align 4
  %687 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %688 = load i32, i32* %471, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %687, i32 %685, i32 6, i32 %688) #14
  br label %689

689:                                              ; preds = %674, %680
  %690 = load i32, i32* %473, align 4
  %691 = icmp ne i32 %690, 0
  %692 = load i32, i32* %474, align 4
  %693 = icmp eq i32 %692, 0
  %694 = and i1 %691, %693
  br i1 %694, label %695, label %704

695:                                              ; preds = %689
  %696 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %697 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %696, i64 0, i32 0, i32 0
  %698 = load i32*, i32** %697, align 8
  %699 = getelementptr inbounds i32, i32* %698, i64 3
  %700 = load i32, i32* %699, align 4
  %701 = add i32 %700, 1
  store i32 %701, i32* %699, align 4
  store i32 %700, i32* %474, align 4
  %702 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %703 = load i32, i32* %473, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %702, i32 %700, i32 6, i32 %703) #14
  br label %704

704:                                              ; preds = %689, %695
  %705 = load i32, i32* %475, align 8
  %706 = icmp ne i32 %705, 0
  %707 = load i32, i32* %476, align 4
  %708 = icmp eq i32 %707, 0
  %709 = and i1 %706, %708
  br i1 %709, label %710, label %719

710:                                              ; preds = %704
  %711 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %712 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %711, i64 0, i32 0, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = getelementptr inbounds i32, i32* %713, i64 3
  %715 = load i32, i32* %714, align 4
  %716 = add i32 %715, 1
  store i32 %716, i32* %714, align 4
  store i32 %715, i32* %476, align 4
  %717 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %718 = load i32, i32* %475, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %717, i32 %715, i32 6, i32 %718) #14
  br label %719

719:                                              ; preds = %704, %710
  store i8 1, i8* %466, align 8
  br label %720

720:                                              ; preds = %719, %569
  store i8 1, i8* %203, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %477) #14
  store i32 0, i32* %478, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %479) #14
  store i32 0, i32* %480, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %481) #14
  store i32 -1431655766, i32* %39, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %482) #14
  store i32 0, i32* %483, align 4
  call void @_ZN5angle5spirv13ParseFunctionEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv19FunctionControlMaskES6_(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %37, %"class.angle::spirv::BoxedUint32"* nonnull %38, i32* nonnull %39, %"class.angle::spirv::BoxedUint32"* nonnull %40) #14
  %721 = load i32, i32* %480, align 4
  %722 = load i32, i32* %245, align 4
  %723 = icmp eq i32 %721, %722
  %724 = zext i1 %723 to i8
  store i8 %724, i8* %484, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %482) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %481) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %479) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %477) #14
  br label %725

725:                                              ; preds = %720, %561
  %726 = load i8, i8* %203, align 8, !range !22
  %727 = icmp eq i8 %726, 0
  br i1 %727, label %974, label %728

728:                                              ; preds = %725
  %729 = load i8, i8* %484, align 1, !range !22
  %730 = icmp eq i8 %729, 0
  %731 = load i32, i32* %36, align 4
  br i1 %730, label %879, label %732

732:                                              ; preds = %728
  switch i32 %731, label %733 [
    i32 248, label %879
    i32 59, label %879
    i32 55, label %879
    i32 54, label %879
  ]

733:                                              ; preds = %732
  %734 = load i64, i64* %284, align 8
  %735 = load i64, i64* %286, align 8
  %736 = sub i64 %734, %735
  %737 = ashr exact i64 %736, 2
  %738 = icmp ugt i64 %737, 1
  br i1 %738, label %739, label %877

739:                                              ; preds = %733, %867
  %740 = phi i64 [ %868, %867 ], [ %735, %733 ]
  %741 = phi i64 [ %869, %867 ], [ %734, %733 ]
  %742 = phi i64 [ %871, %867 ], [ 1, %733 ]
  %743 = phi i32 [ %870, %867 ], [ 1, %733 ]
  %744 = inttoptr i64 %740 to %"class.angle::spirv::BoxedUint32"*
  %745 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %744, i64 %742, i32 0, i32 0
  %746 = load i32, i32* %745, align 4
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %867, label %748

748:                                              ; preds = %739
  %749 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %750 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %749, i64 %742
  %751 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %750, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %485) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %485, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %487, %"class.angle::spirv::BoxedUint32"** %486, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %557, align 8
  %752 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %751, i64 0, i32 13
  %753 = load i8, i8* %752, align 4
  %754 = icmp eq i8 %753, 0
  br i1 %754, label %758, label %755

755:                                              ; preds = %748
  %756 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %751, i64 0, i32 12
  %757 = zext i8 %753 to i64
  br label %779

758:                                              ; preds = %851, %748
  %759 = phi i64 [ 0, %748 ], [ %757, %851 ]
  %760 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %761 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %760, i64 0, i32 0, i32 0
  %762 = load i32*, i32** %761, align 8
  %763 = getelementptr inbounds i32, i32* %762, i64 3
  %764 = load i32, i32* %763, align 4
  %765 = add i32 %764, 1
  store i32 %765, i32* %763, align 4
  %766 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %767 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 %759, i32 0, i32 0
  %768 = load i32, i32* %767, align 4
  call void @_ZN5angle5spirv23WriteCompositeConstructEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %766, i32 %768, i32 %764, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %34) #14
  %769 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %769, i32 %743, i32 %764, i32* null) #14
  store i64 0, i64* %488, align 8
  %770 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %486, align 8
  %771 = icmp eq %"class.angle::spirv::BoxedUint32"* %770, %487
  %772 = icmp eq %"class.angle::spirv::BoxedUint32"* %770, null
  %773 = or i1 %771, %772
  br i1 %773, label %776, label %774

774:                                              ; preds = %758
  %775 = bitcast %"class.angle::spirv::BoxedUint32"* %770 to i8*
  call void @_ZdaPv(i8* %775) #17
  br label %776

776:                                              ; preds = %774, %758
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %485) #14
  %777 = load i64, i64* %284, align 8
  %778 = load i64, i64* %286, align 8
  br label %867

779:                                              ; preds = %851, %755
  %780 = phi i64 [ 0, %755 ], [ %865, %851 ]
  %781 = trunc i64 %780 to i32
  %782 = add i32 %746, %781
  %783 = zext i32 %782 to i64
  %784 = load i64*, i64** %468, align 8
  %785 = lshr i64 %783, 6
  %786 = getelementptr inbounds i64, i64* %784, i64 %785
  %787 = and i64 %783, 63
  %788 = shl i64 1, %787
  %789 = load i64, i64* %786, align 8
  %790 = and i64 %788, %789
  %791 = icmp eq i64 %790, 0
  br i1 %791, label %802, label %792

792:                                              ; preds = %779
  %793 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %794 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %793, i64 %783
  %795 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %794, align 8
  %796 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %795, i64 0, i32 2
  %797 = load i32, i32* %796, align 8
  %798 = add i32 %797, %781
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %799, i32 0, i32 0, i32 0
  %801 = load i32, i32* %800, align 8
  br label %802

802:                                              ; preds = %792, %779
  %803 = phi i32 [ %801, %792 ], [ %782, %779 ]
  %804 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %805 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %804, i64 0, i32 0, i32 0
  %806 = load i32*, i32** %805, align 8
  %807 = getelementptr inbounds i32, i32* %806, i64 3
  %808 = load i32, i32* %807, align 4
  %809 = add i32 %808, 1
  store i32 %809, i32* %807, align 4
  %810 = load i64, i64* %488, align 8
  %811 = load i64, i64* %489, align 8
  %812 = icmp eq i64 %810, %811
  br i1 %812, label %813, label %851

813:                                              ; preds = %802
  %814 = add i64 %810, 1
  %815 = icmp eq i64 %810, -1
  br i1 %815, label %851, label %816

816:                                              ; preds = %813
  %817 = icmp ugt i64 %810, 8
  %818 = select i1 %817, i64 %810, i64 8
  br label %819

819:                                              ; preds = %819, %816
  %820 = phi i64 [ %818, %816 ], [ %822, %819 ]
  %821 = icmp ult i64 %820, %814
  %822 = shl i64 %820, 1
  br i1 %821, label %819, label %823

823:                                              ; preds = %819
  %824 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %820, i64 4) #14
  %825 = extractvalue { i64, i1 } %824, 1
  %826 = extractvalue { i64, i1 } %824, 0
  %827 = select i1 %825, i64 -1, i64 %826
  %828 = call i8* @_Znam(i64 %827) #17
  %829 = icmp eq i64 %820, 0
  br i1 %829, label %832, label %830

830:                                              ; preds = %823
  %831 = shl nsw i64 %820, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %828, i8 0, i64 %831, i1 false) #14
  br label %832

832:                                              ; preds = %830, %823
  %833 = icmp eq i64 %810, 0
  br i1 %833, label %834, label %837

834:                                              ; preds = %832
  %835 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %486, align 8
  %836 = bitcast %"class.angle::spirv::BoxedUint32"* %835 to i8*
  br label %841

837:                                              ; preds = %832
  %838 = shl nuw i64 %810, 2
  %839 = load i8*, i8** %490, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %828, i8* align 4 %839, i64 %838, i1 false) #14
  %840 = bitcast i8* %839 to %"class.angle::spirv::BoxedUint32"*
  br label %841

841:                                              ; preds = %837, %834
  %842 = phi i8* [ %836, %834 ], [ %839, %837 ]
  %843 = phi %"class.angle::spirv::BoxedUint32"* [ %835, %834 ], [ %840, %837 ]
  %844 = icmp eq %"class.angle::spirv::BoxedUint32"* %843, %487
  %845 = icmp eq %"class.angle::spirv::BoxedUint32"* %843, null
  %846 = or i1 %844, %845
  br i1 %846, label %849, label %847

847:                                              ; preds = %841
  call void @_ZdaPv(i8* %842) #17
  %848 = load i64, i64* %488, align 8
  br label %849

849:                                              ; preds = %847, %841
  %850 = phi i64 [ %848, %847 ], [ %810, %841 ]
  store i8* %828, i8** %490, align 8
  store i64 %820, i64* %489, align 8
  br label %851

851:                                              ; preds = %849, %813, %802
  %852 = phi i64 [ %850, %849 ], [ -1, %813 ], [ %810, %802 ]
  %853 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %486, align 8
  %854 = add i64 %852, 1
  store i64 %854, i64* %488, align 8
  %855 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %853, i64 %852, i32 0, i32 0
  store i32 %808, i32* %855, align 4
  %856 = load i8, i8* %756, align 1
  %857 = zext i8 %856 to i64
  %858 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 %857, i32 0, i32 0
  %859 = load i32, i32* %858, align 4
  %860 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %486, align 8
  %861 = load i64, i64* %488, align 8
  %862 = add i64 %861, -1
  %863 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %860, i64 %862, i32 0, i32 0
  %864 = load i32, i32* %863, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_139SpirvVertexAttributeAliasingTransformer19transformLoadHelperEN5angle5spirv11BoxedUint32INS3_11IdRefHelperEEES6_S6_S6_(%"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* nonnull %45, i32 %743, i32 %859, i32 %803, i32 %864) #14
  %865 = add nuw nsw i64 %780, 1
  %866 = icmp eq i64 %865, %757
  br i1 %866, label %758, label %779

867:                                              ; preds = %776, %739
  %868 = phi i64 [ %740, %739 ], [ %778, %776 ]
  %869 = phi i64 [ %741, %739 ], [ %777, %776 ]
  %870 = add i32 %743, 1
  %871 = zext i32 %870 to i64
  %872 = sub i64 %869, %868
  %873 = ashr exact i64 %872, 2
  %874 = icmp ugt i64 %873, %871
  br i1 %874, label %739, label %875

875:                                              ; preds = %867
  %876 = load i32, i32* %36, align 4
  br label %877

877:                                              ; preds = %875, %733
  %878 = phi i32 [ %876, %875 ], [ %731, %733 ]
  store i8 0, i8* %484, align 1
  br label %879

879:                                              ; preds = %877, %732, %732, %732, %732, %728
  %880 = phi i32 [ %731, %732 ], [ %731, %732 ], [ %731, %732 ], [ %731, %732 ], [ %731, %728 ], [ %878, %877 ]
  switch i32 %880, label %1317 [
    i32 65, label %881
    i32 66, label %881
    i32 61, label %934
  ]

881:                                              ; preds = %879, %879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %498) #14
  store i32 0, i32* %499, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %500) #14
  store i32 0, i32* %501, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %502) #14
  store i32 0, i32* %503, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %504) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %504, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %506, %"class.angle::spirv::BoxedUint32"** %505, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %558, align 8
  call void @_ZN5angle5spirv16ParseAccessChainEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_PNS_10FastVectorIS5_Lm8ENSt3__15arrayIS5_Lm8EEEEE(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %30, %"class.angle::spirv::BoxedUint32"* nonnull %31, %"class.angle::spirv::BoxedUint32"* nonnull %32, %"class.angle::FastVector.278"* nonnull %33) #14
  %882 = load i32, i32* %503, align 4
  %883 = zext i32 %882 to i64
  %884 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %497, align 8
  %885 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %884, i64 %883, i32 0, i32 0
  %886 = load i32, i32* %885, align 4
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %904, label %888

888:                                              ; preds = %881
  %889 = load i64, i64* %507, align 8
  %890 = icmp eq i64 %889, 1
  br i1 %890, label %891, label %899

891:                                              ; preds = %888
  %892 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %893 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %892, i64 %883
  %894 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %893, align 8
  %895 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %894, i64 0, i32 12
  %896 = load i8, i8* %895, align 1
  %897 = zext i8 %896 to i64
  %898 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 11, i32 0, i64 %897, i32 0, i32 0
  br label %899

899:                                              ; preds = %891, %888
  %900 = phi i32* [ %898, %891 ], [ %470, %888 ]
  %901 = load i32, i32* %900, align 4
  %902 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %903 = load i32, i32* %501, align 4
  call void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %902, i32 %901, i32 %903, i32 %882, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %33) #14
  br label %925

904:                                              ; preds = %881
  %905 = load i64*, i64** %468, align 8
  %906 = lshr i64 %883, 6
  %907 = getelementptr inbounds i64, i64* %905, i64 %906
  %908 = and i64 %883, 63
  %909 = shl i64 1, %908
  %910 = load i64, i64* %907, align 8
  %911 = and i64 %910, %909
  %912 = icmp eq i64 %911, 0
  br i1 %912, label %925, label %913

913:                                              ; preds = %904
  %914 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %915 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %914, i64 %883
  %916 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %915, align 8
  %917 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %916, i64 0, i32 2
  %918 = load i32, i32* %917, align 8
  %919 = zext i32 %918 to i64
  %920 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %919, i32 0, i32 0, i32 0
  %921 = load i32, i32* %920, align 8
  %922 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %923 = load i32, i32* %499, align 4
  %924 = load i32, i32* %501, align 4
  call void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %922, i32 %923, i32 %924, i32 %921, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %33) #14
  br label %925

925:                                              ; preds = %913, %904, %899
  %926 = phi i32 [ 1, %904 ], [ 0, %913 ], [ 0, %899 ]
  store i64 0, i64* %507, align 8
  %927 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %505, align 8
  %928 = icmp eq %"class.angle::spirv::BoxedUint32"* %927, %506
  %929 = icmp eq %"class.angle::spirv::BoxedUint32"* %927, null
  %930 = or i1 %928, %929
  br i1 %930, label %933, label %931

931:                                              ; preds = %925
  %932 = bitcast %"class.angle::spirv::BoxedUint32"* %927 to i8*
  call void @_ZdaPv(i8* %932) #17
  br label %933

933:                                              ; preds = %931, %925
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %504) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %502) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %500) #14
  br label %1313

934:                                              ; preds = %879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %491) #14
  store i32 0, i32* %492, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %493) #14
  store i32 0, i32* %494, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %495) #14
  store i32 0, i32* %496, align 4
  call void @_ZN5angle5spirv9ParseLoadEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_PN3spv16MemoryAccessMaskE(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %27, %"class.angle::spirv::BoxedUint32"* nonnull %28, %"class.angle::spirv::BoxedUint32"* nonnull %29, i32* null) #14
  %935 = load i32, i32* %496, align 4
  %936 = zext i32 %935 to i64
  %937 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %497, align 8
  %938 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %937, i64 %936, i32 0, i32 0
  %939 = load i32, i32* %938, align 4
  %940 = icmp eq i32 %939, 0
  br i1 %940, label %952, label %941

941:                                              ; preds = %934
  %942 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %943 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %942, i64 %936
  %944 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %943, align 8
  %945 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %944, i64 0, i32 13
  %946 = load i8, i8* %945, align 4
  %947 = zext i8 %946 to i64
  %948 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 %947, i32 0, i32 0
  %949 = load i32, i32* %948, align 4
  %950 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %951 = load i32, i32* %494, align 4
  call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %950, i32 %949, i32 %951, i32 %935, i32* null) #14
  br label %972

952:                                              ; preds = %934
  %953 = load i64*, i64** %468, align 8
  %954 = lshr i64 %936, 6
  %955 = getelementptr inbounds i64, i64* %953, i64 %954
  %956 = and i64 %936, 63
  %957 = shl i64 1, %956
  %958 = load i64, i64* %955, align 8
  %959 = and i64 %958, %957
  %960 = icmp eq i64 %959, 0
  br i1 %960, label %972, label %961

961:                                              ; preds = %952
  %962 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %963 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %962, i64 %936
  %964 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %963, align 8
  %965 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %964, i64 0, i32 2
  %966 = load i32, i32* %965, align 8
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 %967, i32 0, i32 0, i32 0
  %969 = load i32, i32* %968, align 8
  %970 = load i32, i32* %492, align 4
  %971 = load i32, i32* %494, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_139SpirvVertexAttributeAliasingTransformer19transformLoadHelperEN5angle5spirv11BoxedUint32INS3_11IdRefHelperEEES6_S6_S6_(%"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* nonnull %45, i32 %935, i32 %970, i32 %969, i32 %971) #14
  br label %972

972:                                              ; preds = %961, %952, %941
  %973 = phi i32 [ 1, %952 ], [ 0, %961 ], [ 0, %941 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %495) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %493) #14
  br label %1313

974:                                              ; preds = %725
  %975 = load i32, i32* %36, align 4
  switch i32 %975, label %1317 [
    i32 22, label %976
    i32 23, label %982
    i32 24, label %992
    i32 32, label %1003
    i32 15, label %1047
    i32 5, label %1202
    i32 71, label %1214
    i32 59, label %1294
  ]

976:                                              ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %553) #14
  store i32 0, i32* %554, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %555) #14
  store i32 0, i32* %556, align 4
  call void @_ZN5angle5spirv14ParseTypeFloatEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEE(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %25, %"class.angle::spirv::BoxedUint32.273"* nonnull %26) #14
  %977 = load i32, i32* %556, align 4
  %978 = icmp eq i32 %977, 32
  br i1 %978, label %979, label %981

979:                                              ; preds = %976
  %980 = load i32, i32* %554, align 4
  store i32 %980, i32* %469, align 4
  br label %981

981:                                              ; preds = %979, %976
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %555) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %553) #14
  br label %1317

982:                                              ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %547) #14
  store i32 0, i32* %548, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %549) #14
  store i32 0, i32* %550, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %551) #14
  store i32 0, i32* %552, align 4
  call void @_ZN5angle5spirv15ParseTypeVectorEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PNS3_INS0_20LiteralIntegerHelperEEE(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %22, %"class.angle::spirv::BoxedUint32"* nonnull %23, %"class.angle::spirv::BoxedUint32.273"* nonnull %24) #14
  %983 = load i32, i32* %550, align 4
  %984 = load i32, i32* %469, align 4
  %985 = icmp eq i32 %983, %984
  br i1 %985, label %986, label %991

986:                                              ; preds = %982
  %987 = load i32, i32* %552, align 4
  %988 = zext i32 %987 to i64
  %989 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 %988, i32 0, i32 0
  %990 = load i32, i32* %548, align 4
  store i32 %990, i32* %989, align 4
  br label %991

991:                                              ; preds = %986, %982
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %551) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %549) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %547) #14
  br label %1317

992:                                              ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %541) #14
  store i32 0, i32* %542, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %543) #14
  store i32 0, i32* %544, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %545) #14
  store i32 0, i32* %546, align 4
  call void @_ZN5angle5spirv15ParseTypeMatrixEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PNS3_INS0_20LiteralIntegerHelperEEE(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %19, %"class.angle::spirv::BoxedUint32"* nonnull %20, %"class.angle::spirv::BoxedUint32.273"* nonnull %21) #14
  %993 = load i32, i32* %546, align 4
  %994 = zext i32 %993 to i64
  %995 = load i32, i32* %544, align 4
  %996 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 8, i32 0, i64 %994, i32 0, i32 0
  %997 = load i32, i32* %996, align 4
  %998 = icmp eq i32 %995, %997
  br i1 %998, label %999, label %1002

999:                                              ; preds = %992
  %1000 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 9, i32 0, i64 %994, i32 0, i32 0
  %1001 = load i32, i32* %542, align 4
  store i32 %1001, i32* %1000, align 4
  br label %1002

1002:                                             ; preds = %999, %992
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %545) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %543) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %541) #14
  br label %1317

1003:                                             ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %533) #14
  store i32 0, i32* %534, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %535) #14
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %536) #14
  store i32 0, i32* %537, align 4
  call void @_ZN5angle5spirv16ParseTypePointerEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv12StorageClassES6_(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %16, i32* nonnull %17, %"class.angle::spirv::BoxedUint32"* nonnull %18) #14
  %1004 = load i32, i32* %17, align 4
  switch i32 %1004, label %1046 [
    i32 1, label %1009
    i32 6, label %1005
  ]

1005:                                             ; preds = %1003
  %1006 = load i32, i32* %537, align 4
  %1007 = load i32, i32* %471, align 8
  %1008 = icmp eq i32 %1006, %1007
  br i1 %1008, label %1020, label %1024

1009:                                             ; preds = %1003
  %1010 = load i32, i32* %537, align 4
  %1011 = load i32, i32* %471, align 8
  %1012 = icmp eq i32 %1010, %1011
  br i1 %1012, label %1013, label %1017

1013:                                             ; preds = %1034, %1017, %1009
  %1014 = phi i64 [ 2, %1009 ], [ 3, %1017 ], [ 4, %1034 ]
  %1015 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 10, i32 0, i64 %1014, i32 0, i32 0
  %1016 = load i32, i32* %534, align 4
  store i32 %1016, i32* %1015, align 4
  br label %1046

1017:                                             ; preds = %1009
  %1018 = load i32, i32* %473, align 4
  %1019 = icmp eq i32 %1010, %1018
  br i1 %1019, label %1013, label %1034

1020:                                             ; preds = %1040, %1031, %1005
  %1021 = phi i64 [ 2, %1005 ], [ 3, %1031 ], [ 4, %1040 ]
  %1022 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 11, i32 0, i64 %1021, i32 0, i32 0
  %1023 = load i32, i32* %534, align 4
  store i32 %1023, i32* %1022, align 4
  br label %1046

1024:                                             ; preds = %1005
  %1025 = load i32, i32* %538, align 4
  %1026 = icmp eq i32 %1006, %1025
  br i1 %1026, label %1027, label %1031

1027:                                             ; preds = %1043, %1037, %1024
  %1028 = phi i64 [ 2, %1024 ], [ 3, %1037 ], [ 4, %1043 ]
  %1029 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 12, i32 0, i64 %1028, i32 0, i32 0
  %1030 = load i32, i32* %534, align 4
  store i32 %1030, i32* %1029, align 4
  br label %1046

1031:                                             ; preds = %1024
  %1032 = load i32, i32* %473, align 4
  %1033 = icmp eq i32 %1006, %1032
  br i1 %1033, label %1020, label %1037

1034:                                             ; preds = %1017
  %1035 = load i32, i32* %475, align 8
  %1036 = icmp eq i32 %1010, %1035
  br i1 %1036, label %1013, label %1046

1037:                                             ; preds = %1031
  %1038 = load i32, i32* %539, align 4
  %1039 = icmp eq i32 %1006, %1038
  br i1 %1039, label %1027, label %1040

1040:                                             ; preds = %1037
  %1041 = load i32, i32* %475, align 8
  %1042 = icmp eq i32 %1006, %1041
  br i1 %1042, label %1020, label %1043

1043:                                             ; preds = %1040
  %1044 = load i32, i32* %540, align 4
  %1045 = icmp eq i32 %1006, %1044
  br i1 %1045, label %1027, label %1046

1046:                                             ; preds = %1043, %1034, %1027, %1020, %1013, %1003
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %536) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %535) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %533) #14
  br label %1317

1047:                                             ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %524) #14
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %525) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %526) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %526, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %528, %"class.angle::spirv::BoxedUint32"** %527, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %560, align 8
  call void @_ZN5angle5spirv15ParseEntryPointEPKjPN3spv14ExecutionModelEPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKcPNS_10FastVectorIS8_Lm8ENSt3__15arrayIS8_Lm8EEEEE(i32* %566, i32* nonnull %13, %"class.angle::spirv::BoxedUint32"* %531, i8** nonnull %14, %"class.angle::FastVector.278"* nonnull %15) #14
  %1048 = load i64, i64* %529, align 8
  %1049 = icmp eq i64 %1048, 0
  br i1 %1049, label %1164, label %1053

1050:                                             ; preds = %1123
  %1051 = load i64, i64* %529, align 8
  %1052 = icmp eq i64 %1051, 0
  br i1 %1052, label %1164, label %1176

1053:                                             ; preds = %1047, %1123
  %1054 = phi i64 [ %1124, %1123 ], [ 0, %1047 ]
  %1055 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %527, align 8
  %1056 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1055, i64 %1054, i32 0, i32 0
  %1057 = load i32, i32* %1056, align 4
  %1058 = zext i32 %1057 to i64
  %1059 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %497, align 8
  %1060 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1059, i64 %1058, i32 0, i32 0
  %1061 = load i32, i32* %1060, align 4
  %1062 = icmp eq i32 %1061, 0
  br i1 %1062, label %1123, label %1063

1063:                                             ; preds = %1053
  %1064 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %1065 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1064, i64 %1058
  %1066 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1065, align 8
  store i32 %1061, i32* %1056, align 4
  %1067 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1066, i64 0, i32 13
  %1068 = load i8, i8* %1067, align 4
  %1069 = icmp ugt i8 %1068, 1
  br i1 %1069, label %1070, label %1123

1070:                                             ; preds = %1063, %1114
  %1071 = phi i32 [ %1119, %1114 ], [ 1, %1063 ]
  %1072 = add i32 %1071, %1061
  %1073 = load i64, i64* %529, align 8
  %1074 = load i64, i64* %530, align 8
  %1075 = icmp eq i64 %1073, %1074
  br i1 %1075, label %1076, label %1114

1076:                                             ; preds = %1070
  %1077 = add i64 %1073, 1
  %1078 = icmp eq i64 %1073, -1
  br i1 %1078, label %1114, label %1079

1079:                                             ; preds = %1076
  %1080 = icmp ugt i64 %1073, 8
  %1081 = select i1 %1080, i64 %1073, i64 8
  br label %1082

1082:                                             ; preds = %1082, %1079
  %1083 = phi i64 [ %1081, %1079 ], [ %1085, %1082 ]
  %1084 = icmp ult i64 %1083, %1077
  %1085 = shl i64 %1083, 1
  br i1 %1084, label %1082, label %1086

1086:                                             ; preds = %1082
  %1087 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1083, i64 4) #14
  %1088 = extractvalue { i64, i1 } %1087, 1
  %1089 = extractvalue { i64, i1 } %1087, 0
  %1090 = select i1 %1088, i64 -1, i64 %1089
  %1091 = call i8* @_Znam(i64 %1090) #17
  %1092 = icmp eq i64 %1083, 0
  br i1 %1092, label %1095, label %1093

1093:                                             ; preds = %1086
  %1094 = shl nsw i64 %1083, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1091, i8 0, i64 %1094, i1 false) #14
  br label %1095

1095:                                             ; preds = %1093, %1086
  %1096 = icmp eq i64 %1073, 0
  br i1 %1096, label %1097, label %1100

1097:                                             ; preds = %1095
  %1098 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %527, align 8
  %1099 = bitcast %"class.angle::spirv::BoxedUint32"* %1098 to i8*
  br label %1104

1100:                                             ; preds = %1095
  %1101 = shl nuw i64 %1073, 2
  %1102 = load i8*, i8** %532, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1091, i8* align 4 %1102, i64 %1101, i1 false) #14
  %1103 = bitcast i8* %1102 to %"class.angle::spirv::BoxedUint32"*
  br label %1104

1104:                                             ; preds = %1100, %1097
  %1105 = phi i8* [ %1099, %1097 ], [ %1102, %1100 ]
  %1106 = phi %"class.angle::spirv::BoxedUint32"* [ %1098, %1097 ], [ %1103, %1100 ]
  %1107 = icmp eq %"class.angle::spirv::BoxedUint32"* %1106, %528
  %1108 = icmp eq %"class.angle::spirv::BoxedUint32"* %1106, null
  %1109 = or i1 %1107, %1108
  br i1 %1109, label %1112, label %1110

1110:                                             ; preds = %1104
  call void @_ZdaPv(i8* %1105) #17
  %1111 = load i64, i64* %529, align 8
  br label %1112

1112:                                             ; preds = %1110, %1104
  %1113 = phi i64 [ %1111, %1110 ], [ %1073, %1104 ]
  store i8* %1091, i8** %532, align 8
  store i64 %1083, i64* %530, align 8
  br label %1114

1114:                                             ; preds = %1112, %1076, %1070
  %1115 = phi i64 [ %1113, %1112 ], [ -1, %1076 ], [ %1073, %1070 ]
  %1116 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %527, align 8
  %1117 = add i64 %1115, 1
  store i64 %1117, i64* %529, align 8
  %1118 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1116, i64 %1115, i32 0, i32 0
  store i32 %1072, i32* %1118, align 4
  %1119 = add nuw nsw i32 %1071, 1
  %1120 = load i8, i8* %1067, align 4
  %1121 = zext i8 %1120 to i32
  %1122 = icmp ult i32 %1119, %1121
  br i1 %1122, label %1070, label %1123

1123:                                             ; preds = %1114, %1063, %1053
  %1124 = add nuw i64 %1054, 1
  %1125 = icmp eq i64 %1124, %1048
  br i1 %1125, label %1050, label %1053

1126:                                             ; preds = %1196
  %1127 = icmp ult i64 %1197, %1198
  br i1 %1127, label %1128, label %1164

1128:                                             ; preds = %1126
  %1129 = load i64, i64* %530, align 8
  %1130 = icmp ult i64 %1129, %1198
  br i1 %1130, label %1131, label %1164

1131:                                             ; preds = %1128
  %1132 = icmp ugt i64 %1129, 8
  %1133 = select i1 %1132, i64 %1129, i64 8
  br label %1134

1134:                                             ; preds = %1134, %1131
  %1135 = phi i64 [ %1133, %1131 ], [ %1137, %1134 ]
  %1136 = icmp ult i64 %1135, %1198
  %1137 = shl i64 %1135, 1
  br i1 %1136, label %1134, label %1138

1138:                                             ; preds = %1134
  %1139 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1135, i64 4) #14
  %1140 = extractvalue { i64, i1 } %1139, 1
  %1141 = extractvalue { i64, i1 } %1139, 0
  %1142 = select i1 %1140, i64 -1, i64 %1141
  %1143 = call i8* @_Znam(i64 %1142) #17
  %1144 = icmp eq i64 %1135, 0
  br i1 %1144, label %1147, label %1145

1145:                                             ; preds = %1138
  %1146 = shl nsw i64 %1135, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1143, i8 0, i64 %1146, i1 false) #14
  br label %1147

1147:                                             ; preds = %1145, %1138
  %1148 = icmp eq i64 %1197, 0
  br i1 %1148, label %1149, label %1152

1149:                                             ; preds = %1147
  %1150 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %527, align 8
  %1151 = bitcast %"class.angle::spirv::BoxedUint32"* %1150 to i8*
  br label %1156

1152:                                             ; preds = %1147
  %1153 = shl nuw i64 %1197, 2
  %1154 = load i8*, i8** %532, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1143, i8* align 4 %1154, i64 %1153, i1 false) #14
  %1155 = bitcast i8* %1154 to %"class.angle::spirv::BoxedUint32"*
  br label %1156

1156:                                             ; preds = %1152, %1149
  %1157 = phi i8* [ %1151, %1149 ], [ %1154, %1152 ]
  %1158 = phi %"class.angle::spirv::BoxedUint32"* [ %1150, %1149 ], [ %1155, %1152 ]
  %1159 = icmp eq %"class.angle::spirv::BoxedUint32"* %1158, %528
  %1160 = icmp eq %"class.angle::spirv::BoxedUint32"* %1158, null
  %1161 = or i1 %1159, %1160
  br i1 %1161, label %1163, label %1162

1162:                                             ; preds = %1156
  call void @_ZdaPv(i8* %1157) #17
  br label %1163

1163:                                             ; preds = %1162, %1156
  store i8* %1143, i8** %532, align 8
  store i64 %1135, i64* %530, align 8
  br label %1164

1164:                                             ; preds = %1163, %1128, %1126, %1050, %1047
  %1165 = phi i64 [ %1198, %1126 ], [ %1198, %1128 ], [ %1198, %1163 ], [ 0, %1050 ], [ 0, %1047 ]
  store i64 %1165, i64* %529, align 8
  %1166 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %1167 = load i32, i32* %13, align 4
  %1168 = load i32, i32* %245, align 4
  %1169 = load i8*, i8** %14, align 8
  call void @_ZN5angle5spirv15WriteEntryPointEPNSt3__16vectorIjNS1_9allocatorIjEEEEN3spv14ExecutionModelENS0_11BoxedUint32INS0_11IdRefHelperEEEPKcRKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"* %1166, i32 %1167, i32 %1168, i8* %1169, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %15) #14
  store i64 0, i64* %529, align 8
  %1170 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %527, align 8
  %1171 = icmp eq %"class.angle::spirv::BoxedUint32"* %1170, %528
  %1172 = icmp eq %"class.angle::spirv::BoxedUint32"* %1170, null
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %1201, label %1174

1174:                                             ; preds = %1164
  %1175 = bitcast %"class.angle::spirv::BoxedUint32"* %1170 to i8*
  call void @_ZdaPv(i8* %1175) #17
  br label %1201

1176:                                             ; preds = %1050, %1196
  %1177 = phi i64 [ %1197, %1196 ], [ %1051, %1050 ]
  %1178 = phi i64 [ %1199, %1196 ], [ 0, %1050 ]
  %1179 = phi i64 [ %1198, %1196 ], [ 0, %1050 ]
  %1180 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %527, align 8
  %1181 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1180, i64 %1178, i32 0, i32 0
  %1182 = load i32, i32* %1181, align 4
  %1183 = zext i32 %1182 to i64
  %1184 = load i64*, i64** %468, align 8
  %1185 = lshr i64 %1183, 6
  %1186 = getelementptr inbounds i64, i64* %1184, i64 %1185
  %1187 = and i64 %1183, 63
  %1188 = shl i64 1, %1187
  %1189 = load i64, i64* %1186, align 8
  %1190 = and i64 %1188, %1189
  %1191 = icmp eq i64 %1190, 0
  br i1 %1191, label %1192, label %1196

1192:                                             ; preds = %1176
  %1193 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1180, i64 %1179, i32 0, i32 0
  store i32 %1182, i32* %1193, align 4
  %1194 = add i64 %1179, 1
  %1195 = load i64, i64* %529, align 8
  br label %1196

1196:                                             ; preds = %1192, %1176
  %1197 = phi i64 [ %1195, %1192 ], [ %1177, %1176 ]
  %1198 = phi i64 [ %1194, %1192 ], [ %1179, %1176 ]
  %1199 = add nuw i64 %1178, 1
  %1200 = icmp ult i64 %1199, %1197
  br i1 %1200, label %1176, label %1126

1201:                                             ; preds = %1174, %1164
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %526) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %525) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %524) #14
  br label %1325

1202:                                             ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %521) #14
  store i32 0, i32* %522, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %523) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  call void @_ZN5angle5spirv9ParseNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKc(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %11, i8** nonnull %12) #14
  %1203 = load i32, i32* %522, align 4
  %1204 = zext i32 %1203 to i64
  %1205 = load i64*, i64** %468, align 8
  %1206 = lshr i64 %1204, 6
  %1207 = getelementptr inbounds i64, i64* %1205, i64 %1206
  %1208 = and i64 %1204, 63
  %1209 = shl i64 1, %1208
  %1210 = load i64, i64* %1207, align 8
  %1211 = and i64 %1209, %1210
  %1212 = icmp eq i64 %1211, 0
  %1213 = zext i1 %1212 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %523) #14
  br label %1313

1214:                                             ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %513) #14
  store i32 0, i32* %514, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %515) #14
  store i32 -1431655766, i32* %9, align 4
  call void @_ZN5angle5spirv13ParseDecorateEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv10DecorationEPNS_10FastVectorINS3_INS0_20LiteralIntegerHelperEEELm8ENSt3__15arrayISC_Lm8EEEEE(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %8, i32* nonnull %9, %"class.angle::FastVector.271"* null) #14
  %1215 = load i32, i32* %514, align 4
  %1216 = zext i32 %1215 to i64
  %1217 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %497, align 8
  %1218 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1217, i64 %1216, i32 0, i32 0
  %1219 = load i32, i32* %1218, align 4
  %1220 = icmp eq i32 %1219, 0
  br i1 %1220, label %1265, label %1221

1221:                                             ; preds = %1214
  %1222 = load i32, i32* %9, align 4
  %1223 = icmp eq i32 %1222, 30
  br i1 %1223, label %1224, label %1292

1224:                                             ; preds = %1221
  %1225 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %1226 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1225, i64 %1216
  %1227 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1226, align 8
  %1228 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1227, i64 0, i32 13
  %1229 = load i8, i8* %1228, align 4
  %1230 = icmp eq i8 %1229, 0
  br i1 %1230, label %1291, label %1231

1231:                                             ; preds = %1224
  %1232 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1227, i64 0, i32 2
  br label %1233

1233:                                             ; preds = %1260, %1231
  %1234 = phi i8 [ %1229, %1231 ], [ %1261, %1260 ]
  %1235 = phi i64 [ 0, %1231 ], [ %1262, %1260 ]
  %1236 = trunc i64 %1235 to i32
  %1237 = add i32 %1219, %1236
  %1238 = zext i32 %1237 to i64
  %1239 = load i64*, i64** %468, align 8
  %1240 = lshr i64 %1238, 6
  %1241 = getelementptr inbounds i64, i64* %1239, i64 %1240
  %1242 = and i64 %1238, 63
  %1243 = shl i64 1, %1242
  %1244 = load i64, i64* %1241, align 8
  %1245 = and i64 %1243, %1244
  %1246 = icmp eq i64 %1245, 0
  br i1 %1246, label %1247, label %1260

1247:                                             ; preds = %1233
  %1248 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %1249 = load i32, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %516) #14
  %1250 = load i32, i32* %1232, align 8
  %1251 = add i32 %1250, %1236
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %516, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %518, %"class.angle::spirv::BoxedUint32.273"** %517, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %559, align 8
  store i32 %1251, i32* %520, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %1248, i32 %1237, i32 %1249, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %10) #14
  store i64 0, i64* %519, align 8
  %1252 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %517, align 8
  %1253 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %1252, %518
  %1254 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %1252, null
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %1258, label %1256

1256:                                             ; preds = %1247
  %1257 = bitcast %"class.angle::spirv::BoxedUint32.273"* %1252 to i8*
  call void @_ZdaPv(i8* %1257) #17
  br label %1258

1258:                                             ; preds = %1256, %1247
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %516) #14
  %1259 = load i8, i8* %1228, align 4
  br label %1260

1260:                                             ; preds = %1258, %1233
  %1261 = phi i8 [ %1234, %1233 ], [ %1259, %1258 ]
  %1262 = add nuw nsw i64 %1235, 1
  %1263 = zext i8 %1261 to i64
  %1264 = icmp ult i64 %1262, %1263
  br i1 %1264, label %1233, label %1291

1265:                                             ; preds = %1214
  %1266 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %467, align 8
  %1267 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1266, i64 %1216
  %1268 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1267, align 8
  %1269 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %1268, null
  br i1 %1269, label %1292, label %1270

1270:                                             ; preds = %1265
  %1271 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1268, i64 0, i32 12
  %1272 = load i8, i8* %1271, align 1
  %1273 = icmp eq i8 %1272, 0
  br i1 %1273, label %1292, label %1274

1274:                                             ; preds = %1270
  %1275 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1268, i64 0, i32 5, i32 0
  %1276 = load i8, i8* %1275, align 1
  %1277 = and i8 %1276, 1
  %1278 = icmp eq i8 %1277, 0
  br i1 %1278, label %1292, label %1279

1279:                                             ; preds = %1274
  %1280 = load i32, i32* %9, align 4
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1292, label %1282

1282:                                             ; preds = %1279
  %1283 = load i64*, i64** %468, align 8
  %1284 = lshr i64 %1216, 6
  %1285 = getelementptr inbounds i64, i64* %1283, i64 %1284
  %1286 = and i64 %1216, 63
  %1287 = shl i64 1, %1286
  %1288 = load i64, i64* %1285, align 8
  %1289 = and i64 %1288, %1287
  %1290 = icmp eq i64 %1289, 0
  br i1 %1290, label %1292, label %1291

1291:                                             ; preds = %1260, %1282, %1224
  br label %1292

1292:                                             ; preds = %1291, %1282, %1279, %1274, %1270, %1265, %1221
  %1293 = phi i32 [ 0, %1291 ], [ 1, %1282 ], [ 1, %1221 ], [ 0, %1279 ], [ 1, %1265 ], [ 1, %1270 ], [ 1, %1274 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %515) #14
  br label %1313

1294:                                             ; preds = %974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %508) #14
  store i32 0, i32* %509, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %510) #14
  store i32 0, i32* %511, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %512) #14
  store i32 -1431655766, i32* %7, align 4
  call void @_ZN5angle5spirv13ParseVariableEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv12StorageClassES6_(i32* %566, %"class.angle::spirv::BoxedUint32"* nonnull %5, %"class.angle::spirv::BoxedUint32"* nonnull %6, i32* nonnull %7, %"class.angle::spirv::BoxedUint32"* null) #14
  %1295 = load i32, i32* %511, align 4
  %1296 = zext i32 %1295 to i64
  %1297 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %497, align 8
  %1298 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1297, i64 %1296, i32 0, i32 0
  %1299 = load i32, i32* %1298, align 4
  %1300 = icmp eq i32 %1299, 0
  br i1 %1300, label %1301, label %1310

1301:                                             ; preds = %1294
  %1302 = load i64*, i64** %468, align 8
  %1303 = lshr i64 %1296, 6
  %1304 = getelementptr inbounds i64, i64* %1302, i64 %1303
  %1305 = and i64 %1296, 63
  %1306 = shl i64 1, %1305
  %1307 = load i64, i64* %1304, align 8
  %1308 = and i64 %1307, %1306
  %1309 = icmp eq i64 %1308, 0
  br i1 %1309, label %1311, label %1310

1310:                                             ; preds = %1301, %1294
  br label %1311

1311:                                             ; preds = %1310, %1301
  %1312 = phi i32 [ 0, %1310 ], [ 1, %1301 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %512) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %510) #14
  br label %1313

1313:                                             ; preds = %1311, %1292, %1202, %972, %933
  %1314 = phi i8* [ %508, %1311 ], [ %513, %1292 ], [ %521, %1202 ], [ %491, %972 ], [ %498, %933 ]
  %1315 = phi i32 [ %1312, %1311 ], [ %1293, %1292 ], [ %1213, %1202 ], [ %973, %972 ], [ %926, %933 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1314) #14
  %1316 = icmp eq i32 %1315, 1
  br i1 %1316, label %1317, label %1325

1317:                                             ; preds = %1313, %1046, %1002, %991, %981, %974, %879
  %1318 = load i32, i32* %35, align 4
  %1319 = zext i32 %1318 to i64
  %1320 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %201, align 8
  %1321 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1320, i64 0, i32 0, i32 1
  %1322 = load i32*, i32** %1321, align 8
  %1323 = getelementptr inbounds i32, i32* %566, i64 %1319
  %1324 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPjEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %1320, i32* %1322, i32* %566, i32* %1323) #14
  br label %1325

1325:                                             ; preds = %1317, %1313, %1201
  %1326 = load i32, i32* %35, align 4
  %1327 = zext i32 %1326 to i64
  %1328 = load i64, i64* %202, align 8
  %1329 = add i64 %1328, %1327
  store i64 %1329, i64* %202, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %465) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %464) #14
  %1330 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %199, align 8
  %1331 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1330, i64 0, i32 0, i32 1
  %1332 = bitcast i32** %1331 to i64*
  %1333 = load i64, i64* %1332, align 8
  %1334 = bitcast %"class.std::__1::vector"* %1330 to i64*
  %1335 = load i64, i64* %1334, align 8
  %1336 = sub i64 %1333, %1335
  %1337 = ashr exact i64 %1336, 2
  %1338 = icmp ult i64 %1329, %1337
  br i1 %1338, label %561, label %1339

1339:                                             ; preds = %1325, %452
  %1340 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 3, i32 0, i32 0
  %1341 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1340, align 8
  %1342 = icmp eq %"class.angle::spirv::BoxedUint32"* %1341, null
  br i1 %1342, label %1346, label %1343

1343:                                             ; preds = %1339
  %1344 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1341 to i64
  store i64 %1344, i64* %284, align 8
  %1345 = bitcast %"class.angle::spirv::BoxedUint32"* %1341 to i8*
  call void @_ZdlPv(i8* %1345) #17
  br label %1346

1346:                                             ; preds = %1343, %1339
  %1347 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 2, i32 0
  %1348 = load i64*, i64** %1347, align 8
  %1349 = icmp eq i64* %1348, null
  br i1 %1349, label %1352, label %1350

1350:                                             ; preds = %1346
  %1351 = bitcast i64* %1348 to i8*
  call void @_ZdlPv(i8* %1351) #17
  br label %1352

1352:                                             ; preds = %1350, %1346
  %1353 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 15, i32 1, i32 0, i32 0
  %1354 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1353, align 8
  %1355 = icmp eq %"class.angle::spirv::BoxedUint32"* %1354, null
  br i1 %1355, label %1361, label %1356

1356:                                             ; preds = %1352
  %1357 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1354 to i64
  %1358 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 15, i32 1, i32 0, i32 1
  %1359 = bitcast %"class.angle::spirv::BoxedUint32"** %1358 to i64*
  store i64 %1357, i64* %1359, align 8
  %1360 = bitcast %"class.angle::spirv::BoxedUint32"* %1354 to i8*
  call void @_ZdlPv(i8* %1360) #17
  br label %1361

1361:                                             ; preds = %1356, %1352
  %1362 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 14, i32 1, i32 0, i32 0
  %1363 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1362, align 8
  %1364 = icmp eq %"class.angle::spirv::BoxedUint32"* %1363, null
  br i1 %1364, label %1370, label %1365

1365:                                             ; preds = %1361
  %1366 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1363 to i64
  %1367 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 14, i32 1, i32 0, i32 1
  %1368 = bitcast %"class.angle::spirv::BoxedUint32"** %1367 to i64*
  store i64 %1366, i64* %1368, align 8
  %1369 = bitcast %"class.angle::spirv::BoxedUint32"* %1363 to i8*
  call void @_ZdlPv(i8* %1369) #17
  br label %1370

1370:                                             ; preds = %1365, %1361
  %1371 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 13, i32 1, i32 0, i32 0
  %1372 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1371, align 8
  %1373 = icmp eq %"class.angle::spirv::BoxedUint32"* %1372, null
  br i1 %1373, label %1379, label %1374

1374:                                             ; preds = %1370
  %1375 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1372 to i64
  %1376 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 13, i32 1, i32 0, i32 1
  %1377 = bitcast %"class.angle::spirv::BoxedUint32"** %1376 to i64*
  store i64 %1375, i64* %1377, align 8
  %1378 = bitcast %"class.angle::spirv::BoxedUint32"* %1372 to i8*
  call void @_ZdlPv(i8* %1378) #17
  br label %1379

1379:                                             ; preds = %1374, %1370
  %1380 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 12, i32 1, i32 0, i32 0
  %1381 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1380, align 8
  %1382 = icmp eq %"class.angle::spirv::BoxedUint32"* %1381, null
  br i1 %1382, label %1388, label %1383

1383:                                             ; preds = %1379
  %1384 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1381 to i64
  %1385 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 12, i32 1, i32 0, i32 1
  %1386 = bitcast %"class.angle::spirv::BoxedUint32"** %1385 to i64*
  store i64 %1384, i64* %1386, align 8
  %1387 = bitcast %"class.angle::spirv::BoxedUint32"* %1381 to i8*
  call void @_ZdlPv(i8* %1387) #17
  br label %1388

1388:                                             ; preds = %1383, %1379
  %1389 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 11, i32 1, i32 0, i32 0
  %1390 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1389, align 8
  %1391 = icmp eq %"class.angle::spirv::BoxedUint32"* %1390, null
  br i1 %1391, label %1397, label %1392

1392:                                             ; preds = %1388
  %1393 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1390 to i64
  %1394 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 11, i32 1, i32 0, i32 1
  %1395 = bitcast %"class.angle::spirv::BoxedUint32"** %1394 to i64*
  store i64 %1393, i64* %1395, align 8
  %1396 = bitcast %"class.angle::spirv::BoxedUint32"* %1390 to i8*
  call void @_ZdlPv(i8* %1396) #17
  br label %1397

1397:                                             ; preds = %1392, %1388
  %1398 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 10, i32 1, i32 0, i32 0
  %1399 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1398, align 8
  %1400 = icmp eq %"class.angle::spirv::BoxedUint32"* %1399, null
  br i1 %1400, label %1406, label %1401

1401:                                             ; preds = %1397
  %1402 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1399 to i64
  %1403 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 10, i32 1, i32 0, i32 1
  %1404 = bitcast %"class.angle::spirv::BoxedUint32"** %1403 to i64*
  store i64 %1402, i64* %1404, align 8
  %1405 = bitcast %"class.angle::spirv::BoxedUint32"* %1399 to i8*
  call void @_ZdlPv(i8* %1405) #17
  br label %1406

1406:                                             ; preds = %1401, %1397
  %1407 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 9, i32 1, i32 0, i32 0
  %1408 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1407, align 8
  %1409 = icmp eq %"class.angle::spirv::BoxedUint32"* %1408, null
  br i1 %1409, label %1415, label %1410

1410:                                             ; preds = %1406
  %1411 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1408 to i64
  %1412 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 9, i32 1, i32 0, i32 1
  %1413 = bitcast %"class.angle::spirv::BoxedUint32"** %1412 to i64*
  store i64 %1411, i64* %1413, align 8
  %1414 = bitcast %"class.angle::spirv::BoxedUint32"* %1408 to i8*
  call void @_ZdlPv(i8* %1414) #17
  br label %1415

1415:                                             ; preds = %1410, %1406
  %1416 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 8, i32 1, i32 0, i32 0
  %1417 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1416, align 8
  %1418 = icmp eq %"class.angle::spirv::BoxedUint32"* %1417, null
  br i1 %1418, label %1424, label %1419

1419:                                             ; preds = %1415
  %1420 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1417 to i64
  %1421 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 8, i32 1, i32 0, i32 1
  %1422 = bitcast %"class.angle::spirv::BoxedUint32"** %1421 to i64*
  store i64 %1420, i64* %1422, align 8
  %1423 = bitcast %"class.angle::spirv::BoxedUint32"* %1417 to i8*
  call void @_ZdlPv(i8* %1423) #17
  br label %1424

1424:                                             ; preds = %1419, %1415
  %1425 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 7, i32 1, i32 0, i32 0
  %1426 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1425, align 8
  %1427 = icmp eq %"class.angle::spirv::BoxedUint32"* %1426, null
  br i1 %1427, label %1433, label %1428

1428:                                             ; preds = %1424
  %1429 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1426 to i64
  %1430 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 7, i32 1, i32 0, i32 1
  %1431 = bitcast %"class.angle::spirv::BoxedUint32"** %1430 to i64*
  store i64 %1429, i64* %1431, align 8
  %1432 = bitcast %"class.angle::spirv::BoxedUint32"* %1426 to i8*
  call void @_ZdlPv(i8* %1432) #17
  br label %1433

1433:                                             ; preds = %1428, %1424
  %1434 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 6, i32 1, i32 0, i32 0
  %1435 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1434, align 8
  %1436 = icmp eq %"class.angle::spirv::BoxedUint32"* %1435, null
  br i1 %1436, label %1442, label %1437

1437:                                             ; preds = %1433
  %1438 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1435 to i64
  %1439 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 6, i32 1, i32 0, i32 1
  %1440 = bitcast %"class.angle::spirv::BoxedUint32"** %1439 to i64*
  store i64 %1438, i64* %1440, align 8
  %1441 = bitcast %"class.angle::spirv::BoxedUint32"* %1435 to i8*
  call void @_ZdlPv(i8* %1441) #17
  br label %1442

1442:                                             ; preds = %1437, %1433
  %1443 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 5, i32 1, i32 0, i32 0
  %1444 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1443, align 8
  %1445 = icmp eq %"class.angle::spirv::BoxedUint32"* %1444, null
  br i1 %1445, label %1451, label %1446

1446:                                             ; preds = %1442
  %1447 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1444 to i64
  %1448 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 5, i32 1, i32 0, i32 1
  %1449 = bitcast %"class.angle::spirv::BoxedUint32"** %1448 to i64*
  store i64 %1447, i64* %1449, align 8
  %1450 = bitcast %"class.angle::spirv::BoxedUint32"* %1444 to i8*
  call void @_ZdlPv(i8* %1450) #17
  br label %1451

1451:                                             ; preds = %1446, %1442
  %1452 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 4, i32 1, i32 0, i32 0
  %1453 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1452, align 8
  %1454 = icmp eq %"class.angle::spirv::BoxedUint32"* %1453, null
  br i1 %1454, label %1460, label %1455

1455:                                             ; preds = %1451
  %1456 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1453 to i64
  %1457 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 4, i32 1, i32 0, i32 1
  %1458 = bitcast %"class.angle::spirv::BoxedUint32"** %1457 to i64*
  store i64 %1456, i64* %1458, align 8
  %1459 = bitcast %"class.angle::spirv::BoxedUint32"* %1453 to i8*
  call void @_ZdlPv(i8* %1459) #17
  br label %1460

1460:                                             ; preds = %1455, %1451
  %1461 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 3, i32 1, i32 0, i32 0
  %1462 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1461, align 8
  %1463 = icmp eq %"class.angle::spirv::BoxedUint32"* %1462, null
  br i1 %1463, label %1469, label %1464

1464:                                             ; preds = %1460
  %1465 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1462 to i64
  %1466 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 3, i32 1, i32 0, i32 1
  %1467 = bitcast %"class.angle::spirv::BoxedUint32"** %1466 to i64*
  store i64 %1465, i64* %1467, align 8
  %1468 = bitcast %"class.angle::spirv::BoxedUint32"* %1462 to i8*
  call void @_ZdlPv(i8* %1468) #17
  br label %1469

1469:                                             ; preds = %1464, %1460
  %1470 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 2, i32 1, i32 0, i32 0
  %1471 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1470, align 8
  %1472 = icmp eq %"class.angle::spirv::BoxedUint32"* %1471, null
  br i1 %1472, label %1478, label %1473

1473:                                             ; preds = %1469
  %1474 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1471 to i64
  %1475 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 2, i32 1, i32 0, i32 1
  %1476 = bitcast %"class.angle::spirv::BoxedUint32"** %1475 to i64*
  store i64 %1474, i64* %1476, align 8
  %1477 = bitcast %"class.angle::spirv::BoxedUint32"* %1471 to i8*
  call void @_ZdlPv(i8* %1477) #17
  br label %1478

1478:                                             ; preds = %1473, %1469
  %1479 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 1, i32 1, i32 0, i32 0
  %1480 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1479, align 8
  %1481 = icmp eq %"class.angle::spirv::BoxedUint32"* %1480, null
  br i1 %1481, label %1487, label %1482

1482:                                             ; preds = %1478
  %1483 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1480 to i64
  %1484 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 1, i32 1, i32 0, i32 1
  %1485 = bitcast %"class.angle::spirv::BoxedUint32"** %1484 to i64*
  store i64 %1483, i64* %1485, align 8
  %1486 = bitcast %"class.angle::spirv::BoxedUint32"* %1480 to i8*
  call void @_ZdlPv(i8* %1486) #17
  br label %1487

1487:                                             ; preds = %1482, %1478
  %1488 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 0, i32 1, i32 0, i32 0
  %1489 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1488, align 8
  %1490 = icmp eq %"class.angle::spirv::BoxedUint32"* %1489, null
  br i1 %1490, label %1496, label %1491

1491:                                             ; preds = %1487
  %1492 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1489 to i64
  %1493 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 1, i32 0, i64 0, i32 1, i32 0, i32 1
  %1494 = bitcast %"class.angle::spirv::BoxedUint32"** %1493 to i64*
  store i64 %1492, i64* %1494, align 8
  %1495 = bitcast %"class.angle::spirv::BoxedUint32"* %1489 to i8*
  call void @_ZdlPv(i8* %1495) #17
  br label %1496

1496:                                             ; preds = %1491, %1487
  %1497 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %1497) #14
  %1498 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 7, i32 8, i32 0
  %1499 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %1498, i64 0, i32 0
  %1500 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1499, align 8
  %1501 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1500, null
  br i1 %1501, label %1517, label %1502

1502:                                             ; preds = %1496
  %1503 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1500 to i8*
  %1504 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 6, i32 7, i32 8, i32 0, i32 1
  %1505 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1504, align 8
  %1506 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1505, %1500
  br i1 %1506, label %1515, label %1507

1507:                                             ; preds = %1502, %1507
  %1508 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %1509, %1507 ], [ %1505, %1502 ]
  %1509 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1508, i64 -1
  %1510 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1508, i64 -1, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %1510) #14
  %1511 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1509, %1500
  br i1 %1511, label %1512, label %1507

1512:                                             ; preds = %1507
  %1513 = bitcast %"class.std::__1::__vector_base.146"* %1498 to i8**
  %1514 = load i8*, i8** %1513, align 8
  br label %1515

1515:                                             ; preds = %1512, %1502
  %1516 = phi i8* [ %1514, %1512 ], [ %1503, %1502 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1500, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1504, align 8
  call void @_ZdlPv(i8* %1516) #17
  br label %1517

1517:                                             ; preds = %1515, %1496
  %1518 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %45, i64 0, i32 0, i32 5, i32 0, i32 0
  %1519 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %1518, align 8
  %1520 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"** %1519, null
  br i1 %1520, label %1524, label %1521

1521:                                             ; preds = %1517
  %1522 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %1519 to i64
  store i64 %1522, i64* %252, align 8
  %1523 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %1519 to i8*
  call void @_ZdlPv(i8* %1523) #17
  br label %1524

1524:                                             ; preds = %1517, %1521
  call void @llvm.lifetime.end.p0i8(i64 848, i8* nonnull %198) #14
  %1525 = load i32*, i32** %186, align 16
  %1526 = icmp eq i32* %1525, null
  br i1 %1526, label %1530, label %1527

1527:                                             ; preds = %1524
  %1528 = ptrtoint i32* %1525 to i64
  store i64 %1528, i64* %191, align 8
  %1529 = bitcast i32* %1525 to i8*
  call void @_ZdlPv(i8* %1529) #17
  br label %1530

1530:                                             ; preds = %1524, %1527
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #14
  br label %1531

1531:                                             ; preds = %174, %114, %1530, %51
  %1532 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %1533 = bitcast i32** %1532 to i64*
  %1534 = load i64, i64* %1533, align 8
  %1535 = bitcast %"class.std::__1::vector"* %3 to i64*
  %1536 = load i64, i64* %1535, align 8
  %1537 = sub i64 %1534, %1536
  %1538 = ashr exact i64 %1537, 2
  %1539 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %1540 = bitcast i32** %1539 to i64*
  %1541 = load i64, i64* %1540, align 8
  %1542 = sub i64 %1541, %1536
  %1543 = ashr exact i64 %1542, 2
  %1544 = icmp ugt i64 %1538, %1543
  br i1 %1544, label %1545, label %1568

1545:                                             ; preds = %1531
  %1546 = icmp eq i64 %1542, 0
  br i1 %1546, label %1547, label %1550

1547:                                             ; preds = %1545
  %1548 = getelementptr inbounds i32, i32* null, i64 %1543
  %1549 = ptrtoint i32* %1548 to i64
  br label %1562

1550:                                             ; preds = %1545
  %1551 = icmp ugt i64 %1543, 4611686018427387903
  br i1 %1551, label %1552, label %1553

1552:                                             ; preds = %1550
  call void @abort() #18
  unreachable

1553:                                             ; preds = %1550
  %1554 = call i8* @_Znwm(i64 %1542) #17
  %1555 = bitcast i8* %1554 to i32*
  %1556 = getelementptr inbounds i32, i32* %1555, i64 %1543
  %1557 = ptrtoint i32* %1556 to i64
  %1558 = ptrtoint i8* %1554 to i64
  %1559 = icmp sgt i64 %1542, 0
  br i1 %1559, label %1560, label %1562

1560:                                             ; preds = %1553
  %1561 = inttoptr i64 %1536 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1554, i8* align 4 %1561, i64 %1542, i1 false) #14
  br label %1562

1562:                                             ; preds = %1560, %1553, %1547
  %1563 = phi i64 [ %1558, %1553 ], [ %1558, %1560 ], [ 0, %1547 ]
  %1564 = phi i64 [ %1557, %1553 ], [ %1557, %1560 ], [ %1549, %1547 ]
  store i64 %1563, i64* %1535, align 8
  store i64 %1564, i64* %1540, align 8
  store i64 %1564, i64* %1533, align 8
  %1565 = icmp eq i64 %1536, 0
  br i1 %1565, label %1568, label %1566

1566:                                             ; preds = %1562
  %1567 = inttoptr i64 %1536 to i8*
  call void @_ZdlPv(i8* %1567) #17
  br label %1568

1568:                                             ; preds = %1531, %1562, %1566
  %1569 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 3, i32 0, i32 0
  %1570 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1569, align 8
  %1571 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1570, null
  br i1 %1571, label %1577, label %1572

1572:                                             ; preds = %1568
  %1573 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1570 to i64
  %1574 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 3, i32 0, i32 1
  %1575 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1574 to i64*
  store i64 %1573, i64* %1575, align 8
  %1576 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1570 to i8*
  call void @_ZdlPv(i8* %1576) #17
  br label %1577

1577:                                             ; preds = %1572, %1568
  %1578 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 2, i32 0, i32 0
  %1579 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1578, align 8
  %1580 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1579, null
  br i1 %1580, label %1586, label %1581

1581:                                             ; preds = %1577
  %1582 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1579 to i64
  %1583 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 2, i32 0, i32 1
  %1584 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1583 to i64*
  store i64 %1582, i64* %1584, align 8
  %1585 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1579 to i8*
  call void @_ZdlPv(i8* %1585) #17
  br label %1586

1586:                                             ; preds = %1581, %1577
  %1587 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 1, i32 0, i32 0
  %1588 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1587, align 8
  %1589 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1588, null
  br i1 %1589, label %1595, label %1590

1590:                                             ; preds = %1586
  %1591 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1588 to i64
  %1592 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 1, i32 0, i32 1
  %1593 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1592 to i64*
  store i64 %1591, i64* %1593, align 8
  %1594 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1588 to i8*
  call void @_ZdlPv(i8* %1594) #17
  br label %1595

1595:                                             ; preds = %1590, %1586
  %1596 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 0, i32 0, i32 0
  %1597 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1596, align 8
  %1598 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1597, null
  br i1 %1598, label %1604, label %1599

1599:                                             ; preds = %1595
  %1600 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1597 to i64
  %1601 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 10, i32 18, i32 0, i64 0, i32 0, i32 1
  %1602 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1601 to i64*
  store i64 %1600, i64* %1602, align 8
  %1603 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1597 to i8*
  call void @_ZdlPv(i8* %1603) #17
  br label %1604

1604:                                             ; preds = %1599, %1595
  store i64 0, i64* %85, align 8
  %1605 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %82, align 8
  %1606 = icmp eq %"class.angle::spirv::BoxedUint32"* %1605, %83
  %1607 = icmp eq %"class.angle::spirv::BoxedUint32"* %1605, null
  %1608 = or i1 %1606, %1607
  br i1 %1608, label %1611, label %1609

1609:                                             ; preds = %1604
  %1610 = bitcast %"class.angle::spirv::BoxedUint32"* %1605 to i8*
  call void @_ZdaPv(i8* %1610) #17
  br label %1611

1611:                                             ; preds = %1609, %1604
  %1612 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 9, i32 2, i32 0, i32 0
  %1613 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1612, align 8
  %1614 = icmp eq %"class.angle::spirv::BoxedUint32"* %1613, null
  br i1 %1614, label %1620, label %1615

1615:                                             ; preds = %1611
  %1616 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1613 to i64
  %1617 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 9, i32 2, i32 0, i32 1
  %1618 = bitcast %"class.angle::spirv::BoxedUint32"** %1617 to i64*
  store i64 %1616, i64* %1618, align 8
  %1619 = bitcast %"class.angle::spirv::BoxedUint32"* %1613 to i8*
  call void @_ZdlPv(i8* %1619) #17
  br label %1620

1620:                                             ; preds = %1615, %1611
  %1621 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 9, i32 1, i32 0, i32 0
  %1622 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1621, align 8
  %1623 = icmp eq %"class.angle::spirv::BoxedUint32"* %1622, null
  br i1 %1623, label %1629, label %1624

1624:                                             ; preds = %1620
  %1625 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1622 to i64
  %1626 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 9, i32 1, i32 0, i32 1
  %1627 = bitcast %"class.angle::spirv::BoxedUint32"** %1626 to i64*
  store i64 %1625, i64* %1627, align 8
  %1628 = bitcast %"class.angle::spirv::BoxedUint32"* %1622 to i8*
  call void @_ZdlPv(i8* %1628) #17
  br label %1629

1629:                                             ; preds = %1624, %1620
  %1630 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 9, i32 0, i32 0, i32 0
  %1631 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1630, align 8
  %1632 = icmp eq %"class.angle::spirv::BoxedUint32"* %1631, null
  br i1 %1632, label %1638, label %1633

1633:                                             ; preds = %1629
  %1634 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1631 to i64
  %1635 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 9, i32 0, i32 0, i32 1
  %1636 = bitcast %"class.angle::spirv::BoxedUint32"** %1635 to i64*
  store i64 %1634, i64* %1636, align 8
  %1637 = bitcast %"class.angle::spirv::BoxedUint32"* %1631 to i8*
  call void @_ZdlPv(i8* %1637) #17
  br label %1638

1638:                                             ; preds = %1633, %1629
  %1639 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 8, i32 0, i32 0, i32 0
  %1640 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1639, align 8
  %1641 = icmp eq %"class.angle::spirv::BoxedUint32"* %1640, null
  br i1 %1641, label %1647, label %1642

1642:                                             ; preds = %1638
  %1643 = ptrtoint %"class.angle::spirv::BoxedUint32"* %1640 to i64
  %1644 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 8, i32 0, i32 0, i32 1
  %1645 = bitcast %"class.angle::spirv::BoxedUint32"** %1644 to i64*
  store i64 %1643, i64* %1645, align 8
  %1646 = bitcast %"class.angle::spirv::BoxedUint32"* %1640 to i8*
  call void @_ZdlPv(i8* %1646) #17
  br label %1647

1647:                                             ; preds = %1642, %1638
  %1648 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 6, i32 1, i32 0
  %1649 = load i64*, i64** %1648, align 8
  %1650 = icmp eq i64* %1649, null
  br i1 %1650, label %1653, label %1651

1651:                                             ; preds = %1647
  %1652 = bitcast i64* %1649 to i8*
  call void @_ZdlPv(i8* %1652) #17
  br label %1653

1653:                                             ; preds = %1651, %1647
  %1654 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 6, i32 0, i32 0, i32 0
  %1655 = load i8**, i8*** %1654, align 8
  %1656 = icmp eq i8** %1655, null
  br i1 %1656, label %1662, label %1657

1657:                                             ; preds = %1653
  %1658 = ptrtoint i8** %1655 to i64
  %1659 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 6, i32 0, i32 0, i32 1
  %1660 = bitcast i8*** %1659 to i64*
  store i64 %1658, i64* %1660, align 8
  %1661 = bitcast i8** %1655 to i8*
  call void @_ZdlPv(i8* %1661) #17
  br label %1662

1662:                                             ; preds = %1657, %1653
  %1663 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %1663) #14
  %1664 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 7, i32 8, i32 0
  %1665 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %1664, i64 0, i32 0
  %1666 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1665, align 8
  %1667 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1666, null
  br i1 %1667, label %1683, label %1668

1668:                                             ; preds = %1662
  %1669 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1666 to i8*
  %1670 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 6, i32 7, i32 8, i32 0, i32 1
  %1671 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1670, align 8
  %1672 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1671, %1666
  br i1 %1672, label %1681, label %1673

1673:                                             ; preds = %1668, %1673
  %1674 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %1675, %1673 ], [ %1671, %1668 ]
  %1675 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1674, i64 -1
  %1676 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1674, i64 -1, i32 8
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %1676) #14
  %1677 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1675, %1666
  br i1 %1677, label %1678, label %1673

1678:                                             ; preds = %1673
  %1679 = bitcast %"class.std::__1::__vector_base.146"* %1664 to i8**
  %1680 = load i8*, i8** %1679, align 8
  br label %1681

1681:                                             ; preds = %1678, %1668
  %1682 = phi i8* [ %1680, %1678 ], [ %1669, %1668 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1666, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1670, align 8
  call void @_ZdlPv(i8* %1682) #17
  br label %1683

1683:                                             ; preds = %1681, %1662
  %1684 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 5, i32 0, i32 0
  %1685 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %1684, align 8
  %1686 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"** %1685, null
  br i1 %1686, label %1692, label %1687

1687:                                             ; preds = %1683
  %1688 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %1685 to i64
  %1689 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %43, i64 0, i32 0, i32 5, i32 0, i32 1
  %1690 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %1689 to i64*
  store i64 %1688, i64* %1690, align 8
  %1691 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %1685 to i8*
  call void @_ZdlPv(i8* %1691) #17
  br label %1692

1692:                                             ; preds = %1683, %1687
  call void @llvm.lifetime.end.p0i8(i64 656, i8* nonnull %52) #14
  br label %1693

1693:                                             ; preds = %4, %1692
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_116SpirvTransformer9transformEv(%"class.rx::(anonymous namespace)::SpirvTransformer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %3 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %6 = alloca %"class.angle::FastVector.278", align 8
  %7 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %10 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %11 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.angle::FastVector.271", align 8
  %14 = alloca %"class.angle::FastVector.271", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.angle::FastVector.271", align 8
  %17 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.angle::FastVector.271", align 8
  %20 = alloca %"class.angle::FastVector.271", align 8
  %21 = alloca %"class.angle::FastVector.271", align 8
  %22 = alloca %"class.angle::FastVector.271", align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca %"class.angle::FastVector.278", align 8
  %27 = alloca i32, align 4
  %28 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %29 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %30 = alloca i8*, align 8
  %31 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %32 = alloca i8*, align 8
  %33 = alloca %"class.angle::FastVector.278", align 8
  %34 = alloca %"class.angle::FastVector.278", align 8
  %35 = alloca %"class.angle::FastVector.271", align 8
  %36 = alloca %"class.angle::FastVector.278", align 8
  %37 = alloca %"class.angle::FastVector.231", align 8
  %38 = alloca %"class.angle::FastVector.231", align 8
  %39 = alloca %"class.angle::FastVector.231", align 8
  %40 = alloca %"class.angle::FastVector.231", align 8
  %41 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %42 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %43 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %44 = alloca %"class.angle::FastVector.278", align 8
  %45 = alloca %"class.angle::FastVector.278", align 8
  %46 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %51 = alloca i32, align 4
  %52 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %53 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %54 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %55 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %56 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %57 = alloca i32, align 4
  %58 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %59 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %60 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %61 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %62 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %63 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %64 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %65 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %66 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %67 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %68 = alloca %"class.angle::spirv::BoxedUint32.273", align 4
  %69 = alloca i8*, align 8
  %70 = alloca %"class.std::__1::basic_string", align 8
  %71 = alloca %"class.std::__1::basic_string", align 8
  %72 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %73 = alloca i8*, align 8
  %74 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %75 = alloca i32, align 4
  %76 = alloca %"class.std::__1::basic_string", align 8
  %77 = alloca i8*, align 8
  %78 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %79 = alloca %"class.angle::spirv::BoxedUint32", align 4
  %80 = alloca i32, align 4
  %81 = alloca %"class.std::__1::basic_string", align 8
  %82 = alloca %"struct.rx::ShaderInterfaceVariableInfo"*, align 8
  %83 = alloca i32, align 4
  %84 = alloca i32, align 4
  %85 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 2
  %86 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %87 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 0
  %88 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 5
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %86, i32* %90, i32* %91) #14
  %92 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 3
  store i64 5, i64* %92, align 8
  %93 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 3
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6
  %100 = bitcast i8** %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #14
  store i8* null, i8** %77, align 8
  %101 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %102 = bitcast i8*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.rx::(anonymous namespace)::SpirvIDDiscoverer"* %99 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %107, %98
  %109 = inttoptr i64 %105 to i8**
  br i1 %108, label %110, label %113

110:                                              ; preds = %1
  %111 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvIDDiscoverer", %"class.rx::(anonymous namespace)::SpirvIDDiscoverer"* %99, i64 0, i32 0
  %112 = sub nsw i64 %98, %107
  call void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.210"* %111, i64 %112, i8** nonnull dereferenceable(8) %77) #14
  br label %117

113:                                              ; preds = %1
  %114 = icmp ugt i64 %107, %98
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = getelementptr inbounds i8*, i8** %109, i64 %98
  store i8** %116, i8*** %101, align 8
  br label %117

117:                                              ; preds = %115, %113, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #14
  %118 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 1
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.217"* %118, i64 %98, i1 zeroext false) #14
  %119 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 8
  %120 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %121 = bitcast %"class.angle::spirv::BoxedUint32"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.rx::(anonymous namespace)::SpirvInactiveVaryingRemover"* %119 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %122, %124
  %126 = ashr exact i64 %125, 2
  %127 = icmp ult i64 %126, %98
  %128 = inttoptr i64 %124 to %"class.angle::spirv::BoxedUint32"*
  br i1 %127, label %129, label %132

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvInactiveVaryingRemover", %"class.rx::(anonymous namespace)::SpirvInactiveVaryingRemover"* %119, i64 0, i32 0
  %131 = sub nsw i64 %98, %126
  call void @_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.223"* %130, i64 %131) #14
  br label %136

132:                                              ; preds = %117
  %133 = icmp ugt i64 %126, %98
  br i1 %133, label %134, label %136

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %128, i64 %98
  store %"class.angle::spirv::BoxedUint32"* %135, %"class.angle::spirv::BoxedUint32"** %120, align 8
  br label %136

136:                                              ; preds = %134, %132, %129
  %137 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9
  %138 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %139 = bitcast %"class.angle::spirv::BoxedUint32"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.rx::(anonymous namespace)::SpirvVaryingPrecisionFixer"* %137 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %140, %142
  %144 = ashr exact i64 %143, 2
  %145 = icmp ult i64 %144, %98
  %146 = inttoptr i64 %142 to %"class.angle::spirv::BoxedUint32"*
  br i1 %145, label %147, label %150

147:                                              ; preds = %136
  %148 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVaryingPrecisionFixer", %"class.rx::(anonymous namespace)::SpirvVaryingPrecisionFixer"* %137, i64 0, i32 0
  %149 = sub nsw i64 %98, %144
  call void @_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.223"* %148, i64 %149) #14
  br label %154

150:                                              ; preds = %136
  %151 = icmp ugt i64 %144, %98
  br i1 %151, label %152, label %154

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %146, i64 %98
  store %"class.angle::spirv::BoxedUint32"* %153, %"class.angle::spirv::BoxedUint32"** %138, align 8
  br label %154

154:                                              ; preds = %152, %150, %147
  %155 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 1
  %156 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 1, i32 0, i32 1
  %157 = bitcast %"class.angle::spirv::BoxedUint32"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::vector.223"* %155 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %158, %160
  %162 = ashr exact i64 %161, 2
  %163 = icmp ult i64 %162, %98
  %164 = inttoptr i64 %160 to %"class.angle::spirv::BoxedUint32"*
  br i1 %163, label %165, label %167

165:                                              ; preds = %154
  %166 = sub nsw i64 %98, %162
  call void @_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.223"* %155, i64 %166) #14
  br label %171

167:                                              ; preds = %154
  %168 = icmp ugt i64 %162, %98
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %164, i64 %98
  store %"class.angle::spirv::BoxedUint32"* %170, %"class.angle::spirv::BoxedUint32"** %156, align 8
  br label %171

171:                                              ; preds = %169, %167, %165
  %172 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 2
  %173 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 2, i32 0, i32 1
  %174 = bitcast %"class.angle::spirv::BoxedUint32"** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.std::__1::vector.223"* %172 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 %175, %177
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, %98
  %181 = inttoptr i64 %177 to %"class.angle::spirv::BoxedUint32"*
  br i1 %180, label %182, label %184

182:                                              ; preds = %171
  %183 = sub nsw i64 %98, %179
  call void @_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.223"* %172, i64 %183) #14
  br label %188

184:                                              ; preds = %171
  %185 = icmp ugt i64 %179, %98
  br i1 %185, label %186, label %188

186:                                              ; preds = %184
  %187 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %181, i64 %98
  store %"class.angle::spirv::BoxedUint32"* %187, %"class.angle::spirv::BoxedUint32"** %173, align 8
  br label %188

188:                                              ; preds = %186, %184, %182
  %189 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 5
  %190 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #14
  store %"struct.rx::ShaderInterfaceVariableInfo"* null, %"struct.rx::ShaderInterfaceVariableInfo"** %82, align 8
  %191 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 5, i32 0, i32 1
  %192 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.std::__1::vector.203"* %189 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = ashr exact i64 %196, 3
  %198 = icmp ult i64 %197, %98
  %199 = inttoptr i64 %195 to %"struct.rx::ShaderInterfaceVariableInfo"**
  br i1 %198, label %200, label %202

200:                                              ; preds = %188
  %201 = sub nsw i64 %98, %197
  call void @_ZNSt3__16vectorIPKN2rx27ShaderInterfaceVariableInfoENS_9allocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.203"* %189, i64 %201, %"struct.rx::ShaderInterfaceVariableInfo"** nonnull dereferenceable(8) %82) #14
  br label %206

202:                                              ; preds = %188
  %203 = icmp ugt i64 %197, %98
  br i1 %203, label %204, label %206

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %199, i64 %98
  store %"struct.rx::ShaderInterfaceVariableInfo"** %205, %"struct.rx::ShaderInterfaceVariableInfo"*** %191, align 8
  br label %206

206:                                              ; preds = %204, %202, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #14
  %207 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %207, i64 0, i32 0, i32 1
  %209 = bitcast i32** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.std::__1::vector"* %207 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = sub i64 %210, %212
  %214 = ashr exact i64 %213, 2
  %215 = icmp ugt i64 %214, 5
  br i1 %215, label %216, label %947

216:                                              ; preds = %206
  %217 = bitcast i32* %83 to i8*
  %218 = bitcast i32* %84 to i8*
  %219 = bitcast %"class.angle::spirv::BoxedUint32"* %78 to i8*
  %220 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %78, i64 0, i32 0, i32 0
  %221 = bitcast %"class.angle::spirv::BoxedUint32"* %79 to i8*
  %222 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %79, i64 0, i32 0, i32 0
  %223 = bitcast i32* %80 to i8*
  %224 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 1, i32 0
  %225 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 6
  %227 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %228 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %229 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 12, i32 0, i32 0
  %230 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 1
  %231 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 0
  %232 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %236 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %236, i64 0, i32 1, i32 0
  %238 = ptrtoint %"class.std::__1::basic_string"* %81 to i64
  %239 = bitcast %"class.std::__1::basic_string"* %81 to i64*
  %240 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %241 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  %242 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 2, i32 0, i32 0
  %243 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 7
  %244 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10
  %245 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator", %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %244, i64 0, i32 0
  %246 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 1
  %247 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 2, i32 0, i32 0
  %248 = bitcast %"class.angle::spirv::BoxedUint32"* %53 to i8*
  %249 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %53, i64 0, i32 0, i32 0
  %250 = bitcast %"class.angle::spirv::BoxedUint32"* %54 to i8*
  %251 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %54, i64 0, i32 0, i32 0
  %252 = bitcast %"class.angle::spirv::BoxedUint32.273"* %55 to i8*
  %253 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %55, i64 0, i32 0, i32 0
  %254 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 4, i32 0, i32 0
  %255 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %256 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %257 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 8, i32 0, i32 0
  %258 = bitcast %"class.angle::spirv::BoxedUint32"* %56 to i8*
  %259 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %56, i64 0, i32 0, i32 0
  %260 = bitcast i32* %57 to i8*
  %261 = bitcast %"class.angle::spirv::BoxedUint32"* %58 to i8*
  %262 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %58, i64 0, i32 0, i32 0
  %263 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %264 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0
  %265 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 6, i32 0, i32 0
  %266 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 16, i32 0, i32 0
  %268 = bitcast %"class.angle::spirv::BoxedUint32"* %59 to i8*
  %269 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %59, i64 0, i32 0, i32 0
  %270 = bitcast %"class.angle::spirv::BoxedUint32.273"* %60 to i8*
  %271 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %60, i64 0, i32 0, i32 0
  %272 = bitcast %"class.angle::spirv::BoxedUint32.273"* %61 to i8*
  %273 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %61, i64 0, i32 0, i32 0
  %274 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 8, i32 0, i32 0
  %275 = bitcast %"class.angle::spirv::BoxedUint32"* %62 to i8*
  %276 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %62, i64 0, i32 0, i32 0
  %277 = bitcast %"class.angle::spirv::BoxedUint32.273"* %63 to i8*
  %278 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %63, i64 0, i32 0, i32 0
  %279 = bitcast %"class.angle::spirv::BoxedUint32"* %64 to i8*
  %280 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %64, i64 0, i32 0, i32 0
  %281 = bitcast %"class.angle::spirv::BoxedUint32"* %65 to i8*
  %282 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %65, i64 0, i32 0, i32 0
  %283 = bitcast %"class.angle::spirv::BoxedUint32"* %66 to i8*
  %284 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %66, i64 0, i32 0, i32 0
  %285 = bitcast %"class.angle::spirv::BoxedUint32"* %67 to i8*
  %286 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %67, i64 0, i32 0, i32 0
  %287 = bitcast %"class.angle::spirv::BoxedUint32.273"* %68 to i8*
  %288 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %68, i64 0, i32 0, i32 0
  %289 = bitcast i8** %69 to i8*
  %290 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %294, i64 0, i32 1, i32 0
  %296 = ptrtoint %"class.std::__1::basic_string"* %70 to i64
  %297 = bitcast %"class.std::__1::basic_string"* %70 to i64*
  %298 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %301 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %302 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %302, i64 0, i32 1, i32 0
  %304 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  %305 = bitcast %"class.std::__1::basic_string"* %71 to i64*
  %306 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 3, i32 1
  %307 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 2, i32 1
  %308 = bitcast %"class.angle::spirv::BoxedUint32"* %72 to i8*
  %309 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %72, i64 0, i32 0, i32 0
  %310 = bitcast i8** %73 to i8*
  %311 = bitcast i8** %73 to i64*
  %312 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 0
  %313 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 4, i32 0, i32 0
  %314 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 3, i32 0, i32 0
  %315 = bitcast %"class.angle::spirv::BoxedUint32"* %74 to i8*
  %316 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %74, i64 0, i32 0, i32 0
  %317 = bitcast i32* %75 to i8*
  %318 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %322 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %322, i64 0, i32 1, i32 0
  %324 = ptrtoint %"class.std::__1::basic_string"* %76 to i64
  %325 = bitcast %"class.std::__1::basic_string"* %76 to i64*
  br label %326

326:                                              ; preds = %934, %216
  %327 = phi %"class.std::__1::vector"* [ %207, %216 ], [ %938, %934 ]
  %328 = phi i64 [ 5, %216 ], [ %937, %934 ]
  %329 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %327, i64 0, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 %328
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217) #14
  store i32 -1431655766, i32* %83, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %218) #14
  store i32 -1431655766, i32* %84, align 4
  call void @_ZN5angle5spirv25GetInstructionOpAndLengthEPKjPN3spv2OpEPj(i32* %331, i32* nonnull %84, i32* nonnull %83) #14
  %332 = load i32, i32* %84, align 4
  switch i32 %332, label %934 [
    i32 71, label %342
    i32 5, label %433
    i32 6, label %465
    i32 28, label %617
    i32 22, label %649
    i32 21, label %655
    i32 32, label %665
    i32 23, label %734
    i32 59, label %749
    i32 54, label %333
  ]

333:                                              ; preds = %326
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %218) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #14
  %334 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %335 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 0, i32 0, i32 1
  %336 = bitcast i32** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.std::__1::vector"* %334 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %337, %339
  %341 = ashr exact i64 %340, 2
  br label %947

342:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %315) #14
  store i32 0, i32* %316, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %317) #14
  store i32 -1431655766, i32* %75, align 4
  call void @_ZN5angle5spirv13ParseDecorateEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv10DecorationEPNS_10FastVectorINS3_INS0_20LiteralIntegerHelperEEELm8ENSt3__15arrayISC_Lm8EEEEE(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %74, i32* nonnull %75, %"class.angle::FastVector.271"* null) #14
  %343 = load i32, i32* %316, align 4
  %344 = load i32, i32* %75, align 4
  %345 = icmp eq i32 %344, 2
  %346 = zext i32 %343 to i64
  %347 = load i64*, i64** %224, align 8
  %348 = lshr i64 %346, 6
  %349 = getelementptr inbounds i64, i64* %347, i64 %348
  %350 = and i64 %346, 63
  %351 = shl i64 1, %350
  br i1 %345, label %352, label %355

352:                                              ; preds = %342
  %353 = load i64, i64* %349, align 8
  %354 = or i64 %353, %351
  br label %359

355:                                              ; preds = %342
  %356 = xor i64 %351, -1
  %357 = load i64, i64* %349, align 8
  %358 = and i64 %357, %356
  br label %359

359:                                              ; preds = %355, %352
  %360 = phi i64 [ %358, %355 ], [ %354, %352 ]
  store i64 %360, i64* %349, align 8
  %361 = load i64*, i64** %224, align 8
  %362 = getelementptr inbounds i64, i64* %361, i64 %348
  %363 = load i64, i64* %362, align 8
  %364 = and i64 %363, %351
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %432, label %366

366:                                              ; preds = %359
  %367 = load i8**, i8*** %225, align 8
  %368 = getelementptr inbounds i8*, i8** %367, i64 %346
  %369 = load i8*, i8** %368, align 8
  %370 = load %"class.rx::ShaderInterfaceVariableInfoMap"*, %"class.rx::ShaderInterfaceVariableInfoMap"** %230, align 8
  %371 = load i8, i8* %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #14
  %372 = call i64 @strlen(i8* %369) #14
  %373 = icmp ugt i64 %372, -17
  br i1 %373, label %374, label %376

374:                                              ; preds = %366
  %375 = bitcast %"class.std::__1::basic_string"* %76 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %375) #18
  unreachable

376:                                              ; preds = %366
  %377 = icmp ult i64 %372, 23
  br i1 %377, label %383, label %378

378:                                              ; preds = %376
  %379 = add nuw i64 %372, 16
  %380 = and i64 %379, -16
  %381 = call i8* @_Znwm(i64 %380) #17
  store i8* %381, i8** %319, align 8
  %382 = or i64 %380, -9223372036854775808
  store i64 %382, i64* %320, align 8
  store i64 %372, i64* %321, align 8
  br label %386

383:                                              ; preds = %376
  %384 = trunc i64 %372 to i8
  store i8 %384, i8* %323, align 1
  %385 = icmp eq i64 %372, 0
  br i1 %385, label %388, label %386

386:                                              ; preds = %383, %378
  %387 = phi i8* [ %318, %383 ], [ %381, %378 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %387, i8* align 1 %369, i64 %372, i1 false) #14
  br label %388

388:                                              ; preds = %386, %383
  %389 = phi i8* [ %318, %383 ], [ %387, %386 ]
  %390 = getelementptr inbounds i8, i8* %389, i64 %372
  store i8 0, i8* %390, align 1
  %391 = zext i8 %371 to i64
  %392 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %370, i64 0, i32 0, i32 0, i32 0, i64 %391, i32 0, i32 0
  %393 = load i8, i8* %323, align 1
  %394 = icmp slt i8 %393, 0
  br i1 %394, label %397, label %395

395:                                              ; preds = %388
  %396 = zext i8 %393 to i64
  br label %402

397:                                              ; preds = %388
  %398 = load i64, i64* %325, align 8
  %399 = load i64, i64* %321, align 8
  %400 = icmp sgt i64 %399, -1
  br i1 %400, label %402, label %401, !prof !2

401:                                              ; preds = %397
  call void @llvm.trap() #14
  unreachable

402:                                              ; preds = %397, %395
  %403 = phi i64 [ %398, %397 ], [ %324, %395 ]
  %404 = phi i64 [ %399, %397 ], [ %396, %395 ]
  %405 = inttoptr i64 %403 to i8*
  %406 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %240, i8* %405, i64 %404) #14
  %407 = add i64 %406, %404
  %408 = zext i64 %407 to i128
  %409 = mul nuw i128 %408, 11376068507788127593
  %410 = lshr i128 %409, 64
  %411 = xor i128 %410, %409
  %412 = trunc i128 %411 to i64
  %413 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %392, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %76, i64 %412) #14
  %414 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %413, 0
  %415 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %413, 1
  %416 = icmp eq i8* %414, null
  br i1 %416, label %420, label %417, !prof !3

417:                                              ; preds = %402
  %418 = load i8, i8* %414, align 1
  %419 = icmp sgt i8 %418, -1
  br i1 %419, label %421, label %420, !prof !2

420:                                              ; preds = %417, %402
  call void @llvm.trap() #14
  unreachable

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %415, i64 0, i32 0, i32 1
  %423 = load i8, i8* %323, align 1
  %424 = icmp slt i8 %423, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %421
  %426 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %426) #17
  br label %427

427:                                              ; preds = %425, %421
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #14
  %428 = load i32, i32* %316, align 4
  %429 = zext i32 %428 to i64
  %430 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %227, align 8
  %431 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %430, i64 %429
  store %"struct.rx::ShaderInterfaceVariableInfo"* %422, %"struct.rx::ShaderInterfaceVariableInfo"** %431, align 8
  br label %432

432:                                              ; preds = %427, %359
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %317) #14
  br label %932

433:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %308) #14
  store i32 0, i32* %309, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %73, align 8
  call void @_ZN5angle5spirv9ParseNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKc(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %72, i8** nonnull %73) #14
  %434 = load i32, i32* %309, align 4
  %435 = load i64, i64* %311, align 8
  %436 = zext i32 %434 to i64
  %437 = load i8**, i8*** %225, align 8
  %438 = getelementptr inbounds i8*, i8** %437, i64 %436
  %439 = bitcast i8** %438 to i64*
  store i64 %435, i64* %439, align 8
  %440 = load i8, i8* %312, align 8, !range !22
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %464, label %442

442:                                              ; preds = %433
  %443 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kXfbEmulationBufferNameE, i64 0, i64 0)) #19
  %444 = load i8*, i8** %73, align 8
  %445 = call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %444, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk35kXfbEmulationGetOffsetsFunctionNameE, i64 0, i64 0)) #14
  br i1 %445, label %446, label %447

446:                                              ; preds = %442
  store i32 %434, i32* %314, align 8
  br label %464

447:                                              ; preds = %442
  %448 = load i8*, i8** %73, align 8
  %449 = call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %448, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk32kXfbEmulationCaptureFunctionNameE, i64 0, i64 0)) #14
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  store i32 %434, i32* %313, align 4
  br label %464

451:                                              ; preds = %447
  %452 = load i8*, i8** %73, align 8
  %453 = call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %452, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kXfbEmulationBufferNameE, i64 0, i64 0)) #14
  br i1 %453, label %454, label %464

454:                                              ; preds = %451
  %455 = load i8*, i8** %73, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 %443
  %457 = load i8, i8* %456, align 1
  %458 = sext i8 %457 to i32
  %459 = add nsw i32 %458, -48
  %460 = icmp ult i32 %459, 10
  br i1 %460, label %461, label %464

461:                                              ; preds = %454
  %462 = zext i32 %459 to i64
  %463 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 5, i32 0, i64 %462, i32 0, i32 0
  store i32 %434, i32* %463, align 4
  br label %464

464:                                              ; preds = %461, %454, %451, %450, %446, %433
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #14
  br label %932

465:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #14
  store i32 0, i32* %286, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %287) #14
  store i32 0, i32* %288, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %69, align 8
  call void @_ZN5angle5spirv15ParseMemberNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEEPPKc(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %67, %"class.angle::spirv::BoxedUint32.273"* nonnull %68, i8** nonnull %69) #14
  %466 = load %"class.rx::ShaderInterfaceVariableInfoMap"*, %"class.rx::ShaderInterfaceVariableInfoMap"** %230, align 8
  %467 = load i8, i8* %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #14
  %468 = load i8*, i8** %69, align 8
  %469 = call i64 @strlen(i8* %468) #14
  %470 = icmp ugt i64 %469, -17
  br i1 %470, label %471, label %473

471:                                              ; preds = %465
  %472 = bitcast %"class.std::__1::basic_string"* %70 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %472) #18
  unreachable

473:                                              ; preds = %465
  %474 = icmp ult i64 %469, 23
  br i1 %474, label %480, label %475

475:                                              ; preds = %473
  %476 = add nuw i64 %469, 16
  %477 = and i64 %476, -16
  %478 = call i8* @_Znwm(i64 %477) #17
  store i8* %478, i8** %291, align 8
  %479 = or i64 %477, -9223372036854775808
  store i64 %479, i64* %292, align 8
  store i64 %469, i64* %293, align 8
  br label %483

480:                                              ; preds = %473
  %481 = trunc i64 %469 to i8
  store i8 %481, i8* %295, align 1
  %482 = icmp eq i64 %469, 0
  br i1 %482, label %485, label %483

483:                                              ; preds = %480, %475
  %484 = phi i8* [ %290, %480 ], [ %478, %475 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %484, i8* align 1 %468, i64 %469, i1 false) #14
  br label %485

485:                                              ; preds = %483, %480
  %486 = phi i8* [ %290, %480 ], [ %484, %483 ]
  %487 = getelementptr inbounds i8, i8* %486, i64 %469
  store i8 0, i8* %487, align 1
  %488 = zext i8 %467 to i64
  %489 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %466, i64 0, i32 0, i32 0, i32 0, i64 %488, i32 0, i32 0
  %490 = load i8, i8* %295, align 1
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %494, label %492

492:                                              ; preds = %485
  %493 = zext i8 %490 to i64
  br label %499

494:                                              ; preds = %485
  %495 = load i64, i64* %297, align 8
  %496 = load i64, i64* %293, align 8
  %497 = icmp sgt i64 %496, -1
  br i1 %497, label %499, label %498, !prof !2

498:                                              ; preds = %494
  call void @llvm.trap() #14
  unreachable

499:                                              ; preds = %494, %492
  %500 = phi i64 [ %495, %494 ], [ %296, %492 ]
  %501 = phi i64 [ %496, %494 ], [ %493, %492 ]
  %502 = inttoptr i64 %500 to i8*
  %503 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %240, i8* %502, i64 %501) #14
  %504 = add i64 %503, %501
  %505 = zext i64 %504 to i128
  %506 = mul nuw i128 %505, 11376068507788127593
  %507 = lshr i128 %506, 64
  %508 = xor i128 %507, %506
  %509 = trunc i128 %508 to i64
  %510 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %489, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %70, i64 %509) #14
  %511 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %510, 0
  %512 = icmp eq i8* %511, null
  br i1 %512, label %517, label %513

513:                                              ; preds = %499
  %514 = load i8, i8* %511, align 1
  %515 = icmp sgt i8 %514, -1
  br i1 %515, label %517, label %516, !prof !2

516:                                              ; preds = %513
  call void @llvm.trap() #14
  unreachable

517:                                              ; preds = %513, %499
  %518 = load i8, i8* %295, align 1
  %519 = icmp slt i8 %518, 0
  br i1 %519, label %520, label %522

520:                                              ; preds = %517
  %521 = load i8*, i8** %291, align 8
  call void @_ZdlPv(i8* %521) #17
  br label %522

522:                                              ; preds = %520, %517
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #14
  br i1 %512, label %616, label %523

523:                                              ; preds = %522
  %524 = load %"class.rx::ShaderInterfaceVariableInfoMap"*, %"class.rx::ShaderInterfaceVariableInfoMap"** %230, align 8
  %525 = load i8, i8* %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #14
  %526 = load i8*, i8** %69, align 8
  %527 = call i64 @strlen(i8* %526) #14
  %528 = icmp ugt i64 %527, -17
  br i1 %528, label %529, label %531

529:                                              ; preds = %523
  %530 = bitcast %"class.std::__1::basic_string"* %71 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %530) #18
  unreachable

531:                                              ; preds = %523
  %532 = icmp ult i64 %527, 23
  br i1 %532, label %538, label %533

533:                                              ; preds = %531
  %534 = add nuw i64 %527, 16
  %535 = and i64 %534, -16
  %536 = call i8* @_Znwm(i64 %535) #17
  store i8* %536, i8** %299, align 8
  %537 = or i64 %535, -9223372036854775808
  store i64 %537, i64* %300, align 8
  store i64 %527, i64* %301, align 8
  br label %541

538:                                              ; preds = %531
  %539 = trunc i64 %527 to i8
  store i8 %539, i8* %303, align 1
  %540 = icmp eq i64 %527, 0
  br i1 %540, label %543, label %541

541:                                              ; preds = %538, %533
  %542 = phi i8* [ %298, %538 ], [ %536, %533 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %542, i8* align 1 %526, i64 %527, i1 false) #14
  br label %543

543:                                              ; preds = %541, %538
  %544 = phi i8* [ %298, %538 ], [ %542, %541 ]
  %545 = getelementptr inbounds i8, i8* %544, i64 %527
  store i8 0, i8* %545, align 1
  %546 = zext i8 %525 to i64
  %547 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %524, i64 0, i32 0, i32 0, i32 0, i64 %546, i32 0, i32 0
  %548 = load i8, i8* %303, align 1
  %549 = icmp slt i8 %548, 0
  br i1 %549, label %552, label %550

550:                                              ; preds = %543
  %551 = zext i8 %548 to i64
  br label %557

552:                                              ; preds = %543
  %553 = load i64, i64* %305, align 8
  %554 = load i64, i64* %301, align 8
  %555 = icmp sgt i64 %554, -1
  br i1 %555, label %557, label %556, !prof !2

556:                                              ; preds = %552
  call void @llvm.trap() #14
  unreachable

557:                                              ; preds = %552, %550
  %558 = phi i64 [ %553, %552 ], [ %304, %550 ]
  %559 = phi i64 [ %554, %552 ], [ %551, %550 ]
  %560 = inttoptr i64 %558 to i8*
  %561 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %240, i8* %560, i64 %559) #14
  %562 = add i64 %561, %559
  %563 = zext i64 %562 to i128
  %564 = mul nuw i128 %563, 11376068507788127593
  %565 = lshr i128 %564, 64
  %566 = xor i128 %565, %564
  %567 = trunc i128 %566 to i64
  %568 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %547, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %71, i64 %567) #14
  %569 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %568, 0
  %570 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %568, 1
  %571 = icmp eq i8* %569, null
  br i1 %571, label %575, label %572, !prof !3

572:                                              ; preds = %557
  %573 = load i8, i8* %569, align 1
  %574 = icmp sgt i8 %573, -1
  br i1 %574, label %576, label %575, !prof !2

575:                                              ; preds = %572, %557
  call void @llvm.trap() #14
  unreachable

576:                                              ; preds = %572
  %577 = load i8, i8* %303, align 1
  %578 = icmp slt i8 %577, 0
  br i1 %578, label %579, label %581

579:                                              ; preds = %576
  %580 = load i8*, i8** %299, align 8
  call void @_ZdlPv(i8* %580) #17
  br label %581

581:                                              ; preds = %579, %576
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #14
  %582 = load i32, i32* %286, align 4
  %583 = load i32, i32* %288, align 4
  %584 = zext i32 %582 to i64
  %585 = load i8**, i8*** %225, align 8
  %586 = getelementptr inbounds i8*, i8** %585, i64 %584
  %587 = load i8*, i8** %586, align 8
  %588 = call i32 @strcmp(i8* %587, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #19
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %616

590:                                              ; preds = %581
  %591 = load i32, i32* %263, align 4
  %592 = icmp eq i32 %591, 0
  %593 = icmp eq i32 %591, %582
  %594 = or i1 %592, %593
  br i1 %594, label %595, label %603

595:                                              ; preds = %590
  store i32 %582, i32* %263, align 8
  %596 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %570, i64 0, i32 0, i32 1, i32 11
  %597 = load i8, i8* %596, align 2, !range !22
  %598 = icmp eq i8 %597, 0
  br i1 %598, label %616, label %599

599:                                              ; preds = %595
  %600 = load i32, i32* %307, align 4
  %601 = icmp ult i32 %600, %583
  br i1 %601, label %602, label %616

602:                                              ; preds = %599
  store i32 %583, i32* %307, align 4
  br label %616

603:                                              ; preds = %590
  %604 = load i32, i32* %264, align 4
  %605 = icmp eq i32 %604, 0
  %606 = icmp eq i32 %604, %582
  %607 = or i1 %605, %606
  br i1 %607, label %608, label %616

608:                                              ; preds = %603
  store i32 %582, i32* %264, align 8
  %609 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %570, i64 0, i32 0, i32 1, i32 10
  %610 = load i8, i8* %609, align 1, !range !22
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %616, label %612

612:                                              ; preds = %608
  %613 = load i32, i32* %306, align 4
  %614 = icmp ult i32 %613, %583
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  store i32 %583, i32* %306, align 4
  br label %616

616:                                              ; preds = %615, %612, %608, %603, %602, %599, %595, %581, %522
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %287) #14
  br label %932

617:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %279) #14
  store i32 0, i32* %280, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281) #14
  store i32 0, i32* %282, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %283) #14
  store i32 0, i32* %284, align 4
  call void @_ZN5angle5spirv14ParseTypeArrayEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %64, %"class.angle::spirv::BoxedUint32"* nonnull %65, %"class.angle::spirv::BoxedUint32"* nonnull %66) #14
  %618 = load i32, i32* %280, align 4
  %619 = load i32, i32* %282, align 4
  %620 = zext i32 %619 to i64
  %621 = load i8**, i8*** %225, align 8
  %622 = getelementptr inbounds i8*, i8** %621, i64 %620
  %623 = bitcast i8** %622 to i64*
  %624 = load i64, i64* %623, align 8
  %625 = zext i32 %618 to i64
  %626 = getelementptr inbounds i8*, i8** %621, i64 %625
  %627 = bitcast i8** %626 to i64*
  store i64 %624, i64* %627, align 8
  %628 = load i64*, i64** %224, align 8
  %629 = lshr i64 %620, 6
  %630 = getelementptr inbounds i64, i64* %628, i64 %629
  %631 = and i64 %620, 63
  %632 = shl i64 1, %631
  %633 = lshr i64 %625, 6
  %634 = getelementptr inbounds i64, i64* %628, i64 %633
  %635 = and i64 %625, 63
  %636 = shl i64 1, %635
  %637 = load i64, i64* %630, align 8
  %638 = and i64 %637, %632
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %643, label %640

640:                                              ; preds = %617
  %641 = load i64, i64* %634, align 8
  %642 = or i64 %641, %636
  br label %647

643:                                              ; preds = %617
  %644 = xor i64 %636, -1
  %645 = load i64, i64* %634, align 8
  %646 = and i64 %645, %644
  br label %647

647:                                              ; preds = %643, %640
  %648 = phi i64 [ %642, %640 ], [ %646, %643 ]
  store i64 %648, i64* %634, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %283) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281) #14
  br label %932

649:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %275) #14
  store i32 0, i32* %276, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %277) #14
  store i32 0, i32* %278, align 4
  call void @_ZN5angle5spirv14ParseTypeFloatEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEE(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %62, %"class.angle::spirv::BoxedUint32.273"* nonnull %63) #14
  %650 = load i32, i32* %278, align 4
  %651 = icmp eq i32 %650, 32
  br i1 %651, label %652, label %654

652:                                              ; preds = %649
  %653 = load i32, i32* %276, align 4
  store i32 %653, i32* %254, align 8
  br label %654

654:                                              ; preds = %652, %649
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #14
  br label %932

655:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %268) #14
  store i32 0, i32* %269, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %270) #14
  store i32 0, i32* %271, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %272) #14
  store i32 0, i32* %273, align 4
  call void @_ZN5angle5spirv12ParseTypeIntEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEES9_(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %59, %"class.angle::spirv::BoxedUint32.273"* nonnull %60, %"class.angle::spirv::BoxedUint32.273"* nonnull %61) #14
  %656 = load i32, i32* %269, align 4
  %657 = load i32, i32* %271, align 4
  %658 = icmp eq i32 %657, 32
  br i1 %658, label %659, label %664

659:                                              ; preds = %655
  %660 = load i32, i32* %273, align 4
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %662, label %663

662:                                              ; preds = %659
  store i32 %656, i32* %274, align 8
  br label %664

663:                                              ; preds = %659
  store i32 %656, i32* %256, align 4
  br label %664

664:                                              ; preds = %663, %662, %655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %272) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %270) #14
  br label %932

665:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %258) #14
  store i32 0, i32* %259, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %260) #14
  store i32 -1431655766, i32* %57, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #14
  store i32 0, i32* %262, align 4
  call void @_ZN5angle5spirv16ParseTypePointerEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv12StorageClassES6_(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %56, i32* nonnull %57, %"class.angle::spirv::BoxedUint32"* nonnull %58) #14
  %666 = load i32, i32* %259, align 4
  %667 = load i32, i32* %57, align 4
  %668 = load i32, i32* %262, align 4
  %669 = zext i32 %668 to i64
  %670 = load i8**, i8*** %225, align 8
  %671 = getelementptr inbounds i8*, i8** %670, i64 %669
  %672 = bitcast i8** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = zext i32 %666 to i64
  %675 = getelementptr inbounds i8*, i8** %670, i64 %674
  %676 = bitcast i8** %675 to i64*
  store i64 %673, i64* %676, align 8
  %677 = load i64*, i64** %224, align 8
  %678 = lshr i64 %669, 6
  %679 = getelementptr inbounds i64, i64* %677, i64 %678
  %680 = and i64 %669, 63
  %681 = shl i64 1, %680
  %682 = lshr i64 %674, 6
  %683 = getelementptr inbounds i64, i64* %677, i64 %682
  %684 = and i64 %674, 63
  %685 = shl i64 1, %684
  %686 = load i64, i64* %679, align 8
  %687 = and i64 %686, %681
  %688 = icmp eq i64 %687, 0
  br i1 %688, label %692, label %689

689:                                              ; preds = %665
  %690 = load i64, i64* %683, align 8
  %691 = or i64 %690, %685
  br label %696

692:                                              ; preds = %665
  %693 = xor i64 %685, -1
  %694 = load i64, i64* %683, align 8
  %695 = and i64 %694, %693
  br label %696

696:                                              ; preds = %692, %689
  %697 = phi i64 [ %691, %689 ], [ %695, %692 ]
  store i64 %697, i64* %683, align 8
  %698 = load i32, i32* %263, align 4
  %699 = icmp eq i32 %698, %668
  br i1 %699, label %703, label %700

700:                                              ; preds = %696
  %701 = load i32, i32* %264, align 4
  %702 = icmp eq i32 %701, %668
  br i1 %702, label %706, label %716

703:                                              ; preds = %696
  %704 = icmp eq i32 %667, 1
  %705 = load i32, i32* %264, align 4
  br i1 %704, label %711, label %706

706:                                              ; preds = %703, %700
  %707 = phi i32 [ %668, %700 ], [ %705, %703 ]
  %708 = icmp eq i32 %707, %668
  %709 = icmp eq i32 %667, 3
  %710 = and i1 %709, %708
  br i1 %710, label %711, label %713

711:                                              ; preds = %706, %703
  %712 = phi i32 [ %668, %706 ], [ %705, %703 ]
  store i32 %712, i32* %263, align 4
  store i32 %698, i32* %264, align 4
  br label %713

713:                                              ; preds = %711, %706
  %714 = icmp eq i32 %667, 3
  br i1 %714, label %715, label %722

715:                                              ; preds = %713
  store i32 %666, i32* %228, align 4
  br label %716

716:                                              ; preds = %715, %700
  %717 = load i32, i32* %255, align 4
  %718 = icmp eq i32 %717, %668
  %719 = icmp eq i32 %667, 3
  %720 = and i1 %719, %718
  br i1 %720, label %721, label %722

721:                                              ; preds = %716
  store i32 %666, i32* %265, align 8
  br label %722

722:                                              ; preds = %721, %716, %713
  %723 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %266, align 8
  %724 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %723, i64 %674, i32 0, i32 0
  store i32 %668, i32* %724, align 4
  %725 = load i32, i32* %57, align 4
  %726 = load i32, i32* %262, align 4
  %727 = load i32, i32* %257, align 4
  %728 = icmp eq i32 %727, %726
  %729 = icmp eq i32 %725, 7
  %730 = and i1 %729, %728
  br i1 %730, label %731, label %733

731:                                              ; preds = %722
  %732 = load i32, i32* %259, align 4
  store i32 %732, i32* %267, align 4
  br label %733

733:                                              ; preds = %731, %722
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %260) #14
  br label %932

734:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #14
  store i32 0, i32* %249, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #14
  store i32 0, i32* %251, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252) #14
  store i32 0, i32* %253, align 4
  call void @_ZN5angle5spirv15ParseTypeVectorEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PNS3_INS0_20LiteralIntegerHelperEEE(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %53, %"class.angle::spirv::BoxedUint32"* nonnull %54, %"class.angle::spirv::BoxedUint32.273"* nonnull %55) #14
  %735 = load i32, i32* %249, align 4
  %736 = load i32, i32* %251, align 4
  %737 = load i32, i32* %253, align 4
  %738 = load i32, i32* %254, align 4
  %739 = icmp eq i32 %738, %736
  %740 = icmp eq i32 %737, 4
  %741 = and i1 %740, %739
  br i1 %741, label %742, label %743

742:                                              ; preds = %734
  store i32 %735, i32* %255, align 4
  br label %743

743:                                              ; preds = %742, %734
  %744 = load i32, i32* %256, align 4
  %745 = icmp eq i32 %744, %736
  %746 = and i1 %740, %745
  br i1 %746, label %747, label %748

747:                                              ; preds = %743
  store i32 %735, i32* %257, align 4
  br label %748

748:                                              ; preds = %747, %743
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #14
  br label %932

749:                                              ; preds = %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %219) #14
  store i32 0, i32* %220, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #14
  store i32 0, i32* %222, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #14
  store i32 -1431655766, i32* %80, align 4
  call void @_ZN5angle5spirv13ParseVariableEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv12StorageClassES6_(i32* %331, %"class.angle::spirv::BoxedUint32"* nonnull %78, %"class.angle::spirv::BoxedUint32"* nonnull %79, i32* nonnull %80, %"class.angle::spirv::BoxedUint32"* null) #14
  %750 = load i32, i32* %220, align 4
  %751 = load i32, i32* %222, align 4
  %752 = load i32, i32* %80, align 4
  %753 = icmp eq i32 %752, 2
  %754 = icmp eq i32 %752, 12
  %755 = or i1 %753, %754
  %756 = or i32 %752, 2
  %757 = icmp eq i32 %756, 3
  switch i32 %752, label %758 [
    i32 12, label %759
    i32 2, label %759
    i32 0, label %759
  ]

758:                                              ; preds = %749
  br i1 %757, label %759, label %931

759:                                              ; preds = %758, %749, %749, %749
  %760 = zext i32 %750 to i64
  %761 = load i64*, i64** %224, align 8
  %762 = lshr i64 %760, 6
  %763 = getelementptr inbounds i64, i64* %761, i64 %762
  %764 = and i64 %760, 63
  %765 = shl i64 1, %764
  %766 = load i64, i64* %763, align 8
  %767 = and i64 %766, %765
  %768 = icmp ne i64 %767, 0
  %769 = or i1 %755, %768
  %770 = select i1 %769, i32 %750, i32 %751
  %771 = zext i32 %770 to i64
  %772 = load i8**, i8*** %225, align 8
  %773 = getelementptr inbounds i8*, i8** %772, i64 %771
  %774 = load i8*, i8** %773, align 8
  %775 = xor i1 %757, true
  %776 = or i1 %768, %775
  br i1 %776, label %779, label %777

777:                                              ; preds = %759
  %778 = call zeroext i1 @_ZN2gl13IsBuiltInNameEPKc(i8* %774) #14
  br i1 %778, label %783, label %779

779:                                              ; preds = %777, %759
  %780 = load i32, i32* %228, align 4
  %781 = icmp eq i32 %780, %750
  br i1 %781, label %782, label %788

782:                                              ; preds = %779
  store i32 %751, i32* %229, align 8
  br label %788

783:                                              ; preds = %777
  %784 = load i32, i32* %222, align 4
  %785 = zext i32 %784 to i64
  %786 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %227, align 8
  %787 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %786, i64 %785
  store %"struct.rx::ShaderInterfaceVariableInfo"* %226, %"struct.rx::ShaderInterfaceVariableInfo"** %787, align 8
  br label %931

788:                                              ; preds = %782, %779
  %789 = load %"class.rx::ShaderInterfaceVariableInfoMap"*, %"class.rx::ShaderInterfaceVariableInfoMap"** %230, align 8
  %790 = load i8, i8* %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #14
  %791 = call i64 @strlen(i8* %774) #14
  %792 = icmp ugt i64 %791, -17
  br i1 %792, label %793, label %795

793:                                              ; preds = %788
  %794 = bitcast %"class.std::__1::basic_string"* %81 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %794) #18
  unreachable

795:                                              ; preds = %788
  %796 = icmp ult i64 %791, 23
  br i1 %796, label %802, label %797

797:                                              ; preds = %795
  %798 = add nuw i64 %791, 16
  %799 = and i64 %798, -16
  %800 = call i8* @_Znwm(i64 %799) #17
  store i8* %800, i8** %233, align 8
  %801 = or i64 %799, -9223372036854775808
  store i64 %801, i64* %234, align 8
  store i64 %791, i64* %235, align 8
  br label %805

802:                                              ; preds = %795
  %803 = trunc i64 %791 to i8
  store i8 %803, i8* %237, align 1
  %804 = icmp eq i64 %791, 0
  br i1 %804, label %807, label %805

805:                                              ; preds = %802, %797
  %806 = phi i8* [ %232, %802 ], [ %800, %797 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %806, i8* align 1 %774, i64 %791, i1 false) #14
  br label %807

807:                                              ; preds = %805, %802
  %808 = phi i8* [ %232, %802 ], [ %806, %805 ]
  %809 = getelementptr inbounds i8, i8* %808, i64 %791
  store i8 0, i8* %809, align 1
  %810 = zext i8 %790 to i64
  %811 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %789, i64 0, i32 0, i32 0, i32 0, i64 %810, i32 0, i32 0
  %812 = load i8, i8* %237, align 1
  %813 = icmp slt i8 %812, 0
  br i1 %813, label %816, label %814

814:                                              ; preds = %807
  %815 = zext i8 %812 to i64
  br label %821

816:                                              ; preds = %807
  %817 = load i64, i64* %239, align 8
  %818 = load i64, i64* %235, align 8
  %819 = icmp sgt i64 %818, -1
  br i1 %819, label %821, label %820, !prof !2

820:                                              ; preds = %816
  call void @llvm.trap() #14
  unreachable

821:                                              ; preds = %816, %814
  %822 = phi i64 [ %817, %816 ], [ %238, %814 ]
  %823 = phi i64 [ %818, %816 ], [ %815, %814 ]
  %824 = inttoptr i64 %822 to i8*
  %825 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %240, i8* %824, i64 %823) #14
  %826 = add i64 %825, %823
  %827 = zext i64 %826 to i128
  %828 = mul nuw i128 %827, 11376068507788127593
  %829 = lshr i128 %828, 64
  %830 = xor i128 %829, %828
  %831 = trunc i128 %830 to i64
  %832 = call { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"* %811, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %81, i64 %831) #14
  %833 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %832, 0
  %834 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %832, 1
  %835 = icmp eq i8* %833, null
  br i1 %835, label %839, label %836, !prof !3

836:                                              ; preds = %821
  %837 = load i8, i8* %833, align 1
  %838 = icmp sgt i8 %837, -1
  br i1 %838, label %840, label %839, !prof !2

839:                                              ; preds = %836, %821
  call void @llvm.trap() #14
  unreachable

840:                                              ; preds = %836
  %841 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1
  %842 = load i8, i8* %237, align 1
  %843 = icmp slt i8 %842, 0
  br i1 %843, label %844, label %846

844:                                              ; preds = %840
  %845 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %845) #17
  br label %846

846:                                              ; preds = %844, %840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #14
  %847 = load i32, i32* %222, align 4
  %848 = zext i32 %847 to i64
  %849 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %227, align 8
  %850 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %849, i64 %848
  store %"struct.rx::ShaderInterfaceVariableInfo"* %841, %"struct.rx::ShaderInterfaceVariableInfo"** %850, align 8
  %851 = load i32, i32* %220, align 4
  %852 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %853 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 9
  %854 = load i8, i8* %853, align 8, !range !22
  %855 = icmp eq i8 %854, 0
  br i1 %855, label %880, label %856

856:                                              ; preds = %846
  %857 = load i8, i8* %231, align 8
  %858 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 5, i32 0
  %859 = load i8, i8* %858, align 1
  %860 = zext i8 %857 to i32
  %861 = shl i32 1, %860
  %862 = trunc i32 %861 to i8
  %863 = and i8 %859, %862
  %864 = icmp eq i8 %863, 0
  br i1 %864, label %880, label %865

865:                                              ; preds = %856
  %866 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %241, align 8
  %867 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %866, i64 %848, i32 0, i32 0
  %868 = load i32, i32* %867, align 4
  %869 = icmp eq i32 %868, 0
  br i1 %869, label %870, label %880

870:                                              ; preds = %865
  %871 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %852, i64 0, i32 0, i32 0
  %872 = load i32*, i32** %871, align 8
  %873 = getelementptr inbounds i32, i32* %872, i64 3
  %874 = load i32, i32* %873, align 4
  %875 = add i32 %874, 1
  store i32 %875, i32* %873, align 4
  %876 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %241, align 8
  %877 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %876, i64 %848, i32 0, i32 0
  store i32 %874, i32* %877, align 4
  %878 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %242, align 8
  %879 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %878, i64 %848, i32 0, i32 0
  store i32 %851, i32* %879, align 4
  br label %880

880:                                              ; preds = %870, %865, %856, %846
  %881 = load i8, i8* %243, align 4, !range !22
  %882 = icmp eq i8 %881, 0
  br i1 %882, label %931, label %883

883:                                              ; preds = %880
  %884 = load i8, i8* %231, align 8
  %885 = load i32, i32* %222, align 4
  %886 = load i8, i8* %245, align 8, !range !22
  %887 = icmp eq i8 %886, 0
  br i1 %887, label %909, label %888

888:                                              ; preds = %883
  %889 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 7
  call fastcc void @_ZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator15visitXfbVaryingERKNS_30ShaderInterfaceVariableXfbInfoEN5angle5spirv11BoxedUint32INS6_11IdRefHelperEEEj(%"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %244, %"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56) %889, i32 %885, i32 -1) #14
  %890 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 8
  %891 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %892 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %891 to i64*
  %893 = load i64, i64* %892, align 8
  %894 = bitcast %"class.std::__1::vector.145"* %890 to i64*
  %895 = load i64, i64* %894, align 8
  %896 = icmp eq i64 %893, %895
  br i1 %896, label %931, label %897

897:                                              ; preds = %888, %897
  %898 = phi i64 [ %905, %897 ], [ %895, %888 ]
  %899 = phi i64 [ %903, %897 ], [ 0, %888 ]
  %900 = inttoptr i64 %898 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  %901 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %900, i64 %899
  %902 = trunc i64 %899 to i32
  call fastcc void @_ZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator15visitXfbVaryingERKNS_30ShaderInterfaceVariableXfbInfoEN5angle5spirv11BoxedUint32INS6_11IdRefHelperEEEj(%"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %244, %"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56) %901, i32 %885, i32 %902) #14
  %903 = add nuw i64 %899, 1
  %904 = load i64, i64* %892, align 8
  %905 = load i64, i64* %894, align 8
  %906 = sub i64 %904, %905
  %907 = sdiv exact i64 %906, 56
  %908 = icmp ult i64 %903, %907
  br i1 %908, label %897, label %931

909:                                              ; preds = %883
  %910 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 7, i32 0
  %911 = load i32, i32* %910, align 8
  %912 = icmp eq i32 %911, -1
  br i1 %912, label %913, label %919

913:                                              ; preds = %909
  %914 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 8, i32 0, i32 0
  %915 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %914, align 8
  %916 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %917 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %916, align 8
  %918 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %915, %917
  br i1 %918, label %931, label %919

919:                                              ; preds = %913, %909
  %920 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %834, i64 0, i32 0, i32 1, i32 5, i32 0
  %921 = load i8, i8* %920, align 1
  %922 = zext i8 %884 to i32
  %923 = shl i32 1, %922
  %924 = trunc i32 %923 to i8
  %925 = and i8 %921, %924
  %926 = icmp eq i8 %925, 0
  br i1 %926, label %931, label %927

927:                                              ; preds = %919
  store i8 1, i8* %246, align 1
  %928 = call i32 @strcmp(i8* %774, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk28kXfbExtensionPositionOutNameE, i64 0, i64 0)) #19
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %930, label %931

930:                                              ; preds = %927
  store i32 %885, i32* %247, align 4
  br label %931

931:                                              ; preds = %897, %930, %927, %919, %913, %888, %880, %783, %758
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #14
  br label %932

932:                                              ; preds = %432, %464, %616, %647, %654, %664, %733, %748, %931
  %933 = phi i8* [ %219, %931 ], [ %248, %748 ], [ %258, %733 ], [ %268, %664 ], [ %275, %654 ], [ %279, %647 ], [ %285, %616 ], [ %308, %464 ], [ %315, %432 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %933) #14
  br label %934

934:                                              ; preds = %932, %326
  %935 = load i32, i32* %83, align 4
  %936 = zext i32 %935 to i64
  %937 = add i64 %328, %936
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %218) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #14
  %938 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %939 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %938, i64 0, i32 0, i32 1
  %940 = bitcast i32** %939 to i64*
  %941 = load i64, i64* %940, align 8
  %942 = bitcast %"class.std::__1::vector"* %938 to i64*
  %943 = load i64, i64* %942, align 8
  %944 = sub i64 %941, %943
  %945 = ashr exact i64 %944, 2
  %946 = icmp ult i64 %937, %945
  br i1 %946, label %326, label %947

947:                                              ; preds = %934, %206, %333
  %948 = phi i64 [ %214, %206 ], [ %341, %333 ], [ %945, %934 ]
  %949 = phi %"class.std::__1::vector"* [ %207, %206 ], [ %334, %333 ], [ %938, %934 ]
  %950 = load i64, i64* %92, align 8
  %951 = icmp ult i64 %950, %948
  br i1 %951, label %952, label %2902

952:                                              ; preds = %947
  %953 = bitcast i32* %48 to i8*
  %954 = bitcast i32* %49 to i8*
  %955 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 4
  %956 = bitcast %"class.angle::spirv::BoxedUint32"* %46 to i8*
  %957 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %46, i64 0, i32 0, i32 0
  %958 = bitcast i32* %47 to i8*
  %959 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 5
  %960 = bitcast %"class.angle::spirv::BoxedUint32"* %2 to i8*
  %961 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2, i64 0, i32 0, i32 0
  %962 = bitcast %"class.angle::spirv::BoxedUint32"* %3 to i8*
  %963 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %3, i64 0, i32 0, i32 0
  %964 = bitcast i32* %4 to i8*
  %965 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %966 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 0
  %967 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  %968 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %969 = bitcast %"class.angle::spirv::BoxedUint32"* %5 to i8*
  %970 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %5, i64 0, i32 0, i32 0
  %971 = bitcast %"class.angle::FastVector.278"* %6 to i8*
  %972 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 1
  %973 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 0
  %974 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 2
  %975 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 3
  %976 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %977 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0
  %978 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 2, i32 1
  %979 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 3, i32 1
  %980 = bitcast %"class.angle::spirv::BoxedUint32"** %972 to i8**
  %981 = bitcast %"class.angle::spirv::BoxedUint32"* %7 to i8*
  %982 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %7, i64 0, i32 0, i32 0
  %983 = bitcast i32* %8 to i8*
  %984 = bitcast %"class.angle::spirv::BoxedUint32"* %9 to i8*
  %985 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %9, i64 0, i32 0, i32 0
  %986 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %987 = bitcast %"class.angle::spirv::BoxedUint32"* %10 to i8*
  %988 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %10, i64 0, i32 0, i32 0
  %989 = bitcast %"class.angle::spirv::BoxedUint32.273"* %11 to i8*
  %990 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %11, i64 0, i32 0, i32 0
  %991 = bitcast i32* %12 to i8*
  %992 = bitcast %"class.angle::spirv::BoxedUint32"* %17 to i8*
  %993 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %17, i64 0, i32 0, i32 0
  %994 = bitcast i32* %18 to i8*
  %995 = bitcast %"class.angle::FastVector.271"* %19 to i8*
  %996 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %19, i64 0, i32 1
  %997 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %19, i64 0, i32 0, i32 0, i64 0
  %998 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %19, i64 0, i32 2
  %999 = bitcast i32* %15 to i8*
  %1000 = bitcast i32* %15 to %"class.angle::spirv::BoxedUint32"*
  %1001 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 7
  %1002 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 0
  %1003 = bitcast %"class.angle::FastVector.271"* %14 to i8*
  %1004 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %14, i64 0, i32 1
  %1005 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %14, i64 0, i32 0, i32 0, i64 0
  %1006 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %14, i64 0, i32 2
  %1007 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %14, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1008 = bitcast %"class.angle::FastVector.271"* %20 to i8*
  %1009 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %20, i64 0, i32 1
  %1010 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %20, i64 0, i32 0, i32 0, i64 0
  %1011 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %20, i64 0, i32 2
  %1012 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %20, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1013 = bitcast %"class.angle::FastVector.271"* %13 to i8*
  %1014 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %13, i64 0, i32 1
  %1015 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %13, i64 0, i32 0, i32 0, i64 0
  %1016 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %13, i64 0, i32 2
  %1017 = bitcast %"class.angle::FastVector.271"* %21 to i8*
  %1018 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %21, i64 0, i32 1
  %1019 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %21, i64 0, i32 0, i32 0, i64 0
  %1020 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %21, i64 0, i32 2
  %1021 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %21, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1022 = bitcast %"class.angle::FastVector.271"* %22 to i8*
  %1023 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %22, i64 0, i32 1
  %1024 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %22, i64 0, i32 0, i32 0, i64 0
  %1025 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %22, i64 0, i32 2
  %1026 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %22, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1027 = bitcast %"class.angle::FastVector.271"* %16 to i8*
  %1028 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %16, i64 0, i32 1
  %1029 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %16, i64 0, i32 0, i32 0, i64 0
  %1030 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %16, i64 0, i32 2
  %1031 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %16, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1032 = bitcast i32* %24 to i8*
  %1033 = bitcast i8** %25 to i8*
  %1034 = bitcast %"class.angle::FastVector.278"* %26 to i8*
  %1035 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %26, i64 0, i32 1
  %1036 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %26, i64 0, i32 0, i32 0, i64 0
  %1037 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %26, i64 0, i32 2
  %1038 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %26, i64 0, i32 3
  %1039 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 3
  %1040 = bitcast %"class.angle::spirv::BoxedUint32"** %1035 to i8**
  %1041 = bitcast i32* %23 to i8*
  %1042 = bitcast i32* %23 to %"class.angle::spirv::BoxedUint32"*
  %1043 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 3, i32 0, i32 0
  %1044 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 1
  %1045 = bitcast i32* %27 to i8*
  %1046 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 6
  %1047 = bitcast %"class.angle::spirv::BoxedUint32"* %31 to i8*
  %1048 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %31, i64 0, i32 0, i32 0
  %1049 = bitcast i8** %32 to i8*
  %1050 = bitcast %"class.angle::spirv::BoxedUint32"* %28 to i8*
  %1051 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %28, i64 0, i32 0, i32 0
  %1052 = bitcast %"class.angle::spirv::BoxedUint32.273"* %29 to i8*
  %1053 = getelementptr inbounds %"class.angle::spirv::BoxedUint32.273", %"class.angle::spirv::BoxedUint32.273"* %29, i64 0, i32 0, i32 0
  %1054 = bitcast i8** %30 to i8*
  %1055 = bitcast %"class.angle::spirv::BoxedUint32"* %50 to i8*
  %1056 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %50, i64 0, i32 0, i32 0
  %1057 = bitcast i32* %51 to i8*
  %1058 = bitcast %"class.angle::spirv::BoxedUint32"* %52 to i8*
  %1059 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %52, i64 0, i32 0, i32 0
  %1060 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 4
  %1061 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 2
  %1062 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 4
  %1063 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 4, i32 0, i32 0
  %1064 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %1065 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 6, i32 0, i32 0
  %1066 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1067 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %1068 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 10, i32 0, i32 0
  %1069 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 9, i32 0, i32 0
  %1070 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 12, i32 0, i32 0
  %1071 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 10, i32 0, i32 0
  %1072 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 13, i32 0, i32 0
  %1073 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 8, i32 0, i32 0
  %1074 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 11, i32 0, i32 0
  %1075 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 14, i32 0, i32 0
  %1076 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 15, i32 0, i32 0
  %1077 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 17, i32 2
  %1078 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 17, i32 3
  %1079 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 17, i32 1
  %1080 = bitcast %"class.angle::spirv::BoxedUint32"** %1079 to i8**
  %1081 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 17, i32 0, i32 0, i64 0
  %1082 = bitcast %"class.angle::FastVector.278"* %45 to i8*
  %1083 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %45, i64 0, i32 1
  %1084 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %45, i64 0, i32 0, i32 0, i64 0
  %1085 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %45, i64 0, i32 2
  %1086 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %45, i64 0, i32 3
  %1087 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 0
  %1088 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 4
  %1089 = bitcast %"class.angle::spirv::BoxedUint32"** %1083 to i8**
  %1090 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 7, i32 0, i32 0
  %1091 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 8, i32 0, i32 0
  %1092 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1060, i64 0, i32 0, i32 0
  %1093 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 2
  %1094 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 2, i32 0, i32 0
  %1095 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %1096 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 4, i32 0, i32 0
  %1097 = bitcast %"class.angle::FastVector.231"* %37 to i8*
  %1098 = bitcast %"class.angle::FastVector.231"* %38 to i8*
  %1099 = bitcast %"class.angle::FastVector.231"* %39 to i8*
  %1100 = bitcast %"class.angle::FastVector.231"* %40 to i8*
  %1101 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 4, i32 0, i32 0
  %1102 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 0, i32 0, i32 0
  %1103 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 0, i32 0, i32 1
  %1104 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 1, i32 0, i32 0
  %1105 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 1, i32 0, i32 1
  %1106 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 2, i32 0, i32 0
  %1107 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 2, i32 0, i32 1
  %1108 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 3, i32 0, i32 0
  %1109 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 3, i32 0, i32 1
  %1110 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 16, i32 0, i32 0
  %1111 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 7
  %1112 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 3, i32 0, i32 0
  %1113 = bitcast %"class.angle::FastVector.278"* %33 to i8*
  %1114 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 1
  %1115 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 0, i32 0, i64 0
  %1116 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 2
  %1117 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %33, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1118 = bitcast %"class.angle::FastVector.271"* %35 to i8*
  %1119 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %35, i64 0, i32 1
  %1120 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %35, i64 0, i32 0, i32 0, i64 0
  %1121 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %35, i64 0, i32 2
  %1122 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %35, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1123 = bitcast %"class.angle::FastVector.278"* %36 to i8*
  %1124 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %36, i64 0, i32 1
  %1125 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %36, i64 0, i32 0, i32 0, i64 0
  %1126 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %36, i64 0, i32 2
  %1127 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %36, i64 0, i32 3
  %1128 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %37, i64 0, i32 1
  %1129 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %37, i64 0, i32 0, i32 0, i64 0
  %1130 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %37, i64 0, i32 2
  %1131 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %37, i64 0, i32 3
  %1132 = bitcast %"class.angle::spirv::BoxedUint32"** %1128 to i8**
  %1133 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 12
  %1134 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 9
  %1135 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 14
  %1136 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 11
  %1137 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 13
  %1138 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 10
  %1139 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %38, i64 0, i32 1
  %1140 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %38, i64 0, i32 0, i32 0, i64 0
  %1141 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %38, i64 0, i32 2
  %1142 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %38, i64 0, i32 3
  %1143 = bitcast %"class.angle::spirv::BoxedUint32"** %1139 to i8**
  %1144 = bitcast %"class.angle::spirv::BoxedUint32"** %1124 to i8**
  %1145 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %39, i64 0, i32 1
  %1146 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %39, i64 0, i32 0, i32 0, i64 0
  %1147 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %39, i64 0, i32 2
  %1148 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %39, i64 0, i32 3
  %1149 = bitcast %"class.angle::spirv::BoxedUint32"** %1145 to i8**
  %1150 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %40, i64 0, i32 1
  %1151 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %40, i64 0, i32 0, i32 0, i64 0
  %1152 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %40, i64 0, i32 2
  %1153 = getelementptr inbounds %"class.angle::FastVector.231", %"class.angle::FastVector.231"* %40, i64 0, i32 3
  %1154 = bitcast %"class.angle::spirv::BoxedUint32"** %1150 to i8**
  %1155 = bitcast %"class.angle::FastVector.278"* %34 to i8*
  %1156 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 0, i32 0, i64 2
  %1157 = bitcast %"class.angle::spirv::BoxedUint32"* %1156 to i8*
  %1158 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 1
  %1159 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 0, i32 0, i64 0
  %1160 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 2
  %1161 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1162 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %34, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0
  %1163 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %36, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %1164 = bitcast %"class.angle::spirv::BoxedUint32"* %41 to i8*
  %1165 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %41, i64 0, i32 0, i32 0
  %1166 = bitcast %"class.angle::spirv::BoxedUint32"* %42 to i8*
  %1167 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %42, i64 0, i32 0, i32 0
  %1168 = bitcast %"class.angle::spirv::BoxedUint32"* %43 to i8*
  %1169 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %43, i64 0, i32 0, i32 0
  %1170 = bitcast %"class.angle::FastVector.278"* %44 to i8*
  %1171 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %44, i64 0, i32 1
  %1172 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %44, i64 0, i32 0, i32 0, i64 0
  %1173 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %44, i64 0, i32 2
  %1174 = bitcast i64* %974 to <2 x i64>*
  %1175 = bitcast i64* %998 to <2 x i64>*
  %1176 = bitcast i64* %1006 to <2 x i64>*
  %1177 = bitcast i64* %1006 to <2 x i64>*
  %1178 = bitcast i64* %1006 to <2 x i64>*
  %1179 = bitcast i64* %1011 to <2 x i64>*
  %1180 = bitcast i64* %1016 to <2 x i64>*
  %1181 = bitcast i64* %1020 to <2 x i64>*
  %1182 = bitcast i64* %1025 to <2 x i64>*
  %1183 = bitcast i64* %1030 to <2 x i64>*
  %1184 = bitcast i64* %1030 to <2 x i64>*
  %1185 = bitcast i64* %1030 to <2 x i64>*
  %1186 = bitcast i64* %1037 to <2 x i64>*
  %1187 = bitcast i64* %1085 to <2 x i64>*
  %1188 = bitcast i64* %1116 to <2 x i64>*
  %1189 = bitcast i64* %1121 to <2 x i64>*
  %1190 = bitcast i64* %1126 to <2 x i64>*
  %1191 = bitcast i64* %1130 to <2 x i64>*
  %1192 = bitcast i64* %1141 to <2 x i64>*
  %1193 = bitcast i64* %1147 to <2 x i64>*
  %1194 = bitcast i64* %1152 to <2 x i64>*
  %1195 = bitcast i64* %1160 to <2 x i64>*
  %1196 = bitcast i64* %1173 to <2 x i64>*
  br label %1197

1197:                                             ; preds = %952, %2888
  %1198 = phi %"class.std::__1::vector"* [ %949, %952 ], [ %2893, %2888 ]
  %1199 = phi i64 [ %950, %952 ], [ %2892, %2888 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %953) #14
  store i32 -1431655766, i32* %48, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %954) #14
  store i32 -1431655766, i32* %49, align 4
  %1200 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1198, i64 0, i32 0, i32 0
  %1201 = load i32*, i32** %1200, align 8
  %1202 = getelementptr inbounds i32, i32* %1201, i64 %1199
  call void @_ZN5angle5spirv25GetInstructionOpAndLengthEPKjPN3spv2OpEPj(i32* %1202, i32* nonnull %49, i32* nonnull %48) #14
  %1203 = load i32, i32* %49, align 4
  %1204 = icmp eq i32 %1203, 54
  br i1 %1204, label %1205, label %1708

1205:                                             ; preds = %1197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1055) #14
  store i32 0, i32* %1056, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1057) #14
  store i32 -1431655766, i32* %51, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1058) #14
  store i32 0, i32* %1059, align 4
  call void @_ZN5angle5spirv13ParseFunctionEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv19FunctionControlMaskES6_(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %50, %"class.angle::spirv::BoxedUint32"* %1060, i32* nonnull %51, %"class.angle::spirv::BoxedUint32"* nonnull %52) #14
  %1206 = load i8, i8* %955, align 8, !range !22
  %1207 = icmp eq i8 %1206, 0
  br i1 %1207, label %1208, label %1697

1208:                                             ; preds = %1205
  %1209 = load i32, i32* %1061, align 4
  %1210 = and i32 %1209, -5
  %1211 = icmp eq i32 %1210, 0
  br i1 %1211, label %1212, label %1218

1212:                                             ; preds = %1208
  %1213 = load i8, i8* %1062, align 1, !range !22
  %1214 = icmp eq i8 %1213, 0
  br i1 %1214, label %1215, label %1218

1215:                                             ; preds = %1212
  %1216 = load i8, i8* %1001, align 4, !range !22
  %1217 = icmp eq i8 %1216, 0
  br i1 %1217, label %1697, label %1218

1218:                                             ; preds = %1215, %1212, %1208
  %1219 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %1220 = load i32, i32* %1063, align 4
  %1221 = icmp eq i32 %1220, 0
  br i1 %1221, label %1222, label %1228

1222:                                             ; preds = %1218
  %1223 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1219, i64 0, i32 0, i32 0
  %1224 = load i32*, i32** %1223, align 8
  %1225 = getelementptr inbounds i32, i32* %1224, i64 3
  %1226 = load i32, i32* %1225, align 4
  %1227 = add i32 %1226, 1
  store i32 %1227, i32* %1225, align 4
  store i32 %1226, i32* %1063, align 8
  call void @_ZN5angle5spirv14WriteTypeFloatEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1219, i32 %1226, i32 32) #14
  br label %1228

1228:                                             ; preds = %1222, %1218
  %1229 = load i32, i32* %1064, align 4
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1238

1231:                                             ; preds = %1228
  %1232 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1219, i64 0, i32 0, i32 0
  %1233 = load i32*, i32** %1232, align 8
  %1234 = getelementptr inbounds i32, i32* %1233, i64 3
  %1235 = load i32, i32* %1234, align 4
  %1236 = add i32 %1235, 1
  store i32 %1236, i32* %1234, align 4
  store i32 %1235, i32* %1064, align 4
  %1237 = load i32, i32* %1063, align 8
  call void @_ZN5angle5spirv15WriteTypeVectorEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1219, i32 %1235, i32 %1237, i32 4) #14
  br label %1238

1238:                                             ; preds = %1231, %1228
  %1239 = load i32, i32* %1065, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1248

1241:                                             ; preds = %1238
  %1242 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1219, i64 0, i32 0, i32 0
  %1243 = load i32*, i32** %1242, align 8
  %1244 = getelementptr inbounds i32, i32* %1243, i64 3
  %1245 = load i32, i32* %1244, align 4
  %1246 = add i32 %1245, 1
  store i32 %1246, i32* %1244, align 4
  store i32 %1245, i32* %1065, align 8
  %1247 = load i32, i32* %1064, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1219, i32 %1245, i32 3, i32 %1247) #14
  br label %1248

1248:                                             ; preds = %1241, %1238
  %1249 = load i32, i32* %1066, align 4
  %1250 = icmp eq i32 %1249, 0
  br i1 %1250, label %1251, label %1257

1251:                                             ; preds = %1248
  %1252 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1219, i64 0, i32 0, i32 0
  %1253 = load i32*, i32** %1252, align 8
  %1254 = getelementptr inbounds i32, i32* %1253, i64 3
  %1255 = load i32, i32* %1254, align 4
  %1256 = add i32 %1255, 1
  store i32 %1256, i32* %1254, align 4
  store i32 %1255, i32* %1066, align 4
  call void @_ZN5angle5spirv12WriteTypeIntEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEESB_(%"class.std::__1::vector"* %1219, i32 %1255, i32 32, i32 1) #14
  br label %1257

1257:                                             ; preds = %1251, %1248
  %1258 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1219, i64 0, i32 0, i32 0
  %1259 = load i32*, i32** %1258, align 8
  %1260 = getelementptr inbounds i32, i32* %1259, i64 3
  %1261 = load i32, i32* %1260, align 4
  %1262 = add i32 %1261, 1
  store i32 %1262, i32* %1260, align 4
  store i32 %1261, i32* %1067, align 4
  %1263 = load i32, i32* %1066, align 4
  call void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1219, i32 %1263, i32 %1261, i32 0) #14
  %1264 = load i32*, i32** %1258, align 8
  %1265 = getelementptr inbounds i32, i32* %1264, i64 3
  %1266 = load i32, i32* %1265, align 4
  %1267 = add i32 %1266, 1
  store i32 %1267, i32* %1265, align 4
  store i32 %1266, i32* %1068, align 8
  %1268 = load i32, i32* %1063, align 8
  call void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1219, i32 %1268, i32 %1266, i32 1056964608) #14
  %1269 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %1270 = load i8, i8* %1002, align 8, !range !22
  %1271 = icmp eq i8 %1270, 0
  br i1 %1271, label %1697, label %1272

1272:                                             ; preds = %1257
  %1273 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1269, i64 0, i32 0, i32 0
  %1274 = load i32*, i32** %1273, align 8
  %1275 = getelementptr inbounds i32, i32* %1274, i64 3
  %1276 = load i32, i32* %1275, align 4
  %1277 = add i32 %1276, 1
  store i32 %1277, i32* %1275, align 4
  store i32 %1276, i32* %1069, align 8
  %1278 = load i32*, i32** %1273, align 8
  %1279 = getelementptr inbounds i32, i32* %1278, i64 3
  %1280 = load i32, i32* %1279, align 4
  %1281 = add i32 %1280, 1
  store i32 %1281, i32* %1279, align 4
  store i32 %1280, i32* %1070, align 4
  %1282 = load i32, i32* %1069, align 8
  %1283 = load i32, i32* %1063, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1282, i32 3, i32 %1283) #14
  %1284 = load i32, i32* %1070, align 4
  %1285 = load i32, i32* %1063, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1284, i32 6, i32 %1285) #14
  %1286 = load i32, i32* %1066, align 4
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1301, label %1288

1288:                                             ; preds = %1272
  %1289 = load i32*, i32** %1273, align 8
  %1290 = getelementptr inbounds i32, i32* %1289, i64 3
  %1291 = load i32, i32* %1290, align 4
  %1292 = add i32 %1291, 1
  store i32 %1292, i32* %1290, align 4
  store i32 %1291, i32* %1071, align 4
  %1293 = load i32*, i32** %1273, align 8
  %1294 = getelementptr inbounds i32, i32* %1293, i64 3
  %1295 = load i32, i32* %1294, align 4
  %1296 = add i32 %1295, 1
  store i32 %1296, i32* %1294, align 4
  store i32 %1295, i32* %1072, align 8
  %1297 = load i32, i32* %1071, align 4
  %1298 = load i32, i32* %1066, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1297, i32 3, i32 %1298) #14
  %1299 = load i32, i32* %1072, align 8
  %1300 = load i32, i32* %1066, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1299, i32 6, i32 %1300) #14
  br label %1301

1301:                                             ; preds = %1288, %1272
  %1302 = load i32, i32* %1073, align 8
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1317, label %1304

1304:                                             ; preds = %1301
  %1305 = load i32*, i32** %1273, align 8
  %1306 = getelementptr inbounds i32, i32* %1305, i64 3
  %1307 = load i32, i32* %1306, align 4
  %1308 = add i32 %1307, 1
  store i32 %1308, i32* %1306, align 4
  store i32 %1307, i32* %1074, align 8
  %1309 = load i32*, i32** %1273, align 8
  %1310 = getelementptr inbounds i32, i32* %1309, i64 3
  %1311 = load i32, i32* %1310, align 4
  %1312 = add i32 %1311, 1
  store i32 %1312, i32* %1310, align 4
  store i32 %1311, i32* %1075, align 4
  %1313 = load i32, i32* %1074, align 8
  %1314 = load i32, i32* %1073, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1313, i32 3, i32 %1314) #14
  %1315 = load i32, i32* %1075, align 4
  %1316 = load i32, i32* %1073, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1315, i32 6, i32 %1316) #14
  br label %1317

1317:                                             ; preds = %1304, %1301
  %1318 = load i32*, i32** %1273, align 8
  %1319 = getelementptr inbounds i32, i32* %1318, i64 3
  %1320 = load i32, i32* %1319, align 4
  %1321 = add i32 %1320, 1
  store i32 %1321, i32* %1319, align 4
  store i32 %1320, i32* %1076, align 8
  %1322 = load i32, i32* %1063, align 8
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %1269, i32 %1320, i32 2, i32 %1322) #14
  %1323 = load i64, i64* %1077, align 8
  %1324 = icmp ult i64 %1323, 4
  br i1 %1324, label %1325, label %1346

1325:                                             ; preds = %1317
  %1326 = load i64, i64* %1078, align 8
  %1327 = icmp ult i64 %1326, 4
  br i1 %1327, label %1328, label %1346

1328:                                             ; preds = %1325
  %1329 = call i8* @_Znam(i64 16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1329, i8 0, i64 16, i1 false) #14
  %1330 = icmp eq i64 %1323, 0
  br i1 %1330, label %1331, label %1334

1331:                                             ; preds = %1328
  %1332 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1333 = bitcast %"class.angle::spirv::BoxedUint32"* %1332 to i8*
  br label %1338

1334:                                             ; preds = %1328
  %1335 = shl nuw i64 %1323, 2
  %1336 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1329, i8* align 4 %1336, i64 %1335, i1 false) #14
  %1337 = bitcast i8* %1336 to %"class.angle::spirv::BoxedUint32"*
  br label %1338

1338:                                             ; preds = %1334, %1331
  %1339 = phi i8* [ %1333, %1331 ], [ %1336, %1334 ]
  %1340 = phi %"class.angle::spirv::BoxedUint32"* [ %1332, %1331 ], [ %1337, %1334 ]
  %1341 = icmp eq %"class.angle::spirv::BoxedUint32"* %1340, %1081
  %1342 = icmp eq %"class.angle::spirv::BoxedUint32"* %1340, null
  %1343 = or i1 %1341, %1342
  br i1 %1343, label %1345, label %1344

1344:                                             ; preds = %1338
  call void @_ZdaPv(i8* %1339) #17
  br label %1345

1345:                                             ; preds = %1344, %1338
  store i8* %1329, i8** %1080, align 8
  store i64 4, i64* %1078, align 8
  br label %1346

1346:                                             ; preds = %1345, %1325, %1317
  store i64 4, i64* %1077, align 8
  %1347 = load i32, i32* %1067, align 4
  %1348 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1349 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1348, i64 0, i32 0, i32 0
  store i32 %1347, i32* %1349, align 4
  br label %1351

1350:                                             ; preds = %1407
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1082) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1082, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1084, %"class.angle::spirv::BoxedUint32"** %1083, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1187, align 8
  br label %1423

1351:                                             ; preds = %1407, %1346
  %1352 = phi i64 [ 1, %1346 ], [ %1408, %1407 ]
  %1353 = load i64, i64* %1077, align 8
  %1354 = icmp ugt i64 %1353, %1352
  br i1 %1354, label %1390, label %1355

1355:                                             ; preds = %1351
  %1356 = add nuw nsw i64 %1352, 1
  %1357 = load i64, i64* %1078, align 8
  %1358 = icmp ugt i64 %1357, %1352
  br i1 %1358, label %1389, label %1359

1359:                                             ; preds = %1355
  %1360 = icmp ugt i64 %1357, 4
  %1361 = select i1 %1360, i64 %1357, i64 4
  br label %1362

1362:                                             ; preds = %1362, %1359
  %1363 = phi i64 [ %1361, %1359 ], [ %1365, %1362 ]
  %1364 = icmp ugt i64 %1363, %1352
  %1365 = shl i64 %1363, 1
  br i1 %1364, label %1366, label %1362

1366:                                             ; preds = %1362
  %1367 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1363, i64 4) #14
  %1368 = extractvalue { i64, i1 } %1367, 1
  %1369 = extractvalue { i64, i1 } %1367, 0
  %1370 = select i1 %1368, i64 -1, i64 %1369
  %1371 = call i8* @_Znam(i64 %1370) #17
  %1372 = shl nsw i64 %1363, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1371, i8 0, i64 %1372, i1 false) #14
  %1373 = icmp eq i64 %1353, 0
  br i1 %1373, label %1374, label %1377

1374:                                             ; preds = %1366
  %1375 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1376 = bitcast %"class.angle::spirv::BoxedUint32"* %1375 to i8*
  br label %1381

1377:                                             ; preds = %1366
  %1378 = shl nuw i64 %1353, 2
  %1379 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1371, i8* align 4 %1379, i64 %1378, i1 false) #14
  %1380 = bitcast i8* %1379 to %"class.angle::spirv::BoxedUint32"*
  br label %1381

1381:                                             ; preds = %1377, %1374
  %1382 = phi i8* [ %1376, %1374 ], [ %1379, %1377 ]
  %1383 = phi %"class.angle::spirv::BoxedUint32"* [ %1375, %1374 ], [ %1380, %1377 ]
  %1384 = icmp eq %"class.angle::spirv::BoxedUint32"* %1383, %1081
  %1385 = icmp eq %"class.angle::spirv::BoxedUint32"* %1383, null
  %1386 = or i1 %1384, %1385
  br i1 %1386, label %1388, label %1387

1387:                                             ; preds = %1381
  call void @_ZdaPv(i8* %1382) #17
  br label %1388

1388:                                             ; preds = %1387, %1381
  store i8* %1371, i8** %1080, align 8
  store i64 %1363, i64* %1078, align 8
  br label %1389

1389:                                             ; preds = %1388, %1355
  store i64 %1356, i64* %1077, align 8
  br label %1395

1390:                                             ; preds = %1351
  %1391 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1392 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1391, i64 %1352, i32 0, i32 0
  %1393 = load i32, i32* %1392, align 4
  %1394 = icmp eq i32 %1393, 0
  br i1 %1394, label %1395, label %1407

1395:                                             ; preds = %1390, %1389
  %1396 = load i32*, i32** %1273, align 8
  %1397 = getelementptr inbounds i32, i32* %1396, i64 3
  %1398 = load i32, i32* %1397, align 4
  %1399 = add i32 %1398, 1
  store i32 %1399, i32* %1397, align 4
  %1400 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1401 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1400, i64 %1352, i32 0, i32 0
  store i32 %1398, i32* %1401, align 4
  %1402 = load i32, i32* %1066, align 4
  %1403 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1404 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1403, i64 %1352, i32 0, i32 0
  %1405 = load i32, i32* %1404, align 4
  %1406 = trunc i64 %1352 to i32
  call void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1269, i32 %1402, i32 %1405, i32 %1406) #14
  br label %1407

1407:                                             ; preds = %1395, %1390
  %1408 = add nuw nsw i64 %1352, 1
  %1409 = icmp eq i64 %1408, 4
  br i1 %1409, label %1350, label %1351

1410:                                             ; preds = %1694
  %1411 = load i32*, i32** %1273, align 8
  %1412 = getelementptr inbounds i32, i32* %1411, i64 3
  %1413 = load i32, i32* %1412, align 4
  %1414 = add i32 %1413, 1
  store i32 %1414, i32* %1412, align 4
  store i32 %1413, i32* %1090, align 8
  %1415 = load i32, i32* %1091, align 4
  call void @_ZN5angle5spirv22WriteConstantCompositeEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %1269, i32 %1415, i32 %1413, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %45) #14
  store i64 0, i64* %1085, align 8
  %1416 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1083, align 8
  %1417 = icmp eq %"class.angle::spirv::BoxedUint32"* %1416, %1084
  %1418 = icmp eq %"class.angle::spirv::BoxedUint32"* %1416, null
  %1419 = or i1 %1417, %1418
  br i1 %1419, label %1422, label %1420

1420:                                             ; preds = %1410
  %1421 = bitcast %"class.angle::spirv::BoxedUint32"* %1416 to i8*
  call void @_ZdaPv(i8* %1421) #17
  br label %1422

1422:                                             ; preds = %1420, %1410
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1082) #14
  br label %1697

1423:                                             ; preds = %1694, %1350
  %1424 = phi %"class.std::__1::vector.233"* [ %1087, %1350 ], [ %1695, %1694 ]
  %1425 = getelementptr inbounds %"class.std::__1::vector.233", %"class.std::__1::vector.233"* %1424, i64 0, i32 0, i32 0
  %1426 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1425, align 8
  %1427 = getelementptr inbounds %"class.std::__1::vector.233", %"class.std::__1::vector.233"* %1424, i64 0, i32 0, i32 1
  %1428 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1427, align 8
  %1429 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1426, %1428
  br i1 %1429, label %1430, label %1478

1430:                                             ; preds = %1423
  %1431 = load i32, i32* %1067, align 4
  %1432 = load i64, i64* %1085, align 8
  %1433 = load i64, i64* %1086, align 8
  %1434 = icmp eq i64 %1432, %1433
  br i1 %1434, label %1435, label %1473

1435:                                             ; preds = %1430
  %1436 = add i64 %1432, 1
  %1437 = icmp eq i64 %1432, -1
  br i1 %1437, label %1473, label %1438

1438:                                             ; preds = %1435
  %1439 = icmp ugt i64 %1432, 8
  %1440 = select i1 %1439, i64 %1432, i64 8
  br label %1441

1441:                                             ; preds = %1441, %1438
  %1442 = phi i64 [ %1440, %1438 ], [ %1444, %1441 ]
  %1443 = icmp ult i64 %1442, %1436
  %1444 = shl i64 %1442, 1
  br i1 %1443, label %1441, label %1445

1445:                                             ; preds = %1441
  %1446 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1442, i64 4) #14
  %1447 = extractvalue { i64, i1 } %1446, 1
  %1448 = extractvalue { i64, i1 } %1446, 0
  %1449 = select i1 %1447, i64 -1, i64 %1448
  %1450 = call i8* @_Znam(i64 %1449) #17
  %1451 = icmp eq i64 %1442, 0
  br i1 %1451, label %1454, label %1452

1452:                                             ; preds = %1445
  %1453 = shl nsw i64 %1442, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1450, i8 0, i64 %1453, i1 false) #14
  br label %1454

1454:                                             ; preds = %1452, %1445
  %1455 = icmp eq i64 %1432, 0
  br i1 %1455, label %1456, label %1459

1456:                                             ; preds = %1454
  %1457 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1083, align 8
  %1458 = bitcast %"class.angle::spirv::BoxedUint32"* %1457 to i8*
  br label %1463

1459:                                             ; preds = %1454
  %1460 = shl nuw i64 %1432, 2
  %1461 = load i8*, i8** %1089, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1450, i8* align 4 %1461, i64 %1460, i1 false) #14
  %1462 = bitcast i8* %1461 to %"class.angle::spirv::BoxedUint32"*
  br label %1463

1463:                                             ; preds = %1459, %1456
  %1464 = phi i8* [ %1458, %1456 ], [ %1461, %1459 ]
  %1465 = phi %"class.angle::spirv::BoxedUint32"* [ %1457, %1456 ], [ %1462, %1459 ]
  %1466 = icmp eq %"class.angle::spirv::BoxedUint32"* %1465, %1084
  %1467 = icmp eq %"class.angle::spirv::BoxedUint32"* %1465, null
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %1471, label %1469

1469:                                             ; preds = %1463
  call void @_ZdaPv(i8* %1464) #17
  %1470 = load i64, i64* %1085, align 8
  br label %1471

1471:                                             ; preds = %1469, %1463
  %1472 = phi i64 [ %1470, %1469 ], [ %1432, %1463 ]
  store i8* %1450, i8** %1089, align 8
  store i64 %1442, i64* %1086, align 8
  br label %1473

1473:                                             ; preds = %1471, %1435, %1430
  %1474 = phi i64 [ %1472, %1471 ], [ -1, %1435 ], [ %1432, %1430 ]
  %1475 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1083, align 8
  %1476 = add i64 %1474, 1
  store i64 %1476, i64* %1085, align 8
  %1477 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1475, i64 %1474, i32 0, i32 0
  store i32 %1431, i32* %1477, align 4
  br label %1694

1478:                                             ; preds = %1423
  %1479 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1426, i64 0, i32 0
  %1480 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1479, align 8
  %1481 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1480, i64 0, i32 2
  %1482 = load i32, i32* %1481, align 8
  %1483 = lshr i32 %1482, 2
  %1484 = load i32*, i32** %1273, align 8
  %1485 = getelementptr inbounds i32, i32* %1484, i64 3
  %1486 = load i32, i32* %1485, align 4
  %1487 = add i32 %1486, 1
  store i32 %1487, i32* %1485, align 4
  %1488 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1480, i64 0, i32 0
  %1489 = load i32, i32* %1488, align 8
  %1490 = zext i32 %1489 to i64
  %1491 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 6, i32 0, i64 %1490, i32 0, i32 0
  store i32 %1486, i32* %1491, align 4
  %1492 = load i32, i32* %1066, align 4
  %1493 = load i32, i32* %1488, align 8
  %1494 = zext i32 %1493 to i64
  %1495 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 6, i32 0, i64 %1494, i32 0, i32 0
  %1496 = load i32, i32* %1495, align 4
  call void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1269, i32 %1492, i32 %1496, i32 %1483) #14
  %1497 = load i32, i32* %1488, align 8
  %1498 = zext i32 %1497 to i64
  %1499 = load i64, i64* %1085, align 8
  %1500 = load i64, i64* %1086, align 8
  %1501 = icmp eq i64 %1499, %1500
  br i1 %1501, label %1502, label %1540

1502:                                             ; preds = %1478
  %1503 = add i64 %1499, 1
  %1504 = icmp eq i64 %1499, -1
  br i1 %1504, label %1540, label %1505

1505:                                             ; preds = %1502
  %1506 = icmp ugt i64 %1499, 8
  %1507 = select i1 %1506, i64 %1499, i64 8
  br label %1508

1508:                                             ; preds = %1508, %1505
  %1509 = phi i64 [ %1507, %1505 ], [ %1511, %1508 ]
  %1510 = icmp ult i64 %1509, %1503
  %1511 = shl i64 %1509, 1
  br i1 %1510, label %1508, label %1512

1512:                                             ; preds = %1508
  %1513 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1509, i64 4) #14
  %1514 = extractvalue { i64, i1 } %1513, 1
  %1515 = extractvalue { i64, i1 } %1513, 0
  %1516 = select i1 %1514, i64 -1, i64 %1515
  %1517 = call i8* @_Znam(i64 %1516) #17
  %1518 = icmp eq i64 %1509, 0
  br i1 %1518, label %1521, label %1519

1519:                                             ; preds = %1512
  %1520 = shl nsw i64 %1509, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1517, i8 0, i64 %1520, i1 false) #14
  br label %1521

1521:                                             ; preds = %1519, %1512
  %1522 = icmp eq i64 %1499, 0
  br i1 %1522, label %1523, label %1526

1523:                                             ; preds = %1521
  %1524 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1083, align 8
  %1525 = bitcast %"class.angle::spirv::BoxedUint32"* %1524 to i8*
  br label %1530

1526:                                             ; preds = %1521
  %1527 = shl nuw i64 %1499, 2
  %1528 = load i8*, i8** %1089, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1517, i8* align 4 %1528, i64 %1527, i1 false) #14
  %1529 = bitcast i8* %1528 to %"class.angle::spirv::BoxedUint32"*
  br label %1530

1530:                                             ; preds = %1526, %1523
  %1531 = phi i8* [ %1525, %1523 ], [ %1528, %1526 ]
  %1532 = phi %"class.angle::spirv::BoxedUint32"* [ %1524, %1523 ], [ %1529, %1526 ]
  %1533 = icmp eq %"class.angle::spirv::BoxedUint32"* %1532, %1084
  %1534 = icmp eq %"class.angle::spirv::BoxedUint32"* %1532, null
  %1535 = or i1 %1533, %1534
  br i1 %1535, label %1538, label %1536

1536:                                             ; preds = %1530
  call void @_ZdaPv(i8* %1531) #17
  %1537 = load i64, i64* %1085, align 8
  br label %1538

1538:                                             ; preds = %1536, %1530
  %1539 = phi i64 [ %1537, %1536 ], [ %1499, %1530 ]
  store i8* %1517, i8** %1089, align 8
  store i64 %1509, i64* %1086, align 8
  br label %1540

1540:                                             ; preds = %1538, %1502, %1478
  %1541 = phi i64 [ %1539, %1538 ], [ -1, %1502 ], [ %1499, %1478 ]
  %1542 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1083, align 8
  %1543 = add i64 %1541, 1
  store i64 %1543, i64* %1085, align 8
  %1544 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 6, i32 0, i64 %1498, i32 0, i32 0
  %1545 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1542, i64 %1541, i32 0, i32 0
  %1546 = load i32, i32* %1544, align 4
  store i32 %1546, i32* %1545, align 4
  %1547 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1425, align 8
  %1548 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1427, align 8
  %1549 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1547, %1548
  br i1 %1549, label %1694, label %1550

1550:                                             ; preds = %1540, %1691
  %1551 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %1692, %1691 ], [ %1547, %1540 ]
  %1552 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1551, i64 0, i32 2
  %1553 = load i32, i32* %1552, align 4
  %1554 = icmp eq i32 %1553, -1
  br i1 %1554, label %1616, label %1555

1555:                                             ; preds = %1550
  %1556 = load i64, i64* %1077, align 8
  %1557 = zext i32 %1553 to i64
  %1558 = icmp ugt i64 %1556, %1557
  br i1 %1558, label %1600, label %1559

1559:                                             ; preds = %1555
  %1560 = add nuw i32 %1553, 1
  %1561 = zext i32 %1560 to i64
  %1562 = icmp ult i64 %1556, %1561
  br i1 %1562, label %1563, label %1599

1563:                                             ; preds = %1559
  %1564 = load i64, i64* %1078, align 8
  %1565 = icmp ult i64 %1564, %1561
  br i1 %1565, label %1566, label %1599

1566:                                             ; preds = %1563
  %1567 = icmp ugt i64 %1564, 4
  %1568 = select i1 %1567, i64 %1564, i64 4
  br label %1569

1569:                                             ; preds = %1569, %1566
  %1570 = phi i64 [ %1568, %1566 ], [ %1572, %1569 ]
  %1571 = icmp ult i64 %1570, %1561
  %1572 = shl i64 %1570, 1
  br i1 %1571, label %1569, label %1573

1573:                                             ; preds = %1569
  %1574 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1570, i64 4) #14
  %1575 = extractvalue { i64, i1 } %1574, 1
  %1576 = extractvalue { i64, i1 } %1574, 0
  %1577 = select i1 %1575, i64 -1, i64 %1576
  %1578 = call i8* @_Znam(i64 %1577) #17
  %1579 = icmp eq i64 %1570, 0
  br i1 %1579, label %1582, label %1580

1580:                                             ; preds = %1573
  %1581 = shl nsw i64 %1570, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1578, i8 0, i64 %1581, i1 false) #14
  br label %1582

1582:                                             ; preds = %1580, %1573
  %1583 = icmp eq i64 %1556, 0
  br i1 %1583, label %1584, label %1587

1584:                                             ; preds = %1582
  %1585 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1586 = bitcast %"class.angle::spirv::BoxedUint32"* %1585 to i8*
  br label %1591

1587:                                             ; preds = %1582
  %1588 = shl nuw i64 %1556, 2
  %1589 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1578, i8* align 4 %1589, i64 %1588, i1 false) #14
  %1590 = bitcast i8* %1589 to %"class.angle::spirv::BoxedUint32"*
  br label %1591

1591:                                             ; preds = %1587, %1584
  %1592 = phi i8* [ %1586, %1584 ], [ %1589, %1587 ]
  %1593 = phi %"class.angle::spirv::BoxedUint32"* [ %1585, %1584 ], [ %1590, %1587 ]
  %1594 = icmp eq %"class.angle::spirv::BoxedUint32"* %1593, %1081
  %1595 = icmp eq %"class.angle::spirv::BoxedUint32"* %1593, null
  %1596 = or i1 %1594, %1595
  br i1 %1596, label %1598, label %1597

1597:                                             ; preds = %1591
  call void @_ZdaPv(i8* %1592) #17
  br label %1598

1598:                                             ; preds = %1597, %1591
  store i8* %1578, i8** %1080, align 8
  store i64 %1570, i64* %1078, align 8
  br label %1599

1599:                                             ; preds = %1598, %1563, %1559
  store i64 %1561, i64* %1077, align 8
  br label %1605

1600:                                             ; preds = %1555
  %1601 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1602 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1601, i64 %1557, i32 0, i32 0
  %1603 = load i32, i32* %1602, align 4
  %1604 = icmp eq i32 %1603, 0
  br i1 %1604, label %1605, label %1616

1605:                                             ; preds = %1600, %1599
  %1606 = load i32*, i32** %1273, align 8
  %1607 = getelementptr inbounds i32, i32* %1606, i64 3
  %1608 = load i32, i32* %1607, align 4
  %1609 = add i32 %1608, 1
  store i32 %1609, i32* %1607, align 4
  %1610 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1611 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1610, i64 %1557, i32 0, i32 0
  store i32 %1608, i32* %1611, align 4
  %1612 = load i32, i32* %1066, align 4
  %1613 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1614 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1613, i64 %1557, i32 0, i32 0
  %1615 = load i32, i32* %1614, align 4
  call void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1269, i32 %1612, i32 %1615, i32 %1553) #14
  br label %1616

1616:                                             ; preds = %1605, %1600, %1550
  %1617 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1551, i64 0, i32 0
  %1618 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1617, align 8
  %1619 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1618, i64 0, i32 3
  %1620 = load i32, i32* %1619, align 4
  %1621 = icmp eq i32 %1620, -1
  br i1 %1621, label %1691, label %1622

1622:                                             ; preds = %1616
  %1623 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1618, i64 0, i32 6
  %1624 = load i32, i32* %1623, align 8
  %1625 = icmp eq i32 %1624, -1
  %1626 = select i1 %1625, i32 0, i32 %1624
  %1627 = add i32 %1626, %1620
  %1628 = icmp ult i32 %1626, %1627
  br i1 %1628, label %1629, label %1691

1629:                                             ; preds = %1622
  %1630 = zext i32 %1626 to i64
  %1631 = zext i32 %1627 to i64
  br label %1632

1632:                                             ; preds = %1688, %1629
  %1633 = phi i64 [ %1630, %1629 ], [ %1689, %1688 ]
  %1634 = load i64, i64* %1077, align 8
  %1635 = icmp ugt i64 %1634, %1633
  br i1 %1635, label %1671, label %1636

1636:                                             ; preds = %1632
  %1637 = add nuw nsw i64 %1633, 1
  %1638 = load i64, i64* %1078, align 8
  %1639 = icmp ugt i64 %1638, %1633
  br i1 %1639, label %1670, label %1640

1640:                                             ; preds = %1636
  %1641 = icmp ugt i64 %1638, 4
  %1642 = select i1 %1641, i64 %1638, i64 4
  br label %1643

1643:                                             ; preds = %1643, %1640
  %1644 = phi i64 [ %1642, %1640 ], [ %1646, %1643 ]
  %1645 = icmp ugt i64 %1644, %1633
  %1646 = shl i64 %1644, 1
  br i1 %1645, label %1647, label %1643

1647:                                             ; preds = %1643
  %1648 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1644, i64 4) #14
  %1649 = extractvalue { i64, i1 } %1648, 1
  %1650 = extractvalue { i64, i1 } %1648, 0
  %1651 = select i1 %1649, i64 -1, i64 %1650
  %1652 = call i8* @_Znam(i64 %1651) #17
  %1653 = shl nsw i64 %1644, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1652, i8 0, i64 %1653, i1 false) #14
  %1654 = icmp eq i64 %1634, 0
  br i1 %1654, label %1655, label %1658

1655:                                             ; preds = %1647
  %1656 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1657 = bitcast %"class.angle::spirv::BoxedUint32"* %1656 to i8*
  br label %1662

1658:                                             ; preds = %1647
  %1659 = shl nuw i64 %1634, 2
  %1660 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1652, i8* align 4 %1660, i64 %1659, i1 false) #14
  %1661 = bitcast i8* %1660 to %"class.angle::spirv::BoxedUint32"*
  br label %1662

1662:                                             ; preds = %1658, %1655
  %1663 = phi i8* [ %1657, %1655 ], [ %1660, %1658 ]
  %1664 = phi %"class.angle::spirv::BoxedUint32"* [ %1656, %1655 ], [ %1661, %1658 ]
  %1665 = icmp eq %"class.angle::spirv::BoxedUint32"* %1664, %1081
  %1666 = icmp eq %"class.angle::spirv::BoxedUint32"* %1664, null
  %1667 = or i1 %1665, %1666
  br i1 %1667, label %1669, label %1668

1668:                                             ; preds = %1662
  call void @_ZdaPv(i8* %1663) #17
  br label %1669

1669:                                             ; preds = %1668, %1662
  store i8* %1652, i8** %1080, align 8
  store i64 %1644, i64* %1078, align 8
  br label %1670

1670:                                             ; preds = %1669, %1636
  store i64 %1637, i64* %1077, align 8
  br label %1676

1671:                                             ; preds = %1632
  %1672 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1673 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1672, i64 %1633, i32 0, i32 0
  %1674 = load i32, i32* %1673, align 4
  %1675 = icmp eq i32 %1674, 0
  br i1 %1675, label %1676, label %1688

1676:                                             ; preds = %1671, %1670
  %1677 = load i32*, i32** %1273, align 8
  %1678 = getelementptr inbounds i32, i32* %1677, i64 3
  %1679 = load i32, i32* %1678, align 4
  %1680 = add i32 %1679, 1
  store i32 %1680, i32* %1678, align 4
  %1681 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1682 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1681, i64 %1633, i32 0, i32 0
  store i32 %1679, i32* %1682, align 4
  %1683 = load i32, i32* %1066, align 4
  %1684 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %1685 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1684, i64 %1633, i32 0, i32 0
  %1686 = load i32, i32* %1685, align 4
  %1687 = trunc i64 %1633 to i32
  call void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"* %1269, i32 %1683, i32 %1686, i32 %1687) #14
  br label %1688

1688:                                             ; preds = %1676, %1671
  %1689 = add nuw nsw i64 %1633, 1
  %1690 = icmp eq i64 %1689, %1631
  br i1 %1690, label %1691, label %1632

1691:                                             ; preds = %1688, %1622, %1616
  %1692 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1551, i64 1
  %1693 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1692, %1548
  br i1 %1693, label %1694, label %1550

1694:                                             ; preds = %1691, %1540, %1473
  %1695 = getelementptr inbounds %"class.std::__1::vector.233", %"class.std::__1::vector.233"* %1424, i64 1
  %1696 = icmp eq %"class.std::__1::vector.233"* %1695, %1088
  br i1 %1696, label %1410, label %1423

1697:                                             ; preds = %1422, %1257, %1215, %1205
  store i8 1, i8* %955, align 8
  %1698 = load i32, i32* %1092, align 4
  %1699 = load i32, i32* %1043, align 4
  %1700 = icmp eq i32 %1698, %1699
  br i1 %1700, label %1701, label %1705

1701:                                             ; preds = %1697
  %1702 = load i8, i8* %966, align 8
  %1703 = icmp ne i8 %1702, 5
  %1704 = zext i1 %1703 to i8
  br label %1705

1705:                                             ; preds = %1701, %1697
  %1706 = phi i8 [ 0, %1697 ], [ %1704, %1701 ]
  store i8 %1706, i8* %1093, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1058) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1057) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1055) #14
  %1707 = load i32, i32* %49, align 4
  br label %1713

1708:                                             ; preds = %1197
  %1709 = load i8, i8* %955, align 8, !range !22
  %1710 = icmp eq i8 %1709, 0
  br i1 %1710, label %2353, label %1711

1711:                                             ; preds = %1708
  %1712 = load i8, i8* %1093, align 8, !range !22
  br label %1713

1713:                                             ; preds = %1711, %1705
  %1714 = phi i32 [ %1203, %1711 ], [ %1707, %1705 ]
  %1715 = phi i8 [ %1712, %1711 ], [ %1706, %1705 ]
  %1716 = icmp eq i8 %1715, 0
  br i1 %1716, label %1783, label %1717

1717:                                             ; preds = %1713
  switch i32 %1714, label %1718 [
    i32 248, label %1783
    i32 59, label %1783
    i32 55, label %1783
    i32 54, label %1783
  ]

1718:                                             ; preds = %1717
  %1719 = load i8, i8* %966, align 8
  %1720 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  switch i8 %1719, label %1721 [
    i8 5, label %1781
    i8 0, label %1781
  ]

1721:                                             ; preds = %1718
  %1722 = load i64, i64* %192, align 8
  %1723 = load i64, i64* %194, align 8
  %1724 = sub i64 %1722, %1723
  %1725 = ashr exact i64 %1724, 3
  %1726 = icmp ugt i64 %1725, 1
  br i1 %1726, label %1727, label %1781

1727:                                             ; preds = %1721
  %1728 = zext i8 %1719 to i32
  %1729 = shl i32 1, %1728
  %1730 = trunc i32 %1729 to i8
  %1731 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1720, i64 0, i32 0, i32 0
  br label %1732

1732:                                             ; preds = %1771, %1727
  %1733 = phi i64 [ %1723, %1727 ], [ %1772, %1771 ]
  %1734 = phi i64 [ %1722, %1727 ], [ %1773, %1771 ]
  %1735 = phi i64 [ 1, %1727 ], [ %1775, %1771 ]
  %1736 = phi i32 [ 1, %1727 ], [ %1774, %1771 ]
  %1737 = inttoptr i64 %1733 to %"struct.rx::ShaderInterfaceVariableInfo"**
  %1738 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1737, i64 %1735
  %1739 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1738, align 8
  %1740 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %1739, null
  br i1 %1740, label %1771, label %1741

1741:                                             ; preds = %1732
  %1742 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1739, i64 0, i32 9
  %1743 = load i8, i8* %1742, align 8, !range !22
  %1744 = icmp eq i8 %1743, 0
  br i1 %1744, label %1771, label %1745

1745:                                             ; preds = %1741
  %1746 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1739, i64 0, i32 5, i32 0
  %1747 = load i8, i8* %1746, align 1
  %1748 = and i8 %1747, %1730
  %1749 = icmp eq i8 %1748, 0
  br i1 %1749, label %1771, label %1750

1750:                                             ; preds = %1745
  %1751 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1739, i64 0, i32 10
  %1752 = load i8, i8* %1751, align 1, !range !22
  %1753 = icmp eq i8 %1752, 0
  br i1 %1753, label %1771, label %1754

1754:                                             ; preds = %1750
  %1755 = load i32*, i32** %1731, align 8
  %1756 = getelementptr inbounds i32, i32* %1755, i64 3
  %1757 = load i32, i32* %1756, align 4
  %1758 = add i32 %1757, 1
  store i32 %1758, i32* %1756, align 4
  %1759 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1094, align 8
  %1760 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1759, i64 %1735, i32 0, i32 0
  %1761 = load i32, i32* %1760, align 4
  %1762 = zext i32 %1761 to i64
  %1763 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1095, align 8
  %1764 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1763, i64 %1762, i32 0, i32 0
  %1765 = load i32, i32* %1764, align 4
  %1766 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %967, align 8
  %1767 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1766, i64 %1735, i32 0, i32 0
  %1768 = load i32, i32* %1767, align 4
  call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %1720, i32 %1765, i32 %1757, i32 %1768, i32* null) #14
  call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %1720, i32 %1736, i32 %1757, i32* null) #14
  %1769 = load i64, i64* %192, align 8
  %1770 = load i64, i64* %194, align 8
  br label %1771

1771:                                             ; preds = %1754, %1750, %1745, %1741, %1732
  %1772 = phi i64 [ %1733, %1745 ], [ %1733, %1750 ], [ %1733, %1741 ], [ %1733, %1732 ], [ %1770, %1754 ]
  %1773 = phi i64 [ %1734, %1745 ], [ %1734, %1750 ], [ %1734, %1741 ], [ %1734, %1732 ], [ %1769, %1754 ]
  %1774 = add i32 %1736, 1
  %1775 = zext i32 %1774 to i64
  %1776 = sub i64 %1773, %1772
  %1777 = ashr exact i64 %1776, 3
  %1778 = icmp ugt i64 %1777, %1775
  br i1 %1778, label %1732, label %1779

1779:                                             ; preds = %1771
  %1780 = load i32, i32* %49, align 4
  br label %1781

1781:                                             ; preds = %1779, %1721, %1718, %1718
  %1782 = phi i32 [ %1780, %1779 ], [ %1714, %1718 ], [ %1714, %1718 ], [ %1714, %1721 ]
  store i8 0, i8* %1093, align 8
  br label %1783

1783:                                             ; preds = %1781, %1717, %1717, %1717, %1717, %1713
  %1784 = phi i32 [ %1714, %1717 ], [ %1714, %1717 ], [ %1714, %1717 ], [ %1714, %1717 ], [ %1714, %1713 ], [ %1782, %1781 ]
  switch i32 %1784, label %2880 [
    i32 65, label %1785
    i32 66, label %1785
    i32 67, label %1785
    i32 70, label %1785
    i32 218, label %1822
    i32 253, label %1823
  ]

1785:                                             ; preds = %1783, %1783, %1783, %1783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1164) #14
  store i32 0, i32* %1165, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1166) #14
  store i32 0, i32* %1167, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1168) #14
  store i32 0, i32* %1169, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1170) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1170, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1172, %"class.angle::spirv::BoxedUint32"** %1171, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1196, align 8
  call void @_ZN5angle5spirv16ParseAccessChainEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_PNS_10FastVectorIS5_Lm8ENSt3__15arrayIS5_Lm8EEEEE(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %41, %"class.angle::spirv::BoxedUint32"* nonnull %42, %"class.angle::spirv::BoxedUint32"* nonnull %43, %"class.angle::FastVector.278"* nonnull %44) #14
  %1786 = load i32, i32* %1169, align 4
  %1787 = zext i32 %1786 to i64
  %1788 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %965, align 8
  %1789 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1788, i64 %1787
  %1790 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %1789, align 8
  %1791 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %1790, null
  br i1 %1791, label %1813, label %1792

1792:                                             ; preds = %1785
  %1793 = load i8, i8* %966, align 8
  %1794 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1790, i64 0, i32 5, i32 0
  %1795 = load i8, i8* %1794, align 1
  %1796 = zext i8 %1793 to i32
  %1797 = shl i32 1, %1796
  %1798 = trunc i32 %1797 to i8
  %1799 = and i8 %1795, %1798
  %1800 = icmp eq i8 %1799, 0
  br i1 %1800, label %1805, label %1801

1801:                                             ; preds = %1792
  %1802 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %1790, i64 0, i32 9
  %1803 = load i8, i8* %1802, align 8, !range !22
  %1804 = icmp eq i8 %1803, 0
  br i1 %1804, label %1813, label %1805

1805:                                             ; preds = %1801, %1792
  %1806 = load i32, i32* %1165, align 4
  %1807 = load i32, i32* %1167, align 4
  %1808 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %1809 = zext i32 %1806 to i64
  %1810 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %968, align 8
  %1811 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1810, i64 %1809, i32 0, i32 0
  %1812 = load i32, i32* %1811, align 4
  call void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %1808, i32 %1812, i32 %1807, i32 %1786, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %44) #14
  br label %1813

1813:                                             ; preds = %1805, %1801, %1785
  %1814 = phi i32 [ 0, %1805 ], [ 1, %1785 ], [ 1, %1801 ]
  store i64 0, i64* %1173, align 8
  %1815 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1171, align 8
  %1816 = icmp eq %"class.angle::spirv::BoxedUint32"* %1815, %1172
  %1817 = icmp eq %"class.angle::spirv::BoxedUint32"* %1815, null
  %1818 = or i1 %1816, %1817
  br i1 %1818, label %1821, label %1819

1819:                                             ; preds = %1813
  %1820 = bitcast %"class.angle::spirv::BoxedUint32"* %1815 to i8*
  call void @_ZdaPv(i8* %1820) #17
  br label %1821

1821:                                             ; preds = %1819, %1813
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1170) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1168) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1166) #14
  br label %2876

1822:                                             ; preds = %1783
  call fastcc void @_ZN2rx12_GLOBAL__N_116SpirvTransformer19writeOutputPrologueEv(%"class.rx::(anonymous namespace)::SpirvTransformer"* %0) #14
  br label %2880

1823:                                             ; preds = %1783
  %1824 = load i32, i32* %1096, align 4
  %1825 = load i32, i32* %1043, align 4
  %1826 = icmp eq i32 %1824, %1825
  br i1 %1826, label %2348, label %1827

1827:                                             ; preds = %1823
  %1828 = load i8, i8* %1001, align 4, !range !22
  %1829 = icmp eq i8 %1828, 0
  br i1 %1829, label %2880, label %1830

1830:                                             ; preds = %1827
  %1831 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1097) #14
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1098) #14
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1099) #14
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1100) #14
  %1832 = load i8, i8* %1002, align 8, !range !22
  %1833 = icmp eq i8 %1832, 0
  br i1 %1833, label %2347, label %1834

1834:                                             ; preds = %1830
  %1835 = load i32, i32* %1101, align 4
  %1836 = icmp ne i32 %1835, 0
  %1837 = icmp eq i32 %1835, %1824
  %1838 = and i1 %1836, %1837
  br i1 %1838, label %1839, label %2347

1839:                                             ; preds = %1834
  %1840 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1102, align 8
  %1841 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1103, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1840, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1841) #14
  %1842 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1104, align 8
  %1843 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1105, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1842, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1843) #14
  %1844 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1106, align 8
  %1845 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1107, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1844, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1845) #14
  %1846 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1108, align 8
  %1847 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1109, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1846, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1847) #14
  %1848 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1831, i64 0, i32 0, i32 0
  %1849 = load i32*, i32** %1848, align 8
  %1850 = getelementptr inbounds i32, i32* %1849, i64 3
  %1851 = load i32, i32* %1850, align 4
  %1852 = add i32 %1851, 1
  store i32 %1852, i32* %1850, align 4
  %1853 = load i32*, i32** %1848, align 8
  %1854 = getelementptr inbounds i32, i32* %1853, i64 3
  %1855 = load i32, i32* %1854, align 4
  %1856 = add i32 %1855, 1
  store i32 %1856, i32* %1854, align 4
  %1857 = load i32*, i32** %1848, align 8
  %1858 = getelementptr inbounds i32, i32* %1857, i64 3
  %1859 = load i32, i32* %1858, align 4
  %1860 = add i32 %1859, 1
  store i32 %1860, i32* %1858, align 4
  %1861 = load i32*, i32** %1848, align 8
  %1862 = getelementptr inbounds i32, i32* %1861, i64 3
  %1863 = load i32, i32* %1862, align 4
  %1864 = add i32 %1863, 1
  store i32 %1864, i32* %1862, align 4
  %1865 = load i32, i32* %1110, align 4
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %1831, i32 %1865, i32 %1855, i32 7, %"class.angle::spirv::BoxedUint32"* %1111) #14
  %1866 = load i32, i32* %1110, align 4
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %1831, i32 %1866, i32 %1863, i32 7, %"class.angle::spirv::BoxedUint32"* null) #14
  %1867 = load i32, i32* %1091, align 4
  %1868 = load i32, i32* %1112, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1113) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1113, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1115, %"class.angle::spirv::BoxedUint32"** %1114, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1188, align 8
  store i32 %1855, i32* %1117, align 8
  call void @_ZN5angle5spirv17WriteFunctionCallEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %1831, i32 %1867, i32 %1859, i32 %1868, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %33) #14
  store i64 0, i64* %1116, align 8
  %1869 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1114, align 8
  %1870 = icmp eq %"class.angle::spirv::BoxedUint32"* %1869, %1115
  %1871 = icmp eq %"class.angle::spirv::BoxedUint32"* %1869, null
  %1872 = or i1 %1870, %1871
  br i1 %1872, label %1875, label %1873

1873:                                             ; preds = %1839
  %1874 = bitcast %"class.angle::spirv::BoxedUint32"* %1869 to i8*
  call void @_ZdaPv(i8* %1874) #17
  br label %1875

1875:                                             ; preds = %1873, %1839
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1113) #14
  call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %1831, i32 %1863, i32 %1859, i32* null) #14
  %1876 = load i32, i32* %1091, align 4
  call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %1831, i32 %1876, i32 %1851, i32 %1863, i32* null) #14
  br label %1877

1877:                                             ; preds = %1901, %1875
  %1878 = phi i64 [ 0, %1875 ], [ %1902, %1901 ]
  %1879 = load i32*, i32** %1848, align 8
  %1880 = getelementptr inbounds i32, i32* %1879, i64 3
  %1881 = load i32, i32* %1880, align 4
  %1882 = add i32 %1881, 1
  store i32 %1882, i32* %1880, align 4
  %1883 = load i32, i32* %1066, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1118) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1118, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1120, %"class.angle::spirv::BoxedUint32.273"** %1119, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1189, align 8
  %1884 = trunc i64 %1878 to i32
  store i32 %1884, i32* %1122, align 8
  call void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %1831, i32 %1883, i32 %1881, i32 %1851, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %35) #14
  store i64 0, i64* %1121, align 8
  %1885 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1119, align 8
  %1886 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %1885, %1120
  %1887 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %1885, null
  %1888 = or i1 %1886, %1887
  br i1 %1888, label %1891, label %1889

1889:                                             ; preds = %1877
  %1890 = bitcast %"class.angle::spirv::BoxedUint32.273"* %1885 to i8*
  call void @_ZdaPv(i8* %1890) #17
  br label %1891

1891:                                             ; preds = %1889, %1877
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1118) #14
  %1892 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 %1878
  %1893 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 18, i32 0, i64 %1878, i32 0, i32 1
  %1894 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %1893 to i64*
  %1895 = load i64, i64* %1894, align 8
  %1896 = bitcast %"class.std::__1::vector.233"* %1892 to i64*
  %1897 = load i64, i64* %1896, align 8
  %1898 = icmp eq i64 %1895, %1897
  br i1 %1898, label %1901, label %1899

1899:                                             ; preds = %1891
  %1900 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 5, i32 0, i64 %1878, i32 0, i32 0
  br label %1904

1901:                                             ; preds = %2006, %1891
  %1902 = add nuw nsw i64 %1878, 1
  %1903 = icmp eq i64 %1902, 4
  br i1 %1903, label %2347, label %1877

1904:                                             ; preds = %2006, %1899
  %1905 = phi i64 [ %1897, %1899 ], [ %2009, %2006 ]
  %1906 = phi i32 [ %1881, %1899 ], [ %1995, %2006 ]
  %1907 = phi i64 [ 0, %1899 ], [ %2007, %2006 ]
  %1908 = inttoptr i64 %1905 to %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*
  %1909 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1908, i64 %1907, i32 0
  %1910 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1909, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1123) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1123, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1125, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1190, align 8
  %1911 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1908, i64 %1907, i32 2
  %1912 = load i32, i32* %1911, align 4
  %1913 = icmp ne i32 %1912, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1097, i8 0, i64 16, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1129, %"class.angle::spirv::BoxedUint32"** %1128, align 8
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %1191, align 8
  %1914 = load i64, i64* %1077, align 8
  %1915 = icmp ugt i64 %1914, 4
  br i1 %1915, label %1916, label %1930

1916:                                             ; preds = %1904, %1916
  %1917 = phi i64 [ %1919, %1916 ], [ 4, %1904 ]
  %1918 = icmp ult i64 %1917, %1914
  %1919 = shl i64 %1917, 1
  br i1 %1918, label %1916, label %1920

1920:                                             ; preds = %1916
  %1921 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1917, i64 4) #14
  %1922 = extractvalue { i64, i1 } %1921, 1
  %1923 = extractvalue { i64, i1 } %1921, 0
  %1924 = select i1 %1922, i64 -1, i64 %1923
  %1925 = call i8* @_Znam(i64 %1924) #17
  %1926 = icmp eq i64 %1917, 0
  br i1 %1926, label %1929, label %1927

1927:                                             ; preds = %1920
  %1928 = shl nsw i64 %1917, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1925, i8 0, i64 %1928, i1 false) #14
  br label %1929

1929:                                             ; preds = %1927, %1920
  store i8* %1925, i8** %1132, align 8
  store i64 %1917, i64* %1131, align 8
  store i64 %1914, i64* %1130, align 8
  br label %1932

1930:                                             ; preds = %1904
  store i64 %1914, i64* %1130, align 8
  %1931 = icmp eq i64 %1914, 0
  br i1 %1931, label %1936, label %1932

1932:                                             ; preds = %1930, %1929
  %1933 = phi i8* [ %1925, %1929 ], [ %1097, %1930 ]
  %1934 = shl nuw i64 %1914, 2
  %1935 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %1933, i8* align 4 %1935, i64 %1934, i1 false) #14
  br label %1936

1936:                                             ; preds = %1932, %1930
  br i1 %1913, label %1939, label %1937

1937:                                             ; preds = %1936
  %1938 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1128, align 8
  br label %1945

1939:                                             ; preds = %1936
  %1940 = load i32, i32* %1911, align 4
  %1941 = zext i32 %1940 to i64
  %1942 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1128, align 8
  store i64 1, i64* %1126, align 8
  %1943 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1942, i64 %1941, i32 0, i32 0
  %1944 = load i32, i32* %1943, align 4
  store i32 %1944, i32* %1163, align 8
  br label %1945

1945:                                             ; preds = %1939, %1937
  %1946 = phi %"class.angle::spirv::BoxedUint32"* [ %1938, %1937 ], [ %1942, %1939 ]
  store i64 0, i64* %1130, align 8
  %1947 = icmp eq %"class.angle::spirv::BoxedUint32"* %1946, %1129
  %1948 = icmp eq %"class.angle::spirv::BoxedUint32"* %1946, null
  %1949 = or i1 %1947, %1948
  br i1 %1949, label %1952, label %1950

1950:                                             ; preds = %1945
  %1951 = bitcast %"class.angle::spirv::BoxedUint32"* %1946 to i8*
  call void @_ZdaPv(i8* %1951) #17
  br label %1952

1952:                                             ; preds = %1950, %1945
  %1953 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1910, i64 0, i32 3
  %1954 = load i32, i32* %1953, align 4
  %1955 = icmp ne i32 %1954, -1
  %1956 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %1909, align 8
  %1957 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1956, i64 0, i32 6
  %1958 = load i32, i32* %1957, align 8
  %1959 = icmp eq i32 %1958, -1
  %1960 = add i32 %1958, 1
  %1961 = select i1 %1955, i32 %1954, i32 1
  %1962 = select i1 %1959, i32 0, i32 %1958
  %1963 = select i1 %1959, i32 %1961, i32 %1960
  %1964 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1910, i64 0, i32 5
  %1965 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1910, i64 0, i32 4
  %1966 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1908, i64 %1907, i32 1, i32 0, i32 0
  %1967 = load i32, i32* %1966, align 8
  %1968 = zext i32 %1967 to i64
  %1969 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %967, align 8
  %1970 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1969, i64 %1968, i32 0, i32 0
  %1971 = load i32, i32* %1970, align 4
  %1972 = icmp ne i32 %1971, 0
  %1973 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1910, i64 0, i32 7
  %1974 = load i32, i32* %1973, align 4
  switch i32 %1974, label %1987 [
    i32 5124, label %1975
    i32 5125, label %1977
    i32 5126, label %1979
  ]

1975:                                             ; preds = %1952
  %1976 = select i1 %1972, %"class.angle::spirv::BoxedUint32"* %1137, %"class.angle::spirv::BoxedUint32"* %1138
  br label %1981

1977:                                             ; preds = %1952
  %1978 = select i1 %1972, %"class.angle::spirv::BoxedUint32"* %1135, %"class.angle::spirv::BoxedUint32"* %1136
  br label %1981

1979:                                             ; preds = %1952
  %1980 = select i1 %1972, %"class.angle::spirv::BoxedUint32"* %1133, %"class.angle::spirv::BoxedUint32"* %1134
  br label %1981

1981:                                             ; preds = %1975, %1977, %1979
  %1982 = phi %"class.angle::spirv::BoxedUint32"* [ %1980, %1979 ], [ %1978, %1977 ], [ %1976, %1975 ]
  %1983 = phi i32* [ %1063, %1979 ], [ %1073, %1977 ], [ %1066, %1975 ]
  %1984 = load i32, i32* %1983, align 4
  %1985 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %1982, i64 0, i32 0, i32 0
  %1986 = load i32, i32* %1985, align 4
  br label %1987

1987:                                             ; preds = %1981, %1952
  %1988 = phi i32 [ 0, %1952 ], [ %1984, %1981 ]
  %1989 = phi i32 [ 0, %1952 ], [ %1986, %1981 ]
  %1990 = icmp ult i32 %1962, %1963
  br i1 %1990, label %1991, label %1994

1991:                                             ; preds = %1987
  %1992 = zext i32 %1962 to i64
  %1993 = zext i32 %1963 to i64
  br label %2013

1994:                                             ; preds = %2104, %1987
  %1995 = phi i32 [ %1906, %1987 ], [ %2100, %2104 ]
  br i1 %1913, label %1996, label %1999

1996:                                             ; preds = %1994
  %1997 = load i64, i64* %1126, align 8
  %1998 = add i64 %1997, -1
  store i64 %1998, i64* %1126, align 8
  br label %1999

1999:                                             ; preds = %1996, %1994
  store i64 0, i64* %1126, align 8
  %2000 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2001 = icmp eq %"class.angle::spirv::BoxedUint32"* %2000, %1125
  %2002 = icmp eq %"class.angle::spirv::BoxedUint32"* %2000, null
  %2003 = or i1 %2001, %2002
  br i1 %2003, label %2006, label %2004

2004:                                             ; preds = %1999
  %2005 = bitcast %"class.angle::spirv::BoxedUint32"* %2000 to i8*
  call void @_ZdaPv(i8* %2005) #17
  br label %2006

2006:                                             ; preds = %2004, %1999
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1123) #14
  %2007 = add nuw i64 %1907, 1
  %2008 = load i64, i64* %1894, align 8
  %2009 = load i64, i64* %1896, align 8
  %2010 = sub i64 %2008, %2009
  %2011 = ashr exact i64 %2010, 4
  %2012 = icmp ult i64 %2007, %2011
  br i1 %2012, label %1904, label %1901

2013:                                             ; preds = %2104, %1991
  %2014 = phi i64 [ %1992, %1991 ], [ %2105, %2104 ]
  %2015 = phi i32 [ %1906, %1991 ], [ %2100, %2104 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1098, i8 0, i64 16, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1140, %"class.angle::spirv::BoxedUint32"** %1139, align 8
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %1192, align 8
  %2016 = load i64, i64* %1077, align 8
  %2017 = icmp ugt i64 %2016, 4
  br i1 %2017, label %2018, label %2032

2018:                                             ; preds = %2013, %2018
  %2019 = phi i64 [ %2021, %2018 ], [ 4, %2013 ]
  %2020 = icmp ult i64 %2019, %2016
  %2021 = shl i64 %2019, 1
  br i1 %2020, label %2018, label %2022

2022:                                             ; preds = %2018
  %2023 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2019, i64 4) #14
  %2024 = extractvalue { i64, i1 } %2023, 1
  %2025 = extractvalue { i64, i1 } %2023, 0
  %2026 = select i1 %2024, i64 -1, i64 %2025
  %2027 = call i8* @_Znam(i64 %2026) #17
  %2028 = icmp eq i64 %2019, 0
  br i1 %2028, label %2031, label %2029

2029:                                             ; preds = %2022
  %2030 = shl nsw i64 %2019, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2027, i8 0, i64 %2030, i1 false) #14
  br label %2031

2031:                                             ; preds = %2029, %2022
  store i8* %2027, i8** %1143, align 8
  store i64 %2019, i64* %1142, align 8
  store i64 %2016, i64* %1141, align 8
  br label %2034

2032:                                             ; preds = %2013
  store i64 %2016, i64* %1141, align 8
  %2033 = icmp eq i64 %2016, 0
  br i1 %2033, label %2038, label %2034

2034:                                             ; preds = %2032, %2031
  %2035 = phi i8* [ %2027, %2031 ], [ %1098, %2032 ]
  %2036 = shl nuw i64 %2016, 2
  %2037 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2035, i8* align 4 %2037, i64 %2036, i1 false) #14
  br label %2038

2038:                                             ; preds = %2034, %2032
  br i1 %1955, label %2039, label %2089

2039:                                             ; preds = %2038
  %2040 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1139, align 8
  %2041 = load i64, i64* %1126, align 8
  %2042 = load i64, i64* %1127, align 8
  %2043 = icmp eq i64 %2041, %2042
  br i1 %2043, label %2044, label %2082

2044:                                             ; preds = %2039
  %2045 = add i64 %2041, 1
  %2046 = icmp eq i64 %2041, -1
  br i1 %2046, label %2082, label %2047

2047:                                             ; preds = %2044
  %2048 = icmp ugt i64 %2041, 8
  %2049 = select i1 %2048, i64 %2041, i64 8
  br label %2050

2050:                                             ; preds = %2050, %2047
  %2051 = phi i64 [ %2049, %2047 ], [ %2053, %2050 ]
  %2052 = icmp ult i64 %2051, %2045
  %2053 = shl i64 %2051, 1
  br i1 %2052, label %2050, label %2054

2054:                                             ; preds = %2050
  %2055 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2051, i64 4) #14
  %2056 = extractvalue { i64, i1 } %2055, 1
  %2057 = extractvalue { i64, i1 } %2055, 0
  %2058 = select i1 %2056, i64 -1, i64 %2057
  %2059 = call i8* @_Znam(i64 %2058) #17
  %2060 = icmp eq i64 %2051, 0
  br i1 %2060, label %2063, label %2061

2061:                                             ; preds = %2054
  %2062 = shl nsw i64 %2051, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2059, i8 0, i64 %2062, i1 false) #14
  br label %2063

2063:                                             ; preds = %2061, %2054
  %2064 = icmp eq i64 %2041, 0
  br i1 %2064, label %2065, label %2068

2065:                                             ; preds = %2063
  %2066 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2067 = bitcast %"class.angle::spirv::BoxedUint32"* %2066 to i8*
  br label %2072

2068:                                             ; preds = %2063
  %2069 = shl nuw i64 %2041, 2
  %2070 = load i8*, i8** %1144, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2059, i8* align 4 %2070, i64 %2069, i1 false) #14
  %2071 = bitcast i8* %2070 to %"class.angle::spirv::BoxedUint32"*
  br label %2072

2072:                                             ; preds = %2068, %2065
  %2073 = phi i8* [ %2067, %2065 ], [ %2070, %2068 ]
  %2074 = phi %"class.angle::spirv::BoxedUint32"* [ %2066, %2065 ], [ %2071, %2068 ]
  %2075 = icmp eq %"class.angle::spirv::BoxedUint32"* %2074, %1125
  %2076 = icmp eq %"class.angle::spirv::BoxedUint32"* %2074, null
  %2077 = or i1 %2075, %2076
  br i1 %2077, label %2080, label %2078

2078:                                             ; preds = %2072
  call void @_ZdaPv(i8* %2073) #17
  %2079 = load i64, i64* %1126, align 8
  br label %2080

2080:                                             ; preds = %2078, %2072
  %2081 = phi i64 [ %2079, %2078 ], [ %2041, %2072 ]
  store i8* %2059, i8** %1144, align 8
  store i64 %2051, i64* %1127, align 8
  br label %2082

2082:                                             ; preds = %2080, %2044, %2039
  %2083 = phi i64 [ %2081, %2080 ], [ -1, %2044 ], [ %2041, %2039 ]
  %2084 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2085 = add i64 %2083, 1
  store i64 %2085, i64* %1126, align 8
  %2086 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2040, i64 %2014, i32 0, i32 0
  %2087 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2084, i64 %2083, i32 0, i32 0
  %2088 = load i32, i32* %2086, align 4
  store i32 %2088, i32* %2087, align 4
  br label %2089

2089:                                             ; preds = %2082, %2038
  store i64 0, i64* %1141, align 8
  %2090 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1139, align 8
  %2091 = icmp eq %"class.angle::spirv::BoxedUint32"* %2090, %1140
  %2092 = icmp eq %"class.angle::spirv::BoxedUint32"* %2090, null
  %2093 = or i1 %2091, %2092
  br i1 %2093, label %2096, label %2094

2094:                                             ; preds = %2089
  %2095 = bitcast %"class.angle::spirv::BoxedUint32"* %2090 to i8*
  call void @_ZdaPv(i8* %2095) #17
  br label %2096

2096:                                             ; preds = %2094, %2089
  %2097 = load i32, i32* %1965, align 8
  %2098 = icmp eq i32 %2097, 0
  br i1 %2098, label %2099, label %2107

2099:                                             ; preds = %2200, %2096
  %2100 = phi i32 [ %2015, %2096 ], [ %2196, %2200 ]
  br i1 %1955, label %2101, label %2104

2101:                                             ; preds = %2099
  %2102 = load i64, i64* %1126, align 8
  %2103 = add i64 %2102, -1
  store i64 %2103, i64* %1126, align 8
  br label %2104

2104:                                             ; preds = %2101, %2099
  %2105 = add nuw nsw i64 %2014, 1
  %2106 = icmp eq i64 %2105, %1993
  br i1 %2106, label %1994, label %2013

2107:                                             ; preds = %2096, %2200
  %2108 = phi i64 [ %2201, %2200 ], [ 0, %2096 ]
  %2109 = phi i32 [ %2202, %2200 ], [ %2097, %2096 ]
  %2110 = phi i32 [ %2196, %2200 ], [ %2015, %2096 ]
  %2111 = icmp ugt i32 %2109, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1099, i8 0, i64 16, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1146, %"class.angle::spirv::BoxedUint32"** %1145, align 8
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %1193, align 8
  %2112 = load i64, i64* %1077, align 8
  %2113 = icmp ugt i64 %2112, 4
  br i1 %2113, label %2114, label %2128

2114:                                             ; preds = %2107, %2114
  %2115 = phi i64 [ %2117, %2114 ], [ 4, %2107 ]
  %2116 = icmp ult i64 %2115, %2112
  %2117 = shl i64 %2115, 1
  br i1 %2116, label %2114, label %2118

2118:                                             ; preds = %2114
  %2119 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2115, i64 4) #14
  %2120 = extractvalue { i64, i1 } %2119, 1
  %2121 = extractvalue { i64, i1 } %2119, 0
  %2122 = select i1 %2120, i64 -1, i64 %2121
  %2123 = call i8* @_Znam(i64 %2122) #17
  %2124 = icmp eq i64 %2115, 0
  br i1 %2124, label %2127, label %2125

2125:                                             ; preds = %2118
  %2126 = shl nsw i64 %2115, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2123, i8 0, i64 %2126, i1 false) #14
  br label %2127

2127:                                             ; preds = %2125, %2118
  store i8* %2123, i8** %1149, align 8
  store i64 %2115, i64* %1148, align 8
  store i64 %2112, i64* %1147, align 8
  br label %2130

2128:                                             ; preds = %2107
  store i64 %2112, i64* %1147, align 8
  %2129 = icmp eq i64 %2112, 0
  br i1 %2129, label %2134, label %2130

2130:                                             ; preds = %2128, %2127
  %2131 = phi i8* [ %2123, %2127 ], [ %1099, %2128 ]
  %2132 = shl nuw i64 %2112, 2
  %2133 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2131, i8* align 4 %2133, i64 %2132, i1 false) #14
  br label %2134

2134:                                             ; preds = %2130, %2128
  br i1 %2111, label %2135, label %2185

2135:                                             ; preds = %2134
  %2136 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1145, align 8
  %2137 = load i64, i64* %1126, align 8
  %2138 = load i64, i64* %1127, align 8
  %2139 = icmp eq i64 %2137, %2138
  br i1 %2139, label %2140, label %2178

2140:                                             ; preds = %2135
  %2141 = add i64 %2137, 1
  %2142 = icmp eq i64 %2137, -1
  br i1 %2142, label %2178, label %2143

2143:                                             ; preds = %2140
  %2144 = icmp ugt i64 %2137, 8
  %2145 = select i1 %2144, i64 %2137, i64 8
  br label %2146

2146:                                             ; preds = %2146, %2143
  %2147 = phi i64 [ %2145, %2143 ], [ %2149, %2146 ]
  %2148 = icmp ult i64 %2147, %2141
  %2149 = shl i64 %2147, 1
  br i1 %2148, label %2146, label %2150

2150:                                             ; preds = %2146
  %2151 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2147, i64 4) #14
  %2152 = extractvalue { i64, i1 } %2151, 1
  %2153 = extractvalue { i64, i1 } %2151, 0
  %2154 = select i1 %2152, i64 -1, i64 %2153
  %2155 = call i8* @_Znam(i64 %2154) #17
  %2156 = icmp eq i64 %2147, 0
  br i1 %2156, label %2159, label %2157

2157:                                             ; preds = %2150
  %2158 = shl nsw i64 %2147, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2155, i8 0, i64 %2158, i1 false) #14
  br label %2159

2159:                                             ; preds = %2157, %2150
  %2160 = icmp eq i64 %2137, 0
  br i1 %2160, label %2161, label %2164

2161:                                             ; preds = %2159
  %2162 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2163 = bitcast %"class.angle::spirv::BoxedUint32"* %2162 to i8*
  br label %2168

2164:                                             ; preds = %2159
  %2165 = shl nuw i64 %2137, 2
  %2166 = load i8*, i8** %1144, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2155, i8* align 4 %2166, i64 %2165, i1 false) #14
  %2167 = bitcast i8* %2166 to %"class.angle::spirv::BoxedUint32"*
  br label %2168

2168:                                             ; preds = %2164, %2161
  %2169 = phi i8* [ %2163, %2161 ], [ %2166, %2164 ]
  %2170 = phi %"class.angle::spirv::BoxedUint32"* [ %2162, %2161 ], [ %2167, %2164 ]
  %2171 = icmp eq %"class.angle::spirv::BoxedUint32"* %2170, %1125
  %2172 = icmp eq %"class.angle::spirv::BoxedUint32"* %2170, null
  %2173 = or i1 %2171, %2172
  br i1 %2173, label %2176, label %2174

2174:                                             ; preds = %2168
  call void @_ZdaPv(i8* %2169) #17
  %2175 = load i64, i64* %1126, align 8
  br label %2176

2176:                                             ; preds = %2174, %2168
  %2177 = phi i64 [ %2175, %2174 ], [ %2137, %2168 ]
  store i8* %2155, i8** %1144, align 8
  store i64 %2147, i64* %1127, align 8
  br label %2178

2178:                                             ; preds = %2176, %2140, %2135
  %2179 = phi i64 [ %2177, %2176 ], [ -1, %2140 ], [ %2137, %2135 ]
  %2180 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2181 = add i64 %2179, 1
  store i64 %2181, i64* %1126, align 8
  %2182 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2136, i64 %2108, i32 0, i32 0
  %2183 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2180, i64 %2179, i32 0, i32 0
  %2184 = load i32, i32* %2182, align 4
  store i32 %2184, i32* %2183, align 4
  br label %2185

2185:                                             ; preds = %2178, %2134
  store i64 0, i64* %1147, align 8
  %2186 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1145, align 8
  %2187 = icmp eq %"class.angle::spirv::BoxedUint32"* %2186, %1146
  %2188 = icmp eq %"class.angle::spirv::BoxedUint32"* %2186, null
  %2189 = or i1 %2187, %2188
  br i1 %2189, label %2192, label %2190

2190:                                             ; preds = %2185
  %2191 = bitcast %"class.angle::spirv::BoxedUint32"* %2186 to i8*
  call void @_ZdaPv(i8* %2191) #17
  br label %2192

2192:                                             ; preds = %2190, %2185
  %2193 = load i32, i32* %1964, align 4
  %2194 = icmp eq i32 %2193, 0
  br i1 %2194, label %2195, label %2205

2195:                                             ; preds = %2342, %2192
  %2196 = phi i32 [ %2110, %2192 ], [ %2333, %2342 ]
  br i1 %2111, label %2197, label %2200

2197:                                             ; preds = %2195
  %2198 = load i64, i64* %1126, align 8
  %2199 = add i64 %2198, -1
  store i64 %2199, i64* %1126, align 8
  br label %2200

2200:                                             ; preds = %2197, %2195
  %2201 = add nuw nsw i64 %2108, 1
  %2202 = load i32, i32* %1965, align 8
  %2203 = zext i32 %2202 to i64
  %2204 = icmp ult i64 %2201, %2203
  br i1 %2204, label %2107, label %2099

2205:                                             ; preds = %2192, %2342
  %2206 = phi i64 [ %2343, %2342 ], [ 0, %2192 ]
  %2207 = phi i32 [ %2344, %2342 ], [ %2193, %2192 ]
  %2208 = phi i32 [ %2333, %2342 ], [ %2110, %2192 ]
  %2209 = icmp ugt i32 %2207, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1100, i8 0, i64 16, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1151, %"class.angle::spirv::BoxedUint32"** %1150, align 8
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %1194, align 8
  %2210 = load i64, i64* %1077, align 8
  %2211 = icmp ugt i64 %2210, 4
  br i1 %2211, label %2212, label %2226

2212:                                             ; preds = %2205, %2212
  %2213 = phi i64 [ %2215, %2212 ], [ 4, %2205 ]
  %2214 = icmp ult i64 %2213, %2210
  %2215 = shl i64 %2213, 1
  br i1 %2214, label %2212, label %2216

2216:                                             ; preds = %2212
  %2217 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2213, i64 4) #14
  %2218 = extractvalue { i64, i1 } %2217, 1
  %2219 = extractvalue { i64, i1 } %2217, 0
  %2220 = select i1 %2218, i64 -1, i64 %2219
  %2221 = call i8* @_Znam(i64 %2220) #17
  %2222 = icmp eq i64 %2213, 0
  br i1 %2222, label %2225, label %2223

2223:                                             ; preds = %2216
  %2224 = shl nsw i64 %2213, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2221, i8 0, i64 %2224, i1 false) #14
  br label %2225

2225:                                             ; preds = %2223, %2216
  store i8* %2221, i8** %1154, align 8
  store i64 %2213, i64* %1153, align 8
  store i64 %2210, i64* %1152, align 8
  br label %2228

2226:                                             ; preds = %2205
  store i64 %2210, i64* %1152, align 8
  %2227 = icmp eq i64 %2210, 0
  br i1 %2227, label %2232, label %2228

2228:                                             ; preds = %2226, %2225
  %2229 = phi i8* [ %2221, %2225 ], [ %1100, %2226 ]
  %2230 = shl nuw i64 %2210, 2
  %2231 = load i8*, i8** %1080, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2229, i8* align 4 %2231, i64 %2230, i1 false) #14
  br label %2232

2232:                                             ; preds = %2228, %2226
  br i1 %2209, label %2233, label %2283

2233:                                             ; preds = %2232
  %2234 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1150, align 8
  %2235 = load i64, i64* %1126, align 8
  %2236 = load i64, i64* %1127, align 8
  %2237 = icmp eq i64 %2235, %2236
  br i1 %2237, label %2238, label %2276

2238:                                             ; preds = %2233
  %2239 = add i64 %2235, 1
  %2240 = icmp eq i64 %2235, -1
  br i1 %2240, label %2276, label %2241

2241:                                             ; preds = %2238
  %2242 = icmp ugt i64 %2235, 8
  %2243 = select i1 %2242, i64 %2235, i64 8
  br label %2244

2244:                                             ; preds = %2244, %2241
  %2245 = phi i64 [ %2243, %2241 ], [ %2247, %2244 ]
  %2246 = icmp ult i64 %2245, %2239
  %2247 = shl i64 %2245, 1
  br i1 %2246, label %2244, label %2248

2248:                                             ; preds = %2244
  %2249 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2245, i64 4) #14
  %2250 = extractvalue { i64, i1 } %2249, 1
  %2251 = extractvalue { i64, i1 } %2249, 0
  %2252 = select i1 %2250, i64 -1, i64 %2251
  %2253 = call i8* @_Znam(i64 %2252) #17
  %2254 = icmp eq i64 %2245, 0
  br i1 %2254, label %2257, label %2255

2255:                                             ; preds = %2248
  %2256 = shl nsw i64 %2245, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2253, i8 0, i64 %2256, i1 false) #14
  br label %2257

2257:                                             ; preds = %2255, %2248
  %2258 = icmp eq i64 %2235, 0
  br i1 %2258, label %2259, label %2262

2259:                                             ; preds = %2257
  %2260 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2261 = bitcast %"class.angle::spirv::BoxedUint32"* %2260 to i8*
  br label %2266

2262:                                             ; preds = %2257
  %2263 = shl nuw i64 %2235, 2
  %2264 = load i8*, i8** %1144, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2253, i8* align 4 %2264, i64 %2263, i1 false) #14
  %2265 = bitcast i8* %2264 to %"class.angle::spirv::BoxedUint32"*
  br label %2266

2266:                                             ; preds = %2262, %2259
  %2267 = phi i8* [ %2261, %2259 ], [ %2264, %2262 ]
  %2268 = phi %"class.angle::spirv::BoxedUint32"* [ %2260, %2259 ], [ %2265, %2262 ]
  %2269 = icmp eq %"class.angle::spirv::BoxedUint32"* %2268, %1125
  %2270 = icmp eq %"class.angle::spirv::BoxedUint32"* %2268, null
  %2271 = or i1 %2269, %2270
  br i1 %2271, label %2274, label %2272

2272:                                             ; preds = %2266
  call void @_ZdaPv(i8* %2267) #17
  %2273 = load i64, i64* %1126, align 8
  br label %2274

2274:                                             ; preds = %2272, %2266
  %2275 = phi i64 [ %2273, %2272 ], [ %2235, %2266 ]
  store i8* %2253, i8** %1144, align 8
  store i64 %2245, i64* %1127, align 8
  br label %2276

2276:                                             ; preds = %2274, %2238, %2233
  %2277 = phi i64 [ %2275, %2274 ], [ -1, %2238 ], [ %2235, %2233 ]
  %2278 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1124, align 8
  %2279 = add i64 %2277, 1
  store i64 %2279, i64* %1126, align 8
  %2280 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2234, i64 %2206, i32 0, i32 0
  %2281 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2278, i64 %2277, i32 0, i32 0
  %2282 = load i32, i32* %2280, align 4
  store i32 %2282, i32* %2281, align 4
  br label %2283

2283:                                             ; preds = %2276, %2232
  store i64 0, i64* %1152, align 8
  %2284 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1150, align 8
  %2285 = icmp eq %"class.angle::spirv::BoxedUint32"* %2284, %1151
  %2286 = icmp eq %"class.angle::spirv::BoxedUint32"* %2284, null
  %2287 = or i1 %2285, %2286
  br i1 %2287, label %2290, label %2288

2288:                                             ; preds = %2283
  %2289 = bitcast %"class.angle::spirv::BoxedUint32"* %2284 to i8*
  call void @_ZdaPv(i8* %2289) #17
  br label %2290

2290:                                             ; preds = %2288, %2283
  %2291 = load i32, i32* %1966, align 8
  %2292 = load i32, i32* %1973, align 4
  %2293 = load i32*, i32** %1848, align 8
  %2294 = getelementptr inbounds i32, i32* %2293, i64 3
  %2295 = load i32, i32* %2294, align 4
  %2296 = add i32 %2295, 1
  store i32 %2296, i32* %2294, align 4
  %2297 = load i32*, i32** %1848, align 8
  %2298 = getelementptr inbounds i32, i32* %2297, i64 3
  %2299 = load i32, i32* %2298, align 4
  %2300 = add i32 %2299, 1
  store i32 %2300, i32* %2298, align 4
  %2301 = load i64, i64* %1126, align 8
  %2302 = icmp eq i64 %2301, 0
  br i1 %2302, label %2308, label %2303

2303:                                             ; preds = %2290
  %2304 = load i32*, i32** %1848, align 8
  %2305 = getelementptr inbounds i32, i32* %2304, i64 3
  %2306 = load i32, i32* %2305, align 4
  %2307 = add i32 %2306, 1
  store i32 %2307, i32* %2305, align 4
  call void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %1831, i32 %1989, i32 %2306, i32 %2291, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %36) #14
  br label %2308

2308:                                             ; preds = %2303, %2290
  %2309 = phi i32 [ %2291, %2290 ], [ %2306, %2303 ]
  call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %1831, i32 %1988, i32 %2295, i32 %2309, i32* null) #14
  %2310 = icmp eq i32 %2292, 5126
  br i1 %2310, label %2317, label %2311

2311:                                             ; preds = %2308
  %2312 = load i32*, i32** %1848, align 8
  %2313 = getelementptr inbounds i32, i32* %2312, i64 3
  %2314 = load i32, i32* %2313, align 4
  %2315 = add i32 %2314, 1
  store i32 %2315, i32* %2313, align 4
  %2316 = load i32, i32* %1063, align 8
  call void @_ZN5angle5spirv12WriteBitcastEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %1831, i32 %2316, i32 %2314, i32 %2295) #14
  br label %2317

2317:                                             ; preds = %2311, %2308
  %2318 = phi i32 [ %2314, %2311 ], [ %2295, %2308 ]
  %2319 = load i32, i32* %1076, align 8
  %2320 = load i32, i32* %1900, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1155) #14
  %2321 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %2322 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2321, i64 0, i32 0, i32 0
  %2323 = load i32, i32* %2322, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1157, i8 0, i64 24, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1159, %"class.angle::spirv::BoxedUint32"** %1158, align 8
  store <2 x i64> <i64 2, i64 8>, <2 x i64>* %1195, align 8
  store i32 %2323, i32* %1161, align 8
  store i32 %2208, i32* %1162, align 4
  call void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %1831, i32 %2319, i32 %2299, i32 %2320, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %34) #14
  store i64 0, i64* %1160, align 8
  %2324 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1158, align 8
  %2325 = icmp eq %"class.angle::spirv::BoxedUint32"* %2324, %1159
  %2326 = icmp eq %"class.angle::spirv::BoxedUint32"* %2324, null
  %2327 = or i1 %2325, %2326
  br i1 %2327, label %2330, label %2328

2328:                                             ; preds = %2317
  %2329 = bitcast %"class.angle::spirv::BoxedUint32"* %2324 to i8*
  call void @_ZdaPv(i8* %2329) #17
  br label %2330

2330:                                             ; preds = %2328, %2317
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1155) #14
  call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %1831, i32 %2299, i32 %2318, i32* null) #14
  %2331 = load i32*, i32** %1848, align 8
  %2332 = getelementptr inbounds i32, i32* %2331, i64 3
  %2333 = load i32, i32* %2332, align 4
  %2334 = add i32 %2333, 1
  store i32 %2334, i32* %2332, align 4
  %2335 = load i32, i32* %1066, align 4
  %2336 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1079, align 8
  %2337 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2336, i64 1, i32 0, i32 0
  %2338 = load i32, i32* %2337, align 4
  call void @_ZN5angle5spirv9WriteIAddEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_(%"class.std::__1::vector"* %1831, i32 %2335, i32 %2333, i32 %2208, i32 %2338) #14
  br i1 %2209, label %2339, label %2342

2339:                                             ; preds = %2330
  %2340 = load i64, i64* %1126, align 8
  %2341 = add i64 %2340, -1
  store i64 %2341, i64* %1126, align 8
  br label %2342

2342:                                             ; preds = %2339, %2330
  %2343 = add nuw nsw i64 %2206, 1
  %2344 = load i32, i32* %1964, align 4
  %2345 = zext i32 %2344 to i64
  %2346 = icmp ult i64 %2343, %2345
  br i1 %2346, label %2205, label %2195

2347:                                             ; preds = %1901, %1834, %1830
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1097) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1098) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1099) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1100) #14
  br label %2880

2348:                                             ; preds = %1823
  %2349 = load i8, i8* %966, align 8
  %2350 = add i8 %2349, -3
  %2351 = icmp ult i8 %2350, 2
  br i1 %2351, label %2880, label %2352

2352:                                             ; preds = %2348
  call fastcc void @_ZN2rx12_GLOBAL__N_116SpirvTransformer19writeOutputPrologueEv(%"class.rx::(anonymous namespace)::SpirvTransformer"* %0) #14
  br label %2880

2353:                                             ; preds = %1708
  switch i32 %1203, label %2880 [
    i32 5, label %2354
    i32 6, label %2354
    i32 7, label %2354
    i32 8, label %2354
    i32 317, label %2354
    i32 330, label %2354
    i32 17, label %2378
    i32 15, label %2391
    i32 71, label %2504
    i32 72, label %2711
    i32 32, label %2731
    i32 30, label %2756
    i32 59, label %2817
    i32 16, label %2867
  ]

2354:                                             ; preds = %2353, %2353, %2353, %2353, %2353, %2353
  %2355 = load i8, i8* %1046, align 1, !range !22
  %2356 = icmp eq i8 %2355, 0
  br i1 %2356, label %2357, label %2888

2357:                                             ; preds = %2354
  switch i32 %1203, label %2880 [
    i32 6, label %2358
    i32 5, label %2373
  ]

2358:                                             ; preds = %2357
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1050) #14
  store i32 0, i32* %1051, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1052) #14
  store i32 0, i32* %1053, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1054) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %30, align 8
  call void @_ZN5angle5spirv15ParseMemberNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEEPPKc(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %28, %"class.angle::spirv::BoxedUint32.273"* nonnull %29, i8** nonnull %30) #14
  %2359 = load i32, i32* %1051, align 4
  %2360 = load i32, i32* %1053, align 4
  %2361 = load i32, i32* %976, align 4
  %2362 = icmp eq i32 %2361, %2359
  br i1 %2362, label %2366, label %2363

2363:                                             ; preds = %2358
  %2364 = load i32, i32* %977, align 4
  %2365 = icmp eq i32 %2364, %2359
  br i1 %2365, label %2366, label %2371

2366:                                             ; preds = %2363, %2358
  %2367 = select i1 %2362, i32* %978, i32* %979
  %2368 = load i32, i32* %2367, align 4
  %2369 = icmp uge i32 %2368, %2360
  %2370 = zext i1 %2369 to i32
  br label %2371

2371:                                             ; preds = %2366, %2363
  %2372 = phi i32 [ 1, %2363 ], [ %2370, %2366 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1054) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1052) #14
  br label %2876

2373:                                             ; preds = %2357
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1047) #14
  store i32 0, i32* %1048, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1049) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %32, align 8
  call void @_ZN5angle5spirv9ParseNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKc(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %31, i8** nonnull %32) #14
  %2374 = load i8*, i8** %32, align 8
  %2375 = call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %2374, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kXfbEmulationBufferNameE, i64 0, i64 0)) #14
  %2376 = xor i1 %2375, true
  %2377 = zext i1 %2376 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1049) #14
  br label %2876

2378:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1045) #14
  store i32 -1431655766, i32* %27, align 4
  call void @_ZN5angle5spirv15ParseCapabilityEPKjPN3spv10CapabilityE(i32* %1202, i32* nonnull %27) #14
  %2379 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2380 = load i8, i8* %1044, align 1, !range !22
  %2381 = icmp eq i8 %2380, 0
  br i1 %2381, label %2390, label %2382

2382:                                             ; preds = %2378
  %2383 = load i32, i32* %27, align 4
  %2384 = load i8, i8* %1002, align 8, !range !22
  %2385 = icmp eq i8 %2384, 0
  %2386 = add i32 %2383, -1
  %2387 = icmp ult i32 %2386, 3
  %2388 = and i1 %2387, %2385
  br i1 %2388, label %2389, label %2390

2389:                                             ; preds = %2382
  call void @_ZN5angle5spirv15WriteCapabilityEPNSt3__16vectorIjNS1_9allocatorIjEEEEN3spv10CapabilityE(%"class.std::__1::vector"* %2379, i32 53) #14
  br label %2390

2390:                                             ; preds = %2389, %2382, %2378
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1045) #14
  br label %2880

2391:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1032) #14
  store i32 -1431655766, i32* %24, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1033) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1034) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1034, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %1036, %"class.angle::spirv::BoxedUint32"** %1035, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1186, align 8
  call void @_ZN5angle5spirv15ParseEntryPointEPKjPN3spv14ExecutionModelEPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKcPNS_10FastVectorIS8_Lm8ENSt3__15arrayIS8_Lm8EEEEE(i32* %1202, i32* nonnull %24, %"class.angle::spirv::BoxedUint32"* %1039, i8** nonnull %25, %"class.angle::FastVector.278"* nonnull %26) #14
  %2392 = load i64, i64* %1037, align 8
  %2393 = icmp eq i64 %2392, 0
  br i1 %2393, label %2394, label %2395

2394:                                             ; preds = %2391
  store i64 0, i64* %1037, align 8
  br label %2483

2395:                                             ; preds = %2391
  %2396 = load i8, i8* %966, align 8
  %2397 = zext i8 %2396 to i32
  %2398 = shl i32 1, %2397
  %2399 = trunc i32 %2398 to i8
  br label %2438

2400:                                             ; preds = %2457
  %2401 = icmp ult i64 %2458, %2459
  br i1 %2401, label %2402, label %2463

2402:                                             ; preds = %2400
  %2403 = load i64, i64* %1038, align 8
  %2404 = icmp ult i64 %2403, %2459
  br i1 %2404, label %2405, label %2462

2405:                                             ; preds = %2402
  %2406 = icmp ugt i64 %2403, 8
  %2407 = select i1 %2406, i64 %2403, i64 8
  br label %2408

2408:                                             ; preds = %2408, %2405
  %2409 = phi i64 [ %2407, %2405 ], [ %2411, %2408 ]
  %2410 = icmp ult i64 %2409, %2459
  %2411 = shl i64 %2409, 1
  br i1 %2410, label %2408, label %2412

2412:                                             ; preds = %2408
  %2413 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2409, i64 4) #14
  %2414 = extractvalue { i64, i1 } %2413, 1
  %2415 = extractvalue { i64, i1 } %2413, 0
  %2416 = select i1 %2414, i64 -1, i64 %2415
  %2417 = call i8* @_Znam(i64 %2416) #17
  %2418 = icmp eq i64 %2409, 0
  br i1 %2418, label %2421, label %2419

2419:                                             ; preds = %2412
  %2420 = shl nsw i64 %2409, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2417, i8 0, i64 %2420, i1 false) #14
  br label %2421

2421:                                             ; preds = %2419, %2412
  %2422 = icmp eq i64 %2458, 0
  br i1 %2422, label %2423, label %2426

2423:                                             ; preds = %2421
  %2424 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1035, align 8
  %2425 = bitcast %"class.angle::spirv::BoxedUint32"* %2424 to i8*
  br label %2430

2426:                                             ; preds = %2421
  %2427 = shl nuw i64 %2458, 2
  %2428 = load i8*, i8** %1040, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2417, i8* align 4 %2428, i64 %2427, i1 false) #14
  %2429 = bitcast i8* %2428 to %"class.angle::spirv::BoxedUint32"*
  br label %2430

2430:                                             ; preds = %2426, %2423
  %2431 = phi i8* [ %2425, %2423 ], [ %2428, %2426 ]
  %2432 = phi %"class.angle::spirv::BoxedUint32"* [ %2424, %2423 ], [ %2429, %2426 ]
  %2433 = icmp eq %"class.angle::spirv::BoxedUint32"* %2432, %1036
  %2434 = icmp eq %"class.angle::spirv::BoxedUint32"* %2432, null
  %2435 = or i1 %2433, %2434
  br i1 %2435, label %2437, label %2436

2436:                                             ; preds = %2430
  call void @_ZdaPv(i8* %2431) #17
  br label %2437

2437:                                             ; preds = %2436, %2430
  store i8* %2417, i8** %1040, align 8
  store i64 %2409, i64* %1038, align 8
  br label %2462

2438:                                             ; preds = %2457, %2395
  %2439 = phi i64 [ %2392, %2395 ], [ %2458, %2457 ]
  %2440 = phi i64 [ 0, %2395 ], [ %2459, %2457 ]
  %2441 = phi i64 [ 0, %2395 ], [ %2460, %2457 ]
  %2442 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1035, align 8
  %2443 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2442, i64 %2441, i32 0, i32 0
  %2444 = load i32, i32* %2443, align 4
  %2445 = zext i32 %2444 to i64
  %2446 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %965, align 8
  %2447 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %2446, i64 %2445
  %2448 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %2447, align 8
  %2449 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2448, i64 0, i32 5, i32 0
  %2450 = load i8, i8* %2449, align 1
  %2451 = and i8 %2450, %2399
  %2452 = icmp eq i8 %2451, 0
  br i1 %2452, label %2457, label %2453

2453:                                             ; preds = %2438
  %2454 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2442, i64 %2440, i32 0, i32 0
  store i32 %2444, i32* %2454, align 4
  %2455 = add i64 %2440, 1
  %2456 = load i64, i64* %1037, align 8
  br label %2457

2457:                                             ; preds = %2453, %2438
  %2458 = phi i64 [ %2456, %2453 ], [ %2439, %2438 ]
  %2459 = phi i64 [ %2455, %2453 ], [ %2440, %2438 ]
  %2460 = add nuw i64 %2441, 1
  %2461 = icmp ult i64 %2460, %2458
  br i1 %2461, label %2438, label %2400

2462:                                             ; preds = %2437, %2402
  store i64 %2459, i64* %1037, align 8
  br label %2465

2463:                                             ; preds = %2400
  store i64 %2459, i64* %1037, align 8
  %2464 = icmp eq i64 %2459, 0
  br i1 %2464, label %2483, label %2465

2465:                                             ; preds = %2463, %2462
  br label %2466

2466:                                             ; preds = %2465, %2466
  %2467 = phi i64 [ %2480, %2466 ], [ 0, %2465 ]
  %2468 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1035, align 8
  %2469 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2468, i64 %2467, i32 0, i32 0
  %2470 = load i32, i32* %2469, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1041)
  store i32 %2470, i32* %23, align 4
  %2471 = zext i32 %2470 to i64
  %2472 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %967, align 8
  %2473 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2472, i64 %2471
  %2474 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2473, i64 0, i32 0, i32 0
  %2475 = load i32, i32* %2474, align 4
  %2476 = icmp eq i32 %2475, 0
  %2477 = select i1 %2476, %"class.angle::spirv::BoxedUint32"* %1042, %"class.angle::spirv::BoxedUint32"* %2473
  %2478 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2477, i64 0, i32 0, i32 0
  %2479 = load i32, i32* %2478, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1041)
  store i32 %2479, i32* %2469, align 4
  %2480 = add nuw i64 %2467, 1
  %2481 = load i64, i64* %1037, align 8
  %2482 = icmp ult i64 %2480, %2481
  br i1 %2482, label %2466, label %2483

2483:                                             ; preds = %2466, %2463, %2394
  %2484 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2485 = load i32, i32* %24, align 4
  %2486 = load i32, i32* %1043, align 4
  %2487 = load i8*, i8** %25, align 8
  call void @_ZN5angle5spirv15WriteEntryPointEPNSt3__16vectorIjNS1_9allocatorIjEEEEN3spv14ExecutionModelENS0_11BoxedUint32INS0_11IdRefHelperEEEPKcRKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"* %2484, i32 %2485, i32 %2486, i8* %2487, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %26) #14
  %2488 = load i32, i32* %1043, align 4
  %2489 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2490 = load i8, i8* %1002, align 8, !range !22
  %2491 = icmp eq i8 %2490, 0
  br i1 %2491, label %2492, label %2496

2492:                                             ; preds = %2483
  %2493 = load i8, i8* %1044, align 1, !range !22
  %2494 = icmp eq i8 %2493, 0
  br i1 %2494, label %2496, label %2495

2495:                                             ; preds = %2492
  call void @_ZN5angle5spirv18WriteExecutionModeEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv13ExecutionModeE(%"class.std::__1::vector"* %2489, i32 %2488, i32 11) #14
  br label %2496

2496:                                             ; preds = %2495, %2492, %2483
  store i64 0, i64* %1037, align 8
  %2497 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %1035, align 8
  %2498 = icmp eq %"class.angle::spirv::BoxedUint32"* %2497, %1036
  %2499 = icmp eq %"class.angle::spirv::BoxedUint32"* %2497, null
  %2500 = or i1 %2498, %2499
  br i1 %2500, label %2503, label %2501

2501:                                             ; preds = %2496
  %2502 = bitcast %"class.angle::spirv::BoxedUint32"* %2497 to i8*
  call void @_ZdaPv(i8* %2502) #17
  br label %2503

2503:                                             ; preds = %2501, %2496
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1034) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1033) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1032) #14
  br label %2888

2504:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %992) #14
  store i32 0, i32* %993, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %994) #14
  store i32 -1431655766, i32* %18, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %995) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %995, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %997, %"class.angle::spirv::BoxedUint32.273"** %996, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1175, align 8
  call void @_ZN5angle5spirv13ParseDecorateEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv10DecorationEPNS_10FastVectorINS3_INS0_20LiteralIntegerHelperEEELm8ENSt3__15arrayISC_Lm8EEEEE(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %17, i32* nonnull %18, %"class.angle::FastVector.271"* nonnull %19) #14
  %2505 = load i32, i32* %993, align 4
  %2506 = zext i32 %2505 to i64
  %2507 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %965, align 8
  %2508 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %2507, i64 %2506
  %2509 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %2508, align 8
  %2510 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %2509, null
  br i1 %2510, label %2702, label %2511

2511:                                             ; preds = %2504
  %2512 = load i8, i8* %966, align 8
  %2513 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 5, i32 0
  %2514 = load i8, i8* %2513, align 1
  %2515 = zext i8 %2512 to i32
  %2516 = shl i32 1, %2515
  %2517 = trunc i32 %2516 to i8
  %2518 = and i8 %2514, %2517
  %2519 = icmp eq i8 %2518, 0
  br i1 %2519, label %2702, label %2520

2520:                                             ; preds = %2511
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %999)
  store i32 %2505, i32* %15, align 4
  %2521 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %967, align 8
  %2522 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2521, i64 %2506
  %2523 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2522, i64 0, i32 0, i32 0
  %2524 = load i32, i32* %2523, align 4
  %2525 = icmp eq i32 %2524, 0
  %2526 = select i1 %2525, %"class.angle::spirv::BoxedUint32"* %1000, %"class.angle::spirv::BoxedUint32"* %2522
  %2527 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2526, i64 0, i32 0, i32 0
  %2528 = load i32, i32* %2527, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %999)
  store i32 %2528, i32* %993, align 4
  %2529 = load i32, i32* %18, align 4
  switch i32 %2529, label %2702 [
    i32 30, label %2530
    i32 33, label %2532
    i32 34, label %2534
    i32 14, label %2536
    i32 2, label %2542
  ]

2530:                                             ; preds = %2520
  %2531 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 2
  br label %2607

2532:                                             ; preds = %2520
  %2533 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 1
  br label %2607

2534:                                             ; preds = %2520
  %2535 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 0
  br label %2607

2536:                                             ; preds = %2520
  %2537 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 9
  %2538 = load i8, i8* %2537, align 8, !range !22
  %2539 = icmp eq i8 %2538, 0
  br i1 %2539, label %2702, label %2540

2540:                                             ; preds = %2536
  %2541 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2541, i32 %2528, i32 14, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %19) #14
  br label %2702

2542:                                             ; preds = %2520
  %2543 = load i8, i8* %1001, align 4, !range !22
  %2544 = icmp eq i8 %2543, 0
  br i1 %2544, label %2702, label %2545

2545:                                             ; preds = %2542
  %2546 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2547 = load i8, i8* %1002, align 8, !range !22
  %2548 = icmp eq i8 %2547, 0
  br i1 %2548, label %2549, label %2702

2549:                                             ; preds = %2545
  %2550 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 8
  %2551 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %2550, i64 0, i32 0, i32 0
  %2552 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2551, align 8
  %2553 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 8, i32 0, i32 1
  %2554 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2553, align 8
  %2555 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %2552, %2554
  br i1 %2555, label %2702, label %2556

2556:                                             ; preds = %2549
  %2557 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %2552 to i64
  %2558 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %2554 to i64
  %2559 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2553 to i64*
  %2560 = bitcast %"class.std::__1::vector.145"* %2550 to i64*
  br label %2561

2561:                                             ; preds = %2586, %2556
  %2562 = phi i64 [ %2557, %2556 ], [ %2587, %2586 ]
  %2563 = phi i64 [ %2558, %2556 ], [ %2588, %2586 ]
  %2564 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %2552, %2556 ], [ %2594, %2586 ]
  %2565 = phi i64 [ 0, %2556 ], [ %2590, %2586 ]
  %2566 = phi i32 [ 0, %2556 ], [ %2589, %2586 ]
  %2567 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %2564, i64 %2565, i32 0
  %2568 = load i32, i32* %2567, align 8
  %2569 = icmp eq i32 %2568, -1
  br i1 %2569, label %2586, label %2570

2570:                                             ; preds = %2561
  %2571 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %2564, i64 %2565, i32 2
  %2572 = load i32, i32* %2571, align 8
  %2573 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %2564, i64 %2565, i32 1
  %2574 = load i32, i32* %2573, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1003) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1003, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1005, %"class.angle::spirv::BoxedUint32.273"** %1004, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1176, align 8
  store i32 %2568, i32* %1007, align 8
  call void @_ZN5angle5spirv19WriteMemberDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEEN3spv10DecorationERKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"* %2546, i32 %2528, i32 %2566, i32 36, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %14) #14
  store i64 0, i64* %1006, align 8
  %2575 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1004, align 8
  %2576 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2575, %1005
  %2577 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2575, null
  %2578 = or i1 %2576, %2577
  br i1 %2578, label %2581, label %2579

2579:                                             ; preds = %2570
  %2580 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2575 to i8*
  call void @_ZdaPv(i8* %2580) #17
  br label %2581

2581:                                             ; preds = %2579, %2570
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1003) #14
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1003) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1003, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1005, %"class.angle::spirv::BoxedUint32.273"** %1004, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1177, align 8
  store i32 %2572, i32* %1007, align 8
  call void @_ZN5angle5spirv19WriteMemberDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEEN3spv10DecorationERKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"* %2546, i32 %2528, i32 %2566, i32 37, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %14) #14
  store i64 0, i64* %1006, align 8
  %2582 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1004, align 8
  %2583 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2582, %1005
  %2584 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2582, null
  %2585 = or i1 %2583, %2584
  br i1 %2585, label %2597, label %2595

2586:                                             ; preds = %2604, %2561
  %2587 = phi i64 [ %2562, %2561 ], [ %2606, %2604 ]
  %2588 = phi i64 [ %2563, %2561 ], [ %2605, %2604 ]
  %2589 = add i32 %2566, 1
  %2590 = zext i32 %2589 to i64
  %2591 = sub i64 %2588, %2587
  %2592 = sdiv exact i64 %2591, 56
  %2593 = icmp ugt i64 %2592, %2590
  %2594 = inttoptr i64 %2587 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %2593, label %2561, label %2702

2595:                                             ; preds = %2581
  %2596 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2582 to i8*
  call void @_ZdaPv(i8* %2596) #17
  br label %2597

2597:                                             ; preds = %2595, %2581
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1003) #14
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1003) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1003, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1005, %"class.angle::spirv::BoxedUint32.273"** %1004, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1178, align 8
  store i32 %2574, i32* %1007, align 8
  call void @_ZN5angle5spirv19WriteMemberDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEEN3spv10DecorationERKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"* %2546, i32 %2528, i32 %2566, i32 35, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %14) #14
  store i64 0, i64* %1006, align 8
  %2598 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1004, align 8
  %2599 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2598, %1005
  %2600 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2598, null
  %2601 = or i1 %2599, %2600
  br i1 %2601, label %2604, label %2602

2602:                                             ; preds = %2597
  %2603 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2598 to i8*
  call void @_ZdaPv(i8* %2603) #17
  br label %2604

2604:                                             ; preds = %2602, %2597
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1003) #14
  %2605 = load i64, i64* %2559, align 8
  %2606 = load i64, i64* %2560, align 8
  br label %2586

2607:                                             ; preds = %2534, %2532, %2530
  %2608 = phi i32* [ %2535, %2534 ], [ %2533, %2532 ], [ %2531, %2530 ]
  %2609 = load i32, i32* %2608, align 4
  %2610 = icmp eq i32 %2609, -1
  br i1 %2610, label %2702, label %2611

2611:                                             ; preds = %2607
  %2612 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1008) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1008, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1010, %"class.angle::spirv::BoxedUint32.273"** %1009, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1179, align 8
  store i32 %2609, i32* %1012, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2612, i32 %2528, i32 %2529, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %20) #14
  store i64 0, i64* %1011, align 8
  %2613 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1009, align 8
  %2614 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2613, %1010
  %2615 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2613, null
  %2616 = or i1 %2614, %2615
  br i1 %2616, label %2619, label %2617

2617:                                             ; preds = %2611
  %2618 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2613 to i8*
  call void @_ZdaPv(i8* %2618) #17
  br label %2619

2619:                                             ; preds = %2617, %2611
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1008) #14
  %2620 = load i32, i32* %18, align 4
  %2621 = icmp eq i32 %2620, 30
  br i1 %2621, label %2622, label %2702

2622:                                             ; preds = %2619
  %2623 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 9
  %2624 = load i8, i8* %2623, align 8, !range !22
  %2625 = icmp eq i8 %2624, 0
  br i1 %2625, label %2636, label %2626

2626:                                             ; preds = %2622
  %2627 = load i32, i32* %993, align 4
  %2628 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1013) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1013, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1015, %"class.angle::spirv::BoxedUint32.273"** %1014, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1180, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2628, i32 %2627, i32 0, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %13) #14
  store i64 0, i64* %1016, align 8
  %2629 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1014, align 8
  %2630 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2629, %1015
  %2631 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2629, null
  %2632 = or i1 %2630, %2631
  br i1 %2632, label %2635, label %2633

2633:                                             ; preds = %2626
  %2634 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2629 to i8*
  call void @_ZdaPv(i8* %2634) #17
  br label %2635

2635:                                             ; preds = %2633, %2626
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1013) #14
  br label %2636

2636:                                             ; preds = %2635, %2622
  %2637 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 3
  %2638 = load i32, i32* %2637, align 4
  %2639 = icmp eq i32 %2638, -1
  br i1 %2639, label %2650, label %2640

2640:                                             ; preds = %2636
  %2641 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2642 = load i32, i32* %993, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1017) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1017, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1019, %"class.angle::spirv::BoxedUint32.273"** %1018, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1181, align 8
  store i32 %2638, i32* %1021, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2641, i32 %2642, i32 31, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %21) #14
  store i64 0, i64* %1020, align 8
  %2643 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1018, align 8
  %2644 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2643, %1019
  %2645 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2643, null
  %2646 = or i1 %2644, %2645
  br i1 %2646, label %2649, label %2647

2647:                                             ; preds = %2640
  %2648 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2643 to i8*
  call void @_ZdaPv(i8* %2648) #17
  br label %2649

2649:                                             ; preds = %2647, %2640
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1017) #14
  br label %2650

2650:                                             ; preds = %2649, %2636
  %2651 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 4
  %2652 = load i32, i32* %2651, align 8
  %2653 = icmp eq i32 %2652, -1
  br i1 %2653, label %2664, label %2654

2654:                                             ; preds = %2650
  %2655 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2656 = load i32, i32* %993, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1022) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1022, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1024, %"class.angle::spirv::BoxedUint32.273"** %1023, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1182, align 8
  store i32 %2652, i32* %1026, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2655, i32 %2656, i32 32, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %22) #14
  store i64 0, i64* %1025, align 8
  %2657 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1023, align 8
  %2658 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2657, %1024
  %2659 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2657, null
  %2660 = or i1 %2658, %2659
  br i1 %2660, label %2663, label %2661

2661:                                             ; preds = %2654
  %2662 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2657 to i8*
  call void @_ZdaPv(i8* %2662) #17
  br label %2663

2663:                                             ; preds = %2661, %2654
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1022) #14
  br label %2664

2664:                                             ; preds = %2663, %2650
  %2665 = load i8, i8* %1001, align 4, !range !22
  %2666 = icmp eq i8 %2665, 0
  br i1 %2666, label %2702, label %2667

2667:                                             ; preds = %2664
  %2668 = load i32, i32* %993, align 4
  %2669 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2670 = load i8, i8* %1002, align 8, !range !22
  %2671 = icmp eq i8 %2670, 0
  br i1 %2671, label %2672, label %2702

2672:                                             ; preds = %2667
  %2673 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 7, i32 0
  %2674 = load i32, i32* %2673, align 8
  %2675 = icmp eq i32 %2674, -1
  br i1 %2675, label %2702, label %2676

2676:                                             ; preds = %2672
  %2677 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 7, i32 2
  %2678 = load i32, i32* %2677, align 8
  %2679 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2509, i64 0, i32 7, i32 1
  %2680 = load i32, i32* %2679, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1027) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1027, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1029, %"class.angle::spirv::BoxedUint32.273"** %1028, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1183, align 8
  store i32 %2674, i32* %1031, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2669, i32 %2668, i32 36, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %16) #14
  store i64 0, i64* %1030, align 8
  %2681 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1028, align 8
  %2682 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2681, %1029
  %2683 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2681, null
  %2684 = or i1 %2682, %2683
  br i1 %2684, label %2687, label %2685

2685:                                             ; preds = %2676
  %2686 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2681 to i8*
  call void @_ZdaPv(i8* %2686) #17
  br label %2687

2687:                                             ; preds = %2685, %2676
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1027) #14
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1027) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1027, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1029, %"class.angle::spirv::BoxedUint32.273"** %1028, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1184, align 8
  store i32 %2678, i32* %1031, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2669, i32 %2668, i32 37, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %16) #14
  store i64 0, i64* %1030, align 8
  %2688 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1028, align 8
  %2689 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2688, %1029
  %2690 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2688, null
  %2691 = or i1 %2689, %2690
  br i1 %2691, label %2694, label %2692

2692:                                             ; preds = %2687
  %2693 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2688 to i8*
  call void @_ZdaPv(i8* %2693) #17
  br label %2694

2694:                                             ; preds = %2692, %2687
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1027) #14
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1027) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1027, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32.273"* %1029, %"class.angle::spirv::BoxedUint32.273"** %1028, align 8
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %1185, align 8
  store i32 %2680, i32* %1031, align 8
  call void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"* %2669, i32 %2668, i32 35, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %16) #14
  store i64 0, i64* %1030, align 8
  %2695 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %1028, align 8
  %2696 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2695, %1029
  %2697 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2695, null
  %2698 = or i1 %2696, %2697
  br i1 %2698, label %2701, label %2699

2699:                                             ; preds = %2694
  %2700 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2695 to i8*
  call void @_ZdaPv(i8* %2700) #17
  br label %2701

2701:                                             ; preds = %2699, %2694
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1027) #14
  br label %2702

2702:                                             ; preds = %2586, %2701, %2672, %2667, %2664, %2619, %2607, %2549, %2545, %2542, %2540, %2536, %2520, %2511, %2504
  %2703 = phi i32 [ 1, %2504 ], [ 0, %2511 ], [ 0, %2540 ], [ 1, %2607 ], [ 0, %2619 ], [ 0, %2664 ], [ 0, %2667 ], [ 0, %2672 ], [ 0, %2701 ], [ 1, %2520 ], [ 1, %2542 ], [ 1, %2536 ], [ 1, %2545 ], [ 1, %2549 ], [ 1, %2586 ]
  store i64 0, i64* %998, align 8
  %2704 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %996, align 8
  %2705 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2704, %997
  %2706 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %2704, null
  %2707 = or i1 %2705, %2706
  br i1 %2707, label %2710, label %2708

2708:                                             ; preds = %2702
  %2709 = bitcast %"class.angle::spirv::BoxedUint32.273"* %2704 to i8*
  call void @_ZdaPv(i8* %2709) #17
  br label %2710

2710:                                             ; preds = %2708, %2702
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %995) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %994) #14
  br label %2876

2711:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %987) #14
  store i32 0, i32* %988, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %989) #14
  store i32 0, i32* %990, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %991) #14
  store i32 -1431655766, i32* %12, align 4
  call void @_ZN5angle5spirv19ParseMemberDecorateEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEEPN3spv10DecorationEPNS_10FastVectorIS8_Lm8ENSt3__15arrayIS8_Lm8EEEEE(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %10, %"class.angle::spirv::BoxedUint32.273"* nonnull %11, i32* nonnull %12, %"class.angle::FastVector.271"* null) #14
  %2712 = load i32, i32* %988, align 4
  %2713 = load i32, i32* %990, align 4
  %2714 = load i32, i32* %12, align 4
  %2715 = load i32, i32* %976, align 4
  %2716 = icmp eq i32 %2715, %2712
  br i1 %2716, label %2720, label %2717

2717:                                             ; preds = %2711
  %2718 = load i32, i32* %977, align 4
  %2719 = icmp ne i32 %2718, %2712
  br label %2720

2720:                                             ; preds = %2717, %2711
  %2721 = phi i1 [ false, %2711 ], [ %2719, %2717 ]
  %2722 = icmp ne i32 %2714, 11
  %2723 = or i1 %2722, %2721
  br i1 %2723, label %2729, label %2724

2724:                                             ; preds = %2720
  %2725 = select i1 %2716, i32* %978, i32* %979
  %2726 = load i32, i32* %2725, align 4
  %2727 = icmp uge i32 %2726, %2713
  %2728 = zext i1 %2727 to i32
  br label %2729

2729:                                             ; preds = %2724, %2720
  %2730 = phi i32 [ %2728, %2724 ], [ 1, %2720 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %991) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %989) #14
  br label %2876

2731:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %981) #14
  store i32 0, i32* %982, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %983) #14
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %984) #14
  store i32 0, i32* %985, align 4
  call void @_ZN5angle5spirv16ParseTypePointerEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv12StorageClassES6_(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %7, i32* nonnull %8, %"class.angle::spirv::BoxedUint32"* nonnull %9) #14
  %2732 = load i32, i32* %982, align 4
  %2733 = load i32, i32* %8, align 4
  %2734 = load i32, i32* %985, align 4
  %2735 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2736 = zext i32 %2734 to i64
  %2737 = load i8**, i8*** %986, align 8
  %2738 = getelementptr inbounds i8*, i8** %2737, i64 %2736
  %2739 = load i8*, i8** %2738, align 8
  %2740 = icmp eq i8* %2739, null
  br i1 %2740, label %2743, label %2741

2741:                                             ; preds = %2731
  %2742 = call zeroext i1 @_ZN2gl13IsBuiltInNameEPKc(i8* nonnull %2739) #14
  br i1 %2742, label %2755, label %2743

2743:                                             ; preds = %2741, %2731
  %2744 = or i32 %2733, 2
  %2745 = icmp eq i32 %2744, 3
  br i1 %2745, label %2746, label %2755

2746:                                             ; preds = %2743
  %2747 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2735, i64 0, i32 0, i32 0
  %2748 = load i32*, i32** %2747, align 8
  %2749 = getelementptr inbounds i32, i32* %2748, i64 3
  %2750 = load i32, i32* %2749, align 4
  %2751 = add i32 %2750, 1
  store i32 %2751, i32* %2749, align 4
  call void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"* %2735, i32 %2750, i32 6, i32 %2734) #14
  %2752 = zext i32 %2732 to i64
  %2753 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %968, align 8
  %2754 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2753, i64 %2752, i32 0, i32 0
  store i32 %2750, i32* %2754, align 4
  br label %2755

2755:                                             ; preds = %2746, %2743, %2741
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %984) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %983) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %981) #14
  br label %2880

2756:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %969) #14
  store i32 0, i32* %970, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %971) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %971, i8 0, i64 32, i1 false) #14
  store %"class.angle::spirv::BoxedUint32"* %973, %"class.angle::spirv::BoxedUint32"** %972, align 8
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %1174, align 8
  call void @_ZN5angle5spirv15ParseTypeStructEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS_10FastVectorIS5_Lm8ENSt3__15arrayIS5_Lm8EEEEE(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %5, %"class.angle::FastVector.278"* nonnull %6) #14
  %2757 = load i32, i32* %970, align 4
  %2758 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2759 = load i32, i32* %976, align 4
  %2760 = icmp eq i32 %2759, %2757
  br i1 %2760, label %2764, label %2761

2761:                                             ; preds = %2756
  %2762 = load i32, i32* %977, align 4
  %2763 = icmp eq i32 %2762, %2757
  br i1 %2763, label %2764, label %2808

2764:                                             ; preds = %2761, %2756
  %2765 = select i1 %2760, i32* %978, i32* %979
  %2766 = load i32, i32* %2765, align 4
  %2767 = add i32 %2766, 1
  %2768 = zext i32 %2767 to i64
  %2769 = load i64, i64* %974, align 8
  %2770 = icmp ult i64 %2769, %2768
  br i1 %2770, label %2771, label %2807

2771:                                             ; preds = %2764
  %2772 = load i64, i64* %975, align 8
  %2773 = icmp ult i64 %2772, %2768
  br i1 %2773, label %2774, label %2807

2774:                                             ; preds = %2771
  %2775 = icmp ugt i64 %2772, 8
  %2776 = select i1 %2775, i64 %2772, i64 8
  br label %2777

2777:                                             ; preds = %2777, %2774
  %2778 = phi i64 [ %2776, %2774 ], [ %2780, %2777 ]
  %2779 = icmp ult i64 %2778, %2768
  %2780 = shl i64 %2778, 1
  br i1 %2779, label %2777, label %2781

2781:                                             ; preds = %2777
  %2782 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2778, i64 4) #14
  %2783 = extractvalue { i64, i1 } %2782, 1
  %2784 = extractvalue { i64, i1 } %2782, 0
  %2785 = select i1 %2783, i64 -1, i64 %2784
  %2786 = call i8* @_Znam(i64 %2785) #17
  %2787 = icmp eq i64 %2778, 0
  br i1 %2787, label %2790, label %2788

2788:                                             ; preds = %2781
  %2789 = shl nsw i64 %2778, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2786, i8 0, i64 %2789, i1 false) #14
  br label %2790

2790:                                             ; preds = %2788, %2781
  %2791 = icmp eq i64 %2769, 0
  br i1 %2791, label %2792, label %2795

2792:                                             ; preds = %2790
  %2793 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %972, align 8
  %2794 = bitcast %"class.angle::spirv::BoxedUint32"* %2793 to i8*
  br label %2799

2795:                                             ; preds = %2790
  %2796 = shl nuw i64 %2769, 2
  %2797 = load i8*, i8** %980, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %2786, i8* align 4 %2797, i64 %2796, i1 false) #14
  %2798 = bitcast i8* %2797 to %"class.angle::spirv::BoxedUint32"*
  br label %2799

2799:                                             ; preds = %2795, %2792
  %2800 = phi i8* [ %2794, %2792 ], [ %2797, %2795 ]
  %2801 = phi %"class.angle::spirv::BoxedUint32"* [ %2793, %2792 ], [ %2798, %2795 ]
  %2802 = icmp eq %"class.angle::spirv::BoxedUint32"* %2801, %973
  %2803 = icmp eq %"class.angle::spirv::BoxedUint32"* %2801, null
  %2804 = or i1 %2802, %2803
  br i1 %2804, label %2806, label %2805

2805:                                             ; preds = %2799
  call void @_ZdaPv(i8* %2800) #17
  br label %2806

2806:                                             ; preds = %2805, %2799
  store i8* %2786, i8** %980, align 8
  store i64 %2778, i64* %975, align 8
  br label %2807

2807:                                             ; preds = %2806, %2771, %2764
  store i64 %2768, i64* %974, align 8
  call void @_ZN5angle5spirv15WriteTypeStructEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEERKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %2758, i32 %2757, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %6) #14
  br label %2808

2808:                                             ; preds = %2807, %2761
  %2809 = phi i32 [ 0, %2807 ], [ 1, %2761 ]
  store i64 0, i64* %974, align 8
  %2810 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %972, align 8
  %2811 = icmp eq %"class.angle::spirv::BoxedUint32"* %2810, %973
  %2812 = icmp eq %"class.angle::spirv::BoxedUint32"* %2810, null
  %2813 = or i1 %2811, %2812
  br i1 %2813, label %2816, label %2814

2814:                                             ; preds = %2808
  %2815 = bitcast %"class.angle::spirv::BoxedUint32"* %2810 to i8*
  call void @_ZdaPv(i8* %2815) #17
  br label %2816

2816:                                             ; preds = %2814, %2808
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %971) #14
  br label %2876

2817:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %960) #14
  store i32 0, i32* %961, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %962) #14
  store i32 0, i32* %963, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %964) #14
  store i32 -1431655766, i32* %4, align 4
  call void @_ZN5angle5spirv13ParseVariableEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv12StorageClassES6_(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %2, %"class.angle::spirv::BoxedUint32"* nonnull %3, i32* nonnull %4, %"class.angle::spirv::BoxedUint32"* null) #14
  %2818 = load i32, i32* %963, align 4
  %2819 = zext i32 %2818 to i64
  %2820 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %965, align 8
  %2821 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %2820, i64 %2819
  %2822 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %2821, align 8
  %2823 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %2822, null
  br i1 %2823, label %2865, label %2824

2824:                                             ; preds = %2817
  %2825 = load i8, i8* %966, align 8
  %2826 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2822, i64 0, i32 5, i32 0
  %2827 = load i8, i8* %2826, align 1
  %2828 = zext i8 %2825 to i32
  %2829 = shl i32 1, %2828
  %2830 = trunc i32 %2829 to i8
  %2831 = and i8 %2827, %2830
  %2832 = icmp eq i8 %2831, 0
  %2833 = load i32, i32* %4, align 4
  br i1 %2832, label %2854, label %2834

2834:                                             ; preds = %2824
  %2835 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %2822, i64 0, i32 9
  %2836 = load i8, i8* %2835, align 8, !range !22
  %2837 = icmp ne i8 %2836, 0
  %2838 = or i32 %2833, 2
  %2839 = icmp eq i32 %2838, 3
  %2840 = and i1 %2839, %2837
  br i1 %2840, label %2841, label %2865

2841:                                             ; preds = %2834
  %2842 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2843 = load i32, i32* %961, align 4
  %2844 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %967, align 8
  %2845 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2844, i64 %2819, i32 0, i32 0
  %2846 = load i32, i32* %2845, align 4
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %2842, i32 %2843, i32 %2846, i32 %2833, %"class.angle::spirv::BoxedUint32"* null) #14
  %2847 = load i32, i32* %961, align 4
  %2848 = load i32, i32* %963, align 4
  %2849 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2850 = zext i32 %2847 to i64
  %2851 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %968, align 8
  %2852 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2851, i64 %2850, i32 0, i32 0
  %2853 = load i32, i32* %2852, align 4
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %2849, i32 %2853, i32 %2848, i32 6, %"class.angle::spirv::BoxedUint32"* null) #14
  br label %2865

2854:                                             ; preds = %2824
  %2855 = icmp eq i8 %2825, 0
  %2856 = icmp eq i32 %2833, 2
  %2857 = and i1 %2855, %2856
  br i1 %2857, label %2865, label %2858

2858:                                             ; preds = %2854
  %2859 = load i32, i32* %961, align 4
  %2860 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2861 = zext i32 %2859 to i64
  %2862 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %968, align 8
  %2863 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %2862, i64 %2861, i32 0, i32 0
  %2864 = load i32, i32* %2863, align 4
  call void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"* %2860, i32 %2864, i32 %2818, i32 6, %"class.angle::spirv::BoxedUint32"* null) #14
  br label %2865

2865:                                             ; preds = %2858, %2854, %2841, %2834, %2817
  %2866 = phi i32 [ 0, %2841 ], [ 0, %2858 ], [ 1, %2817 ], [ 0, %2854 ], [ 1, %2834 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %964) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %962) #14
  br label %2876

2867:                                             ; preds = %2353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %956) #14
  store i32 0, i32* %957, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %958) #14
  store i32 -1431655766, i32* %47, align 4
  call void @_ZN5angle5spirv18ParseExecutionModeEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv13ExecutionModeE(i32* %1202, %"class.angle::spirv::BoxedUint32"* nonnull %46, i32* nonnull %47) #14
  %2868 = load i32, i32* %47, align 4
  %2869 = icmp eq i32 %2868, 9
  br i1 %2869, label %2870, label %2873

2870:                                             ; preds = %2867
  %2871 = load i8, i8* %959, align 2, !range !22
  %2872 = icmp eq i8 %2871, 0
  br i1 %2872, label %2873, label %2874

2873:                                             ; preds = %2870, %2867
  br label %2874

2874:                                             ; preds = %2873, %2870
  %2875 = phi i32 [ 1, %2873 ], [ 0, %2870 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %958) #14
  br label %2876

2876:                                             ; preds = %2874, %2865, %2816, %2729, %2710, %2373, %2371, %1821
  %2877 = phi i8* [ %956, %2874 ], [ %960, %2865 ], [ %969, %2816 ], [ %987, %2729 ], [ %992, %2710 ], [ %1047, %2373 ], [ %1050, %2371 ], [ %1164, %1821 ]
  %2878 = phi i32 [ %2875, %2874 ], [ %2866, %2865 ], [ %2809, %2816 ], [ %2730, %2729 ], [ %2703, %2710 ], [ %2377, %2373 ], [ %2372, %2371 ], [ %1814, %1821 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2877) #14
  %2879 = icmp eq i32 %2878, 1
  br i1 %2879, label %2880, label %2888

2880:                                             ; preds = %2876, %2755, %2390, %2357, %2353, %2352, %2348, %2347, %1827, %1822, %1783
  %2881 = load i32, i32* %48, align 4
  %2882 = zext i32 %2881 to i64
  %2883 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8
  %2884 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2883, i64 0, i32 0, i32 1
  %2885 = load i32*, i32** %2884, align 8
  %2886 = getelementptr inbounds i32, i32* %1202, i64 %2882
  %2887 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPjEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %2883, i32* %2885, i32* %1202, i32* %2886) #14
  br label %2888

2888:                                             ; preds = %2354, %2503, %2876, %2880
  %2889 = load i32, i32* %48, align 4
  %2890 = zext i32 %2889 to i64
  %2891 = load i64, i64* %92, align 8
  %2892 = add i64 %2891, %2890
  store i64 %2892, i64* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %954) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %953) #14
  %2893 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %2894 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2893, i64 0, i32 0, i32 1
  %2895 = bitcast i32** %2894 to i64*
  %2896 = load i64, i64* %2895, align 8
  %2897 = bitcast %"class.std::__1::vector"* %2893 to i64*
  %2898 = load i64, i64* %2897, align 8
  %2899 = sub i64 %2896, %2898
  %2900 = ashr exact i64 %2899, 2
  %2901 = icmp ult i64 %2892, %2900
  br i1 %2901, label %1197, label %2902

2902:                                             ; preds = %2888, %947
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set.156"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  br label %13

8:                                                ; preds = %50
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #17
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %10, align 8
  %12 = bitcast %"union.absl::container_internal::map_slot_type.157"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  br label %54

13:                                               ; preds = %5, %50
  %14 = phi i64 [ 0, %5 ], [ %51, %50 ]
  %15 = load i8*, i8** %6, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %50

19:                                               ; preds = %13
  %20 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %7, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %22) #14
  %23 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 7, i32 8, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %23, i64 0, i32 0
  %25 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %24, align 8
  %26 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %19
  %28 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %25 to i8*
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 7, i32 8, i32 0, i32 1
  %30 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %29, align 8
  %31 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %30, %25
  br i1 %31, label %40, label %32

32:                                               ; preds = %27, %32
  %33 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %34, %32 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33, i64 -1
  %35 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33, i64 -1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %35) #14
  %36 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %34, %25
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::__vector_base.146"* %23 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %27
  %41 = phi i8* [ %39, %37 ], [ %28, %27 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %25, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %29, align 8
  tail call void @_ZdlPv(i8* %41) #17
  br label %42

42:                                               ; preds = %40, %19
  %43 = bitcast %"union.absl::container_internal::map_slot_type.157"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZdlPv(i8* %49) #17
  br label %50

50:                                               ; preds = %47, %42, %13
  %51 = add i64 %14, 1
  %52 = load i64, i64* %2, align 8
  %53 = icmp eq i64 %51, %52
  br i1 %53, label %8, label %13

54:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2, align 8
  %4 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %7, align 8
  %9 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %8, %3
  br i1 %9, label %18, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %11, i64 -1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %13) #14
  %14 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %12, %3
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.145"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %5, %15
  %19 = phi i8* [ %17, %15 ], [ %6, %5 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %3, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %7, align 8
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #4

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare i32 @_ZN2gl6Shader16getShaderVersionEv(%"class.gl::Shader"*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::vector.6"* @_ZN2gl6Shader24getActiveOutputVariablesEv(%"class.gl::Shader"*) local_unnamed_addr #4

declare i32 @_ZN2gl19VariableColumnCountEj(i32) local_unnamed_addr #4

declare i32 @_ZN2gl16VariableRowCountEj(i32) local_unnamed_addr #4

declare i64 @_ZN2gl20VariableExternalSizeEj(i32) local_unnamed_addr #4

declare dereferenceable(72) %"struct.gl::UniformTypeInfo"* @_ZN2gl18GetUniformTypeInfoEj(i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK2sh14ShaderVariable9isBuiltInEv(%"struct.sh::ShaderVariable"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.145"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 56
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  %14 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %26, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %14 to i64
  br label %26

18:                                               ; preds = %12, %18
  %19 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %24, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19 to i8*
  %21 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19, i64 0, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19, i64 0, i32 8
  %23 = bitcast %"class.std::__1::vector.145"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #14
  %24 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19, i64 1
  %25 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %24, %14
  br i1 %25, label %16, label %18

26:                                               ; preds = %12, %16
  %27 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %140

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.145"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 56
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 329406144173384850
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.145"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #18
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 56
  %40 = icmp ult i64 %39, 164703072086692425
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 329406144173384850, %37 ]
  %48 = mul i64 %47, 56
  %49 = tail call i8* @_Znwm(i64 %48) #17
  %50 = bitcast i8* %49 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %53, i64 %32
  %55 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %54 to i64
  %56 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %53, i64 %52
  %57 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %54, i64 %1
  br label %58

58:                                               ; preds = %51, %58
  %59 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %65, %58 ], [ %54, %51 ]
  %60 = phi i64 [ %66, %58 ], [ %55, %51 ]
  %61 = inttoptr i64 %60 to i8*
  %62 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 0, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 0, i32 8
  %64 = bitcast %"class.std::__1::vector.145"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #14
  %65 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 1
  %66 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %65 to i64
  %67 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %57, %65
  br i1 %67, label %68, label %58

68:                                               ; preds = %58
  %69 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %56 to i64
  %70 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %57 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %71, align 8
  %73 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %6, align 8
  %74 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %72 to i64
  br label %106

77:                                               ; preds = %68, %77
  %78 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %80, %77 ], [ %54, %68 ]
  %79 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %81, %77 ], [ %73, %68 ]
  %80 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1
  %82 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %80 to i8*
  %83 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 32, i1 false) #14
  %84 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1, i32 8
  %85 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1, i32 8
  %86 = bitcast %"class.std::__1::vector.145"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #14
  %87 = bitcast %"class.std::__1::vector.145"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.145"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1, i32 8, i32 0, i32 1
  %91 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1, i32 8, i32 0, i32 1
  %94 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.std::__1::vector.145"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #14
  %101 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %81, %72
  br i1 %101, label %102, label %77

102:                                              ; preds = %77
  %103 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %80 to i64
  %104 = load i64, i64* %29, align 8
  %105 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %6, align 8
  br label %106

106:                                              ; preds = %75, %102
  %107 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %72, %75 ], [ %105, %102 ]
  %108 = phi i64 [ %55, %75 ], [ %103, %102 ]
  %109 = phi i64 [ %76, %75 ], [ %104, %102 ]
  store i64 %108, i64* %29, align 8
  store i64 %70, i64* %7, align 8
  store i64 %69, i64* %4, align 8
  %110 = inttoptr i64 %109 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  %111 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %107, %110
  br i1 %111, label %136, label %112

112:                                              ; preds = %106, %134
  %113 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %114, %134 ], [ %107, %106 ]
  %114 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %113, i64 -1
  %115 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %113, i64 -1, i32 8, i32 0
  %116 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %115, i64 0, i32 0
  %117 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %116, align 8
  %118 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %117, null
  br i1 %118, label %134, label %119

119:                                              ; preds = %112
  %120 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %117 to i8*
  %121 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %113, i64 -1, i32 8, i32 0, i32 1
  %122 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %121, align 8
  %123 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %122, %117
  br i1 %123, label %132, label %124

124:                                              ; preds = %119, %124
  %125 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %126, %124 ], [ %122, %119 ]
  %126 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %125, i64 -1
  %127 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %125, i64 -1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %127) #14
  %128 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %126, %117
  br i1 %128, label %129, label %124

129:                                              ; preds = %124
  %130 = bitcast %"class.std::__1::__vector_base.146"* %115 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %119
  %133 = phi i8* [ %131, %129 ], [ %120, %119 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %117, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %121, align 8
  tail call void @_ZdlPv(i8* %133) #17
  br label %134

134:                                              ; preds = %132, %112
  %135 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %114, %110
  br i1 %135, label %136, label %112

136:                                              ; preds = %134, %106
  %137 = icmp eq i64 %109, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %138, %136, %26
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.145"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.145"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 56
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 329406144173384850
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.145"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #18
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 56
  %19 = icmp ult i64 %18, 164703072086692425
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 329406144173384850, %13 ]
  %27 = mul i64 %26, 56
  %28 = tail call i8* @_Znwm(i64 %27) #17
  %29 = bitcast i8* %28 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %32, i64 %8
  %34 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %32, i64 %31
  %35 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %34 to i64
  %36 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33 to i8*
  %37 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %32, i64 %8, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 -1, i64 28, i1 false) #14
  store i32 5126, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %32, i64 %8, i32 8
  %39 = bitcast %"class.std::__1::vector.145"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #14
  %40 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33, i64 1
  %41 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %42, align 8
  %44 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2, align 8
  %45 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %30
  %47 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %43 to i64
  br label %76

48:                                               ; preds = %30, %48
  %49 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %51, %48 ], [ %33, %30 ]
  %50 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %52, %48 ], [ %44, %30 ]
  %51 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %50, i64 -1
  %53 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %51 to i8*
  %54 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 32, i1 false) #14
  %55 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %49, i64 -1, i32 8
  %56 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %50, i64 -1, i32 8
  %57 = bitcast %"class.std::__1::vector.145"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #14
  %58 = bitcast %"class.std::__1::vector.145"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.145"* %55 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %50, i64 -1, i32 8, i32 0, i32 1
  %62 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %49, i64 -1, i32 8, i32 0, i32 1
  %65 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %50, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %49, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.std::__1::vector.145"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #14
  %72 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %52, %43
  br i1 %72, label %73, label %48

73:                                               ; preds = %48
  %74 = load i64, i64* %5, align 8
  %75 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %2, align 8
  br label %76

76:                                               ; preds = %46, %73
  %77 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %43, %46 ], [ %75, %73 ]
  %78 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %33, %46 ], [ %51, %73 ]
  %79 = phi i64 [ %47, %46 ], [ %74, %73 ]
  %80 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78 to i64
  store i64 %80, i64* %5, align 8
  store i64 %41, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %81 = inttoptr i64 %79 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  %82 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %77, %81
  br i1 %82, label %107, label %83

83:                                               ; preds = %76, %105
  %84 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %85, %105 ], [ %77, %76 ]
  %85 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %84, i64 -1
  %86 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %84, i64 -1, i32 8, i32 0
  %87 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %86, i64 0, i32 0
  %88 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %87, align 8
  %89 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %88, null
  br i1 %89, label %105, label %90

90:                                               ; preds = %83
  %91 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %88 to i8*
  %92 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %84, i64 -1, i32 8, i32 0, i32 1
  %93 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %92, align 8
  %94 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %93, %88
  br i1 %94, label %103, label %95

95:                                               ; preds = %90, %95
  %96 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %97, %95 ], [ %93, %90 ]
  %97 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %96, i64 -1
  %98 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %96, i64 -1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %98) #14
  %99 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %97, %88
  br i1 %99, label %100, label %95

100:                                              ; preds = %95
  %101 = bitcast %"class.std::__1::__vector_base.146"* %86 to i8**
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %100, %90
  %104 = phi i8* [ %102, %100 ], [ %91, %90 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %88, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %92, align 8
  tail call void @_ZdlPv(i8* %104) #17
  br label %105

105:                                              ; preds = %103, %83
  %106 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %85, %81
  br i1 %106, label %107, label %83

107:                                              ; preds = %105, %76
  %108 = icmp eq i64 %79, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %79 to i8*
  tail call void @_ZdlPv(i8* %110) #17
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_115AddResourceInfoEPNS_30ShaderInterfaceVariableInfoMapEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEjj(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32) unnamed_addr #0 {
  %6 = zext i8 %1 to i32
  %7 = shl i32 1, %6
  %8 = trunc i32 %7 to i8
  %9 = and i8 %8, 63
  %10 = zext i8 %1 to i64
  %11 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10, i32 0
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %11, i64 0, i32 0
  %13 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %2) #14, !noalias !85
  %14 = extractvalue { i64, i8 } %13, 0
  %15 = extractvalue { i64, i8 } %13, 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %44, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10, i32 0, i32 0, i32 1
  %20 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %19, align 8, !noalias !85
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1, !noalias !85
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"union.absl::container_internal::map_slot_type.157"* %21 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #14, !noalias !85
  br label %35

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %21, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !85
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !85
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %32, i64 %34) #14, !noalias !85
  br label %35

35:                                               ; preds = %29, %26
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 5, i32 0
  %38 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 -1, i64 20, i1 false) #14, !noalias !85
  store i8 0, i8* %37, align 1, !noalias !85
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 7
  %40 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 7, i32 7
  %41 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 -1, i64 28, i1 false) #14, !noalias !85
  store i32 5126, i32* %40, align 4, !noalias !85
  %42 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %20, i64 %14, i32 0, i32 1, i32 7, i32 8
  %43 = bitcast %"class.std::__1::vector.145"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 53, i1 false) #14, !noalias !85
  br label %44

44:                                               ; preds = %35, %5
  %45 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.155", %"class.absl::container_internal::raw_hash_map.155"* %11, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8, !noalias !85
  %47 = getelementptr inbounds i8, i8* %46, i64 %14
  %48 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap", %"class.rx::ShaderInterfaceVariableInfoMap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10, i32 0, i32 0, i32 1
  %49 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %48, align 8, !noalias !85
  %50 = icmp ne i8* %47, null
  tail call void @llvm.assume(i1 %50) #14, !noalias !85
  %51 = load i8, i8* %47, align 1
  %52 = icmp sgt i8 %51, -1
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #14
  unreachable

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %49, i64 %14, i32 0, i32 1, i32 0
  store i32 %3, i32* %55, align 8
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %49, i64 %14, i32 0, i32 1, i32 1
  store i32 %4, i32* %56, align 4
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %49, i64 %14, i32 0, i32 1, i32 5, i32 0
  store i8 %9, i8* %57, align 1
  ret void
}

declare zeroext i1 @_ZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %203, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %4
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %201

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq i32* %25, %2
  br i1 %36, label %199, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i32*
  %39 = xor i64 %22, -1
  %40 = getelementptr i32, i32* %2, i64 %39
  %41 = ptrtoint i32* %40 to i64
  %42 = sub i64 %41, %4
  %43 = lshr i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 8
  br i1 %45, label %143, label %46

46:                                               ; preds = %37
  %47 = inttoptr i64 %35 to i8*
  %48 = xor i64 %22, -1
  %49 = getelementptr i32, i32* %2, i64 %48
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %4
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr i32, i32* %38, i64 %53
  %55 = add nsw i64 %22, %52
  %56 = add i64 %55, 1
  %57 = getelementptr i32, i32* %1, i64 %56
  %58 = bitcast i32* %57 to i8*
  %59 = icmp ult i8* %47, %58
  %60 = icmp ult i32* %24, %54
  %61 = and i1 %59, %60
  br i1 %61, label %143, label %62

62:                                               ; preds = %46
  %63 = and i64 %44, 9223372036854775800
  %64 = getelementptr i32, i32* %38, i64 %63
  %65 = getelementptr i32, i32* %24, i64 %63
  %66 = add nsw i64 %63, -8
  %67 = lshr exact i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 24
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i32, i32* %38, i64 %74
  %77 = getelementptr i32, i32* %24, i64 %74
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4, !alias.scope !90
  %80 = getelementptr i32, i32* %77, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !90
  %83 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %79, <4 x i32>* %83, align 4, !alias.scope !93, !noalias !90
  %84 = getelementptr i32, i32* %76, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %85, align 4, !alias.scope !93, !noalias !90
  %86 = or i64 %74, 8
  %87 = getelementptr i32, i32* %38, i64 %86
  %88 = getelementptr i32, i32* %24, i64 %86
  %89 = bitcast i32* %88 to <4 x i32>*
  %90 = load <4 x i32>, <4 x i32>* %89, align 4, !alias.scope !90
  %91 = getelementptr i32, i32* %88, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !90
  %94 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %90, <4 x i32>* %94, align 4, !alias.scope !93, !noalias !90
  %95 = getelementptr i32, i32* %87, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %96, align 4, !alias.scope !93, !noalias !90
  %97 = or i64 %74, 16
  %98 = getelementptr i32, i32* %38, i64 %97
  %99 = getelementptr i32, i32* %24, i64 %97
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !90
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !90
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !93, !noalias !90
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !93, !noalias !90
  %108 = or i64 %74, 24
  %109 = getelementptr i32, i32* %38, i64 %108
  %110 = getelementptr i32, i32* %24, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !90
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !90
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !93, !noalias !90
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !93, !noalias !90
  %119 = add i64 %74, 32
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !95

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i32, i32* %38, i64 %126
  %129 = getelementptr i32, i32* %24, i64 %126
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !90
  %132 = getelementptr i32, i32* %129, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !90
  %135 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !93, !noalias !90
  %136 = getelementptr i32, i32* %128, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !93, !noalias !90
  %138 = add i64 %126, 8
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !96

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %44, %63
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %46, %37
  %144 = phi i32* [ %38, %46 ], [ %38, %37 ], [ %64, %141 ]
  %145 = phi i32* [ %24, %46 ], [ %24, %37 ], [ %65, %141 ]
  %146 = ptrtoint i32* %145 to i64
  %147 = getelementptr i32, i32* %2, i64 -1
  %148 = ptrtoint i32* %147 to i64
  %149 = sub i64 %148, %146
  %150 = lshr i64 %149, 2
  %151 = add nuw nsw i64 %150, 1
  %152 = and i64 %151, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %163, label %154

154:                                              ; preds = %143, %154
  %155 = phi i32* [ %160, %154 ], [ %144, %143 ]
  %156 = phi i32* [ %159, %154 ], [ %145, %143 ]
  %157 = phi i64 [ %161, %154 ], [ %152, %143 ]
  %158 = load i32, i32* %156, align 4
  store i32 %158, i32* %155, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 1
  %160 = getelementptr inbounds i32, i32* %155, i64 1
  %161 = add i64 %157, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %154, !llvm.loop !98

163:                                              ; preds = %154, %143
  %164 = phi i32* [ undef, %143 ], [ %160, %154 ]
  %165 = phi i32* [ %144, %143 ], [ %160, %154 ]
  %166 = phi i32* [ %145, %143 ], [ %159, %154 ]
  %167 = icmp ult i64 %149, 28
  br i1 %167, label %196, label %168

168:                                              ; preds = %163, %168
  %169 = phi i32* [ %194, %168 ], [ %165, %163 ]
  %170 = phi i32* [ %193, %168 ], [ %166, %163 ]
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %170, i64 1
  %173 = getelementptr inbounds i32, i32* %169, i64 1
  %174 = load i32, i32* %172, align 4
  store i32 %174, i32* %173, align 4
  %175 = getelementptr inbounds i32, i32* %170, i64 2
  %176 = getelementptr inbounds i32, i32* %169, i64 2
  %177 = load i32, i32* %175, align 4
  store i32 %177, i32* %176, align 4
  %178 = getelementptr inbounds i32, i32* %170, i64 3
  %179 = getelementptr inbounds i32, i32* %169, i64 3
  %180 = load i32, i32* %178, align 4
  store i32 %180, i32* %179, align 4
  %181 = getelementptr inbounds i32, i32* %170, i64 4
  %182 = getelementptr inbounds i32, i32* %169, i64 4
  %183 = load i32, i32* %181, align 4
  store i32 %183, i32* %182, align 4
  %184 = getelementptr inbounds i32, i32* %170, i64 5
  %185 = getelementptr inbounds i32, i32* %169, i64 5
  %186 = load i32, i32* %184, align 4
  store i32 %186, i32* %185, align 4
  %187 = getelementptr inbounds i32, i32* %170, i64 6
  %188 = getelementptr inbounds i32, i32* %169, i64 6
  %189 = load i32, i32* %187, align 4
  store i32 %189, i32* %188, align 4
  %190 = getelementptr inbounds i32, i32* %170, i64 7
  %191 = getelementptr inbounds i32, i32* %169, i64 7
  %192 = load i32, i32* %190, align 4
  store i32 %192, i32* %191, align 4
  %193 = getelementptr inbounds i32, i32* %170, i64 8
  %194 = getelementptr inbounds i32, i32* %169, i64 8
  %195 = icmp eq i32* %193, %2
  br i1 %195, label %196, label %168, !llvm.loop !99

196:                                              ; preds = %163, %168, %141
  %197 = phi i32* [ %64, %141 ], [ %164, %163 ], [ %194, %168 ]
  %198 = ptrtoint i32* %197 to i64
  br label %199

199:                                              ; preds = %34, %196
  %200 = phi i64 [ %35, %34 ], [ %198, %196 ]
  store i64 %200, i64* %19, align 8
  br label %340

201:                                              ; preds = %33
  %202 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %202, i32** %18, align 8
  br label %340

203:                                              ; preds = %3
  %204 = icmp eq i64 %12, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %207 = bitcast i32** %206 to i64*
  store i64 %12, i64* %207, align 8
  %208 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %208) #17
  %209 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 24, i1 false) #14
  br label %210

210:                                              ; preds = %203, %205
  %211 = phi i64 [ %10, %203 ], [ 0, %205 ]
  %212 = icmp ugt i64 %7, 4611686018427387903
  br i1 %212, label %213, label %215

213:                                              ; preds = %210
  %214 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %214) #18
  unreachable

215:                                              ; preds = %210
  %216 = ashr exact i64 %211, 2
  %217 = icmp ult i64 %216, 2305843009213693951
  br i1 %217, label %218, label %225

218:                                              ; preds = %215
  %219 = ashr exact i64 %211, 1
  %220 = icmp ult i64 %219, %7
  br i1 %220, label %225, label %221

221:                                              ; preds = %218
  %222 = icmp ugt i64 %219, 4611686018427387903
  br i1 %222, label %223, label %225

223:                                              ; preds = %221
  %224 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %224) #18
  unreachable

225:                                              ; preds = %218, %215, %221
  %226 = phi i64 [ %219, %221 ], [ 4611686018427387903, %215 ], [ %7, %218 ]
  %227 = shl i64 %226, 2
  %228 = tail call i8* @_Znwm(i64 %227) #17
  %229 = bitcast i8* %228 to i32*
  %230 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %231 = bitcast i32** %230 to i8**
  store i8* %228, i8** %231, align 8
  %232 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %228, i8** %232, align 8
  %233 = getelementptr inbounds i32, i32* %229, i64 %226
  store i32* %233, i32** %8, align 8
  %234 = bitcast i32** %230 to i64*
  %235 = ptrtoint i8* %228 to i64
  %236 = icmp eq i32* %1, %2
  br i1 %236, label %338, label %237

237:                                              ; preds = %225
  %238 = getelementptr i32, i32* %2, i64 -1
  %239 = ptrtoint i32* %238 to i64
  %240 = sub i64 %239, %4
  %241 = lshr i64 %240, 2
  %242 = add nuw nsw i64 %241, 1
  %243 = icmp ult i64 %242, 8
  br i1 %243, label %325, label %244

244:                                              ; preds = %237
  %245 = and i64 %242, 9223372036854775800
  %246 = getelementptr i32, i32* %229, i64 %245
  %247 = getelementptr i32, i32* %1, i64 %245
  %248 = add nsw i64 %245, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 24
  br i1 %252, label %304, label %253

253:                                              ; preds = %244
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %301, %255 ]
  %257 = phi i64 [ %254, %253 ], [ %302, %255 ]
  %258 = getelementptr i32, i32* %229, i64 %256
  %259 = getelementptr i32, i32* %1, i64 %256
  %260 = bitcast i32* %259 to <4 x i32>*
  %261 = load <4 x i32>, <4 x i32>* %260, align 4
  %262 = getelementptr i32, i32* %259, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  %264 = load <4 x i32>, <4 x i32>* %263, align 4
  %265 = bitcast i32* %258 to <4 x i32>*
  store <4 x i32> %261, <4 x i32>* %265, align 4
  %266 = getelementptr i32, i32* %258, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  store <4 x i32> %264, <4 x i32>* %267, align 4
  %268 = or i64 %256, 8
  %269 = getelementptr i32, i32* %229, i64 %268
  %270 = getelementptr i32, i32* %1, i64 %268
  %271 = bitcast i32* %270 to <4 x i32>*
  %272 = load <4 x i32>, <4 x i32>* %271, align 4
  %273 = getelementptr i32, i32* %270, i64 4
  %274 = bitcast i32* %273 to <4 x i32>*
  %275 = load <4 x i32>, <4 x i32>* %274, align 4
  %276 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %272, <4 x i32>* %276, align 4
  %277 = getelementptr i32, i32* %269, i64 4
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> %275, <4 x i32>* %278, align 4
  %279 = or i64 %256, 16
  %280 = getelementptr i32, i32* %229, i64 %279
  %281 = getelementptr i32, i32* %1, i64 %279
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 4
  %284 = getelementptr i32, i32* %281, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4
  %287 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %283, <4 x i32>* %287, align 4
  %288 = getelementptr i32, i32* %280, i64 4
  %289 = bitcast i32* %288 to <4 x i32>*
  store <4 x i32> %286, <4 x i32>* %289, align 4
  %290 = or i64 %256, 24
  %291 = getelementptr i32, i32* %229, i64 %290
  %292 = getelementptr i32, i32* %1, i64 %290
  %293 = bitcast i32* %292 to <4 x i32>*
  %294 = load <4 x i32>, <4 x i32>* %293, align 4
  %295 = getelementptr i32, i32* %292, i64 4
  %296 = bitcast i32* %295 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4
  %298 = bitcast i32* %291 to <4 x i32>*
  store <4 x i32> %294, <4 x i32>* %298, align 4
  %299 = getelementptr i32, i32* %291, i64 4
  %300 = bitcast i32* %299 to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %300, align 4
  %301 = add i64 %256, 32
  %302 = add i64 %257, -4
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %255, !llvm.loop !100

304:                                              ; preds = %255, %244
  %305 = phi i64 [ 0, %244 ], [ %301, %255 ]
  %306 = icmp eq i64 %251, 0
  br i1 %306, label %323, label %307

307:                                              ; preds = %304, %307
  %308 = phi i64 [ %320, %307 ], [ %305, %304 ]
  %309 = phi i64 [ %321, %307 ], [ %251, %304 ]
  %310 = getelementptr i32, i32* %229, i64 %308
  %311 = getelementptr i32, i32* %1, i64 %308
  %312 = bitcast i32* %311 to <4 x i32>*
  %313 = load <4 x i32>, <4 x i32>* %312, align 4
  %314 = getelementptr i32, i32* %311, i64 4
  %315 = bitcast i32* %314 to <4 x i32>*
  %316 = load <4 x i32>, <4 x i32>* %315, align 4
  %317 = bitcast i32* %310 to <4 x i32>*
  store <4 x i32> %313, <4 x i32>* %317, align 4
  %318 = getelementptr i32, i32* %310, i64 4
  %319 = bitcast i32* %318 to <4 x i32>*
  store <4 x i32> %316, <4 x i32>* %319, align 4
  %320 = add i64 %308, 8
  %321 = add i64 %309, -1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %307, !llvm.loop !101

323:                                              ; preds = %307, %304
  %324 = icmp eq i64 %242, %245
  br i1 %324, label %335, label %325

325:                                              ; preds = %323, %237
  %326 = phi i32* [ %229, %237 ], [ %246, %323 ]
  %327 = phi i32* [ %1, %237 ], [ %247, %323 ]
  br label %328

328:                                              ; preds = %325, %328
  %329 = phi i32* [ %333, %328 ], [ %326, %325 ]
  %330 = phi i32* [ %332, %328 ], [ %327, %325 ]
  %331 = load i32, i32* %330, align 4
  store i32 %331, i32* %329, align 4
  %332 = getelementptr inbounds i32, i32* %330, i64 1
  %333 = getelementptr inbounds i32, i32* %329, i64 1
  %334 = icmp eq i32* %332, %2
  br i1 %334, label %335, label %328, !llvm.loop !102

335:                                              ; preds = %328, %323
  %336 = phi i32* [ %246, %323 ], [ %333, %328 ]
  %337 = ptrtoint i32* %336 to i64
  br label %338

338:                                              ; preds = %225, %335
  %339 = phi i64 [ %235, %225 ], [ %337, %335 ]
  store i64 %339, i64* %234, align 8
  br label %340

340:                                              ; preds = %199, %201, %338
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5angle5spirv25GetInstructionOpAndLengthEPKjPN3spv2OpEPj(i32*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.217"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.217", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !103
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.217"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #14
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.217"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #18
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.217"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector.217"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !108
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #14, !noalias !113
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !116
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !113
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !113
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector.217"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector.217"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector.217"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector.217"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #17
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #14
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #14
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.210"*, i64, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8** %2 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast i8*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 1
  %9 = bitcast i8*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %139, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to i8**
  %16 = inttoptr i64 %10 to i8*
  %17 = getelementptr inbounds i8*, i8** %15, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %137, label %19

19:                                               ; preds = %14
  %20 = bitcast i8** %2 to i64*
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %48

26:                                               ; preds = %106, %48, %19
  %27 = phi i8** [ %15, %48 ], [ %15, %19 ], [ %60, %106 ]
  %28 = ptrtoint i8** %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i8*, i8** %15, i64 %29
  %31 = ptrtoint i8** %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26, %37
  %38 = phi i8** [ %42, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %43, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %20, align 8
  %41 = bitcast i8** %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds i8*, i8** %38, i64 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !119

45:                                               ; preds = %37, %26
  %46 = phi i8** [ %27, %26 ], [ %42, %37 ]
  %47 = icmp ult i64 %32, 56
  br i1 %47, label %108, label %110

48:                                               ; preds = %19
  %49 = shl nsw i64 %1, 3
  %50 = add i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr i8*, i8** %15, i64 %52
  %54 = getelementptr i8, i8* %4, i64 1
  %55 = icmp ugt i8* %54, %16
  %56 = icmp ugt i8** %53, %2
  %57 = and i1 %55, %56
  br i1 %57, label %26, label %58

58:                                               ; preds = %48
  %59 = and i64 %24, 4611686018427387900
  %60 = getelementptr i8*, i8** %15, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %20, align 8, !alias.scope !120
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %20, align 8, !alias.scope !120
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr i8*, i8** %15, i64 %79
  %82 = bitcast i8** %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !123, !noalias !120
  %83 = getelementptr i8*, i8** %81, i64 2
  %84 = bitcast i8** %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !123, !noalias !120
  %85 = or i64 %79, 4
  %86 = getelementptr i8*, i8** %15, i64 %85
  %87 = bitcast i8** %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !123, !noalias !120
  %88 = getelementptr i8*, i8** %86, i64 2
  %89 = bitcast i8** %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !123, !noalias !120
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !125

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr i8*, i8** %15, i64 %94
  %98 = load i64, i64* %20, align 8, !alias.scope !120
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast i8** %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !123, !noalias !120
  %104 = getelementptr i8*, i8** %97, i64 2
  %105 = bitcast i8** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !123, !noalias !120
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %24, %59
  br i1 %107, label %108, label %26

108:                                              ; preds = %45, %110, %106
  %109 = ptrtoint i8** %17 to i64
  br label %137

110:                                              ; preds = %45, %110
  %111 = phi i8** [ %135, %110 ], [ %46, %45 ]
  %112 = load i64, i64* %20, align 8
  %113 = bitcast i8** %111 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds i8*, i8** %111, i64 1
  %115 = load i64, i64* %20, align 8
  %116 = bitcast i8** %114 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds i8*, i8** %111, i64 2
  %118 = load i64, i64* %20, align 8
  %119 = bitcast i8** %117 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i8*, i8** %111, i64 3
  %121 = load i64, i64* %20, align 8
  %122 = bitcast i8** %120 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds i8*, i8** %111, i64 4
  %124 = load i64, i64* %20, align 8
  %125 = bitcast i8** %123 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i8*, i8** %111, i64 5
  %127 = load i64, i64* %20, align 8
  %128 = bitcast i8** %126 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds i8*, i8** %111, i64 6
  %130 = load i64, i64* %20, align 8
  %131 = bitcast i8** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds i8*, i8** %111, i64 7
  %133 = load i64, i64* %20, align 8
  %134 = bitcast i8** %132 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i8*, i8** %111, i64 8
  %136 = icmp eq i8** %135, %17
  br i1 %136, label %108, label %110, !llvm.loop !126

137:                                              ; preds = %14, %108
  %138 = phi i64 [ %109, %108 ], [ %10, %14 ]
  store i64 %138, i64* %9, align 8
  br label %311

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector.210"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %10, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 2305843009213693951
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.210"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #18
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %7, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 1152921504606846975
  br i1 %151, label %152, label %160

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 2305843009213693951
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  tail call void @abort() #18
  unreachable

160:                                              ; preds = %148, %157
  %161 = phi i64 [ %155, %157 ], [ 2305843009213693951, %148 ]
  %162 = shl i64 %161, 3
  %163 = tail call i8* @_Znwm(i64 %162) #17
  %164 = bitcast i8* %163 to i8**
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi i8** [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds i8*, i8** %167, i64 %143
  %169 = getelementptr inbounds i8*, i8** %167, i64 %166
  %170 = getelementptr inbounds i8*, i8** %168, i64 %1
  %171 = bitcast i8** %2 to i64*
  %172 = shl nsw i64 %1, 3
  %173 = add i64 %172, -8
  %174 = lshr exact i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = icmp ult i64 %175, 4
  br i1 %176, label %239, label %177

177:                                              ; preds = %165
  %178 = bitcast i8** %168 to i8*
  %179 = shl nsw i64 %1, 3
  %180 = add i64 %179, -8
  %181 = lshr exact i64 %180, 3
  %182 = add nsw i64 %143, %181
  %183 = add nsw i64 %182, 1
  %184 = getelementptr i8*, i8** %167, i64 %183
  %185 = getelementptr i8, i8* %4, i64 1
  %186 = icmp ugt i8* %185, %178
  %187 = icmp ugt i8** %184, %2
  %188 = and i1 %186, %187
  br i1 %188, label %239, label %189

189:                                              ; preds = %177
  %190 = and i64 %175, 4611686018427387900
  %191 = getelementptr i8*, i8** %168, i64 %190
  %192 = add nsw i64 %190, -4
  %193 = lshr exact i64 %192, 2
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 1
  %196 = icmp eq i64 %192, 0
  br i1 %196, label %224, label %197

197:                                              ; preds = %189
  %198 = sub nuw nsw i64 %194, %195
  %199 = load i64, i64* %171, align 8, !alias.scope !127
  %200 = insertelement <2 x i64> undef, i64 %199, i32 0
  %201 = shufflevector <2 x i64> %200, <2 x i64> undef, <2 x i32> zeroinitializer
  %202 = insertelement <2 x i64> undef, i64 %199, i32 0
  %203 = shufflevector <2 x i64> %202, <2 x i64> undef, <2 x i32> zeroinitializer
  %204 = load i64, i64* %171, align 8, !alias.scope !127
  %205 = insertelement <2 x i64> undef, i64 %204, i32 0
  %206 = shufflevector <2 x i64> %205, <2 x i64> undef, <2 x i32> zeroinitializer
  %207 = insertelement <2 x i64> undef, i64 %204, i32 0
  %208 = shufflevector <2 x i64> %207, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %209

209:                                              ; preds = %209, %197
  %210 = phi i64 [ 0, %197 ], [ %221, %209 ]
  %211 = phi i64 [ %198, %197 ], [ %222, %209 ]
  %212 = getelementptr i8*, i8** %168, i64 %210
  %213 = bitcast i8** %212 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %213, align 8, !alias.scope !130, !noalias !127
  %214 = getelementptr i8*, i8** %212, i64 2
  %215 = bitcast i8** %214 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %215, align 8, !alias.scope !130, !noalias !127
  %216 = or i64 %210, 4
  %217 = getelementptr i8*, i8** %168, i64 %216
  %218 = bitcast i8** %217 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %218, align 8, !alias.scope !130, !noalias !127
  %219 = getelementptr i8*, i8** %217, i64 2
  %220 = bitcast i8** %219 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %220, align 8, !alias.scope !130, !noalias !127
  %221 = add i64 %210, 8
  %222 = add i64 %211, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %209, !llvm.loop !132

224:                                              ; preds = %209, %189
  %225 = phi i64 [ 0, %189 ], [ %221, %209 ]
  %226 = icmp eq i64 %195, 0
  br i1 %226, label %237, label %227

227:                                              ; preds = %224
  %228 = getelementptr i8*, i8** %168, i64 %225
  %229 = load i64, i64* %171, align 8, !alias.scope !127
  %230 = insertelement <2 x i64> undef, i64 %229, i32 0
  %231 = shufflevector <2 x i64> %230, <2 x i64> undef, <2 x i32> zeroinitializer
  %232 = insertelement <2 x i64> undef, i64 %229, i32 0
  %233 = shufflevector <2 x i64> %232, <2 x i64> undef, <2 x i32> zeroinitializer
  %234 = bitcast i8** %228 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %234, align 8, !alias.scope !130, !noalias !127
  %235 = getelementptr i8*, i8** %228, i64 2
  %236 = bitcast i8** %235 to <2 x i64>*
  store <2 x i64> %233, <2 x i64>* %236, align 8, !alias.scope !130, !noalias !127
  br label %237

237:                                              ; preds = %224, %227
  %238 = icmp eq i64 %175, %190
  br i1 %238, label %289, label %239

239:                                              ; preds = %237, %177, %165
  %240 = phi i8** [ %168, %177 ], [ %168, %165 ], [ %191, %237 ]
  %241 = ptrtoint i8** %240 to i64
  %242 = add i64 %143, %1
  %243 = add i64 %242, -1
  %244 = getelementptr i8*, i8** %167, i64 %243
  %245 = ptrtoint i8** %244 to i64
  %246 = sub i64 %245, %241
  %247 = lshr i64 %246, 3
  %248 = add nuw nsw i64 %247, 1
  %249 = and i64 %248, 7
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %239, %251
  %252 = phi i8** [ %256, %251 ], [ %240, %239 ]
  %253 = phi i64 [ %257, %251 ], [ %249, %239 ]
  %254 = load i64, i64* %171, align 8
  %255 = bitcast i8** %252 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds i8*, i8** %252, i64 1
  %257 = add i64 %253, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %251, !llvm.loop !133

259:                                              ; preds = %251, %239
  %260 = phi i8** [ %240, %239 ], [ %256, %251 ]
  %261 = icmp ult i64 %246, 56
  br i1 %261, label %289, label %262

262:                                              ; preds = %259, %262
  %263 = phi i8** [ %287, %262 ], [ %260, %259 ]
  %264 = load i64, i64* %171, align 8
  %265 = bitcast i8** %263 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds i8*, i8** %263, i64 1
  %267 = load i64, i64* %171, align 8
  %268 = bitcast i8** %266 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds i8*, i8** %263, i64 2
  %270 = load i64, i64* %171, align 8
  %271 = bitcast i8** %269 to i64*
  store i64 %270, i64* %271, align 8
  %272 = getelementptr inbounds i8*, i8** %263, i64 3
  %273 = load i64, i64* %171, align 8
  %274 = bitcast i8** %272 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds i8*, i8** %263, i64 4
  %276 = load i64, i64* %171, align 8
  %277 = bitcast i8** %275 to i64*
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds i8*, i8** %263, i64 5
  %279 = load i64, i64* %171, align 8
  %280 = bitcast i8** %278 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds i8*, i8** %263, i64 6
  %282 = load i64, i64* %171, align 8
  %283 = bitcast i8** %281 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds i8*, i8** %263, i64 7
  %285 = load i64, i64* %171, align 8
  %286 = bitcast i8** %284 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i8*, i8** %263, i64 8
  %288 = icmp eq i8** %170, %287
  br i1 %288, label %289, label %262, !llvm.loop !134

289:                                              ; preds = %259, %262, %237
  %290 = ptrtoint i8** %169 to i64
  %291 = ptrtoint i8** %170 to i64
  %292 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 0
  %293 = load i8**, i8*** %292, align 8
  %294 = load i64, i64* %9, align 8
  %295 = ptrtoint i8** %293 to i64
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 3
  %298 = sub nsw i64 0, %297
  %299 = getelementptr inbounds i8*, i8** %168, i64 %298
  %300 = ptrtoint i8** %299 to i64
  %301 = icmp sgt i64 %296, 0
  br i1 %301, label %302, label %306

302:                                              ; preds = %289
  %303 = bitcast i8** %299 to i8*
  %304 = bitcast i8** %293 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %303, i8* align 8 %304, i64 %296, i1 false) #14
  %305 = load i8**, i8*** %292, align 8
  br label %306

306:                                              ; preds = %289, %302
  %307 = phi i8** [ %293, %289 ], [ %305, %302 ]
  store i64 %300, i64* %140, align 8
  store i64 %291, i64* %9, align 8
  store i64 %290, i64* %6, align 8
  %308 = icmp eq i8** %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = bitcast i8** %307 to i8*
  tail call void @_ZdlPv(i8* %310) #17
  br label %311

311:                                              ; preds = %309, %306, %137
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.217"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.217", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.217"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #14
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.217"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #18
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #17
  %23 = bitcast %"class.std::__1::vector.217"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.217"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !135
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !135
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !135
  %28 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !140
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !143
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !143
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.217"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.217"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.217"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.217"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.217"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.217", %"class.std::__1::vector.217"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !146
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #14
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !149
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !149
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !149
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #14, !noalias !149
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !149
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !149
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !149
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !152
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !152
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !155
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !155
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !155
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !155
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !155
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !155
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #14
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle5spirv11BoxedUint32INS2_11IdRefHelperEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.223"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.223", %"class.std::__1::vector.223"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.angle::spirv::BoxedUint32"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.223", %"class.std::__1::vector.223"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.angle::spirv::BoxedUint32"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.angle::spirv::BoxedUint32"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint %"class.angle::spirv::BoxedUint32"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.223"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.223"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #17
  %54 = bitcast i8* %53 to %"class.angle::spirv::BoxedUint32"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.angle::spirv::BoxedUint32"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %57, i64 %33
  %59 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %57, i64 %56
  %60 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %58, i64 %1
  %61 = bitcast %"class.angle::spirv::BoxedUint32"* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #14
  %63 = ptrtoint %"class.angle::spirv::BoxedUint32"* %59 to i64
  %64 = ptrtoint %"class.angle::spirv::BoxedUint32"* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.223", %"class.std::__1::vector.223"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.angle::spirv::BoxedUint32"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %58, i64 %71
  %73 = ptrtoint %"class.angle::spirv::BoxedUint32"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.angle::spirv::BoxedUint32"* %72 to i8*
  %77 = bitcast %"class.angle::spirv::BoxedUint32"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.angle::spirv::BoxedUint32"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.angle::spirv::BoxedUint32"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.angle::spirv::BoxedUint32"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN2rx27ShaderInterfaceVariableInfoENS_9allocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.203"*, i64, %"struct.rx::ShaderInterfaceVariableInfo"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %2 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %139, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"struct.rx::ShaderInterfaceVariableInfo"**
  %16 = inttoptr i64 %10 to i8*
  %17 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %137, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %2 to i64*
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %48

26:                                               ; preds = %106, %48, %19
  %27 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %15, %48 ], [ %15, %19 ], [ %60, %106 ]
  %28 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %29
  %31 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26, %37
  %38 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %42, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %43, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %20, align 8
  %41 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %38, i64 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !156

45:                                               ; preds = %37, %26
  %46 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %27, %26 ], [ %42, %37 ]
  %47 = icmp ult i64 %32, 56
  br i1 %47, label %108, label %110

48:                                               ; preds = %19
  %49 = shl nsw i64 %1, 3
  %50 = add i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %52
  %54 = getelementptr i8, i8* %4, i64 1
  %55 = icmp ugt i8* %54, %16
  %56 = icmp ugt %"struct.rx::ShaderInterfaceVariableInfo"** %53, %2
  %57 = and i1 %55, %56
  br i1 %57, label %26, label %58

58:                                               ; preds = %48
  %59 = and i64 %24, 4611686018427387900
  %60 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %20, align 8, !alias.scope !157
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %20, align 8, !alias.scope !157
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %79
  %82 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !160, !noalias !157
  %83 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %81, i64 2
  %84 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !160, !noalias !157
  %85 = or i64 %79, 4
  %86 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %85
  %87 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !160, !noalias !157
  %88 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %86, i64 2
  %89 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !160, !noalias !157
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !162

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %15, i64 %94
  %98 = load i64, i64* %20, align 8, !alias.scope !157
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !160, !noalias !157
  %104 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %97, i64 2
  %105 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !160, !noalias !157
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %24, %59
  br i1 %107, label %108, label %26

108:                                              ; preds = %45, %110, %106
  %109 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %17 to i64
  br label %137

110:                                              ; preds = %45, %110
  %111 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %135, %110 ], [ %46, %45 ]
  %112 = load i64, i64* %20, align 8
  %113 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %111 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 1
  %115 = load i64, i64* %20, align 8
  %116 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %114 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 2
  %118 = load i64, i64* %20, align 8
  %119 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %117 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 3
  %121 = load i64, i64* %20, align 8
  %122 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %120 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 4
  %124 = load i64, i64* %20, align 8
  %125 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %123 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 5
  %127 = load i64, i64* %20, align 8
  %128 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %126 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 6
  %130 = load i64, i64* %20, align 8
  %131 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 7
  %133 = load i64, i64* %20, align 8
  %134 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %132 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %111, i64 8
  %136 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"** %135, %17
  br i1 %136, label %108, label %110, !llvm.loop !163

137:                                              ; preds = %14, %108
  %138 = phi i64 [ %109, %108 ], [ %10, %14 ]
  store i64 %138, i64* %9, align 8
  br label %311

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector.203"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %10, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 2305843009213693951
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.203"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #18
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %7, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 1152921504606846975
  br i1 %151, label %152, label %160

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 2305843009213693951
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  tail call void @abort() #18
  unreachable

160:                                              ; preds = %148, %157
  %161 = phi i64 [ %155, %157 ], [ 2305843009213693951, %148 ]
  %162 = shl i64 %161, 3
  %163 = tail call i8* @_Znwm(i64 %162) #17
  %164 = bitcast i8* %163 to %"struct.rx::ShaderInterfaceVariableInfo"**
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %167, i64 %143
  %169 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %167, i64 %166
  %170 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %168, i64 %1
  %171 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %2 to i64*
  %172 = shl nsw i64 %1, 3
  %173 = add i64 %172, -8
  %174 = lshr exact i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = icmp ult i64 %175, 4
  br i1 %176, label %239, label %177

177:                                              ; preds = %165
  %178 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %168 to i8*
  %179 = shl nsw i64 %1, 3
  %180 = add i64 %179, -8
  %181 = lshr exact i64 %180, 3
  %182 = add nsw i64 %143, %181
  %183 = add nsw i64 %182, 1
  %184 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %167, i64 %183
  %185 = getelementptr i8, i8* %4, i64 1
  %186 = icmp ugt i8* %185, %178
  %187 = icmp ugt %"struct.rx::ShaderInterfaceVariableInfo"** %184, %2
  %188 = and i1 %186, %187
  br i1 %188, label %239, label %189

189:                                              ; preds = %177
  %190 = and i64 %175, 4611686018427387900
  %191 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %168, i64 %190
  %192 = add nsw i64 %190, -4
  %193 = lshr exact i64 %192, 2
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 1
  %196 = icmp eq i64 %192, 0
  br i1 %196, label %224, label %197

197:                                              ; preds = %189
  %198 = sub nuw nsw i64 %194, %195
  %199 = load i64, i64* %171, align 8, !alias.scope !164
  %200 = insertelement <2 x i64> undef, i64 %199, i32 0
  %201 = shufflevector <2 x i64> %200, <2 x i64> undef, <2 x i32> zeroinitializer
  %202 = insertelement <2 x i64> undef, i64 %199, i32 0
  %203 = shufflevector <2 x i64> %202, <2 x i64> undef, <2 x i32> zeroinitializer
  %204 = load i64, i64* %171, align 8, !alias.scope !164
  %205 = insertelement <2 x i64> undef, i64 %204, i32 0
  %206 = shufflevector <2 x i64> %205, <2 x i64> undef, <2 x i32> zeroinitializer
  %207 = insertelement <2 x i64> undef, i64 %204, i32 0
  %208 = shufflevector <2 x i64> %207, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %209

209:                                              ; preds = %209, %197
  %210 = phi i64 [ 0, %197 ], [ %221, %209 ]
  %211 = phi i64 [ %198, %197 ], [ %222, %209 ]
  %212 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %168, i64 %210
  %213 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %212 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %213, align 8, !alias.scope !167, !noalias !164
  %214 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %212, i64 2
  %215 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %214 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %215, align 8, !alias.scope !167, !noalias !164
  %216 = or i64 %210, 4
  %217 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %168, i64 %216
  %218 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %217 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %218, align 8, !alias.scope !167, !noalias !164
  %219 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %217, i64 2
  %220 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %219 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %220, align 8, !alias.scope !167, !noalias !164
  %221 = add i64 %210, 8
  %222 = add i64 %211, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %209, !llvm.loop !169

224:                                              ; preds = %209, %189
  %225 = phi i64 [ 0, %189 ], [ %221, %209 ]
  %226 = icmp eq i64 %195, 0
  br i1 %226, label %237, label %227

227:                                              ; preds = %224
  %228 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %168, i64 %225
  %229 = load i64, i64* %171, align 8, !alias.scope !164
  %230 = insertelement <2 x i64> undef, i64 %229, i32 0
  %231 = shufflevector <2 x i64> %230, <2 x i64> undef, <2 x i32> zeroinitializer
  %232 = insertelement <2 x i64> undef, i64 %229, i32 0
  %233 = shufflevector <2 x i64> %232, <2 x i64> undef, <2 x i32> zeroinitializer
  %234 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %228 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %234, align 8, !alias.scope !167, !noalias !164
  %235 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %228, i64 2
  %236 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %235 to <2 x i64>*
  store <2 x i64> %233, <2 x i64>* %236, align 8, !alias.scope !167, !noalias !164
  br label %237

237:                                              ; preds = %224, %227
  %238 = icmp eq i64 %175, %190
  br i1 %238, label %289, label %239

239:                                              ; preds = %237, %177, %165
  %240 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %168, %177 ], [ %168, %165 ], [ %191, %237 ]
  %241 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %240 to i64
  %242 = add i64 %143, %1
  %243 = add i64 %242, -1
  %244 = getelementptr %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %167, i64 %243
  %245 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %244 to i64
  %246 = sub i64 %245, %241
  %247 = lshr i64 %246, 3
  %248 = add nuw nsw i64 %247, 1
  %249 = and i64 %248, 7
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %239, %251
  %252 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %256, %251 ], [ %240, %239 ]
  %253 = phi i64 [ %257, %251 ], [ %249, %239 ]
  %254 = load i64, i64* %171, align 8
  %255 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %252 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %252, i64 1
  %257 = add i64 %253, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %251, !llvm.loop !170

259:                                              ; preds = %251, %239
  %260 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %240, %239 ], [ %256, %251 ]
  %261 = icmp ult i64 %246, 56
  br i1 %261, label %289, label %262

262:                                              ; preds = %259, %262
  %263 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %287, %262 ], [ %260, %259 ]
  %264 = load i64, i64* %171, align 8
  %265 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %263 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 1
  %267 = load i64, i64* %171, align 8
  %268 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %266 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 2
  %270 = load i64, i64* %171, align 8
  %271 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %269 to i64*
  store i64 %270, i64* %271, align 8
  %272 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 3
  %273 = load i64, i64* %171, align 8
  %274 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %272 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 4
  %276 = load i64, i64* %171, align 8
  %277 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %275 to i64*
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 5
  %279 = load i64, i64* %171, align 8
  %280 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %278 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 6
  %282 = load i64, i64* %171, align 8
  %283 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %281 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 7
  %285 = load i64, i64* %171, align 8
  %286 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %284 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %263, i64 8
  %288 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"** %170, %287
  br i1 %288, label %289, label %262, !llvm.loop !171

289:                                              ; preds = %259, %262, %237
  %290 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %169 to i64
  %291 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %170 to i64
  %292 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %0, i64 0, i32 0, i32 0
  %293 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %292, align 8
  %294 = load i64, i64* %9, align 8
  %295 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %293 to i64
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 3
  %298 = sub nsw i64 0, %297
  %299 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %168, i64 %298
  %300 = ptrtoint %"struct.rx::ShaderInterfaceVariableInfo"** %299 to i64
  %301 = icmp sgt i64 %296, 0
  br i1 %301, label %302, label %306

302:                                              ; preds = %289
  %303 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %299 to i8*
  %304 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %293 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %303, i8* align 8 %304, i64 %296, i1 false) #14
  %305 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %292, align 8
  br label %306

306:                                              ; preds = %289, %302
  %307 = phi %"struct.rx::ShaderInterfaceVariableInfo"** [ %293, %289 ], [ %305, %302 ]
  store i64 %300, i64* %140, align 8
  store i64 %291, i64* %9, align 8
  store i64 %290, i64* %6, align 8
  %308 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"** %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"** %307 to i8*
  tail call void @_ZdlPv(i8* %310) #17
  br label %311

311:                                              ; preds = %309, %306, %137
  ret void
}

declare void @_ZN5angle5spirv13ParseDecorateEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv10DecorationEPNS_10FastVectorINS3_INS0_20LiteralIntegerHelperEEELm8ENSt3__15arrayISC_Lm8EEEEE(i32*, %"class.angle::spirv::BoxedUint32"*, i32*, %"class.angle::FastVector.271"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv9ParseNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKc(i32*, %"class.angle::spirv::BoxedUint32"*, i8**) local_unnamed_addr #4

declare zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8*, i8*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15ParseMemberNameEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEEPPKc(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32.273"*, i8**) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #11

declare void @_ZN5angle5spirv14ParseTypeArrayEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv14ParseTypeFloatEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32.273"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv12ParseTypeIntEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEES9_(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv16ParseTypePointerEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv12StorageClassES6_(i32*, %"class.angle::spirv::BoxedUint32"*, i32*, %"class.angle::spirv::BoxedUint32"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15ParseTypeVectorEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PNS3_INS0_20LiteralIntegerHelperEEE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32.273"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv13ParseVariableEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv12StorageClassES6_(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, i32*, %"class.angle::spirv::BoxedUint32"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2gl13IsBuiltInNameEPKc(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator15visitXfbVaryingERKNS_30ShaderInterfaceVariableXfbInfoEN5angle5spirv11BoxedUint32INS6_11IdRefHelperEEEj(%"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 8, i32 0, i32 0
  %6 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %5, align 8
  %7 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 8, i32 0, i32 1
  %8 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %7, align 8
  %9 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %6, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %14, %4
  %11 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %93, label %18

14:                                               ; preds = %4, %14
  %15 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %16, %14 ], [ %6, %4 ]
  tail call fastcc void @_ZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator15visitXfbVaryingERKNS_30ShaderInterfaceVariableXfbInfoEN5angle5spirv11BoxedUint32INS6_11IdRefHelperEEEj(%"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %0, %"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56) %15, i32 %2, i32 %3)
  %16 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %15, i64 1
  %17 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %16, %8
  br i1 %17, label %10, label %14

18:                                               ; preds = %10
  %19 = zext i32 %12 to i64
  %20 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator", %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %0, i64 0, i32 18, i32 0, i64 %19
  %21 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator", %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %0, i64 0, i32 18, i32 0, i64 %19, i32 0, i32 1
  %22 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %21, align 8
  %23 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator", %"class.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator"* %0, i64 0, i32 18, i32 0, i64 %19, i32 0, i32 2, i32 0, i32 0
  %24 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %23, align 8
  %25 = icmp ult %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %22, %24
  %26 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %24 to i64
  br i1 %25, label %27, label %34

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %22, i64 0, i32 0
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %28, align 8
  %29 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %22, i64 0, i32 1, i32 0, i32 0
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %22, i64 0, i32 2
  store i32 %3, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %22, i64 1
  %32 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i64
  %33 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %21 to i64*
  store i64 %32, i64* %33, align 8
  br label %93

34:                                               ; preds = %18
  %35 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %22 to i64
  %36 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %21 to i64*
  %37 = bitcast %"class.std::__1::vector.233"* %20 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = ashr exact i64 %39, 4
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 1152921504606846975
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::vector.233"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #18
  unreachable

45:                                               ; preds = %34
  %46 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %23 to i64*
  %47 = sub i64 %26, %38
  %48 = ashr exact i64 %47, 4
  %49 = icmp ult i64 %48, 576460752303423487
  br i1 %49, label %50, label %58

50:                                               ; preds = %45
  %51 = ashr exact i64 %47, 3
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 1152921504606846975
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #18
  unreachable

58:                                               ; preds = %55, %45
  %59 = phi i64 [ %53, %55 ], [ 1152921504606846975, %45 ]
  %60 = shl i64 %59, 4
  %61 = tail call i8* @_Znwm(i64 %60) #17
  %62 = bitcast i8* %61 to %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %65, i64 %40
  %67 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %65, i64 %64
  %68 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %67 to i64
  %69 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %66, i64 0, i32 0
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %69, align 8
  %70 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %65, i64 %40, i32 1, i32 0, i32 0
  store i32 %2, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %65, i64 %40, i32 2
  store i32 %3, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %66, i64 1
  %73 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.233", %"class.std::__1::vector.233"* %20, i64 0, i32 0, i32 0
  %75 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %74, align 8
  %76 = load i64, i64* %36, align 8
  %77 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 4
  %80 = sub nsw i64 0, %79
  %81 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %66, i64 %80
  %82 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %81 to i64
  %83 = icmp sgt i64 %78, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %63
  %85 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %81 to i8*
  %86 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 %78, i1 false) #14
  %87 = load %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"** %74, align 8
  br label %88

88:                                               ; preds = %84, %63
  %89 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %75, %63 ], [ %87, %84 ]
  store i64 %82, i64* %37, align 8
  store i64 %73, i64* %36, align 8
  store i64 %68, i64* %46, align 8
  %90 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %89 to i8*
  tail call void @_ZdlPv(i8* %92) #17
  br label %93

93:                                               ; preds = %91, %88, %27, %10
  ret void
}

declare void @_ZN5angle5spirv13ParseFunctionEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PN3spv19FunctionControlMaskES6_(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, i32*, %"class.angle::spirv::BoxedUint32"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv14WriteTypeFloatEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"*, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv15WriteTypeVectorEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv16WriteTypePointerEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv12StorageClassES9_(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv12WriteTypeIntEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEESB_(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv13WriteConstantEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_NS7_INS0_20LiteralIntegerHelperEEE(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv22WriteConstantCompositeEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, %"class.angle::FastVector.278"* dereferenceable(56)) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"*, i32, i32, i32, i32*) local_unnamed_addr #4

declare void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"*, i32, i32, i32*) local_unnamed_addr #4

declare void @_ZN5angle5spirv16ParseAccessChainEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_PNS_10FastVectorIS5_Lm8ENSt3__15arrayIS5_Lm8EEEEE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::FastVector.278"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, i32, %"class.angle::FastVector.278"* dereferenceable(56)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_116SpirvTransformer19writeOutputPrologueEv(%"class.rx::(anonymous namespace)::SpirvTransformer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.angle::FastVector.271", align 8
  %3 = alloca %"class.angle::FastVector.271", align 8
  %4 = alloca %"class.angle::FastVector.271", align 8
  %5 = alloca %"class.angle::FastVector.271", align 8
  %6 = alloca %"class.angle::FastVector.278", align 8
  %7 = alloca %"class.angle::FastVector.278", align 8
  %8 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %12 = or i8 %9, 1
  %13 = icmp eq i8 %12, 5
  br i1 %13, label %79, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 5
  %16 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 0, i32 5, i32 0, i32 1
  %17 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.203"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %24, label %79

24:                                               ; preds = %14
  %25 = zext i8 %9 to i32
  %26 = shl i32 1, %25
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  br label %32

32:                                               ; preds = %71, %24
  %33 = phi i64 [ %20, %24 ], [ %72, %71 ]
  %34 = phi i64 [ %18, %24 ], [ %73, %71 ]
  %35 = phi i64 [ 1, %24 ], [ %75, %71 ]
  %36 = phi i32 [ 1, %24 ], [ %74, %71 ]
  %37 = inttoptr i64 %33 to %"struct.rx::ShaderInterfaceVariableInfo"**
  %38 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %37, i64 %35
  %39 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %38, align 8
  %40 = icmp eq %"struct.rx::ShaderInterfaceVariableInfo"* %39, null
  br i1 %40, label %71, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 9
  %43 = load i8, i8* %42, align 8, !range !22
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 5, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = and i8 %47, %27
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %71, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 11
  %52 = load i8, i8* %51, align 2, !range !22
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %71, label %54

54:                                               ; preds = %50
  %55 = load i32*, i32** %28, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 3
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  %59 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %29, align 8
  %60 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %59, i64 %35, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %30, align 8
  %64 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %63, i64 %62, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  tail call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %11, i32 %65, i32 %57, i32 %36, i32* null) #14
  %66 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %31, align 8
  %67 = getelementptr inbounds %"class.angle::spirv::BoxedUint32", %"class.angle::spirv::BoxedUint32"* %66, i64 %35, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  tail call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %11, i32 %68, i32 %57, i32* null) #14
  %69 = load i64, i64* %17, align 8
  %70 = load i64, i64* %19, align 8
  br label %71

71:                                               ; preds = %54, %50, %45, %41, %32
  %72 = phi i64 [ %33, %45 ], [ %33, %50 ], [ %33, %41 ], [ %33, %32 ], [ %70, %54 ]
  %73 = phi i64 [ %34, %45 ], [ %34, %50 ], [ %34, %41 ], [ %34, %32 ], [ %69, %54 ]
  %74 = add i32 %36, 1
  %75 = zext i32 %74 to i64
  %76 = sub i64 %73, %72
  %77 = ashr exact i64 %76, 3
  %78 = icmp ugt i64 %77, %75
  br i1 %78, label %32, label %79

79:                                               ; preds = %71, %1, %14
  %80 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 12, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %306, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, -5
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 4
  %90 = load i8, i8* %89, align 1, !range !22
  %91 = icmp ne i8 %90, 0
  br label %92

92:                                               ; preds = %88, %83
  %93 = phi i1 [ true, %83 ], [ %91, %88 ]
  %94 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 7
  %95 = load i8, i8* %94, align 4, !range !22
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 1, i32 8
  %99 = load i8, i8* %98, align 1, !range !22
  %100 = icmp eq i8 %99, 0
  br label %101

101:                                              ; preds = %92, %97
  %102 = phi i1 [ false, %92 ], [ %100, %97 ]
  %103 = or i1 %93, %102
  br i1 %103, label %104, label %306

104:                                              ; preds = %101
  %105 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %105, i64 0, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 3
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %111, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 3
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %118 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 6, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = load i32, i32* %80, align 8
  %121 = bitcast %"class.angle::FastVector.278"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %121) #14
  %122 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 32, i1 false) #14
  %124 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %7, i64 0, i32 1
  %125 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %7, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32"* %125, %"class.angle::spirv::BoxedUint32"** %124, align 8
  %126 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %7, i64 0, i32 2
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %127, align 8
  %128 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %7, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 %123, i32* %128, align 8
  call void @_ZN5angle5spirv16WriteAccessChainEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %117, i32 %119, i32 %109, i32 %120, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %7) #14
  store i64 0, i64* %126, align 8
  %129 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %124, align 8
  %130 = icmp eq %"class.angle::spirv::BoxedUint32"* %129, %125
  %131 = icmp eq %"class.angle::spirv::BoxedUint32"* %129, null
  %132 = or i1 %130, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %104
  %134 = bitcast %"class.angle::spirv::BoxedUint32"* %129 to i8*
  call void @_ZdaPv(i8* %134) #17
  br label %135

135:                                              ; preds = %104, %133
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %121) #14
  %136 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %137 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %136, i32 %138, i32 %115, i32 %109, i32* null) #14
  br i1 %102, label %139, label %149

139:                                              ; preds = %135
  %140 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %141 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 0
  %142 = load i8, i8* %141, align 8, !range !22
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 10, i32 2, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %140, i32 %146, i32 %115, i32* null) #14
  br label %149

149:                                              ; preds = %148, %144, %139, %135
  br i1 %93, label %150, label %306

150:                                              ; preds = %149
  %151 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %151, i64 0, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 3
  %155 = load i32, i32* %154, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %154, align 4
  %157 = load i32*, i32** %152, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 3
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %158, align 4
  %161 = load i32*, i32** %152, align 8
  %162 = getelementptr inbounds i32, i32* %161, i64 3
  %163 = load i32, i32* %162, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %162, align 4
  %165 = load i32*, i32** %152, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 3
  %167 = load i32, i32* %166, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %166, align 4
  %169 = load i32*, i32** %152, align 8
  %170 = getelementptr inbounds i32, i32* %169, i64 3
  %171 = load i32, i32* %170, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %170, align 4
  %173 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 4, i32 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = bitcast %"class.angle::FastVector.271"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %175) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 0, i64 32, i1 false) #14
  %176 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %2, i64 0, i32 1
  %177 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %2, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32.273"* %177, %"class.angle::spirv::BoxedUint32.273"** %176, align 8
  %178 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %2, i64 0, i32 2
  %179 = bitcast i64* %178 to <2 x i64>*
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %179, align 8
  %180 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %2, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 0, i32* %180, align 8
  call void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %151, i32 %174, i32 %155, i32 %115, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %2) #14
  store i64 0, i64* %178, align 8
  %181 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %176, align 8
  %182 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %181, %177
  %183 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %181, null
  %184 = or i1 %182, %183
  br i1 %184, label %187, label %185

185:                                              ; preds = %150
  %186 = bitcast %"class.angle::spirv::BoxedUint32.273"* %181 to i8*
  call void @_ZdaPv(i8* %186) #17
  br label %187

187:                                              ; preds = %185, %150
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %175) #14
  %188 = load i32, i32* %173, align 8
  %189 = bitcast %"class.angle::FastVector.271"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %189) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 32, i1 false) #14
  %190 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %3, i64 0, i32 1
  %191 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %3, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32.273"* %191, %"class.angle::spirv::BoxedUint32.273"** %190, align 8
  %192 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %3, i64 0, i32 2
  %193 = bitcast i64* %192 to <2 x i64>*
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %193, align 8
  %194 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %3, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 1, i32* %194, align 8
  call void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %151, i32 %188, i32 %159, i32 %115, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %3) #14
  store i64 0, i64* %192, align 8
  %195 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %190, align 8
  %196 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %195, %191
  %197 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %195, null
  %198 = or i1 %196, %197
  br i1 %198, label %201, label %199

199:                                              ; preds = %187
  %200 = bitcast %"class.angle::spirv::BoxedUint32.273"* %195 to i8*
  call void @_ZdaPv(i8* %200) #17
  br label %201

201:                                              ; preds = %199, %187
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %189) #14
  %202 = load i32, i32* %173, align 8
  %203 = bitcast %"class.angle::FastVector.271"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %203) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 0, i64 32, i1 false) #14
  %204 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %4, i64 0, i32 1
  %205 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %4, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32.273"* %205, %"class.angle::spirv::BoxedUint32.273"** %204, align 8
  %206 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %4, i64 0, i32 2
  %207 = bitcast i64* %206 to <2 x i64>*
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %207, align 8
  %208 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %4, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 2, i32* %208, align 8
  call void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %151, i32 %202, i32 %163, i32 %115, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %4) #14
  store i64 0, i64* %206, align 8
  %209 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %204, align 8
  %210 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %209, %205
  %211 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %209, null
  %212 = or i1 %210, %211
  br i1 %212, label %215, label %213

213:                                              ; preds = %201
  %214 = bitcast %"class.angle::spirv::BoxedUint32.273"* %209 to i8*
  call void @_ZdaPv(i8* %214) #17
  br label %215

215:                                              ; preds = %213, %201
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %203) #14
  %216 = load i32, i32* %173, align 8
  %217 = bitcast %"class.angle::FastVector.271"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %217) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 0, i64 32, i1 false) #14
  %218 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %5, i64 0, i32 1
  %219 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %5, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32.273"* %219, %"class.angle::spirv::BoxedUint32.273"** %218, align 8
  %220 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %5, i64 0, i32 2
  %221 = bitcast i64* %220 to <2 x i64>*
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %221, align 8
  %222 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %5, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 3, i32* %222, align 8
  call void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %151, i32 %216, i32 %167, i32 %115, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %5) #14
  store i64 0, i64* %220, align 8
  %223 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %218, align 8
  %224 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %223, %219
  %225 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %223, null
  %226 = or i1 %224, %225
  br i1 %226, label %229, label %227

227:                                              ; preds = %215
  %228 = bitcast %"class.angle::spirv::BoxedUint32.273"* %223 to i8*
  call void @_ZdaPv(i8* %228) #17
  br label %229

229:                                              ; preds = %227, %215
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %217) #14
  %230 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 11, i32 0, i32 2
  %231 = load i32, i32* %230, align 4
  switch i32 %231, label %266 [
    i32 0, label %232
    i32 4, label %233
    i32 1, label %243
    i32 5, label %243
    i32 2, label %249
    i32 6, label %249
    i32 3, label %260
    i32 7, label %260
  ]

232:                                              ; preds = %229
  br label %266

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 11, i32 0, i32 3
  %235 = load i8, i8* %234, align 4, !range !22
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %266

237:                                              ; preds = %233
  %238 = load i32*, i32** %152, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 3
  %240 = load i32, i32* %239, align 4
  %241 = add i32 %240, 1
  store i32 %241, i32* %239, align 4
  %242 = load i32, i32* %173, align 8
  call void @_ZN5angle5spirv12WriteFNegateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %151, i32 %242, i32 %240, i32 %159) #14
  br label %266

243:                                              ; preds = %229, %229
  %244 = load i32*, i32** %152, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 3
  %246 = load i32, i32* %245, align 4
  %247 = add i32 %246, 1
  store i32 %247, i32* %245, align 4
  %248 = load i32, i32* %173, align 8
  call void @_ZN5angle5spirv12WriteFNegateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %151, i32 %248, i32 %246, i32 %155) #14
  br label %266

249:                                              ; preds = %229, %229
  %250 = load i32*, i32** %152, align 8
  %251 = getelementptr inbounds i32, i32* %250, i64 3
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %251, align 4
  %254 = load i32*, i32** %152, align 8
  %255 = getelementptr inbounds i32, i32* %254, i64 3
  %256 = load i32, i32* %255, align 4
  %257 = add i32 %256, 1
  store i32 %257, i32* %255, align 4
  %258 = load i32, i32* %173, align 8
  call void @_ZN5angle5spirv12WriteFNegateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %151, i32 %258, i32 %252, i32 %155) #14
  %259 = load i32, i32* %173, align 8
  call void @_ZN5angle5spirv12WriteFNegateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %151, i32 %259, i32 %256, i32 %159) #14
  br label %266

260:                                              ; preds = %229, %229
  %261 = load i32*, i32** %152, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 3
  %263 = load i32, i32* %262, align 4
  %264 = add i32 %263, 1
  store i32 %264, i32* %262, align 4
  %265 = load i32, i32* %173, align 8
  call void @_ZN5angle5spirv12WriteFNegateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %151, i32 %265, i32 %263, i32 %159) #14
  br label %266

266:                                              ; preds = %260, %249, %243, %237, %233, %232, %229
  %267 = phi i32 [ 0, %229 ], [ %263, %260 ], [ %252, %249 ], [ %159, %243 ], [ %155, %237 ], [ %155, %232 ], [ %155, %233 ]
  %268 = phi i32 [ 0, %229 ], [ %155, %260 ], [ %256, %249 ], [ %246, %243 ], [ %240, %237 ], [ %159, %232 ], [ %159, %233 ]
  %269 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 11, i32 0, i32 4
  %270 = load i8, i8* %269, align 1, !range !22
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %285, label %272

272:                                              ; preds = %266
  %273 = load i32*, i32** %152, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 3
  %275 = load i32, i32* %274, align 4
  %276 = add i32 %275, 1
  store i32 %276, i32* %274, align 4
  %277 = load i32*, i32** %152, align 8
  %278 = getelementptr inbounds i32, i32* %277, i64 3
  %279 = load i32, i32* %278, align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %278, align 4
  %281 = load i32, i32* %173, align 8
  call void @_ZN5angle5spirv9WriteFAddEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_(%"class.std::__1::vector"* %151, i32 %281, i32 %275, i32 %163, i32 %167) #14
  %282 = load i32, i32* %173, align 8
  %283 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvTransformer", %"class.rx::(anonymous namespace)::SpirvTransformer"* %0, i64 0, i32 6, i32 10, i32 0, i32 0
  %284 = load i32, i32* %283, align 8
  call void @_ZN5angle5spirv9WriteFMulEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_(%"class.std::__1::vector"* %151, i32 %282, i32 %279, i32 %275, i32 %284) #14
  br label %285

285:                                              ; preds = %272, %266
  %286 = phi i32 [ %279, %272 ], [ %163, %266 ]
  %287 = load i32, i32* %137, align 4
  %288 = bitcast %"class.angle::FastVector.278"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %288) #14
  %289 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 4
  %290 = bitcast %"class.angle::spirv::BoxedUint32"* %289 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 0, i64 16, i1 false) #14
  %291 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 1
  %292 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32"* %292, %"class.angle::spirv::BoxedUint32"** %291, align 8
  %293 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 2
  %294 = bitcast i64* %293 to <2 x i64>*
  store <2 x i64> <i64 4, i64 8>, <2 x i64>* %294, align 8
  %295 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 %267, i32* %295, align 8
  %296 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0
  store i32 %268, i32* %296, align 4
  %297 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 2, i32 0, i32 0
  store i32 %286, i32* %297, align 8
  %298 = getelementptr inbounds %"class.angle::FastVector.278", %"class.angle::FastVector.278"* %6, i64 0, i32 0, i32 0, i64 3, i32 0, i32 0
  store i32 %167, i32* %298, align 4
  call void @_ZN5angle5spirv23WriteCompositeConstructEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"* %151, i32 %287, i32 %171, %"class.angle::FastVector.278"* nonnull dereferenceable(56) %6) #14
  store i64 0, i64* %293, align 8
  %299 = load %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"** %291, align 8
  %300 = icmp eq %"class.angle::spirv::BoxedUint32"* %299, %292
  %301 = icmp eq %"class.angle::spirv::BoxedUint32"* %299, null
  %302 = or i1 %300, %301
  br i1 %302, label %305, label %303

303:                                              ; preds = %285
  %304 = bitcast %"class.angle::spirv::BoxedUint32"* %299 to i8*
  call void @_ZdaPv(i8* %304) #17
  br label %305

305:                                              ; preds = %285, %303
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %288) #14
  call void @_ZN5angle5spirv10WriteStoreEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %151, i32 %109, i32 %171, i32* null) #14
  br label %306

306:                                              ; preds = %79, %101, %305, %149
  ret void
}

declare void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, i32, %"class.angle::FastVector.271"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv23WriteCompositeConstructEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, %"class.angle::FastVector.278"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv12WriteFNegateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv9WriteFAddEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_(%"class.std::__1::vector"*, i32, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv9WriteFMulEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_(%"class.std::__1::vector"*, i32, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv9WriteIAddEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_(%"class.std::__1::vector"*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %496, %2
  %4 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %1, %2 ], [ %464, %496 ]
  %5 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %0, %2 ], [ %30, %496 ]
  %6 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4 to i64
  %7 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7, i64 0, i32 0
  %9 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i8*
  %10 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i64*
  %11 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  %13 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i8*
  %14 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i64*
  %15 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  %17 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i8*
  %18 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i64*
  %19 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  %21 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7, i64 0, i32 0
  %22 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i8*
  %23 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7 to i64*
  %24 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  %26 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4 to i64
  br label %27

27:                                               ; preds = %505, %3
  %28 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %5, %3 ], [ %506, %505 ]
  br label %29

29:                                               ; preds = %383, %27
  %30 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %28, %27 ], [ %366, %383 ]
  %31 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i64
  %32 = sub i64 %6, %31
  %33 = ashr exact i64 %32, 4
  switch i64 %33, label %138 [
    i64 0, label %509
    i64 1, label %509
    i64 2, label %34
    i64 3, label %56
    i64 4, label %127
    i64 5, label %132
  ]

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1
  %36 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %35, i64 0, i32 0
  %37 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %36, align 8
  %38 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 0
  %41 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %40, align 8
  %42 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %39, %43
  br i1 %44, label %45, label %509

45:                                               ; preds = %34
  %46 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %41 to i64
  %47 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  %52 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false) #14
  %53 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %35 to i64*
  store i64 %46, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  store i32 %48, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  store i32 %50, i32* %55, align 4
  br label %509

56:                                               ; preds = %29
  %57 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1
  %58 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1
  %59 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %57, i64 0, i32 0
  %60 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %59, align 8
  %61 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 0
  %64 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %63, align 8
  %65 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp ult i32 %62, %66
  %68 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58, i64 0, i32 0
  %69 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %68, align 8
  %70 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp ult i32 %71, %62
  %73 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %60 to i64
  %74 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %64 to i64
  br i1 %67, label %101, label %75

75:                                               ; preds = %56
  br i1 %72, label %76, label %509

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 1, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %57 to i8*
  %82 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #14
  %83 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58 to i64*
  store i64 %73, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  store i32 %78, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  store i32 %80, i32* %85, align 4
  %86 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %59, align 8
  %87 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %86, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %63, align 8
  %90 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %89, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp ult i32 %88, %91
  br i1 %92, label %93, label %509

93:                                               ; preds = %76
  %94 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %89 to i64
  %95 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %57 to i64*
  %96 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %81, i64 16, i1 false) #14
  store i64 %94, i64* %95, align 8
  store i32 %97, i32* %77, align 8
  store i32 %99, i32* %79, align 4
  br label %509

101:                                              ; preds = %56
  %102 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  br i1 %72, label %107, label %112

107:                                              ; preds = %101
  %108 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %108, i64 16, i1 false) #14
  %109 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58 to i64*
  store i64 %74, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  store i32 %103, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  store i32 %105, i32* %111, align 4
  br label %509

112:                                              ; preds = %101
  %113 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %113, i64 16, i1 false) #14
  %114 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %57 to i64*
  store i64 %74, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 1, i32 0, i32 0
  store i32 %103, i32* %115, align 8
  %116 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 2
  store i32 %105, i32* %116, align 4
  %117 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %68, align 8
  %118 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = load i32, i32* %65, align 4
  %121 = icmp ult i32 %119, %120
  br i1 %121, label %122, label %509

122:                                              ; preds = %112
  %123 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %123, i64 16, i1 false) #14
  %124 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %58 to i64*
  store i64 %74, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 1, i32 0, i32 0
  store i32 %103, i32* %125, align 8
  %126 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1, i32 2
  store i32 %105, i32* %126, align 4
  br label %509

127:                                              ; preds = %29
  %128 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1
  %129 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2
  %130 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1
  %131 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %128, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %129, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %130)
  br label %509

132:                                              ; preds = %29
  %133 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1
  %134 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2
  %135 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 3
  %136 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 -1
  %137 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %133, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %134, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %135, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %136)
  br label %509

138:                                              ; preds = %29
  %139 = icmp slt i64 %32, 496
  br i1 %139, label %140, label %250

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2
  %142 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1
  %143 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %142, i64 0, i32 0
  %144 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %143, align 8
  %145 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %144, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 0
  %148 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %147, align 8
  %149 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %148, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp ult i32 %146, %150
  %152 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141, i64 0, i32 0
  %153 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %152, align 8
  %154 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %153, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = icmp ult i32 %155, %146
  %157 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %144 to i64
  %158 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %148 to i64
  br i1 %151, label %182, label %159

159:                                              ; preds = %140
  br i1 %156, label %160, label %206

160:                                              ; preds = %159
  %161 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 1, i32 0, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %142 to i8*
  %166 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 16, i1 false) #14
  %167 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141 to i64*
  store i64 %157, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2, i32 1, i32 0, i32 0
  store i32 %162, i32* %168, align 8
  %169 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2, i32 2
  store i32 %164, i32* %169, align 4
  %170 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %143, align 8
  %171 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %170, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = load i32, i32* %149, align 4
  %174 = icmp ult i32 %172, %173
  br i1 %174, label %175, label %206

175:                                              ; preds = %160
  %176 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %142 to i64*
  %177 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %180 = load i32, i32* %179, align 4
  %181 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %165, i64 16, i1 false) #14
  store i64 %158, i64* %176, align 8
  store i32 %178, i32* %161, align 8
  store i32 %180, i32* %163, align 4
  br label %206

182:                                              ; preds = %140
  %183 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  br i1 %156, label %188, label %193

188:                                              ; preds = %182
  %189 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %189, i64 16, i1 false) #14
  %190 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141 to i64*
  store i64 %158, i64* %190, align 8
  %191 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2, i32 1, i32 0, i32 0
  store i32 %184, i32* %191, align 8
  %192 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2, i32 2
  store i32 %186, i32* %192, align 4
  br label %206

193:                                              ; preds = %182
  %194 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %194, i64 16, i1 false) #14
  %195 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %142 to i64*
  store i64 %158, i64* %195, align 8
  %196 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 1, i32 0, i32 0
  store i32 %184, i32* %196, align 8
  %197 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1, i32 2
  store i32 %186, i32* %197, align 4
  %198 = load i32, i32* %154, align 4
  %199 = load i32, i32* %149, align 4
  %200 = icmp ult i32 %198, %199
  br i1 %200, label %201, label %206

201:                                              ; preds = %193
  %202 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %202, i64 16, i1 false) #14
  %203 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %141 to i64*
  store i64 %158, i64* %203, align 8
  %204 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2, i32 1, i32 0, i32 0
  store i32 %184, i32* %204, align 8
  %205 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 2, i32 2
  store i32 %186, i32* %205, align 4
  br label %206

206:                                              ; preds = %201, %193, %188, %175, %160, %159
  %207 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %153, %159 ], [ %144, %160 ], [ %144, %175 ], [ %148, %188 ], [ %153, %193 ], [ %148, %201 ]
  %208 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 3
  %209 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %208, %4
  br i1 %209, label %509, label %210

210:                                              ; preds = %206, %248
  %211 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %249, %248 ], [ %207, %206 ]
  %212 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %246, %248 ], [ %208, %206 ]
  %213 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %212, %248 ], [ %141, %206 ]
  %214 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %212, i64 0, i32 0
  %215 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %214, align 8
  %216 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %215, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %211, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp ult i32 %217, %219
  br i1 %220, label %221, label %245

221:                                              ; preds = %210
  %222 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %212, i64 0, i32 1, i32 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %212, i64 0, i32 2
  %225 = load i32, i32* %224, align 4
  br label %226

226:                                              ; preds = %232, %221
  %227 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %212, %221 ], [ %228, %232 ]
  %228 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %213, %221 ], [ %233, %232 ]
  %229 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %227 to i8*
  %230 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %228 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 16, i1 false) #14
  %231 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %228, %30
  br i1 %231, label %240, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %228, i64 -1
  %234 = load i32, i32* %216, align 4
  %235 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %233, i64 0, i32 0
  %236 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %235, align 8
  %237 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %236, i64 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = icmp ult i32 %234, %238
  br i1 %239, label %226, label %240

240:                                              ; preds = %232, %226
  %241 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %30, %226 ], [ %228, %232 ]
  %242 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %241, i64 0, i32 0
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %215, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %242, align 8
  %243 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %241, i64 0, i32 1, i32 0, i32 0
  store i32 %223, i32* %243, align 8
  %244 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %241, i64 0, i32 2
  store i32 %225, i32* %244, align 4
  br label %245

245:                                              ; preds = %240, %210
  %246 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %212, i64 1
  %247 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %246, %4
  br i1 %247, label %509, label %248

248:                                              ; preds = %245
  %249 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %214, align 8
  br label %210

250:                                              ; preds = %138
  %251 = icmp sgt i64 %32, 15984
  %252 = sdiv i64 %33, 2
  %253 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 %252
  br i1 %251, label %254, label %259

254:                                              ; preds = %250
  %255 = sdiv i64 %33, 4
  %256 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 %255
  %257 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253, i64 %255
  %258 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %256, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %257, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %7)
  br label %315

259:                                              ; preds = %250
  %260 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253, i64 0, i32 0
  %261 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %260, align 8
  %262 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %261, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 0
  %265 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %264, align 8
  %266 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %265, i64 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = icmp ult i32 %263, %267
  %269 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %8, align 8
  %270 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %269, i64 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = icmp ult i32 %271, %263
  %273 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %261 to i64
  %274 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %265 to i64
  br i1 %268, label %297, label %275

275:                                              ; preds = %259
  br i1 %272, label %276, label %315

276:                                              ; preds = %275
  %277 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 %252, i32 1, i32 0, i32 0
  %278 = load i32, i32* %277, align 8
  %279 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 %252, i32 2
  %280 = load i32, i32* %279, align 4
  %281 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %9, i64 16, i1 false) #14
  store i64 %273, i64* %10, align 8
  store i32 %278, i32* %11, align 8
  store i32 %280, i32* %12, align 4
  %282 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %260, align 8
  %283 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %282, i64 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %264, align 8
  %286 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %285, i64 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = icmp ult i32 %284, %287
  br i1 %288, label %289, label %315

289:                                              ; preds = %276
  %290 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %285 to i64
  %291 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253 to i64*
  %292 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %293 = load i32, i32* %292, align 8
  %294 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %295 = load i32, i32* %294, align 4
  %296 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %281, i64 16, i1 false) #14
  store i64 %290, i64* %291, align 8
  store i32 %293, i32* %277, align 8
  store i32 %295, i32* %279, align 4
  br label %315

297:                                              ; preds = %259
  %298 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %299 = load i32, i32* %298, align 8
  %300 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %301 = load i32, i32* %300, align 4
  %302 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  br i1 %272, label %303, label %304

303:                                              ; preds = %297
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %17, i64 16, i1 false) #14
  store i64 %274, i64* %18, align 8
  store i32 %299, i32* %19, align 8
  store i32 %301, i32* %20, align 4
  br label %315

304:                                              ; preds = %297
  %305 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %305, i64 16, i1 false) #14
  %306 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253 to i64*
  store i64 %274, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 %252, i32 1, i32 0, i32 0
  store i32 %299, i32* %307, align 8
  %308 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 %252, i32 2
  store i32 %301, i32* %308, align 4
  %309 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %8, align 8
  %310 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %309, i64 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = load i32, i32* %266, align 4
  %313 = icmp ult i32 %311, %312
  br i1 %313, label %314, label %315

314:                                              ; preds = %304
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* align 8 %13, i64 16, i1 false) #14
  store i64 %274, i64* %14, align 8
  store i32 %299, i32* %15, align 8
  store i32 %301, i32* %16, align 4
  br label %315

315:                                              ; preds = %314, %304, %303, %289, %276, %275, %254
  %316 = phi i32 [ %258, %254 ], [ 1, %303 ], [ 0, %275 ], [ 2, %289 ], [ 1, %276 ], [ 2, %314 ], [ 1, %304 ]
  %317 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 0
  %318 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %317, align 8
  %319 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %318, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %253, i64 0, i32 0
  %322 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %321, align 8
  %323 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %322, i64 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = icmp ult i32 %320, %324
  br i1 %325, label %413, label %326

326:                                              ; preds = %315, %395
  %327 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %328, %395 ], [ %7, %315 ]
  %328 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %327, i64 -1
  %329 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, %328
  br i1 %329, label %330, label %395

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1
  %332 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %21, align 8
  %333 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %332, i64 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = icmp ult i32 %320, %334
  br i1 %335, label %356, label %336

336:                                              ; preds = %330
  %337 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %331, %7
  br i1 %337, label %509, label %338

338:                                              ; preds = %336, %353
  %339 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %354, %353 ], [ %331, %336 ]
  %340 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %339, i64 0, i32 0
  %341 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %340, align 8
  %342 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %341, i64 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = icmp ult i32 %320, %343
  br i1 %344, label %345, label %353

345:                                              ; preds = %338
  %346 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %341 to i64
  %347 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %339, i64 0, i32 1, i32 0, i32 0
  %348 = load i32, i32* %347, align 8
  %349 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %339, i64 0, i32 2
  %350 = load i32, i32* %349, align 4
  %351 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %339 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* align 8 %22, i64 16, i1 false) #14
  store i64 %346, i64* %23, align 8
  store i32 %348, i32* %24, align 8
  store i32 %350, i32* %25, align 4
  %352 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %339, i64 1
  br label %356

353:                                              ; preds = %338
  %354 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %339, i64 1
  %355 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %354, %7
  br i1 %355, label %509, label %338

356:                                              ; preds = %345, %330
  %357 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %331, %330 ], [ %352, %345 ]
  %358 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %357, %7
  br i1 %358, label %509, label %359

359:                                              ; preds = %356, %385
  %360 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %372, %385 ], [ %357, %356 ]
  %361 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %377, %385 ], [ %7, %356 ]
  %362 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %317, align 8
  %363 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %362, i64 0, i32 1
  %364 = load i32, i32* %363, align 4
  br label %365

365:                                              ; preds = %365, %359
  %366 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %360, %359 ], [ %372, %365 ]
  %367 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %366, i64 0, i32 0
  %368 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %367, align 8
  %369 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %368, i64 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = icmp ult i32 %364, %370
  %372 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %366, i64 1
  br i1 %371, label %373, label %365

373:                                              ; preds = %365
  %374 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %368 to i64
  br label %375

375:                                              ; preds = %373, %375
  %376 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %377, %375 ], [ %361, %373 ]
  %377 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %376, i64 -1
  %378 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %377, i64 0, i32 0
  %379 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %378, align 8
  %380 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %379, i64 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = icmp ult i32 %364, %381
  br i1 %382, label %375, label %383

383:                                              ; preds = %375
  %384 = icmp ult %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %366, %377
  br i1 %384, label %385, label %29

385:                                              ; preds = %383
  %386 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %366, i64 0, i32 1, i32 0, i32 0
  %387 = load i32, i32* %386, align 8
  %388 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %366, i64 0, i32 2
  %389 = load i32, i32* %388, align 4
  %390 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %366 to i8*
  %391 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %377 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %390, i8* align 8 %391, i64 16, i1 false) #14
  %392 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %377 to i64*
  store i64 %374, i64* %392, align 8
  %393 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %376, i64 -1, i32 1, i32 0, i32 0
  store i32 %387, i32* %393, align 8
  %394 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %376, i64 -1, i32 2
  store i32 %389, i32* %394, align 4
  br label %359

395:                                              ; preds = %326
  %396 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %328, i64 0, i32 0
  %397 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %396, align 8
  %398 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %397, i64 0, i32 1
  %399 = load i32, i32* %398, align 4
  %400 = icmp ult i32 %399, %324
  br i1 %400, label %401, label %326

401:                                              ; preds = %395
  %402 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %318 to i64
  %403 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 1, i32 0, i32 0
  %404 = load i32, i32* %403, align 8
  %405 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 2
  %406 = load i32, i32* %405, align 4
  %407 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  %408 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %328 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %407, i8* align 8 %408, i64 16, i1 false) #14
  %409 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %328 to i64*
  store i64 %402, i64* %409, align 8
  %410 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %327, i64 -1, i32 1, i32 0, i32 0
  store i32 %404, i32* %410, align 8
  %411 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %327, i64 -1, i32 2
  store i32 %406, i32* %411, align 4
  %412 = add i32 %316, 1
  br label %413

413:                                              ; preds = %315, %401
  %414 = phi i32 [ %412, %401 ], [ %316, %315 ]
  %415 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %328, %401 ], [ %7, %315 ]
  %416 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i64
  %417 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 1
  %418 = icmp ult %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %417, %415
  br i1 %418, label %419, label %461

419:                                              ; preds = %413, %448
  %420 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %460, %448 ], [ %253, %413 ]
  %421 = phi i32 [ %458, %448 ], [ %414, %413 ]
  %422 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %435, %448 ], [ %417, %413 ]
  %423 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %440, %448 ], [ %415, %413 ]
  %424 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %420, i64 0, i32 0
  %425 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %424, align 8
  %426 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %425, i64 0, i32 1
  %427 = load i32, i32* %426, align 4
  br label %428

428:                                              ; preds = %428, %419
  %429 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %422, %419 ], [ %435, %428 ]
  %430 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %429, i64 0, i32 0
  %431 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %430, align 8
  %432 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %431, i64 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = icmp ult i32 %433, %427
  %435 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %429, i64 1
  br i1 %434, label %428, label %436

436:                                              ; preds = %428
  %437 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %431 to i64
  br label %438

438:                                              ; preds = %436, %438
  %439 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %440, %438 ], [ %423, %436 ]
  %440 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %439, i64 -1
  %441 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %440, i64 0, i32 0
  %442 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %441, align 8
  %443 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %442, i64 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = icmp ult i32 %444, %427
  br i1 %445, label %446, label %438

446:                                              ; preds = %438
  %447 = icmp ugt %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %429, %440
  br i1 %447, label %461, label %448

448:                                              ; preds = %446
  %449 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %429, i64 0, i32 1, i32 0, i32 0
  %450 = load i32, i32* %449, align 8
  %451 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %429, i64 0, i32 2
  %452 = load i32, i32* %451, align 4
  %453 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %429 to i8*
  %454 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %440 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %453, i8* align 8 %454, i64 16, i1 false) #14
  %455 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %440 to i64*
  store i64 %437, i64* %455, align 8
  %456 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %439, i64 -1, i32 1, i32 0, i32 0
  store i32 %450, i32* %456, align 8
  %457 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %439, i64 -1, i32 2
  store i32 %452, i32* %457, align 4
  %458 = add i32 %421, 1
  %459 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %420, %429
  %460 = select i1 %459, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %440, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %420
  br label %419

461:                                              ; preds = %446, %413
  %462 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %253, %413 ], [ %420, %446 ]
  %463 = phi i32 [ %414, %413 ], [ %421, %446 ]
  %464 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %417, %413 ], [ %429, %446 ]
  %465 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, %462
  br i1 %465, label %488, label %466

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %462, i64 0, i32 0
  %468 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %467, align 8
  %469 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %468, i64 0, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, i64 0, i32 0
  %472 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %471, align 8
  %473 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %472, i64 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = icmp ult i32 %470, %474
  br i1 %475, label %476, label %488

476:                                              ; preds = %466
  %477 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %472 to i64
  %478 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, i64 0, i32 1, i32 0, i32 0
  %479 = load i32, i32* %478, align 8
  %480 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, i64 0, i32 2
  %481 = load i32, i32* %480, align 4
  %482 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464 to i8*
  %483 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %462 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %482, i8* align 8 %483, i64 16, i1 false) #14
  %484 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %462 to i64*
  store i64 %477, i64* %484, align 8
  %485 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %462, i64 0, i32 1, i32 0, i32 0
  store i32 %479, i32* %485, align 8
  %486 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %462, i64 0, i32 2
  store i32 %481, i32* %486, align 4
  %487 = add i32 %463, 1
  br label %488

488:                                              ; preds = %461, %476, %466
  %489 = phi i32 [ %487, %476 ], [ %463, %466 ], [ %463, %461 ]
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %498

491:                                              ; preds = %488
  %492 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEbT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464)
  %493 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, i64 1
  %494 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEbT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %493, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4)
  br i1 %494, label %495, label %497

495:                                              ; preds = %491
  br i1 %492, label %509, label %496

496:                                              ; preds = %495, %507
  br label %3

497:                                              ; preds = %491
  br i1 %492, label %505, label %498

498:                                              ; preds = %497, %488
  %499 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464 to i64
  %500 = sub i64 %499, %416
  %501 = sub i64 %26, %499
  %502 = icmp slt i64 %500, %501
  br i1 %502, label %503, label %507

503:                                              ; preds = %498
  tail call fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464)
  %504 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, i64 1
  br label %505

505:                                              ; preds = %503, %497
  %506 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %493, %497 ], [ %504, %503 ]
  br label %27

507:                                              ; preds = %498
  %508 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %464, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEvT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %508, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4)
  br label %496

509:                                              ; preds = %495, %356, %29, %29, %336, %353, %245, %206, %122, %112, %107, %93, %76, %75, %34, %45, %127, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture) unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 0
  %6 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %5, align 8
  %7 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 0
  %10 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %9, align 8
  %11 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %8, %12
  %14 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 0
  %15 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %14, align 8
  %16 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, %8
  %19 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %6 to i64
  %20 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %10 to i64
  br i1 %13, label %50, label %21

21:                                               ; preds = %4
  %22 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %15 to i64
  br i1 %18, label %23, label %77

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i8*
  %29 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #14
  %30 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i64*
  store i64 %19, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 %25, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 2
  store i32 %27, i32* %32, align 4
  %33 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %5, align 8
  %34 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %9, align 8
  %37 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %35, %38
  br i1 %39, label %40, label %77

40:                                               ; preds = %23
  %41 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %36 to i64
  %42 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i64*
  %43 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %28, i64 16, i1 false) #14
  store i64 %41, i64* %42, align 8
  store i32 %44, i32* %24, align 8
  store i32 %46, i32* %26, align 4
  %48 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %14, align 8
  %49 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %48 to i64
  br label %77

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  br i1 %18, label %56, label %61

56:                                               ; preds = %50
  %57 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %57, i64 16, i1 false) #14
  %58 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i64*
  store i64 %20, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 %52, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 2
  store i32 %54, i32* %60, align 4
  br label %77

61:                                               ; preds = %50
  %62 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %62, i64 16, i1 false) #14
  %63 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i64*
  store i64 %20, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 1, i32 0, i32 0
  store i32 %52, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 2
  store i32 %54, i32* %65, align 4
  %66 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %14, align 8
  %67 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %11, align 4
  %70 = icmp ult i32 %68, %69
  %71 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %66 to i64
  br i1 %70, label %72, label %77

72:                                               ; preds = %61
  %73 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %73, i64 16, i1 false) #14
  %74 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i64*
  store i64 %20, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 %52, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 2
  store i32 %54, i32* %76, align 4
  br label %77

77:                                               ; preds = %21, %23, %40, %56, %61, %72
  %78 = phi i64 [ %20, %56 ], [ %22, %21 ], [ %49, %40 ], [ %19, %23 ], [ %20, %72 ], [ %71, %61 ]
  %79 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %10, %56 ], [ %15, %21 ], [ %48, %40 ], [ %6, %23 ], [ %10, %72 ], [ %66, %61 ]
  %80 = phi i32 [ 1, %56 ], [ 0, %21 ], [ 2, %40 ], [ 1, %23 ], [ 2, %72 ], [ 1, %61 ]
  %81 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3, i64 0, i32 0
  %82 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %81, align 8
  %83 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %82, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp ult i32 %84, %86
  br i1 %87, label %88, label %131

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 1, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i8*
  %94 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #14
  %95 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3 to i64*
  store i64 %78, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3, i64 0, i32 1, i32 0, i32 0
  store i32 %90, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3, i64 0, i32 2
  store i32 %92, i32* %97, align 4
  %98 = add nuw nsw i32 %80, 1
  %99 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %14, align 8
  %100 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %99, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %5, align 8
  %103 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %102, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp ult i32 %101, %104
  br i1 %105, label %106, label %131

106:                                              ; preds = %88
  %107 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %102 to i64
  %108 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i64*
  %109 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 1, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %93, i64 16, i1 false) #14
  store i64 %107, i64* %108, align 8
  store i32 %110, i32* %89, align 8
  store i32 %112, i32* %91, align 4
  %114 = add nuw nsw i32 %80, 2
  %115 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %5, align 8
  %116 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %115, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %9, align 8
  %119 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %118, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %117, %120
  br i1 %121, label %122, label %131

122:                                              ; preds = %106
  %123 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %118 to i64
  %124 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i64*
  %125 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %113, i64 16, i1 false) #14
  store i64 %123, i64* %124, align 8
  store i32 %126, i32* %109, align 8
  store i32 %128, i32* %111, align 4
  %130 = add nuw nsw i32 %80, 3
  br label %131

131:                                              ; preds = %88, %122, %106, %77
  %132 = phi i32 [ %130, %122 ], [ %114, %106 ], [ %98, %88 ], [ %80, %77 ]
  ret i32 %132
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3)
  %7 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 0, i32 0
  %8 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %7, align 8
  %9 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3, i64 0, i32 0
  %12 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %11, align 8
  %13 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %10, %14
  br i1 %15, label %16, label %79

16:                                               ; preds = %5
  %17 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %12 to i64
  %18 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3, i64 0, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3 to i8*
  %23 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false) #14
  %24 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4 to i64*
  store i64 %17, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 0, i32 1, i32 0, i32 0
  store i32 %19, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %4, i64 0, i32 2
  store i32 %21, i32* %26, align 4
  %27 = add i32 %6, 1
  %28 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %11, align 8
  %29 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 0
  %32 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %31, align 8
  %33 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %30, %34
  br i1 %35, label %36, label %79

36:                                               ; preds = %16
  %37 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %32 to i64
  %38 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %3 to i64*
  %39 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 1, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %22, i64 16, i1 false) #14
  store i64 %37, i64* %38, align 8
  store i32 %40, i32* %18, align 8
  store i32 %42, i32* %20, align 4
  %44 = add i32 %6, 2
  %45 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %31, align 8
  %46 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 0
  %49 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %48, align 8
  %50 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %47, %51
  br i1 %52, label %53, label %79

53:                                               ; preds = %36
  %54 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %49 to i64
  %55 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %2 to i64*
  %56 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 1, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %43, i64 16, i1 false) #14
  store i64 %54, i64* %55, align 8
  store i32 %57, i32* %39, align 8
  store i32 %59, i32* %41, align 4
  %61 = add i32 %6, 3
  %62 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %48, align 8
  %63 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 0
  %66 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp ult i32 %64, %68
  br i1 %69, label %70, label %79

70:                                               ; preds = %53
  %71 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %66 to i64
  %72 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i64*
  %73 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %60, i64 16, i1 false) #14
  store i64 %71, i64* %72, align 8
  store i32 %74, i32* %56, align 8
  store i32 %76, i32* %58, align 4
  %78 = add i32 %6, 4
  br label %79

79:                                               ; preds = %16, %53, %70, %36, %5
  %80 = phi i32 [ %78, %70 ], [ %61, %53 ], [ %44, %36 ], [ %27, %16 ], [ %6, %5 ]
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEbT0_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1 to i64
  %4 = ptrtoint %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 4
  switch i64 %6, label %111 [
    i64 0, label %229
    i64 1, label %229
    i64 2, label %7
    i64 3, label %29
    i64 4, label %100
    i64 5, label %105
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %8, i64 0, i32 0
  %10 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %9, align 8
  %11 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 0
  %14 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %13, align 8
  %15 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %12, %16
  br i1 %17, label %18, label %229

18:                                               ; preds = %7
  %19 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %14 to i64
  %20 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  %25 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false) #14
  %26 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %8 to i64*
  store i64 %19, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 1, i32 0, i32 0
  store i32 %21, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 2
  store i32 %23, i32* %28, align 4
  br label %229

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1
  %31 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1
  %32 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30, i64 0, i32 0
  %33 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %32, align 8
  %34 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 0
  %37 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %36, align 8
  %38 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %35, %39
  %41 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31, i64 0, i32 0
  %42 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %41, align 8
  %43 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ult i32 %44, %35
  %46 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %33 to i64
  %47 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %37 to i64
  br i1 %40, label %74, label %48

48:                                               ; preds = %29
  br i1 %45, label %49, label %229

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 1, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  %55 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #14
  %56 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i64*
  store i64 %46, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 1, i32 0, i32 0
  store i32 %51, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 2
  store i32 %53, i32* %58, align 4
  %59 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %32, align 8
  %60 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %36, align 8
  %63 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp ult i32 %61, %64
  br i1 %65, label %66, label %229

66:                                               ; preds = %49
  %67 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %62 to i64
  %68 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i64*
  %69 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %54, i64 16, i1 false) #14
  store i64 %67, i64* %68, align 8
  store i32 %70, i32* %50, align 8
  store i32 %72, i32* %52, align 4
  br label %229

74:                                               ; preds = %29
  %75 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  br i1 %45, label %80, label %85

80:                                               ; preds = %74
  %81 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %81, i64 16, i1 false) #14
  %82 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i64*
  store i64 %47, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 1, i32 0, i32 0
  store i32 %76, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 2
  store i32 %78, i32* %84, align 4
  br label %229

85:                                               ; preds = %74
  %86 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %86, i64 16, i1 false) #14
  %87 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %30 to i64*
  store i64 %47, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 1, i32 0, i32 0
  store i32 %76, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 2
  store i32 %78, i32* %89, align 4
  %90 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %41, align 8
  %91 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* %38, align 4
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %95, label %229

95:                                               ; preds = %85
  %96 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %96, i64 16, i1 false) #14
  %97 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %31 to i64*
  store i64 %47, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 1, i32 0, i32 0
  store i32 %76, i32* %98, align 8
  %99 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1, i32 2
  store i32 %78, i32* %99, align 4
  br label %229

100:                                              ; preds = %2
  %101 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1
  %102 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2
  %103 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1
  %104 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %101, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %102, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %103)
  br label %229

105:                                              ; preds = %2
  %106 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1
  %107 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2
  %108 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 3
  %109 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %1, i64 -1
  %110 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2rx12_GLOBAL__N_135SpirvTransformFeedbackCodeGenerator37writeTransformFeedbackEmulationOutputERKNS2_17SpirvIDDiscovererERKNS2_26SpirvVaryingPrecisionFixerEN5angle5spirv11BoxedUint32INSB_11IdRefHelperEEEPNS_6vectorIjNS_9allocatorIjEEEEE3$_0PNS3_10XfbVaryingEEEjT0_SO_SO_SO_SO_T_"(%"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %106, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %107, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %108, %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %109)
  br label %229

111:                                              ; preds = %2
  %112 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2
  %113 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1
  %114 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %113, i64 0, i32 0
  %115 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %114, align 8
  %116 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %115, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 0
  %119 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %118, align 8
  %120 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %119, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp ult i32 %117, %121
  %123 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112, i64 0, i32 0
  %124 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %123, align 8
  %125 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = icmp ult i32 %126, %117
  %128 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %115 to i64
  %129 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %119 to i64
  br i1 %122, label %153, label %130

130:                                              ; preds = %111
  br i1 %127, label %131, label %177

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 1, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %113 to i8*
  %137 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #14
  %138 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112 to i64*
  store i64 %128, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2, i32 1, i32 0, i32 0
  store i32 %133, i32* %139, align 8
  %140 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2, i32 2
  store i32 %135, i32* %140, align 4
  %141 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %114, align 8
  %142 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %120, align 4
  %145 = icmp ult i32 %143, %144
  br i1 %145, label %146, label %177

146:                                              ; preds = %131
  %147 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %113 to i64*
  %148 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %136, i64 16, i1 false) #14
  store i64 %129, i64* %147, align 8
  store i32 %149, i32* %132, align 8
  store i32 %151, i32* %134, align 4
  br label %177

153:                                              ; preds = %111
  %154 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 1, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0 to i8*
  br i1 %127, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %160, i64 16, i1 false) #14
  %161 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112 to i64*
  store i64 %129, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2, i32 1, i32 0, i32 0
  store i32 %155, i32* %162, align 8
  %163 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2, i32 2
  store i32 %157, i32* %163, align 4
  br label %177

164:                                              ; preds = %153
  %165 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %165, i64 16, i1 false) #14
  %166 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %113 to i64*
  store i64 %129, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 1, i32 0, i32 0
  store i32 %155, i32* %167, align 8
  %168 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 1, i32 2
  store i32 %157, i32* %168, align 4
  %169 = load i32, i32* %125, align 4
  %170 = load i32, i32* %120, align 4
  %171 = icmp ult i32 %169, %170
  br i1 %171, label %172, label %177

172:                                              ; preds = %164
  %173 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %173, i64 16, i1 false) #14
  %174 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %112 to i64*
  store i64 %129, i64* %174, align 8
  %175 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2, i32 1, i32 0, i32 0
  store i32 %155, i32* %175, align 8
  %176 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 2, i32 2
  store i32 %157, i32* %176, align 4
  br label %177

177:                                              ; preds = %130, %131, %146, %159, %164, %172
  %178 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %124, %130 ], [ %115, %131 ], [ %115, %146 ], [ %119, %159 ], [ %124, %164 ], [ %119, %172 ]
  %179 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %0, i64 3
  %180 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %179, %1
  br i1 %180, label %229, label %181

181:                                              ; preds = %177, %223
  %182 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %225, %223 ], [ %178, %177 ]
  %183 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %221, %223 ], [ %179, %177 ]
  %184 = phi i32 [ %220, %223 ], [ 0, %177 ]
  %185 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %183, %223 ], [ %112, %177 ]
  %186 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %183, i64 0, i32 0
  %187 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %186, align 8
  %188 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %187, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %182, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = icmp ult i32 %189, %191
  br i1 %192, label %193, label %219

193:                                              ; preds = %181
  %194 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %183, i64 0, i32 1, i32 0, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %183, i64 0, i32 2
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %204, %193
  %199 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %183, %193 ], [ %200, %204 ]
  %200 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %185, %193 ], [ %205, %204 ]
  %201 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %199 to i8*
  %202 = bitcast %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %200 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 16, i1 false)
  %203 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %200, %0
  br i1 %203, label %212, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %200, i64 -1
  %206 = load i32, i32* %188, align 4
  %207 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %205, i64 0, i32 0
  %208 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %207, align 8
  %209 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %208, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = icmp ult i32 %206, %210
  br i1 %211, label %198, label %212

212:                                              ; preds = %198, %204
  %213 = phi %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* [ %0, %198 ], [ %200, %204 ]
  %214 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %213, i64 0, i32 0
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %187, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %214, align 8
  %215 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %213, i64 0, i32 1, i32 0, i32 0
  store i32 %195, i32* %215, align 8
  %216 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %213, i64 0, i32 2
  store i32 %197, i32* %216, align 4
  %217 = add i32 %184, 1
  %218 = icmp eq i32 %217, 8
  br i1 %218, label %226, label %219

219:                                              ; preds = %212, %181
  %220 = phi i32 [ %217, %212 ], [ %184, %181 ]
  %221 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %183, i64 1
  %222 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %221, %1
  br i1 %222, label %229, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %183, i64 0, i32 0
  %225 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %224, align 8
  br label %181

226:                                              ; preds = %212
  %227 = getelementptr inbounds %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying", %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %183, i64 1
  %228 = icmp eq %"struct.rx::(anonymous namespace)::SpirvTransformFeedbackCodeGenerator::XfbVarying"* %227, %1
  br label %229

229:                                              ; preds = %219, %226, %177, %95, %85, %80, %66, %49, %48, %7, %18, %2, %2, %105, %100
  %230 = phi i1 [ true, %105 ], [ true, %100 ], [ true, %2 ], [ true, %2 ], [ true, %18 ], [ true, %7 ], [ true, %48 ], [ true, %49 ], [ true, %66 ], [ true, %80 ], [ true, %85 ], [ true, %95 ], [ true, %177 ], [ %228, %226 ], [ true, %219 ]
  ret i1 %230
}

declare void @_ZN5angle5spirv13WriteVariableEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_N3spv12StorageClassEPKS9_(%"class.std::__1::vector"*, i32, i32, i32, %"class.angle::spirv::BoxedUint32"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv17WriteFunctionCallEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, i32, %"class.angle::FastVector.278"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv12WriteBitcastEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv15ParseCapabilityEPKjPN3spv10CapabilityE(i32*, i32*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15WriteCapabilityEPNSt3__16vectorIjNS1_9allocatorIjEEEEN3spv10CapabilityE(%"class.std::__1::vector"*, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv15ParseEntryPointEPKjPN3spv14ExecutionModelEPNS0_11BoxedUint32INS0_11IdRefHelperEEEPPKcPNS_10FastVectorIS8_Lm8ENSt3__15arrayIS8_Lm8EEEEE(i32*, i32*, %"class.angle::spirv::BoxedUint32"*, i8**, %"class.angle::FastVector.278"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15WriteEntryPointEPNSt3__16vectorIjNS1_9allocatorIjEEEEN3spv14ExecutionModelENS0_11BoxedUint32INS0_11IdRefHelperEEEPKcRKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, i8*, %"class.angle::FastVector.278"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv18WriteExecutionModeEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv13ExecutionModeE(%"class.std::__1::vector"*, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv13WriteDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEEN3spv10DecorationERKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISE_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, %"class.angle::FastVector.271"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv19WriteMemberDecorateEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEENS7_INS0_20LiteralIntegerHelperEEEN3spv10DecorationERKNS_10FastVectorISB_Lm8ENS1_5arrayISB_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, i32, %"class.angle::FastVector.271"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv19ParseMemberDecorateEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS3_INS0_20LiteralIntegerHelperEEEPN3spv10DecorationEPNS_10FastVectorIS8_Lm8ENSt3__15arrayIS8_Lm8EEEEE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32.273"*, i32*, %"class.angle::FastVector.271"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15ParseTypeStructEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPNS_10FastVectorIS5_Lm8ENSt3__15arrayIS5_Lm8EEEEE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::FastVector.278"*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15WriteTypeStructEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEERKNS_10FastVectorIS9_Lm8ENS1_5arrayIS9_Lm8EEEEE(%"class.std::__1::vector"*, i32, %"class.angle::FastVector.278"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv18ParseExecutionModeEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEEPN3spv13ExecutionModeE(i32*, %"class.angle::spirv::BoxedUint32"*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPjEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = ptrtoint i32* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint i32* %3 to i64
  %10 = ptrtoint i32* %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %555

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = ptrtoint i32* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i32** %18 to i64*
  br i1 %23, label %188, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %2, i64 %27
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 2
  %36 = bitcast i32* %19 to i8*
  %37 = bitcast i32* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %32, i1 false) #14
  %38 = getelementptr inbounds i32, i32* %19, i64 %35
  %39 = ptrtoint i32* %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %555

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to i32*
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi i32* [ %44, %43 ], [ %19, %25 ]
  %48 = phi i32* [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds i32, i32* %1, i64 %12
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 2
  %53 = getelementptr inbounds i32, i32* %1, i64 %52
  %54 = icmp ult i32* %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr i32, i32* %19, i64 %56
  %58 = bitcast i32* %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi i32* [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi i32* [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr i32, i32* %19, i64 %69
  %71 = bitcast i32* %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %47, i64 %76
  %78 = add nsw i64 %52, %75
  %79 = add i64 %78, 1
  %80 = getelementptr i32, i32* %1, i64 %79
  %81 = icmp ult i32* %47, %80
  %82 = icmp ult i32* %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, 9223372036854775800
  %86 = getelementptr i32, i32* %47, i64 %85
  %87 = getelementptr i32, i32* %53, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %47, i64 %96
  %99 = getelementptr i32, i32* %53, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !172
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !172
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !175, !noalias !172
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !175, !noalias !172
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %47, i64 %108
  %110 = getelementptr i32, i32* %53, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !172
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !172
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !175, !noalias !172
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !175, !noalias !172
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %47, i64 %119
  %121 = getelementptr i32, i32* %53, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !172
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !172
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !175, !noalias !172
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !175, !noalias !172
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %47, i64 %130
  %132 = getelementptr i32, i32* %53, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !172
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !172
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !175, !noalias !172
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !175, !noalias !172
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !177

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %47, i64 %148
  %151 = getelementptr i32, i32* %53, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !172
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !172
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !175, !noalias !172
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !175, !noalias !172
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !178

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi i32* [ %86, %163 ], [ %181, %176 ]
  %167 = ptrtoint i32* %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %183, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds i32, i32* %47, i64 %172
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %51, i1 false) #14
  br label %183

176:                                              ; preds = %65, %176
  %177 = phi i32* [ %181, %176 ], [ %66, %65 ]
  %178 = phi i32* [ %180, %176 ], [ %67, %65 ]
  %179 = load i32, i32* %178, align 4
  store i32 %179, i32* %177, align 4
  %180 = getelementptr inbounds i32, i32* %178, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = icmp ult i32* %180, %19
  br i1 %182, label %176, label %165, !llvm.loop !179

183:                                              ; preds = %168, %171
  %184 = ptrtoint i32* %48 to i64
  %185 = sub i64 %184, %10
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %555, label %187

187:                                              ; preds = %183
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %185, i1 false) #14
  br label %555

188:                                              ; preds = %14
  %189 = bitcast %"class.std::__1::vector"* %0 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %20, %190
  %192 = ashr exact i64 %191, 2
  %193 = add nsw i64 %192, %12
  %194 = icmp ugt i64 %193, 4611686018427387903
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #18
  unreachable

197:                                              ; preds = %188
  %198 = sub i64 %17, %190
  %199 = ashr exact i64 %198, 2
  %200 = icmp ult i64 %199, 2305843009213693951
  br i1 %200, label %204, label %201

201:                                              ; preds = %197
  %202 = sub i64 %7, %190
  %203 = ashr exact i64 %202, 2
  br label %214

204:                                              ; preds = %197
  %205 = ashr exact i64 %198, 1
  %206 = icmp ult i64 %205, %193
  %207 = select i1 %206, i64 %193, i64 %205
  %208 = sub i64 %7, %190
  %209 = ashr exact i64 %208, 2
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %220, label %211

211:                                              ; preds = %204
  %212 = icmp ugt i64 %207, 4611686018427387903
  br i1 %212, label %213, label %214

213:                                              ; preds = %211
  tail call void @abort() #18
  unreachable

214:                                              ; preds = %201, %211
  %215 = phi i64 [ 4611686018427387903, %201 ], [ %207, %211 ]
  %216 = phi i64 [ %203, %201 ], [ %209, %211 ]
  %217 = shl i64 %215, 2
  %218 = tail call i8* @_Znwm(i64 %217) #17
  %219 = bitcast i8* %218 to i32*
  br label %220

220:                                              ; preds = %214, %204
  %221 = phi i64 [ %216, %214 ], [ %209, %204 ]
  %222 = phi i64 [ %215, %214 ], [ 0, %204 ]
  %223 = phi i32* [ %219, %214 ], [ null, %204 ]
  %224 = getelementptr inbounds i32, i32* %223, i64 %221
  %225 = getelementptr inbounds i32, i32* %223, i64 %222
  %226 = ptrtoint i32* %225 to i64
  %227 = getelementptr inbounds i32, i32* %224, i64 %12
  %228 = add i64 %11, -4
  %229 = lshr i64 %228, 2
  %230 = add nuw nsw i64 %229, 1
  %231 = icmp ult i64 %230, 8
  br i1 %231, label %324, label %232

232:                                              ; preds = %220
  %233 = add i64 %11, -4
  %234 = lshr i64 %233, 2
  %235 = add nsw i64 %221, %234
  %236 = add i64 %235, 1
  %237 = getelementptr i32, i32* %223, i64 %236
  %238 = add nuw nsw i64 %234, 1
  %239 = getelementptr i32, i32* %2, i64 %238
  %240 = icmp ult i32* %224, %239
  %241 = icmp ugt i32* %237, %2
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %232
  %244 = and i64 %230, 9223372036854775800
  %245 = getelementptr i32, i32* %224, i64 %244
  %246 = getelementptr i32, i32* %2, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %224, i64 %255
  %258 = getelementptr i32, i32* %2, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !180
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !180
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !183, !noalias !180
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !183, !noalias !180
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %224, i64 %267
  %269 = getelementptr i32, i32* %2, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !180
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !180
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !183, !noalias !180
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !183, !noalias !180
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %224, i64 %278
  %280 = getelementptr i32, i32* %2, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !180
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !180
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !183, !noalias !180
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !183, !noalias !180
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %224, i64 %289
  %291 = getelementptr i32, i32* %2, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !180
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !180
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !183, !noalias !180
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !183, !noalias !180
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !185

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %224, i64 %307
  %310 = getelementptr i32, i32* %2, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !180
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !180
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !183, !noalias !180
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !183, !noalias !180
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !186

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %230, %244
  br i1 %323, label %378, label %324

324:                                              ; preds = %322, %232, %220
  %325 = phi i32* [ %224, %232 ], [ %224, %220 ], [ %245, %322 ]
  %326 = phi i32* [ %2, %232 ], [ %2, %220 ], [ %246, %322 ]
  %327 = ptrtoint i32* %325 to i64
  %328 = add nsw i64 %221, %12
  %329 = add nsw i64 %328, -1
  %330 = getelementptr i32, i32* %223, i64 %329
  %331 = ptrtoint i32* %330 to i64
  %332 = sub i64 %331, %327
  %333 = lshr i64 %332, 2
  %334 = add nuw nsw i64 %333, 1
  %335 = and i64 %334, 7
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %346, label %337

337:                                              ; preds = %324, %337
  %338 = phi i32* [ %342, %337 ], [ %325, %324 ]
  %339 = phi i32* [ %343, %337 ], [ %326, %324 ]
  %340 = phi i64 [ %344, %337 ], [ %335, %324 ]
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %338, align 4
  %342 = getelementptr inbounds i32, i32* %338, i64 1
  %343 = getelementptr inbounds i32, i32* %339, i64 1
  %344 = add i64 %340, -1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %337, !llvm.loop !187

346:                                              ; preds = %337, %324
  %347 = phi i32* [ %325, %324 ], [ %342, %337 ]
  %348 = phi i32* [ %326, %324 ], [ %343, %337 ]
  %349 = icmp ult i64 %332, 28
  br i1 %349, label %378, label %350

350:                                              ; preds = %346, %350
  %351 = phi i32* [ %375, %350 ], [ %347, %346 ]
  %352 = phi i32* [ %376, %350 ], [ %348, %346 ]
  %353 = load i32, i32* %352, align 4
  store i32 %353, i32* %351, align 4
  %354 = getelementptr inbounds i32, i32* %351, i64 1
  %355 = getelementptr inbounds i32, i32* %352, i64 1
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %354, align 4
  %357 = getelementptr inbounds i32, i32* %351, i64 2
  %358 = getelementptr inbounds i32, i32* %352, i64 2
  %359 = load i32, i32* %358, align 4
  store i32 %359, i32* %357, align 4
  %360 = getelementptr inbounds i32, i32* %351, i64 3
  %361 = getelementptr inbounds i32, i32* %352, i64 3
  %362 = load i32, i32* %361, align 4
  store i32 %362, i32* %360, align 4
  %363 = getelementptr inbounds i32, i32* %351, i64 4
  %364 = getelementptr inbounds i32, i32* %352, i64 4
  %365 = load i32, i32* %364, align 4
  store i32 %365, i32* %363, align 4
  %366 = getelementptr inbounds i32, i32* %351, i64 5
  %367 = getelementptr inbounds i32, i32* %352, i64 5
  %368 = load i32, i32* %367, align 4
  store i32 %368, i32* %366, align 4
  %369 = getelementptr inbounds i32, i32* %351, i64 6
  %370 = getelementptr inbounds i32, i32* %352, i64 6
  %371 = load i32, i32* %370, align 4
  store i32 %371, i32* %369, align 4
  %372 = getelementptr inbounds i32, i32* %351, i64 7
  %373 = getelementptr inbounds i32, i32* %352, i64 7
  %374 = load i32, i32* %373, align 4
  store i32 %374, i32* %372, align 4
  %375 = getelementptr inbounds i32, i32* %351, i64 8
  %376 = getelementptr inbounds i32, i32* %352, i64 8
  %377 = icmp eq i32* %227, %375
  br i1 %377, label %378, label %350, !llvm.loop !188

378:                                              ; preds = %346, %350, %322
  %379 = load i32*, i32** %8, align 8
  %380 = ptrtoint i32* %379 to i64
  %381 = sub i64 %7, %380
  %382 = ashr exact i64 %381, 2
  %383 = sub nsw i64 0, %382
  %384 = getelementptr inbounds i32, i32* %224, i64 %383
  %385 = ptrtoint i32* %384 to i64
  %386 = icmp sgt i64 %381, 0
  br i1 %386, label %387, label %390

387:                                              ; preds = %378
  %388 = bitcast i32* %384 to i8*
  %389 = bitcast i32* %379 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %388, i8* align 4 %389, i64 %381, i1 false) #14
  br label %390

390:                                              ; preds = %387, %378
  %391 = load i32*, i32** %18, align 8
  %392 = icmp eq i32* %391, %1
  br i1 %392, label %548, label %393

393:                                              ; preds = %390
  %394 = getelementptr i32, i32* %391, i64 -1
  %395 = ptrtoint i32* %394 to i64
  %396 = sub i64 %395, %7
  %397 = lshr i64 %396, 2
  %398 = add nuw nsw i64 %397, 1
  %399 = icmp ult i64 %398, 8
  br i1 %399, label %495, label %400

400:                                              ; preds = %393
  %401 = add nsw i64 %221, %12
  %402 = getelementptr i32, i32* %391, i64 -1
  %403 = ptrtoint i32* %402 to i64
  %404 = sub i64 %403, %7
  %405 = lshr i64 %404, 2
  %406 = add nsw i64 %401, %405
  %407 = add i64 %406, 1
  %408 = getelementptr i32, i32* %223, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr i32, i32* %1, i64 %409
  %411 = icmp ult i32* %227, %410
  %412 = icmp ugt i32* %408, %1
  %413 = and i1 %411, %412
  br i1 %413, label %495, label %414

414:                                              ; preds = %400
  %415 = and i64 %398, 9223372036854775800
  %416 = getelementptr i32, i32* %227, i64 %415
  %417 = getelementptr i32, i32* %1, i64 %415
  %418 = add nsw i64 %415, -8
  %419 = lshr exact i64 %418, 3
  %420 = add nuw nsw i64 %419, 1
  %421 = and i64 %420, 3
  %422 = icmp ult i64 %418, 24
  br i1 %422, label %474, label %423

423:                                              ; preds = %414
  %424 = sub nsw i64 %420, %421
  br label %425

425:                                              ; preds = %425, %423
  %426 = phi i64 [ 0, %423 ], [ %471, %425 ]
  %427 = phi i64 [ %424, %423 ], [ %472, %425 ]
  %428 = getelementptr i32, i32* %227, i64 %426
  %429 = getelementptr i32, i32* %1, i64 %426
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4, !alias.scope !189
  %432 = getelementptr i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4, !alias.scope !189
  %435 = bitcast i32* %428 to <4 x i32>*
  store <4 x i32> %431, <4 x i32>* %435, align 4, !alias.scope !192, !noalias !189
  %436 = getelementptr i32, i32* %428, i64 4
  %437 = bitcast i32* %436 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %437, align 4, !alias.scope !192, !noalias !189
  %438 = or i64 %426, 8
  %439 = getelementptr i32, i32* %227, i64 %438
  %440 = getelementptr i32, i32* %1, i64 %438
  %441 = bitcast i32* %440 to <4 x i32>*
  %442 = load <4 x i32>, <4 x i32>* %441, align 4, !alias.scope !189
  %443 = getelementptr i32, i32* %440, i64 4
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !189
  %446 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %442, <4 x i32>* %446, align 4, !alias.scope !192, !noalias !189
  %447 = getelementptr i32, i32* %439, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %448, align 4, !alias.scope !192, !noalias !189
  %449 = or i64 %426, 16
  %450 = getelementptr i32, i32* %227, i64 %449
  %451 = getelementptr i32, i32* %1, i64 %449
  %452 = bitcast i32* %451 to <4 x i32>*
  %453 = load <4 x i32>, <4 x i32>* %452, align 4, !alias.scope !189
  %454 = getelementptr i32, i32* %451, i64 4
  %455 = bitcast i32* %454 to <4 x i32>*
  %456 = load <4 x i32>, <4 x i32>* %455, align 4, !alias.scope !189
  %457 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> %453, <4 x i32>* %457, align 4, !alias.scope !192, !noalias !189
  %458 = getelementptr i32, i32* %450, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  store <4 x i32> %456, <4 x i32>* %459, align 4, !alias.scope !192, !noalias !189
  %460 = or i64 %426, 24
  %461 = getelementptr i32, i32* %227, i64 %460
  %462 = getelementptr i32, i32* %1, i64 %460
  %463 = bitcast i32* %462 to <4 x i32>*
  %464 = load <4 x i32>, <4 x i32>* %463, align 4, !alias.scope !189
  %465 = getelementptr i32, i32* %462, i64 4
  %466 = bitcast i32* %465 to <4 x i32>*
  %467 = load <4 x i32>, <4 x i32>* %466, align 4, !alias.scope !189
  %468 = bitcast i32* %461 to <4 x i32>*
  store <4 x i32> %464, <4 x i32>* %468, align 4, !alias.scope !192, !noalias !189
  %469 = getelementptr i32, i32* %461, i64 4
  %470 = bitcast i32* %469 to <4 x i32>*
  store <4 x i32> %467, <4 x i32>* %470, align 4, !alias.scope !192, !noalias !189
  %471 = add i64 %426, 32
  %472 = add i64 %427, -4
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %425, !llvm.loop !194

474:                                              ; preds = %425, %414
  %475 = phi i64 [ 0, %414 ], [ %471, %425 ]
  %476 = icmp eq i64 %421, 0
  br i1 %476, label %493, label %477

477:                                              ; preds = %474, %477
  %478 = phi i64 [ %490, %477 ], [ %475, %474 ]
  %479 = phi i64 [ %491, %477 ], [ %421, %474 ]
  %480 = getelementptr i32, i32* %227, i64 %478
  %481 = getelementptr i32, i32* %1, i64 %478
  %482 = bitcast i32* %481 to <4 x i32>*
  %483 = load <4 x i32>, <4 x i32>* %482, align 4, !alias.scope !189
  %484 = getelementptr i32, i32* %481, i64 4
  %485 = bitcast i32* %484 to <4 x i32>*
  %486 = load <4 x i32>, <4 x i32>* %485, align 4, !alias.scope !189
  %487 = bitcast i32* %480 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %487, align 4, !alias.scope !192, !noalias !189
  %488 = getelementptr i32, i32* %480, i64 4
  %489 = bitcast i32* %488 to <4 x i32>*
  store <4 x i32> %486, <4 x i32>* %489, align 4, !alias.scope !192, !noalias !189
  %490 = add i64 %478, 8
  %491 = add i64 %479, -1
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %477, !llvm.loop !195

493:                                              ; preds = %477, %474
  %494 = icmp eq i64 %398, %415
  br i1 %494, label %548, label %495

495:                                              ; preds = %493, %400, %393
  %496 = phi i32* [ %227, %400 ], [ %227, %393 ], [ %416, %493 ]
  %497 = phi i32* [ %1, %400 ], [ %1, %393 ], [ %417, %493 ]
  %498 = ptrtoint i32* %497 to i64
  %499 = getelementptr i32, i32* %391, i64 -1
  %500 = ptrtoint i32* %499 to i64
  %501 = sub i64 %500, %498
  %502 = lshr i64 %501, 2
  %503 = add nuw nsw i64 %502, 1
  %504 = and i64 %503, 7
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %515, label %506

506:                                              ; preds = %495, %506
  %507 = phi i32* [ %512, %506 ], [ %496, %495 ]
  %508 = phi i32* [ %511, %506 ], [ %497, %495 ]
  %509 = phi i64 [ %513, %506 ], [ %504, %495 ]
  %510 = load i32, i32* %508, align 4
  store i32 %510, i32* %507, align 4
  %511 = getelementptr inbounds i32, i32* %508, i64 1
  %512 = getelementptr inbounds i32, i32* %507, i64 1
  %513 = add i64 %509, -1
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %506, !llvm.loop !196

515:                                              ; preds = %506, %495
  %516 = phi i32* [ undef, %495 ], [ %512, %506 ]
  %517 = phi i32* [ %496, %495 ], [ %512, %506 ]
  %518 = phi i32* [ %497, %495 ], [ %511, %506 ]
  %519 = icmp ult i64 %501, 28
  br i1 %519, label %548, label %520

520:                                              ; preds = %515, %520
  %521 = phi i32* [ %546, %520 ], [ %517, %515 ]
  %522 = phi i32* [ %545, %520 ], [ %518, %515 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %391
  br i1 %547, label %548, label %520, !llvm.loop !197

548:                                              ; preds = %515, %520, %493, %390
  %549 = phi i32* [ %227, %390 ], [ %416, %493 ], [ %516, %515 ], [ %546, %520 ]
  %550 = ptrtoint i32* %549 to i64
  %551 = load i32*, i32** %8, align 8
  store i64 %385, i64* %189, align 8
  store i64 %550, i64* %24, align 8
  store i64 %226, i64* %16, align 8
  %552 = icmp eq i32* %551, null
  br i1 %552, label %555, label %553

553:                                              ; preds = %548
  %554 = bitcast i32* %551 to i8*
  tail call void @_ZdlPv(i8* %554) #17
  br label %555

555:                                              ; preds = %553, %548, %40, %183, %187, %4
  %556 = phi i32* [ %1, %4 ], [ %1, %187 ], [ %1, %183 ], [ %1, %40 ], [ %224, %548 ], [ %224, %553 ]
  ret i32* %556
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

; Function Attrs: nounwind
declare void @llvm.assume(i1) #14

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_139SpirvVertexAttributeAliasingTransformer19transformLoadHelperEN5angle5spirv11BoxedUint32INS3_11IdRefHelperEEES6_S6_S6_(%"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* nocapture readonly, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.angle::FastVector.271", align 8
  %7 = alloca %"class.angle::FastVector.271", align 16
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %9, align 8
  %11 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %10, i64 %8
  %12 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %0, i64 0, i32 0, i32 2
  %14 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 3
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %12, i64 0, i32 12
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer", %"class.rx::(anonymous namespace)::SpirvVertexAttributeAliasingTransformer"* %0, i64 0, i32 8, i32 0, i64 %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %13, align 8
  tail call void @_ZN5angle5spirv9WriteLoadEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_PKN3spv16MemoryAccessMaskE(%"class.std::__1::vector"* %25, i32 %24, i32 %18, i32 %3, i32* null) #14
  %26 = zext i32 %1 to i64
  %27 = load %"struct.rx::ShaderInterfaceVariableInfo"**, %"struct.rx::ShaderInterfaceVariableInfo"*** %9, align 8
  %28 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %27, i64 %26
  %29 = load %"struct.rx::ShaderInterfaceVariableInfo"*, %"struct.rx::ShaderInterfaceVariableInfo"** %28, align 8
  %30 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %29, i64 0, i32 12
  %31 = load i8, i8* %30, align 1
  %32 = load i8, i8* %20, align 1
  %33 = icmp eq i8 %31, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %5
  %35 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %13, align 8
  tail call void @_ZN5angle5spirv15WriteCopyObjectEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"* %35, i32 %2, i32 %4, i32 %18) #14
  br label %90

36:                                               ; preds = %5
  %37 = icmp eq i8 %31, 1
  br i1 %37, label %38, label %53

38:                                               ; preds = %36
  %39 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %13, align 8
  %40 = bitcast %"class.angle::FastVector.271"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 32, i1 false) #14
  %41 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %6, i64 0, i32 1
  %42 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %6, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32.273"* %42, %"class.angle::spirv::BoxedUint32.273"** %41, align 8
  %43 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %6, i64 0, i32 2
  %44 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 1, i64 8>, <2 x i64>* %44, align 8
  %45 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %6, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  store i32 0, i32* %45, align 8
  call void @_ZN5angle5spirv21WriteCompositeExtractEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %39, i32 %2, i32 %4, i32 %18, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %6) #14
  store i64 0, i64* %43, align 8
  %46 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %41, align 8
  %47 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %46, %42
  %48 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %46, null
  %49 = or i1 %47, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.angle::spirv::BoxedUint32.273"* %46 to i8*
  call void @_ZdaPv(i8* %51) #17
  br label %52

52:                                               ; preds = %38, %50
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #14
  br label %90

53:                                               ; preds = %36
  %54 = bitcast %"class.angle::FastVector.271"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %7, i64 0, i32 0, i32 0, i64 4
  %56 = bitcast %"class.angle::spirv::BoxedUint32.273"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 0, i64 16, i1 false) #14
  %57 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %7, i64 0, i32 1
  %58 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %7, i64 0, i32 0, i32 0, i64 0
  store %"class.angle::spirv::BoxedUint32.273"* %58, %"class.angle::spirv::BoxedUint32.273"** %57, align 16
  %59 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %7, i64 0, i32 2
  %60 = getelementptr inbounds %"class.angle::FastVector.271", %"class.angle::FastVector.271"* %7, i64 0, i32 3
  %61 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 4, i64 8>, <2 x i64>* %61, align 8
  %62 = bitcast %"class.angle::FastVector.271"* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %62, align 16
  %63 = zext i8 %31 to i64
  %64 = bitcast %"class.angle::FastVector.271"* %7 to i8*
  %65 = icmp ugt i8 %31, 8
  br i1 %65, label %66, label %81

66:                                               ; preds = %53, %66
  %67 = phi i64 [ %69, %66 ], [ 8, %53 ]
  %68 = icmp ult i64 %67, %63
  %69 = shl i64 %67, 1
  br i1 %68, label %66, label %70

70:                                               ; preds = %66
  %71 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %67, i64 4) #14
  %72 = extractvalue { i64, i1 } %71, 1
  %73 = extractvalue { i64, i1 } %71, 0
  %74 = select i1 %72, i64 -1, i64 %73
  %75 = call i8* @_Znam(i64 %74) #17
  %76 = icmp eq i64 %67, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = shl nsw i64 %67, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %75, i8 0, i64 %78, i1 false) #14
  br label %79

79:                                               ; preds = %70, %77
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* nonnull align 16 %64, i64 16, i1 false) #14
  %80 = bitcast %"class.angle::spirv::BoxedUint32.273"** %57 to i8**
  store i8* %75, i8** %80, align 16
  store i64 %67, i64* %60, align 16
  br label %81

81:                                               ; preds = %53, %79
  store i64 %63, i64* %59, align 8
  %82 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %13, align 8
  call void @_ZN5angle5spirv18WriteVectorShuffleEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"* %82, i32 %2, i32 %4, i32 %18, i32 %18, %"class.angle::FastVector.271"* nonnull dereferenceable(56) %7) #14
  store i64 0, i64* %59, align 8
  %83 = load %"class.angle::spirv::BoxedUint32.273"*, %"class.angle::spirv::BoxedUint32.273"** %57, align 16
  %84 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %83, %58
  %85 = icmp eq %"class.angle::spirv::BoxedUint32.273"* %83, null
  %86 = or i1 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.angle::spirv::BoxedUint32.273"* %83 to i8*
  call void @_ZdaPv(i8* %88) #17
  br label %89

89:                                               ; preds = %81, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #14
  br label %90

90:                                               ; preds = %52, %89, %34
  ret void
}

declare void @_ZN5angle5spirv15WriteCopyObjectEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_(%"class.std::__1::vector"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN5angle5spirv18WriteVectorShuffleEPNSt3__16vectorIjNS1_9allocatorIjEEEENS0_11BoxedUint32INS0_11IdRefHelperEEES9_S9_S9_RKNS_10FastVectorINS7_INS0_20LiteralIntegerHelperEEELm8ENS1_5arrayISC_Lm8EEEEE(%"class.std::__1::vector"*, i32, i32, i32, i32, %"class.angle::FastVector.271"* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5angle5spirv9ParseLoadEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_S6_PN3spv16MemoryAccessMaskE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, i32*) local_unnamed_addr #4

declare void @_ZN5angle5spirv15ParseTypeMatrixEPKjPNS0_11BoxedUint32INS0_11IdRefHelperEEES6_PNS3_INS0_20LiteralIntegerHelperEEE(i32*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32"*, %"class.angle::spirv::BoxedUint32.273"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.157"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE4findIS9_EENSK_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.156"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %2, 7
  %9 = ptrtoint i8* %5 to i64
  %10 = lshr i64 %9, 12
  %11 = xor i64 %10, %8
  %12 = trunc i64 %2 to i8
  %13 = and i8 %12, 127
  %14 = insertelement <16 x i8> undef, i8 %13, i32 0
  %15 = shufflevector <16 x i8> %14, <16 x i8> undef, <16 x i32> zeroinitializer
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, -1
  %21 = zext i8 %19 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  %28 = or i1 %20, %27
  %29 = select i1 %20, i64 %21, i64 %26
  %30 = select i1 %20, i64 %22, i64 %24
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %89, %3
  %33 = phi i64 [ %11, %3 ], [ %91, %89 ]
  %34 = phi i64 [ 0, %3 ], [ %90, %89 ]
  %35 = and i64 %33, %7
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = icmp eq <16 x i8> %15, %38
  %40 = bitcast <16 x i1> %39 to i16
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %32
  %43 = zext i16 %40 to i32
  %44 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %16, align 8
  br label %45

45:                                               ; preds = %42, %78
  %46 = phi i32 [ %43, %42 ], [ %80, %78 ]
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 false) #14, !range !14
  %48 = zext i32 %47 to i64
  %49 = add i64 %35, %48
  %50 = and i64 %49, %7
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %44, i64 %50
  %52 = bitcast %"union.absl::container_internal::map_slot_type.157"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %45
  %57 = zext i8 %54 to i64
  %58 = ptrtoint %"union.absl::container_internal::map_slot_type.157"* %51 to i64
  br label %66

59:                                               ; preds = %45
  %60 = bitcast %"union.absl::container_internal::map_slot_type.157"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %44, i64 %50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp sgt i64 %63, -1
  br i1 %64, label %66, label %65, !prof !2

65:                                               ; preds = %59
  tail call void @llvm.trap() #14
  unreachable

66:                                               ; preds = %59, %56
  %67 = phi i64 [ %61, %59 ], [ %58, %56 ]
  %68 = phi i64 [ %63, %59 ], [ %57, %56 ]
  br i1 %28, label %70, label %69, !prof !198

69:                                               ; preds = %66
  tail call void @llvm.trap() #14
  unreachable

70:                                               ; preds = %66
  %71 = inttoptr i64 %67 to i8*
  %72 = icmp eq i64 %68, %29
  br i1 %72, label %73, label %78, !prof !199

73:                                               ; preds = %70
  %74 = icmp eq i64 %68, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %73
  %76 = tail call i32 @bcmp(i8* %71, i8* %31, i64 %68) #14
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78, !prof !2

78:                                               ; preds = %70, %75
  %79 = add i32 %46, -1
  %80 = and i32 %79, %46
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %45

82:                                               ; preds = %73, %75
  %83 = getelementptr inbounds i8, i8* %5, i64 %50
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #14
  br label %92

85:                                               ; preds = %78, %32
  %86 = icmp eq <16 x i8> %38, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %87 = bitcast <16 x i1> %86 to i16
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %92, !prof !3

89:                                               ; preds = %85
  %90 = add i64 %34, 16
  %91 = add i64 %90, %35
  br label %32

92:                                               ; preds = %85, %82
  %93 = phi %"union.absl::container_internal::map_slot_type.157"* [ %51, %82 ], [ undef, %85 ]
  %94 = phi i8* [ %83, %82 ], [ null, %85 ]
  %95 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } undef, i8* %94, 0
  %96 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.157"* } %95, %"union.absl::container_internal::map_slot_type.157"* %93, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.157"* } %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !3

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #14
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #14
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #4

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE22find_or_prepare_insertIS9_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.156"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !2

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #14
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %112, %20
  %59 = phi i64 [ %41, %20 ], [ %114, %112 ]
  %60 = phi i64 [ 0, %20 ], [ %113, %112 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %46, align 8
  br label %71

71:                                               ; preds = %68, %104
  %72 = phi i32 [ %69, %68 ], [ %106, %104 ]
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #14, !range !14
  %74 = zext i32 %73 to i64
  %75 = add i64 %61, %74
  %76 = and i64 %75, %37
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %70, i64 %76, i32 0
  %78 = bitcast %"struct.std::__1::pair"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = zext i8 %80 to i64
  %84 = ptrtoint %"struct.std::__1::pair"* %77 to i64
  br label %92

85:                                               ; preds = %71
  %86 = bitcast %"struct.std::__1::pair"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %70, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %85
  tail call void @llvm.trap() #14
  unreachable

92:                                               ; preds = %85, %82
  %93 = phi i64 [ %87, %85 ], [ %84, %82 ]
  %94 = phi i64 [ %89, %85 ], [ %83, %82 ]
  br i1 %54, label %96, label %95, !prof !198

95:                                               ; preds = %92
  tail call void @llvm.trap() #14
  unreachable

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = icmp eq i64 %94, %55
  br i1 %98, label %99, label %104, !prof !199

99:                                               ; preds = %96
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %99
  %102 = tail call i32 @bcmp(i8* %97, i8* %57, i64 %94) #14
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %117, label %104, !prof !2

104:                                              ; preds = %96, %101
  %105 = add i32 %72, -1
  %106 = and i32 %105, %72
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %71

108:                                              ; preds = %104, %58
  %109 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %115, !prof !3

112:                                              ; preds = %108
  %113 = add i64 %60, 16
  %114 = add i64 %113, %61
  br label %58

115:                                              ; preds = %108
  %116 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.156"* %0, i64 %33)
  br label %117

117:                                              ; preds = %101, %99, %115
  %118 = phi i64 [ %116, %115 ], [ %76, %99 ], [ %76, %101 ]
  %119 = phi i8 [ 1, %115 ], [ 0, %99 ], [ 0, %101 ]
  %120 = insertvalue { i64, i8 } undef, i64 %118, 0
  %121 = insertvalue { i64, i8 } %120, i8 %119, 1
  ret { i64, i8 } %121
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.156"*, i64) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #14, !range !14
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.156"* %0, i64 1) #14
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.156"* %0) #14
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.156"* %0, i64 %58) #14
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #14, !range !14
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.156"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 136
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #17
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.157"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %111, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 4
  %27 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %28 = bitcast %"class.absl::container_internal::CompressedTuple.158"* %26 to %"class.std::__1::allocator.161"*
  br label %30

29:                                               ; preds = %107
  br i1 %24, label %111, label %110

30:                                               ; preds = %25, %107
  %31 = phi i64 [ 0, %25 ], [ %108, %107 ]
  %32 = getelementptr inbounds i8, i8* %4, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %35, label %107

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %6, i64 %31
  %37 = bitcast %"union.absl::container_internal::map_slot_type.157"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = zext i8 %39 to i64
  %43 = ptrtoint %"union.absl::container_internal::map_slot_type.157"* %36 to i64
  br label %51

44:                                               ; preds = %35
  %45 = bitcast %"union.absl::container_internal::map_slot_type.157"* %36 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %6, i64 %31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp sgt i64 %48, -1
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %44
  tail call void @llvm.trap() #14
  unreachable

51:                                               ; preds = %41, %44
  %52 = phi i64 [ %46, %44 ], [ %43, %41 ]
  %53 = phi i64 [ %48, %44 ], [ %42, %41 ]
  %54 = inttoptr i64 %52 to i8*
  %55 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %27, i8* %54, i64 %53) #14
  %56 = add i64 %55, %53
  %57 = zext i64 %56 to i128
  %58 = mul nuw i128 %57, 11376068507788127593
  %59 = lshr i128 %58, 64
  %60 = xor i128 %59, %58
  %61 = trunc i128 %60 to i64
  %62 = load i8*, i8** %3, align 8
  %63 = load i64, i64* %7, align 8
  %64 = lshr i64 %61, 7
  %65 = ptrtoint i8* %62 to i64
  %66 = lshr i64 %65, 12
  %67 = xor i64 %64, %66
  %68 = and i64 %67, %63
  %69 = getelementptr inbounds i8, i8* %62, i64 %68
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp slt <16 x i8> %71, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %51, %75
  %76 = phi i64 [ %80, %75 ], [ %68, %51 ]
  %77 = phi i64 [ %78, %75 ], [ 0, %51 ]
  %78 = add i64 %77, 16
  %79 = add i64 %78, %76
  %80 = and i64 %79, %63
  %81 = getelementptr inbounds i8, i8* %62, i64 %80
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = icmp slt <16 x i8> %83, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %85 = bitcast <16 x i1> %84 to i16
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %75, label %87

87:                                               ; preds = %75, %51
  %88 = phi i64 [ %68, %51 ], [ %80, %75 ]
  %89 = phi i16 [ %73, %51 ], [ %85, %75 ]
  %90 = zext i16 %89 to i32
  %91 = tail call i32 @llvm.cttz.i32(i32 %90, i1 false) #14, !range !14
  %92 = zext i32 %91 to i64
  %93 = add i64 %88, %92
  %94 = and i64 %93, %63
  %95 = trunc i128 %60 to i8
  %96 = and i8 %95, 127
  %97 = getelementptr inbounds i8, i8* %62, i64 %94
  store i8 %96, i8* %97, align 1
  %98 = load i8*, i8** %3, align 8
  %99 = add i64 %94, -15
  %100 = load i64, i64* %7, align 8
  %101 = and i64 %99, %100
  %102 = and i64 %100, 15
  %103 = add i64 %101, %102
  %104 = getelementptr inbounds i8, i8* %98, i64 %103
  store i8 %96, i8* %104, align 1
  %105 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %5, align 8
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %105, i64 %94
  tail call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_(%"class.std::__1::allocator.161"* %28, %"union.absl::container_internal::map_slot_type.157"* %106, %"union.absl::container_internal::map_slot_type.157"* %36) #14
  br label %107

107:                                              ; preds = %30, %87
  %108 = add nuw i64 %31, 1
  %109 = icmp eq i64 %108, %8
  br i1 %109, label %29, label %30

110:                                              ; preds = %29
  tail call void @_ZdlPv(i8* %4) #17
  br label %111

111:                                              ; preds = %2, %29, %110
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.156"*) local_unnamed_addr #15 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type.157", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #14
  %7 = bitcast %"union.absl::container_internal::map_slot_type.157"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 136, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 1
  %13 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %14 = bitcast %"class.absl::container_internal::CompressedTuple.158"* %11 to %"class.std::__1::allocator.161"*
  br label %23

15:                                               ; preds = %140, %1
  %16 = phi i64 [ 0, %1 ], [ %142, %140 ]
  %17 = lshr i64 %16, 3
  %18 = sub i64 %16, %17
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.156", %"class.absl::container_internal::raw_hash_set.156"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %21, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %7) #14
  ret void

23:                                               ; preds = %10, %140
  %24 = phi i64 [ 0, %10 ], [ %142, %140 ]
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -2
  br i1 %28, label %29, label %140

29:                                               ; preds = %23
  %30 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %12, align 8
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %30, i64 %24, i32 0
  %32 = bitcast %"struct.std::__1::pair"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = zext i8 %34 to i64
  %38 = ptrtoint %"struct.std::__1::pair"* %31 to i64
  br label %46

39:                                               ; preds = %29
  %40 = bitcast %"struct.std::__1::pair"* %31 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %30, i64 %24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp sgt i64 %43, -1
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %39
  call void @llvm.trap() #14
  unreachable

46:                                               ; preds = %36, %39
  %47 = phi i64 [ %41, %39 ], [ %38, %36 ]
  %48 = phi i64 [ %43, %39 ], [ %37, %36 ]
  %49 = inttoptr i64 %47 to i8*
  %50 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %13, i8* %49, i64 %48) #14
  %51 = add i64 %50, %48
  %52 = zext i64 %51 to i128
  %53 = mul nuw i128 %52, 11376068507788127593
  %54 = lshr i128 %53, 64
  %55 = xor i128 %54, %53
  %56 = trunc i128 %55 to i64
  %57 = load i8*, i8** %3, align 8
  %58 = load i64, i64* %5, align 8
  %59 = lshr i64 %56, 7
  %60 = ptrtoint i8* %57 to i64
  %61 = lshr i64 %60, 12
  %62 = xor i64 %59, %61
  %63 = and i64 %62, %58
  %64 = getelementptr inbounds i8, i8* %57, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1
  %67 = icmp slt <16 x i8> %66, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %46, %70
  %71 = phi i64 [ %75, %70 ], [ %63, %46 ]
  %72 = phi i64 [ %73, %70 ], [ 0, %46 ]
  %73 = add i64 %72, 16
  %74 = add i64 %73, %71
  %75 = and i64 %74, %58
  %76 = getelementptr inbounds i8, i8* %57, i64 %75
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1
  %79 = icmp slt <16 x i8> %78, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %80 = bitcast <16 x i1> %79 to i16
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %70, label %82

82:                                               ; preds = %70, %46
  %83 = phi i64 [ %63, %46 ], [ %75, %70 ]
  %84 = phi i16 [ %68, %46 ], [ %80, %70 ]
  %85 = zext i16 %84 to i32
  %86 = call i32 @llvm.cttz.i32(i32 %85, i1 false) #14, !range !14
  %87 = zext i32 %86 to i64
  %88 = add i64 %83, %87
  %89 = and i64 %88, %58
  %90 = sub i64 %89, %63
  %91 = sub i64 %24, %63
  %92 = xor i64 %90, %91
  %93 = and i64 %92, %58
  %94 = icmp ult i64 %93, 16
  br i1 %94, label %95, label %106, !prof !2

95:                                               ; preds = %82
  %96 = trunc i128 %55 to i8
  %97 = and i8 %96, 127
  %98 = getelementptr inbounds i8, i8* %57, i64 %24
  store i8 %97, i8* %98, align 1
  %99 = load i8*, i8** %3, align 8
  %100 = add i64 %24, -15
  %101 = load i64, i64* %5, align 8
  %102 = and i64 %101, %100
  %103 = and i64 %101, 15
  %104 = add i64 %102, %103
  %105 = getelementptr inbounds i8, i8* %99, i64 %104
  store i8 %97, i8* %105, align 1
  br label %140

106:                                              ; preds = %82
  %107 = getelementptr inbounds i8, i8* %57, i64 %89
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, -128
  %110 = trunc i128 %55 to i8
  %111 = and i8 %110, 127
  store i8 %111, i8* %107, align 1
  %112 = load i8*, i8** %3, align 8
  %113 = add i64 %89, -15
  %114 = load i64, i64* %5, align 8
  %115 = and i64 %114, %113
  %116 = and i64 %114, 15
  %117 = add i64 %115, %116
  %118 = getelementptr inbounds i8, i8* %112, i64 %117
  store i8 %111, i8* %118, align 1
  %119 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %12, align 8
  br i1 %109, label %120, label %132

120:                                              ; preds = %106
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %119, i64 %89
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %119, i64 %24
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_(%"class.std::__1::allocator.161"* %14, %"union.absl::container_internal::map_slot_type.157"* %121, %"union.absl::container_internal::map_slot_type.157"* %122) #14
  %123 = load i8*, i8** %3, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 %24
  store i8 -128, i8* %124, align 1
  %125 = load i8*, i8** %3, align 8
  %126 = add i64 %24, -15
  %127 = load i64, i64* %5, align 8
  %128 = and i64 %127, %126
  %129 = and i64 %127, 15
  %130 = add i64 %128, %129
  %131 = getelementptr inbounds i8, i8* %125, i64 %130
  store i8 -128, i8* %131, align 1
  br label %140

132:                                              ; preds = %106
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %119, i64 %24
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_(%"class.std::__1::allocator.161"* %14, %"union.absl::container_internal::map_slot_type.157"* nonnull %2, %"union.absl::container_internal::map_slot_type.157"* %133) #14
  %134 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %12, align 8
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %134, i64 %24
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %134, i64 %89
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_(%"class.std::__1::allocator.161"* %14, %"union.absl::container_internal::map_slot_type.157"* %135, %"union.absl::container_internal::map_slot_type.157"* %136) #14
  %137 = load %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"** %12, align 8
  %138 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %137, i64 %89
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_(%"class.std::__1::allocator.161"* %14, %"union.absl::container_internal::map_slot_type.157"* %138, %"union.absl::container_internal::map_slot_type.157"* nonnull %2) #14
  %139 = add i64 %24, -1
  br label %140

140:                                              ; preds = %95, %132, %120, %23
  %141 = phi i64 [ %24, %23 ], [ %24, %95 ], [ %24, %120 ], [ %139, %132 ]
  %142 = add i64 %141, 1
  %143 = load i64, i64* %5, align 8
  %144 = icmp eq i64 %142, %143
  br i1 %144, label %15, label %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEE8transferINS6_INS2_4pairIKS8_SA_EEEEEEvPT_PNS0_13map_slot_typeIS8_SA_EESL_(%"class.std::__1::allocator.161"*, %"union.absl::container_internal::map_slot_type.157"*, %"union.absl::container_internal::map_slot_type.157"*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"union.absl::container_internal::map_slot_type.157"* %1 to i8*
  %5 = bitcast %"union.absl::container_internal::map_slot_type.157"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #14
  %6 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %6 to i8*
  %9 = bitcast %"struct.rx::ShaderInterfaceVariableInfo"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 20, i1 false) #14
  %10 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 5, i32 0
  %11 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 5, i32 0
  %12 = load i8, i8* %11, align 1
  store i8 %12, i8* %10, align 1
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 7
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 7
  %15 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %13 to i8*
  %16 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false) #14
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 7, i32 8
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 7, i32 8
  %19 = bitcast %"class.std::__1::vector.145"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #14
  %20 = bitcast %"class.std::__1::vector.145"* %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.145"* %17 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 7, i32 8, i32 0, i32 1
  %24 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 7, i32 8, i32 0, i32 1
  %27 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 7, i32 8, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 7, i32 8, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %"class.std::__1::vector.145"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #14
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 8
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 8
  %36 = bitcast %"class.std::__1::vector.145"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #14
  %37 = bitcast %"class.std::__1::vector.145"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.145"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %41 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %44 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 8, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 8, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"class.std::__1::vector.145"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #14
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %1, i64 0, i32 0, i32 1, i32 9
  %52 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 5, i1 false) #14
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %35) #14
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 1, i32 7, i32 8, i32 0
  %54 = getelementptr inbounds %"class.std::__1::__vector_base.146", %"class.std::__1::__vector_base.146"* %53, i64 0, i32 0
  %55 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %54, align 8
  %56 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %55, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %3
  %58 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %55 to i8*
  %59 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %23, align 8
  %60 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, %55
  br i1 %60, label %69, label %61

61:                                               ; preds = %57, %61
  %62 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %63, %61 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %62, i64 -1
  %64 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %62, i64 -1, i32 8
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEED2Ev(%"class.std::__1::vector.145"* %64) #14
  %65 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %63, %55
  br i1 %65, label %66, label %61

66:                                               ; preds = %61
  %67 = bitcast %"class.std::__1::__vector_base.146"* %53 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %57
  %70 = phi i8* [ %68, %66 ], [ %58, %57 ]
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %55, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %23, align 8
  tail call void @_ZdlPv(i8* %70) #17
  br label %71

71:                                               ; preds = %69, %3
  %72 = bitcast %"union.absl::container_internal::map_slot_type.157"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.157", %"union.absl::container_internal::map_slot_type.157"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #17
  br label %79

79:                                               ; preds = %71, %76
  ret void
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!7 = distinct !{!7, !8, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!12 = distinct !{!12, !13, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!14 = !{i32 0, i32 33}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !18, !16}
!18 = !{!"llvm.loop.unroll.runtime.disable"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!22 = !{i8 0, i8 2}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!26 = distinct !{!26, !27, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN2rx16GetXfbBufferNameEj: argument 0"}
!30 = distinct !{!30, !"_ZN2rx16GetXfbBufferNameEj"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN2rx16GetXfbBufferNameEj: argument 0"}
!36 = distinct !{!36, !"_ZN2rx16GetXfbBufferNameEj"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!43 = distinct !{!43, !44, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!47 = distinct !{!47, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!48 = distinct !{!48, !49, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!49 = distinct !{!49, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!53 = distinct !{!53, !54, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!54 = distinct !{!54, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!58 = distinct !{!58, !59, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!60 = !{!61, !63}
!61 = distinct !{!61, !62, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!62 = distinct !{!62, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!63 = distinct !{!63, !64, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!64 = distinct !{!64, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!65 = !{!66, !68}
!66 = distinct !{!66, !67, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!67 = distinct !{!67, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!68 = distinct !{!68, !69, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!69 = distinct !{!69, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!72 = distinct !{!72, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!73 = distinct !{!73, !74, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!74 = distinct !{!74, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!80 = distinct !{!80, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK2rx30ShaderInterfaceVariableInfoMap11getIteratorEN2gl10ShaderTypeE: argument 0"}
!83 = distinct !{!83, !"_ZNK2rx30ShaderInterfaceVariableInfoMap11getIteratorEN2gl10ShaderTypeE"}
!84 = !{}
!85 = !{!86, !88}
!86 = distinct !{!86, !87, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!87 = distinct !{!87, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE16try_emplace_implIRSH_JEEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!88 = distinct !{!88, !89, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_: argument 0"}
!89 = distinct !{!89, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN2rx27ShaderInterfaceVariableInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SB_EEEEE11try_emplaceIS9_JELi0EEENSG_INS0_12raw_hash_setISC_SD_SF_SJ_E8iteratorEbEERKT_DpOT0_"}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !16}
!96 = distinct !{!96, !97}
!97 = !{!"llvm.loop.unroll.disable"}
!98 = distinct !{!98, !97}
!99 = distinct !{!99, !16}
!100 = distinct !{!100, !16}
!101 = distinct !{!101, !97}
!102 = distinct !{!102, !18, !16}
!103 = !{!104, !106}
!104 = distinct !{!104, !105, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!106 = distinct !{!106, !107, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!107 = distinct !{!107, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!108 = !{!109, !111}
!109 = distinct !{!109, !110, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!110 = distinct !{!110, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!111 = distinct !{!111, !112, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!112 = distinct !{!112, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!116 = !{!114, !117}
!117 = distinct !{!117, !118, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!119 = distinct !{!119, !97}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !16}
!126 = distinct !{!126, !16}
!127 = !{!128}
!128 = distinct !{!128, !129}
!129 = distinct !{!129, !"LVerDomain"}
!130 = !{!131}
!131 = distinct !{!131, !129}
!132 = distinct !{!132, !16}
!133 = distinct !{!133, !97}
!134 = distinct !{!134, !16}
!135 = !{!136, !138}
!136 = distinct !{!136, !137, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!137 = distinct !{!137, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!138 = distinct !{!138, !139, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!139 = distinct !{!139, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!143 = !{!144, !141}
!144 = distinct !{!144, !145, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!145 = distinct !{!145, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!151 = distinct !{!151, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!152 = !{!150, !153}
!153 = distinct !{!153, !154, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!154 = distinct !{!154, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!155 = !{!153}
!156 = distinct !{!156, !97}
!157 = !{!158}
!158 = distinct !{!158, !159}
!159 = distinct !{!159, !"LVerDomain"}
!160 = !{!161}
!161 = distinct !{!161, !159}
!162 = distinct !{!162, !16}
!163 = distinct !{!163, !16}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !16}
!170 = distinct !{!170, !97}
!171 = distinct !{!171, !16}
!172 = !{!173}
!173 = distinct !{!173, !174}
!174 = distinct !{!174, !"LVerDomain"}
!175 = !{!176}
!176 = distinct !{!176, !174}
!177 = distinct !{!177, !16}
!178 = distinct !{!178, !97}
!179 = distinct !{!179, !16}
!180 = !{!181}
!181 = distinct !{!181, !182}
!182 = distinct !{!182, !"LVerDomain"}
!183 = !{!184}
!184 = distinct !{!184, !182}
!185 = distinct !{!185, !16}
!186 = distinct !{!186, !97}
!187 = distinct !{!187, !97}
!188 = distinct !{!188, !16}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !16}
!195 = distinct !{!195, !97}
!196 = distinct !{!196, !97}
!197 = distinct !{!197, !16}
!198 = !{!"branch_weights", i32 4001, i32 1}
!199 = !{!"branch_weights", i32 2146410443, i32 1073205}
