; ModuleID = '../../gpu/ipc/scheduler_sequence.cc'
source_filename = "../../gpu/ipc/scheduler_sequence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::ScopedAllowScheduleGpuTask" = type { i8 }
%"class.gpu::SchedulerSequence" = type <{ %"class.gpu::SingleTaskSequence", %"class.gpu::Scheduler"*, %"class.util::IdType", [4 x i8] }>
%"class.gpu::SingleTaskSequence" = type { i32 (...)** }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.gpu::Scheduler" = type { %"class.gpu::SyncPointManager"*, %"class.base::Lock", %"class.base::flat_map", %"class.base::flat_map.1", %"class.base::TimeDelta", i8, %"class.base::TimeTicks" }
%"class.gpu::SyncPointManager" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.1" = type { %"class.base::internal::flat_tree.2" }
%"class.base::internal::flat_tree.2" = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.std::__1::pair.5"*, %"struct.std::__1::pair.5"*, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::pair.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::pair.5"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"*, %"class.std::__1::__compressed_pair.16" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.14", i64 }
%"class.util::IdType.14" = type { %"class.base::StrongAlias.15" }
%"class.base::StrongAlias.15" = type { i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.gpu::SyncToken"* }
%"class.base::OnceCallback.21" = type { %"class.base::internal::CallbackBase" }
%"struct.gpu::Scheduler::Task" = type { %"class.util::IdType", %"class.base::OnceCallback", %"class.std::__1::vector.12", %"class.base::OnceCallback.21" }

@_ZTVN3gpu17SchedulerSequenceE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SchedulerSequence"*)* @_ZN3gpu17SchedulerSequenceD2Ev to i8*), i8* bitcast (void (%"class.gpu::SchedulerSequence"*)* @_ZN3gpu17SchedulerSequenceD0Ev to i8*), i8* bitcast (i32 (%"class.gpu::SchedulerSequence"*)* @_ZN3gpu17SchedulerSequence13GetSequenceIdEv to i8*), i8* bitcast (i1 (%"class.gpu::SchedulerSequence"*)* @_ZN3gpu17SchedulerSequence11ShouldYieldEv to i8*), i8* bitcast (void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)* @_ZN3gpu17SchedulerSequence12ScheduleTaskEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENS5_9allocatorIS7_EEEENS2_IFvNS1_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)* @_ZN3gpu17SchedulerSequence20ScheduleOrRetainTaskEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENS5_9allocatorIS7_EEEENS2_IFvNS1_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*)* @_ZN3gpu17SchedulerSequence12ContinueTaskEN4base12OnceCallbackIFvvEEE to i8*)] }, align 8

@_ZN3gpu26ScopedAllowScheduleGpuTaskC1Ev = hidden unnamed_addr alias void (%"class.gpu::ScopedAllowScheduleGpuTask"*), void (%"class.gpu::ScopedAllowScheduleGpuTask"*)* @_ZN3gpu26ScopedAllowScheduleGpuTaskC2Ev
@_ZN3gpu26ScopedAllowScheduleGpuTaskD1Ev = hidden unnamed_addr alias void (%"class.gpu::ScopedAllowScheduleGpuTask"*), void (%"class.gpu::ScopedAllowScheduleGpuTask"*)* @_ZN3gpu26ScopedAllowScheduleGpuTaskD2Ev
@_ZN3gpu17SchedulerSequenceC1EPNS_9SchedulerE = hidden unnamed_addr alias void (%"class.gpu::SchedulerSequence"*, %"class.gpu::Scheduler"*), void (%"class.gpu::SchedulerSequence"*, %"class.gpu::Scheduler"*)* @_ZN3gpu17SchedulerSequenceC2EPNS_9SchedulerE
@_ZN3gpu17SchedulerSequenceD1Ev = hidden unnamed_addr alias void (%"class.gpu::SchedulerSequence"*), void (%"class.gpu::SchedulerSequence"*)* @_ZN3gpu17SchedulerSequenceD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu26ScopedAllowScheduleGpuTaskC2Ev(%"class.gpu::ScopedAllowScheduleGpuTask"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu26ScopedAllowScheduleGpuTaskD2Ev(%"class.gpu::ScopedAllowScheduleGpuTask"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequence42DefaultDisallowScheduleTaskOnCurrentThreadEv() local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequenceC2EPNS_9SchedulerE(%"class.gpu::SchedulerSequence"* nocapture, %"class.gpu::Scheduler"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3gpu17SchedulerSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 1
  store %"class.gpu::Scheduler"* %1, %"class.gpu::Scheduler"** %4, align 8
  %5 = tail call i32 @_ZN3gpu9Scheduler14CreateSequenceENS_18SchedulingPriorityE(%"class.gpu::Scheduler"* %1, i32 0) #7
  %6 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @_ZN3gpu9Scheduler14CreateSequenceENS_18SchedulingPriorityE(%"class.gpu::Scheduler"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequenceD2Ev(%"class.gpu::SchedulerSequence"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3gpu17SchedulerSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 1
  %4 = load %"class.gpu::Scheduler"*, %"class.gpu::Scheduler"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN3gpu9Scheduler15DestroySequenceEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEE(%"class.gpu::Scheduler"* %4, i32 %6) #7
  ret void
}

declare void @_ZN3gpu9Scheduler15DestroySequenceEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEE(%"class.gpu::Scheduler"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequenceD0Ev(%"class.gpu::SchedulerSequence"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3gpu17SchedulerSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 1
  %4 = load %"class.gpu::Scheduler"*, %"class.gpu::Scheduler"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN3gpu9Scheduler15DestroySequenceEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEE(%"class.gpu::Scheduler"* %4, i32 %6) #7
  %7 = bitcast %"class.gpu::SchedulerSequence"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3gpu17SchedulerSequence13GetSequenceIdEv(%"class.gpu::SchedulerSequence"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu17SchedulerSequence11ShouldYieldEv(%"class.gpu::SchedulerSequence"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 1
  %3 = load %"class.gpu::Scheduler"*, %"class.gpu::Scheduler"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = tail call zeroext i1 @_ZN3gpu9Scheduler11ShouldYieldEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEE(%"class.gpu::Scheduler"* %3, i32 %5) #7
  ret i1 %6
}

declare zeroext i1 @_ZN3gpu9Scheduler11ShouldYieldEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEE(%"class.gpu::Scheduler"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequence12ScheduleTaskEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENS5_9allocatorIS7_EEEENS2_IFvNS1_9TimeTicksEEEE(%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"* nocapture, %"class.std::__1::vector.12"* nocapture, %"class.base::OnceCallback.21"* nocapture) unnamed_addr #1 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.std::__1::vector.12", align 16
  %7 = alloca %"class.base::OnceCallback.21", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.std::__1::vector.12"* %2 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = bitcast %"class.std::__1::vector.12"* %6 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 16
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gpu::SyncToken"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.gpu::SyncToken"** %18 to i64*
  store i64 %17, i64* %19, align 16
  %20 = bitcast %"class.std::__1::vector.12"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #7
  %21 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.21"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.21"* %7 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = bitcast %"class.gpu::SchedulerSequence"* %0 to void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)***
  %26 = load void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)**, void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)*, void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)** %26, i64 5
  %28 = load void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)*, void (%"class.gpu::SchedulerSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*)** %27, align 8
  call void %28(%"class.gpu::SchedulerSequence"* %0, %"class.base::OnceCallback"* nonnull %5, %"class.std::__1::vector.12"* nonnull %6, %"class.base::OnceCallback.21"* nonnull %7) #7
  %29 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #7
  %30 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 0
  %31 = load %"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"** %30, align 16
  %32 = icmp eq %"struct.gpu::SyncToken"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 1
  %35 = bitcast %"struct.gpu::SyncToken"** %34 to i64*
  %36 = ptrtoint %"struct.gpu::SyncToken"* %31 to i64
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %31, i64 0, i32 0
  call void @_ZdlPv(i8* %37) #8
  br label %38

38:                                               ; preds = %4, %33
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequence20ScheduleOrRetainTaskEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENS5_9allocatorIS7_EEEENS2_IFvNS1_9TimeTicksEEEE(%"class.gpu::SchedulerSequence"* nocapture readonly, %"class.base::OnceCallback"* nocapture, %"class.std::__1::vector.12"* nocapture, %"class.base::OnceCallback.21"* nocapture) unnamed_addr #1 align 2 {
  %5 = alloca %"struct.gpu::Scheduler::Task", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.std::__1::vector.12", align 16
  %8 = alloca %"class.base::OnceCallback.21", align 8
  %9 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 1
  %10 = load %"class.gpu::Scheduler"*, %"class.gpu::Scheduler"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = bitcast %"class.std::__1::vector.12"* %2 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = bitcast %"class.std::__1::vector.12"* %7 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %19, align 16
  %20 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.gpu::SyncToken"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.gpu::SyncToken"** %23 to i64*
  store i64 %22, i64* %24, align 16
  %25 = bitcast %"class.std::__1::vector.12"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #7
  %26 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback.21"* %3 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::OnceCallback.21"* %8 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  call void @_ZN3gpu9Scheduler4TaskC1EN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENSA_9allocatorISC_EEEENS7_IFvNS6_9TimeTicksEEEE(%"struct.gpu::Scheduler::Task"* nonnull %5, i32 %12, %"class.base::OnceCallback"* nonnull %6, %"class.std::__1::vector.12"* nonnull %7, %"class.base::OnceCallback.21"* nonnull %8) #7
  call void @_ZN3gpu9Scheduler12ScheduleTaskENS0_4TaskE(%"class.gpu::Scheduler"* %10, %"struct.gpu::Scheduler::Task"* nonnull %5) #7
  call void @_ZN3gpu9Scheduler4TaskD1Ev(%"struct.gpu::Scheduler::Task"* nonnull %5) #7
  %30 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #7
  %31 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %7, i64 0, i32 0, i32 0
  %32 = load %"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"** %31, align 16
  %33 = icmp eq %"struct.gpu::SyncToken"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %7, i64 0, i32 0, i32 1
  %36 = bitcast %"struct.gpu::SyncToken"** %35 to i64*
  %37 = ptrtoint %"struct.gpu::SyncToken"* %32 to i64
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %32, i64 0, i32 0
  call void @_ZdlPv(i8* %38) #8
  br label %39

39:                                               ; preds = %4, %34
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #7
  ret void
}

declare void @_ZN3gpu9Scheduler12ScheduleTaskENS0_4TaskE(%"class.gpu::Scheduler"*, %"struct.gpu::Scheduler::Task"*) local_unnamed_addr #3

declare void @_ZN3gpu9Scheduler4TaskC1EN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENSA_9allocatorISC_EEEENS7_IFvNS6_9TimeTicksEEEE(%"struct.gpu::Scheduler::Task"*, i32, %"class.base::OnceCallback"*, %"class.std::__1::vector.12"*, %"class.base::OnceCallback.21"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gpu9Scheduler4TaskD1Ev(%"struct.gpu::Scheduler::Task"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17SchedulerSequence12ContinueTaskEN4base12OnceCallbackIFvvEEE(%"class.gpu::SchedulerSequence"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 1
  %5 = load %"class.gpu::Scheduler"*, %"class.gpu::Scheduler"** %4, align 8
  %6 = getelementptr inbounds %"class.gpu::SchedulerSequence", %"class.gpu::SchedulerSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void @_ZN3gpu9Scheduler12ContinueTaskEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEEN4base12OnceCallbackIFvvEEE(%"class.gpu::Scheduler"* %5, i32 %7, %"class.base::OnceCallback"* nonnull %3) #7
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #7
  ret void
}

declare void @_ZN3gpu9Scheduler12ContinueTaskEN4util6IdTypeINS_18SyncPointOrderDataEjLj0ELj1EEEN4base12OnceCallbackIFvvEEE(%"class.gpu::Scheduler"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
