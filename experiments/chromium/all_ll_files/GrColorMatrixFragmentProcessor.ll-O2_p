; ModuleID = '../../third_party/skia/src/gpu/effects/generated/GrColorMatrixFragmentProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/generated/GrColorMatrixFragmentProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrColorMatrixFragmentProcessor = type <{ %class.GrFragmentProcessor.base, %class.SkM44, %struct.SkV4, i8, i8, i8, i8 }>
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.SkM44 = type { [16 x float] }
%struct.SkV4 = type { float, float, float, float }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.16*, i32, i32 }
%class.SkTArray.16 = type { i32*, i64 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGLSLColorMatrixFragmentProcessor = type { %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.28, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.30, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.39], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::vector", i32, %class.SkSTArray.120 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.41, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.41 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.42, i32, [4 x i8] }>
%class.SkSTArray.42 = type { %class.SkAlignedSTStorage.43, %class.SkTArray.16 }
%class.SkAlignedSTStorage.43 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.44, i32, [4 x i8] }
%union.anon.44 = type { %struct.anon.45 }
%struct.anon.45 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.93, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.47, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.47 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.48, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.87" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.48 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.52 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.49, [4 x i8] }>
%union.anon.49 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.50, i8* }
%class.sk_sp.50 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.51, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.51 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.52 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.53, void (i8*)*, i8* }
%class.SkNVRefCnt.53 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.48, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.84, %class.sk_sp.86, %class.sk_sp.86 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.60, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.60 = type { %class.SkTHashTable.61 }
%class.SkTHashTable.61 = type { i32, i32, %class.SkAutoTArray.62 }
%class.SkAutoTArray.62 = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.69, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.69 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.70" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.75, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.75 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.76 }
%class.SkTHashTable.76 = type { i32, i32, %class.SkAutoTArray.77 }
%class.SkAutoTArray.77 = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.84 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.85, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.85 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.86 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.92 }
%union.anon.92 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.93 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.94, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.94 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.95"*, [24 x i8] }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.101, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.101 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.105 }
%class.SkTArray.105 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::unique_ptr"* }
%class.SkSTArray.120 = type { %class.SkAlignedSTStorage.121, %class.SkTArray.122 }
%class.SkAlignedSTStorage.121 = type { [160 x i8] }
%class.SkTArray.122 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.28 = type { %class.SkAlignedSTStorage.29, %class.SkTArray }
%class.SkAlignedSTStorage.29 = type { [120 x i8] }
%class.SkSTArray.30 = type { %class.SkAlignedSTStorage.31, %class.SkTArray.32 }
%class.SkAlignedSTStorage.31 = type { [16 x i8] }
%class.SkTArray.32 = type { %"class.std::__1::unique_ptr.33"*, i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.39 = type { %class.SkAlignedSTStorage.40, %class.SkTArray }
%class.SkAlignedSTStorage.40 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.28, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.30, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.39], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN30GrColorMatrixFragmentProcessorD0Ev = comdat any

$_ZNK30GrColorMatrixFragmentProcessor4nameEv = comdat any

$_ZNK30GrColorMatrixFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN34GrGLSLColorMatrixFragmentProcessorD0Ev = comdat any

$_ZN34GrGLSLColorMatrixFragmentProcessor8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN34GrGLSLColorMatrixFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV34GrGLSLColorMatrixFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [14 x i8] c"unpremulInput\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"clampRGBOutput\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"premulOutput\00", align 1
@_ZTV30GrColorMatrixFragmentProcessor = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrColorMatrixFragmentProcessor*)* @_ZN30GrColorMatrixFragmentProcessorD0Ev to i8*), i8* bitcast (i8* (%class.GrColorMatrixFragmentProcessor*)* @_ZNK30GrColorMatrixFragmentProcessor4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrColorMatrixFragmentProcessor*)* @_ZNK30GrColorMatrixFragmentProcessor5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrColorMatrixFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK30GrColorMatrixFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrColorMatrixFragmentProcessor*)* @_ZNK30GrColorMatrixFragmentProcessor17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrColorMatrixFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK30GrColorMatrixFragmentProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrColorMatrixFragmentProcessor*, %class.GrFragmentProcessor*)* @_ZNK30GrColorMatrixFragmentProcessor9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"ColorMatrixFragmentProcessor\00", align 1
@_ZTV34GrGLSLColorMatrixFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLColorMatrixFragmentProcessor*)* @_ZN34GrGLSLColorMatrixFragmentProcessorD0Ev to i8*), i8* bitcast (void (%class.GrGLSLColorMatrixFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN34GrGLSLColorMatrixFragmentProcessor8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLColorMatrixFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN34GrGLSLColorMatrixFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.9 = private unnamed_addr constant [402 x i8] c"half4 color = %s;\0A@if (%s) {\0A    color = half4(color.xyz / max(color.w, 9.9999997473787516e-05), color.w);\0A}\0Acolor = (sk_Caps.rewriteMatrixVectorMultiply ? ((%s[0] * color.x + %s[1] * color.y) + %s[2] * color.z) + %s[3] * color.w : %s * color) + %s;\0A@if (%s) {\0A    color = clamp(color, 0.0, 1.0);\0A} else {\0A    color.w = clamp(color.w, 0.0, 1.0);\0A}\0A@if (%s) {\0A    color.xyz *= color.w;\0A}\0Areturn color;\0A\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"false\00", align 1

@_ZN30GrColorMatrixFragmentProcessorC1ERKS_ = hidden unnamed_addr alias void (%class.GrColorMatrixFragmentProcessor*, %class.GrColorMatrixFragmentProcessor*), void (%class.GrColorMatrixFragmentProcessor*, %class.GrColorMatrixFragmentProcessor*)* @_ZN30GrColorMatrixFragmentProcessorC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK30GrColorMatrixFragmentProcessor17onMakeProgramImplEv(%class.GrColorMatrixFragmentProcessor* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #10
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV34GrGLSLColorMatrixFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %2, i64 44
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 4
  %16 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK30GrColorMatrixFragmentProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrColorMatrixFragmentProcessor* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = zext i8 %5 to i32
  %7 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %8 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, i64 2
  %10 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, align 8
  tail call void %10(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #9
  %11 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = zext i8 %12 to i32
  %14 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %15 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %14, i64 2
  %16 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %15, align 8
  tail call void %16(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #9
  %17 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 5
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = zext i8 %18 to i32
  %20 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %21 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %20, i64 2
  %22 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %21, align 8
  tail call void %22(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK30GrColorMatrixFragmentProcessor9onIsEqualERK19GrFragmentProcessor(%class.GrColorMatrixFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrFragmentProcessor* %1 to %class.GrColorMatrixFragmentProcessor*
  %4 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %6 = bitcast [4 x i8]* %5 to %class.SkM44*
  %7 = tail call zeroext i1 @_ZNK5SkM44eqERKS_(%class.SkM44* %6, %class.SkM44* dereferenceable(64) %4) #9
  br i1 %7, label %8, label %55

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 5
  %10 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 0
  %11 = load float, float* %10, align 4
  %12 = bitcast [4 x i8]* %9 to float*
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %11, %13
  br i1 %14, label %15, label %55

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 1
  %19 = bitcast [4 x i8]* %18 to float*
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %17, %20
  br i1 %21, label %22, label %55

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 2
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 2
  %26 = bitcast [4 x i8]* %25 to float*
  %27 = load float, float* %26, align 4
  %28 = fcmp oeq float %24, %27
  br i1 %28, label %29, label %55

29:                                               ; preds = %22
  %30 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 3
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 3
  %33 = bitcast [4 x i8]* %32 to float*
  %34 = load float, float* %33, align 4
  %35 = fcmp une float %31, %34
  br i1 %35, label %55, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 3
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 0, i32 2
  %40 = bitcast i32* %39 to i8*
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %38, %41
  br i1 %42, label %43, label %55

43:                                               ; preds = %36
  %44 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %3, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %45, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %43
  %50 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 5
  %51 = load i8, i8* %50, align 2, !range !2
  %52 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %3, i64 0, i32 5
  %53 = load i8, i8* %52, align 2, !range !2
  %54 = icmp eq i8 %51, %53
  br label %55

55:                                               ; preds = %2, %8, %15, %22, %49, %43, %36, %29
  %56 = phi i1 [ false, %2 ], [ false, %29 ], [ false, %36 ], [ false, %43 ], [ %54, %49 ], [ false, %22 ], [ false, %15 ], [ false, %8 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN30GrColorMatrixFragmentProcessorC2ERKS_(%class.GrColorMatrixFragmentProcessor*, %class.GrColorMatrixFragmentProcessor* dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrColorMatrixFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrColorMatrixFragmentProcessor* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.3* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV30GrColorMatrixFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %1, i64 0, i32 1
  %21 = bitcast %class.SkM44* %19 to i8*
  %22 = bitcast %class.SkM44* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 64, i1 false)
  %23 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2
  %24 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %1, i64 0, i32 2
  %25 = bitcast %struct.SkV4* %23 to i8*
  %26 = bitcast %struct.SkV4* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 16, i1 false)
  %27 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %1, i64 0, i32 3
  %29 = load i8, i8* %28, align 4, !range !2
  store i8 %29, i8* %27, align 4
  %30 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 4
  %31 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !2
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 5
  %34 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %1, i64 0, i32 5
  %35 = load i8, i8* %34, align 2, !range !2
  store i8 %35, i8* %33, align 2
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK30GrColorMatrixFragmentProcessor5cloneEv(%class.GrColorMatrixFragmentProcessor*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 144) #9
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrColorMatrixFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 32, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV30GrColorMatrixFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 1
  %27 = bitcast %class.SkM44* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %27, i64 64, i1 false) #9
  %28 = getelementptr inbounds i8, i8* %2, i64 124
  %29 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2
  %30 = bitcast %struct.SkV4* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 16, i1 false) #9
  %31 = getelementptr inbounds i8, i8* %2, i64 140
  %32 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !2
  store i8 %33, i8* %31, align 4
  %34 = getelementptr inbounds i8, i8* %2, i64 141
  %35 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  store i8 %36, i8* %34, align 1
  %37 = getelementptr inbounds i8, i8* %2, i64 142
  %38 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 5
  %39 = load i8, i8* %38, align 2, !range !2
  store i8 %39, i8* %37, align 2
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #9
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.4"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #9
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #9
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN30GrColorMatrixFragmentProcessorD0Ev(%class.GrColorMatrixFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.3, %class.SkTArray.3* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #9
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.3* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #9
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrColorMatrixFragmentProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK30GrColorMatrixFragmentProcessor4nameEv(%class.GrColorMatrixFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK30GrColorMatrixFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrColorMatrixFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %14 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %15, align 8
  %17 = icmp eq %class.GrFragmentProcessor* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %2
  %19 = bitcast %class.GrFragmentProcessor* %16 to { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)***
  %20 = load { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)**, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*** %19, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)** %20, i64 4
  %22 = load { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)** %21, align 8
  %23 = tail call { <2 x float>, <2 x float> } %22(%class.GrFragmentProcessor* nonnull %16, %struct.SkRGBA4f* dereferenceable(16) %1) #9
  %24 = extractvalue { <2 x float>, <2 x float> } %23, 0
  %25 = extractvalue { <2 x float>, <2 x float> } %23, 1
  br label %32

26:                                               ; preds = %2
  %27 = bitcast %struct.SkRGBA4f* %1 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 0, i32 2
  %30 = bitcast float* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  br label %32

32:                                               ; preds = %18, %26
  %33 = phi <2 x float> [ %24, %18 ], [ %28, %26 ]
  %34 = phi <2 x float> [ %25, %18 ], [ %31, %26 ]
  %35 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %37, align 8
  %38 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  %39 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %39, align 8
  %40 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %40, align 4
  %41 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %32
  %45 = extractelement <2 x float> %34, i32 1
  %46 = fcmp oeq float %45, 0.000000e+00
  br i1 %46, label %55, label %47

47:                                               ; preds = %44
  %48 = fdiv float 1.000000e+00, %45
  %49 = insertelement <2 x float> undef, float %48, i32 0
  %50 = shufflevector <2 x float> %49, <2 x float> undef, <2 x i32> zeroinitializer
  %51 = fmul <2 x float> %33, %50
  %52 = extractelement <2 x float> %34, i32 0
  %53 = fmul float %52, %48
  %54 = insertelement <2 x float> %34, float %53, i32 0
  br label %55

55:                                               ; preds = %44, %47
  %56 = phi <2 x float> [ %51, %47 ], [ zeroinitializer, %44 ]
  %57 = phi <2 x float> [ %54, %47 ], [ zeroinitializer, %44 ]
  store <2 x float> %56, <2 x float>* %3, align 8
  store <2 x float> %57, <2 x float>* %4, align 8
  %58 = bitcast <2 x float> %56 to <2 x i32>
  %59 = extractelement <2 x i32> %58, i32 0
  %60 = extractelement <2 x float> %56, i32 1
  %61 = bitcast <2 x float> %57 to <2 x i32>
  %62 = extractelement <2 x i32> %61, i32 0
  %63 = extractelement <2 x float> %57, i32 1
  %64 = bitcast float* %40 to i32*
  br label %78

65:                                               ; preds = %32
  %66 = bitcast <2 x float> %33 to <2 x i32>
  %67 = extractelement <2 x i32> %66, i32 0
  %68 = bitcast <2 x float>* %3 to i32*
  store i32 %67, i32* %68, align 8
  %69 = extractelement <2 x i32> %66, i32 1
  %70 = bitcast float* %38 to i32*
  store i32 %69, i32* %70, align 4
  %71 = bitcast <2 x float> %34 to <2 x i32>
  %72 = extractelement <2 x i32> %71, i32 0
  %73 = bitcast <2 x float>* %4 to i32*
  store i32 %72, i32* %73, align 8
  %74 = extractelement <2 x i32> %71, i32 1
  %75 = bitcast float* %40 to i32*
  store i32 %74, i32* %75, align 4
  %76 = bitcast i32 %69 to float
  %77 = bitcast i32 %74 to float
  br label %78

78:                                               ; preds = %65, %55
  %79 = phi i32* [ %75, %65 ], [ %64, %55 ]
  %80 = phi float [ %77, %65 ], [ %63, %55 ]
  %81 = phi i32 [ %72, %65 ], [ %62, %55 ]
  %82 = phi float [ %76, %65 ], [ %60, %55 ]
  %83 = phi i32 [ %67, %65 ], [ %59, %55 ]
  %84 = bitcast i32 %83 to float
  %85 = bitcast i32 %81 to float
  %86 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 1
  %87 = tail call { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44* %86, float %84, float %82, float %85, float %80) #9
  %88 = extractvalue { <2 x float>, <2 x float> } %87, 0
  %89 = extractvalue { <2 x float>, <2 x float> } %87, 1
  %90 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 0
  %91 = bitcast float* %90 to <2 x float>*
  %92 = load <2 x float>, <2 x float>* %91, align 4
  %93 = fadd <2 x float> %92, %88
  %94 = extractelement <2 x float> %89, i32 0
  %95 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 2
  %96 = load float, float* %95, align 4
  %97 = fadd float %94, %96
  %98 = extractelement <2 x float> %89, i32 1
  %99 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 3
  %100 = load float, float* %99, align 4
  %101 = fadd float %98, %100
  %102 = extractelement <2 x float> %93, i32 0
  store float %102, float* %37, align 8
  %103 = extractelement <2 x float> %93, i32 1
  store float %103, float* %38, align 4
  store float %97, float* %39, align 8
  store float %101, float* %40, align 4
  %104 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104)
  store float 0.000000e+00, float* %5, align 4
  %105 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105)
  store float 1.000000e+00, float* %6, align 4
  %106 = fcmp ogt float %101, 1.000000e+00
  %107 = select i1 %106, float* %6, float* %40
  %108 = load float, float* %107, align 4
  %109 = fcmp ogt float %108, 0.000000e+00
  %110 = select i1 %109, float* %107, float* %5
  %111 = bitcast float* %110 to i32*
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %79, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104)
  %113 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 4
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = bitcast i32 %112 to float
  br i1 %115, label %152, label %117

117:                                              ; preds = %78
  %118 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118)
  store float 0.000000e+00, float* %7, align 4
  %119 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119)
  store float 1.000000e+00, float* %8, align 4
  %120 = fcmp ogt float %102, 1.000000e+00
  %121 = select i1 %120, float* %8, float* %37
  %122 = load float, float* %121, align 4
  %123 = fcmp ogt float %122, 0.000000e+00
  %124 = select i1 %123, float* %121, float* %7
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = bitcast <2 x float>* %3 to i32*
  store i32 %126, i32* %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118)
  %128 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128)
  store float 0.000000e+00, float* %9, align 4
  %129 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129)
  store float 1.000000e+00, float* %10, align 4
  %130 = fcmp ogt float %103, 1.000000e+00
  %131 = select i1 %130, float* %10, float* %38
  %132 = load float, float* %131, align 4
  %133 = fcmp ogt float %132, 0.000000e+00
  %134 = select i1 %133, float* %131, float* %9
  %135 = bitcast float* %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = bitcast float* %38 to i32*
  store i32 %136, i32* %137, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128)
  %138 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138)
  store float 0.000000e+00, float* %11, align 4
  %139 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139)
  store float 1.000000e+00, float* %12, align 4
  %140 = fcmp ogt float %97, 1.000000e+00
  %141 = select i1 %140, float* %12, float* %39
  %142 = load float, float* %141, align 4
  %143 = fcmp ogt float %142, 0.000000e+00
  %144 = select i1 %143, float* %141, float* %11
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = bitcast <2 x float>* %4 to i32*
  store i32 %146, i32* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138)
  %148 = insertelement <2 x i32> undef, i32 %126, i32 0
  %149 = insertelement <2 x i32> %148, i32 %136, i32 1
  %150 = bitcast <2 x i32> %149 to <2 x float>
  %151 = bitcast i32 %146 to float
  br label %152

152:                                              ; preds = %78, %117
  %153 = phi float [ %97, %78 ], [ %151, %117 ]
  %154 = phi <2 x float> [ %93, %78 ], [ %150, %117 ]
  %155 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %0, i64 0, i32 5
  %156 = load i8, i8* %155, align 2, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %152
  %159 = insertelement <2 x float> undef, float %116, i32 0
  %160 = shufflevector <2 x float> %159, <2 x float> undef, <2 x i32> zeroinitializer
  %161 = fmul <2 x float> %154, %160
  %162 = fmul float %153, %116
  br label %163

163:                                              ; preds = %152, %158
  %164 = phi float [ %162, %158 ], [ %153, %152 ]
  %165 = phi <2 x float> [ %161, %158 ], [ %154, %152 ]
  %166 = insertelement <2 x float> undef, float %164, i32 0
  %167 = insertelement <2 x float> %166, float %116, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %168 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %165, 0
  %169 = insertvalue { <2 x float>, <2 x float> } %168, <2 x float> %167, 1
  ret { <2 x float>, <2 x float> } %169
}

declare zeroext i1 @_ZNK5SkM44eqERKS_(%class.SkM44*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #6

declare { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44*, float, float, float, float) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN34GrGLSLColorMatrixFragmentProcessorD0Ev(%class.GrGLSLColorMatrixFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLColorMatrixFragmentProcessor, %class.GrGLSLColorMatrixFragmentProcessor* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #9
  %3 = bitcast %class.GrGLSLColorMatrixFragmentProcessor* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN34GrGLSLColorMatrixFragmentProcessor8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLColorMatrixFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %7 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %6, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %9 = bitcast %class.GrFragmentProcessor** %8 to %class.GrColorMatrixFragmentProcessor**
  %10 = load %class.GrColorMatrixFragmentProcessor*, %class.GrColorMatrixFragmentProcessor** %9, align 8
  %11 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %10, i64 0, i32 3
  %12 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %10, i64 0, i32 4
  %13 = getelementptr inbounds %class.GrColorMatrixFragmentProcessor, %class.GrColorMatrixFragmentProcessor* %10, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %15 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %16 = bitcast %class.GrColorMatrixFragmentProcessor* %10 to %class.GrFragmentProcessor*
  %17 = bitcast %class.GrGLSLUniformHandler* %15 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %18 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, i64 13
  %20 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %19, align 8
  %21 = tail call i32 %20(%class.GrGLSLUniformHandler* %15, %class.GrFragmentProcessor* %16, i32 16, i32 34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #9
  %22 = getelementptr inbounds %class.GrGLSLColorMatrixFragmentProcessor, %class.GrGLSLColorMatrixFragmentProcessor* %0, i64 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %24 = bitcast %class.GrGLSLUniformHandler* %23 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %25 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %24, align 8
  %26 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %25, i64 13
  %27 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %26, align 8
  %28 = tail call i32 %27(%class.GrGLSLUniformHandler* %23, %class.GrFragmentProcessor* %16, i32 16, i32 31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #9
  %29 = getelementptr inbounds %class.GrGLSLColorMatrixFragmentProcessor, %class.GrGLSLColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 0
  store i32 %28, i32* %29, align 4
  %30 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %31, align 8
  %32 = getelementptr inbounds %class.GrGLSLColorMatrixFragmentProcessor, %class.GrGLSLColorMatrixFragmentProcessor* %0, i64 0, i32 0
  %33 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 0, i8* %34, align 1
  %35 = bitcast %"class.SkSL::String"* %5 to i8*
  store i8 0, i8* %35, align 8
  %36 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %35, i64 24, i1 false) #9, !noalias !3
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %4, %class.GrGLSLFragmentProcessor* %32, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #9
  %37 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1, !noalias !3
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !3
  call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %2, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  %45 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr i8, i8* %46, i64 -24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %31, align 8
  %51 = load i8, i8* %11, align 4, !range !2
  %52 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %53 = load i32, i32* %22, align 8
  %54 = bitcast %class.GrGLSLUniformHandler* %52 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %55 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %54, align 8
  %56 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %55, i64 3
  %57 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %56, align 8
  %58 = icmp eq i8 %51, 0
  %59 = select i1 %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)
  %60 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %49
  %62 = bitcast i8* %61 to %class.GrGLSLShaderBuilder*
  %63 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %50, i64 0, i32 2
  %64 = call i8* %57(%class.GrGLSLUniformHandler* %52, i32 %53) #9
  %65 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %66 = load i32, i32* %22, align 8
  %67 = bitcast %class.GrGLSLUniformHandler* %65 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %68 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %67, align 8
  %69 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %68, i64 3
  %70 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %69, align 8
  %71 = call i8* %70(%class.GrGLSLUniformHandler* %65, i32 %66) #9
  %72 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %73 = load i32, i32* %22, align 8
  %74 = bitcast %class.GrGLSLUniformHandler* %72 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %75 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %74, align 8
  %76 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %75, i64 3
  %77 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %76, align 8
  %78 = call i8* %77(%class.GrGLSLUniformHandler* %72, i32 %73) #9
  %79 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %80 = load i32, i32* %22, align 8
  %81 = bitcast %class.GrGLSLUniformHandler* %79 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %82 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %81, align 8
  %83 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %82, i64 3
  %84 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %83, align 8
  %85 = call i8* %84(%class.GrGLSLUniformHandler* %79, i32 %80) #9
  %86 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %87 = load i32, i32* %22, align 8
  %88 = bitcast %class.GrGLSLUniformHandler* %86 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %89 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %88, align 8
  %90 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %89, i64 3
  %91 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %90, align 8
  %92 = call i8* %91(%class.GrGLSLUniformHandler* %86, i32 %87) #9
  %93 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %94 = load i32, i32* %29, align 4
  %95 = bitcast %class.GrGLSLUniformHandler* %93 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %96 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %95, align 8
  %97 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %96, i64 3
  %98 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %97, align 8
  %99 = call i8* %98(%class.GrGLSLUniformHandler* %93, i32 %94) #9
  %100 = load i8, i8* %12, align 1, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)
  %103 = load i8, i8* %13, align 2, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %62, i8* getelementptr inbounds ([402 x i8], [402 x i8]* @.str.9, i64 0, i64 0), i8* %63, i8* %59, i8* %64, i8* %71, i8* %78, i8* %85, i8* %92, i8* %99, i8* %102, i8* %105)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN34GrGLSLColorMatrixFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLColorMatrixFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGLSLColorMatrixFragmentProcessor, %class.GrGLSLColorMatrixFragmentProcessor* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 5
  %7 = bitcast [4 x i8]* %6 to %class.SkM44*
  tail call void @_ZNK24GrGLSLProgramDataManager8setSkM44E16GrResourceHandleINS_17UniformHandleKindEERK5SkM44(%class.GrGLSLProgramDataManager* %1, i32 %5, %class.SkM44* dereferenceable(64) %7) #9
  %8 = getelementptr inbounds %class.GrGLSLColorMatrixFragmentProcessor, %class.GrGLSLColorMatrixFragmentProcessor* %0, i64 0, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 5
  %11 = bitcast [4 x i8]* %10 to float*
  %12 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %13 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %13, i64 17
  %15 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %14, align 8
  tail call void %15(%class.GrGLSLProgramDataManager* %1, i32 %9, i32 1, float* %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #9
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #9
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #9
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #9
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #9
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare void @_ZNK24GrGLSLProgramDataManager8setSkM44E16GrResourceHandleINS_17UniformHandleKindEERK5SkM44(%class.GrGLSLProgramDataManager*, i32, %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!5 = distinct !{!5, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
