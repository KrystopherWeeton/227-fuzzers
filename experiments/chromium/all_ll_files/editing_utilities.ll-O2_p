; ModuleID = '../../third_party/blink/renderer/core/editing/editing_utilities.cc'
source_filename = "../../third_party/blink/renderer/core/editing/editing_utilities.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1742", i64 }
%"class.std::__1::vector.1742" = type { %"class.std::__1::__vector_base.1743" }
%"class.std::__1::__vector_base.1743" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1744" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1459", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1464", %"class.blink::Member.1471", %"class.std::__1::unique_ptr.1473", %"class.blink::Member.1479", i8, i8, %"class.WTF::String", %"class.blink::Member.1481", i8, [7 x i8], %"class.blink::HeapHashMap.1483", %"class.blink::HeapObserverSet", %"class.blink::Member.1497", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1499", i32, i8, i8, %"class.blink::WeakMember.1501", %"class.blink::Member.1502" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1526", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1593", i32, i8, [3 x i8], %"class.blink::HeapVector.1595", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1603", %"class.blink::Member.1605", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1614", %"class.blink::Member.1737", %"class.blink::Member.1739", i8, [7 x i8] }>
%"class.blink::Supplementable.1526" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1527" }
%"class.blink::HeapHashMap.1527" = type { %"class.WTF::HashMap.1530" }
%"class.WTF::HashMap.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"struct.WTF::KeyValuePair.1533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1533" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1542" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1534" }
%"class.blink::HeapObserverSet.1534" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1535" }
%"class.blink::HeapHashSet.1535" = type { %"class.WTF::HashSet.1538" }
%"class.WTF::HashSet.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"class.blink::WeakMember.1541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1541" = type opaque
%"class.blink::Supplementable.1542" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1543" }
%"class.blink::HeapHashMap.1543" = type { %"class.WTF::HashMap.1546" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1549" = type { i8*, %"class.blink::Member.2867" }
%"class.blink::Member.2867" = type { %"class.blink::MemberBase.2868" }
%"class.blink::MemberBase.2868" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2869" }
%"class.blink::Member.2869" = type { %"class.blink::MemberBase.2870" }
%"class.blink::MemberBase.2870" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1550, %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1583", %"class.std::__1::unique_ptr.1583", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1589", i32, i32 }
%class.scoped_refptr.1550 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1551", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1553", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1558 }
%"class.WTF::RefCounted.1551" = type { %"class.base::RefCounted.1552" }
%"class.base::RefCounted.1552" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1553" = type { %"class.absl::optional_internal::optional_data.1554" }
%"class.absl::optional_internal::optional_data.1554" = type { %"class.absl::optional_internal::optional_data_base.1555" }
%"class.absl::optional_internal::optional_data_base.1555" = type { %"class.absl::optional_internal::optional_data_dtor_base.1556" }
%"class.absl::optional_internal::optional_data_dtor_base.1556" = type { i8, %union.anon.1557 }
%union.anon.1557 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1558 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1570", %"class.std::__1::map.1579"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1553" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1562", %"class.std::__1::__compressed_pair.1567" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1570" = type { %"class.std::__1::__tree.1571" }
%"class.std::__1::__tree.1571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1572", %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1579" = type opaque
%"class.std::__1::unique_ptr.1583" = type { %"class.std::__1::__compressed_pair.1584" }
%"class.std::__1::__compressed_pair.1584" = type { %"struct.std::__1::__compressed_pair_elem.1585" }
%"struct.std::__1::__compressed_pair_elem.1585" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1595" = type { %"class.WTF::Vector.1598" }
%"class.WTF::Vector.1598" = type { %"class.WTF::VectorBuffer.1599" }
%"class.WTF::VectorBuffer.1599" = type { %"class.WTF::VectorBufferBase.1600" }
%"class.WTF::VectorBufferBase.1600" = type { %"class.blink::Member.1601"*, i32, i32 }
%"class.blink::Member.1601" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1607", i32, i32 }
%"class.blink::HeapHashMap.1607" = type { %"class.WTF::HashMap.1610" }
%"class.WTF::HashMap.1610" = type { %"class.WTF::HashTable.1611" }
%"class.WTF::HashTable.1611" = type <{ %"struct.WTF::KeyValuePair.1613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1613" = type opaque
%"class.std::__1::unique_ptr.1614" = type { %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1616" }
%"struct.std::__1::__compressed_pair_elem.1616" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1617" }
%"class.std::__1::unique_ptr.1617" = type { %"class.std::__1::__compressed_pair.1618" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.1619" }
%"struct.std::__1::__compressed_pair_elem.1619" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1620" }
%"class.WTF::Vector.1620" = type { %"class.WTF::VectorBuffer.1621" }
%"class.WTF::VectorBuffer.1621" = type { %"class.WTF::VectorBufferBase.1622" }
%"class.WTF::VectorBufferBase.1622" = type { %"class.mojo::StructPtr.1623"*, i32, i32 }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1627", %"class.WTF::HashMap.1634", %"class.WTF::HashMap.1639", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1644", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1627" = type { %"class.std::__1::unique_ptr.1628" }
%"class.std::__1::unique_ptr.1628" = type { %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"struct.WTF::KeyValuePair.1638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1638" = type opaque
%"class.WTF::HashMap.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"struct.WTF::KeyValuePair.1643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1643" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1644" = type { %"class.std::__1::unique_ptr.1645" }
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1728" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1659", i32 }>
%"class.std::__1::unique_ptr.1659" = type { %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.1661" }
%"struct.std::__1::__compressed_pair_elem.1661" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1662", %"class.absl::optional.1663", %"class.absl::optional.1668", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1681", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1703", %"class.std::__1::map.1714", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1723", i8, %class.scoped_refptr.1673, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1724" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1662" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1663" = type { %"class.absl::optional_internal::optional_data.1664" }
%"class.absl::optional_internal::optional_data.1664" = type { %"class.absl::optional_internal::optional_data_base.1665" }
%"class.absl::optional_internal::optional_data_base.1665" = type { %"class.absl::optional_internal::optional_data_dtor_base.1666" }
%"class.absl::optional_internal::optional_data_dtor_base.1666" = type { i8, %union.anon.1667 }
%union.anon.1667 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1668" = type { %"class.absl::optional_internal::optional_data.1669" }
%"class.absl::optional_internal::optional_data.1669" = type { %"class.absl::optional_internal::optional_data_base.1670" }
%"class.absl::optional_internal::optional_data_base.1670" = type { %"class.absl::optional_internal::optional_data_dtor_base.1671" }
%"class.absl::optional_internal::optional_data_dtor_base.1671" = type { i8, %union.anon.1672 }
%union.anon.1672 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1673, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1674" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1674" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1679 }
%class.scoped_refptr.1679 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1741", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1673, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1741" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1680 }
%class.scoped_refptr.1680 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1684", %class.scoped_refptr.1685 }
%"class.base::RepeatingCallback.1684" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1685 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1686", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1686" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1690", %"class.std::__1::unique_ptr.1696", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1702" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1702" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1703" = type { %"class.std::__1::__tree.1704" }
%"class.std::__1::__tree.1704" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1705", %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1714" = type { %"class.std::__1::__tree.1715" }
%"class.std::__1::__tree.1715" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1716", %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1723" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1673 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1724" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1728" = type { %"class.std::__1::__compressed_pair.1729" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.1730" }
%"struct.std::__1::__compressed_pair_elem.1730" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1517", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1517" = type { %"class.WTF::Vector.1520" }
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.1522" }
%"class.WTF::VectorBufferBase.1522" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1749", [4 x i8] }>
%"class.WTF::RefCounted.1749" = type { %"class.base::RefCounted.1750" }
%"class.base::RefCounted.1750" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2871" }
%"class.WTF::Vector.2871" = type { %"class.WTF::VectorBuffer.2872" }
%"class.WTF::VectorBuffer.2872" = type { %"class.WTF::VectorBufferBase.2873" }
%"class.WTF::VectorBufferBase.2873" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2876", %"class.absl::optional.2876", %"class.absl::optional.2876" }
%"class.absl::optional.2876" = type { %"class.absl::optional_internal::optional_data.2877" }
%"class.absl::optional_internal::optional_data.2877" = type { %"class.absl::optional_internal::optional_data_base.2878" }
%"class.absl::optional_internal::optional_data_base.2878" = type { %"class.absl::optional_internal::optional_data_dtor_base.2879" }
%"class.absl::optional_internal::optional_data_dtor_base.2879" = type { i8, %union.anon.2880 }
%union.anon.2880 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2881 }
%class.scoped_refptr.2881 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2882", %"class.WTF::Vector.630", %"class.WTF::Vector.2884", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2882" = type { %"class.base::RefCounted.2883" }
%"class.base::RefCounted.2883" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2884" = type { %"class.WTF::VectorBuffer.2885" }
%"class.WTF::VectorBuffer.2885" = type { %"class.WTF::VectorBufferBase.2886" }
%"class.WTF::VectorBufferBase.2886" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2887 }
%union.anon.2887 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2891" }
%"class.WTF::VectorBuffer.2891" = type { %"class.WTF::VectorBufferBase.2892", [32 x i8] }
%"class.WTF::VectorBufferBase.2892" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2958 }
%class.scoped_refptr.2958 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2968" }
%"class.blink::Member.2968" = type { %"class.blink::MemberBase.2969" }
%"class.blink::MemberBase.2969" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2964" }
%"class.blink::MemberBase.2964" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2965" }
%"class.blink::MemberBase.2965" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2966" }
%"class.blink::MemberBase.2966" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2967" }
%"class.blink::MemberBase.2967" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2959", %"class.WTF::Vector.2959" }
%"class.WTF::Vector.2959" = type { %"class.WTF::VectorBuffer.2960" }
%"class.WTF::VectorBuffer.2960" = type { %"class.WTF::VectorBufferBase.2961" }
%"class.WTF::VectorBufferBase.2961" = type { %class.scoped_refptr.2958*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1457", %"class.blink::Member.1457", i32, i8, [3 x i8] }>
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1459" = type { %"class.WTF::VectorBuffer.1460" }
%"class.WTF::VectorBuffer.1460" = type { %"class.WTF::VectorBufferBase.1461" }
%"class.WTF::VectorBufferBase.1461" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1464" = type { %"class.WTF::HashMap.1467" }
%"class.WTF::HashMap.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"struct.WTF::KeyValuePair.1470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1470" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1473" = type { %"class.std::__1::__compressed_pair.1474" }
%"class.std::__1::__compressed_pair.1474" = type { %"struct.std::__1::__compressed_pair_elem.1475" }
%"struct.std::__1::__compressed_pair_elem.1475" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1483" = type { %"class.WTF::HashMap.1486" }
%"class.WTF::HashMap.1486" = type { %"class.WTF::HashTable.1487" }
%"class.WTF::HashTable.1487" = type <{ %"struct.WTF::KeyValuePair.1489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1489" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1490" }
%"class.blink::HeapHashSet.1490" = type { %"class.WTF::HashSet.1493" }
%"class.WTF::HashSet.1493" = type { %"class.WTF::HashTable.1494" }
%"class.WTF::HashTable.1494" = type <{ %"class.blink::WeakMember.1496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1496" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1506", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1513", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1506" = type { %"class.WTF::HashSet.1509" }
%"class.WTF::HashSet.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"class.blink::Member.1512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1512" = type opaque
%"class.blink::HeapTaskRunnerTimer.1513" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1514", { i64, i64 } }
%"class.blink::WeakMember.1514" = type { %"class.blink::MemberBase.1500" }
%"class.blink::WeakMember.1501" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1769", %"class.blink::Member.1774", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1776", i8, i32, %"class.blink::Color", %"class.absl::optional.1779", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1784", %"class.blink::Member.1786", %"class.blink::Member.1786", %"class.std::__1::unique_ptr.1789", i32, [4 x i8], %"class.WTF::HashSet.1792", %"class.blink::Member.1799", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1801", %"class.blink::HeapHashSet.1808", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1816", i8, %"class.blink::Member.1822", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1834", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1848", i8, %"class.std::__1::unique_ptr.1854", %"class.std::__1::unique_ptr.1935", %"class.WTF::Vector.1941", i32, %class.scoped_refptr.1946, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1947", %"class.blink::Member.1949", %"class.blink::Member.1951", %"class.blink::HeapHashSet.1953", %"class.blink::HeapHashSet.1960", %"class.std::__1::unique_ptr.1967", %"class.std::__1::unique_ptr.1974", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %class.scoped_refptr.1773*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1773 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1774" = type { %"class.blink::MemberBase.1775" }
%"class.blink::MemberBase.1775" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2170", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2178", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2192", %"class.blink::FrameLoader", %"class.blink::Member.2213", %"class.blink::Member.343", %"class.blink::Member.2214", %"class.blink::Member.2244", %"class.blink::Member.2260", %"class.blink::Member.2262", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2264", %class.scoped_refptr.2488, %"class.blink::Member.2489", %"class.blink::Member.2491", %"class.blink::Member.2493", %"class.blink::Member.2495", %"class.blink::Member.2497", %"class.blink::Member.2501", %"class.blink::Member.2503", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2507", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2528", %"class.std::__1::unique_ptr.2529", %"class.absl::optional.2158", i32, [4 x i8], %"class.std::__1::unique_ptr.2535", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2543", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2548", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2553", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2556", %"class.blink::Member.2563", %"class.blink::Member.2565", %"class.blink::Member.2567", %"class.mojo::StructPtr.2570", %"class.blink::Member.2579", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2581", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2003", %"class.blink::Member.2005", %"class.blink::Member.2007", i8, i32, i8, i32, %"class.blink::Member.2140", %"class.blink::Member.2030", %"class.blink::FrameLifecycle", %"class.blink::Member.2001", %"class.blink::Member.2001", %"class.blink::Member.2001", %"class.blink::Member.2001", %"class.blink::Member.2001", %"class.blink::Member.2001", %"class.blink::Member.1774", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2151", i8, %"class.base::UnguessableToken", %"class.absl::optional.2153", %"class.absl::optional.2158", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2001", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2001", %"class.blink::Member.2030", %"class.blink::Member.2032", %"class.blink::Member.2034", i8, %"class.WTF::Vector.2036" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2023" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2011" }
%"class.blink::HeapVector.2011" = type { %"class.WTF::Vector.2014" }
%"class.WTF::Vector.2014" = type { %"class.WTF::VectorBuffer.2015" }
%"class.WTF::VectorBuffer.2015" = type { %"class.WTF::VectorBufferBase.2016", [32 x i8] }
%"class.WTF::VectorBufferBase.2016" = type { %"struct.std::__1::pair.2017"*, i32, i32 }
%"struct.std::__1::pair.2017" = type { %"class.WTF::AtomicString", %"class.blink::Member.2018" }
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::HeapVector.2020"* }
%"class.blink::HeapVector.2020" = type opaque
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"class.WTF::Vector.2026"* }
%"class.WTF::Vector.2026" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2036" = type { %"class.WTF::VectorBuffer.2037" }
%"class.WTF::VectorBuffer.2037" = type { %"class.WTF::VectorBufferBase.2038" }
%"class.WTF::VectorBufferBase.2038" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2132" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2039, %"class.std::__1::unique_ptr.1659", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1673, i32 }>
%class.scoped_refptr.2039 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1673, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2098", %"class.absl::optional.2103", %"class.absl::optional.2056", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2123", i8, [7 x i8], %class.scoped_refptr.1673, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1686" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1673, %"class.std::__1::unique_ptr.2040", %"class.absl::optional.2050", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2056", %"class.std::__1::unique_ptr.2061", i8, i64, %class.scoped_refptr.2095, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2096", %"class.base::WeakPtrFactory.2097" }
%"class.std::__1::unique_ptr.2040" = type { %"class.std::__1::__compressed_pair.2041" }
%"class.std::__1::__compressed_pair.2041" = type { %"struct.std::__1::__compressed_pair_elem.2042" }
%"struct.std::__1::__compressed_pair_elem.2042" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1673, i8, %"class.mojo::ScopedHandleBase.2043", %class.scoped_refptr.2044, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2045", i8*, %"class.base::WeakPtrFactory.2046" }
%"class.mojo::ScopedHandleBase.2043" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2044 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2045" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2046" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2050" = type { %"class.absl::optional_internal::optional_data.2051" }
%"class.absl::optional_internal::optional_data.2051" = type { %"class.absl::optional_internal::optional_data_base.2052" }
%"class.absl::optional_internal::optional_data_base.2052" = type { %"class.absl::optional_internal::optional_data_dtor_base.2053" }
%"class.absl::optional_internal::optional_data_dtor_base.2053" = type { i8, %union.anon.2054 }
%union.anon.2054 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2055", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2055" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2061" = type { %"class.std::__1::__compressed_pair.2062" }
%"class.std::__1::__compressed_pair.2062" = type { %"struct.std::__1::__compressed_pair_elem.2063" }
%"struct.std::__1::__compressed_pair_elem.2063" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2064", i8, i64, %class.scoped_refptr.2065, %class.scoped_refptr.2090 }
%"class.base::RepeatingCallback.2064" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2065 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2066", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2068", %"class.std::__1::map.2079", i8, [7 x i8] }>
%"class.base::RefCounted.2066" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2067 }
%class.scoped_refptr.2067 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2068" = type { %"class.std::__1::__tree.2069" }
%"class.std::__1::__tree.2069" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2070", %"class.std::__1::__compressed_pair.2074" }
%"class.std::__1::__compressed_pair.2070" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2074" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2079" = type { %"class.std::__1::__tree.2080" }
%"class.std::__1::__tree.2080" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2081", %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2090 = type { %"class.base::RefCountedData.2091"* }
%"class.base::RefCountedData.2091" = type opaque
%class.scoped_refptr.2095 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2096" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2097" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2098" = type { %"class.absl::optional_internal::optional_data.2099" }
%"class.absl::optional_internal::optional_data.2099" = type { %"class.absl::optional_internal::optional_data_base.2100" }
%"class.absl::optional_internal::optional_data_base.2100" = type { %"class.absl::optional_internal::optional_data_dtor_base.2101" }
%"class.absl::optional_internal::optional_data_dtor_base.2101" = type { i8, %union.anon.2102 }
%union.anon.2102 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2103" = type { %"class.absl::optional_internal::optional_data.2104" }
%"class.absl::optional_internal::optional_data.2104" = type { %"class.absl::optional_internal::optional_data_base.2105" }
%"class.absl::optional_internal::optional_data_base.2105" = type { %"class.absl::optional_internal::optional_data_dtor_base.2106" }
%"class.absl::optional_internal::optional_data_dtor_base.2106" = type { i8, [7 x i8], %union.anon.2107 }
%union.anon.2107 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2056" = type { %"class.absl::optional_internal::optional_data.2057" }
%"class.absl::optional_internal::optional_data.2057" = type { %"class.absl::optional_internal::optional_data_base.2058" }
%"class.absl::optional_internal::optional_data_base.2058" = type { %"class.absl::optional_internal::optional_data_dtor_base.2059" }
%"class.absl::optional_internal::optional_data_dtor_base.2059" = type { i8, %union.anon.2060 }
%union.anon.2060 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2108 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2108 = type { %"class.std::__1::map.2111" }
%"class.std::__1::map.2111" = type { %"class.std::__1::__tree.2112" }
%"class.std::__1::__tree.2112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2113", %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2122"*, i64 }
%"class.std::__1::unique_ptr.2122" = type opaque
%"class.std::__1::map.2123" = type { %"class.std::__1::__tree.2124" }
%"class.std::__1::__tree.2124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2125", %"class.std::__1::__compressed_pair.2129" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2132" = type { %"class.std::__1::__compressed_pair.2133" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2001", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2142" }
%"class.base::internal::flat_tree.2142" = type { %"class.std::__1::vector.2143" }
%"class.std::__1::vector.2143" = type { %"class.std::__1::__vector_base.2144" }
%"class.std::__1::__vector_base.2144" = type { %"struct.std::__1::pair.2145"*, %"struct.std::__1::pair.2145"*, %"class.std::__1::__compressed_pair.2146" }
%"struct.std::__1::pair.2145" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2146" = type { %"struct.std::__1::__compressed_pair_elem.2147" }
%"struct.std::__1::__compressed_pair_elem.2147" = type { %"struct.std::__1::pair.2145"* }
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2153" = type { %"class.absl::optional_internal::optional_data.2154" }
%"class.absl::optional_internal::optional_data.2154" = type { %"class.absl::optional_internal::optional_data_base.2155" }
%"class.absl::optional_internal::optional_data_base.2155" = type { %"class.absl::optional_internal::optional_data_dtor_base.2156" }
%"class.absl::optional_internal::optional_data_dtor_base.2156" = type { i8, %union.anon.2157 }
%union.anon.2157 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2163" }
%"class.blink::HeapHashSet.2163" = type { %"class.WTF::HashSet.2166" }
%"class.WTF::HashSet.2166" = type { %"class.WTF::HashTable.2167" }
%"class.WTF::HashTable.2167" = type <{ %"class.blink::WeakMember.2169"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2169" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2170" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2171" }
%"class.blink::HeapHashMap.2171" = type { %"class.WTF::HashMap.2174" }
%"class.WTF::HashMap.2174" = type { %"class.WTF::HashTable.2175" }
%"class.WTF::HashTable.2175" = type <{ %"struct.WTF::KeyValuePair.2177"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2177" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2178" = type { %"class.std::__1::__compressed_pair.2179" }
%"class.std::__1::__compressed_pair.2179" = type { %"struct.std::__1::__compressed_pair_elem.2180" }
%"struct.std::__1::__compressed_pair_elem.2180" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2181", %"class.base::WeakPtrFactory.2186" }
%"class.WTF::HashMap.2181" = type { %"class.WTF::HashTable.2182" }
%"class.WTF::HashTable.2182" = type <{ %"struct.WTF::KeyValuePair.2185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2185" = type opaque
%"class.base::WeakPtrFactory.2186" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2190" }
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2897" }
%"class.blink::WeakMember.2897" = type { %"class.blink::MemberBase.2898" }
%"class.blink::MemberBase.2898" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2899", i64, %"class.std::__1::map.2900", i8*, i64, %"class.base::WeakPtrFactory.2909" }
%"class.base::RepeatingCallback.2899" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2900" = type { %"class.std::__1::__tree.2901" }
%"class.std::__1::__tree.2901" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2902", %"class.std::__1::__compressed_pair.2906" }
%"class.std::__1::__compressed_pair.2902" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2906" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.2909" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2192" = type { %"class.WTF::HashSet.2195" }
%"class.WTF::HashSet.2195" = type { %"class.WTF::HashTable.2196" }
%"class.WTF::HashTable.2196" = type <{ %"class.blink::WeakMember.2198"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2198" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1774", %"class.blink::Member.2199", %"class.blink::Member.2201", %"class.std::__1::unique_ptr.2203", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2209" }
%"class.blink::Member.2199" = type { %"class.blink::MemberBase.2200" }
%"class.blink::MemberBase.2200" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2201" = type { %"class.blink::MemberBase.2202" }
%"class.blink::MemberBase.2202" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2203" = type { %"class.std::__1::__compressed_pair.2204" }
%"class.std::__1::__compressed_pair.2204" = type { %"struct.std::__1::__compressed_pair_elem.2205" }
%"struct.std::__1::__compressed_pair_elem.2205" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::HashSet.2209" = type { %"class.WTF::HashTable.2210" }
%"class.WTF::HashTable.2210" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2214" = type { %"class.blink::MemberBase.2215" }
%"class.blink::MemberBase.2215" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.1774", %"class.blink::Member.2218", %"class.blink::Member.2220", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.2222", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.2228", i8, [7 x i8] }>
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type opaque
%"class.blink::Member.2220" = type { %"class.blink::MemberBase.2221" }
%"class.blink::MemberBase.2221" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.2222" = type { %"class.std::__1::__compressed_pair.2223" }
%"class.std::__1::__compressed_pair.2223" = type { %"struct.std::__1::__compressed_pair_elem.2224" }
%"struct.std::__1::__compressed_pair_elem.2224" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.2232", %"class.blink::Member.318", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2234", %"class.blink::HeapVector.2236", i8, [7 x i8] }>
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2232" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2658" }
%"class.blink::WeakMember.2658" = type { %"class.blink::MemberBase.916" }
%"class.blink::HeapVector.2236" = type { %"class.WTF::Vector.2239" }
%"class.WTF::Vector.2239" = type { %"class.WTF::VectorBuffer.2240" }
%"class.WTF::VectorBuffer.2240" = type { %"class.WTF::VectorBufferBase.2241", [96 x i8] }
%"class.WTF::VectorBufferBase.2241" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1215" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1774", %"class.blink::Member.2248", %"class.blink::Member.2250", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2252", %"class.blink::Member.2258" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::Member.2248" = type { %"class.blink::MemberBase.2249" }
%"class.blink::MemberBase.2249" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2258" = type { %"class.blink::MemberBase.2259" }
%"class.blink::MemberBase.2259" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2260" = type { %"class.blink::MemberBase.2261" }
%"class.blink::MemberBase.2261" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2262" = type { %"class.blink::MemberBase.2263" }
%"class.blink::MemberBase.2263" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2264" = type { %"class.blink::MemberBase.2265" }
%"class.blink::MemberBase.2265" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2268", %"class.blink::HeapListHashSet.2279", %"class.blink::HeapListHashSet.2290", %"class.blink::HeapListHashSet.2301", %"class.blink::HeapListHashSet.2312", %"class.blink::HeapListHashSet.2323", %"class.blink::HeapListHashSet.2334", %"class.blink::HeapListHashSet.2345", %"class.blink::HeapListHashSet.2356", %"class.blink::HeapListHashSet.2367", %"class.blink::HeapListHashSet.2378", %"class.blink::HeapListHashSet.2389", %"class.blink::HeapListHashSet.2400", %"class.blink::HeapListHashSet.2411", %"class.blink::HeapListHashSet.2422", %"class.blink::HeapListHashSet.2433", %"class.blink::HeapListHashSet.2444", %"class.blink::HeapListHashSet.2455", %"class.blink::HeapListHashSet.2466", %"class.blink::HeapListHashSet.2477" }
%"class.blink::HeapListHashSet.2268" = type { %"class.WTF::ListHashSet.base.2278", [7 x i8] }
%"class.WTF::ListHashSet.base.2278" = type <{ %"class.WTF::HashTable.2273", %"class.blink::Member.2275", %"class.blink::Member.2275", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2273" = type <{ %"class.blink::Member.2275"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2275" = type { %"class.blink::MemberBase.2276" }
%"class.blink::MemberBase.2276" = type { %"class.blink::HeapListHashSetNode.2277"* }
%"class.blink::HeapListHashSetNode.2277" = type { %"class.blink::Member.2491", %"class.blink::Member.2275", %"class.blink::Member.2275" }
%"class.blink::HeapListHashSet.2279" = type { %"class.WTF::ListHashSet.base.2289", [7 x i8] }
%"class.WTF::ListHashSet.base.2289" = type <{ %"class.WTF::HashTable.2284", %"class.blink::Member.2286", %"class.blink::Member.2286", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2284" = type <{ %"class.blink::Member.2286"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2286" = type { %"class.blink::MemberBase.2287" }
%"class.blink::MemberBase.2287" = type { %"class.blink::HeapListHashSetNode.2288"* }
%"class.blink::HeapListHashSetNode.2288" = type { %"class.blink::Member.2654", %"class.blink::Member.2286", %"class.blink::Member.2286" }
%"class.blink::Member.2654" = type { %"class.blink::MemberBase.2655" }
%"class.blink::MemberBase.2655" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2290" = type { %"class.WTF::ListHashSet.base.2300", [7 x i8] }
%"class.WTF::ListHashSet.base.2300" = type <{ %"class.WTF::HashTable.2295", %"class.blink::Member.2297", %"class.blink::Member.2297", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2295" = type <{ %"class.blink::Member.2297"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::HeapListHashSetNode.2299"* }
%"class.blink::HeapListHashSetNode.2299" = type { %"class.blink::Member.2650", %"class.blink::Member.2297", %"class.blink::Member.2297" }
%"class.blink::Member.2650" = type { %"class.blink::MemberBase.2651" }
%"class.blink::MemberBase.2651" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2301" = type { %"class.WTF::ListHashSet.base.2311", [7 x i8] }
%"class.WTF::ListHashSet.base.2311" = type <{ %"class.WTF::HashTable.2306", %"class.blink::Member.2308", %"class.blink::Member.2308", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2306" = type <{ %"class.blink::Member.2308"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2308" = type { %"class.blink::MemberBase.2309" }
%"class.blink::MemberBase.2309" = type { %"class.blink::HeapListHashSetNode.2310"* }
%"class.blink::HeapListHashSetNode.2310" = type { %"class.blink::Member.2646", %"class.blink::Member.2308", %"class.blink::Member.2308" }
%"class.blink::Member.2646" = type { %"class.blink::MemberBase.2647" }
%"class.blink::MemberBase.2647" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2312" = type { %"class.WTF::ListHashSet.base.2322", [7 x i8] }
%"class.WTF::ListHashSet.base.2322" = type <{ %"class.WTF::HashTable.2317", %"class.blink::Member.2319", %"class.blink::Member.2319", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2317" = type <{ %"class.blink::Member.2319"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::HeapListHashSetNode.2321"* }
%"class.blink::HeapListHashSetNode.2321" = type { %"class.blink::Member.2642", %"class.blink::Member.2319", %"class.blink::Member.2319" }
%"class.blink::Member.2642" = type { %"class.blink::MemberBase.2643" }
%"class.blink::MemberBase.2643" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2323" = type { %"class.WTF::ListHashSet.base.2333", [7 x i8] }
%"class.WTF::ListHashSet.base.2333" = type <{ %"class.WTF::HashTable.2328", %"class.blink::Member.2330", %"class.blink::Member.2330", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2328" = type <{ %"class.blink::Member.2330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::HeapListHashSetNode.2332"* }
%"class.blink::HeapListHashSetNode.2332" = type { %"class.blink::Member.2638", %"class.blink::Member.2330", %"class.blink::Member.2330" }
%"class.blink::Member.2638" = type { %"class.blink::MemberBase.2639" }
%"class.blink::MemberBase.2639" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2334" = type { %"class.WTF::ListHashSet.base.2344", [7 x i8] }
%"class.WTF::ListHashSet.base.2344" = type <{ %"class.WTF::HashTable.2339", %"class.blink::Member.2341", %"class.blink::Member.2341", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2339" = type <{ %"class.blink::Member.2341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2341" = type { %"class.blink::MemberBase.2342" }
%"class.blink::MemberBase.2342" = type { %"class.blink::HeapListHashSetNode.2343"* }
%"class.blink::HeapListHashSetNode.2343" = type { %"class.blink::Member.2634", %"class.blink::Member.2341", %"class.blink::Member.2341" }
%"class.blink::Member.2634" = type { %"class.blink::MemberBase.2635" }
%"class.blink::MemberBase.2635" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2345" = type { %"class.WTF::ListHashSet.base.2355", [7 x i8] }
%"class.WTF::ListHashSet.base.2355" = type <{ %"class.WTF::HashTable.2350", %"class.blink::Member.2352", %"class.blink::Member.2352", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2350" = type <{ %"class.blink::Member.2352"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::HeapListHashSetNode.2354"* }
%"class.blink::HeapListHashSetNode.2354" = type { %"class.blink::Member.2630", %"class.blink::Member.2352", %"class.blink::Member.2352" }
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2356" = type { %"class.WTF::ListHashSet.base.2366", [7 x i8] }
%"class.WTF::ListHashSet.base.2366" = type <{ %"class.WTF::HashTable.2361", %"class.blink::Member.2363", %"class.blink::Member.2363", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2361" = type <{ %"class.blink::Member.2363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::HeapListHashSetNode.2365"* }
%"class.blink::HeapListHashSetNode.2365" = type { %"class.blink::Member.2626", %"class.blink::Member.2363", %"class.blink::Member.2363" }
%"class.blink::Member.2626" = type { %"class.blink::MemberBase.2627" }
%"class.blink::MemberBase.2627" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2367" = type { %"class.WTF::ListHashSet.base.2377", [7 x i8] }
%"class.WTF::ListHashSet.base.2377" = type <{ %"class.WTF::HashTable.2372", %"class.blink::Member.2374", %"class.blink::Member.2374", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2372" = type <{ %"class.blink::Member.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::HeapListHashSetNode.2376"* }
%"class.blink::HeapListHashSetNode.2376" = type { %"class.blink::Member.2622", %"class.blink::Member.2374", %"class.blink::Member.2374" }
%"class.blink::Member.2622" = type { %"class.blink::MemberBase.2623" }
%"class.blink::MemberBase.2623" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2378" = type { %"class.WTF::ListHashSet.base.2388", [7 x i8] }
%"class.WTF::ListHashSet.base.2388" = type <{ %"class.WTF::HashTable.2383", %"class.blink::Member.2385", %"class.blink::Member.2385", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2383" = type <{ %"class.blink::Member.2385"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::HeapListHashSetNode.2387"* }
%"class.blink::HeapListHashSetNode.2387" = type { %"class.blink::Member.2495", %"class.blink::Member.2385", %"class.blink::Member.2385" }
%"class.blink::HeapListHashSet.2389" = type { %"class.WTF::ListHashSet.base.2399", [7 x i8] }
%"class.WTF::ListHashSet.base.2399" = type <{ %"class.WTF::HashTable.2394", %"class.blink::Member.2396", %"class.blink::Member.2396", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2394" = type <{ %"class.blink::Member.2396"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::HeapListHashSetNode.2398"* }
%"class.blink::HeapListHashSetNode.2398" = type { %"class.blink::Member.2616", %"class.blink::Member.2396", %"class.blink::Member.2396" }
%"class.blink::Member.2616" = type { %"class.blink::MemberBase.2617" }
%"class.blink::MemberBase.2617" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2400" = type { %"class.WTF::ListHashSet.base.2410", [7 x i8] }
%"class.WTF::ListHashSet.base.2410" = type <{ %"class.WTF::HashTable.2405", %"class.blink::Member.2407", %"class.blink::Member.2407", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2405" = type <{ %"class.blink::Member.2407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::HeapListHashSetNode.2409"* }
%"class.blink::HeapListHashSetNode.2409" = type { %"class.blink::Member.2612", %"class.blink::Member.2407", %"class.blink::Member.2407" }
%"class.blink::Member.2612" = type { %"class.blink::MemberBase.2613" }
%"class.blink::MemberBase.2613" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2411" = type { %"class.WTF::ListHashSet.base.2421", [7 x i8] }
%"class.WTF::ListHashSet.base.2421" = type <{ %"class.WTF::HashTable.2416", %"class.blink::Member.2418", %"class.blink::Member.2418", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2416" = type <{ %"class.blink::Member.2418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::HeapListHashSetNode.2420"* }
%"class.blink::HeapListHashSetNode.2420" = type { %"class.blink::Member.2608", %"class.blink::Member.2418", %"class.blink::Member.2418" }
%"class.blink::Member.2608" = type { %"class.blink::MemberBase.2609" }
%"class.blink::MemberBase.2609" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2422" = type { %"class.WTF::ListHashSet.base.2432", [7 x i8] }
%"class.WTF::ListHashSet.base.2432" = type <{ %"class.WTF::HashTable.2427", %"class.blink::Member.2429", %"class.blink::Member.2429", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2427" = type <{ %"class.blink::Member.2429"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::HeapListHashSetNode.2431"* }
%"class.blink::HeapListHashSetNode.2431" = type { %"class.blink::Member.2604", %"class.blink::Member.2429", %"class.blink::Member.2429" }
%"class.blink::Member.2604" = type { %"class.blink::MemberBase.2605" }
%"class.blink::MemberBase.2605" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2433" = type { %"class.WTF::ListHashSet.base.2443", [7 x i8] }
%"class.WTF::ListHashSet.base.2443" = type <{ %"class.WTF::HashTable.2438", %"class.blink::Member.2440", %"class.blink::Member.2440", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2438" = type <{ %"class.blink::Member.2440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::HeapListHashSetNode.2442"* }
%"class.blink::HeapListHashSetNode.2442" = type { %"class.blink::Member.2600", %"class.blink::Member.2440", %"class.blink::Member.2440" }
%"class.blink::Member.2600" = type { %"class.blink::MemberBase.2601" }
%"class.blink::MemberBase.2601" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2444" = type { %"class.WTF::ListHashSet.base.2454", [7 x i8] }
%"class.WTF::ListHashSet.base.2454" = type <{ %"class.WTF::HashTable.2449", %"class.blink::Member.2451", %"class.blink::Member.2451", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2449" = type <{ %"class.blink::Member.2451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::HeapListHashSetNode.2453"* }
%"class.blink::HeapListHashSetNode.2453" = type { %"class.blink::Member.2596", %"class.blink::Member.2451", %"class.blink::Member.2451" }
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2455" = type { %"class.WTF::ListHashSet.base.2465", [7 x i8] }
%"class.WTF::ListHashSet.base.2465" = type <{ %"class.WTF::HashTable.2460", %"class.blink::Member.2462", %"class.blink::Member.2462", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2460" = type <{ %"class.blink::Member.2462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2462" = type { %"class.blink::MemberBase.2463" }
%"class.blink::MemberBase.2463" = type { %"class.blink::HeapListHashSetNode.2464"* }
%"class.blink::HeapListHashSetNode.2464" = type { %"class.blink::Member.2592", %"class.blink::Member.2462", %"class.blink::Member.2462" }
%"class.blink::Member.2592" = type { %"class.blink::MemberBase.2593" }
%"class.blink::MemberBase.2593" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2466" = type { %"class.WTF::ListHashSet.base.2476", [7 x i8] }
%"class.WTF::ListHashSet.base.2476" = type <{ %"class.WTF::HashTable.2471", %"class.blink::Member.2473", %"class.blink::Member.2473", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2471" = type <{ %"class.blink::Member.2473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::HeapListHashSetNode.2475"* }
%"class.blink::HeapListHashSetNode.2475" = type { %"class.blink::Member.2497", %"class.blink::Member.2473", %"class.blink::Member.2473" }
%"class.blink::HeapListHashSet.2477" = type { %"class.WTF::ListHashSet.base.2487", [7 x i8] }
%"class.WTF::ListHashSet.base.2487" = type <{ %"class.WTF::HashTable.2482", %"class.blink::Member.2484", %"class.blink::Member.2484", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2482" = type <{ %"class.blink::Member.2484"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::HeapListHashSetNode.2486"* }
%"class.blink::HeapListHashSetNode.2486" = type { %"class.blink::Member.2489", %"class.blink::Member.2484", %"class.blink::Member.2484" }
%class.scoped_refptr.2488 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2489" = type { %"class.blink::MemberBase.2490" }
%"class.blink::MemberBase.2490" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2493" = type { %"class.blink::MemberBase.2494" }
%"class.blink::MemberBase.2494" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2503" = type { %"class.blink::MemberBase.2504" }
%"class.blink::MemberBase.2504" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2505" }
%"class.blink::Member.2505" = type { %"class.blink::MemberBase.2506" }
%"class.blink::MemberBase.2506" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2912" }
%"class.mojo::Remote.2912" = type { %"class.mojo::internal::InterfacePtrState.2913" }
%"class.mojo::internal::InterfacePtrState.2913" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2914" }
%"class.std::__1::unique_ptr.2914" = type { %"class.std::__1::__compressed_pair.2915" }
%"class.std::__1::__compressed_pair.2915" = type { %"struct.std::__1::__compressed_pair_elem.2916" }
%"struct.std::__1::__compressed_pair_elem.2916" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2507" = type { %"class.std::__1::__compressed_pair.2508" }
%"class.std::__1::__compressed_pair.2508" = type { %"struct.std::__1::__compressed_pair_elem.2509" }
%"struct.std::__1::__compressed_pair_elem.2509" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2510, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2510 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2511", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2511" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2512" }
%"class.std::__1::vector.2512" = type { %"class.std::__1::__vector_base.2513" }
%"class.std::__1::__vector_base.2513" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2514" }
%"class.std::__1::__compressed_pair.2514" = type { %"struct.std::__1::__compressed_pair_elem.2515" }
%"struct.std::__1::__compressed_pair_elem.2515" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2519, i8, [7 x i8] }>
%class.scoped_refptr.2519 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2520", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2520" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2521" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2521" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2528" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2529" = type { %"class.std::__1::__compressed_pair.2530" }
%"class.std::__1::__compressed_pair.2530" = type { %"struct.std::__1::__compressed_pair_elem.2531" }
%"struct.std::__1::__compressed_pair_elem.2531" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2158" = type { %"class.absl::optional_internal::optional_data.2159" }
%"class.absl::optional_internal::optional_data.2159" = type { %"class.absl::optional_internal::optional_data_base.2160" }
%"class.absl::optional_internal::optional_data_base.2160" = type { %"class.absl::optional_internal::optional_data_dtor_base.2161" }
%"class.absl::optional_internal::optional_data_dtor_base.2161" = type { i8, %union.anon.2162 }
%union.anon.2162 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2535" = type { %"class.std::__1::__compressed_pair.2536" }
%"class.std::__1::__compressed_pair.2536" = type { %"struct.std::__1::__compressed_pair_elem.2537" }
%"struct.std::__1::__compressed_pair_elem.2537" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2541" }
%"class.blink::Member.2541" = type { %"class.blink::MemberBase.2542" }
%"class.blink::MemberBase.2542" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2922" }
%"class.mojo::AssociatedRemote.2922" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2923" }
%"class.mojo::internal::AssociatedInterfacePtrState.2923" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2924" }
%"class.std::__1::unique_ptr.2924" = type { %"class.std::__1::__compressed_pair.2925" }
%"class.std::__1::__compressed_pair.2925" = type { %"struct.std::__1::__compressed_pair_elem.2926" }
%"struct.std::__1::__compressed_pair_elem.2926" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2543" = type { %"class.blink::Member.2544" }
%"class.blink::Member.2544" = type { %"class.blink::MemberBase.2545" }
%"class.blink::MemberBase.2545" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2932" }
%"class.mojo::AssociatedRemote.2932" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2933" }
%"class.mojo::internal::AssociatedInterfacePtrState.2933" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2934" }
%"class.std::__1::unique_ptr.2934" = type { %"class.std::__1::__compressed_pair.2935" }
%"class.std::__1::__compressed_pair.2935" = type { %"struct.std::__1::__compressed_pair_elem.2936" }
%"struct.std::__1::__compressed_pair_elem.2936" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2546" }
%"class.blink::Member.2546" = type { %"class.blink::MemberBase.2547" }
%"class.blink::MemberBase.2547" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2942", %"class.blink::Member.1774", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2942" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2943" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1659" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2943" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2548" = type { %"class.blink::Member.2549" }
%"class.blink::Member.2549" = type { %"class.blink::MemberBase.2550" }
%"class.blink::MemberBase.2550" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2946", %"class.blink::Member.1774", %"class.mojo::AssociatedReceiver.2947" }
%"class.blink::ThreadState::PrefinalizerRegistration.2946" = type { i8 }
%"class.mojo::AssociatedReceiver.2947" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2948" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2948" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2551" }
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2951", %"class.blink::Member.1774", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2951" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2039, %"class.std::__1::unique_ptr.1659", %"class.base::WeakPtrFactory.2952" }
%"class.base::WeakPtrFactory.2952" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2553" = type { %"class.blink::Member.2554" }
%"class.blink::Member.2554" = type { %"class.blink::MemberBase.2555" }
%"class.blink::MemberBase.2555" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2955", %"class.blink::Member.1774", %"class.mojo::AssociatedReceiver.2956" }
%"class.blink::ThreadState::PrefinalizerRegistration.2955" = type { i8 }
%"class.mojo::AssociatedReceiver.2956" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2957" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2957" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2556" = type { %"class.blink::MemberBase.2557" }
%"class.blink::MemberBase.2557" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type { %"class.blink::HeapMojoRemote.2560", i32, i8, [3 x i8], %"class.WTF::HashSet.2209" }
%"class.blink::HeapMojoRemote.2560" = type { %"class.blink::Member.2561" }
%"class.blink::Member.2561" = type { %"class.blink::MemberBase.2562" }
%"class.blink::MemberBase.2562" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2565" = type { %"class.blink::MemberBase.2566" }
%"class.blink::MemberBase.2566" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2567" = type { %"class.blink::MemberBase.2568" }
%"class.blink::MemberBase.2568" = type { %"class.blink::HeapHashMap.2569"* }
%"class.blink::HeapHashMap.2569" = type opaque
%"class.mojo::StructPtr.2570" = type { %"class.std::__1::unique_ptr.2571" }
%"class.std::__1::unique_ptr.2571" = type { %"class.std::__1::__compressed_pair.2572" }
%"class.std::__1::__compressed_pair.2572" = type { %"struct.std::__1::__compressed_pair_elem.2573" }
%"struct.std::__1::__compressed_pair_elem.2573" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2574", %"class.mojo::InlinedStructPtr.2575" }
%"class.mojo::InlinedStructPtr.2574" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2575" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2581" = type { %"class.absl::optional_internal::optional_data.2582" }
%"class.absl::optional_internal::optional_data.2582" = type { %"class.absl::optional_internal::optional_data_base.2583" }
%"class.absl::optional_internal::optional_data_base.2583" = type { %"class.absl::optional_internal::optional_data_dtor_base.2584" }
%"class.absl::optional_internal::optional_data_dtor_base.2584" = type { i8, %union.anon.2585 }
%union.anon.2585 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1776" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1777", { i64, i64 } }
%"class.blink::WeakMember.1777" = type { %"class.blink::MemberBase.1778" }
%"class.absl::optional.1779" = type { %"class.absl::optional_internal::optional_data.1780" }
%"class.absl::optional_internal::optional_data.1780" = type { %"class.absl::optional_internal::optional_data_base.1781" }
%"class.absl::optional_internal::optional_data_base.1781" = type { %"class.absl::optional_internal::optional_data_dtor_base.1782" }
%"class.absl::optional_internal::optional_data_dtor_base.1782" = type { i8, %union.anon.1783 }
%union.anon.1783 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1786" = type { %"class.blink::MemberBase.1787" }
%"class.blink::MemberBase.1787" = type { %"class.blink::HeapHashSet.1788"* }
%"class.blink::HeapHashSet.1788" = type opaque
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.WTF::HashSet.1792"* }
%"class.WTF::HashSet.1792" = type { %"class.WTF::HashTable.1793" }
%"class.WTF::HashTable.1793" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.1799" = type { %"class.blink::MemberBase.1800" }
%"class.blink::MemberBase.1800" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1801" = type { %"class.WTF::HashSet.1804" }
%"class.WTF::HashSet.1804" = type { %"class.WTF::HashTable.1805" }
%"class.WTF::HashTable.1805" = type <{ %"class.blink::Member.1807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1807" = type opaque
%"class.blink::HeapHashSet.1808" = type { %"class.WTF::HashSet.1811" }
%"class.WTF::HashSet.1811" = type { %"class.WTF::HashTable.1812" }
%"class.WTF::HashTable.1812" = type <{ %"class.blink::Member.1814"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1987", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1997", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1989", %"class.blink::Member.1991", %"class.blink::Member.1993", %"class.blink::Member.1995", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1997" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1998", { i64, i64 } }
%"class.blink::WeakMember.1998" = type { %"class.blink::MemberBase.1815" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1826", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1826" = type { %"class.WTF::HashTable.1827" }
%"class.WTF::HashTable.1827" = type <{ %"struct.WTF::KeyValuePair.1829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1829" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1830", i32, i32 }
%"class.WTF::Vector.1830" = type { %"class.WTF::VectorBuffer.1831" }
%"class.WTF::VectorBuffer.1831" = type { %"class.WTF::VectorBufferBase.1832" }
%"class.WTF::VectorBufferBase.1832" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1834" = type { %"class.WTF::LinkedHashSet.1837" }
%"class.WTF::LinkedHashSet.1837" = type { %"class.WTF::HashMap.1838", %"class.WTF::VectorBackedLinkedList.1842" }
%"class.WTF::HashMap.1838" = type { %"class.WTF::HashTable.1839" }
%"class.WTF::HashTable.1839" = type <{ %"struct.WTF::KeyValuePair.1841"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1841" = type opaque
%"class.WTF::VectorBackedLinkedList.1842" = type { %"class.WTF::Vector.1843", i32, i32 }
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.1845" }
%"class.WTF::VectorBufferBase.1845" = type { %"class.WTF::VectorBackedLinkedListNode.1846"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1846" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1848" = type { %"class.std::__1::__compressed_pair.1849" }
%"class.std::__1::__compressed_pair.1849" = type { %"struct.std::__1::__compressed_pair_elem.1850" }
%"struct.std::__1::__compressed_pair_elem.1850" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1854" = type { %"class.std::__1::__compressed_pair.1855" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1856" }
%"struct.std::__1::__compressed_pair_elem.1856" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1857, %class.scoped_refptr.1857, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1912", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1917", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1857 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1858", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1865" }
%"class.WTF::RefCounted.1858" = type { %"class.base::RefCounted.1859" }
%"class.base::RefCounted.1859" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1860", i32, [4 x i8] }>
%"class.WTF::Vector.1860" = type { %"class.WTF::VectorBuffer.1861" }
%"class.WTF::VectorBuffer.1861" = type { %"class.WTF::VectorBufferBase.1862" }
%"class.WTF::VectorBufferBase.1862" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1868", %"class.std::__1::unique_ptr.1884", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1868" = type { %"class.std::__1::__compressed_pair.1869" }
%"class.std::__1::__compressed_pair.1869" = type { %"struct.std::__1::__compressed_pair_elem.1870" }
%"struct.std::__1::__compressed_pair_elem.1870" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1871", %"class.WTF::Vector.1876", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873" }
%"class.WTF::VectorBufferBase.1873" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878" }
%"class.WTF::VectorBufferBase.1878" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1887", %"class.absl::optional.1887" }
%"class.absl::optional.1887" = type { %"class.absl::optional_internal::optional_data.1888" }
%"class.absl::optional_internal::optional_data.1888" = type { %"class.absl::optional_internal::optional_data_base.1889" }
%"class.absl::optional_internal::optional_data_base.1889" = type { %"class.absl::optional_internal::optional_data_dtor_base.1890" }
%"class.absl::optional_internal::optional_data_dtor_base.1890" = type { i8, [3 x i8], %union.anon.1891 }
%union.anon.1891 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1865"*, %"class.absl::optional.1897", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1897" = type { %"class.absl::optional_internal::optional_data.1898" }
%"class.absl::optional_internal::optional_data.1898" = type { %"class.absl::optional_internal::optional_data_base.1899" }
%"class.absl::optional_internal::optional_data_base.1899" = type { %"class.absl::optional_internal::optional_data_dtor_base.1900" }
%"class.absl::optional_internal::optional_data_dtor_base.1900" = type { i8, %union.anon.1901 }
%union.anon.1901 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1902", %"class.WTF::Vector.1907" }
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904", [128 x i8] }
%"class.WTF::VectorBufferBase.1904" = type { i32*, i32, i32 }
%"class.WTF::Vector.1907" = type { %"class.WTF::VectorBuffer.1908" }
%"class.WTF::VectorBuffer.1908" = type { %"class.WTF::VectorBufferBase.1909", [128 x i8] }
%"class.WTF::VectorBufferBase.1909" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1912" = type { %"class.WTF::VectorBuffer.1913" }
%"class.WTF::VectorBuffer.1913" = type { %"class.WTF::VectorBufferBase.1914" }
%"class.WTF::VectorBufferBase.1914" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1917" = type { %"class.WTF::HashTable.1918" }
%"class.WTF::HashTable.1918" = type <{ %"struct.WTF::KeyValuePair.1921"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1921" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1922", %"class.WTF::Vector.1927" }
%"class.WTF::HashMap.1922" = type { %"class.WTF::HashTable.1923" }
%"class.WTF::HashTable.1923" = type <{ %"struct.WTF::KeyValuePair.1926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1926" = type opaque
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929" }
%"class.WTF::VectorBufferBase.1929" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1941" = type { %"class.WTF::VectorBuffer.1942" }
%"class.WTF::VectorBuffer.1942" = type { %"class.WTF::VectorBufferBase.1943" }
%"class.WTF::VectorBufferBase.1943" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1946 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1953" = type { %"class.WTF::HashSet.1956" }
%"class.WTF::HashSet.1956" = type { %"class.WTF::HashTable.1957" }
%"class.WTF::HashTable.1957" = type <{ %"class.blink::WeakMember.1959"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1959" = type opaque
%"class.blink::HeapHashSet.1960" = type { %"class.WTF::HashSet.1963" }
%"class.WTF::HashSet.1963" = type { %"class.WTF::HashTable.1964" }
%"class.WTF::HashTable.1964" = type <{ %"class.blink::WeakMember.1966"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1966" = type opaque
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1970" }
%"class.base::time_internal::TimeBase.1970" = type { i64 }
%"class.std::__1::unique_ptr.1974" = type { %"class.std::__1::__compressed_pair.1975" }
%"class.std::__1::__compressed_pair.1975" = type { %"struct.std::__1::__compressed_pair_elem.1976" }
%"struct.std::__1::__compressed_pair_elem.1976" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1977", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1977" = type { %"class.absl::optional_internal::optional_data.1978" }
%"class.absl::optional_internal::optional_data.1978" = type { %"class.absl::optional_internal::optional_data_base.1979" }
%"class.absl::optional_internal::optional_data_base.1979" = type { %"class.absl::optional_internal::optional_data_dtor_base.1980" }
%"class.absl::optional_internal::optional_data_dtor_base.1980" = type { i8, %union.anon.1981 }
%union.anon.1981 = type { %"class.base::Time" }
%"class.blink::PositionTemplate.2659" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::VisiblePositionTemplate" = type { %"class.blink::PositionWithAffinityTemplate" }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2977", %"class.blink::Member.2979", %"class.blink::Member.2981", %"class.blink::Member.3000", %"class.blink::Member.3002" }
%"class.blink::Member.2977" = type { %"class.blink::MemberBase.2978" }
%"class.blink::MemberBase.2978" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2979" = type { %"class.blink::MemberBase.2980" }
%"class.blink::MemberBase.2980" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2981" = type { %"class.blink::MemberBase.2982" }
%"class.blink::MemberBase.2982" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2985", %"class.blink::HeapHashSet.2994" }
%"class.blink::HeapVector.2985" = type { %"class.WTF::Vector.2988" }
%"class.WTF::Vector.2988" = type { %"class.WTF::VectorBuffer.2989" }
%"class.WTF::VectorBuffer.2989" = type { %"class.WTF::VectorBufferBase.2990" }
%"class.WTF::VectorBufferBase.2990" = type { %"class.blink::Member.2991"*, i32, i32 }
%"class.blink::Member.2991" = type { %"class.blink::MemberBase.2992" }
%"class.blink::MemberBase.2992" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2994" = type { %"class.WTF::HashSet.2997" }
%"class.WTF::HashSet.2997" = type { %"class.WTF::HashTable.2998" }
%"class.WTF::HashTable.2998" = type <{ %"class.blink::Member.2991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3000" = type { %"class.blink::MemberBase.3001" }
%"class.blink::MemberBase.3001" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3002" = type { %"class.blink::MemberBase.3003" }
%"class.blink::MemberBase.3003" = type { %"class.blink::HeapHashSet.3004"* }
%"class.blink::HeapHashSet.3004" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.2660", %"class.blink::Member.2662", %"class.blink::Member.2664", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.2662" = type { %"class.blink::MemberBase.2663" }
%"class.blink::MemberBase.2663" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.2972" }
%"class.WTF::Vector.2972" = type { %"class.WTF::VectorBuffer.2973" }
%"class.WTF::VectorBuffer.2973" = type { %"class.WTF::VectorBufferBase.2974", [64 x i8] }
%"class.WTF::VectorBufferBase.2974" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::PositionIteratorAlgorithm" = type { %"class.blink::Node"*, %"class.blink::Node"*, i32, i32, %"class.WTF::Vector.3327", i64 }
%"class.WTF::Vector.3327" = type { %"class.WTF::VectorBuffer.3328" }
%"class.WTF::VectorBuffer.3328" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::PositionIteratorAlgorithm.3351" = type { %"class.blink::Node"*, %"class.blink::Node"*, i32, i32, %"class.WTF::Vector.3327", i64 }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2668 }
%class.scoped_refptr.2668 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2669", %"class.WTF::String", %"class.std::__1::unique_ptr.2671" }
%"class.WTF::RefCounted.2669" = type { %"class.base::RefCounted.2670" }
%"class.base::RefCounted.2670" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2671" = type { %"class.std::__1::__compressed_pair.2672" }
%"class.std::__1::__compressed_pair.2672" = type { %"struct.std::__1::__compressed_pair_elem.2673" }
%"struct.std::__1::__compressed_pair_elem.2673" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2674", %"class.std::__1::unique_ptr.2685", %"class.WTF::Vector.2691", i8, i32 }
%"class.std::__1::unique_ptr.2674" = type { %"class.std::__1::__compressed_pair.2675" }
%"class.std::__1::__compressed_pair.2675" = type { %"struct.std::__1::__compressed_pair_elem.2676" }
%"struct.std::__1::__compressed_pair_elem.2676" = type { %"class.WTF::Vector.2677"* }
%"class.WTF::Vector.2677" = type { %"class.WTF::VectorBuffer.2678" }
%"class.WTF::VectorBuffer.2678" = type { %"class.WTF::VectorBufferBase.2679" }
%"class.WTF::VectorBufferBase.2679" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2685" = type { %"class.std::__1::__compressed_pair.2686" }
%"class.std::__1::__compressed_pair.2686" = type { %"struct.std::__1::__compressed_pair_elem.2687" }
%"struct.std::__1::__compressed_pair_elem.2687" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2691" = type { %"class.WTF::VectorBuffer.2692" }
%"class.WTF::VectorBuffer.2692" = type { %"class.WTF::VectorBufferBase.2679", [32 x i8] }
%"class.blink::BackwardGraphemeBoundaryStateMachine" = type { i16, i32, i32, i32, i32 }
%"class.blink::ForwardGraphemeBoundaryStateMachine" = type { i16, i32, i32, i32, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2698, i32, i8, i8, [2 x i8] }>
%union.anon.2698 = type { %"class.WTF::Vector.2699" }
%"class.WTF::Vector.2699" = type { %"class.WTF::VectorBuffer.2700" }
%"class.WTF::VectorBuffer.2700" = type { %"class.WTF::VectorBufferBase.2679", [16 x i8] }
%"class.WTF::Vector.2703" = type { %"class.WTF::VectorBuffer.2704" }
%"class.WTF::VectorBuffer.2704" = type { %"class.WTF::VectorBufferBase.2705", [16 x i8] }
%"class.WTF::VectorBufferBase.2705" = type { i16*, i32, i32 }
%"class.blink::VisiblePositionTemplate.2708" = type { %"class.blink::PositionWithAffinityTemplate.2709" }
%"class.blink::PositionWithAffinityTemplate.2709" = type <{ %"class.blink::PositionTemplate.2659", i32, [4 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLParagraphElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1814", i8, %"class.blink::Member.2711", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2711" = type { %"class.blink::MemberBase.2712" }
%"class.blink::MemberBase.2712" = type { %"class.blink::HeapLinkedHashSet.2713"* }
%"class.blink::HeapLinkedHashSet.2713" = type opaque
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.2666", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::Member.2666" = type { %"class.blink::MemberBase.2667" }
%"class.blink::MemberBase.2667" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.2716 }
%union.anon.2716 = type { i32 }
%"class.blink::TextIteratorBehavior::Builder" = type { %"class.blink::TextIteratorBehavior" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.2714", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::EphemeralRangeTemplate.2718" = type { %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659" }
%"class.blink::PlainTextRange" = type { i32, i32 }
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"struct.blink::LocalCaretRect" = type { %"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect", %"class.blink::NGPhysicalBoxFragment"* }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"class.blink::HeapVector.2781" = type { %"class.WTF::Vector.2784" }
%"class.WTF::Vector.2784" = type { %"class.WTF::VectorBuffer.2785" }
%"class.WTF::VectorBuffer.2785" = type { %"class.WTF::VectorBufferBase.2786" }
%"class.WTF::VectorBufferBase.2786" = type { %"class.blink::Member.2787"*, i32, i32 }
%"class.blink::Member.2787" = type { %"class.blink::MemberBase.2970" }
%"class.blink::MemberBase.2970" = type { %"class.blink::StaticRange"* }
%"class.blink::StaticRange" = type <{ %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::Member.318", i32, [4 x i8], %"class.blink::Member.318", i32, [4 x i8] }>
%"class.blink::InputEvent" = type { %"class.blink::UIEvent", i32, %"class.WTF::String", %"class.blink::Member.2802", i8, %"class.blink::HeapVector.2831" }
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.2007", i32, %"class.blink::Member.2800" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2794", %"class.blink::Member.2794", %"class.blink::Member.2796", %"class.blink::Member.2798", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2789" }
%"class.absl::optional.2789" = type { %"class.absl::optional_internal::optional_data.2790" }
%"class.absl::optional_internal::optional_data.2790" = type { %"class.absl::optional_internal::optional_data_base.2791" }
%"class.absl::optional_internal::optional_data_base.2791" = type { %"class.absl::optional_internal::optional_data_dtor_base.2792" }
%"class.absl::optional_internal::optional_data_dtor_base.2792" = type { i8, %union.anon.2793 }
%union.anon.2793 = type { i64 }
%"class.blink::Member.2794" = type { %"class.blink::MemberBase.2795" }
%"class.blink::MemberBase.2795" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2796" = type { %"class.blink::MemberBase.2797" }
%"class.blink::MemberBase.2797" = type { %"class.blink::Event"* }
%"class.blink::Member.2798" = type { %"class.blink::MemberBase.2799" }
%"class.blink::MemberBase.2799" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.2800" = type { %"class.blink::MemberBase.2801" }
%"class.blink::MemberBase.2801" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::Member.2802" = type { %"class.blink::MemberBase.2803" }
%"class.blink::MemberBase.2803" = type { %"class.blink::DataTransfer"* }
%"class.blink::DataTransfer" = type { %"class.blink::ScriptWrappable", %"struct.blink::DataObject::Observer", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", i32, %"class.blink::Member.2804", i8, %"class.blink::IntPoint", %"class.blink::Member.2728", %"class.blink::Member.318" }
%"struct.blink::DataObject::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2804" = type { %"class.blink::MemberBase.2805" }
%"class.blink::MemberBase.2805" = type { %"class.blink::DataObject"* }
%"class.blink::DataObject" = type { %"class.blink::Supplementable.2808", %"class.blink::HeapVector.2816", %"class.blink::HeapHashSet.2824", i32, %"class.WTF::String" }
%"class.blink::Supplementable.2808" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2809" }
%"class.blink::HeapHashMap.2809" = type { %"class.WTF::HashMap.2812" }
%"class.WTF::HashMap.2812" = type { %"class.WTF::HashTable.2813" }
%"class.WTF::HashTable.2813" = type <{ %"struct.WTF::KeyValuePair.2815"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2815" = type opaque
%"class.blink::HeapVector.2816" = type { %"class.WTF::Vector.2819" }
%"class.WTF::Vector.2819" = type { %"class.WTF::VectorBuffer.2820" }
%"class.WTF::VectorBuffer.2820" = type { %"class.WTF::VectorBufferBase.2821" }
%"class.WTF::VectorBufferBase.2821" = type { %"class.blink::Member.2822"*, i32, i32 }
%"class.blink::Member.2822" = type opaque
%"class.blink::HeapHashSet.2824" = type { %"class.WTF::HashSet.2827" }
%"class.WTF::HashSet.2827" = type { %"class.WTF::HashTable.2828" }
%"class.WTF::HashTable.2828" = type <{ %"class.blink::Member.2830"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2830" = type opaque
%"class.blink::Member.2728" = type { %"class.blink::MemberBase.2729" }
%"class.blink::MemberBase.2729" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.2732", float, i8, %class.scoped_refptr.2734, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.2734 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.2735", i8, %class.scoped_refptr.2737, %"class.blink::WeakPersistent.2751", i32, i8, %"class.std::__1::unique_ptr.2753" }
%"class.WTF::ThreadSafeRefCounted.2735" = type { %"class.base::RefCountedThreadSafe.2736" }
%"class.base::RefCountedThreadSafe.2736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2737 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2738", i64, %"class.WTF::Vector.2740", %"class.WTF::Vector.2745" }
%"class.WTF::RefCounted.2738" = type { %"class.base::RefCounted.2739" }
%"class.base::RefCounted.2739" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2740" = type { %"class.WTF::VectorBuffer.2741" }
%"class.WTF::VectorBuffer.2741" = type { %"class.WTF::VectorBufferBase.2742" }
%"class.WTF::VectorBufferBase.2742" = type { i8*, i32, i32 }
%"class.WTF::Vector.2745" = type { %"class.WTF::VectorBuffer.2746" }
%"class.WTF::VectorBuffer.2746" = type { %"class.WTF::VectorBufferBase.2747" }
%"class.WTF::VectorBufferBase.2747" = type { %"class.std::__1::unique_ptr.2748"*, i32, i32 }
%"class.std::__1::unique_ptr.2748" = type opaque
%"class.blink::WeakPersistent.2751" = type { %"class.blink::PersistentBase.2752" }
%"class.blink::PersistentBase.2752" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.2753" = type { %"class.std::__1::__compressed_pair.2754" }
%"class.std::__1::__compressed_pair.2754" = type { %"struct.std::__1::__compressed_pair_elem.2755" }
%"struct.std::__1::__compressed_pair_elem.2755" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2759" }
%"class.WTF::HashMap.2759" = type { %"class.WTF::HashTable.2760" }
%"class.WTF::HashTable.2760" = type <{ %"struct.WTF::KeyValuePair.2763"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2763" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::HeapVector.2831" = type { %"class.WTF::Vector.2834" }
%"class.WTF::Vector.2834" = type { %"class.WTF::VectorBuffer.2835" }
%"class.WTF::VectorBuffer.2835" = type { %"class.WTF::VectorBufferBase.2836" }
%"class.WTF::VectorBufferBase.2836" = type { %"class.blink::Member.967"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LayoutImageResource" = type { i32 (...)**, %"class.blink::LayoutObject"*, %"class.blink::Member.2728" }
%"class.blink::HTMLCanvasElement" = type { %"class.blink::HTMLElement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::PageVisibilityObserver", %"class.blink::CanvasRenderingContextHost", %"class.blink::WebSurfaceLayerBridgeObserver", %"class.blink::ImageBitmapSource", %"class.blink::OffscreenCanvasPlaceholder.base", %"class.blink::ThreadState::PrefinalizerRegistration.3140", [3 x i8], %"class.blink::HeapHashSet.3141", %"class.blink::IntSize", %"class.blink::Member.3148", i8, i8, i8, %"class.blink::FloatRect", i8, i8, i8, %"class.std::__1::unique_ptr.3150", %"class.std::__1::unique_ptr.3191", %"class.std::__1::unique_ptr.3273", i8, i64, %class.scoped_refptr.3028 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3029" }
%"class.blink::WeakMember.3029" = type { %"class.blink::MemberBase.2004" }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.3030", i32 }>
%"class.std::__1::unique_ptr.3030" = type { %"class.std::__1::__compressed_pair.3031" }
%"class.std::__1::__compressed_pair.3031" = type { %"struct.std::__1::__compressed_pair_elem.3032" }
%"struct.std::__1::__compressed_pair_elem.3032" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.3034, i32, %"class.base::WeakPtr.3035", %"class.base::WeakPtr.3036", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.3037", %"class.std::__1::unique_ptr.3043", %"class.std::__1::unique_ptr.3073", i8, i32, i32, i32, %"class.WTF::Vector.3091", i8, i8, i64, i64, %"class.base::RepeatingCallback.3101", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.3129" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.3033" }
%"class.base::WeakPtrFactory.3033" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.3034 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.3035" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.3036" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.3037" = type { %"class.std::__1::__compressed_pair.3038" }
%"class.std::__1::__compressed_pair.3038" = type { %"struct.std::__1::__compressed_pair_elem.3039" }
%"struct.std::__1::__compressed_pair_elem.3039" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.3043" = type { %"class.std::__1::__compressed_pair.3044" }
%"class.std::__1::__compressed_pair.3044" = type { %"struct.std::__1::__compressed_pair_elem.3045" }
%"struct.std::__1::__compressed_pair_elem.3045" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.3064", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.3046, [384 x i64], %class.sk_sp.3047, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.3048", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3054" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.3046 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.3047 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.3048" = type { %"class.std::__1::__compressed_pair.3049" }
%"class.std::__1::__compressed_pair.3049" = type { %"struct.std::__1::__compressed_pair_elem.3050" }
%"struct.std::__1::__compressed_pair_elem.3050" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.3054" = type { %"class.std::__1::__compressed_pair.3055" }
%"class.std::__1::__compressed_pair.3055" = type { %"struct.std::__1::__compressed_pair_elem.3056" }
%"struct.std::__1::__compressed_pair_elem.3056" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.3060, %class.SkPixmap, %class.sk_sp.3063 }
%class.sk_sp.3060 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3061, i32, i32 }
%class.sk_sp.3061 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.3062, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.3062 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.3063 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.3064" = type { %"class.std::__1::__compressed_pair.3065" }
%"class.std::__1::__compressed_pair.3065" = type { %"struct.std::__1::__compressed_pair_elem.3066" }
%"struct.std::__1::__compressed_pair_elem.3066" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.3073" = type { %"class.std::__1::__compressed_pair.3074" }
%"class.std::__1::__compressed_pair.3074" = type { %"struct.std::__1::__compressed_pair_elem.3075" }
%"struct.std::__1::__compressed_pair_elem.3075" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.3076, %"class.std::__1::unique_ptr.3077" }
%class.scoped_refptr.3076 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.3077" = type { %"class.std::__1::__compressed_pair.3078" }
%"class.std::__1::__compressed_pair.3078" = type { %"struct.std::__1::__compressed_pair_elem.3079" }
%"struct.std::__1::__compressed_pair_elem.3079" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.3080", %struct.SkRect }
%"class.absl::optional.3080" = type { %"class.absl::optional_internal::optional_data.3081" }
%"class.absl::optional_internal::optional_data.3081" = type { %"class.absl::optional_internal::optional_data_base.3082" }
%"class.absl::optional_internal::optional_data_base.3082" = type { %"class.absl::optional_internal::optional_data_dtor_base.3083" }
%"class.absl::optional_internal::optional_data_dtor_base.3083" = type { i8, %union.anon.3084 }
%union.anon.3084 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.3091" = type { %"class.WTF::VectorBuffer.3092" }
%"class.WTF::VectorBuffer.3092" = type { %"class.WTF::VectorBufferBase.3093" }
%"class.WTF::VectorBufferBase.3093" = type { %class.scoped_refptr.3094*, i32, i32 }
%class.scoped_refptr.3094 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3095", %"class.base::PlatformThreadRef", %class.scoped_refptr.963, %"struct.gpu::SyncToken", %"class.base::WeakPtr.3098", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted.3095" = type { %"class.base::RefCountedThreadSafe.3096" }
%"class.base::RefCountedThreadSafe.3096" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias.3097" }
%"class.base::StrongAlias.3097" = type { i64 }
%"class.base::WeakPtr.3098" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.3101" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array.3102", i8*, i64 }
%"struct.std::__1::array.3102" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.3103", %"class.std::__1::map.3110", i64 }
%"class.std::__1::list.3103" = type { %"class.std::__1::__list_imp.3104" }
%"class.std::__1::__list_imp.3104" = type { %"struct.std::__1::__list_node_base.3105", %"class.std::__1::__compressed_pair.3106" }
%"struct.std::__1::__list_node_base.3105" = type { %"struct.std::__1::__list_node_base.3105"*, %"struct.std::__1::__list_node_base.3105"* }
%"class.std::__1::__compressed_pair.3106" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.3110" = type { %"class.std::__1::__tree.3111" }
%"class.std::__1::__tree.3111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3112", %"class.std::__1::__compressed_pair.3116" }
%"class.std::__1::__compressed_pair.3112" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.3116" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.3123" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.3123" = type { %"class.std::__1::__vector_base.3124" }
%"class.std::__1::__vector_base.3124" = type { %"struct.std::__1::pair.3125"*, %"struct.std::__1::pair.3125"*, %"class.std::__1::__compressed_pair.3126" }
%"struct.std::__1::pair.3125" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3126" = type { %"struct.std::__1::__compressed_pair_elem.3127", %"struct.std::__1::__compressed_pair_elem.3128" }
%"struct.std::__1::__compressed_pair_elem.3127" = type { %"struct.std::__1::pair.3125"* }
%"struct.std::__1::__compressed_pair_elem.3128" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.3061, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.3129" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridgeObserver" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::OffscreenCanvasPlaceholder.base" = type <{ i32 (...)**, %class.scoped_refptr.3094, %"class.base::WeakPtr.3036", %class.scoped_refptr.963, %"class.util::IdType.3133", i32, i32, %"class.absl::optional.3135" }>
%"class.util::IdType.3133" = type { %"class.base::StrongAlias.3134" }
%"class.base::StrongAlias.3134" = type { i32 }
%"class.absl::optional.3135" = type { %"class.absl::optional_internal::optional_data.3136" }
%"class.absl::optional_internal::optional_data.3136" = type { %"class.absl::optional_internal::optional_data_base.3137" }
%"class.absl::optional_internal::optional_data_base.3137" = type { %"class.absl::optional_internal::optional_data_dtor_base.3138" }
%"class.absl::optional_internal::optional_data_dtor_base.3138" = type { i8, %union.anon.3139 }
%union.anon.3139 = type { i32 }
%"class.blink::ThreadState::PrefinalizerRegistration.3140" = type { i8 }
%"class.blink::HeapHashSet.3141" = type { %"class.WTF::HashSet.3144" }
%"class.WTF::HashSet.3144" = type { %"class.WTF::HashTable.3145" }
%"class.WTF::HashTable.3145" = type <{ %"class.blink::WeakMember.3147"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3147" = type opaque
%"class.blink::Member.3148" = type { %"class.blink::MemberBase.3149" }
%"class.blink::MemberBase.3149" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type opaque
%"class.std::__1::unique_ptr.3150" = type { %"class.std::__1::__compressed_pair.3151" }
%"class.std::__1::__compressed_pair.3151" = type { %"struct.std::__1::__compressed_pair_elem.3152" }
%"struct.std::__1::__compressed_pair_elem.3152" = type { %"class.blink::Canvas2DLayerBridge"* }
%"class.blink::Canvas2DLayerBridge" = type { %"class.cc::TextureLayerClient", %class.sk_sp.3153, %class.scoped_refptr.3154, %"class.std::__1::unique_ptr.3155", %"class.std::__1::unique_ptr.3161", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::CanvasColorParams", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceHost"*, %"struct.viz::TransferableResource", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::bernoulli_distribution", %"class.WTF::Deque.3177", %class.sk_sp.3182, %"class.base::WeakPtrFactory.3187" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%class.sk_sp.3153 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.3154 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.std::__1::unique_ptr.3155" = type { %"class.std::__1::__compressed_pair.3156" }
%"class.std::__1::__compressed_pair.3156" = type { %"struct.std::__1::__compressed_pair_elem.3157" }
%"struct.std::__1::__compressed_pair_elem.3157" = type { %"class.blink::SharedContextRateLimiter"* }
%"class.blink::SharedContextRateLimiter" = type opaque
%"class.std::__1::unique_ptr.3161" = type { %"class.std::__1::__compressed_pair.3162" }
%"class.std::__1::__compressed_pair.3162" = type { %"struct.std::__1::__compressed_pair_elem.3163" }
%"struct.std::__1::__compressed_pair_elem.3163" = type { %"class.blink::Canvas2DLayerBridge::Logger"* }
%"class.blink::Canvas2DLayerBridge::Logger" = type { i32 (...)** }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.3030", i32, [4 x i8] }>
%"struct.viz::TransferableResource" = type { %"class.util::IdType.3133", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.3167", i8, i32, i8, [7 x i8], %"class.absl::optional.3172" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.3167" = type { %"class.absl::optional_internal::optional_data.3168" }
%"class.absl::optional_internal::optional_data.3168" = type { %"class.absl::optional_internal::optional_data_base.3169" }
%"class.absl::optional_internal::optional_data_base.3169" = type { %"class.absl::optional_internal::optional_data_dtor_base.3170" }
%"class.absl::optional_internal::optional_data_dtor_base.3170" = type { i8, %union.anon.3171 }
%union.anon.3171 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.3172" = type { %"class.absl::optional_internal::optional_data.3173" }
%"class.absl::optional_internal::optional_data.3173" = type { %"class.absl::optional_internal::optional_data_base.3174" }
%"class.absl::optional_internal::optional_data_base.3174" = type { %"class.absl::optional_internal::optional_data_dtor_base.3175" }
%"class.absl::optional_internal::optional_data_dtor_base.3175" = type { i8, [7 x i8], %union.anon.3176 }
%union.anon.3176 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::bernoulli_distribution" = type { %"class.std::__1::bernoulli_distribution::param_type" }
%"class.std::__1::bernoulli_distribution::param_type" = type { double }
%"class.WTF::Deque.3177" = type { %"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3180" }
%"class.WTF::VectorBuffer.3180" = type { %"class.WTF::VectorBufferBase.3181" }
%"class.WTF::VectorBufferBase.3181" = type { %"struct.blink::Canvas2DLayerBridge::RasterTimer"*, i32, i32 }
%"struct.blink::Canvas2DLayerBridge::RasterTimer" = type { i32, %"class.base::TimeDelta" }
%class.sk_sp.3182 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.3183", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.3183" = type { %"class.std::__1::__compressed_pair.3184" }
%"class.std::__1::__compressed_pair.3184" = type { %"struct.std::__1::__compressed_pair_elem.3185" }
%"struct.std::__1::__compressed_pair_elem.3185" = type { i8* }
%"class.base::WeakPtrFactory.3187" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.3191" = type { %"class.std::__1::__compressed_pair.3192" }
%"class.std::__1::__compressed_pair.3192" = type { %"struct.std::__1::__compressed_pair_elem.3193" }
%"struct.std::__1::__compressed_pair_elem.3193" = type { %"class.blink::SurfaceLayerBridge"* }
%"class.blink::SurfaceLayerBridge" = type <{ %"class.blink::mojom::blink::EmbeddedFrameSinkClient", %"class.blink::mojom::blink::SurfaceEmbedder", %"class.blink::WebSurfaceLayerBridge", %class.scoped_refptr.3194, %class.scoped_refptr.3265, %"class.blink::WebSurfaceLayerBridgeObserver"*, %"class.base::RepeatingCallback.3254", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.mojo::Receiver.3266", %"class.mojo::Receiver.3268", %"class.viz::FrameSinkId", i32, [4 x i8], %"class.viz::SurfaceId", %"class.viz::FrameSinkId", i8, i8, [6 x i8] }>
%"class.blink::mojom::blink::EmbeddedFrameSinkClient" = type { i32 (...)** }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridge" = type { i32 (...)** }
%class.scoped_refptr.3194 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.3254", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.3260", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.3195", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.3214", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.3234" }>
%"class.base::RefCounted.3195" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.3196", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.3196" = type { %"class.std::__1::__vector_base.3197" }
%"class.std::__1::__vector_base.3197" = type { %class.scoped_refptr.3198*, %class.scoped_refptr.3198*, %"class.std::__1::__compressed_pair.3199" }
%class.scoped_refptr.3198 = type opaque
%"class.std::__1::__compressed_pair.3199" = type { %"struct.std::__1::__compressed_pair_elem.3200" }
%"struct.std::__1::__compressed_pair_elem.3200" = type { %class.scoped_refptr.3198* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.3204" }
%"class.base::flat_map.3204" = type { %"class.base::internal::flat_tree.3205" }
%"class.base::internal::flat_tree.3205" = type { %"class.std::__1::vector.3206" }
%"class.std::__1::vector.3206" = type { %"class.std::__1::__vector_base.3207" }
%"class.std::__1::__vector_base.3207" = type { %"struct.std::__1::pair.3208"*, %"struct.std::__1::pair.3208"*, %"class.std::__1::__compressed_pair.3209" }
%"struct.std::__1::pair.3208" = type opaque
%"class.std::__1::__compressed_pair.3209" = type { %"struct.std::__1::__compressed_pair_elem.3210" }
%"struct.std::__1::__compressed_pair_elem.3210" = type { %"struct.std::__1::pair.3208"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.3214" = type { %"class.std::__1::__compressed_pair.3215" }
%"class.std::__1::__compressed_pair.3215" = type { %"struct.std::__1::__compressed_pair_elem.3216" }
%"struct.std::__1::__compressed_pair_elem.3216" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.3217", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.3222", %"class.std::__1::vector.3223" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.absl::optional.3217" = type { %"class.absl::optional_internal::optional_data.3218" }
%"class.absl::optional_internal::optional_data.3218" = type { %"class.absl::optional_internal::optional_data_base.3219" }
%"class.absl::optional_internal::optional_data_base.3219" = type { %"class.absl::optional_internal::optional_data_dtor_base.3220" }
%"class.absl::optional_internal::optional_data_dtor_base.3220" = type { i8, %union.anon.3221 }
%union.anon.3221 = type { %"class.gfx::RRectF" }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.3222" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.3223" = type { %"class.std::__1::__vector_base.3224" }
%"class.std::__1::__vector_base.3224" = type { %"class.std::__1::unique_ptr.3225"*, %"class.std::__1::unique_ptr.3225"*, %"class.std::__1::__compressed_pair.3226" }
%"class.std::__1::unique_ptr.3225" = type opaque
%"class.std::__1::__compressed_pair.3226" = type { %"struct.std::__1::__compressed_pair_elem.3227" }
%"struct.std::__1::__compressed_pair_elem.3227" = type { %"class.std::__1::unique_ptr.3225"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.3234" = type { %"class.std::__1::__compressed_pair.3235" }
%"class.std::__1::__compressed_pair.3235" = type { %"struct.std::__1::__compressed_pair_elem.3236" }
%"struct.std::__1::__compressed_pair_elem.3236" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.3237", %"class.std::__1::vector.3237", %"class.std::__1::vector.3244" }
%"class.std::__1::vector.3237" = type { %"class.std::__1::__vector_base.3238" }
%"class.std::__1::__vector_base.3238" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3239" }
%"class.std::__1::__compressed_pair.3239" = type { %"struct.std::__1::__compressed_pair_elem.3240" }
%"struct.std::__1::__compressed_pair_elem.3240" = type { i8** }
%"class.std::__1::vector.3244" = type { %"class.std::__1::__vector_base.3245" }
%"class.std::__1::__vector_base.3245" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.3246" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3246" = type { %"struct.std::__1::__compressed_pair_elem.3247" }
%"struct.std::__1::__compressed_pair_elem.3247" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.3255", %"class.viz::SurfaceId" }
%"class.absl::optional.3255" = type { %"class.absl::optional_internal::optional_data.3256" }
%"class.absl::optional_internal::optional_data.3256" = type { %"class.absl::optional_internal::optional_data_base.3257" }
%"class.absl::optional_internal::optional_data_base.3257" = type { %"class.absl::optional_internal::optional_data_dtor_base.3258" }
%"class.absl::optional_internal::optional_data_dtor_base.3258" = type { i8, %union.anon.3259 }
%union.anon.3259 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.3260" = type { %"class.absl::optional_internal::optional_data.3261" }
%"class.absl::optional_internal::optional_data.3261" = type { %"class.absl::optional_internal::optional_data_base.3262" }
%"class.absl::optional_internal::optional_data_base.3262" = type { %"class.absl::optional_internal::optional_data_dtor_base.3263" }
%"class.absl::optional_internal::optional_data_dtor_base.3263" = type { i8, %union.anon.3264 }
%union.anon.3264 = type { i32 }
%class.scoped_refptr.3265 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%"class.base::RepeatingCallback.3254" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.mojo::Receiver.3266" = type { %"class.mojo::internal::BindingState.3267" }
%"class.mojo::internal::BindingState.3267" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" }
%"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::EmbeddedFrameSinkClient"* }
%"class.mojo::Receiver.3268" = type { %"class.mojo::internal::BindingState.3269" }
%"class.mojo::internal::BindingState.3269" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::SurfaceEmbedderStub" }
%"class.blink::mojom::blink::SurfaceEmbedderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::SurfaceEmbedder"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.3273" = type { %"class.std::__1::__compressed_pair.3274" }
%"class.std::__1::__compressed_pair.3274" = type { %"struct.std::__1::__compressed_pair_elem.3275" }
%"struct.std::__1::__compressed_pair_elem.3275" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type opaque
%class.scoped_refptr.3028 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::ImageOrientation" = type { i8 }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.2856", %"class.blink::FormAssociated", %"class.blink::Member.2723", %"class.blink::Member.2857", %"class.blink::Member.2662", %"class.WTF::AtomicString", float, %"class.blink::Member.2859", i8, i8, i32, %"class.std::__1::unique_ptr.2861" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::ActiveScriptWrappable.2856" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2723" = type { %"class.blink::MemberBase.2724" }
%"class.blink::MemberBase.2724" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2727", %"class.blink::Member.343", %"class.blink::Member.2728", %"class.blink::Member.2728", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.2764", %"class.std::__1::unique_ptr.2765", %"class.std::__1::unique_ptr.2765", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.2771" }
%"class.blink::ThreadState::PrefinalizerRegistration.2727" = type { i8 }
%"class.base::WeakPtr.2764" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2765" = type { %"class.std::__1::__compressed_pair.2766" }
%"class.std::__1::__compressed_pair.2766" = type { %"struct.std::__1::__compressed_pair_elem.2767" }
%"struct.std::__1::__compressed_pair_elem.2767" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.2771" = type { %"class.WTF::Vector.2774" }
%"class.WTF::Vector.2774" = type { %"class.WTF::VectorBuffer.2775" }
%"class.WTF::VectorBuffer.2775" = type { %"class.WTF::VectorBufferBase.2776" }
%"class.WTF::VectorBufferBase.2776" = type { %"class.blink::Member.2777"*, i32, i32 }
%"class.blink::Member.2777" = type opaque
%"class.blink::Member.2857" = type { %"class.blink::MemberBase.2858" }
%"class.blink::MemberBase.2858" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.2859" = type { %"class.blink::MemberBase.2860" }
%"class.blink::MemberBase.2860" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.2861" = type { %"class.std::__1::__compressed_pair.2862" }
%"class.std::__1::__compressed_pair.2862" = type { %"struct.std::__1::__compressed_pair_elem.2863" }
%"struct.std::__1::__compressed_pair_elem.2863" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::BackspaceStateMachine" = type { i16, i32, i32, i32 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink22NextCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_ = comdat any

$_ZN5blink22NextCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_ = comdat any

$_ZN5blink26PreviousCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_ = comdat any

$_ZN5blink26PreviousCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_ = comdat any

$_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_ = comdat any

$_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_ = comdat any

$_ZN5blink49FirstEditablePositionAfterPositionInRootAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE = comdat any

$_ZN5blink49FirstEditablePositionAfterPositionInRootAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE = comdat any

$_ZN5blink49LastEditablePositionBeforePositionInRootAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE = comdat any

$_ZN5blink49LastEditablePositionBeforePositionInRootAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE = comdat any

$_ZN5blink22FindNextBoundaryOffsetINS_36BackwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi = comdat any

$_ZN5blink22FindNextBoundaryOffsetINS_35ForwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi = comdat any

$_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE = comdat any

$_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE = comdat any

$_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE = comdat any

$_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink22AreSameRangesAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEEbPNS_4NodeERKNS_16PositionTemplateIT_EESA_ = comdat any

$_ZN5blink22AreSameRangesAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEbPNS_4NodeERKNS_16PositionTemplateIT_EESA_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink22FindNextBoundaryOffsetINS_21BackspaceStateMachineEEEiRKN3WTF6StringEi = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLParagraphElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE4CallIJiPS3_EEEPS5_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11StaticRangeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11StaticRangeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names9kRoleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [8 x i8] c"textbox\00", align 1
@_ZN5blink10html_names6kLiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kUTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kSTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrikeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kITagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kEmTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kBTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrongTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kBlockquoteTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"cite\00", align 1
@_ZN5blink10html_names11kListingTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH1TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH2TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH3TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH4TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH5TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink16input_type_names9kPasswordE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.8 = private unnamed_addr constant [16 x i8] c"white-space:pre\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.13 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink10html_names10kCanvasTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kImageTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.15 = private unnamed_addr constant [39 x i8] c"EditingUtility::nextCandidateAlgorithm\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"EditingUtility::nextVisuallyDistinctCandidateAlgorithm\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c"EditingUtility::previousCandidateAlgorithm\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"EditingUtility::previousVisuallyDistinctCandidateAlgorithm\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names8kSpanTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_11StaticRangeEEELj0EEEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::StaticRange>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.19 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.22 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11StaticRangeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StaticRange>, WTF::VectorTraits<blink::Member<blink::StaticRange> > >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21NeedsLayoutTreeUpdateERKNS_4NodeE(%"class.blink::Node"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"* %5) #13
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %5) #13
  %9 = icmp eq %"class.blink::LocalFrameView"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %5) #13
  %12 = tail call zeroext i1 @_ZNK5blink14LocalFrameView11NeedsLayoutEv(%"class.blink::LocalFrameView"* %11) #13
  br label %13

13:                                               ; preds = %10, %7, %1
  %14 = phi i1 [ true, %1 ], [ false, %7 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14LocalFrameView11NeedsLayoutEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21NeedsLayoutTreeUpdateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"* %9) #13
  br i1 %10, label %17, label %11

11:                                               ; preds = %5
  %12 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %9) #13
  %13 = icmp eq %"class.blink::LocalFrameView"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %9) #13
  %16 = tail call zeroext i1 @_ZNK5blink14LocalFrameView11NeedsLayoutEv(%"class.blink::LocalFrameView"* %15) #13
  br label %17

17:                                               ; preds = %1, %5, %11, %14
  %18 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %11 ], [ %16, %14 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21NeedsLayoutTreeUpdateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"* %9) #13
  br i1 %10, label %17, label %11

11:                                               ; preds = %5
  %12 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %9) #13
  %13 = icmp eq %"class.blink::LocalFrameView"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %9) #13
  %16 = tail call zeroext i1 @_ZNK5blink14LocalFrameView11NeedsLayoutEv(%"class.blink::LocalFrameView"* %15) #13
  br label %17

17:                                               ; preds = %1, %5, %11, %14
  %18 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %11 ], [ %16, %14 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12IsAtomicNodeEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %10 = bitcast %"class.blink::Node"* %9 to %"class.blink::Node"**
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %0)
  br label %15

15:                                               ; preds = %8, %3, %1, %13
  %16 = phi i1 [ false, %1 ], [ true, %8 ], [ %14, %13 ], [ true, %3 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Node"*)***
  %3 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %3, i64 45
  %5 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Node"* %0) #13
  br i1 %6, label %7, label %46

7:                                                ; preds = %1
  %8 = icmp eq %"class.blink::Node"* %0, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Node"**
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %46

19:                                               ; preds = %14, %9, %7
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 5, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, -2
  %27 = icmp ult i32 %26, 18
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %0, i32 0) #13
  br i1 %29, label %46, label %30

30:                                               ; preds = %28, %19
  %31 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #13
  %32 = icmp eq %"class.blink::ContainerNode"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #13
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %38, i64 0, i32 5, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, -2
  %42 = icmp ult i32 %41, 18
  br i1 %42, label %43, label %46

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0
  %45 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %44, i32 0) #13
  br label %46

46:                                               ; preds = %43, %33, %30, %28, %14, %1
  %47 = phi i1 [ true, %1 ], [ false, %30 ], [ false, %28 ], [ false, %14 ], [ %45, %43 ], [ false, %33 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22IsAtomicNodeInFlatTreeEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %0, i32 0) #13
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %0)
  br label %8

8:                                                ; preds = %3, %1, %6
  %9 = phi i1 [ false, %1 ], [ true, %3 ], [ %7, %6 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink25ComparePositionsInDOMTreeEPKNS_4NodeEiS2_iPb(%"class.blink::Node"*, i32, %"class.blink::Node"*, i32, i8*) local_unnamed_addr #0 {
  %6 = icmp ne i8* %4, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i8 0, i8* %4, align 1
  br label %8

8:                                                ; preds = %7, %5
  %9 = icmp eq %"class.blink::Node"* %0, null
  br i1 %9, label %136, label %10

10:                                               ; preds = %8
  %11 = icmp eq %"class.blink::Node"* %2, null
  br i1 %11, label %136, label %12

12:                                               ; preds = %10
  %13 = icmp eq %"class.blink::Node"* %0, %2
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = icmp eq i32 %1, %3
  br i1 %15, label %136, label %16

16:                                               ; preds = %14
  %17 = icmp slt i32 %1, %3
  %18 = select i1 %17, i16 -1, i16 1
  br label %136

19:                                               ; preds = %12, %24
  %20 = phi %"class.blink::Node"* [ %26, %24 ], [ %2, %12 ]
  %21 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %20) #13
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0
  %23 = icmp eq %"class.blink::Node"* %22, %0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %20) #13
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::ContainerNode"* %25, null
  br i1 %27, label %54, label %19

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %35 = bitcast %"class.blink::Node"* %34 to %"class.blink::Node"**
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  br label %37

37:                                               ; preds = %33, %28
  %38 = phi %"class.blink::Node"* [ %36, %33 ], [ null, %28 ]
  %39 = icmp ne %"class.blink::Node"* %38, %20
  %40 = icmp sgt i32 %1, 0
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %51

42:                                               ; preds = %37, %42
  %43 = phi %"class.blink::Node"* [ %47, %42 ], [ %38, %37 ]
  %44 = phi i32 [ %45, %42 ], [ 0, %37 ]
  %45 = add nuw nsw i32 %44, 1
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp ne %"class.blink::Node"* %47, %20
  %49 = icmp slt i32 %45, %1
  %50 = and i1 %49, %48
  br i1 %50, label %42, label %51

51:                                               ; preds = %42, %37
  %52 = phi i1 [ %40, %37 ], [ %49, %42 ]
  %53 = select i1 %52, i16 1, i16 -1
  br label %136

54:                                               ; preds = %24, %59
  %55 = phi %"class.blink::Node"* [ %61, %59 ], [ %0, %24 ]
  %56 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %55) #13
  %57 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %56, i64 0, i32 0
  %58 = icmp eq %"class.blink::Node"* %57, %2
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %55) #13
  %61 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %60, i64 0, i32 0
  %62 = icmp eq %"class.blink::ContainerNode"* %60, null
  br i1 %62, label %89, label %54

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %70 = bitcast %"class.blink::Node"* %69 to %"class.blink::Node"**
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  br label %72

72:                                               ; preds = %68, %63
  %73 = phi %"class.blink::Node"* [ %71, %68 ], [ null, %63 ]
  %74 = icmp ne %"class.blink::Node"* %73, %55
  %75 = icmp sgt i32 %3, 0
  %76 = and i1 %75, %74
  br i1 %76, label %77, label %86

77:                                               ; preds = %72, %77
  %78 = phi %"class.blink::Node"* [ %82, %77 ], [ %73, %72 ]
  %79 = phi i32 [ %80, %77 ], [ 0, %72 ]
  %80 = add nuw nsw i32 %79, 1
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %78, i64 0, i32 5, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  %83 = icmp ne %"class.blink::Node"* %82, %55
  %84 = icmp slt i32 %80, %3
  %85 = and i1 %84, %83
  br i1 %85, label %77, label %86

86:                                               ; preds = %77, %72
  %87 = phi i1 [ %75, %72 ], [ %84, %77 ]
  %88 = select i1 %87, i16 -1, i16 1
  br label %136

89:                                               ; preds = %59
  %90 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %0, %"class.blink::Node"* nonnull dereferenceable(64) %2) #13
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  br i1 %6, label %93, label %136

93:                                               ; preds = %92
  store i8 1, i8* %4, align 1
  br label %136

94:                                               ; preds = %89, %99
  %95 = phi %"class.blink::Node"* [ %101, %99 ], [ %0, %89 ]
  %96 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %95) #13
  %97 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %96, i64 0, i32 0
  %98 = icmp eq %"class.blink::Node"* %97, %90
  br i1 %98, label %103, label %99

99:                                               ; preds = %94
  %100 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %95) #13
  %101 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %100, i64 0, i32 0
  %102 = icmp eq %"class.blink::ContainerNode"* %100, null
  br i1 %102, label %103, label %94

103:                                              ; preds = %99, %94
  %104 = phi %"class.blink::Node"* [ %90, %99 ], [ %95, %94 ]
  br label %105

105:                                              ; preds = %110, %103
  %106 = phi %"class.blink::Node"* [ %112, %110 ], [ %2, %103 ]
  %107 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %106) #13
  %108 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %107, i64 0, i32 0
  %109 = icmp eq %"class.blink::Node"* %108, %90
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %106) #13
  %112 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %111, i64 0, i32 0
  %113 = icmp eq %"class.blink::ContainerNode"* %111, null
  br i1 %113, label %114, label %105

114:                                              ; preds = %110, %105
  %115 = phi %"class.blink::Node"* [ %90, %110 ], [ %106, %105 ]
  %116 = icmp eq %"class.blink::Node"* %104, %115
  br i1 %116, label %136, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %136, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 1
  %124 = bitcast %"class.blink::Node"* %123 to %"class.blink::Node"**
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %124, align 8
  %126 = icmp eq %"class.blink::Node"* %125, null
  br i1 %126, label %136, label %127

127:                                              ; preds = %122, %132
  %128 = phi %"class.blink::Node"* [ %134, %132 ], [ %125, %122 ]
  %129 = icmp eq %"class.blink::Node"* %128, %104
  br i1 %129, label %136, label %130

130:                                              ; preds = %127
  %131 = icmp eq %"class.blink::Node"* %128, %115
  br i1 %131, label %136, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %128, i64 0, i32 5, i32 0, i32 0
  %134 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8
  %135 = icmp eq %"class.blink::Node"* %134, null
  br i1 %135, label %136, label %127

136:                                              ; preds = %127, %130, %132, %8, %10, %14, %16, %51, %86, %92, %93, %114, %117, %122
  %137 = phi i16 [ -1, %8 ], [ 1, %10 ], [ 0, %14 ], [ %18, %16 ], [ %53, %51 ], [ %88, %86 ], [ 0, %93 ], [ 0, %92 ], [ 0, %114 ], [ 0, %122 ], [ 0, %117 ], [ 0, %132 ], [ 1, %130 ], [ -1, %127 ]
  ret i16 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink26ComparePositionsInFlatTreeEPKNS_4NodeEiS2_iPb(%"class.blink::Node"*, i32, %"class.blink::Node"*, i32, i8*) local_unnamed_addr #0 {
  %6 = icmp ne i8* %4, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i8 0, i8* %4, align 1
  br label %8

8:                                                ; preds = %7, %5
  %9 = icmp eq %"class.blink::Node"* %0, null
  br i1 %9, label %108, label %10

10:                                               ; preds = %8
  %11 = icmp eq %"class.blink::Node"* %2, null
  br i1 %11, label %108, label %12

12:                                               ; preds = %10
  %13 = icmp eq %"class.blink::Node"* %0, %2
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = icmp eq i32 %1, %3
  br i1 %15, label %108, label %16

16:                                               ; preds = %14
  %17 = icmp slt i32 %1, %3
  %18 = select i1 %17, i16 -1, i16 1
  br label %108

19:                                               ; preds = %12, %24
  %20 = phi %"class.blink::Node"* [ %26, %24 ], [ %2, %12 ]
  %21 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %20) #13
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0
  %23 = icmp eq %"class.blink::Node"* %22, %0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %20) #13
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::ContainerNode"* %25, null
  br i1 %27, label %44, label %19

28:                                               ; preds = %19
  %29 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %0, i32 0) #13
  %30 = icmp ne %"class.blink::Node"* %29, %20
  %31 = icmp sgt i32 %1, 0
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %41

33:                                               ; preds = %28, %33
  %34 = phi %"class.blink::Node"* [ %37, %33 ], [ %29, %28 ]
  %35 = phi i32 [ %36, %33 ], [ 0, %28 ]
  %36 = add nuw nsw i32 %35, 1
  %37 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %34, i32 0) #13
  %38 = icmp ne %"class.blink::Node"* %37, %20
  %39 = icmp slt i32 %36, %1
  %40 = and i1 %39, %38
  br i1 %40, label %33, label %41

41:                                               ; preds = %33, %28
  %42 = phi i1 [ %31, %28 ], [ %39, %33 ]
  %43 = select i1 %42, i16 1, i16 -1
  br label %108

44:                                               ; preds = %24, %49
  %45 = phi %"class.blink::Node"* [ %51, %49 ], [ %0, %24 ]
  %46 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %45) #13
  %47 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %46, i64 0, i32 0
  %48 = icmp eq %"class.blink::Node"* %47, %2
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %45) #13
  %51 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::ContainerNode"* %50, null
  br i1 %52, label %69, label %44

53:                                               ; preds = %44
  %54 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %2, i32 0) #13
  %55 = icmp ne %"class.blink::Node"* %54, %45
  %56 = icmp sgt i32 %3, 0
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %66

58:                                               ; preds = %53, %58
  %59 = phi %"class.blink::Node"* [ %62, %58 ], [ %54, %53 ]
  %60 = phi i32 [ %61, %58 ], [ 0, %53 ]
  %61 = add nuw nsw i32 %60, 1
  %62 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %59, i32 0) #13
  %63 = icmp ne %"class.blink::Node"* %62, %45
  %64 = icmp slt i32 %61, %3
  %65 = and i1 %64, %63
  br i1 %65, label %58, label %66

66:                                               ; preds = %58, %53
  %67 = phi i1 [ %56, %53 ], [ %64, %58 ]
  %68 = select i1 %67, i16 -1, i16 1
  br label %108

69:                                               ; preds = %49
  %70 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %0, %"class.blink::Node"* nonnull dereferenceable(64) %2) #13
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  br i1 %6, label %73, label %108

73:                                               ; preds = %72
  store i8 1, i8* %4, align 1
  br label %108

74:                                               ; preds = %69, %79
  %75 = phi %"class.blink::Node"* [ %81, %79 ], [ %0, %69 ]
  %76 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %75) #13
  %77 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %76, i64 0, i32 0
  %78 = icmp eq %"class.blink::Node"* %77, %70
  br i1 %78, label %83, label %79

79:                                               ; preds = %74
  %80 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %75) #13
  %81 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %80, i64 0, i32 0
  %82 = icmp eq %"class.blink::ContainerNode"* %80, null
  br i1 %82, label %83, label %74

83:                                               ; preds = %79, %74
  %84 = phi %"class.blink::Node"* [ %70, %79 ], [ %75, %74 ]
  br label %85

85:                                               ; preds = %90, %83
  %86 = phi %"class.blink::Node"* [ %92, %90 ], [ %2, %83 ]
  %87 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %86) #13
  %88 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %87, i64 0, i32 0
  %89 = icmp eq %"class.blink::Node"* %88, %70
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %86) #13
  %92 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %91, i64 0, i32 0
  %93 = icmp eq %"class.blink::ContainerNode"* %91, null
  br i1 %93, label %94, label %85

94:                                               ; preds = %90, %85
  %95 = phi %"class.blink::Node"* [ %70, %90 ], [ %86, %85 ]
  %96 = icmp eq %"class.blink::Node"* %84, %95
  br i1 %96, label %108, label %97

97:                                               ; preds = %94
  %98 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %70, i32 0) #13
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %108, label %100

100:                                              ; preds = %97, %105
  %101 = phi %"class.blink::Node"* [ %106, %105 ], [ %98, %97 ]
  %102 = icmp eq %"class.blink::Node"* %101, %84
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = icmp eq %"class.blink::Node"* %101, %95
  br i1 %104, label %108, label %105

105:                                              ; preds = %103
  %106 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %101, i32 0) #13
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %108, label %100

108:                                              ; preds = %100, %103, %105, %8, %10, %14, %16, %41, %66, %72, %73, %94, %97
  %109 = phi i16 [ -1, %8 ], [ 1, %10 ], [ 0, %14 ], [ %18, %16 ], [ %43, %41 ], [ %68, %66 ], [ 0, %73 ], [ 0, %72 ], [ 0, %94 ], [ 0, %97 ], [ 0, %105 ], [ 1, %103 ], [ -1, %100 ]
  ret i16 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = tail call %"class.blink::TreeScope"* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  %4 = icmp eq %"class.blink::TreeScope"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %7 = tail call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* nonnull %3, %"class.blink::Node"* %6) #13
  %8 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %9 = icmp ne %"class.blink::Node"* %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i32 [ %11, %10 ], [ 0, %5 ]
  %14 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #13
  %15 = tail call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* nonnull %3, %"class.blink::Node"* %14) #13
  %16 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #13
  %17 = icmp ne %"class.blink::Node"* %15, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1) #13
  br label %20

20:                                               ; preds = %12, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %12 ]
  %22 = icmp ne %"class.blink::Node"* %7, %15
  %23 = or i1 %9, %22
  %24 = xor i1 %22, true
  %25 = sext i1 %24 to i16
  %26 = zext i1 %17 to i16
  %27 = select i1 %23, i16 %25, i16 %26
  %28 = tail call signext i16 @_ZN5blink25ComparePositionsInDOMTreeEPKNS_4NodeEiS2_iPb(%"class.blink::Node"* %7, i32 %13, %"class.blink::Node"* %15, i32 %21, i8* null)
  %29 = icmp eq i16 %28, 0
  %30 = select i1 %29, i16 %27, i16 %28
  br label %31

31:                                               ; preds = %2, %20
  %32 = phi i16 [ %30, %20 ], [ 0, %2 ]
  ret i16 %32
}

declare %"class.blink::TreeScope"* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink16ComparePositionsERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionWithAffinityTemplate"* dereferenceable(24), %"class.blink::PositionWithAffinityTemplate"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 0
  %5 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %3, %"class.blink::PositionTemplate"* dereferenceable(16) %4)
  ret i16 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink16ComparePositionsERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* dereferenceable(16) %6) #13
  %7 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %8) #13
  %9 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret i16 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20IsNodeFullyContainedERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* %0) #13
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %14, %"class.blink::Node"* dereferenceable(64) %1) #13
  %16 = icmp eq %"class.blink::Node"* %15, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br i1 %16, label %27, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* %0) #13
  %19 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* dereferenceable(64) %1) #13
  %20 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #13
  %21 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #13
  %22 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #13
  br i1 %20, label %23, label %25

23:                                               ; preds = %17
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* dereferenceable(64) %1) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::EphemeralRangeTemplate"* %0) #13
  %24 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #13
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i1 [ false, %17 ], [ %24, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  br label %27

27:                                               ; preds = %11, %2, %25
  %28 = phi i1 [ %26, %25 ], [ false, %2 ], [ false, %11 ]
  ret i1 %28
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19IsUserSelectContainERKNS_4NodeE(%"class.blink::Node"* readonly dereferenceable(64)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %34, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %16, %32
  br label %34

34:                                               ; preds = %1, %27, %20, %8
  %35 = phi i1 [ true, %20 ], [ true, %8 ], [ %33, %27 ], [ false, %1 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ult i32 %8, 18
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %0, i32 0)
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ %11, %10 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64), i32) unnamed_addr #0 {
  %3 = bitcast %"class.blink::Node"* %0 to i8 (%"class.blink::Node"*)***
  %4 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %3, align 8
  %5 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %4, i64 34
  %6 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %5, align 8
  %7 = tail call zeroext i8 %6(%"class.blink::Node"* %0) #13
  %8 = icmp ne i8 %7, 0
  %9 = icmp eq %"class.blink::Node"* %0, null
  %10 = or i1 %8, %9
  br i1 %10, label %76, label %11

11:                                               ; preds = %2, %71
  %12 = phi %"class.blink::Node"* [ %73, %71 ], [ %0, %2 ]
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 0, i32 0
  %23 = icmp eq %"class.blink::Node"* %22, %12
  br i1 %23, label %24, label %71

24:                                               ; preds = %17, %11
  %25 = and i32 %14, 12
  %26 = icmp eq i32 %25, 0
  %27 = and i32 %14, 1
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 6, i32 0, i32 0
  br i1 %26, label %30, label %41

30:                                               ; preds = %24
  br i1 %28, label %37, label %31

31:                                               ; preds = %30
  %32 = bitcast %"class.blink::NodeData"** %29 to %"class.blink::NodeRareData"**
  %33 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %35, i64 0, i32 2, i32 0
  br label %56

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::NodeData"** %29 to %"class.blink::NodeRenderingData"**
  %39 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %39, i64 0, i32 2, i32 0
  br label %56

41:                                               ; preds = %24
  br i1 %28, label %46, label %42

42:                                               ; preds = %41
  %43 = bitcast %"class.blink::NodeData"** %29 to %"class.blink::NodeRareData"**
  %44 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %44, i64 0, i32 1, i32 0, i32 0
  br label %48

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::NodeData"** %29 to %"class.blink::NodeRenderingData"**
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi %"class.blink::NodeRenderingData"** [ %45, %42 ], [ %47, %46 ]
  %50 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %50, i64 0, i32 1
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutObject"* %52, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %52, i64 0, i32 5, i32 0
  br label %56

56:                                               ; preds = %31, %37, %54
  %57 = phi %"class.blink::ComputedStyle"** [ %55, %54 ], [ %36, %31 ], [ %40, %37 ]
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %57, align 8
  %59 = icmp eq %"class.blink::ComputedStyle"* %58, null
  br i1 %59, label %71, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %62, i64 0, i32 23
  %64 = bitcast [5 x i8]* %63 to i40*
  %65 = load i40, i40* %64, align 8
  %66 = lshr i40 %65, 26
  %67 = trunc i40 %66 to i32
  %68 = and i32 %67, 3
  switch i32 %68, label %71 [
    i32 0, label %75
    i32 1, label %76
    i32 2, label %69
  ]

69:                                               ; preds = %60
  %70 = icmp ne i32 %1, 1
  br label %76

71:                                               ; preds = %56, %48, %60, %17
  %72 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %12) #13
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %72, i64 0, i32 0
  %74 = icmp eq %"class.blink::ContainerNode"* %72, null
  br i1 %74, label %75, label %11

75:                                               ; preds = %71, %60
  br label %76

76:                                               ; preds = %60, %75, %2, %69
  %77 = phi i1 [ %70, %69 ], [ false, %2 ], [ false, %75 ], [ true, %60 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ult i32 %8, 18
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %0, i32 1)
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ %11, %10 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IsEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 5, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -2
  %10 = icmp ult i32 %9, 18
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %0, i32 0) #13
  br i1 %12, label %113, label %13

13:                                               ; preds = %1, %11
  %14 = icmp eq %"class.blink::Node"* %0, null
  br i1 %14, label %113, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %22 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Element"*)***
  %23 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %23, i64 126
  %25 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::Element"* nonnull %21) #13
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLFormControlElement"*
  %29 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* nonnull %28) #13
  br i1 %29, label %30, label %113

30:                                               ; preds = %20, %15, %27
  %31 = load i32, i32* %16, align 8
  %32 = and i32 %31, 12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %113

34:                                               ; preds = %30
  %35 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRoleAttrE, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 3
  %38 = bitcast %"class.blink::Member.320"* %37 to %"class.blink::ElementData"**
  %39 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %38, align 8
  %40 = icmp eq %"class.blink::ElementData"* %39, null
  br i1 %40, label %91, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::ElementData"* %39 to %"class.blink::UniqueElementData"*
  %48 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 1, i32 1
  %49 = bitcast %"class.blink::Member.354"* %48 to %"class.blink::Attribute"**
  %50 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %47, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  br label %58

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 1
  %55 = bitcast %"class.blink::ElementData"* %54 to %"class.blink::Attribute"*
  %56 = lshr i32 %43, 1
  %57 = and i32 %56, 268435455
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi %"class.blink::Attribute"* [ %55, %53 ], [ %50, %46 ]
  %60 = phi i32 [ %57, %53 ], [ %52, %46 ]
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %84, %64
  %70 = phi %"class.blink::Attribute"* [ %59, %64 ], [ %85, %84 ]
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %72, %66
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %76, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %81, %82
  br i1 %83, label %87, label %84

84:                                               ; preds = %79, %74
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 1
  %86 = icmp eq %"class.blink::Attribute"* %85, %62
  br i1 %86, label %91, label %69

87:                                               ; preds = %79, %69
  %88 = icmp eq %"class.blink::Attribute"* %70, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 1
  br label %93

91:                                               ; preds = %84, %87, %58, %34
  %92 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %93

93:                                               ; preds = %89, %91
  %94 = phi %"class.WTF::AtomicString"* [ %92, %91 ], [ %90, %89 ]
  %95 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %100, i64* %101, align 8
  br label %109

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8
  br label %109

109:                                              ; preds = %102, %98
  %110 = phi i32 [ %105, %102 ], [ 0, %98 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %110, i32* %111, align 8
  %112 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [8 x i8]* nonnull dereferenceable(8) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  br label %113

113:                                              ; preds = %30, %11, %27, %13, %109
  %114 = phi i1 [ %112, %109 ], [ false, %30 ], [ false, %13 ], [ true, %27 ], [ true, %11 ]
  ret i1 %114
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ult i32 %8, 18
  br i1 %9, label %10, label %46

10:                                               ; preds = %1
  %11 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %0, i32 0) #13
  br i1 %11, label %12, label %46

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %46

17:                                               ; preds = %12
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #13
  %19 = icmp eq %"class.blink::ContainerNode"* %18, null
  br i1 %19, label %46, label %20

20:                                               ; preds = %17
  %21 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #13
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 5, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -2
  %29 = icmp ult i32 %28, 18
  br i1 %29, label %30, label %46

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 0
  %32 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %31, i32 0) #13
  br i1 %32, label %33, label %46

33:                                               ; preds = %30
  %34 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #13
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = tail call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %42) #13
  %44 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = icmp eq %"class.blink::Node"* %44, %0
  br label %46

46:                                               ; preds = %20, %1, %17, %30, %33, %39, %12, %10
  %47 = phi i1 [ false, %12 ], [ false, %10 ], [ true, %33 ], [ true, %30 ], [ true, %17 ], [ %45, %39 ], [ false, %1 ], [ true, %20 ]
  ret i1 %47
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %37, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  br label %5

5:                                                ; preds = %3, %33
  %6 = phi %"class.blink::Node"* [ %0, %3 ], [ %35, %33 ]
  %7 = phi %"class.blink::Element"* [ null, %3 ], [ %26, %33 ]
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 5, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -2
  %15 = icmp ult i32 %14, 18
  br i1 %15, label %16, label %37

16:                                               ; preds = %5
  %17 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* nonnull dereferenceable(64) %6, i32 0) #13
  br i1 %17, label %18, label %37

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 0
  %23 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %24 = select i1 %22, %"class.blink::Element"* %23, %"class.blink::Element"* null
  %25 = icmp eq %"class.blink::Element"* %24, null
  %26 = select i1 %25, %"class.blink::Element"* %7, %"class.blink::Element"* %24
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = tail call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %29) #13
  %31 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = icmp eq %"class.blink::Node"* %31, %6
  br i1 %32, label %37, label %33

33:                                               ; preds = %18
  %34 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %6) #13
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0
  %36 = icmp eq %"class.blink::ContainerNode"* %34, null
  br i1 %36, label %37, label %5

37:                                               ; preds = %33, %16, %18, %5, %1
  %38 = phi %"class.blink::Element"* [ null, %1 ], [ %7, %5 ], [ %26, %18 ], [ %7, %16 ], [ %26, %33 ]
  ret %"class.blink::Element"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %68, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0)
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0
  %8 = icmp eq %"class.blink::Element"* %6, null
  br i1 %8, label %68, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %68, label %27

27:                                               ; preds = %9, %14
  %28 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0
  %29 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %28) #13
  %30 = icmp eq %"class.blink::ContainerNode"* %29, null
  br i1 %30, label %68, label %31

31:                                               ; preds = %27
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %31, %65
  %35 = phi %"class.blink::ContainerNode"* [ %29, %31 ], [ %66, %65 ]
  %36 = phi %"class.blink::ContainerNode"* [ %7, %31 ], [ %50, %65 ]
  %37 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 5, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, -2
  %45 = icmp ult i32 %44, 18
  br i1 %45, label %46, label %49

46:                                               ; preds = %34
  %47 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %37, i32 0) #13
  %48 = select i1 %47, %"class.blink::ContainerNode"* %35, %"class.blink::ContainerNode"* %36
  br label %49

49:                                               ; preds = %46, %34
  %50 = phi %"class.blink::ContainerNode"* [ %36, %34 ], [ %48, %46 ]
  %51 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 48
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %49
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 1, i32 2
  %58 = bitcast %"class.blink::Member.318"* %57 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %61, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %49, %55
  %66 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %37) #13
  %67 = icmp eq %"class.blink::ContainerNode"* %66, null
  br i1 %67, label %68, label %34

68:                                               ; preds = %55, %65, %27, %5, %14, %1
  %69 = phi %"class.blink::ContainerNode"* [ null, %1 ], [ null, %5 ], [ %7, %14 ], [ %7, %27 ], [ %50, %65 ], [ %50, %55 ]
  ret %"class.blink::ContainerNode"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %145, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %14, %10
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp ne %"class.blink::LayoutObject"* %20, null
  %22 = and i32 %6, 48
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %23, %21
  br i1 %24, label %25, label %41

25:                                               ; preds = %16
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %25
  %38 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #13
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %38, i64 0, i32 0
  %40 = icmp eq %"class.blink::ContainerNode"* %38, null
  br i1 %40, label %145, label %41

41:                                               ; preds = %16, %25, %37
  %42 = phi %"class.blink::Node"* [ %39, %37 ], [ %2, %25 ], [ %2, %16 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  br label %44

44:                                               ; preds = %141, %41
  %45 = phi %"class.blink::Node"* [ %42, %41 ], [ %143, %141 ]
  %46 = phi %"class.blink::Element"* [ null, %41 ], [ %134, %141 ]
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %50, i64 0, i32 5, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, -2
  %54 = icmp ult i32 %53, 18
  br i1 %54, label %55, label %145

55:                                               ; preds = %44
  %56 = bitcast %"class.blink::Node"* %45 to i8 (%"class.blink::Node"*)***
  %57 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %56, align 8
  %58 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %57, i64 34
  %59 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %58, align 8
  %60 = tail call zeroext i8 %59(%"class.blink::Node"* %45) #13
  %61 = icmp ne i8 %60, 0
  %62 = icmp eq %"class.blink::Node"* %45, null
  %63 = or i1 %62, %61
  br i1 %63, label %145, label %64

64:                                               ; preds = %55, %122
  %65 = phi %"class.blink::Node"* [ %124, %122 ], [ %45, %55 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 48
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %74, i64 0, i32 0, i32 0
  %76 = icmp eq %"class.blink::Node"* %75, %65
  br i1 %76, label %77, label %122

77:                                               ; preds = %70, %64
  %78 = and i32 %67, 12
  %79 = icmp eq i32 %78, 0
  %80 = and i32 %67, 1
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 6, i32 0, i32 0
  br i1 %79, label %83, label %94

83:                                               ; preds = %77
  br i1 %81, label %90, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.blink::NodeData"** %82 to %"class.blink::NodeRareData"**
  %86 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %86, i64 0, i32 1, i32 0, i32 0
  %88 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %88, i64 0, i32 2, i32 0
  br label %109

90:                                               ; preds = %83
  %91 = bitcast %"class.blink::NodeData"** %82 to %"class.blink::NodeRenderingData"**
  %92 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %92, i64 0, i32 2, i32 0
  br label %109

94:                                               ; preds = %77
  br i1 %81, label %99, label %95

95:                                               ; preds = %94
  %96 = bitcast %"class.blink::NodeData"** %82 to %"class.blink::NodeRareData"**
  %97 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %97, i64 0, i32 1, i32 0, i32 0
  br label %101

99:                                               ; preds = %94
  %100 = bitcast %"class.blink::NodeData"** %82 to %"class.blink::NodeRenderingData"**
  br label %101

101:                                              ; preds = %99, %95
  %102 = phi %"class.blink::NodeRenderingData"** [ %98, %95 ], [ %100, %99 ]
  %103 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %103, i64 0, i32 1
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = icmp eq %"class.blink::LayoutObject"* %105, null
  br i1 %106, label %122, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %105, i64 0, i32 5, i32 0
  br label %109

109:                                              ; preds = %107, %90, %84
  %110 = phi %"class.blink::ComputedStyle"** [ %108, %107 ], [ %89, %84 ], [ %93, %90 ]
  %111 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %110, align 8
  %112 = icmp eq %"class.blink::ComputedStyle"* %111, null
  br i1 %112, label %122, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 0, i32 1, i32 0, i32 0
  %115 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %115, i64 0, i32 23
  %117 = bitcast [5 x i8]* %116 to i40*
  %118 = load i40, i40* %117, align 8
  %119 = lshr i40 %118, 26
  %120 = trunc i40 %119 to i32
  %121 = and i32 %120, 3
  switch i32 %121, label %122 [
    i32 0, label %145
    i32 1, label %126
    i32 2, label %126
  ]

122:                                              ; preds = %113, %109, %101, %70
  %123 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %65) #13
  %124 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %123, i64 0, i32 0
  %125 = icmp eq %"class.blink::ContainerNode"* %123, null
  br i1 %125, label %145, label %64

126:                                              ; preds = %113, %113
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = and i32 %128, 12
  %130 = icmp eq i32 %129, 0
  %131 = bitcast %"class.blink::Node"* %45 to %"class.blink::Element"*
  %132 = select i1 %130, %"class.blink::Element"* %131, %"class.blink::Element"* null
  %133 = icmp eq %"class.blink::Element"* %132, null
  %134 = select i1 %133, %"class.blink::Element"* %46, %"class.blink::Element"* %132
  %135 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %136 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %135, i64 0, i32 2, i32 0, i32 0
  %137 = load %"class.blink::Document"*, %"class.blink::Document"** %136, align 8
  %138 = tail call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %137) #13
  %139 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = icmp eq %"class.blink::Node"* %139, %45
  br i1 %140, label %145, label %141

141:                                              ; preds = %126
  %142 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %45) #13
  %143 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %142, i64 0, i32 0
  %144 = icmp eq %"class.blink::ContainerNode"* %142, null
  br i1 %144, label %145, label %44

145:                                              ; preds = %55, %141, %126, %44, %113, %122, %37, %1
  %146 = phi %"class.blink::Element"* [ null, %1 ], [ null, %37 ], [ %46, %122 ], [ %46, %113 ], [ %46, %55 ], [ %134, %141 ], [ %134, %126 ], [ %46, %44 ]
  ret %"class.blink::Element"* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  %4 = call %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret %"class.blink::ContainerNode"* %4
}

declare void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18IsEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %55, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %14, %10
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp ne %"class.blink::LayoutObject"* %20, null
  %22 = and i32 %6, 48
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %23, %21
  br i1 %24, label %25, label %40

25:                                               ; preds = %16
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %25
  %38 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #13
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %38, i64 0, i32 0
  br label %40

40:                                               ; preds = %16, %37, %25
  %41 = phi %"class.blink::Node"* [ %39, %37 ], [ %2, %25 ], [ %2, %16 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 0, i32 0
  %47 = icmp eq %"class.blink::Node"* %46, %41
  br i1 %47, label %55, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 5, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, -2
  %52 = icmp ult i32 %51, 18
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %41, i32 0) #13
  br label %55

55:                                               ; preds = %53, %48, %40, %1
  %56 = phi i1 [ false, %1 ], [ false, %40 ], [ %54, %53 ], [ false, %48 ]
  ret i1 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp ne %"class.blink::LayoutObject"* %19, null
  %21 = and i32 %5, 48
  %22 = icmp eq i32 %21, 0
  %23 = and i1 %22, %20
  br i1 %23, label %24, label %36

24:                                               ; preds = %15
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br label %36

36:                                               ; preds = %15, %24, %1
  %37 = phi i1 [ false, %15 ], [ false, %1 ], [ %35, %24 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18IsEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  %4 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %2) #13
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp ne %"class.blink::LayoutObject"* %22, null
  %24 = and i32 %8, 48
  %25 = icmp eq i32 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %27, label %42

27:                                               ; preds = %18
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %27
  %40 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #13
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %40, i64 0, i32 0
  br label %42

42:                                               ; preds = %39, %27, %18
  %43 = phi %"class.blink::Node"* [ %41, %39 ], [ %4, %27 ], [ %4, %18 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 0, i32 0
  %49 = icmp eq %"class.blink::Node"* %48, %43
  br i1 %49, label %57, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 5, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, -2
  %54 = icmp ult i32 %53, 18
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %43, i32 0) #13
  br label %57

57:                                               ; preds = %1, %42, %50, %55
  %58 = phi i1 [ false, %1 ], [ false, %42 ], [ %56, %55 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp ne %"class.blink::LayoutObject"* %21, null
  %23 = and i32 %7, 48
  %24 = icmp eq i32 %23, 0
  %25 = and i1 %24, %22
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %31 = bitcast %"class.blink::Member.318"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #13
  %40 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %39, i64 0, i32 0
  br label %41

41:                                               ; preds = %17, %38, %26
  %42 = phi %"class.blink::Node"* [ %40, %38 ], [ %3, %26 ], [ %3, %17 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 5, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, -2
  %50 = icmp ult i32 %49, 18
  br i1 %50, label %51, label %53

51:                                               ; preds = %41
  %52 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %42, i32 1) #13
  br label %53

53:                                               ; preds = %51, %41, %1
  %54 = phi i1 [ false, %1 ], [ %52, %51 ], [ false, %41 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  %4 = call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret %"class.blink::Element"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NextCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  tail call void @_ZN5blink22NextCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22NextCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %8 ]
  %18 = bitcast %"class.blink::PositionIteratorAlgorithm"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %19 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  br label %22

22:                                               ; preds = %20, %24
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %23 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #13
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %25 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %25, label %26, label %22

26:                                               ; preds = %24, %14
  %27 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  %32 = bitcast i32* %30 to i8*
  br i1 %31, label %39, label %33, !prof !2

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #13
  store i32* null, i32** %29, align 8
  br label %39

39:                                               ; preds = %28, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  %40 = icmp eq i8* %17, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = load i8, i8* %17, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #13
  br label %45

45:                                               ; preds = %39, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NextCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  tail call void @_ZN5blink22NextCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22NextCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm.3351", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %8 ]
  %18 = bitcast %"class.blink::PositionIteratorAlgorithm.3351"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %19 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  br label %22

22:                                               ; preds = %20, %24
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %23 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %25 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %25, label %26, label %22

26:                                               ; preds = %24, %14
  %27 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  %32 = bitcast i32* %30 to i8*
  br i1 %31, label %39, label %33, !prof !2

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #13
  store i32* null, i32** %29, align 8
  br label %39

39:                                               ; preds = %28, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  %40 = icmp eq i8* %17, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = load i8, i8* %17, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #13
  br label %45

45:                                               ; preds = %39, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16, !noalias !4
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %14 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13, !noalias !4
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %16, i64* %15, align 8, !noalias !4
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13, !noalias !4
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi i64 [ -6148914691236517206, %2 ], [ %17, %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), %12 ]
  %21 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %12 ]
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8, !noalias !4
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13, !alias.scope !4
  br label %108

27:                                               ; preds = %18
  %28 = bitcast %"class.blink::PositionIteratorAlgorithm"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #13, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false) #13, !noalias !4
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13, !noalias !4
  %29 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13, !noalias !4
  %30 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false) #13, !noalias !4
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 1) #13, !noalias !4
  %33 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #13, !noalias !4
  %34 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false) #13, !noalias !4
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 1) #13, !noalias !4
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13, !noalias !4
  %37 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13, !noalias !4
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  br label %94

40:                                               ; preds = %27
  %41 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %42 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  %43 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %49 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  br label %50

50:                                               ; preds = %92, %40
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 16, i1 false) #13, !alias.scope !4
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %51 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  br i1 %51, label %52, label %91

52:                                               ; preds = %50
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* dereferenceable(16) %0, i32 1) #13
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8, !noalias !4
  %54 = icmp eq %"class.blink::Node"* %53, null
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8, !noalias !4
  br i1 %54, label %56, label %58

56:                                               ; preds = %52
  %57 = icmp eq %"class.blink::Node"* %55, null
  br i1 %57, label %90, label %70

58:                                               ; preds = %52
  %59 = icmp eq %"class.blink::Node"* %53, %55
  br i1 %59, label %60, label %70

60:                                               ; preds = %58
  %61 = load i32, i32* %44, align 4, !noalias !4
  %62 = load i32, i32* %32, align 4, !noalias !4
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %66, label %90

66:                                               ; preds = %64
  %67 = load i32, i32* %45, align 8, !noalias !4
  %68 = load i32, i32* %31, align 8, !noalias !4
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %90, label %70

70:                                               ; preds = %66, %60, %58, %56
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* dereferenceable(16) %0, i32 1) #13
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8, !noalias !4
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8, !noalias !4
  br i1 %72, label %74, label %76

74:                                               ; preds = %70
  %75 = icmp eq %"class.blink::Node"* %73, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  br i1 %75, label %92, label %96

76:                                               ; preds = %70
  %77 = icmp eq %"class.blink::Node"* %71, %73
  br i1 %77, label %78, label %85

78:                                               ; preds = %76
  %79 = load i32, i32* %47, align 4, !noalias !4
  %80 = load i32, i32* %36, align 4, !noalias !4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = icmp eq i32 %79, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  br label %92

85:                                               ; preds = %78, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  br label %96

86:                                               ; preds = %82
  %87 = load i32, i32* %48, align 8, !noalias !4
  %88 = load i32, i32* %35, align 8, !noalias !4
  %89 = icmp eq i32 %87, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  br i1 %89, label %92, label %96

90:                                               ; preds = %66, %64, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  br label %92

91:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !4
  br label %92

92:                                               ; preds = %91, %90, %86, %84, %74
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %93 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %93, label %94, label %50

94:                                               ; preds = %92, %38
  %95 = phi i8* [ %39, %38 ], [ %49, %92 ]
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #13, !alias.scope !4
  br label %96

96:                                               ; preds = %86, %74, %94, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #13, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13, !noalias !4
  %97 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8, !noalias !4
  %99 = icmp eq i32* %98, null
  %100 = bitcast i32* %98 to i8*
  br i1 %99, label %107, label %101, !prof !2

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4, !noalias !4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %101
  store i32 0, i32* %102, align 4, !noalias !4
  br label %106

106:                                              ; preds = %105, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #13
  store i32* null, i32** %97, align 8, !noalias !4
  br label %107

107:                                              ; preds = %106, %96
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #13, !noalias !4
  br label %108

108:                                              ; preds = %107, %25
  %109 = icmp eq i8* %21, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = load i8, i8* %21, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #13
  br label %114

114:                                              ; preds = %108, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm.3351", align 8
  %5 = alloca %"class.blink::PositionTemplate.2659", align 8
  %6 = alloca %"class.blink::PositionTemplate.2659", align 8
  %7 = alloca %"class.blink::PositionTemplate.2659", align 8
  %8 = alloca %"class.blink::PositionTemplate.2659", align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16, !noalias !7
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %14 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13, !noalias !7
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %16, i64* %15, align 8, !noalias !7
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13, !noalias !7
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi i64 [ -6148914691236517206, %2 ], [ %17, %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), %12 ]
  %21 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %12 ]
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8, !noalias !7
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13, !alias.scope !7
  br label %108

27:                                               ; preds = %18
  %28 = bitcast %"class.blink::PositionIteratorAlgorithm.3351"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #13, !noalias !7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false) #13, !noalias !7
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13, !noalias !7
  %29 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13, !noalias !7
  %30 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false) #13, !noalias !7
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %5, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, i32 1) #13, !noalias !7
  %33 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #13, !noalias !7
  %34 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false) #13, !noalias !7
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %6, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, i32 1) #13, !noalias !7
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13, !noalias !7
  %37 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13, !noalias !7
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  br label %94

40:                                               ; preds = %27
  %41 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i8*
  %42 = bitcast %"class.blink::PositionTemplate.2659"* %8 to i8*
  %43 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %8, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %8, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %8, i64 0, i32 1
  %49 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  br label %50

50:                                               ; preds = %92, %40
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 16, i1 false) #13, !alias.scope !7
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %51 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  br i1 %51, label %52, label %91

52:                                               ; preds = %50
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0, i32 1) #13
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8, !noalias !7
  %54 = icmp eq %"class.blink::Node"* %53, null
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8, !noalias !7
  br i1 %54, label %56, label %58

56:                                               ; preds = %52
  %57 = icmp eq %"class.blink::Node"* %55, null
  br i1 %57, label %90, label %70

58:                                               ; preds = %52
  %59 = icmp eq %"class.blink::Node"* %53, %55
  br i1 %59, label %60, label %70

60:                                               ; preds = %58
  %61 = load i32, i32* %44, align 4, !noalias !7
  %62 = load i32, i32* %32, align 4, !noalias !7
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %66, label %90

66:                                               ; preds = %64
  %67 = load i32, i32* %45, align 8, !noalias !7
  %68 = load i32, i32* %31, align 8, !noalias !7
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %90, label %70

70:                                               ; preds = %66, %60, %58, %56
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %8, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0, i32 1) #13
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8, !noalias !7
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8, !noalias !7
  br i1 %72, label %74, label %76

74:                                               ; preds = %70
  %75 = icmp eq %"class.blink::Node"* %73, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  br i1 %75, label %92, label %96

76:                                               ; preds = %70
  %77 = icmp eq %"class.blink::Node"* %71, %73
  br i1 %77, label %78, label %85

78:                                               ; preds = %76
  %79 = load i32, i32* %47, align 4, !noalias !7
  %80 = load i32, i32* %36, align 4, !noalias !7
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = icmp eq i32 %79, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  br label %92

85:                                               ; preds = %78, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  br label %96

86:                                               ; preds = %82
  %87 = load i32, i32* %48, align 8, !noalias !7
  %88 = load i32, i32* %35, align 8, !noalias !7
  %89 = icmp eq i32 %87, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  br i1 %89, label %92, label %96

90:                                               ; preds = %66, %64, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  br label %92

91:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13, !noalias !7
  br label %92

92:                                               ; preds = %91, %90, %86, %84, %74
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %93 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %93, label %94, label %50

94:                                               ; preds = %92, %38
  %95 = phi i8* [ %39, %38 ], [ %49, %92 ]
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #13, !alias.scope !7
  br label %96

96:                                               ; preds = %86, %74, %94, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #13, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13, !noalias !7
  %97 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8, !noalias !7
  %99 = icmp eq i32* %98, null
  %100 = bitcast i32* %98 to i8*
  br i1 %99, label %107, label %101, !prof !2

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4, !noalias !7
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %101
  store i32 0, i32* %102, align 4, !noalias !7
  br label %106

106:                                              ; preds = %105, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #13
  store i32* null, i32** %97, align 8, !noalias !7
  br label %107

107:                                              ; preds = %106, %96
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #13, !noalias !7
  br label %108

108:                                              ; preds = %107, %25
  %109 = icmp eq i8* %21, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = load i8, i8* %21, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #13
  br label %114

114:                                              ; preds = %108, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17PreviousCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  tail call void @_ZN5blink26PreviousCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26PreviousCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %8 ]
  %18 = bitcast %"class.blink::PositionIteratorAlgorithm"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %19 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  br label %22

22:                                               ; preds = %20, %24
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %23 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #13
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %25 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %25, label %26, label %22

26:                                               ; preds = %24, %14
  %27 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  %32 = bitcast i32* %30 to i8*
  br i1 %31, label %39, label %33, !prof !2

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #13
  store i32* null, i32** %29, align 8
  br label %39

39:                                               ; preds = %28, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  %40 = icmp eq i8* %17, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = load i8, i8* %17, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #13
  br label %45

45:                                               ; preds = %39, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17PreviousCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  tail call void @_ZN5blink26PreviousCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26PreviousCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm.3351", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %8 ]
  %18 = bitcast %"class.blink::PositionIteratorAlgorithm.3351"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %19 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  br label %22

22:                                               ; preds = %20, %24
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %23 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %25 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %25, label %26, label %22

26:                                               ; preds = %24, %14
  %27 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  %32 = bitcast i32* %30 to i8*
  br i1 %31, label %39, label %33, !prof !2

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #13
  store i32* null, i32** %29, align 8
  br label %39

39:                                               ; preds = %28, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  %40 = icmp eq i8* %17, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = load i8, i8* %17, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #13
  br label %45

45:                                               ; preds = %39, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33PreviousVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  tail call void @_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %14 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %18

18:                                               ; preds = %2, %12
  %19 = phi i64 [ -6148914691236517206, %2 ], [ %17, %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), %12 ]
  %21 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %12 ]
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  br label %108

27:                                               ; preds = %18
  %28 = bitcast %"class.blink::PositionIteratorAlgorithm"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  %29 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 2
  %33 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 1) #13
  %34 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 2
  %38 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 1) #13
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %39 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %39, label %94, label %40

40:                                               ; preds = %27
  %41 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %42 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  %43 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %49 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  br label %50

50:                                               ; preds = %40, %92
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %51 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13
  br i1 %51, label %52, label %91

52:                                               ; preds = %50
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* dereferenceable(16) %0, i32 1) #13
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  br i1 %54, label %56, label %58

56:                                               ; preds = %52
  %57 = icmp eq %"class.blink::Node"* %55, null
  br i1 %57, label %90, label %70

58:                                               ; preds = %52
  %59 = icmp eq %"class.blink::Node"* %53, %55
  br i1 %59, label %60, label %70

60:                                               ; preds = %58
  %61 = load i32, i32* %44, align 4
  %62 = load i32, i32* %32, align 4
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %66, label %90

66:                                               ; preds = %64
  %67 = load i32, i32* %45, align 8
  %68 = load i32, i32* %31, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %90, label %70

70:                                               ; preds = %56, %66, %58, %60
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* dereferenceable(16) %0, i32 1) #13
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  br i1 %72, label %74, label %76

74:                                               ; preds = %70
  %75 = icmp eq %"class.blink::Node"* %73, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br i1 %75, label %92, label %96

76:                                               ; preds = %70
  %77 = icmp eq %"class.blink::Node"* %71, %73
  br i1 %77, label %78, label %85

78:                                               ; preds = %76
  %79 = load i32, i32* %47, align 4
  %80 = load i32, i32* %37, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = icmp eq i32 %79, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %92

85:                                               ; preds = %78, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %96

86:                                               ; preds = %82
  %87 = load i32, i32* %48, align 8
  %88 = load i32, i32* %36, align 8
  %89 = icmp eq i32 %87, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br i1 %89, label %92, label %96

90:                                               ; preds = %56, %66, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %92

91:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %92

92:                                               ; preds = %74, %86, %84, %91, %90
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  %93 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm"* nonnull %4) #13
  br i1 %93, label %94, label %50

94:                                               ; preds = %92, %27
  %95 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #13
  br label %96

96:                                               ; preds = %86, %74, %85, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  %97 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  %100 = bitcast i32* %98 to i8*
  br i1 %99, label %107, label %101, !prof !2

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm", %"class.blink::PositionIteratorAlgorithm"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %101
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #13
  store i32* null, i32** %97, align 8
  br label %107

107:                                              ; preds = %96, %106
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #13
  br label %108

108:                                              ; preds = %107, %25
  %109 = icmp eq i8* %21, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = load i8, i8* %21, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #13
  br label %114

114:                                              ; preds = %108, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33PreviousVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  tail call void @_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.blink::PositionIteratorAlgorithm.3351", align 8
  %5 = alloca %"class.blink::PositionTemplate.2659", align 8
  %6 = alloca %"class.blink::PositionTemplate.2659", align 8
  %7 = alloca %"class.blink::PositionTemplate.2659", align 8
  %8 = alloca %"class.blink::PositionTemplate.2659", align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %14 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %18

18:                                               ; preds = %2, %12
  %19 = phi i64 [ -6148914691236517206, %2 ], [ %17, %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), %12 ]
  %21 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %12 ]
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  br label %108

27:                                               ; preds = %18
  %28 = bitcast %"class.blink::PositionIteratorAlgorithm.3351"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  %29 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 2
  %33 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %5, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, i32 1) #13
  %34 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 2
  %38 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %6, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, i32 1) #13
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %39 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %39, label %94, label %40

40:                                               ; preds = %27
  %41 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i8*
  %42 = bitcast %"class.blink::PositionTemplate.2659"* %8 to i8*
  %43 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %8, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %8, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %8, i64 0, i32 1
  %49 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  br label %50

50:                                               ; preds = %40, %92
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %51 = call zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13
  br i1 %51, label %52, label %91

52:                                               ; preds = %50
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0, i32 1) #13
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  br i1 %54, label %56, label %58

56:                                               ; preds = %52
  %57 = icmp eq %"class.blink::Node"* %55, null
  br i1 %57, label %90, label %70

58:                                               ; preds = %52
  %59 = icmp eq %"class.blink::Node"* %53, %55
  br i1 %59, label %60, label %70

60:                                               ; preds = %58
  %61 = load i32, i32* %44, align 4
  %62 = load i32, i32* %32, align 4
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %66, label %90

66:                                               ; preds = %64
  %67 = load i32, i32* %45, align 8
  %68 = load i32, i32* %31, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %90, label %70

70:                                               ; preds = %56, %66, %58, %60
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %8, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0, i32 1) #13
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  br i1 %72, label %74, label %76

74:                                               ; preds = %70
  %75 = icmp eq %"class.blink::Node"* %73, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br i1 %75, label %92, label %96

76:                                               ; preds = %70
  %77 = icmp eq %"class.blink::Node"* %71, %73
  br i1 %77, label %78, label %85

78:                                               ; preds = %76
  %79 = load i32, i32* %47, align 4
  %80 = load i32, i32* %37, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = icmp eq i32 %79, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %92

85:                                               ; preds = %78, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %96

86:                                               ; preds = %82
  %87 = load i32, i32* %48, align 8
  %88 = load i32, i32* %36, align 8
  %89 = icmp eq i32 %87, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br i1 %89, label %92, label %96

90:                                               ; preds = %56, %66, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %92

91:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  br label %92

92:                                               ; preds = %74, %86, %84, %91, %90
  call void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  %93 = call zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm.3351"* nonnull %4) #13
  br i1 %93, label %94, label %50

94:                                               ; preds = %92, %27
  %95 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #13
  br label %96

96:                                               ; preds = %86, %74, %85, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  %97 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  %100 = bitcast i32* %98 to i8*
  br i1 %99, label %107, label %101, !prof !2

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::PositionIteratorAlgorithm.3351", %"class.blink::PositionIteratorAlgorithm.3351"* %4, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %101
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #13
  store i32* null, i32** %97, align 8
  br label %107

107:                                              ; preds = %96, %106
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #13
  br label %108

108:                                              ; preds = %107, %25
  %109 = icmp eq i8* %21, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = load i8, i8* %21, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #13
  br label %114

114:                                              ; preds = %108, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink40FirstEditablePositionAfterPositionInRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  tail call void @_ZN5blink49FirstEditablePositionAfterPositionInRootAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::Node"* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink49FirstEditablePositionAfterPositionInRootAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %2) #13
  %11 = call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #13
  %12 = icmp eq i16 %11, -1
  br i1 %12, label %13, label %25

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 5, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -2
  %21 = icmp ult i32 %20, 18
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %2, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %205

25:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  br label %26

26:                                               ; preds = %25, %22
  %27 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %30 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = icmp eq %"class.blink::TreeScope"* %34, %36
  br i1 %37, label %59, label %38

38:                                               ; preds = %26
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %40 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %36, %"class.blink::Node"* %39) #13
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #13
  br label %204

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %40) #13
  %46 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = inttoptr i64 %47 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #13
  br label %54

54:                                               ; preds = %44, %51
  %55 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %56 = bitcast i32* %55 to i64*
  %57 = bitcast i32* %29 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13
  br label %59

59:                                               ; preds = %26, %54
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %203, label %62

62:                                               ; preds = %59
  %63 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %66 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %67 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %68 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %69 = bitcast i32* %68 to i64*
  %70 = bitcast i32* %29 to i64*
  br label %71

71:                                               ; preds = %62, %158
  %72 = phi %"class.blink::Node"* [ null, %62 ], [ %129, %158 ]
  %73 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #13
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %126, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 6, i32 0, i32 0
  br i1 %79, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::NodeData"** %80 to %"class.blink::NodeRareData"**
  %83 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %83, i64 0, i32 1, i32 0, i32 0
  br label %87

85:                                               ; preds = %75
  %86 = bitcast %"class.blink::NodeData"** %80 to %"class.blink::NodeRenderingData"**
  br label %87

87:                                               ; preds = %85, %81
  %88 = phi %"class.blink::NodeRenderingData"** [ %84, %81 ], [ %86, %85 ]
  %89 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %89, i64 0, i32 1
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = icmp ne %"class.blink::LayoutObject"* %91, null
  %93 = and i32 %77, 48
  %94 = icmp eq i32 %93, 0
  %95 = and i1 %94, %92
  br i1 %95, label %96, label %109

96:                                               ; preds = %87
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 1, i32 2
  %99 = bitcast %"class.blink::Member.318"* %98 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %102, %104
  br i1 %105, label %106, label %109

106:                                              ; preds = %96
  %107 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %73) #13
  %108 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %107, i64 0, i32 0
  br label %109

109:                                              ; preds = %106, %96, %87
  %110 = phi %"class.blink::Node"* [ %108, %106 ], [ %73, %96 ], [ %73, %87 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 3, i32 0, i32 0
  %112 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %112, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %114, i64 0, i32 0, i32 0
  %116 = icmp eq %"class.blink::Node"* %115, %110
  br i1 %116, label %126, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %114, i64 0, i32 5, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, -2
  %121 = icmp ult i32 %120, 18
  br i1 %121, label %122, label %126

122:                                              ; preds = %117
  %123 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %110, i32 0) #13
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %162

126:                                              ; preds = %117, %109, %71, %122
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %128 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %127, %"class.blink::Node"* %2) #13
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br i1 %128, label %130, label %162

130:                                              ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #13
  %131 = icmp eq %"class.blink::Node"* %129, null
  br i1 %131, label %148, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %129, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %146, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %129, i64 1
  %139 = bitcast %"class.blink::Node"* %138 to %"class.blink::Node"**
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  %141 = icmp eq %"class.blink::Node"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %137
  %143 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %129) #13
  br i1 %143, label %144, label %148

144:                                              ; preds = %142
  %145 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %146

146:                                              ; preds = %144, %132, %137
  %147 = phi %"class.blink::Node"* [ %145, %144 ], [ %129, %132 ], [ %129, %137 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %147) #13
  br label %149

148:                                              ; preds = %130, %142
  call void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  br label %149

149:                                              ; preds = %148, %146
  %150 = load i64, i64* %66, align 8
  store atomic i64 %150, i64* %67 monotonic, align 8
  %151 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %152 = icmp eq i32 %151, 0
  %153 = inttoptr i64 %150 to %"class.blink::Node"*
  br i1 %152, label %158, label %154

154:                                              ; preds = %149
  %155 = inttoptr i64 %150 to i8*
  %156 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %155) #13
  %157 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %158

158:                                              ; preds = %149, %154
  %159 = phi %"class.blink::Node"* [ %153, %149 ], [ %157, %154 ]
  %160 = load i64, i64* %69, align 8
  store i64 %160, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #13
  %161 = icmp eq %"class.blink::Node"* %159, null
  br i1 %161, label %162, label %71

162:                                              ; preds = %126, %158, %124
  %163 = phi %"class.blink::Node"* [ %72, %124 ], [ %72, %126 ], [ %129, %158 ]
  %164 = phi %"class.blink::Node"* [ %125, %124 ], [ %129, %126 ], [ %159, %158 ]
  %165 = icmp eq %"class.blink::Node"* %164, null
  %166 = icmp eq %"class.blink::Node"* %164, %2
  %167 = or i1 %165, %166
  br i1 %167, label %172, label %168

168:                                              ; preds = %162
  %169 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %164, %"class.blink::Node"* %2) #13
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #13
  br label %204

172:                                              ; preds = %162, %168
  %173 = icmp eq %"class.blink::Node"* %163, null
  br i1 %173, label %203, label %174

174:                                              ; preds = %172
  %175 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %176 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %163, %"class.blink::Node"* %175) #13
  br i1 %176, label %177, label %203

177:                                              ; preds = %174
  %178 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #13
  %179 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::Node"* dereferenceable(64) %2) #13
  %180 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #13
  %181 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %182 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 16, i1 false)
  call void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  %183 = load %"class.blink::Node"*, %"class.blink::Node"** %181, align 8
  %184 = icmp eq %"class.blink::Node"* %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %177
  %186 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #13
  %187 = select i1 %186, %"class.blink::PositionTemplate"* %9, %"class.blink::PositionTemplate"* %8
  br label %188

188:                                              ; preds = %177, %185
  %189 = phi %"class.blink::PositionTemplate"* [ %187, %185 ], [ %8, %177 ]
  %190 = bitcast %"class.blink::PositionTemplate"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %191, i64* %192 monotonic, align 8
  %193 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %188
  %196 = inttoptr i64 %191 to i8*
  %197 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %196) #13
  br label %198

198:                                              ; preds = %188, %195
  %199 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %189, i64 0, i32 1
  %200 = bitcast i32* %199 to i64*
  %201 = bitcast i32* %29 to i64*
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #13
  br label %203

203:                                              ; preds = %59, %172, %198, %174
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #13
  br label %204

204:                                              ; preds = %170, %203, %42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  br label %205

205:                                              ; preds = %204, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink40FirstEditablePositionAfterPositionInRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  tail call void @_ZN5blink49FirstEditablePositionAfterPositionInRootAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, %"class.blink::Node"* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink49FirstEditablePositionAfterPositionInRootAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::PositionTemplate.2659", align 8
  %5 = alloca %"class.blink::PositionTemplate.2659", align 8
  %6 = alloca %"class.blink::PositionTemplate.2659", align 8
  %7 = alloca %"class.blink::PositionTemplate.2659", align 8
  %8 = alloca %"class.blink::PositionTemplate.2659", align 8
  %9 = alloca %"class.blink::PositionTemplate.2659", align 8
  %10 = bitcast %"class.blink::PositionTemplate.2659"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %2) #13
  %11 = call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.2659"* %1, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %4) #13
  %12 = icmp eq i16 %11, -1
  br i1 %12, label %13, label %25

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 5, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -2
  %21 = icmp ult i32 %20, 18
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %2, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %151

25:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  br label %26

26:                                               ; preds = %25, %22
  %27 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 1
  %30 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* nonnull %5, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  %31 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = icmp eq %"class.blink::TreeScope"* %34, %36
  br i1 %37, label %59, label %38

38:                                               ; preds = %26
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %40 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %36, %"class.blink::Node"* %39) #13
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #13
  br label %150

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %40) #13
  %46 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = inttoptr i64 %47 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #13
  br label %54

54:                                               ; preds = %44, %51
  %55 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 1
  %56 = bitcast i32* %55 to i64*
  %57 = bitcast i32* %29 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13
  br label %59

59:                                               ; preds = %26, %54
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %149, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i8*
  %64 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i64*
  %65 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i64*
  %66 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 1
  %67 = bitcast i32* %66 to i64*
  %68 = bitcast i32* %29 to i64*
  br label %69

69:                                               ; preds = %62, %104
  %70 = phi %"class.blink::Node"* [ null, %62 ], [ %75, %104 ]
  %71 = call zeroext i1 @_ZN5blink18IsEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5)
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br i1 %71, label %108, label %73

73:                                               ; preds = %69
  %74 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %72, %"class.blink::Node"* %2) #13
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br i1 %74, label %76, label %108

76:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #13
  %77 = icmp eq %"class.blink::Node"* %75, null
  br i1 %77, label %94, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %92, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 1
  %85 = bitcast %"class.blink::Node"* %84 to %"class.blink::Node"**
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %85, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %83
  %89 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %75) #13
  br i1 %89, label %90, label %94

90:                                               ; preds = %88
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %92

92:                                               ; preds = %90, %78, %83
  %93 = phi %"class.blink::Node"* [ %91, %90 ], [ %75, %78 ], [ %75, %83 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %93) #13
  br label %95

94:                                               ; preds = %76, %88
  call void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5)
  br label %95

95:                                               ; preds = %94, %92
  %96 = load i64, i64* %64, align 8
  store atomic i64 %96, i64* %65 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  %99 = inttoptr i64 %96 to %"class.blink::Node"*
  br i1 %98, label %104, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %96 to i8*
  %102 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  %103 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %104

104:                                              ; preds = %95, %100
  %105 = phi %"class.blink::Node"* [ %99, %95 ], [ %103, %100 ]
  %106 = load i64, i64* %67, align 8
  store i64 %106, i64* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #13
  %107 = icmp eq %"class.blink::Node"* %105, null
  br i1 %107, label %108, label %69

108:                                              ; preds = %73, %104, %69
  %109 = phi %"class.blink::Node"* [ %70, %69 ], [ %75, %104 ], [ %70, %73 ]
  %110 = phi %"class.blink::Node"* [ %72, %69 ], [ %105, %104 ], [ %75, %73 ]
  %111 = icmp eq %"class.blink::Node"* %110, null
  %112 = icmp eq %"class.blink::Node"* %110, %2
  %113 = or i1 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %108
  %115 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %110, %"class.blink::Node"* %2) #13
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #13
  br label %150

118:                                              ; preds = %108, %114
  %119 = icmp eq %"class.blink::Node"* %109, null
  br i1 %119, label %149, label %120

120:                                              ; preds = %118
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %122 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %109, %"class.blink::Node"* %121) #13
  br i1 %122, label %123, label %149

123:                                              ; preds = %120
  %124 = bitcast %"class.blink::PositionTemplate.2659"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #13
  %125 = bitcast %"class.blink::PositionTemplate.2659"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %8, %"class.blink::Node"* dereferenceable(64) %2) #13
  %126 = bitcast %"class.blink::PositionTemplate.2659"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %9, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.blink::PositionTemplate.2659"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 16, i1 false)
  call void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* nonnull sret %9, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5)
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %127, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %123
  %132 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate.2659"* nonnull %9, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %8) #13
  %133 = select i1 %132, %"class.blink::PositionTemplate.2659"* %9, %"class.blink::PositionTemplate.2659"* %8
  br label %134

134:                                              ; preds = %123, %131
  %135 = phi %"class.blink::PositionTemplate.2659"* [ %133, %131 ], [ %8, %123 ]
  %136 = bitcast %"class.blink::PositionTemplate.2659"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i64*
  store atomic i64 %137, i64* %138 monotonic, align 8
  %139 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %134
  %142 = inttoptr i64 %137 to i8*
  %143 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %142) #13
  br label %144

144:                                              ; preds = %134, %141
  %145 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %135, i64 0, i32 1
  %146 = bitcast i32* %145 to i64*
  %147 = bitcast i32* %29 to i64*
  %148 = load i64, i64* %146, align 8
  store i64 %148, i64* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #13
  br label %149

149:                                              ; preds = %59, %118, %144, %120
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5) #13
  br label %150

150:                                              ; preds = %116, %149, %42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  br label %151

151:                                              ; preds = %150, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink40LastEditablePositionBeforePositionInRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  tail call void @_ZN5blink49LastEditablePositionBeforePositionInRootAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::Node"* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink49LastEditablePositionBeforePositionInRootAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %2) #13
  %9 = call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #13
  %10 = icmp eq i16 %9, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %156

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %16 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = icmp eq %"class.blink::TreeScope"* %20, %22
  br i1 %23, label %45, label %24

24:                                               ; preds = %12
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %26 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %22, %"class.blink::Node"* %25) #13
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  br label %155

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %26) #13
  %32 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = inttoptr i64 %33 to i8*
  %39 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #13
  br label %40

40:                                               ; preds = %30, %37
  %41 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %42 = bitcast i32* %41 to i64*
  %43 = bitcast i32* %15 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br label %45

45:                                               ; preds = %12, %40
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %154, label %48

48:                                               ; preds = %45
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %52 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %53 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %54 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %55 = bitcast i32* %54 to i64*
  %56 = bitcast i32* %15 to i64*
  br label %57

57:                                               ; preds = %48, %141
  %58 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #13
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %109, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 0, i32 6, i32 0, i32 0
  br i1 %64, label %70, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.blink::NodeData"** %65 to %"class.blink::NodeRareData"**
  %68 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %68, i64 0, i32 1, i32 0, i32 0
  br label %72

70:                                               ; preds = %60
  %71 = bitcast %"class.blink::NodeData"** %65 to %"class.blink::NodeRenderingData"**
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi %"class.blink::NodeRenderingData"** [ %69, %66 ], [ %71, %70 ]
  %74 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %74, i64 0, i32 1
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = icmp ne %"class.blink::LayoutObject"* %76, null
  %78 = and i32 %62, 48
  %79 = icmp eq i32 %78, 0
  %80 = and i1 %79, %77
  br i1 %80, label %81, label %94

81:                                               ; preds = %72
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 1, i32 2
  %84 = bitcast %"class.blink::Member.318"* %83 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %87, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %81
  %92 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %58) #13
  %93 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %92, i64 0, i32 0
  br label %94

94:                                               ; preds = %91, %81, %72
  %95 = phi %"class.blink::Node"* [ %93, %91 ], [ %58, %81 ], [ %58, %72 ]
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %97, i64 0, i32 2, i32 0, i32 0
  %99 = load %"class.blink::Document"*, %"class.blink::Document"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %99, i64 0, i32 0, i32 0
  %101 = icmp eq %"class.blink::Node"* %100, %95
  br i1 %101, label %109, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %99, i64 0, i32 5, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, -2
  %106 = icmp ult i32 %105, 18
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  %108 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %95, i32 0) #13
  br i1 %108, label %145, label %109

109:                                              ; preds = %102, %94, %57, %107
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %111 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %110, %"class.blink::Node"* %2) #13
  br i1 %111, label %112, label %145

112:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %114 = icmp eq %"class.blink::Node"* %113, null
  br i1 %114, label %131, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %113, i64 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %129, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %113, i64 1
  %122 = bitcast %"class.blink::Node"* %121 to %"class.blink::Node"**
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %120
  %126 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %113) #13
  br i1 %126, label %127, label %131

127:                                              ; preds = %125
  %128 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %129

129:                                              ; preds = %127, %115, %120
  %130 = phi %"class.blink::Node"* [ %128, %127 ], [ %113, %115 ], [ %113, %120 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %130) #13
  br label %132

131:                                              ; preds = %112, %125
  call void @_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #13
  br label %132

132:                                              ; preds = %131, %129
  %133 = load i64, i64* %52, align 8
  store atomic i64 %133, i64* %53 monotonic, align 8
  %134 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %135 = icmp eq i32 %134, 0
  %136 = inttoptr i64 %133 to %"class.blink::Node"*
  br i1 %135, label %141, label %137

137:                                              ; preds = %132
  %138 = inttoptr i64 %133 to i8*
  %139 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %138) #13
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %141

141:                                              ; preds = %132, %137
  %142 = phi %"class.blink::Node"* [ %136, %132 ], [ %140, %137 ]
  %143 = load i64, i64* %55, align 8
  store i64 %143, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  %144 = icmp eq %"class.blink::Node"* %142, null
  br i1 %144, label %154, label %57

145:                                              ; preds = %107, %109
  %146 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %147 = icmp eq %"class.blink::Node"* %146, null
  %148 = icmp eq %"class.blink::Node"* %146, %2
  %149 = or i1 %147, %148
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %146, %"class.blink::Node"* %2) #13
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #13
  br label %155

154:                                              ; preds = %141, %45, %145, %150
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #13
  br label %155

155:                                              ; preds = %28, %154, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  br label %156

156:                                              ; preds = %155, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink40LastEditablePositionBeforePositionInRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  tail call void @_ZN5blink49LastEditablePositionBeforePositionInRootAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, %"class.blink::Node"* dereferenceable(64) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink49LastEditablePositionBeforePositionInRootAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_RKNS_4NodeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::PositionTemplate.2659", align 8
  %5 = alloca %"class.blink::PositionTemplate.2659", align 8
  %6 = alloca %"class.blink::PositionTemplate.2659", align 8
  %7 = alloca %"class.blink::PositionTemplate.2659", align 8
  %8 = bitcast %"class.blink::PositionTemplate.2659"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %2) #13
  %9 = call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.2659"* %1, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %4) #13
  %10 = icmp eq i16 %9, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %104

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %5, i64 0, i32 1
  %16 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* nonnull %5, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  %17 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = icmp eq %"class.blink::TreeScope"* %20, %22
  br i1 %23, label %45, label %24

24:                                               ; preds = %12
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %26 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %22, %"class.blink::Node"* %25) #13
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  br label %103

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %26) #13
  %32 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = inttoptr i64 %33 to i8*
  %39 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #13
  br label %40

40:                                               ; preds = %30, %37
  %41 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %6, i64 0, i32 1
  %42 = bitcast i32* %41 to i64*
  %43 = bitcast i32* %15 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br label %45

45:                                               ; preds = %12, %40
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %102, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i8*
  %50 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i64*
  %51 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i64*
  %52 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %7, i64 0, i32 1
  %53 = bitcast i32* %52 to i64*
  %54 = bitcast i32* %15 to i64*
  br label %55

55:                                               ; preds = %48, %89
  %56 = call zeroext i1 @_ZN5blink18IsEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5)
  br i1 %56, label %93, label %57

57:                                               ; preds = %55
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %59 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %58, %"class.blink::Node"* %2) #13
  br i1 %59, label %60, label %93

60:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #13
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %79, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 1
  %70 = bitcast %"class.blink::Node"* %69 to %"class.blink::Node"**
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %61) #13
  br i1 %74, label %75, label %79

75:                                               ; preds = %73
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %77

77:                                               ; preds = %75, %63, %68
  %78 = phi %"class.blink::Node"* [ %76, %75 ], [ %61, %63 ], [ %61, %68 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %78) #13
  br label %80

79:                                               ; preds = %60, %73
  call void @_ZN5blink42PreviousVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5) #13
  br label %80

80:                                               ; preds = %79, %77
  %81 = load i64, i64* %50, align 8
  store atomic i64 %81, i64* %51 monotonic, align 8
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  %84 = inttoptr i64 %81 to %"class.blink::Node"*
  br i1 %83, label %89, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %81 to i8*
  %87 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %86) #13
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %89

89:                                               ; preds = %80, %85
  %90 = phi %"class.blink::Node"* [ %84, %80 ], [ %88, %85 ]
  %91 = load i64, i64* %53, align 8
  store i64 %91, i64* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #13
  %92 = icmp eq %"class.blink::Node"* %90, null
  br i1 %92, label %102, label %55

93:                                               ; preds = %55, %57
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  %96 = icmp eq %"class.blink::Node"* %94, %2
  %97 = or i1 %95, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %94, %"class.blink::Node"* %2) #13
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = bitcast %"class.blink::PositionTemplate.2659"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #13
  br label %103

102:                                              ; preds = %89, %45, %93, %98
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5) #13
  br label %103

103:                                              ; preds = %28, %102, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  br label %104

104:                                              ; preds = %103, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink26PreviousGraphemeBoundaryOfERKNS_4NodeEi(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 12
  %6 = icmp eq i32 %5, 4
  %7 = bitcast %"class.blink::Node"* %0 to %"class.blink::Text"*
  %8 = select i1 %6, %"class.blink::Text"* %7, %"class.blink::Text"* null
  %9 = icmp sgt i32 %1, 1
  %10 = icmp ne %"class.blink::Text"* %8, null
  %11 = and i1 %9, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = add nsw i32 %1, -1
  br label %38

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %8, i64 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !10
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %8, i64 0, i32 0, i32 2
  %20 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %19) #13
  br label %23

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %8, i64 0, i32 0, i32 3
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi %"class.WTF::String"* [ %20, %18 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi i32 [ %30, %28 ], [ 0, %23 ]
  %33 = icmp ult i32 %32, %1
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = add nsw i32 %1, -1
  br label %38

36:                                               ; preds = %31
  %37 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_36BackwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %24, i32 %1)
  br label %38

38:                                               ; preds = %34, %36, %12
  %39 = phi i32 [ %13, %12 ], [ %35, %34 ], [ %37, %36 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22FindNextBoundaryOffsetINS_36BackwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.blink::BackwardGraphemeBoundaryStateMachine", align 4
  %4 = bitcast %"class.blink::BackwardGraphemeBoundaryStateMachine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -86, i64 20, i1 false)
  call void @_ZN5blink36BackwardGraphemeBoundaryStateMachineC1Ev(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nonnull %3) #13
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  br label %10

8:                                                ; preds = %36
  %9 = icmp sgt i32 %12, 0
  br i1 %9, label %10, label %45

10:                                               ; preds = %6, %8
  %11 = phi i32 [ %1, %6 ], [ %12, %8 ]
  %12 = add nsw i32 %11, -1
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %12
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %23, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %27 = zext i32 %12 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  br label %36

31:                                               ; preds = %19
  %32 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %33 = zext i32 %12 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  br label %36

36:                                               ; preds = %10, %15, %25, %31
  %37 = phi i16 [ 0, %15 ], [ 0, %10 ], [ %30, %25 ], [ %35, %31 ]
  %38 = call i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nonnull %3, i16 zeroext %37) #13
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %8, label %40

40:                                               ; preds = %36, %2
  %41 = phi i32 [ 0, %2 ], [ %38, %36 ]
  %42 = icmp eq i32 %1, 0
  %43 = icmp eq i32 %41, 1
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %8, %40
  %46 = call i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine22TellEndOfPrecedingTextEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nonnull %3) #13
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i32 [ %46, %45 ], [ %41, %40 ]
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %94, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi i32 [ %56, %54 ], [ 0, %50 ]
  %59 = icmp sgt i32 %58, %1
  br i1 %59, label %60, label %94

60:                                               ; preds = %57, %92
  %61 = phi %"class.WTF::StringImpl"* [ %93, %92 ], [ %52, %57 ]
  %62 = phi i32 [ %89, %92 ], [ %1, %57 ]
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp ugt i32 %66, %62
  br i1 %67, label %68, label %85

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  br i1 %72, label %80, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::StringImpl"* %73 to i8*
  %76 = zext i32 %62 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  br label %85

80:                                               ; preds = %68
  %81 = bitcast %"class.WTF::StringImpl"* %73 to i16*
  %82 = zext i32 %62 to i64
  %83 = getelementptr inbounds i16, i16* %81, i64 %82
  %84 = load i16, i16* %83, align 2
  br label %85

85:                                               ; preds = %60, %64, %74, %80
  %86 = phi i16 [ 0, %64 ], [ 0, %60 ], [ %79, %74 ], [ %84, %80 ]
  %87 = call i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nonnull %3, i16 zeroext %86) #13
  %88 = icmp eq i32 %87, 1
  %89 = add nsw i32 %62, 1
  %90 = icmp slt i32 %89, %58
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  br label %60

94:                                               ; preds = %85, %57, %47
  %95 = call i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nonnull %3) #13
  %96 = add nsw i32 %95, %1
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #13
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22NextGraphemeBoundaryOfERKNS_4NodeEi(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 12
  %6 = icmp ne i32 %5, 4
  %7 = icmp eq %"class.blink::Node"* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = add nsw i32 %1, 1
  br label %39

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %13 = bitcast %"class.blink::Node"* %12 to i8*
  %14 = load i8, i8* %13, align 8, !range !10
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %18 = bitcast %"class.blink::TraceWrapperV8Reference"* %17 to %"class.blink::ParkableString"*
  %19 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %18) #13
  br label %23

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 1
  %22 = bitcast i32* %21 to %"class.WTF::String"*
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi %"class.WTF::String"* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  br label %32

32:                                               ; preds = %23, %28
  %33 = phi i32 [ %31, %28 ], [ -1, %23 ]
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = add nsw i32 %1, 1
  br label %39

37:                                               ; preds = %32
  %38 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_35ForwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %24, i32 %1)
  br label %39

39:                                               ; preds = %35, %37, %9
  %40 = phi i32 [ %10, %9 ], [ %36, %35 ], [ %38, %37 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22FindNextBoundaryOffsetINS_35ForwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.blink::ForwardGraphemeBoundaryStateMachine", align 4
  %4 = bitcast %"class.blink::ForwardGraphemeBoundaryStateMachine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -86, i64 20, i1 false)
  call void @_ZN5blink35ForwardGraphemeBoundaryStateMachineC1Ev(%"class.blink::ForwardGraphemeBoundaryStateMachine"* nonnull %3) #13
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  br label %10

8:                                                ; preds = %36
  %9 = icmp sgt i32 %12, 0
  br i1 %9, label %10, label %45

10:                                               ; preds = %6, %8
  %11 = phi i32 [ %1, %6 ], [ %12, %8 ]
  %12 = add nsw i32 %11, -1
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %12
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %23, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %27 = zext i32 %12 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  br label %36

31:                                               ; preds = %19
  %32 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %33 = zext i32 %12 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  br label %36

36:                                               ; preds = %10, %15, %25, %31
  %37 = phi i16 [ 0, %15 ], [ 0, %10 ], [ %30, %25 ], [ %35, %31 ]
  %38 = call i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::ForwardGraphemeBoundaryStateMachine"* nonnull %3, i16 zeroext %37) #13
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %8, label %40

40:                                               ; preds = %36, %2
  %41 = phi i32 [ 0, %2 ], [ %38, %36 ]
  %42 = icmp eq i32 %1, 0
  %43 = icmp eq i32 %41, 1
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %8, %40
  %46 = call i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine22TellEndOfPrecedingTextEv(%"class.blink::ForwardGraphemeBoundaryStateMachine"* nonnull %3) #13
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i32 [ %46, %45 ], [ %41, %40 ]
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %94, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi i32 [ %56, %54 ], [ 0, %50 ]
  %59 = icmp sgt i32 %58, %1
  br i1 %59, label %60, label %94

60:                                               ; preds = %57, %92
  %61 = phi %"class.WTF::StringImpl"* [ %93, %92 ], [ %52, %57 ]
  %62 = phi i32 [ %89, %92 ], [ %1, %57 ]
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp ugt i32 %66, %62
  br i1 %67, label %68, label %85

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  br i1 %72, label %80, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::StringImpl"* %73 to i8*
  %76 = zext i32 %62 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  br label %85

80:                                               ; preds = %68
  %81 = bitcast %"class.WTF::StringImpl"* %73 to i16*
  %82 = zext i32 %62 to i64
  %83 = getelementptr inbounds i16, i16* %81, i64 %82
  %84 = load i16, i16* %83, align 2
  br label %85

85:                                               ; preds = %60, %64, %74, %80
  %86 = phi i16 [ 0, %64 ], [ 0, %60 ], [ %79, %74 ], [ %84, %80 ]
  %87 = call i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::ForwardGraphemeBoundaryStateMachine"* nonnull %3, i16 zeroext %86) #13
  %88 = icmp eq i32 %87, 1
  %89 = add nsw i32 %62, 1
  %90 = icmp slt i32 %89, %58
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  br label %60

94:                                               ; preds = %85, %57, %47
  %95 = call i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::ForwardGraphemeBoundaryStateMachine"* nonnull %3) #13
  %96 = add nsw i32 %95, %1
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #13
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PreviousPositionOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #0 {
  tail call void @_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %110

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* %1) #13
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %100

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %5)
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  br label %110

14:                                               ; preds = %11
  %15 = add nsw i32 %9, -1
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %22 = bitcast %"class.blink::Node"* %21 to %"class.blink::Node"**
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  %25 = icmp ne i32 %15, 0
  %26 = xor i1 %24, true
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %41

28:                                               ; preds = %20, %28
  %29 = phi i1 [ %37, %28 ], [ %24, %20 ]
  %30 = phi %"class.blink::Node"* [ %36, %28 ], [ %23, %20 ]
  %31 = phi i32 [ %34, %28 ], [ %15, %20 ]
  %32 = xor i1 %29, true
  %33 = zext i1 %32 to i32
  %34 = sub nuw i32 %31, %33
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  %38 = icmp ne i32 %34, 0
  %39 = xor i1 %37, true
  %40 = and i1 %38, %39
  br i1 %40, label %28, label %41

41:                                               ; preds = %28, %20
  %42 = phi %"class.blink::Node"* [ %23, %20 ], [ %36, %28 ]
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %42) #13
  br label %110

45:                                               ; preds = %14, %41
  switch i32 %2, label %100 [
    i32 0, label %46
    i32 1, label %47
    i32 2, label %69
  ]

46:                                               ; preds = %45
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %5, i32 %15) #13
  br label %110

47:                                               ; preds = %45
  %48 = icmp slt i32 %9, 2
  br i1 %48, label %67, label %49

49:                                               ; preds = %47
  %50 = and i32 %17, 12
  %51 = icmp eq i32 %50, 4
  br i1 %51, label %52, label %67

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %54 = bitcast %"class.blink::Node"* %53 to i8*
  %55 = load i8, i8* %54, align 8, !range !10
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.blink::ParkableString"*
  %60 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %59) #13
  br label %64

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %63 = bitcast i32* %62 to %"class.WTF::String"*
  br label %64

64:                                               ; preds = %61, %57
  %65 = phi %"class.WTF::String"* [ %60, %57 ], [ %63, %61 ]
  %66 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_21BackspaceStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %65, i32 %9) #13
  br label %67

67:                                               ; preds = %49, %47, %64
  %68 = phi i32 [ 0, %47 ], [ %66, %64 ], [ %15, %49 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %5, i32 %68) #13
  br label %110

69:                                               ; preds = %45
  %70 = and i32 %17, 12
  %71 = icmp eq i32 %70, 4
  %72 = bitcast %"class.blink::Node"* %5 to %"class.blink::Text"*
  %73 = select i1 %71, %"class.blink::Text"* %72, %"class.blink::Text"* null
  %74 = icmp sgt i32 %9, 1
  %75 = and i1 %74, %71
  br i1 %75, label %76, label %98

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %73, i64 0, i32 0, i32 1
  %78 = load i8, i8* %77, align 8, !range !10
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %73, i64 0, i32 0, i32 2
  %82 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %81) #13
  br label %85

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %73, i64 0, i32 0, i32 3
  br label %85

85:                                               ; preds = %83, %80
  %86 = phi %"class.WTF::String"* [ %82, %80 ], [ %84, %83 ]
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %90, %85
  %94 = phi i32 [ %92, %90 ], [ 0, %85 ]
  %95 = icmp ult i32 %94, %9
  br i1 %95, label %98, label %96

96:                                               ; preds = %93
  %97 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_36BackwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %86, i32 %9) #13
  br label %98

98:                                               ; preds = %93, %69, %96
  %99 = phi i32 [ %97, %96 ], [ %15, %69 ], [ %15, %93 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %5, i32 %99) #13
  br label %110

100:                                              ; preds = %45, %8
  %101 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %5) #13
  %102 = icmp eq %"class.blink::ContainerNode"* %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %101, i64 0, i32 0
  %105 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %104)
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %104) #13
  br label %110

107:                                              ; preds = %103
  %108 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %5) #13
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* %104, i32 %108) #13
  br label %110

109:                                              ; preds = %100
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %110

110:                                              ; preds = %13, %46, %67, %98, %109, %44, %106, %107, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PreviousPositionOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionMoveTypeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #0 {
  tail call void @_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  br label %88

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate.2659"* %1) #13
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %78

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %5)
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  br label %88

14:                                               ; preds = %11
  %15 = add nsw i32 %9, -1
  %16 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* nonnull dereferenceable(64) %5, i32 %15) #13
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %16) #13
  br label %88

19:                                               ; preds = %14
  switch i32 %2, label %78 [
    i32 0, label %20
    i32 1, label %21
    i32 2, label %45
  ]

20:                                               ; preds = %19
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::Node"* nonnull %5, i32 %15) #13
  br label %88

21:                                               ; preds = %19
  %22 = icmp slt i32 %9, 2
  br i1 %22, label %43, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 12
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %28, label %43

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %30 = bitcast %"class.blink::Node"* %29 to i8*
  %31 = load i8, i8* %30, align 8, !range !10
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %35 = bitcast %"class.blink::TraceWrapperV8Reference"* %34 to %"class.blink::ParkableString"*
  %36 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %35) #13
  br label %40

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %39 = bitcast i32* %38 to %"class.WTF::String"*
  br label %40

40:                                               ; preds = %37, %33
  %41 = phi %"class.WTF::String"* [ %36, %33 ], [ %39, %37 ]
  %42 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_21BackspaceStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %41, i32 %9) #13
  br label %43

43:                                               ; preds = %23, %21, %40
  %44 = phi i32 [ 0, %21 ], [ %42, %40 ], [ %15, %23 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::Node"* nonnull %5, i32 %44) #13
  br label %88

45:                                               ; preds = %19
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 12
  %49 = icmp eq i32 %48, 4
  %50 = bitcast %"class.blink::Node"* %5 to %"class.blink::Text"*
  %51 = select i1 %49, %"class.blink::Text"* %50, %"class.blink::Text"* null
  %52 = icmp sgt i32 %9, 1
  %53 = and i1 %52, %49
  br i1 %53, label %54, label %76

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %51, i64 0, i32 0, i32 1
  %56 = load i8, i8* %55, align 8, !range !10
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %51, i64 0, i32 0, i32 2
  %60 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %59) #13
  br label %63

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %51, i64 0, i32 0, i32 3
  br label %63

63:                                               ; preds = %61, %58
  %64 = phi %"class.WTF::String"* [ %60, %58 ], [ %62, %61 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %63
  %72 = phi i32 [ %70, %68 ], [ 0, %63 ]
  %73 = icmp ult i32 %72, %9
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_36BackwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %64, i32 %9) #13
  br label %76

76:                                               ; preds = %71, %45, %74
  %77 = phi i32 [ %75, %74 ], [ %15, %45 ], [ %15, %71 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::Node"* nonnull %5, i32 %77) #13
  br label %88

78:                                               ; preds = %19, %8
  %79 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  %80 = icmp eq %"class.blink::ContainerNode"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %79, i64 0, i32 0
  %83 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %82)
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* dereferenceable(64) %82) #13
  br label %88

85:                                               ; preds = %81
  %86 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %5) #13
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::Node"* %82, i32 %86) #13
  br label %88

87:                                               ; preds = %78
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  br label %88

88:                                               ; preds = %13, %20, %43, %76, %87, %18, %84, %85, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NextPositionOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #0 {
  tail call void @_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %97

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* %1) #13
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Node"**
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  %19 = icmp ne i32 %9, 0
  %20 = xor i1 %18, true
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %35

22:                                               ; preds = %14, %22
  %23 = phi i1 [ %31, %22 ], [ %18, %14 ]
  %24 = phi %"class.blink::Node"* [ %30, %22 ], [ %17, %14 ]
  %25 = phi i32 [ %28, %22 ], [ %9, %14 ]
  %26 = xor i1 %23, true
  %27 = zext i1 %26 to i32
  %28 = sub nuw i32 %25, %27
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  %32 = icmp ne i32 %28, 0
  %33 = xor i1 %31, true
  %34 = and i1 %32, %33
  br i1 %34, label %22, label %35

35:                                               ; preds = %22, %14
  %36 = phi %"class.blink::Node"* [ %17, %14 ], [ %30, %22 ]
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %36) #13
  br label %97

39:                                               ; preds = %35
  br i1 %13, label %45, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %42 = bitcast %"class.blink::Node"* %41 to %"class.blink::Node"**
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %45, label %89

45:                                               ; preds = %8, %40, %39
  %46 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* nonnull %5) #13
  %47 = icmp slt i32 %9, %46
  br i1 %47, label %48, label %89

48:                                               ; preds = %45
  switch i32 %2, label %89 [
    i32 0, label %49
    i32 1, label %51
    i32 2, label %53
  ]

49:                                               ; preds = %48
  %50 = add nsw i32 %9, 1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull %5, i32 %50) #13
  br label %97

51:                                               ; preds = %48
  %52 = add nsw i32 %9, 1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull %5, i32 %52) #13
  br label %97

53:                                               ; preds = %48
  %54 = load i32, i32* %10, align 8
  %55 = and i32 %54, 12
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = add nsw i32 %9, 1
  br label %87

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %61 = bitcast %"class.blink::Node"* %60 to i8*
  %62 = load i8, i8* %61, align 8, !range !10
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %66 = bitcast %"class.blink::TraceWrapperV8Reference"* %65 to %"class.blink::ParkableString"*
  %67 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %66) #13
  br label %71

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %70 = bitcast i32* %69 to %"class.WTF::String"*
  br label %71

71:                                               ; preds = %68, %64
  %72 = phi %"class.WTF::String"* [ %67, %64 ], [ %70, %68 ]
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  br label %80

80:                                               ; preds = %76, %71
  %81 = phi i32 [ %79, %76 ], [ -1, %71 ]
  %82 = icmp sgt i32 %81, %9
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = add nsw i32 %9, 1
  br label %87

85:                                               ; preds = %80
  %86 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_35ForwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %72, i32 %9) #13
  br label %87

87:                                               ; preds = %57, %83, %85
  %88 = phi i32 [ %58, %57 ], [ %84, %83 ], [ %86, %85 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull %5, i32 %88) #13
  br label %97

89:                                               ; preds = %40, %48, %45
  %90 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %5) #13
  %91 = icmp eq %"class.blink::ContainerNode"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %90, i64 0, i32 0
  %94 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %5) #13
  %95 = add i32 %94, 1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* %93, i32 %95) #13
  br label %97

96:                                               ; preds = %89
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %97

97:                                               ; preds = %49, %51, %87, %96, %38, %92, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NextPositionOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionMoveTypeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #0 {
  tail call void @_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate.2659"* noalias sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  br label %69

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate.2659"* %1) #13
  %10 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* nonnull dereferenceable(64) %5, i32 %9) #13
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %10) #13
  br label %69

13:                                               ; preds = %8
  %14 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %5, i32 0) #13
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %61

16:                                               ; preds = %13
  %17 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* nonnull %5) #13
  %18 = icmp slt i32 %9, %17
  br i1 %18, label %19, label %61

19:                                               ; preds = %16
  switch i32 %2, label %61 [
    i32 0, label %20
    i32 1, label %22
    i32 2, label %24
  ]

20:                                               ; preds = %19
  %21 = add nsw i32 %9, 1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* nonnull %5, i32 %21) #13
  br label %69

22:                                               ; preds = %19
  %23 = add nsw i32 %9, 1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* nonnull %5, i32 %23) #13
  br label %69

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 12
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = add nsw i32 %9, 1
  br label %59

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %33 = bitcast %"class.blink::Node"* %32 to i8*
  %34 = load i8, i8* %33, align 8, !range !10
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.blink::TraceWrapperV8Reference"* %37 to %"class.blink::ParkableString"*
  %39 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %38) #13
  br label %43

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %42 = bitcast i32* %41 to %"class.WTF::String"*
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi %"class.WTF::String"* [ %39, %36 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, -1
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ -1, %43 ]
  %54 = icmp sgt i32 %53, %9
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = add nsw i32 %9, 1
  br label %59

57:                                               ; preds = %52
  %58 = tail call i32 @_ZN5blink22FindNextBoundaryOffsetINS_35ForwardGraphemeBoundaryStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8) %44, i32 %9) #13
  br label %59

59:                                               ; preds = %29, %55, %57
  %60 = phi i32 [ %30, %29 ], [ %56, %55 ], [ %58, %57 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* nonnull %5, i32 %60) #13
  br label %69

61:                                               ; preds = %13, %19, %16
  %62 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  %63 = icmp eq %"class.blink::ContainerNode"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %62, i64 0, i32 0
  %66 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  %67 = add i32 %66, 1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* sret %0, %"class.blink::Node"* %65, i32 %67) #13
  br label %69

68:                                               ; preds = %61
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  br label %69

69:                                               ; preds = %20, %22, %59, %68, %12, %64, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"* readonly) #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %56, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %56, label %21

21:                                               ; preds = %15
  br i1 %7, label %26, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %24 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.blink::NodeRenderingData"** [ %25, %22 ], [ %27, %26 ]
  %30 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %30, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 134217728
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %38, label %56

38:                                               ; preds = %28
  br i1 %7, label %43, label %39

39:                                               ; preds = %38
  %40 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %41 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %41, i64 0, i32 1, i32 0, i32 0
  br label %45

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi %"class.blink::NodeRenderingData"** [ %42, %39 ], [ %44, %43 ]
  %47 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %47, i64 0, i32 1
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = bitcast %"class.blink::LayoutObject"* %49 to i1 (%"class.blink::LayoutObject"*, i32)***
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %49, i32 43) #13
  %55 = xor i1 %54, true
  br label %56

56:                                               ; preds = %28, %15, %1, %45
  %57 = phi i1 [ false, %28 ], [ false, %15 ], [ false, %1 ], [ %55, %45 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = icmp eq %"class.blink::Node"* %0, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* nonnull dereferenceable(64) %0) #13
  %7 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE, i32 %1) #13
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  %14 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  %15 = select i1 %13, %"class.blink::Element"* %14, %"class.blink::Element"* null
  br label %16

16:                                               ; preds = %5, %9
  %17 = phi %"class.blink::Element"* [ %15, %9 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  br label %18

18:                                               ; preds = %2, %16
  %19 = phi %"class.blink::Element"* [ %17, %16 ], [ null, %2 ]
  ret %"class.blink::Element"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink14EnclosingBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #0 {
  %3 = tail call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16) %0, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE, i32 %1) #13
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.blink::Node"* %3 to %"class.blink::Element"*
  %11 = select i1 %9, %"class.blink::Element"* %10, %"class.blink::Element"* null
  br label %12

12:                                               ; preds = %2, %5
  %13 = phi %"class.blink::Element"* [ %11, %5 ], [ null, %2 ]
  ret %"class.blink::Element"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink14EnclosingBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #0 {
  %3 = tail call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* dereferenceable(16) %0, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE, i32 %1) #13
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.blink::Node"* %3 to %"class.blink::Element"*
  %11 = select i1 %9, %"class.blink::Element"* %10, %"class.blink::Element"* null
  br label %12

12:                                               ; preds = %2, %5
  %13 = phi %"class.blink::Element"* [ %11, %5 ], [ null, %2 ]
  ret %"class.blink::Element"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink25EnclosingBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %8 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  %11 = select i1 %5, %"class.blink::NodeRenderingData"** %10, %"class.blink::NodeRenderingData"** %9
  %12 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %12, i64 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = and i32 %3, 12
  %16 = icmp eq i32 %15, 0
  %17 = icmp ne %"class.blink::LayoutObject"* %14, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %27

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*)***
  %21 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %21, i64 24
  %23 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* nonnull %14) #13
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  ret %"class.blink::Element"* %26

27:                                               ; preds = %1, %19
  %28 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #13
  %29 = icmp eq %"class.blink::ContainerNode"* %28, null
  br i1 %29, label %80, label %30

30:                                               ; preds = %27
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %30, %75
  %34 = phi %"class.blink::ContainerNode"* [ %28, %30 ], [ %76, %75 ]
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 6, i32 0, i32 0
  %41 = bitcast %"class.blink::NodeData"** %40 to %"class.blink::NodeRareData"**
  %42 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.blink::NodeData"** %40 to %"class.blink::NodeRenderingData"**
  %45 = select i1 %39, %"class.blink::NodeRenderingData"** %44, %"class.blink::NodeRenderingData"** %43
  %46 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %46, i64 0, i32 1
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = and i32 %37, 12
  %50 = icmp eq i32 %49, 0
  %51 = icmp ne %"class.blink::LayoutObject"* %48, null
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %61

53:                                               ; preds = %33
  %54 = bitcast %"class.blink::LayoutObject"* %48 to i1 (%"class.blink::LayoutObject"*)***
  %55 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, i64 24
  %57 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* nonnull %48) #13
  br i1 %58, label %78, label %59

59:                                               ; preds = %53
  %60 = load i32, i32* %36, align 8
  br label %61

61:                                               ; preds = %59, %33
  %62 = phi i32 [ %60, %59 ], [ %37, %33 ]
  %63 = and i32 %62, 48
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %61
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 2
  %68 = bitcast %"class.blink::Member.318"* %67 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %71, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %61, %65
  %76 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %35) #13
  %77 = icmp eq %"class.blink::ContainerNode"* %76, null
  br i1 %77, label %80, label %33

78:                                               ; preds = %65, %53
  %79 = bitcast %"class.blink::ContainerNode"* %34 to %"class.blink::Element"*
  br label %80

80:                                               ; preds = %75, %27, %78
  %81 = phi %"class.blink::Element"* [ %79, %78 ], [ null, %27 ], [ null, %75 ]
  ret %"class.blink::Element"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18IsBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %8 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  %11 = select i1 %5, %"class.blink::NodeRenderingData"** %10, %"class.blink::NodeRenderingData"** %9
  %12 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %12, i64 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = and i32 %3, 12
  %16 = icmp eq i32 %15, 0
  %17 = icmp ne %"class.blink::LayoutObject"* %14, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*)***
  %21 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %21, i64 24
  %23 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* nonnull %14) #13
  br label %25

25:                                               ; preds = %19, %1
  %26 = phi i1 [ false, %1 ], [ %24, %19 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink27DirectionOfEnclosingBlockOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::Node"* dereferenceable(64) %4) #13
  %5 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE, i32 1) #13
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  br label %39

13:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  %14 = and i32 %9, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 6, i32 0, i32 0
  br i1 %15, label %21, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %19 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %19, i64 0, i32 1, i32 0, i32 0
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi %"class.blink::NodeRenderingData"** [ %20, %17 ], [ %22, %21 ]
  %25 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %25, i64 0, i32 1
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 5, i32 0
  %31 = bitcast %"class.blink::ComputedStyle"** %30 to %"class.blink::ComputedStyleBase"**
  %32 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %32, i64 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = lshr i160 %35, 115
  %37 = trunc i160 %36 to i8
  %38 = and i8 %37, 1
  br label %39

39:                                               ; preds = %12, %23, %29
  %40 = phi i8 [ %38, %29 ], [ 0, %23 ], [ 0, %12 ]
  ret i8 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink27DirectionOfEnclosingBlockOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate.2659", align 8
  %3 = bitcast %"class.blink::PositionTemplate.2659"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2659"* %0) #13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* nonnull sret %2, %"class.blink::Node"* dereferenceable(64) %4) #13
  %5 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %2, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE, i32 1) #13
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  br label %39

13:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  %14 = and i32 %9, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 6, i32 0, i32 0
  br i1 %15, label %21, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %19 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %19, i64 0, i32 1, i32 0, i32 0
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi %"class.blink::NodeRenderingData"** [ %20, %17 ], [ %22, %21 ]
  %25 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %25, i64 0, i32 1
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 5, i32 0
  %31 = bitcast %"class.blink::ComputedStyle"** %30 to %"class.blink::ComputedStyleBase"**
  %32 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %32, i64 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = lshr i160 %35, 115
  %37 = trunc i160 %36 to i8
  %38 = and i8 %37, 1
  br label %39

39:                                               ; preds = %12, %23, %29
  %40 = phi i8 [ %38, %29 ], [ 0, %23 ], [ 0, %12 ]
  ret i8 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink18PrimaryDirectionOfERKNS_4NodeE(%"class.blink::Node"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %8 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  %11 = select i1 %5, %"class.blink::NodeRenderingData"** %10, %"class.blink::NodeRenderingData"** %9
  %12 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %12, i64 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %1, %33
  %17 = phi %"class.blink::LayoutObject"* [ %35, %33 ], [ %14, %1 ]
  %18 = bitcast %"class.blink::LayoutObject"* %17 to i1 (%"class.blink::LayoutObject"*)***
  %19 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %19, i64 24
  %21 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* nonnull %17) #13
  br i1 %22, label %23, label %33

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 5, i32 0
  %25 = bitcast %"class.blink::ComputedStyle"** %24 to %"class.blink::ComputedStyleBase"**
  %26 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %26, i64 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = lshr i160 %29, 115
  %31 = trunc i160 %30 to i8
  %32 = and i8 %31, 1
  br label %37

33:                                               ; preds = %16
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 7
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %37, label %16

37:                                               ; preds = %33, %1, %23
  %38 = phi i8 [ %32, %23 ], [ 0, %1 ], [ 0, %33 ]
  ret i8 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink30StringWithRebalancedWhitespaceERKN3WTF6StringEbb(%"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %3 ]
  %13 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %16 = bitcast %union.anon.2698* %15 to i8*
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %19, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %4, i32 %12) #13
  %20 = icmp eq i32 %12, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %11
  %22 = xor i1 %1, true
  %23 = xor i1 %2, true
  %24 = zext i32 %12 to i64
  br label %43

25:                                               ; preds = %110, %11
  %26 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #13
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #13
  br label %42

42:                                               ; preds = %25, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #13
  ret %"class.WTF::StringImpl"* %26

43:                                               ; preds = %110, %21
  %44 = phi i64 [ 0, %21 ], [ %112, %110 ]
  %45 = phi i16 [ 0, %21 ], [ %111, %110 ]
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %110, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %44, %51
  br i1 %52, label %53, label %110

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 1
  br i1 %57, label %64, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %44
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  br label %68

64:                                               ; preds = %53
  %65 = bitcast %"class.WTF::StringImpl"* %58 to i16*
  %66 = getelementptr inbounds i16, i16* %65, i64 %44
  %67 = load i16, i16* %66, align 2
  br label %68

68:                                               ; preds = %64, %59
  %69 = phi i16 [ %63, %59 ], [ %67, %64 ]
  switch i16 %69, label %70 [
    i16 160, label %83
    i16 32, label %83
    i16 10, label %83
    i16 9, label %83
  ]

70:                                               ; preds = %68
  %71 = load atomic i32, i32* %54 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 %44
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  br label %110

79:                                               ; preds = %70
  %80 = bitcast %"class.WTF::StringImpl"* %58 to i16*
  %81 = getelementptr inbounds i16, i16* %80, i64 %44
  %82 = load i16, i16* %81, align 2
  br label %110

83:                                               ; preds = %68, %68, %68, %68
  %84 = icmp ne i64 %44, 0
  %85 = or i1 %84, %22
  br i1 %85, label %86, label %110

86:                                               ; preds = %83
  %87 = add nuw nsw i64 %44, 1
  %88 = icmp ne i64 %87, %51
  %89 = or i1 %88, %23
  br i1 %89, label %90, label %110

90:                                               ; preds = %86
  switch i16 %45, label %92 [
    i16 32, label %110
    i16 160, label %91
  ]

91:                                               ; preds = %90
  br label %110

92:                                               ; preds = %90
  %93 = icmp ult i64 %87, %51
  br i1 %93, label %94, label %110

94:                                               ; preds = %92
  %95 = load atomic i32, i32* %54 monotonic, align 4
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 %87
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  br label %107

103:                                              ; preds = %94
  %104 = bitcast %"class.WTF::StringImpl"* %58 to i16*
  %105 = getelementptr inbounds i16, i16* %104, i64 %87
  %106 = load i16, i16* %105, align 2
  br label %107

107:                                              ; preds = %103, %98
  %108 = phi i16 [ %102, %98 ], [ %106, %103 ]
  switch i16 %108, label %110 [
    i16 160, label %109
    i16 32, label %109
    i16 10, label %109
    i16 9, label %109
  ]

109:                                              ; preds = %107, %107, %107, %107
  br label %110

110:                                              ; preds = %43, %48, %74, %79, %83, %86, %90, %91, %92, %107, %109
  %111 = phi i16 [ 32, %91 ], [ 160, %83 ], [ 160, %86 ], [ 160, %90 ], [ %78, %74 ], [ %82, %79 ], [ 160, %109 ], [ 32, %107 ], [ 32, %92 ], [ 0, %43 ], [ 0, %48 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %4, i16 zeroext %111)
  %112 = add nuw nsw i64 %44, 1
  %113 = icmp eq i64 %112, %24
  br i1 %113, label %25, label %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !10
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !10
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2699"* %17, i8* nonnull dereferenceable(1) %3) #13
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !10
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %42
  %50 = bitcast %union.anon.2698* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.2698* %43 to %"class.WTF::Vector.2703"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2703"* %57, i16* nonnull dereferenceable(2) %4) #13
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12RepeatStringERKN3WTF6StringEj(%"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %8 = bitcast %union.anon.2698* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %2, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %2 ]
  %20 = mul i32 %19, %1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %3, i32 %20) #13
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  %27 = bitcast %"class.WTF::StringView"* %4 to i64*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %47

29:                                               ; preds = %57, %18
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %29, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #13
  ret %"class.WTF::StringImpl"* %30

47:                                               ; preds = %57, %22
  %48 = phi i32 [ 0, %22 ], [ %59, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  store i8* null, i8** %25, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %52, i64* %27, align 8
  br label %57

53:                                               ; preds = %47
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %24, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %26, align 8
  br label %57

57:                                               ; preds = %51, %53
  %58 = phi i32 [ %55, %53 ], [ 0, %51 ]
  store i32 %58, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  %59 = add nuw i32 %48, 1
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %29, label %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !10
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink22TableElementJustBeforeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* dereferenceable(16) %7) #13
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %48, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp ne %"class.blink::LayoutObject"* %26, null
  %28 = and i32 %12, 48
  %29 = icmp eq i32 %28, 0
  %30 = and i1 %29, %27
  br i1 %30, label %31, label %48

31:                                               ; preds = %22
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %36 = bitcast %"class.blink::Member.318"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %31
  %44 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate"* nonnull %2) #13
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = bitcast %"class.blink::PositionTemplate"* %2 to %"class.blink::Element"**
  %47 = load %"class.blink::Element"*, %"class.blink::Element"** %46, align 8
  br label %48

48:                                               ; preds = %1, %22, %31, %43, %45
  %49 = phi %"class.blink::Element"* [ %47, %45 ], [ null, %43 ], [ null, %31 ], [ null, %22 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret %"class.blink::Element"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink22TableElementJustBeforeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::VisiblePositionTemplate.2708"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate.2659", align 8
  %3 = alloca %"class.blink::PositionTemplate.2659", align 8
  %4 = bitcast %"class.blink::PositionTemplate.2659"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::PositionTemplate.2659"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.blink::VisiblePositionTemplate.2708", %"class.blink::VisiblePositionTemplate.2708"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"* nonnull %3, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %7) #13
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %2, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %3, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %48, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp ne %"class.blink::LayoutObject"* %26, null
  %28 = and i32 %12, 48
  %29 = icmp eq i32 %28, 0
  %30 = and i1 %29, %27
  br i1 %30, label %31, label %48

31:                                               ; preds = %22
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %36 = bitcast %"class.blink::Member.318"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %31
  %44 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate.2659"* nonnull %2) #13
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = bitcast %"class.blink::PositionTemplate.2659"* %2 to %"class.blink::Element"**
  %47 = load %"class.blink::Element"*, %"class.blink::Element"** %46, align 8
  br label %48

48:                                               ; preds = %1, %22, %31, %43, %45
  %49 = phi %"class.blink::Element"* [ %47, %45 ], [ null, %43 ], [ null, %31 ], [ null, %22 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret %"class.blink::Element"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink18EnclosingTableCellERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16) %0, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink11IsTableCellEPKNS_4NodeE, i32 1)
  %3 = bitcast %"class.blink::Node"* %2 to %"class.blink::Element"*
  ret %"class.blink::Element"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)* nocapture, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %109, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %7
  %10 = tail call %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #13
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %13 = icmp eq %"class.blink::Node"* %11, null
  br i1 %13, label %109, label %14

14:                                               ; preds = %9, %7
  %15 = phi %"class.blink::Node"* [ %12, %9 ], [ null, %7 ]
  %16 = phi %"class.blink::ContainerNode"* [ %10, %9 ], [ null, %7 ]
  %17 = phi %"class.blink::Node"* [ %11, %9 ], [ %5, %7 ]
  %18 = icmp eq %"class.blink::ContainerNode"* %16, null
  br label %19

19:                                               ; preds = %105, %14
  %20 = phi %"class.blink::Node"* [ %17, %14 ], [ %107, %105 ]
  br i1 %18, label %101, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 5, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -2
  %29 = icmp ult i32 %28, 18
  br i1 %29, label %30, label %105

30:                                               ; preds = %21
  %31 = bitcast %"class.blink::Node"* %20 to i8 (%"class.blink::Node"*)***
  %32 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %31, align 8
  %33 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %32, i64 34
  %34 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %33, align 8
  %35 = tail call zeroext i8 %34(%"class.blink::Node"* %20) #13
  %36 = icmp ne i8 %35, 0
  %37 = icmp eq %"class.blink::Node"* %20, null
  %38 = or i1 %37, %36
  br i1 %38, label %105, label %39

39:                                               ; preds = %30, %97
  %40 = phi %"class.blink::Node"* [ %99, %97 ], [ %20, %30 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 48
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 0, i32 0
  %51 = icmp eq %"class.blink::Node"* %50, %40
  br i1 %51, label %52, label %97

52:                                               ; preds = %45, %39
  %53 = and i32 %42, 12
  %54 = icmp eq i32 %53, 0
  %55 = and i32 %42, 1
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 6, i32 0, i32 0
  br i1 %54, label %58, label %69

58:                                               ; preds = %52
  br i1 %56, label %65, label %59

59:                                               ; preds = %58
  %60 = bitcast %"class.blink::NodeData"** %57 to %"class.blink::NodeRareData"**
  %61 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %61, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %63, i64 0, i32 2, i32 0
  br label %84

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::NodeData"** %57 to %"class.blink::NodeRenderingData"**
  %67 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %67, i64 0, i32 2, i32 0
  br label %84

69:                                               ; preds = %52
  br i1 %56, label %74, label %70

70:                                               ; preds = %69
  %71 = bitcast %"class.blink::NodeData"** %57 to %"class.blink::NodeRareData"**
  %72 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %72, i64 0, i32 1, i32 0, i32 0
  br label %76

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::NodeData"** %57 to %"class.blink::NodeRenderingData"**
  br label %76

76:                                               ; preds = %74, %70
  %77 = phi %"class.blink::NodeRenderingData"** [ %73, %70 ], [ %75, %74 ]
  %78 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %78, i64 0, i32 1
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %79, align 8
  %81 = icmp eq %"class.blink::LayoutObject"* %80, null
  br i1 %81, label %97, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 5, i32 0
  br label %84

84:                                               ; preds = %82, %65, %59
  %85 = phi %"class.blink::ComputedStyle"** [ %83, %82 ], [ %64, %59 ], [ %68, %65 ]
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  %87 = icmp eq %"class.blink::ComputedStyle"* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 1, i32 0, i32 0
  %90 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %90, i64 0, i32 23
  %92 = bitcast [5 x i8]* %91 to i40*
  %93 = load i40, i40* %92, align 8
  %94 = lshr i40 %93, 26
  %95 = trunc i40 %94 to i32
  %96 = and i32 %95, 3
  switch i32 %96, label %97 [
    i32 0, label %105
    i32 1, label %101
    i32 2, label %101
  ]

97:                                               ; preds = %88, %84, %76, %45
  %98 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %40) #13
  %99 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %98, i64 0, i32 0
  %100 = icmp eq %"class.blink::ContainerNode"* %98, null
  br i1 %100, label %105, label %39

101:                                              ; preds = %88, %88, %19
  %102 = tail call zeroext i1 %1(%"class.blink::Node"* nonnull %20) #13
  br i1 %102, label %109, label %103

103:                                              ; preds = %101
  %104 = icmp eq %"class.blink::Node"* %20, %15
  br i1 %104, label %109, label %105

105:                                              ; preds = %88, %97, %30, %103, %21
  %106 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %20) #13
  %107 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %106, i64 0, i32 0
  %108 = icmp eq %"class.blink::ContainerNode"* %106, null
  br i1 %108, label %109, label %19

109:                                              ; preds = %101, %103, %105, %3, %9
  %110 = phi %"class.blink::Node"* [ null, %3 ], [ null, %9 ], [ null, %103 ], [ %20, %101 ], [ null, %105 ]
  ret %"class.blink::Node"* %110
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11IsTableCellEPKNS_4NodeE(%"class.blink::Node"* readonly) #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::LayoutObject"* %17 to i1 (%"class.blink::LayoutObject"*, i32)***
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* nonnull %17, i32 46) #13
  br label %49

25:                                               ; preds = %13
  %26 = and i32 %3, 48
  %27 = icmp ne i32 %26, 0
  %28 = icmp eq %"class.blink::Node"* %0, null
  %29 = or i1 %28, %27
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %35 = bitcast %"class.blink::Member.318"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %30
  %43 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %44 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %38, %47
  br label %49

49:                                               ; preds = %42, %30, %25, %19
  %50 = phi i1 [ %24, %19 ], [ false, %25 ], [ true, %30 ], [ %48, %42 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink18EnclosingTableCellERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* dereferenceable(16) %0, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink11IsTableCellEPKNS_4NodeE, i32 1)
  %3 = bitcast %"class.blink::Node"* %2 to %"class.blink::Element"*
  ret %"class.blink::Element"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* dereferenceable(16), i1 (%"class.blink::Node"*)* nocapture, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.2659", %"class.blink::PositionTemplate.2659"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %111, label %8

8:                                                ; preds = %3
  %9 = icmp eq i32 %2, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %0) #13
  %12 = call %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %15 = icmp eq %"class.blink::Node"* %13, null
  br i1 %15, label %111, label %16

16:                                               ; preds = %10, %8
  %17 = phi %"class.blink::Node"* [ %14, %10 ], [ null, %8 ]
  %18 = phi %"class.blink::ContainerNode"* [ %12, %10 ], [ null, %8 ]
  %19 = phi %"class.blink::Node"* [ %13, %10 ], [ %6, %8 ]
  %20 = icmp eq %"class.blink::ContainerNode"* %18, null
  br label %21

21:                                               ; preds = %107, %16
  %22 = phi %"class.blink::Node"* [ %19, %16 ], [ %109, %107 ]
  br i1 %20, label %103, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 5, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, -2
  %31 = icmp ult i32 %30, 18
  br i1 %31, label %32, label %107

32:                                               ; preds = %23
  %33 = bitcast %"class.blink::Node"* %22 to i8 (%"class.blink::Node"*)***
  %34 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %33, align 8
  %35 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %34, i64 34
  %36 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %35, align 8
  %37 = call zeroext i8 %36(%"class.blink::Node"* %22) #13
  %38 = icmp ne i8 %37, 0
  %39 = icmp eq %"class.blink::Node"* %22, null
  %40 = or i1 %39, %38
  br i1 %40, label %107, label %41

41:                                               ; preds = %32, %99
  %42 = phi %"class.blink::Node"* [ %101, %99 ], [ %22, %32 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 48
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 0, i32 0
  %53 = icmp eq %"class.blink::Node"* %52, %42
  br i1 %53, label %54, label %99

54:                                               ; preds = %47, %41
  %55 = and i32 %44, 12
  %56 = icmp eq i32 %55, 0
  %57 = and i32 %44, 1
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 6, i32 0, i32 0
  br i1 %56, label %60, label %71

60:                                               ; preds = %54
  br i1 %58, label %67, label %61

61:                                               ; preds = %60
  %62 = bitcast %"class.blink::NodeData"** %59 to %"class.blink::NodeRareData"**
  %63 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %63, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %65, i64 0, i32 2, i32 0
  br label %86

67:                                               ; preds = %60
  %68 = bitcast %"class.blink::NodeData"** %59 to %"class.blink::NodeRenderingData"**
  %69 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %69, i64 0, i32 2, i32 0
  br label %86

71:                                               ; preds = %54
  br i1 %58, label %76, label %72

72:                                               ; preds = %71
  %73 = bitcast %"class.blink::NodeData"** %59 to %"class.blink::NodeRareData"**
  %74 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %74, i64 0, i32 1, i32 0, i32 0
  br label %78

76:                                               ; preds = %71
  %77 = bitcast %"class.blink::NodeData"** %59 to %"class.blink::NodeRenderingData"**
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi %"class.blink::NodeRenderingData"** [ %75, %72 ], [ %77, %76 ]
  %80 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %80, i64 0, i32 1
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %81, align 8
  %83 = icmp eq %"class.blink::LayoutObject"* %82, null
  br i1 %83, label %99, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 5, i32 0
  br label %86

86:                                               ; preds = %84, %67, %61
  %87 = phi %"class.blink::ComputedStyle"** [ %85, %84 ], [ %66, %61 ], [ %70, %67 ]
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %87, align 8
  %89 = icmp eq %"class.blink::ComputedStyle"* %88, null
  br i1 %89, label %99, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %92, i64 0, i32 23
  %94 = bitcast [5 x i8]* %93 to i40*
  %95 = load i40, i40* %94, align 8
  %96 = lshr i40 %95, 26
  %97 = trunc i40 %96 to i32
  %98 = and i32 %97, 3
  switch i32 %98, label %99 [
    i32 0, label %107
    i32 1, label %103
    i32 2, label %103
  ]

99:                                               ; preds = %90, %86, %78, %47
  %100 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %42) #13
  %101 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %100, i64 0, i32 0
  %102 = icmp eq %"class.blink::ContainerNode"* %100, null
  br i1 %102, label %107, label %41

103:                                              ; preds = %90, %90, %21
  %104 = call zeroext i1 %1(%"class.blink::Node"* nonnull %22) #13
  br i1 %104, label %111, label %105

105:                                              ; preds = %103
  %106 = icmp eq %"class.blink::Node"* %22, %17
  br i1 %106, label %111, label %107

107:                                              ; preds = %90, %99, %32, %105, %23
  %108 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %22) #13
  %109 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %108, i64 0, i32 0
  %110 = icmp eq %"class.blink::ContainerNode"* %108, null
  br i1 %110, label %111, label %21

111:                                              ; preds = %103, %105, %107, %3, %10
  %112 = phi %"class.blink::Node"* [ null, %3 ], [ null, %10 ], [ null, %105 ], [ %22, %103 ], [ null, %107 ]
  ret %"class.blink::Node"* %112
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink21TableElementJustAfterERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  %7 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %8 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* dereferenceable(16) %8) #13
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 6, i32 0, i32 0
  br i1 %15, label %21, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %19 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %19, i64 0, i32 1, i32 0, i32 0
  br label %23

21:                                               ; preds = %11
  %22 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi %"class.blink::NodeRenderingData"** [ %20, %17 ], [ %22, %21 ]
  %25 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %25, i64 0, i32 1
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp ne %"class.blink::LayoutObject"* %27, null
  %29 = and i32 %13, 48
  %30 = icmp eq i32 %29, 0
  %31 = and i1 %30, %28
  br i1 %31, label %32, label %49

32:                                               ; preds = %23
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %37 = bitcast %"class.blink::Member.318"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE29AtFirstEditingPositionForNodeEv(%"class.blink::PositionTemplate"* nonnull %2) #13
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = bitcast %"class.blink::PositionTemplate"* %2 to %"class.blink::Element"**
  %48 = load %"class.blink::Element"*, %"class.blink::Element"** %47, align 8
  br label %49

49:                                               ; preds = %1, %23, %32, %44, %46
  %50 = phi %"class.blink::Element"* [ %48, %46 ], [ null, %44 ], [ null, %32 ], [ null, %23 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret %"class.blink::Element"* %50
}

declare void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE29AtFirstEditingPositionForNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18PositionBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %11 = bitcast %"class.blink::Node"* %10 to %"class.blink::Node"**
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %1) #13
  br label %16

15:                                               ; preds = %9, %4, %2
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %1) #13
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17PositionAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %11 = bitcast %"class.blink::Node"* %10 to %"class.blink::Node"**
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %1) #13
  br label %16

15:                                               ; preds = %9, %4, %2
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %1) #13
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %16, %32
  br label %34

34:                                               ; preds = %3, %27, %1, %8, %20
  %35 = phi i1 [ false, %1 ], [ true, %20 ], [ true, %8 ], [ %33, %27 ], [ false, %3 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10IsListItemEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %43, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %43, label %21

21:                                               ; preds = %15
  br i1 %7, label %26, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %24 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.blink::NodeRenderingData"** [ %25, %22 ], [ %27, %26 ]
  %30 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %30, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = bitcast %"class.blink::LayoutObject"* %32 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %32, i32 14) #13
  br i1 %37, label %43, label %38

38:                                               ; preds = %28
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %32, i32 29) #13
  br label %43

43:                                               ; preds = %38, %28, %15, %1
  %44 = phi i1 [ false, %15 ], [ false, %1 ], [ true, %28 ], [ %42, %38 ]
  ret i1 %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink13IsListItemTagEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %44, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %44

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.318"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %20
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %37 = bitcast %"class.blink::Member.318"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br label %44

44:                                               ; preds = %3, %32, %1, %8, %20
  %45 = phi i1 [ false, %1 ], [ true, %20 ], [ true, %8 ], [ %43, %32 ], [ false, %3 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink16IsListElementTagEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %44, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %44

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.318"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %20
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %37 = bitcast %"class.blink::Member.318"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br label %44

44:                                               ; preds = %3, %32, %1, %8, %20
  %45 = phi i1 [ false, %1 ], [ true, %20 ], [ true, %8 ], [ %43, %32 ], [ false, %3 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink27IsPresentationalHTMLElementEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %62, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %62

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kUTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %62, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kSTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %62, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrikeTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %16, %32
  br i1 %33, label %62, label %34

34:                                               ; preds = %27
  %35 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kITagE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %16, %39
  br i1 %40, label %62, label %41

41:                                               ; preds = %34
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kEmTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %16, %46
  br i1 %47, label %62, label %48

48:                                               ; preds = %41
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kBTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %16, %53
  br i1 %54, label %62, label %55

55:                                               ; preds = %48
  %56 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrongTagE, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %16, %60
  br label %62

62:                                               ; preds = %3, %1, %8, %20, %27, %34, %41, %48, %55
  %63 = phi i1 [ true, %48 ], [ true, %41 ], [ true, %34 ], [ true, %27 ], [ true, %20 ], [ true, %8 ], [ %61, %55 ], [ false, %3 ], [ false, %1 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19AssociatedElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.blink::Node"* %3 to %"class.blink::Element"*
  br i1 %9, label %21, label %11

11:                                               ; preds = %5
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #13
  %13 = icmp eq %"class.blink::ContainerNode"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 12
  %18 = icmp eq i32 %17, 0
  %19 = bitcast %"class.blink::ContainerNode"* %12 to %"class.blink::Element"*
  %20 = select i1 %18, %"class.blink::Element"* %19, %"class.blink::Element"* null
  br label %21

21:                                               ; preds = %5, %14, %11, %1
  %22 = phi %"class.blink::Element"* [ %10, %5 ], [ null, %1 ], [ %20, %14 ], [ null, %11 ]
  ret %"class.blink::Element"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0)
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %6
  %11 = icmp eq %"class.blink::ContainerNode"* %7, null
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %10, %52
  %14 = phi %"class.blink::Node"* [ %8, %10 ], [ %54, %52 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %52

19:                                               ; preds = %13
  br i1 %11, label %31, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 5, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -2
  %28 = icmp ult i32 %27, 18
  br i1 %28, label %29, label %52

29:                                               ; preds = %20
  %30 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* nonnull dereferenceable(64) %14, i32 0) #13
  br i1 %30, label %31, label %52

31:                                               ; preds = %19, %29
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %33 = bitcast %"class.blink::Member.318"* %32 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %36 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %35
  br i1 %36, label %56, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %45, %47
  br i1 %48, label %58, label %49

49:                                               ; preds = %37, %43
  %50 = bitcast %"class.blink::Node"* %14 to %"class.blink::ContainerNode"*
  %51 = icmp eq %"class.blink::ContainerNode"* %7, %50
  br i1 %51, label %60, label %52

52:                                               ; preds = %13, %20, %29, %49
  %53 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %14) #13
  %54 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %53, i64 0, i32 0
  %55 = icmp eq %"class.blink::ContainerNode"* %53, null
  br i1 %55, label %60, label %13

56:                                               ; preds = %31
  %57 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  br label %60

58:                                               ; preds = %43
  %59 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  br label %60

60:                                               ; preds = %49, %52, %6, %56, %58, %2
  %61 = phi %"class.blink::Element"* [ null, %2 ], [ %57, %56 ], [ %59, %58 ], [ null, %6 ], [ null, %52 ], [ null, %49 ]
  ret %"class.blink::Element"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)* nocapture, i32, %"class.blink::Node"* readnone) local_unnamed_addr #0 {
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call %"class.blink::ContainerNode"* @_ZN5blink19HighestEditableRootERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0)
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi %"class.blink::ContainerNode"* [ %7, %6 ], [ null, %4 ]
  %10 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %11 = icmp eq %"class.blink::Node"* %10, null
  %12 = icmp eq %"class.blink::Node"* %10, %3
  %13 = or i1 %11, %12
  br i1 %13, label %42, label %14

14:                                               ; preds = %8
  %15 = icmp eq %"class.blink::ContainerNode"* %9, null
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  br label %17

17:                                               ; preds = %14, %35
  %18 = phi %"class.blink::Node"* [ %10, %14 ], [ %38, %35 ]
  %19 = phi %"class.blink::Node"* [ null, %14 ], [ %36, %35 ]
  br i1 %15, label %31, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 5, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -2
  %28 = icmp ult i32 %27, 18
  br i1 %28, label %29, label %35

29:                                               ; preds = %20
  %30 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* nonnull dereferenceable(64) %18, i32 0) #13
  br i1 %30, label %31, label %35

31:                                               ; preds = %17, %29
  %32 = tail call zeroext i1 %1(%"class.blink::Node"* nonnull %18) #13
  %33 = select i1 %32, %"class.blink::Node"* %18, %"class.blink::Node"* %19
  %34 = icmp eq %"class.blink::Node"* %18, %16
  br i1 %34, label %42, label %35

35:                                               ; preds = %20, %31, %29
  %36 = phi %"class.blink::Node"* [ %33, %31 ], [ %19, %29 ], [ %19, %20 ]
  %37 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %18) #13
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0
  %39 = icmp eq %"class.blink::ContainerNode"* %37, null
  %40 = icmp eq %"class.blink::Node"* %38, %3
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %17

42:                                               ; preds = %35, %31, %8
  %43 = phi %"class.blink::Node"* [ null, %8 ], [ %33, %31 ], [ %36, %35 ]
  ret %"class.blink::Node"* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink22EnclosingAnchorElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::Node"* %3 to %"class.blink::Element"*
  br label %28

12:                                               ; preds = %5
  %13 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #13
  %14 = icmp eq %"class.blink::ContainerNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %12, %21
  %16 = phi %"class.blink::ContainerNode"* [ %23, %21 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0
  %23 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %22) #13
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %25, label %15

25:                                               ; preds = %21, %15, %12
  %26 = phi %"class.blink::ContainerNode"* [ null, %12 ], [ null, %21 ], [ %16, %15 ]
  %27 = bitcast %"class.blink::ContainerNode"* %26 to %"class.blink::Element"*
  br label %28

28:                                               ; preds = %10, %25
  %29 = phi %"class.blink::Element"* [ %11, %10 ], [ %27, %25 ]
  %30 = icmp eq %"class.blink::Element"* %29, null
  br i1 %30, label %59, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %29, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 64
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %59

36:                                               ; preds = %31, %51
  %37 = phi %"class.blink::Element"* [ %52, %51 ], [ %29, %31 ]
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %37, i64 0, i32 0, i32 0
  %39 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %38) #13
  %40 = icmp eq %"class.blink::ContainerNode"* %39, null
  br i1 %40, label %59, label %41

41:                                               ; preds = %36, %47
  %42 = phi %"class.blink::ContainerNode"* [ %49, %47 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 12
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0
  %49 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %48) #13
  %50 = icmp eq %"class.blink::ContainerNode"* %49, null
  br i1 %50, label %59, label %41

51:                                               ; preds = %41
  %52 = bitcast %"class.blink::ContainerNode"* %42 to %"class.blink::Element"*
  %53 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 64
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %36, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.blink::ContainerNode"* %42 to %"class.blink::Element"*
  br label %59

59:                                               ; preds = %57, %36, %47, %31, %28, %1
  %60 = phi %"class.blink::Element"* [ null, %1 ], [ null, %28 ], [ %29, %31 ], [ null, %47 ], [ %58, %57 ], [ null, %36 ]
  ret %"class.blink::Element"* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink29CreateDefaultParagraphElementERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #13
  %3 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.blink::Editor"*, %"class.blink::Editor"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Editor", %"class.blink::Editor"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %13 [
    i32 0, label %7
    i32 1, label %10
  ]

7:                                                ; preds = %1
  %8 = tail call %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #13
  %9 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %8, i64 0, i32 0
  br label %13

10:                                               ; preds = %1
  %11 = tail call %"class.blink::HTMLParagraphElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLParagraphElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #13
  %12 = getelementptr inbounds %"class.blink::HTMLParagraphElement", %"class.blink::HTMLParagraphElement"* %11, i64 0, i32 0
  br label %13

13:                                               ; preds = %1, %10, %7
  %14 = phi %"class.blink::HTMLElement"* [ %12, %10 ], [ %9, %7 ], [ null, %1 ]
  ret %"class.blink::HTMLElement"* %14
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %134, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %134

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp ne %"class.WTF::StringImpl"* %16, %18
  %20 = and i32 %5, 2
  %21 = icmp eq i32 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %134, label %23

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %25 = bitcast %"class.blink::Node"* %24 to %"class.blink::Node"**
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %134, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 12
  %32 = icmp eq i32 %31, 4
  br i1 %32, label %33, label %134

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1
  %35 = bitcast %"class.blink::Node"* %34 to i8*
  %36 = load i8, i8* %35, align 8, !range !10
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 0, i32 0, i32 1
  %40 = bitcast %"class.blink::TraceWrapperV8Reference"* %39 to %"class.blink::ParkableString"*
  %41 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %40) #13
  br label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 1
  %44 = bitcast i32* %43 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi %"class.WTF::String"* [ %41, %38 ], [ %44, %42 ]
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %134, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  br i1 %54, label %68, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %134, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.WTF::StringImpl"* %55 to i8*
  %62 = zext i32 %58 to i64
  %63 = tail call i8* @memchr(i8* %61, i32 9, i64 %62) #14
  %64 = icmp eq i8* %63, null
  %65 = ptrtoint i8* %63 to i64
  %66 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %67 = sub i64 %65, %66
  br i1 %64, label %134, label %83

68:                                               ; preds = %50
  %69 = bitcast %"class.WTF::StringImpl"* %55 to i16*
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %134, label %73

73:                                               ; preds = %68
  %74 = zext i32 %71 to i64
  br label %75

75:                                               ; preds = %80, %73
  %76 = phi i64 [ %81, %80 ], [ 0, %73 ]
  %77 = getelementptr inbounds i16, i16* %69, i64 %76
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 9
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = add nuw nsw i64 %76, 1
  %82 = icmp eq i64 %81, %74
  br i1 %82, label %134, label %75

83:                                               ; preds = %75, %60
  %84 = phi i64 [ %67, %60 ], [ %76, %75 ]
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %134, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %90, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %91) #13
  %92 = load i32, i32* %4, align 8
  %93 = and i32 %92, 12
  %94 = icmp eq i32 %93, 0
  %95 = and i32 %92, 1
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %94, label %98, label %109

98:                                               ; preds = %87
  br i1 %96, label %105, label %99

99:                                               ; preds = %98
  %100 = bitcast %"class.blink::NodeData"** %97 to %"class.blink::NodeRareData"**
  %101 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %101, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %103, i64 0, i32 2, i32 0
  br label %124

105:                                              ; preds = %98
  %106 = bitcast %"class.blink::NodeData"** %97 to %"class.blink::NodeRenderingData"**
  %107 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %107, i64 0, i32 2, i32 0
  br label %124

109:                                              ; preds = %87
  br i1 %96, label %114, label %110

110:                                              ; preds = %109
  %111 = bitcast %"class.blink::NodeData"** %97 to %"class.blink::NodeRareData"**
  %112 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %112, i64 0, i32 1, i32 0, i32 0
  br label %116

114:                                              ; preds = %109
  %115 = bitcast %"class.blink::NodeData"** %97 to %"class.blink::NodeRenderingData"**
  br label %116

116:                                              ; preds = %114, %110
  %117 = phi %"class.blink::NodeRenderingData"** [ %113, %110 ], [ %115, %114 ]
  %118 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %118, i64 0, i32 1
  %120 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %119, align 8
  %121 = icmp eq %"class.blink::LayoutObject"* %120, null
  br i1 %121, label %134, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %120, i64 0, i32 5, i32 0
  br label %124

124:                                              ; preds = %99, %105, %122
  %125 = phi %"class.blink::ComputedStyle"** [ %123, %122 ], [ %104, %99 ], [ %108, %105 ]
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %125, align 8
  %127 = icmp eq %"class.blink::ComputedStyle"* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %126, i64 0, i32 0, i32 9
  %130 = bitcast [20 x i8]* %129 to i160*
  %131 = load i160, i160* %130, align 8
  %132 = and i160 %131, 520192
  %133 = icmp eq i160 %132, 8192
  br label %134

134:                                              ; preds = %80, %8, %83, %28, %116, %60, %68, %56, %45, %23, %3, %1, %124, %128
  %135 = phi i1 [ false, %8 ], [ false, %83 ], [ false, %124 ], [ %133, %128 ], [ false, %1 ], [ false, %3 ], [ false, %28 ], [ false, %23 ], [ false, %45 ], [ false, %56 ], [ false, %68 ], [ false, %60 ], [ false, %116 ], [ false, %80 ]
  ret i1 %135
}

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 12
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %0) #13
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %0) #13
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %13)
  br label %15

15:                                               ; preds = %8, %1, %11, %3
  %16 = phi i1 [ false, %8 ], [ false, %3 ], [ false, %1 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSpanElement"* @_ZN5blink14TabSpanElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 12
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %0) #13
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %0) #13
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %13) #13
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %0) #13
  %17 = bitcast %"class.blink::ContainerNode"* %16 to %"class.blink::HTMLSpanElement"*
  br label %18

18:                                               ; preds = %1, %3, %8, %11, %15
  %19 = phi %"class.blink::HTMLSpanElement"* [ %17, %15 ], [ null, %11 ], [ null, %8 ], [ null, %3 ], [ null, %1 ]
  ret %"class.blink::HTMLSpanElement"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSpanElement"* @_ZN5blink20CreateTabSpanElementERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = tail call %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"* %0, %"class.WTF::String"* dereferenceable(8) %1) #13
  %4 = tail call fastcc %"class.blink::HTMLSpanElement"* @_ZN5blinkL20CreateTabSpanElementERNS_8DocumentEPNS_4TextE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::Text"* %3)
  ret %"class.blink::HTMLSpanElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::HTMLSpanElement"* @_ZN5blinkL20CreateTabSpanElementERNS_8DocumentEPNS_4TextE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::Text"*) unnamed_addr #0 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #13
  %6 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %8 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15) #13
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #13
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  %26 = icmp eq %"class.blink::Text"* %1, null
  br i1 %26, label %27, label %47

27:                                               ; preds = %25
  %28 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #13
  %29 = call %"class.blink::Text"* @_ZN5blink8Document21CreateEditingTextNodeERKN3WTF6StringE(%"class.blink::Document"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %27, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %47

47:                                               ; preds = %25, %46
  %48 = phi %"class.blink::Text"* [ %1, %25 ], [ %29, %46 ]
  %49 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %48, i64 0, i32 0, i32 0
  %51 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %49, %"class.blink::Node"* %50) #13
  ret %"class.blink::HTMLSpanElement"* %5
}

declare %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSpanElement"* @_ZN5blink20CreateTabSpanElementERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 {
  %2 = tail call fastcc %"class.blink::HTMLSpanElement"* @_ZN5blinkL20CreateTabSpanElementERNS_8DocumentEPNS_4TextE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::Text"* null)
  ret %"class.blink::HTMLSpanElement"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33PositionRespectingEditingBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13HitTestResultE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::HitTestResult"* dereferenceable(112)) local_unnamed_addr #5 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %2, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %3
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #13
  br label %137

28:                                               ; preds = %21
  %29 = tail call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  %30 = icmp eq %"class.blink::TextControlElement"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = tail call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %37

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %29, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %35, i64 0, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi %"class.blink::Element"* [ %32, %31 ], [ %36, %33 ]
  %39 = icmp eq %"class.blink::Element"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %38, i64 0, i32 0, i32 0
  %42 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %41, %"class.blink::Node"* %9) #13
  br i1 %42, label %43, label %44

43:                                               ; preds = %37, %40
  tail call void @_ZNK5blink13HitTestResult11GetPositionEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::HitTestResult"* %2) #13
  br label %137

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %38, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %38, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %48, label %54, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %52 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %52, i64 0, i32 1, i32 0, i32 0
  br label %56

54:                                               ; preds = %44
  %55 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi %"class.blink::NodeRenderingData"** [ %53, %50 ], [ %55, %54 ]
  %58 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %58, i64 0, i32 1
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %62, label %63

62:                                               ; preds = %56
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #13
  br label %137

63:                                               ; preds = %56
  %64 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %2, i64 0, i32 7
  %66 = bitcast %"struct.blink::PhysicalOffset"* %65 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %69 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = trunc i64 %67 to i32
  %71 = sitofp i32 %70 to float
  %72 = fmul float %71, 1.562500e-02
  %73 = lshr i64 %67, 32
  %74 = trunc i64 %73 to i32
  %75 = sitofp i32 %74 to float
  %76 = fmul float %75, 1.562500e-02
  %77 = insertelement <2 x float> undef, float %72, i32 0
  %78 = insertelement <2 x float> %77, float %76, i32 1
  store <2 x float> %78, <2 x float>* %4, align 8
  %79 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* nonnull %25, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %68, %"class.blink::LayoutBoxModelObject"* null, i32 4) #13
  %80 = extractelement <2 x float> %79, i32 0
  %81 = fmul float %80, 6.400000e+01
  %82 = call float @llvm.round.f32(float %81) #13
  %83 = fcmp ult float %82, 0xC1E0000000000000
  %84 = fcmp ugt float %82, 0x41DFFFFFE0000000
  %85 = fcmp ogt float %82, 0xC1E0000000000000
  %86 = select i1 %85, float %82, float 0xC1E0000000000000
  %87 = fptosi float %86 to i32
  %88 = select i1 %83, i32 0, i32 2147483647
  %89 = select i1 %84, i32 %88, i32 %87
  %90 = extractelement <2 x float> %79, i32 1
  %91 = fmul float %90, 6.400000e+01
  %92 = call float @llvm.round.f32(float %91) #13
  %93 = fcmp ult float %92, 0xC1E0000000000000
  %94 = fcmp ugt float %92, 0x41DFFFFFE0000000
  %95 = fcmp ogt float %92, 0xC1E0000000000000
  %96 = select i1 %95, float %92, float 0xC1E0000000000000
  %97 = fptosi float %96 to i32
  %98 = select i1 %93, i32 0, i32 2147483647
  %99 = select i1 %94, i32 %98, i32 %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  %100 = bitcast <2 x float>* %5 to %"class.blink::FloatPoint"*
  %101 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13
  %102 = sitofp i32 %89 to float
  %103 = fmul float %102, 1.562500e-02
  %104 = sitofp i32 %99 to float
  %105 = fmul float %104, 1.562500e-02
  %106 = insertelement <2 x float> undef, float %103, i32 0
  %107 = insertelement <2 x float> %106, float %105, i32 1
  store <2 x float> %107, <2 x float>* %5, align 8
  %108 = call <2 x float> @_ZNK5blink12LayoutObject25AncestorToLocalFloatPointEPKNS_20LayoutBoxModelObjectERKNS_10FloatPointEj(%"class.blink::LayoutObject"* nonnull %60, %"class.blink::LayoutBoxModelObject"* null, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %100, i32 4) #13
  %109 = extractelement <2 x float> %108, i32 0
  %110 = fmul float %109, 6.400000e+01
  %111 = call float @llvm.round.f32(float %110) #13
  %112 = fcmp ult float %111, 0xC1E0000000000000
  %113 = fcmp ugt float %111, 0x41DFFFFFE0000000
  %114 = fcmp ogt float %111, 0xC1E0000000000000
  %115 = select i1 %114, float %111, float 0xC1E0000000000000
  %116 = fptosi float %115 to i32
  %117 = select i1 %112, i32 0, i32 2147483647
  %118 = select i1 %113, i32 %117, i32 %116
  %119 = extractelement <2 x float> %108, i32 1
  %120 = fmul float %119, 6.400000e+01
  %121 = call float @llvm.round.f32(float %120) #13
  %122 = fcmp ult float %121, 0xC1E0000000000000
  %123 = fcmp ugt float %121, 0x41DFFFFFE0000000
  %124 = fcmp ogt float %121, 0xC1E0000000000000
  %125 = select i1 %124, float %121, float 0xC1E0000000000000
  %126 = fptosi float %125 to i32
  %127 = select i1 %122, i32 0, i32 2147483647
  %128 = select i1 %123, i32 %127, i32 %126
  %129 = zext i32 %128 to i64
  %130 = shl nuw i64 %129, 32
  %131 = zext i32 %118 to i64
  %132 = or i64 %130, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13
  store i64 %132, i64* %6, align 8
  %133 = bitcast %"class.blink::LayoutObject"* %60 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %134 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %134, i64 64
  %136 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %135, align 8
  call void %136(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* nonnull %60, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  br label %137

137:                                              ; preds = %43, %63, %62, %27
  ret void
}

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZNK5blink13HitTestResult11GetPositionEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::HitTestResult"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AdjustForEditingBoundaryERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::PositionWithAffinityTemplate"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 0
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %10, %"class.blink::PositionTemplate"* dereferenceable(16) %11) #13
  %12 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  br label %81

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 0
  %17 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %16) #13
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 5, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, -2
  %25 = icmp ult i32 %24, 18
  br i1 %25, label %26, label %33

26:                                               ; preds = %15
  %27 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %17, i32 0) #13
  br i1 %27, label %28, label %33

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 0
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %29, %"class.blink::PositionTemplate"* dereferenceable(16) %16) #13
  %30 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  br label %81

33:                                               ; preds = %15, %26
  %34 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 5, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, -2
  %43 = icmp ult i32 %42, 18
  br i1 %43, label %44, label %47

44:                                               ; preds = %33
  %45 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %35, i32 0) #13
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* %16) #13
  br label %48

47:                                               ; preds = %33, %44
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* dereferenceable(16) %16) #13
  br label %48

48:                                               ; preds = %47, %46
  %49 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #13
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 0) #13
  %50 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %4) #13
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %54, i64 0, i32 5, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, -2
  %58 = icmp ult i32 %57, 18
  br i1 %58, label %59, label %62

59:                                               ; preds = %48
  %60 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %50, i32 0) #13
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #13
  br label %80

62:                                               ; preds = %48, %59
  %63 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #13
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 0) #13
  %64 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #13
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %68, i64 0, i32 5, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, -2
  %72 = icmp ult i32 %71, 18
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %64, i32 0) #13
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #13
  br label %79

76:                                               ; preds = %62, %73
  %77 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %1, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EENS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 %78) #13
  br label %79

79:                                               ; preds = %76, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #13
  br label %80

80:                                               ; preds = %79, %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %81

81:                                               ; preds = %28, %80, %9
  ret void
}

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EENS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AdjustForEditingBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %4 = bitcast %"class.blink::PositionWithAffinityTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* nonnull %3, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  call void @_ZN5blink24AdjustForEditingBoundaryERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::PositionWithAffinityTemplate"* nonnull dereferenceable(24) %3)
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29ComputePositionForNodeRemovalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %46

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %45 [
    i32 3, label %11
    i32 0, label %18
    i32 2, label %37
    i32 1, label %41
  ]

11:                                               ; preds = %8
  %12 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #13
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"* %2, %"class.blink::Node"* nonnull dereferenceable(64) %12) #13
  br i1 %15, label %17, label %16

16:                                               ; preds = %11, %14
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %46

17:                                               ; preds = %14
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %46

18:                                               ; preds = %8
  %19 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #13
  %20 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #13
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %20, i64 0, i32 0
  %22 = icmp eq %"class.blink::Node"* %19, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %2) #13
  %27 = icmp ugt i32 %25, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = load i32, i32* %24, align 8
  %30 = add nsw i32 %29, -1
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* %19, i32 %30) #13
  br label %46

31:                                               ; preds = %23, %18
  %32 = icmp eq %"class.blink::Node"* %19, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"* %2, %"class.blink::Node"* nonnull dereferenceable(64) %19) #13
  br i1 %34, label %36, label %35

35:                                               ; preds = %31, %33
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %46

36:                                               ; preds = %33
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %46

37:                                               ; preds = %8
  %38 = tail call zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"* %2, %"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %46

40:                                               ; preds = %37
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %46

41:                                               ; preds = %8
  %42 = tail call zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"* %2, %"class.blink::Node"* nonnull dereferenceable(64) %5) #13
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %46

44:                                               ; preds = %41
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #13
  br label %46

45:                                               ; preds = %8
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  br label %46

46:                                               ; preds = %16, %17, %28, %35, %36, %39, %40, %43, %44, %45, %7
  ret void
}

declare zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp ne i32 %8, 0
  %10 = icmp eq %"class.blink::Node"* %0, null
  %11 = or i1 %10, %9
  br i1 %11, label %88, label %12

12:                                               ; preds = %1
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.318"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %88

24:                                               ; preds = %12
  %25 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %26 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #13
  %27 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %34 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %33, i64* %34, align 8
  br label %42

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  br label %42

42:                                               ; preds = %31, %35
  %43 = phi i32 [ %38, %35 ], [ 0, %31 ]
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = call i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"* %25, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #13
  %46 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element18GetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"* %25, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, i64 %45) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %47 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %53, i64* %54, align 8
  br label %63

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

63:                                               ; preds = %55, %51
  %64 = phi i64 [ %62, %55 ], [ %53, %51 ]
  %65 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %68 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %64, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %70, align 8
  %71 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #13
  br label %87

87:                                               ; preds = %63, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %88

88:                                               ; preds = %12, %87, %1
  %89 = phi i1 [ false, %1 ], [ %71, %87 ], [ false, %12 ]
  ret i1 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23ElementCannotHaveEndTagERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLElement"*
  %10 = tail call zeroext i1 @_ZNK5blink11HTMLElement21ShouldSerializeEndTagEv(%"class.blink::HTMLElement"* nonnull %9) #13
  %11 = xor i1 %10, true
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink11HTMLElement21ShouldSerializeEndTagEv(%"class.blink::HTMLElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23IndexForVisiblePositionERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERPNS_13ContainerNodeE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::ContainerNode"** nocapture dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::TextIteratorBehavior", align 4
  %8 = alloca %"class.blink::TextIteratorBehavior::Builder", align 4
  %9 = alloca %"class.blink::TextIteratorBehavior", align 4
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %51, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %0, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* dereferenceable(16) %18) #13
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  br label %27

27:                                               ; preds = %15, %22
  %28 = phi %"class.blink::Document"* [ %26, %22 ], [ null, %15 ]
  %29 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %20) #13
  %30 = icmp eq %"class.blink::ShadowRoot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %29, i64 0, i32 0, i32 0
  br label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 47, i32 0, i32 0
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %35, i64 0, i32 0
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi %"class.blink::ContainerNode"* [ %36, %33 ], [ %32, %31 ]
  store %"class.blink::ContainerNode"* %38, %"class.blink::ContainerNode"** %1, align 8
  %39 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #13
  %40 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  %41 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %42 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %38, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* dereferenceable(64) %42) #13
  %43 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull %3) #13
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  %44 = bitcast %"class.blink::TextIteratorBehavior"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #13
  %45 = bitcast %"class.blink::TextIteratorBehavior::Builder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #13
  %46 = bitcast %"class.blink::TextIteratorBehavior"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #13
  call void @_ZN5blink20TextIteratorBehavior38AllVisiblePositionsRangeLengthBehaviorEv(%"class.blink::TextIteratorBehavior"* nonnull sret %9) #13
  call void @_ZN5blink20TextIteratorBehavior7BuilderC1ERKS0_(%"class.blink::TextIteratorBehavior::Builder"* nonnull %8, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %9) #13
  %47 = call dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder33SetSuppressesExtraNewlineEmissionEb(%"class.blink::TextIteratorBehavior::Builder"* nonnull %8, i1 zeroext true) #13
  call void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* nonnull sret %7, %"class.blink::TextIteratorBehavior::Builder"* %47) #13
  call void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #13
  %48 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  %49 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  %50 = call i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_16PositionTemplateIS3_EES8_RKNS_20TextIteratorBehaviorE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #13
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  br label %51

51:                                               ; preds = %2, %37
  %52 = phi i32 [ %50, %37 ], [ 0, %2 ]
  ret i32 %52
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehavior38AllVisiblePositionsRangeLengthBehaviorEv(%"class.blink::TextIteratorBehavior"* sret) local_unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehavior7BuilderC1ERKS0_(%"class.blink::TextIteratorBehavior::Builder"*, %"class.blink::TextIteratorBehavior"* dereferenceable(4)) unnamed_addr #2

declare dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder33SetSuppressesExtraNewlineEmissionEb(%"class.blink::TextIteratorBehavior::Builder"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* sret, %"class.blink::TextIteratorBehavior::Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #6

declare i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_16PositionTemplateIS3_EES8_RKNS_20TextIteratorBehaviorE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9MakeRangeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::EphemeralRangeTemplate"* noalias sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %3
  tail call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"* %0) #13
  br label %35

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  %20 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %21 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* dereferenceable(16) %21) #13
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::PositionTemplate"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %22 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %25 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %26 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %2, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %26) #13
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %16
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"* %0) #13
  br label %34

33:                                               ; preds = %16
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #13
  br label %34

34:                                               ; preds = %33, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  br label %35

35:                                               ; preds = %34, %15
  ret void
}

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NormalizeRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* noalias sret, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate"* %1) #13, !noalias !11
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 5, i32 2
  %11 = load i32, i32* %10, align 4, !noalias !11
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4, !noalias !11
  %13 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13, !noalias !11
  %14 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #13, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13, !noalias !11
  %15 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13, !noalias !11
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate"* %1) #13, !noalias !11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i32 1) #13, !noalias !11
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* nonnull %4) #13, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13, !noalias !11
  %16 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13, !noalias !11
  %17 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #13, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13, !noalias !11
  %18 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13, !noalias !11
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::EphemeralRangeTemplate"* %1) #13, !noalias !11
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, i32 1) #13, !noalias !11
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull %7) #13, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13, !noalias !11
  %19 = call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #13, !noalias !11
  %20 = icmp sgt i16 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #13
  br label %23

22:                                               ; preds = %2
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #13
  br label %23

23:                                               ; preds = %21, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13, !noalias !11
  %24 = load i32, i32* %10, align 4
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14NormalizeRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate.2718"* noalias sret, %"class.blink::EphemeralRangeTemplate.2718"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate.2659", align 8
  %4 = alloca %"class.blink::PositionTemplate.2659", align 8
  %5 = alloca %"class.blink::PositionTemplate.2659", align 8
  %6 = alloca %"class.blink::PositionTemplate.2659", align 8
  %7 = alloca %"class.blink::PositionTemplate.2659", align 8
  %8 = alloca %"class.blink::PositionTemplate.2659", align 8
  %9 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate.2718"* %1) #13, !noalias !14
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 5, i32 2
  %11 = load i32, i32* %10, align 4, !noalias !14
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4, !noalias !14
  %13 = bitcast %"class.blink::PositionTemplate.2659"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13, !noalias !14
  %14 = bitcast %"class.blink::PositionTemplate.2659"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #13, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13, !noalias !14
  %15 = bitcast %"class.blink::PositionTemplate.2659"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13, !noalias !14
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.2659"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate.2718"* %1) #13, !noalias !14
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %4, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %5, i32 1) #13, !noalias !14
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate.2659"* nonnull sret %3, %"class.blink::PositionTemplate.2659"* nonnull %4) #13, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13, !noalias !14
  %16 = bitcast %"class.blink::PositionTemplate.2659"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13, !noalias !14
  %17 = bitcast %"class.blink::PositionTemplate.2659"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #13, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13, !noalias !14
  %18 = bitcast %"class.blink::PositionTemplate.2659"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13, !noalias !14
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.2659"* nonnull sret %8, %"class.blink::EphemeralRangeTemplate.2718"* %1) #13, !noalias !14
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* nonnull sret %7, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %8, i32 1) #13, !noalias !14
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate.2659"* nonnull sret %6, %"class.blink::PositionTemplate.2659"* nonnull %7) #13, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13, !noalias !14
  %19 = call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.2659"* nonnull %3, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %6) #13, !noalias !14
  %20 = icmp sgt i16 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.2718"* %0, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %6, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %3) #13
  br label %23

22:                                               ; preds = %2
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.2718"* %0, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate.2659"* nonnull dereferenceable(16) %6) #13
  br label %23

23:                                               ; preds = %21, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13, !noalias !14
  %24 = load i32, i32* %10, align 4
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23VisiblePositionForIndexEiPNS_13ContainerNodeE(%"class.blink::VisiblePositionTemplate"* noalias sret, i32, %"class.blink::ContainerNode"*) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %5 = alloca %"class.blink::PlainTextRange", align 4
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = icmp eq %"class.blink::ContainerNode"* %2, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* %0) #13
  br label %29

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 5, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::PlainTextRange"* %5 to i8*
  %20 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN5blink14PlainTextRangeC1Ej(%"class.blink::PlainTextRange"* nonnull %5, i32 %1) #13
  call void @_ZNK5blink14PlainTextRange31CreateRangeForSelectionIndexingERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %4, %"class.blink::PlainTextRange"* nonnull %5, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %9
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* %0) #13
  br label %26

24:                                               ; preds = %9
  %25 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  br label %26

26:                                               ; preds = %24, %23
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #13
  %27 = load i32, i32* %14, align 4
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %14, align 4
  br label %29

29:                                               ; preds = %26, %8
  ret void
}

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"*) unnamed_addr #2

declare void @_ZN5blink14PlainTextRangeC1Ej(%"class.blink::PlainTextRange"*, i32) unnamed_addr #2

declare void @_ZNK5blink14PlainTextRange31CreateRangeForSelectionIndexingERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::PlainTextRange"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13AreSameRangesEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES8_(%"class.blink::Node"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN5blink22AreSameRangesAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEEbPNS_4NodeERKNS_16PositionTemplateIT_EESA_(%"class.blink::Node"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::PositionTemplate"* dereferenceable(16) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22AreSameRangesAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEEbPNS_4NodeERKNS_16PositionTemplateIT_EESA_(%"class.blink::Node"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %5 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate", align 8
  %7 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  %13 = bitcast %"class.blink::VisibleSelectionTemplate"* %5 to i8*
  %14 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #13
  %15 = bitcast %"class.blink::SelectionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  %16 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7) #13
  %17 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder17SelectAllChildrenERKNS_4NodeE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7, %"class.blink::Node"* dereferenceable(64) %0) #13
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %6, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %17) #13
  call void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %6) #13
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #13
  %18 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #13
  %19 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  br i1 %22, label %25, label %29

25:                                               ; preds = %3
  %26 = icmp eq %"class.blink::Node"* %24, null
  %27 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  %28 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  br i1 %26, label %53, label %79

29:                                               ; preds = %3
  %30 = icmp eq %"class.blink::Node"* %21, %24
  br i1 %30, label %31, label %42

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  br label %53

42:                                               ; preds = %31, %29
  %43 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %44 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  br label %79

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  %51 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  br i1 %50, label %53, label %79

53:                                               ; preds = %25, %39, %45
  %54 = phi i8* [ %41, %39 ], [ %52, %45 ], [ %28, %25 ]
  %55 = phi i8* [ %40, %39 ], [ %51, %45 ], [ %27, %25 ]
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate"* dereferenceable(16) %2) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  %56 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  %59 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  br i1 %58, label %61, label %63

61:                                               ; preds = %53
  %62 = icmp eq %"class.blink::Node"* %60, null
  br label %79

63:                                               ; preds = %53
  %64 = icmp eq %"class.blink::Node"* %57, %60
  br i1 %64, label %65, label %79

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %65
  %72 = icmp eq i32 %67, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %75, %77
  br label %79

79:                                               ; preds = %73, %71, %65, %63, %61, %25, %42, %45
  %80 = phi i8* [ %52, %45 ], [ %44, %42 ], [ %28, %25 ], [ %54, %61 ], [ %54, %63 ], [ %54, %65 ], [ %54, %71 ], [ %54, %73 ]
  %81 = phi i8* [ %51, %45 ], [ %43, %42 ], [ %27, %25 ], [ %55, %61 ], [ %55, %63 ], [ %55, %65 ], [ %55, %71 ], [ %55, %73 ]
  %82 = phi i1 [ false, %45 ], [ false, %42 ], [ false, %25 ], [ %62, %61 ], [ false, %63 ], [ false, %65 ], [ true, %71 ], [ %78, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13AreSameRangesEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES8_(%"class.blink::Node"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN5blink22AreSameRangesAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEbPNS_4NodeERKNS_16PositionTemplateIT_EESA_(%"class.blink::Node"* %0, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22AreSameRangesAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEbPNS_4NodeERKNS_16PositionTemplateIT_EESA_(%"class.blink::Node"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %5 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate", align 8
  %7 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  %13 = bitcast %"class.blink::VisibleSelectionTemplate"* %5 to i8*
  %14 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #13
  %15 = bitcast %"class.blink::SelectionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  %16 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7) #13
  %17 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder17SelectAllChildrenERKNS_4NodeE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7, %"class.blink::Node"* dereferenceable(64) %0) #13
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %6, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %17) #13
  call void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %6) #13
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #13
  %18 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %1) #13
  %19 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  br i1 %22, label %25, label %29

25:                                               ; preds = %3
  %26 = icmp eq %"class.blink::Node"* %24, null
  %27 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  %28 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  br i1 %26, label %53, label %79

29:                                               ; preds = %3
  %30 = icmp eq %"class.blink::Node"* %21, %24
  br i1 %30, label %31, label %42

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  br label %53

42:                                               ; preds = %31, %29
  %43 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %44 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  br label %79

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  %51 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  br i1 %50, label %53, label %79

53:                                               ; preds = %25, %39, %45
  %54 = phi i8* [ %41, %39 ], [ %52, %45 ], [ %28, %25 ]
  %55 = phi i8* [ %40, %39 ], [ %51, %45 ], [ %27, %25 ]
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate.2659"* dereferenceable(16) %2) #13
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  %56 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  %59 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  br i1 %58, label %61, label %63

61:                                               ; preds = %53
  %62 = icmp eq %"class.blink::Node"* %60, null
  br label %79

63:                                               ; preds = %53
  %64 = icmp eq %"class.blink::Node"* %57, %60
  br i1 %64, label %65, label %79

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %65
  %72 = icmp eq i32 %67, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %75, %77
  br label %79

79:                                               ; preds = %73, %71, %65, %63, %61, %25, %42, %45
  %80 = phi i8* [ %52, %45 ], [ %44, %42 ], [ %28, %25 ], [ %54, %61 ], [ %54, %63 ], [ %54, %65 ], [ %54, %71 ], [ %54, %73 ]
  %81 = phi i8* [ %51, %45 ], [ %43, %42 ], [ %27, %25 ], [ %55, %61 ], [ %55, %63 ], [ %55, %65 ], [ %55, %71 ], [ %55, %73 ]
  %82 = phi i1 [ false, %45 ], [ false, %42 ], [ false, %25 ], [ %62, %61 ], [ false, %63 ], [ false, %65 ], [ true, %71 ], [ %78, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink35IsRenderedAsNonInlineTableImageOrHREPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %47, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* nonnull %19, i32 44) #13
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 134217728
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %27, %21
  %34 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*)***
  %35 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %35, i64 21
  %37 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* nonnull %19) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 134217728
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39, %33
  %46 = tail call zeroext i1 @_ZNK5blink12LayoutObject4IsHREv(%"class.blink::LayoutObject"* nonnull %19) #13
  br label %47

47:                                               ; preds = %27, %39, %45, %15, %1
  %48 = phi i1 [ false, %1 ], [ false, %15 ], [ true, %39 ], [ true, %27 ], [ %46, %45 ]
  ret i1 %48
}

declare zeroext i1 @_ZNK5blink12LayoutObject4IsHREv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %90, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %90

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %90, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %90, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %16, %32
  br i1 %33, label %90, label %34

34:                                               ; preds = %27
  %35 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %16, %39
  br i1 %40, label %90, label %41

41:                                               ; preds = %34
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %16, %46
  br i1 %47, label %90, label %48

48:                                               ; preds = %41
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %16, %53
  br i1 %54, label %90, label %55

55:                                               ; preds = %48
  %56 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %16, %60
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %16, %67
  br i1 %68, label %90, label %69

69:                                               ; preds = %62
  %70 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE, align 8
  %71 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %16, %74
  br i1 %75, label %90, label %76

76:                                               ; preds = %69
  %77 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE, align 8
  %78 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %16, %81
  br i1 %82, label %90, label %83

83:                                               ; preds = %76
  %84 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE, align 8
  %85 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 3, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %16, %88
  br label %90

90:                                               ; preds = %3, %1, %8, %20, %27, %34, %41, %48, %55, %62, %69, %76, %83
  %91 = phi i1 [ true, %76 ], [ true, %69 ], [ true, %62 ], [ true, %55 ], [ true, %48 ], [ true, %41 ], [ true, %34 ], [ true, %27 ], [ true, %20 ], [ true, %8 ], [ %89, %83 ], [ false, %3 ], [ false, %1 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IsInPasswordFieldERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #13
  %3 = icmp eq %"class.blink::TextControlElement"* %2, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 48
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %35

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %35

22:                                               ; preds = %9
  %23 = bitcast %"class.blink::TextControlElement"* %2 to %"class.blink::HTMLFormControlElement"*
  %24 = bitcast %"class.blink::TextControlElement"* %2 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %25 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %25, i64 171
  %27 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %26, align 8
  %28 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %27(%"class.blink::HTMLFormControlElement"* nonnull %23) #13
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  br label %35

35:                                               ; preds = %9, %1, %4, %22
  %36 = phi i1 [ %34, %22 ], [ false, %9 ], [ false, %4 ], [ false, %1 ]
  ret i1 %36
}

declare %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink37ComputeDistanceToLeftGraphemeBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  call void @_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* dereferenceable(16) %0, i32 2) #13
  call void @_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  %6 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %7 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %2) #13
  %8 = sub nsw i32 %6, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink38ComputeDistanceToRightGraphemeBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  call void @_ZN5blink27PreviousPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* dereferenceable(16) %0, i32 2) #13
  call void @_ZN5blink23NextPositionOfAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_NS_16PositionMoveTypeE(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  %6 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %2) #13
  %7 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %8 = sub nsw i32 %6, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21LocalToAbsoluteQuadOfERKNS_14LocalCaretRectE(%"class.blink::FloatQuad"* noalias sret, %"struct.blink::LocalCaretRect"* nocapture readonly dereferenceable(32)) local_unnamed_addr #5 {
  %3 = alloca %"class.blink::FloatQuad", align 8
  %4 = getelementptr inbounds %"struct.blink::LocalCaretRect", %"struct.blink::LocalCaretRect"* %1, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = bitcast %"class.blink::FloatQuad"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13, !noalias !17
  %7 = getelementptr inbounds %"struct.blink::LocalCaretRect", %"struct.blink::LocalCaretRect"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4, !noalias !17
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 1.562500e-02
  %11 = getelementptr inbounds %"struct.blink::LocalCaretRect", %"struct.blink::LocalCaretRect"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4, !noalias !17
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 1.562500e-02
  %15 = getelementptr inbounds %"struct.blink::LocalCaretRect", %"struct.blink::LocalCaretRect"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !17
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, 1.562500e-02
  %19 = getelementptr inbounds %"struct.blink::LocalCaretRect", %"struct.blink::LocalCaretRect"* %1, i64 0, i32 1, i32 1, i32 1, i32 0
  %20 = load i32, i32* %19, align 4, !noalias !17
  %21 = sitofp i32 %20 to float
  %22 = fmul float %21, 1.562500e-02
  %23 = insertelement <2 x float> undef, float %10, i32 0
  %24 = insertelement <2 x float> %23, float %14, i32 1
  %25 = bitcast %"class.blink::FloatQuad"* %3 to <2 x float>*
  store <2 x float> %24, <2 x float>* %25, align 8, !noalias !17
  %26 = fadd float %10, %18
  %27 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 1, i32 0
  store float %26, float* %27, align 8, !noalias !17
  %28 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 1, i32 1
  store float %14, float* %28, align 4, !noalias !17
  %29 = fadd float %14, %22
  %30 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 2, i32 0
  store float %26, float* %30, align 8, !noalias !17
  %31 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 2, i32 1
  store float %29, float* %31, align 4, !noalias !17
  %32 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 3, i32 0
  store float %10, float* %32, align 8, !noalias !17
  %33 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %3, i64 0, i32 3, i32 1
  store float %29, float* %33, align 4, !noalias !17
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret %0, %"class.blink::LayoutObject"* %5, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %3, %"class.blink::LayoutBoxModelObject"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13, !noalias !17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink21InputTypeIsCancelableENS_10InputEvent9InputTypeE(i32) local_unnamed_addr #7 {
  %2 = icmp ne i32 %0, 12
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HeapVector.2781"* @_ZN5blink25TargetRangesForInputEventERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::StaticRange"*, align 8
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, i32 7) #13
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 5, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -2
  %16 = icmp ult i32 %15, 18
  br i1 %16, label %17, label %38

17:                                               ; preds = %1
  %18 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* dereferenceable(64) %0, i32 1) #13
  br i1 %18, label %19, label %38

19:                                               ; preds = %17
  %20 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #13
  %21 = bitcast %"class.blink::VisibleSelectionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #13
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %24) #13
  %26 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %25, i64 0, i32 14, i32 0, i32 0
  %27 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %26, align 8
  call void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %3, %"class.blink::FrameSelection"* %27) #13
  call void @_ZN5blink21FirstEphemeralRangeOfERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %2, %"class.blink::VisibleSelectionTemplate"* nonnull dereferenceable(40) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #13
  %28 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %19
  %32 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  store i32 1, i32* %4, align 4
  %33 = bitcast %"class.blink::StaticRange"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = call %"class.blink::StaticRange"* @_ZN5blink11StaticRange6CreateERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %2) #13
  store %"class.blink::StaticRange"* %34, %"class.blink::StaticRange"** %5, align 8
  %35 = call %"class.blink::HeapVector.2781"* @_ZN5blink25MakeGarbageCollectedTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE4CallIJiPS3_EEEPS5_DpOT_(i32* nonnull dereferenceable(4) %4, %"class.blink::StaticRange"** nonnull dereferenceable(8) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  br label %36

36:                                               ; preds = %19, %31
  %37 = phi %"class.blink::HeapVector.2781"* [ %35, %31 ], [ null, %19 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #13
  br label %38

38:                                               ; preds = %1, %17, %36
  %39 = phi %"class.blink::HeapVector.2781"* [ %37, %36 ], [ null, %17 ], [ null, %1 ]
  ret %"class.blink::HeapVector.2781"* %39
}

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare void @_ZN5blink21FirstEphemeralRangeOfERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::VisibleSelectionTemplate"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #2

declare %"class.blink::StaticRange"* @_ZN5blink11StaticRange6CreateERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink29DispatchBeforeInputInsertTextEPNS_4NodeERKN3WTF6StringENS_10InputEvent9InputTypeEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::HeapVector.2781"*) local_unnamed_addr #0 {
  %5 = icmp eq %"class.blink::Node"* %0, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = icmp ne i32 %2, 12
  %8 = icmp eq %"class.blink::HeapVector.2781"* %3, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = tail call %"class.blink::HeapVector.2781"* @_ZN5blink25TargetRangesForInputEventERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %0)
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi %"class.blink::HeapVector.2781"* [ %10, %9 ], [ %3, %6 ]
  %13 = tail call %"class.blink::InputEvent"* @_ZN5blink10InputEvent17CreateBeforeInputENS0_9InputTypeERKN3WTF6StringENS0_15EventCancelableENS0_16EventIsComposingEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(i32 %2, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext %7, i1 zeroext false, %"class.blink::HeapVector.2781"* %12) #13
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::InputEvent", %"class.blink::InputEvent"* %13, i64 0, i32 0, i32 0
  %16 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %14, %"class.blink::Event"* dereferenceable(104) %15) #13
  br label %17

17:                                               ; preds = %4, %11
  %18 = phi i32 [ %16, %11 ], [ 0, %4 ]
  ret i32 %18
}

declare %"class.blink::InputEvent"* @_ZN5blink10InputEvent17CreateBeforeInputENS0_9InputTypeERKN3WTF6StringENS0_15EventCancelableENS0_16EventIsComposingEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.blink::HeapVector.2781"*) local_unnamed_addr #2

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink32DispatchBeforeInputEditorCommandEPNS_4NodeENS_10InputEvent9InputTypeEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(%"class.blink::Node"*, i32, %"class.blink::HeapVector.2781"*) local_unnamed_addr #0 {
  %4 = icmp eq %"class.blink::Node"* %0, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0
  %8 = icmp ne i32 %1, 12
  %9 = tail call %"class.blink::InputEvent"* @_ZN5blink10InputEvent17CreateBeforeInputENS0_9InputTypeERKN3WTF6StringENS0_15EventCancelableENS0_16EventIsComposingEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(i32 %1, %"class.WTF::String"* dereferenceable(8) %7, i1 zeroext %8, i1 zeroext false, %"class.blink::HeapVector.2781"* %2) #13
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::InputEvent", %"class.blink::InputEvent"* %9, i64 0, i32 0, i32 0
  %12 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %10, %"class.blink::Event"* dereferenceable(104) %11) #13
  br label %13

13:                                               ; preds = %3, %5
  %14 = phi i32 [ %12, %5 ], [ 0, %3 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink31DispatchBeforeInputDataTransferEPNS_4NodeENS_10InputEvent9InputTypeEPNS_12DataTransferE(%"class.blink::Node"*, i32, %"class.blink::DataTransfer"*) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = icmp eq %"class.blink::Node"* %0, null
  br i1 %6, label %74, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 5, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -2
  %15 = icmp ult i32 %14, 18
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = tail call fastcc zeroext i1 @_ZN5blinkL16HasEditableLevelERKNS_4NodeENS_13EditableLevelE(%"class.blink::Node"* nonnull dereferenceable(64) %0, i32 1) #13
  %18 = xor i1 %17, true
  br label %19

19:                                               ; preds = %7, %16
  %20 = phi i1 [ %18, %16 ], [ true, %7 ]
  %21 = icmp ne %"class.blink::DataTransfer"* %2, null
  %22 = and i1 %21, %20
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = icmp ne i32 %1, 12
  %25 = tail call %"class.blink::HeapVector.2781"* @_ZN5blink25TargetRangesForInputEventERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %0)
  %26 = tail call %"class.blink::InputEvent"* @_ZN5blink10InputEvent17CreateBeforeInputENS0_9InputTypeEPNS_12DataTransferENS0_15EventCancelableENS0_16EventIsComposingEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(i32 %1, %"class.blink::DataTransfer"* %2, i1 zeroext %24, i1 zeroext false, %"class.blink::HeapVector.2781"* %25) #13
  br label %69

27:                                               ; preds = %19
  %28 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i64 %30) #13
  %31 = call %"class.WTF::StringImpl"* @_ZNK5blink12DataTransfer7getDataERKN3WTF6StringE(%"class.blink::DataTransfer"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %27, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  %50 = icmp ne i32 %1, 12
  %51 = call %"class.blink::HeapVector.2781"* @_ZN5blink25TargetRangesForInputEventERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %0)
  %52 = call %"class.blink::InputEvent"* @_ZN5blink10InputEvent17CreateBeforeInputENS0_9InputTypeERKN3WTF6StringENS0_15EventCancelableENS0_16EventIsComposingEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext %50, i1 zeroext false, %"class.blink::HeapVector.2781"* %51) #13
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %49, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %69

69:                                               ; preds = %68, %23
  %70 = phi %"class.blink::InputEvent"* [ %52, %68 ], [ %26, %23 ]
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::InputEvent", %"class.blink::InputEvent"* %70, i64 0, i32 0, i32 0
  %73 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %71, %"class.blink::Event"* dereferenceable(104) %72) #13
  br label %74

74:                                               ; preds = %3, %69
  %75 = phi i32 [ %73, %69 ], [ 0, %3 ]
  ret i32 %75
}

declare %"class.blink::InputEvent"* @_ZN5blink10InputEvent17CreateBeforeInputENS0_9InputTypeEPNS_12DataTransferENS0_15EventCancelableENS0_16EventIsComposingEPKNS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEE(i32, %"class.blink::DataTransfer"*, i1 zeroext, i1 zeroext, %"class.blink::HeapVector.2781"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink12DataTransfer7getDataERKN3WTF6StringE(%"class.blink::DataTransfer"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContainerNode"* @_ZN5blink40RootEditableElementOrTreeScopeRootNodeOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0)
  %3 = icmp eq %"class.blink::Element"* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0
  br label %14

6:                                                ; preds = %1
  %7 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #13
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  br label %14

14:                                               ; preds = %9, %6, %4
  %15 = phi %"class.blink::ContainerNode"* [ %5, %4 ], [ %13, %9 ], [ null, %6 ]
  ret %"class.blink::ContainerNode"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink20GetUrlStringFromNodeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %108, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %27, label %131

27:                                               ; preds = %20, %8
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 3
  %30 = bitcast %"class.blink::Member.320"* %29 to %"class.blink::ElementData"**
  %31 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %30, align 8
  %32 = icmp eq %"class.blink::ElementData"* %31, null
  br i1 %32, label %83, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::ElementData"* %31 to %"class.blink::UniqueElementData"*
  %40 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %31, i64 1, i32 1
  %41 = bitcast %"class.blink::Member.354"* %40 to %"class.blink::Attribute"**
  %42 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %39, i64 0, i32 2, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  br label %50

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %31, i64 1
  %47 = bitcast %"class.blink::ElementData"* %46 to %"class.blink::Attribute"*
  %48 = lshr i32 %35, 1
  %49 = and i32 %48, 268435455
  br label %50

50:                                               ; preds = %45, %38
  %51 = phi %"class.blink::Attribute"* [ %47, %45 ], [ %42, %38 ]
  %52 = phi i32 [ %49, %45 ], [ %44, %38 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %51, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %76, %56
  %62 = phi %"class.blink::Attribute"* [ %51, %56 ], [ %77, %76 ]
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %58
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %68, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %73, %74
  br i1 %75, label %79, label %76

76:                                               ; preds = %71, %66
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 1
  %78 = icmp eq %"class.blink::Attribute"* %77, %54
  br i1 %78, label %83, label %61

79:                                               ; preds = %71, %61
  %80 = icmp eq %"class.blink::Attribute"* %62, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 0, i32 1
  br label %85

83:                                               ; preds = %76, %79, %50, %27
  %84 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi %"class.WTF::AtomicString"* [ %84, %83 ], [ %82, %81 ]
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %90 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %90, label %160, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %160

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #13
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %96
  tail call void @llvm.trap() #13
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %160

108:                                              ; preds = %1
  %109 = icmp ne i32 %4, 32
  %110 = or i1 %6, %109
  br i1 %110, label %160, label %111

111:                                              ; preds = %108
  %112 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kImageTagE, align 8
  %113 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %116 = bitcast %"class.blink::Member.318"* %115 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %119, %121
  br i1 %122, label %123, label %160

123:                                              ; preds = %111
  %124 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %125 = bitcast %"class.blink::Node"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %126 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %126, i64 97
  %128 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %127, align 8
  %129 = tail call %"class.WTF::StringImpl"* %128(%"class.blink::Element"* %124) #13
  %130 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  br label %160

131:                                              ; preds = %20
  %132 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %133 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %16, %136
  br i1 %137, label %152, label %138

138:                                              ; preds = %131
  %139 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %140 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %16, %143
  br i1 %144, label %152, label %145

145:                                              ; preds = %138
  %146 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %147 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %16, %150
  br i1 %151, label %152, label %160

152:                                              ; preds = %145, %138, %131
  %153 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %154 = bitcast %"class.blink::Node"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %155 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %154, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %155, i64 97
  %157 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %156, align 8
  %158 = tail call %"class.WTF::StringImpl"* %157(%"class.blink::Element"* %153) #13
  %159 = ptrtoint %"class.WTF::StringImpl"* %158 to i64
  br label %160

160:                                              ; preds = %111, %108, %145, %106, %91, %85, %152, %123
  %161 = phi i64 [ %130, %123 ], [ %159, %152 ], [ %89, %85 ], [ %89, %91 ], [ %89, %106 ], [ 0, %145 ], [ 0, %108 ], [ 0, %111 ]
  %162 = inttoptr i64 %161 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %162
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WriteImageNodeToClipboardERNS_15SystemClipboardERKNS_4NodeERKN3WTF6StringE(%"class.blink::SystemClipboard"* dereferenceable(40), %"class.blink::Node"* dereferenceable(64), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 5, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  %20 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRenderingData"**
  %24 = select i1 %18, %"class.blink::NodeRenderingData"** %23, %"class.blink::NodeRenderingData"** %22
  %25 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %25, i64 0, i32 1
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %65, label %29

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, i64 92
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* nonnull %27, i32 2) #13
  br i1 %34, label %71, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*)***
  %37 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %37, i64 21
  %39 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %27) #13
  br i1 %40, label %41, label %65

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 2, i32 7
  %43 = bitcast %"class.blink::LayoutObject"** %42 to %"class.blink::LayoutImageResource"**
  %44 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutImageResource"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %44, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %47, align 8
  %49 = icmp eq %"class.blink::ImageResourceContent"* %48, null
  br i1 %49, label %65, label %50

50:                                               ; preds = %46
  %51 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nonnull %48) #13
  br i1 %51, label %65, label %52

52:                                               ; preds = %50
  %53 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %48) #13
  %54 = icmp eq %"class.blink::Image"* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = load i32, i32* %12, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %12, align 4
  br label %134

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %53, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0)) #13
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  br label %68

65:                                               ; preds = %3, %35, %46, %50, %41
  %66 = load i32, i32* %12, align 4
  %67 = add nsw i32 %66, -1
  store i32 %67, i32* %12, align 4
  br label %134

68:                                               ; preds = %58, %62
  %69 = load i32, i32* %12, align 4
  %70 = add nsw i32 %69, -1
  store i32 %70, i32* %12, align 4
  br label %78

71:                                               ; preds = %29
  %72 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLCanvasElement"*
  %73 = tail call %"class.blink::StaticBitmapImage"* @_ZNK5blink17HTMLCanvasElement8SnapshotENS_19SourceDrawingBufferE(%"class.blink::HTMLCanvasElement"* %72, i32 0) #13
  %74 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %73, i64 0, i32 0
  %75 = load i32, i32* %12, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %12, align 4
  %77 = icmp eq %"class.blink::StaticBitmapImage"* %73, null
  br i1 %77, label %134, label %78

78:                                               ; preds = %68, %71
  %79 = phi %"class.blink::Image"* [ %53, %68 ], [ %74, %71 ]
  %80 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %80) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 112, i1 false)
  %81 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %82 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %81, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::Document"*, %"class.blink::Document"** %82, align 8
  %84 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  %85 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  %86 = call %"class.WTF::StringImpl"* @_ZN5blink20GetUrlStringFromNodeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1)
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0
  %89 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %88) #13
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %5, %"class.blink::Document"* %83, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %78
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #13
  br label %106

106:                                              ; preds = %78, %102, %105
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #13
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  call void @_ZN5blink15SystemClipboard17WriteImageWithTagEPNS_5ImageERKNS_4KURLERKN3WTF6StringE(%"class.blink::SystemClipboard"* %0, %"class.blink::Image"* nonnull %79, %"class.blink::KURL"* nonnull dereferenceable(112) %5, %"class.WTF::String"* dereferenceable(8) %2) #13
  call void @_ZN5blink15SystemClipboard11CommitWriteEv(%"class.blink::SystemClipboard"* %0) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %80) #13
  %123 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %79, i64 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2736", %"class.base::RefCountedThreadSafe.2736"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw sub i32* %124, i32 1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %134

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2736", %"class.base::RefCountedThreadSafe.2736"* %123, i64 -2
  %129 = bitcast %"class.base::RefCountedThreadSafe.2736"* %128 to %"class.blink::Image"*
  %130 = bitcast %"class.base::RefCountedThreadSafe.2736"* %128 to void (%"class.blink::Image"*)***
  %131 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %131, i64 1
  %133 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %132, align 8
  call void %133(%"class.blink::Image"* nonnull %129) #13
  br label %134

134:                                              ; preds = %55, %71, %65, %122, %127
  ret void
}

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15SystemClipboard17WriteImageWithTagEPNS_5ImageERKNS_4KURLERKN3WTF6StringE(%"class.blink::SystemClipboard"*, %"class.blink::Image"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15SystemClipboard11CommitWriteEv(%"class.blink::SystemClipboard"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19FindEventTargetFromERNS_10LocalFrameERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::LocalFrame"* dereferenceable(1176), %"class.blink::VisibleSelectionTemplate"* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::VisibleSelectionTemplate"* %1) #13
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  %13 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  br i1 %12, label %24, label %14

14:                                               ; preds = %8
  %15 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %6) #13
  %16 = icmp eq %"class.blink::ContainerNode"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.blink::ContainerNode"* %15 to %"class.blink::Element"*
  br i1 %21, label %24, label %23

23:                                               ; preds = %2, %17, %14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  br label %27

24:                                               ; preds = %17, %8
  %25 = phi %"class.blink::Element"* [ %13, %8 ], [ %22, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  %26 = icmp eq %"class.blink::Element"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23, %24
  %28 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %0) #13
  %29 = call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %28) #13
  %30 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0
  br label %43

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %25, i64 0, i32 0, i32 0
  %33 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %32) #13
  %34 = icmp eq %"class.blink::ShadowRoot"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %32) #13
  %37 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %36, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 196608
  %40 = icmp eq i32 %39, 131072
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %32) #13
  br label %43

43:                                               ; preds = %31, %35, %41, %27
  %44 = phi %"class.blink::Element"* [ %42, %41 ], [ %30, %27 ], [ %25, %35 ], [ %25, %31 ]
  ret %"class.blink::Element"* %44
}

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLImageElement"* @_ZN5blink29ImageElementFromImageDocumentEPKNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Document"* %0, null
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 107
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* nonnull %0) #13
  %10 = icmp eq %"class.blink::HTMLElement"* %9, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %15
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.318"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  %32 = bitcast %"class.blink::Node"* %13 to %"class.blink::HTMLImageElement"*
  %33 = select i1 %31, %"class.blink::HTMLImageElement"* %32, %"class.blink::HTMLImageElement"* null
  br label %34

34:                                               ; preds = %3, %20, %15, %11, %8, %1
  %35 = phi %"class.blink::HTMLImageElement"* [ null, %1 ], [ null, %3 ], [ null, %8 ], [ %33, %20 ], [ null, %15 ], [ null, %11 ]
  ret %"class.blink::HTMLImageElement"* %35
}

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2699"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2699"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2699"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2699"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2699"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2699"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2700"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2700"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2699"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2699", %"class.WTF::Vector.2699"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2700"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2703"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2703"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2703"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2703"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2703"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2703"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2703"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2703"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2703"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2703"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2704"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2704"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2703"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2703", %"class.WTF::Vector.2703"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2704"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink8Document21CreateEditingTextNodeERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #13
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLSpanElement"*
  tail call void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #13
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLSpanElement"* %51
}

declare void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

declare <2 x float> @_ZNK5blink12LayoutObject25AncestorToLocalFloatPointEPKNS_20LayoutBoxModelObjectERKNS_10FloatPointEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element18GetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), i64) local_unnamed_addr #2

declare i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::FloatQuad"* dereferenceable(32), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.blink::StaticBitmapImage"* @_ZNK5blink17HTMLCanvasElement8SnapshotENS_19SourceDrawingBufferE(%"class.blink::HTMLCanvasElement"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm"*) local_unnamed_addr #2

declare void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionIteratorAlgorithm"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionIteratorAlgorithm.3351"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IncrementEv(%"class.blink::PositionIteratorAlgorithm.3351"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5AtEndEv(%"class.blink::PositionIteratorAlgorithm.3351"*) local_unnamed_addr #2

declare void @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15ComputePositionEv(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::PositionIteratorAlgorithm.3351"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink29IsVisuallyEquivalentCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::PositionTemplate.2659"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm"*) local_unnamed_addr #2

declare void @_ZN5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9DecrementEv(%"class.blink::PositionIteratorAlgorithm.3351"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink25PositionIteratorAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE7AtStartEv(%"class.blink::PositionIteratorAlgorithm.3351"*) local_unnamed_addr #2

declare signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.2659"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate.2659"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate.2659"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink36BackwardGraphemeBoundaryStateMachineC1Ev(%"class.blink::BackwardGraphemeBoundaryStateMachine"*) unnamed_addr #2

declare i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::BackwardGraphemeBoundaryStateMachine"*, i16 zeroext) local_unnamed_addr #2

declare i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine22TellEndOfPrecedingTextEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"*) local_unnamed_addr #2

declare i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"*) local_unnamed_addr #2

declare i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::BackwardGraphemeBoundaryStateMachine"*, i16 zeroext) local_unnamed_addr #2

declare void @_ZN5blink35ForwardGraphemeBoundaryStateMachineC1Ev(%"class.blink::ForwardGraphemeBoundaryStateMachine"*) unnamed_addr #2

declare i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::ForwardGraphemeBoundaryStateMachine"*, i16 zeroext) local_unnamed_addr #2

declare i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine22TellEndOfPrecedingTextEv(%"class.blink::ForwardGraphemeBoundaryStateMachine"*) local_unnamed_addr #2

declare i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::ForwardGraphemeBoundaryStateMachine"*) local_unnamed_addr #2

declare i32 @_ZN5blink35ForwardGraphemeBoundaryStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::ForwardGraphemeBoundaryStateMachine"*, i16 zeroext) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22FindNextBoundaryOffsetINS_21BackspaceStateMachineEEEiRKN3WTF6StringEi(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.blink::BackspaceStateMachine", align 4
  %4 = bitcast %"class.blink::BackspaceStateMachine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -86, i64 16, i1 false)
  call void @_ZN5blink21BackspaceStateMachineC1Ev(%"class.blink::BackspaceStateMachine"* nonnull %3) #13
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  br label %10

8:                                                ; preds = %36
  %9 = icmp sgt i32 %12, 0
  br i1 %9, label %10, label %45

10:                                               ; preds = %6, %8
  %11 = phi i32 [ %1, %6 ], [ %12, %8 ]
  %12 = add nsw i32 %11, -1
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %12
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %23, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %27 = zext i32 %12 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  br label %36

31:                                               ; preds = %19
  %32 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %33 = zext i32 %12 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  br label %36

36:                                               ; preds = %10, %15, %25, %31
  %37 = phi i16 [ 0, %15 ], [ 0, %10 ], [ %30, %25 ], [ %35, %31 ]
  %38 = call i32 @_ZN5blink21BackspaceStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::BackspaceStateMachine"* nonnull %3, i16 zeroext %37) #13
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %8, label %40

40:                                               ; preds = %36, %2
  %41 = phi i32 [ 0, %2 ], [ %38, %36 ]
  %42 = icmp eq i32 %1, 0
  %43 = icmp eq i32 %41, 1
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %8, %40
  %46 = call i32 @_ZN5blink21BackspaceStateMachine22TellEndOfPrecedingTextEv(%"class.blink::BackspaceStateMachine"* nonnull %3) #13
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i32 [ %46, %45 ], [ %41, %40 ]
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %94, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi i32 [ %56, %54 ], [ 0, %50 ]
  %59 = icmp sgt i32 %58, %1
  br i1 %59, label %60, label %94

60:                                               ; preds = %57, %92
  %61 = phi %"class.WTF::StringImpl"* [ %93, %92 ], [ %52, %57 ]
  %62 = phi i32 [ %89, %92 ], [ %1, %57 ]
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp ugt i32 %66, %62
  br i1 %67, label %68, label %85

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  br i1 %72, label %80, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::StringImpl"* %73 to i8*
  %76 = zext i32 %62 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  br label %85

80:                                               ; preds = %68
  %81 = bitcast %"class.WTF::StringImpl"* %73 to i16*
  %82 = zext i32 %62 to i64
  %83 = getelementptr inbounds i16, i16* %81, i64 %82
  %84 = load i16, i16* %83, align 2
  br label %85

85:                                               ; preds = %60, %64, %74, %80
  %86 = phi i16 [ 0, %64 ], [ 0, %60 ], [ %79, %74 ], [ %84, %80 ]
  %87 = call i32 @_ZN5blink21BackspaceStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::BackspaceStateMachine"* nonnull %3, i16 zeroext %86) #13
  %88 = icmp eq i32 %87, 1
  %89 = add nsw i32 %62, 1
  %90 = icmp slt i32 %89, %58
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  br label %60

94:                                               ; preds = %85, %57, %47
  %95 = call i32 @_ZN5blink21BackspaceStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::BackspaceStateMachine"* nonnull %3) #13
  %96 = add nsw i32 %95, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret i32 %96
}

declare void @_ZN5blink21BackspaceStateMachineC1Ev(%"class.blink::BackspaceStateMachine"*) unnamed_addr #2

declare i32 @_ZN5blink21BackspaceStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::BackspaceStateMachine"*, i16 zeroext) local_unnamed_addr #2

declare i32 @_ZN5blink21BackspaceStateMachine22TellEndOfPrecedingTextEv(%"class.blink::BackspaceStateMachine"*) local_unnamed_addr #2

declare i32 @_ZN5blink21BackspaceStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::BackspaceStateMachine"*) local_unnamed_addr #2

declare i32 @_ZN5blink21BackspaceStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::BackspaceStateMachine"*, i16 zeroext) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate.2659"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"*, %"class.blink::Node"*, i32) unnamed_addr #2

declare i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"*, i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::Node"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2659"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate.2659"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #13
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLDivElement"*
  tail call void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #13
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLDivElement"* %51
}

declare void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLParagraphElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLParagraphElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #13
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLParagraphElement"*
  tail call void @_ZN5blink20HTMLParagraphElementC1ERNS_8DocumentE(%"class.blink::HTMLParagraphElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #13
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLParagraphElement"* %51
}

declare void @_ZN5blink20HTMLParagraphElementC1ERNS_8DocumentE(%"class.blink::HTMLParagraphElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate.2718"*) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::EphemeralRangeTemplate.2718"*) local_unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::PositionTemplate.2659"*) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.2659"* sret, %"class.blink::EphemeralRangeTemplate.2718"*) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.2718"*, %"class.blink::PositionTemplate.2659"* dereferenceable(16), %"class.blink::PositionTemplate.2659"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder17SelectAllChildrenERKNS_4NodeE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVector.2781"* @_ZN5blink25MakeGarbageCollectedTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE4CallIJiPS3_EEEPS5_DpOT_(i32* dereferenceable(4), %"class.blink::StaticRange"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEEEPhm(i64 16) #13
  %4 = bitcast i8* %3 to %"class.blink::HeapVector.2781"*
  %5 = load i32, i32* %0, align 4
  %6 = bitcast %"class.blink::StaticRange"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast i8* %3 to %"class.blink::Member.2787"**
  store %"class.blink::Member.2787"* null, %"class.blink::Member.2787"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = zext i32 %5 to i64
  %14 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11StaticRangeEEEEEmm(i64 %13) #13
  %15 = lshr i64 %14, 3
  %16 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %15) #13
  %17 = ptrtoint %"class.blink::HeapVectorBacking"* %16 to i64
  %18 = bitcast i8* %3 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = trunc i64 %15 to i32
  store i32 %19, i32* %10, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.blink::HeapVectorBacking"* %16 to %"class.blink::Member.2787"*
  br i1 %21, label %30, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %16, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #13
  %26 = load %"class.blink::Member.2787"*, %"class.blink::Member.2787"** %8, align 8
  br label %30

27:                                               ; preds = %2
  %28 = getelementptr inbounds i8, i8* %3, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  br label %46

30:                                               ; preds = %23, %12
  %31 = phi %"class.blink::Member.2787"* [ %26, %23 ], [ %22, %12 ]
  %32 = getelementptr inbounds i8, i8* %3, i64 12
  %33 = bitcast i8* %32 to i32*
  store i32 %5, i32* %33, align 4
  %34 = getelementptr inbounds %"class.blink::Member.2787", %"class.blink::Member.2787"* %31, i64 %13
  %35 = inttoptr i64 %7 to i8*
  br label %36

36:                                               ; preds = %43, %30
  %37 = phi %"class.blink::Member.2787"* [ %31, %30 ], [ %44, %43 ]
  %38 = bitcast %"class.blink::Member.2787"* %37 to i64*
  store atomic i64 %7, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #13
  br label %43

43:                                               ; preds = %41, %36
  %44 = getelementptr inbounds %"class.blink::Member.2787", %"class.blink::Member.2787"* %37, i64 1
  %45 = icmp eq %"class.blink::Member.2787"* %44, %34
  br i1 %45, label %46, label %36

46:                                               ; preds = %43, %27
  %47 = getelementptr inbounds i8, i8* %3, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  ret %"class.blink::HeapVector.2781"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_11StaticRangeEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #13
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_11StaticRangeEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2787"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2787", %"class.blink::Member.2787"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2787"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11StaticRangeEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11StaticRangeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StaticRange"*
  tail call void @_ZNK5blink11StaticRange5TraceEPNS_7VisitorE(%"class.blink::StaticRange"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink11StaticRange5TraceEPNS_7VisitorE(%"class.blink::StaticRange"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11StaticRangeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.22, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11StaticRangeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11StaticRangeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blinkL38NextVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_: argument 0"}
!6 = distinct !{!6, !"_ZN5blinkL38NextVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_16PositionTemplateIT_EERKS6_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blinkL38NextVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_: argument 0"}
!9 = distinct !{!9, !"_ZN5blinkL38NextVisuallyDistinctCandidateAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_16PositionTemplateIT_EERKS6_"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blinkL23NormalizeRangeAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_22EphemeralRangeTemplateIT_EERKS6_: argument 0"}
!13 = distinct !{!13, !"_ZN5blinkL23NormalizeRangeAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_22EphemeralRangeTemplateIT_EERKS6_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blinkL23NormalizeRangeAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_22EphemeralRangeTemplateIT_EERKS6_: argument 0"}
!16 = distinct !{!16, !"_ZN5blinkL23NormalizeRangeAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_22EphemeralRangeTemplateIT_EERKS6_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!20 = distinct !{!20, !21, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
