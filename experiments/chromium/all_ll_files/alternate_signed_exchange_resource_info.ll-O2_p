; ModuleID = '../../third_party/blink/renderer/core/loader/alternate_signed_exchange_resource_info.cc'
source_filename = "../../third_party/blink/renderer/core/loader/alternate_signed_exchange_resource_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AlternateSignedExchangeResourceInfo" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::KURL", %"class.WTF::Vector" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.5"*, i32, i32 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* }
%"class.blink::AlternateSignedExchangeResourceInfo::Entry" = type { %"class.blink::KURL", %"class.blink::KURL", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.std::__1::pair" = type { %"class.WTF::String", %"struct.std::__1::pair.21" }
%"struct.std::__1::pair.21" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::HashMap.16" = type { %"class.WTF::HashTable.17" }
%"class.WTF::HashTable.17" = type <{ %"struct.WTF::KeyValuePair.20"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.20" = type { %"struct.std::__1::pair", %"class.blink::KURL" }
%"class.blink::LinkHeaderSet" = type { %"class.WTF::Vector.22" }
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"class.blink::LinkHeader"*, i32, i32 }
%"class.blink::LinkHeader" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::String" }
%"class.WTF::ConditionalDestructor.11" = type { i8 }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"class.WTF::String"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.39 }
%union.anon.39 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::basic_string"* }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.46" }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.48" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.blink::WebPackageRequestMatcher" = type { %"class.net::HttpRequestHeaders" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES5_RKS8_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES5_EENS2_IPS9_bEERKT0_ = comdat any

$_ZNSt3__14pairIN3WTF6StringENS0_IS2_S2_EEEaSEOS4_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES5_EEPKS9_RKT0_ = comdat any

$_ZN5blink35AlternateSignedExchangeResourceInfo5EntryC2ERKNS_4KURLES4_RKN3WTF6StringES8_S8_ = comdat any

$_ZN5blink10LinkHeaderD2Ev = comdat any

$_ZNK3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6LookupINS_22IdentityHashTranslatorISG_SL_SC_EES2_EEPKSE_RKT0_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6insertINS_17HashMapTranslatorISL_SG_SC_EERS2_SD_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E16LookupForWritingINS_22IdentityHashTranslatorISG_SL_SC_EES2_EENS5_4pairIPSE_bEERKT0_ = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

@_ZN5blink12_GLOBAL__N_120kDefaultAcceptHeaderE = internal constant [4 x i8] c"*/*\00", align 1
@_ZN5blink12_GLOBAL__N_123kStylesheetAcceptHeaderE = internal constant [19 x i8] c"text/css,*/*;q=0.1\00", align 16
@_ZN5blink12_GLOBAL__N_118kImageAcceptHeaderE = internal constant [65 x i8] c"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8\00", align 16
@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZN3net18HttpRequestHeaders7kAcceptE = external constant [0 x i8], align 1
@_ZN5blink12_GLOBAL__N_110kAlternateE = internal constant [10 x i8] c"alternate\00", align 1
@_ZN5blink23kSignedExchangeMimeTypeE = external constant [0 x i8], align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairINS_6StringENS3_IS4_S4_EEEEN5blink4KURLEEEEEPKcv = private unnamed_addr constant [150 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<std::__1::pair<WTF::String, std::__1::pair<WTF::String, WTF::String> >, blink::KURL>]\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink12_GLOBAL__N_114kAllowedAltSxgE = internal constant [16 x i8] c"allowed-alt-sxg\00", align 16
@.str.4 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [197 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::AlternateSignedExchangeResourceInfo::Entry, std::__1::default_delete<blink::AlternateSignedExchangeResourceInfo::Entry> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink4KURLENS_6VectorINSt3__110unique_ptrINS2_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [271 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::KURL, WTF::Vector<std::__1::unique_ptr<blink::AlternateSignedExchangeResourceInfo::Entry, std::__1::default_delete<blink::AlternateSignedExchangeResourceInfo::Entry> >, 0, WTF::PartitionAllocator> >]\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink35AlternateSignedExchangeResourceInfoC1EN3WTF7HashMapINS_4KURLENS1_6VectorINSt3__110unique_ptrINS0_5EntryENS5_14default_deleteIS7_EEEELj0ENS1_18PartitionAllocatorEEENS_8KURLHashENS1_10HashTraitsIS3_EENSE_ISC_EESB_EE = hidden unnamed_addr alias void (%"class.blink::AlternateSignedExchangeResourceInfo"*, %"class.WTF::HashMap"*), void (%"class.blink::AlternateSignedExchangeResourceInfo"*, %"class.WTF::HashMap"*)* @_ZN5blink35AlternateSignedExchangeResourceInfoC2EN3WTF7HashMapINS_4KURLENS1_6VectorINSt3__110unique_ptrINS0_5EntryENS5_14default_deleteIS7_EEEELj0ENS1_18PartitionAllocatorEEENS_8KURLHashENS1_10HashTraitsIS3_EENSE_ISC_EESB_EE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AlternateSignedExchangeResourceInfo"* @_ZN5blink35AlternateSignedExchangeResourceInfo13CreateIfValidERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"struct.std::__1::pair", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"struct.std::__1::pair", align 8
  %13 = alloca %"class.WTF::HashMap.16", align 8
  %14 = alloca %"class.blink::LinkHeaderSet", align 8
  %15 = alloca %"class.WTF::HashMap", align 8
  %16 = alloca %"class.blink::LinkHeaderSet", align 8
  %17 = alloca %"class.blink::KURL", align 8
  %18 = alloca %"class.WTF::Vector", align 8
  %19 = bitcast %"class.WTF::HashMap.16"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::HashMap.16", %"class.WTF::HashMap.16"* %13, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::HashMap.16", %"class.WTF::HashMap.16"* %13, i64 0, i32 0, i32 1
  %22 = bitcast %"class.WTF::HashMap.16"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 20, i1 false) #11
  %23 = bitcast %"class.blink::LinkHeaderSet"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.blink::LinkHeaderSet", %"class.blink::LinkHeaderSet"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::LinkHeaderSet", %"class.blink::LinkHeaderSet"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast %"class.blink::LinkHeaderSet"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13LinkHeaderSetC1ERKN3WTF6StringE(%"class.blink::LinkHeaderSet"* nonnull %14, %"class.WTF::String"* dereferenceable(8) %0) #11
  %27 = load %"class.blink::LinkHeader"*, %"class.blink::LinkHeader"** %24, align 8
  %28 = load i32, i32* %25, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %27, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %56, label %32

32:                                               ; preds = %2
  %33 = bitcast %"class.WTF::StringView"* %9 to i8*
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %9 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %39 = bitcast %"class.WTF::StringView"* %7 to i8*
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  %43 = bitcast %"class.WTF::StringView"* %7 to i64*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %45 = bitcast %"class.WTF::StringView"* %8 to i8*
  %46 = bitcast %"class.WTF::StringView"* %8 to i64*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %49 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  %51 = bitcast %"struct.std::__1::pair"* %12 to i8*
  %52 = getelementptr inbounds %"class.WTF::HashMap.16", %"class.WTF::HashMap.16"* %13, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1, i32 1, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0, i32 0, i32 0
  br label %93

56:                                               ; preds = %230, %2
  %57 = bitcast %"class.WTF::HashMap"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0, i32 2
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0, i32 3
  %62 = bitcast %"class.WTF::HashMap"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 20, i1 false) #11
  %63 = bitcast %"class.blink::LinkHeaderSet"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.blink::LinkHeaderSet", %"class.blink::LinkHeaderSet"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::LinkHeaderSet", %"class.blink::LinkHeaderSet"* %16, i64 0, i32 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.blink::LinkHeaderSet"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13LinkHeaderSetC1ERKN3WTF6StringE(%"class.blink::LinkHeaderSet"* nonnull %16, %"class.WTF::String"* dereferenceable(8) %1) #11
  %67 = load %"class.blink::LinkHeader"*, %"class.blink::LinkHeader"** %64, align 8
  %68 = load i32, i32* %65, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %67, i64 %69
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %233, label %72

72:                                               ; preds = %56
  %73 = bitcast %"class.WTF::StringView"* %3 to i8*
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  %77 = bitcast %"class.WTF::StringView"* %3 to i64*
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %79 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  %80 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  %81 = bitcast %"struct.std::__1::pair"* %6 to i8*
  %82 = getelementptr inbounds %"class.WTF::HashMap.16", %"class.WTF::HashMap.16"* %13, i64 0, i32 0
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 1, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 0
  %87 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0
  %88 = bitcast %"class.WTF::Vector"* %18 to i8*
  %89 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 2
  %91 = bitcast %"class.WTF::Vector"* %18 to i64*
  %92 = bitcast %"class.WTF::Vector"* %18 to %"class.WTF::ConditionalDestructor.11"*
  br label %236

93:                                               ; preds = %32, %230
  %94 = phi %"class.blink::LinkHeader"* [ %27, %32 ], [ %231, %230 ]
  %95 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 14
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  br i1 %97, label %156, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 0
  %100 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %155, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %155, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %154, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %153, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %153, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 1, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %120
  store i8* null, i8** %35, align 8
  %125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %125, i64* %37, align 8
  br label %130

126:                                              ; preds = %120
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %34, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %36, align 8
  br label %130

130:                                              ; preds = %126, %124
  %131 = phi i32 [ %128, %126 ], [ 0, %124 ]
  store i32 %131, i32* %38, align 8
  %132 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [10 x i8]* nonnull dereferenceable(10) @_ZN5blink12_GLOBAL__N_110kAlternateE) #11
  br i1 %132, label %133, label %152

133:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %134 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 3, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  store i8* null, i8** %41, align 8
  %138 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %138, i64* %43, align 8
  br label %143

139:                                              ; preds = %133
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %40, align 8
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 1
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %42, align 8
  br label %143

143:                                              ; preds = %139, %137
  %144 = phi i32 [ %141, %139 ], [ 0, %137 ]
  store i32 %144, i32* %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %145 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink23kSignedExchangeMimeTypeE, i64 0, i64 0)) #12
  %146 = icmp ult i64 %145, 4294967296
  br i1 %146, label %148, label %147, !prof !3

147:                                              ; preds = %143
  call void @llvm.trap() #11
  unreachable

148:                                              ; preds = %143
  %149 = trunc i64 %145 to i32
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %150, i64* %46, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink23kSignedExchangeMimeTypeE, i64 0, i64 0), i8** %47, align 8
  store i32 %149, i32* %48, align 8
  %151 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br i1 %151, label %157, label %230

152:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %230

153:                                              ; preds = %116, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %230

154:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %230

155:                                              ; preds = %103, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %230

156:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %230

157:                                              ; preds = %148
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 112, i1 false) #11
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %10, %"class.WTF::String"* dereferenceable(8) %99) #11
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 112, i1 false) #11
  %158 = load i8, i8* %108, align 8, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %161, !prof !4

160:                                              ; preds = %157
  call void @llvm.trap() #11
  unreachable

161:                                              ; preds = %157
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %11, %"class.WTF::String"* dereferenceable(8) %112) #11
  %162 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %10) #11
  br i1 %162, label %163, label %229

163:                                              ; preds = %161
  %164 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %11) #11
  br i1 %164, label %165, label %229

165:                                              ; preds = %163
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %166 = load i8, i8* %108, align 8, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %169, !prof !4

168:                                              ; preds = %165
  call void @llvm.trap() #11
  unreachable

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 11
  %171 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 0, i32 12
  call fastcc void @_ZN5blink12_GLOBAL__N_17MakeKeyERKN3WTF6StringES4_S4_(%"struct.std::__1::pair"* nonnull sret %12, %"class.WTF::String"* dereferenceable(8) %112, %"class.WTF::String"* dereferenceable(8) %170, %"class.WTF::String"* dereferenceable(8) %171) #11
  %172 = call { %"struct.WTF::KeyValuePair.20"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES5_RKS8_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.17"* nonnull %52, %"struct.std::__1::pair"* nonnull dereferenceable(24) %12, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #11
  %173 = extractvalue { %"struct.WTF::KeyValuePair.20"*, i8 } %172, 1
  %174 = and i8 %173, 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %180

176:                                              ; preds = %169
  %177 = extractvalue { %"struct.WTF::KeyValuePair.20"*, i8 } %172, 0
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %177, i64 0, i32 1
  %179 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %178, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #11
  br label %180

180:                                              ; preds = %176, %169
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #11
  br label %196

196:                                              ; preds = %195, %192, %180
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #11
  br label %212

212:                                              ; preds = %211, %208, %196
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #11
  br label %228

228:                                              ; preds = %227, %224, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  br label %229

229:                                              ; preds = %228, %163, %161
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %50) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %49) #11
  br label %230

230:                                              ; preds = %148, %152, %153, %154, %155, %156, %229
  %231 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %94, i64 1
  %232 = icmp eq %"class.blink::LinkHeader"* %231, %30
  br i1 %232, label %56, label %93

233:                                              ; preds = %447, %56
  %234 = load i32, i32* %60, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %466, label %450

236:                                              ; preds = %72, %447
  %237 = phi %"class.blink::LinkHeader"* [ %67, %72 ], [ %448, %447 ]
  %238 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 14
  %239 = load i8, i8* %238, align 8, !range !2
  %240 = icmp eq i8 %239, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  br i1 %240, label %274, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 0
  %243 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %273, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %273, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 10
  %252 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %272, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 1, i32 0, i32 0
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %260, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  store i8* null, i8** %75, align 8
  %264 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %264, i64* %77, align 8
  br label %269

265:                                              ; preds = %259
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %74, align 8
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 1
  store %"class.WTF::StringImpl"* %268, %"class.WTF::StringImpl"** %76, align 8
  br label %269

269:                                              ; preds = %265, %263
  %270 = phi i32 [ %267, %265 ], [ 0, %263 ]
  store i32 %270, i32* %78, align 8
  %271 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [16 x i8]* nonnull dereferenceable(16) @_ZN5blink12_GLOBAL__N_114kAllowedAltSxgE) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br i1 %271, label %275, label %447

272:                                              ; preds = %255, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %447

273:                                              ; preds = %246, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %447

274:                                              ; preds = %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %447

275:                                              ; preds = %269
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 112, i1 false) #11
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %242) #11
  %276 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %4) #11
  br i1 %276, label %277, label %347

277:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %80) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 112, i1 false) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  %278 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 11
  %279 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 0, i32 12
  call fastcc void @_ZN5blink12_GLOBAL__N_17MakeKeyERKN3WTF6StringES4_S4_(%"struct.std::__1::pair"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %242, %"class.WTF::String"* dereferenceable(8) %278, %"class.WTF::String"* dereferenceable(8) %279) #11
  %280 = call %"struct.WTF::KeyValuePair.20"* @_ZNK3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES5_EEPKS9_RKT0_(%"class.WTF::HashTable.17"* nonnull %82, %"struct.std::__1::pair"* nonnull dereferenceable(24) %6) #11
  %281 = icmp eq %"struct.WTF::KeyValuePair.20"* %280, null
  %282 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %20, align 8
  %283 = load i32, i32* %21, align 8
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %282, i64 %284
  %286 = select i1 %281, %"struct.WTF::KeyValuePair.20"* %285, %"struct.WTF::KeyValuePair.20"* %280
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %277
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #11
  br label %302

302:                                              ; preds = %301, %298, %277
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #11
  br label %318

318:                                              ; preds = %317, %314, %302
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #11
  br label %334

334:                                              ; preds = %333, %330, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  %335 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %20, align 8
  %336 = load i32, i32* %21, align 8
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %335, i64 %337
  %339 = icmp eq %"struct.WTF::KeyValuePair.20"* %286, %338
  br i1 %339, label %343, label %340

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %286, i64 0, i32 1
  %342 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %341) #11
  br label %343

343:                                              ; preds = %340, %334
  %344 = call i8* @_Znwm(i64 248) #13
  %345 = bitcast i8* %344 to %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*
  call void @_ZN5blink35AlternateSignedExchangeResourceInfo5EntryC2ERKNS_4KURLES4_RKN3WTF6StringES8_S8_(%"class.blink::AlternateSignedExchangeResourceInfo::Entry"* nonnull %345, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.blink::KURL"* nonnull dereferenceable(112) %5, %"class.WTF::String"* dereferenceable(8) %251, %"class.WTF::String"* dereferenceable(8) %278, %"class.WTF::String"* dereferenceable(8) %279) #11
  %346 = ptrtoint i8* %344 to i64
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %80) #11
  br label %347

347:                                              ; preds = %275, %343
  %348 = phi i64 [ %346, %343 ], [ 0, %275 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %79) #11
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %447, label %350

350:                                              ; preds = %347
  %351 = inttoptr i64 %348 to %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %86) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 112, i1 false)
  %352 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %351, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %17, %"class.blink::KURL"* dereferenceable(112) %352) #11
  %353 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6LookupINS_22IdentityHashTranslatorISG_SL_SC_EES2_EEPKSE_RKT0_(%"class.WTF::HashTable"* nonnull %87, %"class.blink::KURL"* nonnull dereferenceable(112) %17) #11
  %354 = icmp eq %"struct.WTF::KeyValuePair"* %353, null
  %355 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %58, align 8
  %356 = load i32, i32* %59, align 8
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %355, i64 %357
  %359 = select i1 %354, %"struct.WTF::KeyValuePair"* %358, %"struct.WTF::KeyValuePair"* %353
  %360 = icmp eq %"struct.WTF::KeyValuePair"* %359, %358
  br i1 %360, label %361, label %391

361:                                              ; preds = %350
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #11
  %362 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEEEEmm(i64 4) #11
  %363 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %362, i8* getelementptr inbounds ([197 x i8], [197 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %364 = ptrtoint i8* %363 to i64
  store atomic i64 %364, i64* %91 monotonic, align 8
  %365 = lshr i64 %362, 3
  %366 = trunc i64 %365 to i32
  store i32 %366, i32* %89, align 8
  %367 = bitcast i8* %363 to %"class.std::__1::unique_ptr.5"*
  %368 = load i32, i32* %90, align 4
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %367, i64 %369
  %371 = bitcast %"class.std::__1::unique_ptr.5"* %370 to i64*
  store i64 %348, i64* %371, align 8
  %372 = load i32, i32* %90, align 4
  %373 = add i32 %372, 1
  store i32 %373, i32* %90, align 4
  %374 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6insertINS_17HashMapTranslatorISL_SG_SC_EERS2_SD_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %87, %"class.blink::KURL"* nonnull dereferenceable(112) %17, %"class.WTF::Vector"* nonnull dereferenceable(16) %18) #11
  %375 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %374, 1
  %376 = and i8 %375, 1
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %378, label %390

378:                                              ; preds = %361
  %379 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %374, 0
  %380 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %379, i64 0, i32 1
  %381 = load i64, i64* %91, align 8
  %382 = bitcast %"class.WTF::Vector"* %380 to i64*
  %383 = load i64, i64* %382, align 8
  store atomic i64 %383, i64* %91 monotonic, align 8
  store atomic i64 %381, i64* %382 monotonic, align 8
  %384 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %379, i64 0, i32 1, i32 0, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = load i32, i32* %89, align 8
  store i32 %386, i32* %384, align 4
  store i32 %385, i32* %89, align 8
  %387 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %379, i64 0, i32 1, i32 0, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = load i32, i32* %90, align 4
  store i32 %389, i32* %387, align 4
  store i32 %388, i32* %90, align 4
  br label %390

390:                                              ; preds = %361, %378
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #11
  br label %446

391:                                              ; preds = %350
  %392 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %359, i64 0, i32 1
  %393 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %359, i64 0, i32 1, i32 0, i32 0, i32 2
  %394 = load i32, i32* %393, align 4
  %395 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %359, i64 0, i32 1, i32 0, i32 0, i32 1
  %396 = load i32, i32* %395, align 8
  %397 = icmp eq i32 %394, %396
  br i1 %397, label %398, label %437, !prof !4

398:                                              ; preds = %391
  %399 = add i32 %394, 1
  %400 = lshr i32 %394, 2
  %401 = add i32 %399, %400
  %402 = icmp ugt i32 %401, 4
  %403 = select i1 %402, i32 %401, i32 4
  %404 = icmp ugt i32 %403, %399
  %405 = select i1 %404, i32 %403, i32 %399
  %406 = icmp ult i32 %394, %405
  br i1 %406, label %407, label %437, !prof !3

407:                                              ; preds = %398
  %408 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %392, i64 0, i32 0, i32 0, i32 0
  %409 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %408, align 8
  %410 = icmp eq %"class.std::__1::unique_ptr.5"* %409, null
  %411 = zext i32 %405 to i64
  %412 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEEEEmm(i64 %411) #11
  %413 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %412, i8* getelementptr inbounds ([197 x i8], [197 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %410, label %414, label %419

414:                                              ; preds = %407
  %415 = ptrtoint i8* %413 to i64
  %416 = bitcast %"class.WTF::Vector"* %392 to i64*
  store atomic i64 %415, i64* %416 monotonic, align 8
  %417 = lshr i64 %412, 3
  %418 = trunc i64 %417 to i32
  store i32 %418, i32* %395, align 8
  br label %437

419:                                              ; preds = %407
  %420 = lshr i64 %412, 3
  %421 = ptrtoint i8* %413 to i64
  %422 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %408, align 8
  %423 = icmp ne i8* %413, null
  %424 = icmp ne %"class.std::__1::unique_ptr.5"* %422, null
  %425 = and i1 %423, %424
  %426 = bitcast %"class.std::__1::unique_ptr.5"* %422 to i8*
  br i1 %425, label %427, label %433, !prof !3

427:                                              ; preds = %419
  %428 = load i32, i32* %393, align 4
  %429 = zext i32 %428 to i64
  %430 = shl nuw nsw i64 %429, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %413, i8* nonnull align 8 %426, i64 %430, i1 false) #11
  %431 = bitcast %"class.WTF::Vector"* %392 to i8**
  %432 = load i8*, i8** %431, align 8
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi i8* [ %432, %427 ], [ %426, %419 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %434) #11
  %435 = bitcast %"class.WTF::Vector"* %392 to i64*
  store atomic i64 %421, i64* %435 monotonic, align 8
  %436 = trunc i64 %420 to i32
  store i32 %436, i32* %395, align 8
  br label %437

437:                                              ; preds = %391, %398, %414, %433
  %438 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %392, i64 0, i32 0, i32 0, i32 0
  %439 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %438, align 8
  %440 = load i32, i32* %393, align 4
  %441 = zext i32 %440 to i64
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %439, i64 %441
  %443 = bitcast %"class.std::__1::unique_ptr.5"* %442 to i64*
  store i64 %348, i64* %443, align 8
  %444 = load i32, i32* %393, align 4
  %445 = add i32 %444, 1
  store i32 %445, i32* %393, align 4
  br label %446

446:                                              ; preds = %390, %437
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %86) #11
  br label %447

447:                                              ; preds = %347, %272, %273, %274, %269, %446
  %448 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %237, i64 1
  %449 = icmp eq %"class.blink::LinkHeader"* %448, %70
  br i1 %449, label %233, label %236

450:                                              ; preds = %233
  %451 = call i8* @_Znwm(i64 24) #13
  %452 = bitcast %"class.WTF::HashMap"* %15 to i64*
  %453 = load i64, i64* %452, align 8
  store atomic i64 0, i64* %452 monotonic, align 8
  %454 = load i32, i32* %59, align 8
  store i32 0, i32* %59, align 8
  store i32 0, i32* %60, align 4
  %455 = load i32, i32* %61, align 8
  %456 = and i32 %455, 2147483647
  %457 = and i32 %455, -2147483648
  store i32 %457, i32* %61, align 8
  %458 = getelementptr inbounds i8, i8* %451, i64 8
  %459 = bitcast i8* %458 to i32*
  %460 = getelementptr inbounds i8, i8* %451, i64 12
  %461 = bitcast i8* %460 to i32*
  %462 = getelementptr inbounds i8, i8* %451, i64 16
  %463 = bitcast i8* %462 to i32*
  %464 = bitcast i8* %451 to i64*
  store atomic i64 %453, i64* %464 monotonic, align 8
  store i32 %454, i32* %459, align 4
  store i32 %234, i32* %461, align 4
  store i32 %456, i32* %463, align 8
  %465 = bitcast i8* %451 to %"class.blink::AlternateSignedExchangeResourceInfo"*
  br label %466

466:                                              ; preds = %233, %450
  %467 = phi %"class.blink::AlternateSignedExchangeResourceInfo"* [ %465, %450 ], [ null, %233 ]
  %468 = load %"class.blink::LinkHeader"*, %"class.blink::LinkHeader"** %64, align 8
  %469 = icmp eq %"class.blink::LinkHeader"* %468, null
  br i1 %469, label %486, label %470, !prof !3

470:                                              ; preds = %466
  %471 = bitcast %"class.blink::LinkHeader"* %468 to i8*
  %472 = load i32, i32* %65, align 4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %484, label %474, !prof !4

474:                                              ; preds = %470
  %475 = zext i32 %472 to i64
  %476 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %468, i64 %475
  br label %477

477:                                              ; preds = %477, %474
  %478 = phi %"class.blink::LinkHeader"* [ %479, %477 ], [ %468, %474 ]
  call void @_ZN5blink10LinkHeaderD2Ev(%"class.blink::LinkHeader"* %478) #11
  %479 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %478, i64 1
  %480 = icmp eq %"class.blink::LinkHeader"* %479, %476
  br i1 %480, label %481, label %477

481:                                              ; preds = %477
  store i32 0, i32* %65, align 4
  %482 = bitcast %"class.blink::LinkHeaderSet"* %16 to i8**
  %483 = load i8*, i8** %482, align 8
  br label %484

484:                                              ; preds = %481, %470
  %485 = phi i8* [ %483, %481 ], [ %471, %470 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %485) #11
  store %"class.blink::LinkHeader"* null, %"class.blink::LinkHeader"** %64, align 8
  br label %486

486:                                              ; preds = %466, %484
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #11
  %487 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %58, align 8
  %488 = icmp eq %"struct.WTF::KeyValuePair"* %487, null
  br i1 %488, label %509, label %489, !prof !3

489:                                              ; preds = %486
  %490 = load i32, i32* %59, align 8
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %489
  %493 = zext i32 %490 to i64
  br label %494

494:                                              ; preds = %504, %492
  %495 = phi i64 [ 0, %492 ], [ %505, %504 ]
  %496 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %487, i64 %495, i32 0, i32 4
  %497 = bitcast %"class.WTF::String"* %496 to i8**
  %498 = load i8*, i8** %497, align 8
  %499 = icmp eq i8* %498, inttoptr (i64 -1 to i8*)
  br i1 %499, label %504, label %500

500:                                              ; preds = %494
  %501 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %487, i64 %495, i32 1
  %502 = bitcast %"class.WTF::Vector"* %501 to %"class.WTF::ConditionalDestructor.11"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* %502) #11
  %503 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %487, i64 %495, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %503) #11
  br label %504

504:                                              ; preds = %500, %494
  %505 = add nuw nsw i64 %495, 1
  %506 = icmp eq i64 %505, %493
  br i1 %506, label %507, label %494

507:                                              ; preds = %504, %489
  %508 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %487, i64 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %508) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %58, align 8
  br label %509

509:                                              ; preds = %486, %507
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  %510 = load %"class.blink::LinkHeader"*, %"class.blink::LinkHeader"** %24, align 8
  %511 = icmp eq %"class.blink::LinkHeader"* %510, null
  br i1 %511, label %528, label %512, !prof !3

512:                                              ; preds = %509
  %513 = bitcast %"class.blink::LinkHeader"* %510 to i8*
  %514 = load i32, i32* %25, align 4
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %526, label %516, !prof !4

516:                                              ; preds = %512
  %517 = zext i32 %514 to i64
  %518 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %510, i64 %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi %"class.blink::LinkHeader"* [ %521, %519 ], [ %510, %516 ]
  call void @_ZN5blink10LinkHeaderD2Ev(%"class.blink::LinkHeader"* %520) #11
  %521 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %520, i64 1
  %522 = icmp eq %"class.blink::LinkHeader"* %521, %518
  br i1 %522, label %523, label %519

523:                                              ; preds = %519
  store i32 0, i32* %25, align 4
  %524 = bitcast %"class.blink::LinkHeaderSet"* %14 to i8**
  %525 = load i8*, i8** %524, align 8
  br label %526

526:                                              ; preds = %523, %512
  %527 = phi i8* [ %525, %523 ], [ %513, %512 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %527) #11
  store %"class.blink::LinkHeader"* null, %"class.blink::LinkHeader"** %24, align 8
  br label %528

528:                                              ; preds = %509, %526
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %529 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %20, align 8
  %530 = icmp eq %"struct.WTF::KeyValuePair.20"* %529, null
  br i1 %530, label %599, label %531, !prof !3

531:                                              ; preds = %528
  %532 = load i32, i32* %21, align 8
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %597, label %534

534:                                              ; preds = %531
  %535 = zext i32 %532 to i64
  br label %536

536:                                              ; preds = %594, %534
  %537 = phi i64 [ 0, %534 ], [ %595, %594 ]
  %538 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %529, i64 %537
  %539 = bitcast %"struct.WTF::KeyValuePair.20"* %538 to i8**
  %540 = load i8*, i8** %539, align 8
  %541 = icmp eq i8* %540, inttoptr (i64 -1 to i8*)
  br i1 %541, label %594, label %542

542:                                              ; preds = %536
  %543 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %529, i64 %537, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %543) #11
  %544 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %529, i64 %537, i32 0, i32 1, i32 1, i32 0, i32 0
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %544, align 8
  %546 = icmp eq %"class.WTF::StringImpl"* %545, null
  br i1 %546, label %560, label %547

547:                                              ; preds = %542
  %548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %549 = load atomic i32, i32* %548 monotonic, align 4
  %550 = and i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 0
  %553 = load i32, i32* %552, align 4
  br i1 %551, label %554, label %556

554:                                              ; preds = %547
  %555 = add i32 %553, -1
  store i32 %555, i32* %552, align 4
  br label %556

556:                                              ; preds = %554, %547
  %557 = phi i32 [ %555, %554 ], [ %553, %547 ]
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %560

559:                                              ; preds = %556
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %545) #11
  br label %560

560:                                              ; preds = %559, %556, %542
  %561 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %529, i64 %537, i32 0, i32 1, i32 0, i32 0, i32 0
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %561, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %562, null
  br i1 %563, label %577, label %564

564:                                              ; preds = %560
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %577

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %562) #11
  br label %577

577:                                              ; preds = %576, %573, %560
  %578 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %538, i64 0, i32 0, i32 0, i32 0, i32 0
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %580, label %594, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  br i1 %585, label %588, label %590

588:                                              ; preds = %581
  %589 = add i32 %587, -1
  store i32 %589, i32* %586, align 4
  br label %590

590:                                              ; preds = %588, %581
  %591 = phi i32 [ %589, %588 ], [ %587, %581 ]
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %579) #11
  br label %594

594:                                              ; preds = %593, %590, %577, %536
  %595 = add nuw nsw i64 %537, 1
  %596 = icmp eq i64 %595, %535
  br i1 %596, label %597, label %536

597:                                              ; preds = %594, %531
  %598 = bitcast %"struct.WTF::KeyValuePair.20"* %529 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %598) #11
  store %"struct.WTF::KeyValuePair.20"* null, %"struct.WTF::KeyValuePair.20"** %20, align 8
  br label %599

599:                                              ; preds = %528, %597
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  ret %"class.blink::AlternateSignedExchangeResourceInfo"* %467
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink13LinkHeaderSetC1ERKN3WTF6StringE(%"class.blink::LinkHeaderSet"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.11"* %0 to %"class.std::__1::unique_ptr.5"**
  %3 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.5"* %3, null
  br i1 %4, label %82, label %5, !prof !3

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::unique_ptr.5"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.11", %"class.WTF::ConditionalDestructor.11"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.11"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %80, label %11, !prof !4

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %3, i64 %12
  br label %14

14:                                               ; preds = %74, %11
  %15 = phi %"class.std::__1::unique_ptr.5"* [ %75, %74 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %16, align 8
  store %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* null, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %16, align 8
  %18 = icmp eq %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, null
  br i1 %18, label %74, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, i64 0, i32 4, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #11
  br label %36

36:                                               ; preds = %35, %32, %19
  %37 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %52, %49, %36
  %54 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %53, %66, %69
  %71 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %71) #11
  %72 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %72) #11
  %73 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %17, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %70, %14
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %15, i64 1
  %76 = icmp eq %"class.std::__1::unique_ptr.5"* %75, %13
  br i1 %76, label %77, label %14

77:                                               ; preds = %74
  store i32 0, i32* %8, align 4
  %78 = bitcast %"class.WTF::ConditionalDestructor.11"* %0 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %5
  %81 = phi i8* [ %79, %77 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %81) #11
  store %"class.std::__1::unique_ptr.5"* null, %"class.std::__1::unique_ptr.5"** %2, align 8
  br label %82

82:                                               ; preds = %1, %80
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink35AlternateSignedExchangeResourceInfoC2EN3WTF7HashMapINS_4KURLENS1_6VectorINSt3__110unique_ptrINS0_5EntryENS5_14default_deleteIS7_EEEELj0ENS1_18PartitionAllocatorEEENS_8KURLHashENS1_10HashTraitsIS3_EENSE_ISC_EESB_EE(%"class.blink::AlternateSignedExchangeResourceInfo"* nocapture, %"class.WTF::HashMap"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 3
  %6 = bitcast %"class.WTF::HashMap"* %1 to i64*
  %7 = bitcast %"class.blink::AlternateSignedExchangeResourceInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #11
  %8 = load i64, i64* %6, align 8
  %9 = bitcast %"class.blink::AlternateSignedExchangeResourceInfo"* %0 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %3, align 4
  store i32 %11, i32* %10, align 4
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %14 = load i32, i32* %4, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %4, align 4
  store i32 %14, i32* %13, align 4
  %16 = load i32, i32* %5, align 8
  %17 = and i32 %16, 2147483647
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2147483647
  %21 = and i32 %16, -2147483648
  %22 = or i32 %20, %21
  store i32 %22, i32* %5, align 8
  %23 = load i32, i32* %18, align 8
  %24 = and i32 %23, -2147483648
  %25 = or i32 %24, %17
  store i32 %25, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLEN4absl8optionalINS_12ResourceTypeEEERKN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"*, %"class.blink::KURL"* dereferenceable(112), i16, %"class.WTF::Vector.32"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = trunc i16 %2 to i8
  %6 = lshr i16 %2, 8
  %7 = trunc i16 %6 to i8
  %8 = icmp eq i8 %5, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = icmp eq i8 %7, 1
  %11 = select i1 %10, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink12_GLOBAL__N_118kImageAcceptHeaderE, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_120kDefaultAcceptHeaderE, i64 0, i64 0)
  %12 = icmp eq i8 %7, 2
  %13 = select i1 %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN5blink12_GLOBAL__N_123kStylesheetAcceptHeaderE, i64 0, i64 0), i8* %11
  br label %14

14:                                               ; preds = %9, %4
  %15 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_120kDefaultAcceptHeaderE, i64 0, i64 0), %4 ], [ %13, %9 ]
  %16 = tail call %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLEPKcRKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"* %0, %"class.blink::KURL"* dereferenceable(112) %1, i8* nonnull %15, %"class.WTF::Vector.32"* dereferenceable(16) %3)
  ret %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLEPKcRKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"*, %"class.blink::KURL"* dereferenceable(112), i8*, %"class.WTF::Vector.32"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.net::HttpRequestHeaders", align 8
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca %"class.blink::WebPackageRequestMatcher", align 8
  %15 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0
  %16 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6LookupINS_22IdentityHashTranslatorISG_SL_SC_EES2_EEPKSE_RKT0_(%"class.WTF::HashTable"* %15, %"class.blink::KURL"* dereferenceable(112) %1) #11
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %16, null
  %18 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 %22
  %24 = select i1 %17, %"struct.WTF::KeyValuePair"* %23, %"struct.WTF::KeyValuePair"* %16
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %23
  br i1 %25, label %203, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 1
  %28 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.5"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 0) #11
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %26
  %35 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.5"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 0) #11
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %36, align 8
  br label %203

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  %42 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.5"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 0) #11
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %44, i64 0, i32 3
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %45, i32 0) #11
  %46 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %27, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %50, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %51, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %38
  %58 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %59 = bitcast %"class.std::__1::basic_string"** %48 to i64*
  %60 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %82

63:                                               ; preds = %99, %38
  %64 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #11
  %67 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::String"*, %"class.WTF::String"** %67, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %3, i64 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 %71
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %63
  %75 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %124

82:                                               ; preds = %57, %99
  %83 = phi %"class.std::__1::unique_ptr.5"* [ %51, %57 ], [ %100, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #11
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %85, i64 0, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* %86, i32 0) #11
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %89 = icmp ult %"class.std::__1::basic_string"* %87, %88
  br i1 %89, label %90, label %94

90:                                               ; preds = %82
  %91 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %58, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #11
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 1
  %93 = ptrtoint %"class.std::__1::basic_string"* %92 to i64
  store i64 %93, i64* %59, align 8
  br label %99

94:                                               ; preds = %82
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #11
  %95 = load i8, i8* %61, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %90, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %83, i64 1
  %101 = icmp eq %"class.std::__1::unique_ptr.5"* %100, %55
  br i1 %101, label %63, label %82

102:                                              ; preds = %147, %63
  %103 = bitcast %"class.net::HttpRequestHeaders"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #11
  %104 = bitcast %"class.net::HttpRequestHeaders"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 24, i1 false)
  call void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"* nonnull %11) #11
  %105 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #11
  %106 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kAcceptE, i64 0, i64 0), i8** %106, align 8
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %108 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kAcceptE, i64 0, i64 0)) #11
  store i64 %108, i64* %107, align 8
  %109 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  store i8* %2, i8** %110, align 8
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %112 = icmp eq i8* %2, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %102
  %114 = call i64 @strlen(i8* nonnull %2) #11
  store i64 %114, i64* %111, align 8
  br label %118

115:                                              ; preds = %102
  store i64 0, i64* %111, align 8
  %116 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br label %118

118:                                              ; preds = %113, %115
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* nonnull %11, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %12, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #11
  %119 = bitcast %"class.blink::WebPackageRequestMatcher"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  %120 = bitcast %"class.blink::WebPackageRequestMatcher"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 24, i1 false)
  call void @_ZN5blink24WebPackageRequestMatcherC1ERKN3net18HttpRequestHeadersERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.blink::WebPackageRequestMatcher"* nonnull %14, %"class.net::HttpRequestHeaders"* nonnull dereferenceable(24) %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #11
  %121 = call %"class.std::__1::basic_string"* @_ZNK5blink24WebPackageRequestMatcher26FindBestMatchingVariantKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEE(%"class.blink::WebPackageRequestMatcher"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #11
  %122 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %123 = icmp eq %"class.std::__1::basic_string"* %121, %122
  br i1 %123, label %162, label %153

124:                                              ; preds = %150, %74
  %125 = phi i64 [ 0, %74 ], [ %152, %150 ]
  %126 = phi i8 [ 0, %74 ], [ %151, %150 ]
  %127 = phi %"class.WTF::String"* [ %68, %74 ], [ %148, %150 ]
  %128 = icmp slt i8 %126, 0
  %129 = zext i8 %126 to i64
  %130 = select i1 %128, i64 %125, i64 %129
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %124
  %133 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  br label %134

134:                                              ; preds = %132, %124
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #11
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* %127, i32 0) #11
  %135 = load i8, i8* %79, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i8*, i8** %80, align 8
  %138 = load i64, i64* %81, align 8
  %139 = zext i8 %135 to i64
  %140 = select i1 %136, i8* %137, i8* %77
  %141 = select i1 %136, i64 %138, i64 %139
  %142 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %140, i64 %141) #11
  %143 = load i8, i8* %79, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %134
  %146 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %134, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %149 = icmp eq %"class.WTF::String"* %148, %72
  br i1 %149, label %102, label %150

150:                                              ; preds = %147
  %151 = load i8, i8* %76, align 1
  %152 = load i64, i64* %66, align 8
  br label %124

153:                                              ; preds = %118
  %154 = ptrtoint %"class.std::__1::basic_string"* %121 to i64
  %155 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %50, align 8
  %156 = bitcast %"class.std::__1::vector"* %7 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %154, %157
  %159 = sdiv exact i64 %158, 24
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %155, i64 %159, i32 0, i32 0, i32 0
  %161 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %160, align 8
  br label %162

162:                                              ; preds = %118, %153
  %163 = phi %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* [ %161, %153 ], [ null, %118 ]
  %164 = getelementptr inbounds %"class.blink::WebPackageRequestMatcher", %"class.blink::WebPackageRequestMatcher"* %14, i64 0, i32 0
  call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #11
  %165 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %162
  %170 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %170) #13
  br label %171

171:                                              ; preds = %162, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %172 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %173 = icmp eq %"class.std::__1::basic_string"* %172, null
  br i1 %173, label %195, label %174

174:                                              ; preds = %171
  %175 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  %176 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %177 = icmp eq %"class.std::__1::basic_string"* %176, %172
  br i1 %177, label %193, label %178

178:                                              ; preds = %174, %188
  %179 = phi %"class.std::__1::basic_string"* [ %180, %188 ], [ %176, %174 ]
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 -1
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %178
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #13
  br label %188

188:                                              ; preds = %185, %178
  %189 = icmp eq %"class.std::__1::basic_string"* %180, %172
  br i1 %189, label %190, label %178

190:                                              ; preds = %188
  %191 = bitcast %"class.std::__1::vector"* %7 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %190, %174
  %194 = phi i8* [ %192, %190 ], [ %175, %174 ]
  store %"class.std::__1::basic_string"* %172, %"class.std::__1::basic_string"** %48, align 8
  call void @_ZdlPv(i8* %194) #13
  br label %195

195:                                              ; preds = %171, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  %196 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %195
  %201 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %201) #13
  br label %202

202:                                              ; preds = %195, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  br label %203

203:                                              ; preds = %34, %202, %4
  %204 = phi %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* [ null, %4 ], [ %37, %34 ], [ %163, %202 ]
  ret %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %204
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLENS_5mojom18RequestContextTypeERKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.WTF::Vector.32"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 14
  %6 = select i1 %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink12_GLOBAL__N_118kImageAcceptHeaderE, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_120kDefaultAcceptHeaderE, i64 0, i64 0)
  %7 = icmp eq i32 %2, 28
  %8 = select i1 %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN5blink12_GLOBAL__N_123kStylesheetAcceptHeaderE, i64 0, i64 0), i8* %6
  %9 = tail call %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLEPKcRKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"* %0, %"class.blink::KURL"* dereferenceable(112) %1, i8* %8, %"class.WTF::Vector.32"* dereferenceable(16) %3)
  ret %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %9
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #2

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink24WebPackageRequestMatcherC1ERKN3net18HttpRequestHeadersERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.blink::WebPackageRequestMatcher"*, %"class.net::HttpRequestHeaders"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare %"class.std::__1::basic_string"* @_ZNK5blink24WebPackageRequestMatcher26FindBestMatchingVariantKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEE(%"class.blink::WebPackageRequestMatcher"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_17MakeKeyERKN3WTF6StringES4_S4_(%"struct.std::__1::pair"* noalias nocapture sret, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #11
  br label %31

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #11
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !4

28:                                               ; preds = %19
  tail call void @llvm.trap() #11
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %13, %12
  %32 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #11
  br label %55

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %37, %36
  %56 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #11
  br label %79

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #11
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !4

76:                                               ; preds = %67
  call void @llvm.trap() #11
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %77, %61, %60
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #11
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  call void @llvm.trap() #11
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %79
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #11
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !4

118:                                              ; preds = %109
  call void @llvm.trap() #11
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %100, %104, %119
  %122 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %123 = ptrtoint %"class.WTF::StringImpl"* %102 to i64
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8, !noalias !5
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8, !alias.scope !5
  %127 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4, !noalias !5
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %135 = load i32, i32* %134, align 4, !noalias !5
  %136 = zext i32 %135 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #11
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !4

142:                                              ; preds = %133
  call void @llvm.trap() #11, !noalias !5
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4, !noalias !5
  br label %145

145:                                              ; preds = %121, %128, %143
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %147 = bitcast %"struct.std::__1::pair.21"* %146 to i64*
  store i64 %122, i64* %147, align 8, !alias.scope !5
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 1
  %149 = bitcast %"class.WTF::String"* %148 to i64*
  store i64 %123, i64* %149, align 8, !alias.scope !5
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #11
  br label %165

165:                                              ; preds = %145, %161, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #11
  br label %181

181:                                              ; preds = %165, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #11
  br label %197

197:                                              ; preds = %181, %193, %196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.20"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES5_RKS8_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.17"*, %"struct.std::__1::pair"* dereferenceable(24), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.20"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.20"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.17"* %0, %"struct.WTF::KeyValuePair.20"* null)
  %9 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.20"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #11
  br label %24

24:                                               ; preds = %22, %10
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = lshr i32 %29, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %27) #11
  br label %34

34:                                               ; preds = %32, %24
  %35 = phi i32 [ %33, %32 ], [ %30, %24 ]
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = lshr i32 %39, 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %37) #11
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %34 ]
  %46 = zext i32 %35 to i64
  %47 = mul i64 %46, 5146158508761418231
  %48 = zext i32 %45 to i64
  %49 = mul i64 %48, -682818954288075998
  %50 = add i64 %49, %47
  %51 = lshr i64 %50, 32
  %52 = zext i32 %25 to i64
  %53 = mul i64 %52, 5146158508761418231
  %54 = mul i64 %51, -682818954288075998
  %55 = add i64 %54, %53
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  %58 = and i32 %14, %57
  %59 = zext i32 %58 to i64
  %60 = xor i32 %57, -1
  %61 = lshr i64 %55, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %103, %44
  %75 = phi i64 [ 0, %44 ], [ %106, %103 ]
  %76 = phi i64 [ %59, %44 ], [ %108, %103 ]
  %77 = phi %"struct.WTF::KeyValuePair.20"* [ null, %44 ], [ %104, %103 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %11, i64 %76
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  switch i64 %81, label %90 [
    i64 0, label %82
    i64 -1, label %103
  ]

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %11, i64 %76, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %11, i64 %76, i32 0, i32 1, i32 1, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  %89 = and i1 %85, %88
  br i1 %89, label %109, label %90

90:                                               ; preds = %74, %82
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %92 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"* %91) #11
  br i1 %92, label %93, label %103

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %11, i64 %76, i32 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %97 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"* %96) #11
  br i1 %97, label %98, label %103

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %11, i64 %76, i32 0, i32 1, i32 1, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %102 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"* %101) #11
  br i1 %102, label %136, label %103

103:                                              ; preds = %74, %93, %90, %98
  %104 = phi %"struct.WTF::KeyValuePair.20"* [ %77, %98 ], [ %77, %90 ], [ %77, %93 ], [ %78, %74 ]
  %105 = icmp eq i64 %75, 0
  %106 = select i1 %105, i64 %73, i64 %75
  %107 = add i64 %106, %76
  %108 = and i64 %107, %15
  br label %74

109:                                              ; preds = %82
  %110 = icmp eq %"struct.WTF::KeyValuePair.20"* %77, null
  br i1 %110, label %119, label %111

111:                                              ; preds = %109
  %112 = bitcast %"struct.WTF::KeyValuePair.20"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 136, i1 false) #11
  %113 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = add i32 %114, 2147483647
  %116 = and i32 %115, 2147483647
  %117 = and i32 %114, -2147483648
  %118 = or i32 %116, %117
  store i32 %118, i32* %113, align 8
  br label %119

119:                                              ; preds = %109, %111
  %120 = phi %"struct.WTF::KeyValuePair.20"* [ %77, %111 ], [ %78, %109 ]
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %120, i64 0, i32 0
  %122 = tail call dereferenceable(24) %"struct.std::__1::pair"* @_ZNSt3__14pairIN3WTF6StringENS0_IS2_S2_EEEaSEOS4_(%"struct.std::__1::pair"* %121, %"struct.std::__1::pair"* dereferenceable(24) %1) #11
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %120, i64 0, i32 1
  %124 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %123, %"class.blink::KURL"* dereferenceable(112) %2) #11
  %125 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %119
  %135 = tail call %"struct.WTF::KeyValuePair.20"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.17"* %0, %"struct.WTF::KeyValuePair.20"* %120)
  br label %136

136:                                              ; preds = %98, %119, %134
  %137 = phi i8 [ 1, %119 ], [ 1, %134 ], [ 0, %98 ]
  %138 = phi %"struct.WTF::KeyValuePair.20"* [ %120, %119 ], [ %135, %134 ], [ %78, %98 ]
  %139 = insertvalue { %"struct.WTF::KeyValuePair.20"*, i8 } undef, %"struct.WTF::KeyValuePair.20"* %138, 0
  %140 = insertvalue { %"struct.WTF::KeyValuePair.20"*, i8 } %139, i8 %137, 1
  ret { %"struct.WTF::KeyValuePair.20"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.20"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.17"*, %"struct.WTF::KeyValuePair.20"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 136
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairINS_6StringENS3_IS4_S4_EEEEN5blink4KURLEEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.20"*
  %37 = call %"struct.WTF::KeyValuePair.20"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.17"* %0, %"struct.WTF::KeyValuePair.20"* %36, i32 %32, %"struct.WTF::KeyValuePair.20"* %1) #11
  ret %"struct.WTF::KeyValuePair.20"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.20"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.17"*, %"struct.WTF::KeyValuePair.20"*, i32, %"struct.WTF::KeyValuePair.20"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.17", align 8
  %6 = bitcast %"class.WTF::HashTable.17"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.17"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.20"* %1, %"struct.WTF::KeyValuePair.20"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.20"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.17"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.17"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.20"* %22 to i64
  br label %108

24:                                               ; preds = %204
  %25 = bitcast %"class.WTF::HashTable.17"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.17"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %205, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.20"* [ null, %16 ], [ %208, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %206, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.20"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %104, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %102, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %99, %39
  %42 = phi i64 [ 0, %39 ], [ %100, %99 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.20"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %99, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %35, i64 %42, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %48) #11
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %35, i64 %42, i32 0, i32 1, i32 1, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #11
  br label %65

65:                                               ; preds = %64, %61, %47
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %35, i64 %42, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #11
  br label %82

82:                                               ; preds = %81, %78, %65
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %99

99:                                               ; preds = %98, %95, %82, %41
  %100 = add nuw nsw i64 %42, 1
  %101 = icmp eq i64 %100, %40
  br i1 %101, label %102, label %41

102:                                              ; preds = %99, %37
  %103 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %104

104:                                              ; preds = %28, %102
  %105 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, -2147483648
  store i32 %107, i32* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.20"* %33

108:                                              ; preds = %21, %204
  %109 = phi i64 [ %205, %204 ], [ %23, %21 ]
  %110 = phi i32 [ %206, %204 ], [ %13, %21 ]
  %111 = phi %"struct.WTF::KeyValuePair.20"* [ %207, %204 ], [ %22, %21 ]
  %112 = phi %"struct.WTF::KeyValuePair.20"* [ %208, %204 ], [ null, %21 ]
  %113 = phi i32 [ %209, %204 ], [ 0, %21 ]
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %111, i64 %114
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %115, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = bitcast %"struct.WTF::KeyValuePair.20"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  switch i64 %118, label %127 [
    i64 0, label %119
    i64 -1, label %204
  ]

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %111, i64 %114, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %111, i64 %114, i32 0, i32 1, i32 1, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  %126 = and i1 %122, %125
  br i1 %126, label %204, label %127

127:                                              ; preds = %108, %119
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %115, i64 0, i32 0
  %129 = call { %"struct.WTF::KeyValuePair.20"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES5_EENS2_IPS9_bEERKT0_(%"class.WTF::HashTable.17"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(24) %128) #11
  %130 = extractvalue { %"struct.WTF::KeyValuePair.20"*, i8 } %129, 0
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %130, i64 0, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %131) #11
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %130, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #11
  br label %148

148:                                              ; preds = %147, %144, %127
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %130, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #11
  br label %165

165:                                              ; preds = %164, %161, %148
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #11
  br label %182

182:                                              ; preds = %165, %178, %181
  %183 = load i64, i64* %117, align 8
  %184 = bitcast %"struct.WTF::KeyValuePair.20"* %130 to i64*
  store i64 %183, i64* %184, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %116, align 8
  %185 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %130, i64 0, i32 0, i32 1
  %186 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %111, i64 %114, i32 0, i32 1
  %187 = getelementptr inbounds %"struct.std::__1::pair.21", %"struct.std::__1::pair.21"* %186, i64 0, i32 0, i32 0, i32 0
  %188 = bitcast %"struct.std::__1::pair.21"* %186 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"struct.std::__1::pair.21"* %185 to i64*
  store i64 %189, i64* %190, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %187, align 8
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %130, i64 0, i32 0, i32 1, i32 1
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %111, i64 %114, i32 0, i32 1, i32 1
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %192, i64 0, i32 0, i32 0
  %194 = bitcast %"class.WTF::String"* %192 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.WTF::String"* %191 to i64*
  store i64 %195, i64* %196, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %193, align 8
  %197 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %111, i64 %114, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %131, %"class.blink::KURL"* dereferenceable(112) %197) #11
  %198 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %15, align 8
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %198, i64 %114
  %200 = icmp eq %"struct.WTF::KeyValuePair.20"* %199, %3
  %201 = select i1 %200, %"struct.WTF::KeyValuePair.20"* %130, %"struct.WTF::KeyValuePair.20"* %112
  %202 = load i32, i32* %12, align 8
  %203 = ptrtoint %"struct.WTF::KeyValuePair.20"* %198 to i64
  br label %204

204:                                              ; preds = %108, %119, %182
  %205 = phi i64 [ %203, %182 ], [ %109, %119 ], [ %109, %108 ]
  %206 = phi i32 [ %202, %182 ], [ %110, %119 ], [ %110, %108 ]
  %207 = phi %"struct.WTF::KeyValuePair.20"* [ %198, %182 ], [ %111, %119 ], [ %111, %108 ]
  %208 = phi %"struct.WTF::KeyValuePair.20"* [ %201, %182 ], [ %112, %119 ], [ %112, %108 ]
  %209 = add i32 %113, 1
  %210 = icmp eq i32 %209, %206
  br i1 %210, label %24, label %108
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.20"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES5_EENS2_IPS9_bEERKT0_(%"class.WTF::HashTable.17"*, %"struct.std::__1::pair"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %20) #11
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i32 [ %26, %25 ], [ %23, %17 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = lshr i32 %32, 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  %36 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %30) #11
  br label %37

37:                                               ; preds = %27, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %27 ]
  %39 = zext i32 %28 to i64
  %40 = mul i64 %39, 5146158508761418231
  %41 = zext i32 %38 to i64
  %42 = mul i64 %41, -682818954288075998
  %43 = add i64 %42, %40
  %44 = lshr i64 %43, 32
  %45 = zext i32 %18 to i64
  %46 = mul i64 %45, 5146158508761418231
  %47 = mul i64 %44, -682818954288075998
  %48 = add i64 %47, %46
  %49 = lshr i64 %48, 32
  %50 = trunc i64 %49 to i32
  %51 = and i32 %7, %50
  %52 = zext i32 %51 to i64
  %53 = xor i32 %50, -1
  %54 = lshr i64 %48, 55
  %55 = trunc i64 %54 to i32
  %56 = add i32 %55, %53
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %67

67:                                               ; preds = %99, %37
  %68 = phi %"struct.WTF::KeyValuePair.20"* [ null, %37 ], [ %100, %99 ]
  %69 = phi i64 [ 0, %37 ], [ %102, %99 ]
  %70 = phi i64 [ %52, %37 ], [ %104, %99 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  switch i64 %74, label %86 [
    i64 0, label %75
    i64 -1, label %99
  ]

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %70, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %70, i32 0, i32 1, i32 1, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = and i1 %78, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %75
  %84 = icmp eq %"struct.WTF::KeyValuePair.20"* %68, null
  %85 = select i1 %84, %"struct.WTF::KeyValuePair.20"* %71, %"struct.WTF::KeyValuePair.20"* %68
  br label %105

86:                                               ; preds = %67, %75
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %88 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"* %87) #11
  br i1 %88, label %89, label %99

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %70, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %93 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"* %92) #11
  br i1 %93, label %94, label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %70, i32 0, i32 1, i32 1, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %98 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"* %97) #11
  br i1 %98, label %105, label %99

99:                                               ; preds = %67, %89, %86, %94
  %100 = phi %"struct.WTF::KeyValuePair.20"* [ %68, %89 ], [ %68, %86 ], [ %68, %94 ], [ %71, %67 ]
  %101 = icmp eq i64 %69, 0
  %102 = select i1 %101, i64 %66, i64 %69
  %103 = add i64 %102, %70
  %104 = and i64 %103, %8
  br label %67

105:                                              ; preds = %94, %83
  %106 = phi %"struct.WTF::KeyValuePair.20"* [ %85, %83 ], [ %71, %94 ]
  %107 = phi i8 [ 0, %83 ], [ 1, %94 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.20"*, i8 } undef, %"struct.WTF::KeyValuePair.20"* %106, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.20"*, i8 } %108, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair.20"*, i8 } %109
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"struct.std::__1::pair"* @_ZNSt3__14pairIN3WTF6StringENS0_IS2_S2_EEEaSEOS4_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %6 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %23

23:                                               ; preds = %2, %19, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.21", %"struct.std::__1::pair.21"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"struct.std::__1::pair.21"* %24 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %29 = bitcast %"struct.std::__1::pair.21"* %25 to i64*
  %30 = getelementptr inbounds %"struct.std::__1::pair.21", %"struct.std::__1::pair.21"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %45, %42, %23
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 1
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %50 = bitcast %"class.WTF::String"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  %52 = bitcast %"class.WTF::String"* %48 to i64*
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br label %69

69:                                               ; preds = %46, %65, %68
  ret %"struct.std::__1::pair"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [16 x i8]* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 15
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %65

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %67, label %65

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %47

45:                                               ; preds = %47
  %46 = icmp eq i64 %64, 15
  br i1 %46, label %65, label %249

47:                                               ; preds = %265, %42
  %48 = phi i64 [ 0, %42 ], [ %266, %265 ]
  %49 = getelementptr inbounds i16, i16* %44, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = add i16 %50, -65
  %52 = icmp ult i16 %51, 26
  %53 = zext i1 %52 to i16
  %54 = shl nuw nsw i16 %53, 5
  %55 = or i16 %54, %50
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %48
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %56, %62
  %64 = or i64 %48, 1
  br i1 %63, label %45, label %65

65:                                               ; preds = %47, %45, %249, %14, %28, %67, %81, %95, %109, %123, %137, %151, %165, %179, %193, %207, %221, %2
  %66 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %67 ], [ false, %81 ], [ false, %95 ], [ false, %109 ], [ false, %123 ], [ false, %137 ], [ false, %151 ], [ false, %165 ], [ false, %179 ], [ false, %193 ], [ false, %207 ], [ false, %221 ], [ false, %47 ], [ true, %45 ], [ false, %249 ]
  ret i1 %66

67:                                               ; preds = %28
  %68 = getelementptr inbounds i8, i8* %15, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %65

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %15, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %87, %93
  br i1 %94, label %95, label %65

95:                                               ; preds = %81
  %96 = getelementptr inbounds i8, i8* %15, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 4
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %65

109:                                              ; preds = %95
  %110 = getelementptr inbounds i8, i8* %15, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 5
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %65

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 6
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 6
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %137, label %65

137:                                              ; preds = %123
  %138 = getelementptr inbounds i8, i8* %15, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 7
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %151, label %65

151:                                              ; preds = %137
  %152 = getelementptr inbounds i8, i8* %15, i64 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %157, %163
  br i1 %164, label %165, label %65

165:                                              ; preds = %151
  %166 = getelementptr inbounds i8, i8* %15, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %171, %177
  br i1 %178, label %179, label %65

179:                                              ; preds = %165
  %180 = getelementptr inbounds i8, i8* %15, i64 10
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 10
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %185, %191
  br i1 %192, label %193, label %65

193:                                              ; preds = %179
  %194 = getelementptr inbounds i8, i8* %15, i64 11
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 11
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %65

207:                                              ; preds = %193
  %208 = getelementptr inbounds i8, i8* %15, i64 12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 12
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  br i1 %220, label %221, label %65

221:                                              ; preds = %207
  %222 = getelementptr inbounds i8, i8* %15, i64 13
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 13
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %65

235:                                              ; preds = %221
  %236 = getelementptr inbounds i8, i8* %15, i64 14
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 14
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %241, %247
  ret i1 %248

249:                                              ; preds = %45
  %250 = getelementptr inbounds i16, i16* %44, i64 %64
  %251 = load i16, i16* %250, align 2
  %252 = add i16 %251, -65
  %253 = icmp ult i16 %252, 26
  %254 = zext i1 %253 to i16
  %255 = shl nuw nsw i16 %254, 5
  %256 = or i16 %255, %251
  %257 = zext i16 %256 to i32
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %64
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %257, %263
  br i1 %264, label %265, label %65

265:                                              ; preds = %249
  %266 = add nuw nsw i64 %48, 2
  br label %47
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.20"* @_ZNK3WTF9HashTableINSt3__14pairINS_6StringENS2_IS3_S3_EEEENS_12KeyValuePairIS5_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS3_S4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES5_EEPKS9_RKT0_(%"class.WTF::HashTable.17"*, %"struct.std::__1::pair"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.20"*, %"struct.WTF::KeyValuePair.20"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.20"* %4, null
  br i1 %5, label %102, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.17", %"class.WTF::HashTable.17"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = lshr i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  %28 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %22) #11
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %25, %19 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = lshr i32 %34, 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %32) #11
  br label %39

39:                                               ; preds = %29, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %29 ]
  %41 = zext i32 %30 to i64
  %42 = mul i64 %41, 5146158508761418231
  %43 = zext i32 %40 to i64
  %44 = mul i64 %43, -682818954288075998
  %45 = add i64 %44, %42
  %46 = lshr i64 %45, 32
  %47 = zext i32 %20 to i64
  %48 = mul i64 %47, 5146158508761418231
  %49 = mul i64 %46, -682818954288075998
  %50 = add i64 %49, %48
  %51 = lshr i64 %50, 32
  %52 = trunc i64 %51 to i32
  %53 = and i32 %9, %52
  %54 = zext i32 %53 to i64
  %55 = xor i32 %52, -1
  %56 = lshr i64 %50, 55
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, %55
  %59 = shl i32 %58, 12
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 7
  %62 = xor i32 %61, %60
  %63 = shl i32 %62, 2
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 20
  %66 = xor i32 %65, %64
  %67 = or i32 %66, 1
  %68 = zext i32 %67 to i64
  br label %69

69:                                               ; preds = %97, %39
  %70 = phi i64 [ 0, %39 ], [ %99, %97 ]
  %71 = phi i64 [ %54, %39 ], [ %101, %97 ]
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  switch i64 %75, label %84 [
    i64 0, label %76
    i64 -1, label %97
  ]

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %71, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %71, i32 0, i32 1, i32 1, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  %83 = and i1 %79, %82
  br i1 %83, label %102, label %84

84:                                               ; preds = %69, %76
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"* %85) #11
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %71, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %91 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"* %90) #11
  br i1 %91, label %92, label %97

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.20", %"struct.WTF::KeyValuePair.20"* %4, i64 %71, i32 0, i32 1, i32 1, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %96 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"* %95) #11
  br i1 %96, label %102, label %97

97:                                               ; preds = %69, %87, %84, %92
  %98 = icmp eq i64 %70, 0
  %99 = select i1 %98, i64 %68, i64 %70
  %100 = add i64 %99, %71
  %101 = and i64 %100, %10
  br label %69

102:                                              ; preds = %92, %76, %2
  %103 = phi %"struct.WTF::KeyValuePair.20"* [ null, %2 ], [ null, %76 ], [ %72, %92 ]
  ret %"struct.WTF::KeyValuePair.20"* %103
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35AlternateSignedExchangeResourceInfo5EntryC2ERKNS_4KURLES4_RKN3WTF6StringES8_S8_(%"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %7, %"class.blink::KURL"* dereferenceable(112) %1) #11
  %8 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %8, %"class.blink::KURL"* dereferenceable(112) %2) #11
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %6, %13, %28
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %30, %35, %50
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #11
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !4

71:                                               ; preds = %62
  tail call void @llvm.trap() #11
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %52, %57, %72
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LinkHeaderD2Ev(%"class.blink::LinkHeader"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %22

22:                                               ; preds = %21, %18, %5
  store i8 0, i8* %2, align 8
  br label %23

23:                                               ; preds = %1, %22
  %24 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 12, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #11
  br label %40

40:                                               ; preds = %23, %36, %39
  %41 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 11, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #11
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 10, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %57, %70, %73
  %75 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 9, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #11
  br label %91

91:                                               ; preds = %74, %87, %90
  %92 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 8, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11
  br label %108

108:                                              ; preds = %91, %104, %107
  %109 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 7, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %125

125:                                              ; preds = %108, %121, %124
  %126 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 6, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #11
  br label %142

142:                                              ; preds = %125, %138, %141
  %143 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 5, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #11
  br label %159

159:                                              ; preds = %142, %155, %158
  %160 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 4, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #11
  br label %176

176:                                              ; preds = %159, %172, %175
  %177 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 3, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #11
  br label %193

193:                                              ; preds = %176, %189, %192
  %194 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 2, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #11
  br label %210

210:                                              ; preds = %193, %206, %209
  %211 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 1, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #11
  br label %227

227:                                              ; preds = %210, %223, %226
  %228 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #11
  br label %244

244:                                              ; preds = %227, %240, %243
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6LookupINS_22IdentityHashTranslatorISG_SL_SC_EES2_EEPKSE_RKT0_(%"class.WTF::HashTable"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %62, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  %19 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %13) #11
  br label %20

20:                                               ; preds = %7, %18
  %21 = phi i32 [ %19, %18 ], [ %16, %7 ]
  %22 = and i32 %21, %10
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %23
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #11
  %27 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %25, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #11
  br i1 %27, label %62, label %28

28:                                               ; preds = %20
  %29 = xor i32 %21, -1
  %30 = lshr i32 %21, 23
  %31 = add i32 %30, %29
  %32 = shl i32 %31, 12
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 7
  %35 = xor i32 %34, %33
  %36 = shl i32 %35, 2
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 20
  %39 = xor i32 %38, %37
  %40 = or i32 %39, 1
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %28, %54
  %43 = phi %"struct.WTF::KeyValuePair"* [ %24, %28 ], [ %59, %54 ]
  %44 = phi i64 [ %23, %28 ], [ %58, %54 ]
  %45 = phi i64 [ 0, %28 ], [ %56, %54 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %44, i32 0, i32 4
  %47 = bitcast %"class.WTF::String"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %54, label %50

50:                                               ; preds = %42
  %51 = bitcast i8* %48 to %"class.WTF::StringImpl"*
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %53 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"* %52) #11
  br i1 %53, label %62, label %54

54:                                               ; preds = %42, %50
  %55 = icmp eq i64 %45, 0
  %56 = select i1 %55, i64 %41, i64 %45
  %57 = add i64 %56, %44
  %58 = and i64 %57, %11
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #11
  %61 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %60, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #11
  br i1 %61, label %62, label %42

62:                                               ; preds = %54, %50, %20, %2
  %63 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %20 ], [ null, %54 ], [ %43, %50 ]
  ret %"struct.WTF::KeyValuePair"* %63
}

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6insertINS_17HashMapTranslatorISL_SG_SC_EERS2_SD_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"struct.WTF::KeyValuePair", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  br label %14

14:                                               ; preds = %3, %11
  %15 = phi %"struct.WTF::KeyValuePair"* [ %9, %3 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = lshr i32 %23, 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %14
  %27 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %21) #11
  br label %28

28:                                               ; preds = %14, %26
  %29 = phi i32 [ %27, %26 ], [ %24, %14 ]
  %30 = and i32 %29, %18
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %34) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #11
  %35 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %33, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %34) #11
  br i1 %35, label %105, label %36

36:                                               ; preds = %28
  %37 = xor i32 %29, -1
  %38 = lshr i32 %29, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %63
  %51 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %69, %63 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %64, %63 ]
  %53 = phi i64 [ %31, %36 ], [ %68, %63 ]
  %54 = phi i64 [ 0, %36 ], [ %66, %63 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %53, i32 0, i32 4
  %56 = bitcast %"class.WTF::String"* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, inttoptr (i64 -1 to i8*)
  br i1 %58, label %63, label %59

59:                                               ; preds = %50
  %60 = bitcast i8* %57 to %"class.WTF::StringImpl"*
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %62 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"* %61) #11
  br i1 %62, label %133, label %63

63:                                               ; preds = %50, %59
  %64 = phi %"struct.WTF::KeyValuePair"* [ %52, %59 ], [ %51, %50 ]
  %65 = icmp eq i64 %54, 0
  %66 = select i1 %65, i64 %49, i64 %54
  %67 = add i64 %66, %53
  %68 = and i64 %67, %19
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %68
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %34) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #11
  %71 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %70, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %34) #11
  br i1 %71, label %72, label %50

72:                                               ; preds = %63
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %64, null
  br i1 %73, label %105, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %76) #11
  %77 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %77) #11, !noalias !8
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #11, !noalias !8
  %78 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #11, !noalias !8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %79, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #11
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector"* %80 to i64*
  store i64 0, i64* %84, align 8, !alias.scope !8
  store atomic i64 0, i64* %83 monotonic, align 8, !noalias !8
  store atomic i64 0, i64* %84 monotonic, align 8, !alias.scope !8
  %85 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %81, align 8, !alias.scope !8
  store i32 0, i32* %85, align 8, !noalias !8
  %86 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %82, align 4, !alias.scope !8
  store i32 0, i32* %86, align 4, !noalias !8
  %87 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::ConditionalDestructor.11"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #11, !noalias !8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %77) #11, !noalias !8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %88, %"class.blink::KURL"* nonnull dereferenceable(112) %79) #11
  %89 = getelementptr inbounds i8, i8* %75, i64 112
  %90 = getelementptr inbounds i8, i8* %75, i64 120
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds i8, i8* %75, i64 124
  %93 = bitcast i8* %92 to i32*
  %94 = bitcast i8* %89 to i64*
  store i64 0, i64* %94, align 8
  %95 = load i64, i64* %84, align 8
  store atomic i64 0, i64* %84 monotonic, align 8
  store atomic i64 %95, i64* %94 monotonic, align 8
  %96 = load i32, i32* %81, align 8
  store i32 %96, i32* %91, align 4
  store i32 0, i32* %81, align 8
  %97 = load i32, i32* %82, align 4
  store i32 %97, i32* %93, align 4
  store i32 0, i32* %82, align 4
  %98 = bitcast %"class.WTF::Vector"* %80 to %"class.WTF::ConditionalDestructor.11"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* %98) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %76) #11
  %99 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, 2147483647
  %102 = and i32 %101, 2147483647
  %103 = and i32 %100, -2147483648
  %104 = or i32 %102, %103
  store i32 %104, i32* %99, align 8
  br label %105

105:                                              ; preds = %28, %72, %74
  %106 = phi %"struct.WTF::KeyValuePair"* [ %64, %74 ], [ %69, %72 ], [ %32, %28 ]
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %106, i64 0, i32 0
  %108 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %107, %"class.blink::KURL"* dereferenceable(112) %1) #11
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %106, i64 0, i32 1
  %110 = bitcast %"class.WTF::Vector"* %2 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.WTF::Vector"* %109 to i64*
  %113 = load i64, i64* %112, align 8
  store atomic i64 %113, i64* %110 monotonic, align 8
  store atomic i64 %111, i64* %112 monotonic, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %106, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %116 = load i32, i32* %114, align 4
  %117 = load i32, i32* %115, align 4
  store i32 %117, i32* %114, align 4
  store i32 %116, i32* %115, align 4
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %106, i64 0, i32 1, i32 0, i32 0, i32 2
  %119 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %118, align 4
  %121 = load i32, i32* %119, align 4
  store i32 %121, i32* %118, align 4
  store i32 %120, i32* %119, align 4
  %122 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, %124
  %128 = shl i32 %127, 1
  %129 = load i32, i32* %16, align 8
  %130 = icmp ult i32 %128, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %105
  %132 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %106)
  br label %133

133:                                              ; preds = %59, %105, %131
  %134 = phi i8 [ 1, %105 ], [ 1, %131 ], [ 0, %59 ]
  %135 = phi %"struct.WTF::KeyValuePair"* [ %106, %105 ], [ %132, %131 ], [ %51, %59 ]
  %136 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %135, 0
  %137 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %136, i8 %134, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"struct.WTF::KeyValuePair", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = mul i32 %14, 6
  %16 = shl i32 %10, 1
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %34, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ugt i32 %16, %10
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %18
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %7) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %34

34:                                               ; preds = %12, %2, %33
  %35 = phi i32 [ %16, %33 ], [ 8, %2 ], [ %10, %12 ]
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 7
  %38 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([271 x i8], [271 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink4KURLENS_6VectorINSt3__110unique_ptrINS2_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #11
  %39 = bitcast i8* %38 to %"struct.WTF::KeyValuePair"*
  %40 = icmp eq i32 %35, 0
  br i1 %40, label %71, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  %44 = bitcast %"class.WTF::Vector"* %5 to i8*
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = bitcast %"class.WTF::Vector"* %5 to i64*
  %50 = bitcast %"class.WTF::Vector"* %46 to i64*
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %53 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::ConditionalDestructor.11"*
  %54 = bitcast %"class.WTF::Vector"* %46 to %"class.WTF::ConditionalDestructor.11"*
  br label %55

55:                                               ; preds = %41, %55
  %56 = phi i64 [ %69, %55 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %42) #11
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %43) #11, !noalias !11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #11, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11, !noalias !11
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %45, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #11
  store i64 0, i64* %50, align 8, !alias.scope !11
  store atomic i64 0, i64* %49 monotonic, align 8, !noalias !11
  store atomic i64 0, i64* %50 monotonic, align 8, !alias.scope !11
  store i32 0, i32* %47, align 8, !alias.scope !11
  store i32 0, i32* %51, align 8, !noalias !11
  store i32 0, i32* %48, align 4, !alias.scope !11
  store i32 0, i32* %52, align 4, !noalias !11
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11, !noalias !11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %43) #11, !noalias !11
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %59, %"class.blink::KURL"* nonnull dereferenceable(112) %45) #11
  %60 = getelementptr inbounds i8, i8* %58, i64 112
  %61 = getelementptr inbounds i8, i8* %58, i64 120
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds i8, i8* %58, i64 124
  %64 = bitcast i8* %63 to i32*
  %65 = bitcast i8* %60 to i64*
  store i64 0, i64* %65, align 8
  %66 = load i64, i64* %50, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store atomic i64 %66, i64* %65 monotonic, align 8
  %67 = load i32, i32* %47, align 8
  store i32 %67, i32* %62, align 4
  store i32 0, i32* %47, align 8
  %68 = load i32, i32* %48, align 4
  store i32 %68, i32* %64, align 4
  store i32 0, i32* %48, align 4
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* %54) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %42) #11
  %69 = add nuw nsw i64 %56, 1
  %70 = icmp eq i64 %69, %36
  br i1 %70, label %71, label %55

71:                                               ; preds = %55, %34
  %72 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %39, i32 %35, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %25

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  br label %57

22:                                               ; preds = %94
  %23 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi i64* [ %19, %17 ], [ %23, %22 ]
  %27 = phi i64 [ %18, %17 ], [ %24, %22 ]
  %28 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %95, %22 ]
  %29 = phi i32 [ 0, %17 ], [ %96, %22 ]
  %30 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  store atomic i64 %27, i64* %30 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %31, i64* %26, align 8
  store i32 %29, i32* %9, align 8
  %32 = inttoptr i64 %31 to %"struct.WTF::KeyValuePair"*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %25
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %34
  %37 = zext i32 %29 to i64
  br label %38

38:                                               ; preds = %48, %36
  %39 = phi i64 [ 0, %36 ], [ %49, %48 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %39, i32 0, i32 4
  %41 = bitcast %"class.WTF::String"* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, inttoptr (i64 -1 to i8*)
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %39, i32 1
  %46 = bitcast %"class.WTF::Vector"* %45 to %"class.WTF::ConditionalDestructor.11"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* %46) #11
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %39, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %47) #11
  br label %48

48:                                               ; preds = %44, %38
  %49 = add nuw nsw i64 %39, 1
  %50 = icmp eq i64 %49, %37
  br i1 %50, label %51, label %38

51:                                               ; preds = %48, %34
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #11
  store atomic i64 0, i64* %26 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %53

53:                                               ; preds = %25, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"struct.WTF::KeyValuePair"* %28

57:                                               ; preds = %20, %94
  %58 = phi %"struct.WTF::KeyValuePair"* [ null, %20 ], [ %95, %94 ]
  %59 = phi i32 [ 0, %20 ], [ %96, %94 ]
  %60 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %61, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #11
  %63 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %62, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #11
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %61, i32 0, i32 4
  %65 = bitcast %"class.WTF::String"* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, inttoptr (i64 -1 to i8*)
  %68 = or i1 %63, %67
  br i1 %68, label %94, label %69

69:                                               ; preds = %57
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %61, i32 0
  %72 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E16LookupForWritingINS_22IdentityHashTranslatorISG_SL_SC_EES2_EENS5_4pairIPSE_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %71) #11
  %73 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %72, 0
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 1
  %75 = bitcast %"class.WTF::Vector"* %74 to %"class.WTF::ConditionalDestructor.11"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.11"* %75) #11
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %76) #11
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %76, %"class.blink::KURL"* dereferenceable(112) %71) #11
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %61, i32 1
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 1, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 1, i32 0, i32 0, i32 2
  %80 = bitcast %"class.WTF::Vector"* %77 to i64*
  %81 = bitcast %"class.WTF::Vector"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #11
  %82 = load i64, i64* %80, align 8
  %83 = bitcast %"class.WTF::Vector"* %74 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %61, i32 1, i32 0, i32 0, i32 1
  %85 = load i32, i32* %78, align 4
  %86 = load i32, i32* %84, align 4
  store i32 %86, i32* %78, align 4
  store i32 %85, i32* %84, align 4
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %61, i32 1, i32 0, i32 0, i32 2
  %88 = load i32, i32* %79, align 4
  %89 = load i32, i32* %87, align 4
  store i32 %89, i32* %79, align 4
  store i32 %88, i32* %87, align 4
  %90 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 %61
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %91, %3
  %93 = select i1 %92, %"struct.WTF::KeyValuePair"* %73, %"struct.WTF::KeyValuePair"* %58
  br label %94

94:                                               ; preds = %57, %69
  %95 = phi %"struct.WTF::KeyValuePair"* [ %58, %57 ], [ %93, %69 ]
  %96 = add i32 %59, 1
  %97 = load i32, i32* %13, align 8
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %22, label %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLENS_12KeyValuePairIS2_NS_6VectorINSt3__110unique_ptrINS1_35AlternateSignedExchangeResourceInfo5EntryENS5_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_8KURLHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSI_ISD_EEEESJ_SC_E16LookupForWritingINS_22IdentityHashTranslatorISG_SL_SC_EES2_EENS5_4pairIPSE_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = lshr i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %11) #11
  br label %18

18:                                               ; preds = %2, %16
  %19 = phi i32 [ %17, %16 ], [ %14, %2 ]
  %20 = and i32 %19, %8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %21
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #11
  %26 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %24, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #11
  br i1 %26, label %43, label %27

27:                                               ; preds = %18
  %28 = xor i32 %19, -1
  %29 = lshr i32 %19, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %49

41:                                               ; preds = %63
  %42 = ptrtoint %"struct.WTF::KeyValuePair"* %69 to i64
  br label %43

43:                                               ; preds = %41, %18
  %44 = phi i64 [ %23, %18 ], [ %42, %41 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %64, %41 ]
  %46 = icmp eq %"struct.WTF::KeyValuePair"* %45, null
  %47 = ptrtoint %"struct.WTF::KeyValuePair"* %45 to i64
  %48 = select i1 %46, i64 %44, i64 %47
  br label %73

49:                                               ; preds = %27, %63
  %50 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %64, %63 ]
  %51 = phi i64 [ %23, %27 ], [ %70, %63 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %22, %27 ], [ %69, %63 ]
  %53 = phi i64 [ %21, %27 ], [ %68, %63 ]
  %54 = phi i64 [ 0, %27 ], [ %66, %63 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %53, i32 0, i32 4
  %56 = bitcast %"class.WTF::String"* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, inttoptr (i64 -1 to i8*)
  br i1 %58, label %63, label %59

59:                                               ; preds = %49
  %60 = bitcast i8* %57 to %"class.WTF::StringImpl"*
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %62 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"* %61) #11
  br i1 %62, label %73, label %63

63:                                               ; preds = %49, %59
  %64 = phi %"struct.WTF::KeyValuePair"* [ %50, %59 ], [ %52, %49 ]
  %65 = icmp eq i64 %54, 0
  %66 = select i1 %65, i64 %40, i64 %54
  %67 = add i64 %66, %53
  %68 = and i64 %67, %9
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %68
  %70 = ptrtoint %"struct.WTF::KeyValuePair"* %69 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #11
  %72 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %71, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #11
  br i1 %72, label %41, label %49

73:                                               ; preds = %59, %43
  %74 = phi i64 [ %48, %43 ], [ %51, %59 ]
  %75 = phi i8 [ 0, %43 ], [ 1, %59 ]
  %76 = inttoptr i64 %74 to %"struct.WTF::KeyValuePair"*
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %77, i8 %75, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.5"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink35AlternateSignedExchangeResourceInfo5EntryENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.5"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__19make_pairIKN3WTF6StringENS_4pairIS2_S2_EEEENS4_INS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__19make_pairIKN3WTF6StringENS_4pairIS2_S2_EEEENS4_INS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS_6VectorINSt3__110unique_ptrINS2_35AlternateSignedExchangeResourceInfo5EntryENS6_14default_deleteIS9_EEEELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS_6VectorINSt3__110unique_ptrINS2_35AlternateSignedExchangeResourceInfo5EntryENS6_14default_deleteIS9_EEEELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS_6VectorINSt3__110unique_ptrINS2_35AlternateSignedExchangeResourceInfo5EntryENS6_14default_deleteIS9_EEEELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS_6VectorINSt3__110unique_ptrINS2_35AlternateSignedExchangeResourceInfo5EntryENS6_14default_deleteIS9_EEEELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
