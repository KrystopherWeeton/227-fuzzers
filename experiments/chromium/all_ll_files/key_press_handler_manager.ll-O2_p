; ModuleID = '../../components/autofill/content/browser/key_press_handler_manager.cc'
source_filename = "../../components/autofill/content/browser/key_press_handler_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::KeyPressHandlerManager" = type { i32 (...)**, %"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.autofill::KeyPressHandlerManager::Delegate" = type { i32 (...)** }

@_ZTVN8autofill22KeyPressHandlerManagerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::KeyPressHandlerManager"*)* @_ZN8autofill22KeyPressHandlerManagerD2Ev to i8*), i8* bitcast (void (%"class.autofill::KeyPressHandlerManager"*)* @_ZN8autofill22KeyPressHandlerManagerD0Ev to i8*)] }, align 8

@_ZN8autofill22KeyPressHandlerManagerC1EPNS0_8DelegateE = hidden unnamed_addr alias void (%"class.autofill::KeyPressHandlerManager"*, %"class.autofill::KeyPressHandlerManager::Delegate"*), void (%"class.autofill::KeyPressHandlerManager"*, %"class.autofill::KeyPressHandlerManager::Delegate"*)* @_ZN8autofill22KeyPressHandlerManagerC2EPNS0_8DelegateE
@_ZN8autofill22KeyPressHandlerManagerD1Ev = hidden unnamed_addr alias void (%"class.autofill::KeyPressHandlerManager"*), void (%"class.autofill::KeyPressHandlerManager"*)* @_ZN8autofill22KeyPressHandlerManagerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8autofill22KeyPressHandlerManagerC2EPNS0_8DelegateE(%"class.autofill::KeyPressHandlerManager"* nocapture, %"class.autofill::KeyPressHandlerManager::Delegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill22KeyPressHandlerManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 1
  store %"class.autofill::KeyPressHandlerManager::Delegate"* %1, %"class.autofill::KeyPressHandlerManager::Delegate"** %4, align 8
  %5 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22KeyPressHandlerManagerD2Ev(%"class.autofill::KeyPressHandlerManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill22KeyPressHandlerManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22KeyPressHandlerManagerD0Ev(%"class.autofill::KeyPressHandlerManager"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill22KeyPressHandlerManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #5
  %4 = bitcast %"class.autofill::KeyPressHandlerManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22KeyPressHandlerManager23RegisterKeyPressHandlerERKN4base17RepeatingCallbackIFbRKN7content22NativeWebKeyboardEventEEEE(%"class.autofill::KeyPressHandlerManager"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase14EqualsInternalERKS1_(%"class.base::internal::CallbackBase"* %7, %"class.base::internal::CallbackBase"* dereferenceable(8) %9) #5
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 1
  %17 = load %"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.autofill::KeyPressHandlerManager::Delegate"** %16, align 8
  %18 = bitcast %"class.autofill::KeyPressHandlerManager::Delegate"* %17 to void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)***
  %19 = load void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)**, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)** %19, i64 1
  %21 = load void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)** %20, align 8
  tail call void %21(%"class.autofill::KeyPressHandlerManager::Delegate"* %17, %"class.base::RepeatingCallback"* dereferenceable(8) %8) #5
  br label %22

22:                                               ; preds = %15, %11
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %25 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %23, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %24) #5
  %26 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 1
  %27 = load %"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.autofill::KeyPressHandlerManager::Delegate"** %26, align 8
  %28 = bitcast %"class.autofill::KeyPressHandlerManager::Delegate"* %27 to void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)***
  %29 = load void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)**, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*** %28, align 8
  %30 = load void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)** %29, align 8
  tail call void %30(%"class.autofill::KeyPressHandlerManager::Delegate"* %27, %"class.base::RepeatingCallback"* dereferenceable(8) %8) #5
  br label %31

31:                                               ; preds = %2, %6, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22KeyPressHandlerManager21RemoveKeyPressHandlerEv(%"class.autofill::KeyPressHandlerManager"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.autofill::KeyPressHandlerManager", %"class.autofill::KeyPressHandlerManager"* %0, i64 0, i32 1
  %9 = load %"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.autofill::KeyPressHandlerManager::Delegate"** %8, align 8
  %10 = bitcast %"class.autofill::KeyPressHandlerManager::Delegate"* %9 to void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)***
  %11 = load void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)**, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)** %11, i64 1
  %13 = load void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)*, void (%"class.autofill::KeyPressHandlerManager::Delegate"*, %"class.base::RepeatingCallback"*)** %12, align 8
  tail call void %13(%"class.autofill::KeyPressHandlerManager::Delegate"* %9, %"class.base::RepeatingCallback"* dereferenceable(8) %2) #5
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %7) #5
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal12CallbackBase14EqualsInternalERKS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
