; ModuleID = '../../third_party/webrtc/net/dcsctp/packet/error_cause/missing_mandatory_parameter_cause.cc'
source_filename = "../../third_party/webrtc/net/dcsctp/packet/error_cause/missing_mandatory_parameter_cause.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.dcsctp::MissingMandatoryParameterCause" }
%"class.dcsctp::MissingMandatoryParameterCause" = type { %"class.dcsctp::Parameter", %"class.std::__1::vector" }
%"class.dcsctp::Parameter" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.dcsctp::BoundedByteReader" }
%"class.dcsctp::BoundedByteReader" = type { %"class.rtc::ArrayView" }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { i8*, i8*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.23 }
%union.anon.23 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::StringBuilder" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6dcsctp8TLVTraitINS_36MissingMandatoryParameterCauseConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE = comdat any

$_ZN6dcsctp30MissingMandatoryParameterCauseD2Ev = comdat any

$_ZN6dcsctp7StrJoinINSt3__16vectorItNS1_9allocatorItEEEEEENS1_12basic_stringIcNS1_11char_traitsIcEENS3_IcEEEERKT_N4absl11string_viewE = comdat any

$_ZN6dcsctp30MissingMandatoryParameterCauseD0Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZN6dcsctp30MissingMandatoryParameterCause5kTypeE = hidden local_unnamed_addr constant i32 2, align 4
@.str = private unnamed_addr constant [54 x i8] c"Missing Mandatory Parameter, missing_parameter_types=\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZTVN6dcsctp30MissingMandatoryParameterCauseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dcsctp::MissingMandatoryParameterCause"*)* @_ZN6dcsctp30MissingMandatoryParameterCauseD2Ev to i8*), i8* bitcast (void (%"class.dcsctp::MissingMandatoryParameterCause"*)* @_ZN6dcsctp30MissingMandatoryParameterCauseD0Ev to i8*), i8* bitcast (void (%"class.dcsctp::MissingMandatoryParameterCause"*, %"class.std::__1::vector.11"*)* @_ZNK6dcsctp30MissingMandatoryParameterCause11SerializeToERNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.dcsctp::MissingMandatoryParameterCause"*)* @_ZNK6dcsctp30MissingMandatoryParameterCause8ToStringEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6dcsctp30MissingMandatoryParameterCause5ParseEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.1", align 8
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca %"class.dcsctp::MissingMandatoryParameterCause", align 8
  %7 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = icmp eq i64 %2, 0
  %9 = select i1 %8, i8* null, i8* %1
  call void @_ZN6dcsctp8TLVTraitINS_36MissingMandatoryParameterCauseConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional.1"* nonnull sret %4, i8* %9, i64 %2)
  %10 = load i8, i8* %7, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %union.anon* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #9
  br label %182

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 24
  %23 = getelementptr inbounds i8, i8* %18, i64 5
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = shl nuw nsw i64 %25, 16
  %27 = or i64 %26, %22
  %28 = getelementptr inbounds i8, i8* %18, i64 6
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = or i64 %27, %31
  %33 = getelementptr inbounds i8, i8* %18, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = or i64 %32, %35
  %37 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, -8
  %40 = shl nuw nsw i64 %36, 1
  %41 = icmp eq i64 %39, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %16
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %union.anon* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false) #9
  br label %182

46:                                               ; preds = %16
  %47 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 0, i64 24, i1 false) #9
  %51 = bitcast i16** %50 to i64*
  %52 = bitcast %"class.std::__1::vector"* %5 to i64*
  %53 = icmp eq i64 %36, 0
  %54 = bitcast i16** %49 to i64*
  br i1 %53, label %69, label %55

55:                                               ; preds = %46
  %56 = call i8* @_Znwm(i64 %39) #10
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i16, i16* %57, i64 %36
  %59 = ptrtoint i16* %58 to i64
  %60 = insertelement <2 x i8*> undef, i8* %56, i32 0
  %61 = shufflevector <2 x i8*> %60, <2 x i8*> undef, <2 x i32> zeroinitializer
  %62 = ptrtoint <2 x i8*> %61 to <2 x i64>
  %63 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %63, align 16
  store i64 %59, i64* %51, align 16
  %64 = bitcast i16** %49 to i64*
  br label %113

65:                                               ; preds = %176
  %66 = load i16*, i16** %48, align 16
  %67 = bitcast i16* %66 to i8*
  %68 = load i64, i64* %64, align 8
  br label %69

69:                                               ; preds = %46, %65
  %70 = phi i64* [ %64, %65 ], [ %54, %46 ]
  %71 = phi i8* [ %67, %65 ], [ null, %46 ]
  %72 = phi i16* [ %66, %65 ], [ null, %46 ]
  %73 = phi i64 [ %68, %65 ], [ 0, %46 ]
  %74 = bitcast %"class.dcsctp::MissingMandatoryParameterCause"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #9
  %75 = ptrtoint i16* %72 to i64
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 1
  %78 = icmp eq i64 %76, 0
  %79 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp30MissingMandatoryParameterCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %6, i64 0, i32 1
  %81 = bitcast %"class.std::__1::vector"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #9
  br i1 %78, label %97, label %82

82:                                               ; preds = %69
  %83 = icmp slt i64 %76, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %80 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #11
  unreachable

86:                                               ; preds = %82
  %87 = call i8* @_Znwm(i64 %76) #10
  %88 = bitcast i8* %87 to i16*
  %89 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %6, i64 0, i32 1, i32 0, i32 1
  %90 = bitcast i16** %89 to i8**
  store i8* %87, i8** %90, align 8
  %91 = bitcast %"class.std::__1::vector"* %80 to i8**
  store i8* %87, i8** %91, align 8
  %92 = getelementptr inbounds i16, i16* %88, i64 %77
  %93 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %6, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i16* %92, i16** %93, align 8
  %94 = bitcast i16** %89 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %87, i8* align 2 %71, i64 %76, i1 false) #9
  %95 = ptrtoint i16* %92 to i64
  store i64 %95, i64* %94, align 8
  %96 = ptrtoint i8* %87 to i64
  br label %97

97:                                               ; preds = %86, %69
  %98 = phi i64 [ %95, %86 ], [ 0, %69 ]
  %99 = phi i64 [ %96, %86 ], [ 0, %69 ]
  %100 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %100, align 8
  %101 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp30MissingMandatoryParameterCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %103 = bitcast %"class.std::__1::vector"* %102 to i64*
  store i64 %99, i64* %103, align 8
  %104 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %105 = bitcast i16** %104 to i64*
  store i64 %98, i64* %105, align 8
  %106 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast i16** %106 to i64*
  store i64 %98, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #9
  %108 = icmp eq i16* %72, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %97
  %110 = ptrtoint i16* %72 to i64
  store i64 %110, i64* %70, align 8
  call void @_ZdlPv(i8* %71) #10
  br label %111

111:                                              ; preds = %97, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9
  br label %182

112:                                              ; preds = %179
  call void @llvm.trap() #9
  unreachable

113:                                              ; preds = %55, %179
  %114 = phi i64 [ 0, %55 ], [ %177, %179 ]
  %115 = shl nuw i64 %114, 1
  %116 = add nuw nsw i64 %115, 8
  %117 = load i64, i64* %37, align 8
  %118 = icmp ugt i64 %117, %116
  %119 = load i8*, i8** %17, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %116
  %121 = select i1 %118, i8* %120, i8* null
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i16
  %124 = shl nuw i16 %123, 8
  %125 = getelementptr inbounds i8, i8* %121, i64 1
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i16
  %128 = or i16 %124, %127
  %129 = load i16*, i16** %49, align 8
  %130 = load i16*, i16** %50, align 16
  %131 = icmp ult i16* %129, %130
  %132 = ptrtoint i16* %130 to i64
  br i1 %131, label %133, label %136

133:                                              ; preds = %113
  store i16 %128, i16* %129, align 2
  %134 = getelementptr inbounds i16, i16* %129, i64 1
  %135 = ptrtoint i16* %134 to i64
  store i64 %135, i64* %64, align 8
  br label %176

136:                                              ; preds = %113
  %137 = ptrtoint i16* %129 to i64
  %138 = load i64, i64* %52, align 16
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 1
  %141 = add nsw i64 %140, 1
  %142 = icmp slt i64 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %144) #11
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %132, %138
  %147 = ashr exact i64 %146, 1
  %148 = icmp ult i64 %147, 4611686018427387903
  %149 = icmp ult i64 %146, %141
  %150 = select i1 %149, i64 %141, i64 %146
  %151 = select i1 %148, i64 %150, i64 9223372036854775807
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %160, label %153

153:                                              ; preds = %145
  %154 = icmp slt i64 %151, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %153
  call void @abort() #11
  unreachable

156:                                              ; preds = %153
  %157 = shl i64 %151, 1
  %158 = call i8* @_Znwm(i64 %157) #10
  %159 = bitcast i8* %158 to i16*
  br label %160

160:                                              ; preds = %156, %145
  %161 = phi i8* [ %158, %156 ], [ null, %145 ]
  %162 = phi i16* [ %159, %156 ], [ null, %145 ]
  %163 = getelementptr inbounds i16, i16* %162, i64 %140
  %164 = getelementptr inbounds i16, i16* %162, i64 %151
  %165 = ptrtoint i16* %164 to i64
  store i16 %128, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  %167 = ptrtoint i16* %166 to i64
  %168 = ptrtoint i16* %162 to i64
  %169 = icmp sgt i64 %139, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %160
  %171 = inttoptr i64 %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %161, i8* align 2 %171, i64 %139, i1 false) #9
  br label %172

172:                                              ; preds = %170, %160
  store i64 %168, i64* %52, align 16
  store i64 %167, i64* %64, align 8
  store i64 %165, i64* %51, align 16
  %173 = icmp eq i64 %138, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %172
  %175 = inttoptr i64 %138 to i8*
  call void @_ZdlPv(i8* %175) #10
  br label %176

176:                                              ; preds = %133, %172, %174
  %177 = add nuw nsw i64 %114, 1
  %178 = icmp eq i64 %177, %36
  br i1 %178, label %65, label %179

179:                                              ; preds = %176
  %180 = load i8, i8* %7, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %112, label %113, !prof !3

182:                                              ; preds = %42, %111, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp8TLVTraitINS_36MissingMandatoryParameterCauseConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional.1"* noalias sret, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  tail call void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidSizeEmm(i64 %2, i64 8) #9
  %6 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  br label %48

7:                                                ; preds = %3
  %8 = load i8, i8* %1, align 1
  %9 = zext i8 %8 to i16
  %10 = shl nuw i16 %9, 8
  %11 = getelementptr inbounds i8, i8* %1, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = or i16 %10, %13
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = zext i16 %14 to i32
  tail call void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidTypeEii(i32 %17, i32 2) #9
  %18 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 8
  br label %48

19:                                               ; preds = %7
  %20 = getelementptr inbounds i8, i8* %1, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  %23 = shl nuw i16 %22, 8
  %24 = getelementptr inbounds i8, i8* %1, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = or i16 %23, %26
  %28 = zext i16 %27 to i64
  %29 = icmp ugt i64 %28, %2
  %30 = icmp ult i16 %27, 8
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %34

32:                                               ; preds = %19
  tail call void @_ZN6dcsctp14tlv_trait_impl32ReportInvalidVariableLengthFieldEmm(i64 %28, i64 %2) #9
  %33 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 8
  br label %48

34:                                               ; preds = %19
  %35 = sub i64 %2, %28
  %36 = icmp ugt i64 %35, 3
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  tail call void @_ZN6dcsctp14tlv_trait_impl20ReportInvalidPaddingEm(i64 %35) #9
  %38 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  br label %48

39:                                               ; preds = %34
  %40 = and i16 %26, 1
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  tail call void @_ZN6dcsctp14tlv_trait_impl27ReportInvalidLengthMultipleEmm(i64 %28, i64 2) #9
  %43 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 8
  br label %48

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8* %1, i8** %46, align 8
  %47 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %47, align 8
  br label %48

48:                                               ; preds = %16, %42, %37, %44, %32, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp30MissingMandatoryParameterCauseD2Ev(%"class.dcsctp::MissingMandatoryParameterCause"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp30MissingMandatoryParameterCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6dcsctp30MissingMandatoryParameterCause11SerializeToERNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.dcsctp::MissingMandatoryParameterCause"* nocapture readonly, %"class.std::__1::vector.11"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.11"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = add i64 %9, 8
  %17 = add i64 %15, %16
  %18 = icmp ult i64 %15, %17
  %19 = inttoptr i64 %14 to i8*
  br i1 %18, label %20, label %23

20:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.11"* %1, i64 %16) #9
  %21 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br label %27

23:                                               ; preds = %2
  %24 = icmp ugt i64 %15, %17
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %19, i64 %17
  store i8* %26, i8** %10, align 8
  br label %27

27:                                               ; preds = %20, %23, %25
  %28 = phi i8* [ %22, %20 ], [ %19, %23 ], [ %19, %25 ]
  %29 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds i8, i8* %28, i64 %15
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 2, i8* %31, align 1
  %32 = trunc i64 %16 to i16
  %33 = getelementptr inbounds i8, i8* %30, i64 2
  %34 = lshr i16 %32, 8
  %35 = trunc i16 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = trunc i64 %16 to i8
  %37 = getelementptr inbounds i8, i8* %30, i64 3
  store i8 %36, i8* %37, align 1
  %38 = load i8*, i8** %29, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %15
  %40 = icmp eq i64 %16, 0
  %41 = select i1 %40, i8* null, i8* %39
  %42 = load i64, i64* %5, align 8
  %43 = load i64, i64* %7, align 8
  %44 = sub i64 %42, %43
  %45 = lshr exact i64 %44, 1
  %46 = getelementptr inbounds i8, i8* %41, i64 4
  %47 = lshr i64 %44, 25
  %48 = trunc i64 %47 to i8
  store i8 %48, i8* %46, align 1
  %49 = lshr i64 %44, 17
  %50 = trunc i64 %49 to i8
  %51 = getelementptr inbounds i8, i8* %41, i64 5
  store i8 %50, i8* %51, align 1
  %52 = lshr i64 %44, 9
  %53 = trunc i64 %52 to i8
  %54 = getelementptr inbounds i8, i8* %41, i64 6
  store i8 %53, i8* %54, align 1
  %55 = trunc i64 %45 to i8
  %56 = getelementptr inbounds i8, i8* %41, i64 7
  store i8 %55, i8* %56, align 1
  %57 = load i64, i64* %5, align 8
  %58 = load i64, i64* %7, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %61, %27
  ret void

61:                                               ; preds = %27, %61
  %62 = phi i64 [ %78, %61 ], [ %58, %27 ]
  %63 = phi i64 [ %76, %61 ], [ 0, %27 ]
  %64 = inttoptr i64 %62 to i16*
  %65 = shl i64 %63, 1
  %66 = add i64 %65, 8
  %67 = icmp ugt i64 %16, %66
  %68 = getelementptr inbounds i8, i8* %41, i64 %66
  %69 = select i1 %67, i8* %68, i8* null
  %70 = getelementptr inbounds i16, i16* %64, i64 %63
  %71 = load i16, i16* %70, align 2
  %72 = lshr i16 %71, 8
  %73 = trunc i16 %72 to i8
  store i8 %73, i8* %69, align 1
  %74 = trunc i16 %71 to i8
  %75 = getelementptr inbounds i8, i8* %69, i64 1
  store i8 %74, i8* %75, align 1
  %76 = add nuw i64 %63, 1
  %77 = load i64, i64* %5, align 8
  %78 = load i64, i64* %7, align 8
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 1
  %81 = icmp ult i64 %76, %80
  br i1 %81, label %61, label %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6dcsctp30MissingMandatoryParameterCause8ToStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.dcsctp::MissingMandatoryParameterCause"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::StringBuilder", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.rtc::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = getelementptr inbounds %"class.rtc::StringBuilder", %"class.rtc::StringBuilder"* %3, i64 0, i32 0
  %7 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 53) #9
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %1, i64 0, i32 1
  call void @_ZN6dcsctp7StrJoinINSt3__16vectorItNS1_9allocatorItEEEEEENS1_12basic_stringIcNS1_11char_traitsIcEENS3_IcEEEERKT_N4absl11string_viewE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::vector"* dereferenceable(24) %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1)
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = zext i8 %12 to i64
  %16 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  br label %24

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, -1
  br i1 %22, label %24, label %23, !prof !4

23:                                               ; preds = %17
  call void @llvm.trap() #9
  unreachable

24:                                               ; preds = %14, %17
  %25 = phi i64 [ %19, %17 ], [ %16, %14 ]
  %26 = phi i64 [ %21, %17 ], [ %15, %14 ]
  %27 = inttoptr i64 %25 to i8*
  %28 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %27, i64 %26) #9
  %29 = load i8, i8* %11, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %31, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %5, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp7StrJoinINSt3__16vectorItNS1_9allocatorItEEEEEENS1_12basic_stringIcNS1_11char_traitsIcEENS3_IcEEEERKT_N4absl11string_viewE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector"* dereferenceable(24), i8*, i64) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.rtc::StringBuilder", align 8
  %7 = bitcast %"class.rtc::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = load i16*, i16** %10, align 8
  %12 = icmp eq i16* %9, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.rtc::StringBuilder", %"class.rtc::StringBuilder"* %6, i64 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %22

20:                                               ; preds = %43, %4
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %7, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void

22:                                               ; preds = %13, %43
  %23 = phi i32 [ 0, %13 ], [ %44, %43 ]
  %24 = phi i16* [ %9, %13 ], [ %45, %43 ]
  %25 = icmp eq i32 %23, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %2, i64 %3) #9
  br label %28

28:                                               ; preds = %22, %26
  %29 = load i16, i16* %24, align 2
  %30 = zext i16 %29 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  call void @_ZN3rtc8ToStringEi(%"class.std::__1::basic_string"* nonnull sret %5, i32 %30) #9
  %31 = load i8, i8* %17, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i8*, i8** %18, align 8
  %34 = load i64, i64* %19, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i8* %33, i8* %15
  %37 = select i1 %32, i64 %34, i64 %35
  %38 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %36, i64 %37) #9
  %39 = load i8, i8* %17, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %28, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  %44 = add nuw nsw i32 %23, 1
  %45 = getelementptr inbounds i16, i16* %24, i64 1
  %46 = icmp eq i16* %45, %11
  br i1 %46, label %20, label %22
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp30MissingMandatoryParameterCauseD0Ev(%"class.dcsctp::MissingMandatoryParameterCause"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp30MissingMandatoryParameterCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"class.dcsctp::MissingMandatoryParameterCause", %"class.dcsctp::MissingMandatoryParameterCause"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.dcsctp::MissingMandatoryParameterCause"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidSizeEmm(i64, i64) local_unnamed_addr #7

declare void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidTypeEii(i32, i32) local_unnamed_addr #7

declare void @_ZN6dcsctp14tlv_trait_impl32ReportInvalidVariableLengthFieldEmm(i64, i64) local_unnamed_addr #7

declare void @_ZN6dcsctp14tlv_trait_impl20ReportInvalidPaddingEm(i64) local_unnamed_addr #7

declare void @_ZN6dcsctp14tlv_trait_impl27ReportInvalidLengthMultipleEmm(i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.11"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

declare void @_ZN3rtc8ToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
