; ModuleID = '../../chrome/browser/ui/webui/internals/user_education/user_education_internals_page_handler_impl.cc'
source_filename = "../../chrome/browser/ui/webui/internals/user_education/user_education_internals_page_handler_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.UserEducationInternalsPageHandlerImpl = type { %"class.mojom::user_education_internals::UserEducationInternalsPageHandler", %class.FeatureTutorialService* }
%"class.mojom::user_education_internals::UserEducationInternalsPageHandler" = type { i32 (...)** }
%class.FeatureTutorialService = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.31", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.34" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_ = comdat any

@_ZTV37UserEducationInternalsPageHandlerImpl = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.UserEducationInternalsPageHandlerImpl*)* @_ZN37UserEducationInternalsPageHandlerImplD2Ev to i8*), i8* bitcast (void (%class.UserEducationInternalsPageHandlerImpl*)* @_ZN37UserEducationInternalsPageHandlerImplD0Ev to i8*), i8* bitcast (void (%class.UserEducationInternalsPageHandlerImpl*, %"class.base::OnceCallback"*)* @_ZN37UserEducationInternalsPageHandlerImpl12GetTutorialsEN4base12OnceCallbackIFvRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEE to i8*), i8* bitcast (void (%class.UserEducationInternalsPageHandlerImpl*, %"class.std::__1::basic_string"*)* @_ZN37UserEducationInternalsPageHandlerImpl13StartTutorialERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*)] }, align 8

@_ZN37UserEducationInternalsPageHandlerImplC1EP7Profile = hidden unnamed_addr alias void (%class.UserEducationInternalsPageHandlerImpl*, %class.Profile*), void (%class.UserEducationInternalsPageHandlerImpl*, %class.Profile*)* @_ZN37UserEducationInternalsPageHandlerImplC2EP7Profile
@_ZN37UserEducationInternalsPageHandlerImplD1Ev = hidden unnamed_addr alias void (%class.UserEducationInternalsPageHandlerImpl*), void (%class.UserEducationInternalsPageHandlerImpl*)* @_ZN37UserEducationInternalsPageHandlerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN37UserEducationInternalsPageHandlerImplC2EP7Profile(%class.UserEducationInternalsPageHandlerImpl* nocapture, %class.Profile*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UserEducationInternalsPageHandlerImpl, %class.UserEducationInternalsPageHandlerImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV37UserEducationInternalsPageHandlerImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.UserEducationInternalsPageHandlerImpl, %class.UserEducationInternalsPageHandlerImpl* %0, i64 0, i32 1
  %5 = tail call %class.FeatureTutorialService* @_ZN29FeatureTutorialServiceFactory13GetForProfileEP7Profile(%class.Profile* %1) #9
  store %class.FeatureTutorialService* %5, %class.FeatureTutorialService** %4, align 8
  ret void
}

declare %class.FeatureTutorialService* @_ZN29FeatureTutorialServiceFactory13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN37UserEducationInternalsPageHandlerImplD2Ev(%class.UserEducationInternalsPageHandlerImpl* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN37UserEducationInternalsPageHandlerImplD0Ev(%class.UserEducationInternalsPageHandlerImpl*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.UserEducationInternalsPageHandlerImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN37UserEducationInternalsPageHandlerImpl12GetTutorialsEN4base12OnceCallbackIFvRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEE(%class.UserEducationInternalsPageHandlerImpl* nocapture readnone, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.std::__1::vector.32", align 8
  %5 = alloca %"class.std::__1::vector.39", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = bitcast %"class.std::__1::vector.32"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %4, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.32"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_Z30GetAllFeatureTutorialStringIdsv(%"class.std::__1::vector.32"* nonnull sret %4) #9
  %12 = bitcast %"class.std::__1::vector.39"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  %16 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %17 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %18 = icmp eq %"class.base::BasicStringPiece"* %16, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = bitcast i8** %6 to i8*
  %21 = bitcast i64* %7 to i8*
  %22 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  br label %65

23:                                               ; preds = %102, %2
  %24 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %30 = inttoptr i64 %27 to %"class.base::internal::BindStateBase"*
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.39"*)**
  %33 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.39"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.39"*)** %32, align 8
  call void %33(%"class.base::internal::BindStateBase"* %30, %"class.std::__1::vector.39"* nonnull dereferenceable(24) %5) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %35 = icmp eq %"class.std::__1::basic_string"* %34, null
  br i1 %35, label %57, label %36

36:                                               ; preds = %23
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, %34
  br i1 %39, label %55, label %40

40:                                               ; preds = %36, %50
  %41 = phi %"class.std::__1::basic_string"* [ %42, %50 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 -1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %47, %40
  %51 = icmp eq %"class.std::__1::basic_string"* %42, %34
  br i1 %51, label %52, label %40

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.39"* %5 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi i8* [ %54, %52 ], [ %37, %36 ]
  store %"class.std::__1::basic_string"* %34, %"class.std::__1::basic_string"** %14, align 8
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %23, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  %58 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %59 = icmp eq %"class.base::BasicStringPiece"* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = ptrtoint %"class.base::BasicStringPiece"* %58 to i64
  %62 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  store i64 %61, i64* %62, align 8
  %63 = bitcast %"class.base::BasicStringPiece"* %58 to i8*
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void

65:                                               ; preds = %105, %19
  %66 = phi %"class.std::__1::basic_string"* [ null, %19 ], [ %108, %105 ]
  %67 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ null, %19 ], [ %107, %105 ]
  %68 = phi %"class.std::__1::basic_string"* [ null, %19 ], [ %106, %105 ]
  %69 = phi %"class.base::BasicStringPiece"* [ %16, %19 ], [ %103, %105 ]
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  store i8* %71, i8** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  store i64 %73, i64* %7, align 8
  %74 = icmp ult %"class.std::__1::basic_string"* %68, %66
  br i1 %74, label %75, label %101

75:                                               ; preds = %65
  %76 = icmp ugt i64 %73, -17
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::basic_string"* %68 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %78) #11
  unreachable

79:                                               ; preds = %75
  %80 = icmp ult i64 %73, 23
  br i1 %80, label %89, label %81

81:                                               ; preds = %79
  %82 = add nuw i64 %73, 16
  %83 = and i64 %82, -16
  %84 = call i8* @_Znwm(i64 %83) #10
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %84, i8** %85, align 8
  %86 = or i64 %83, -9223372036854775808
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %88, align 8
  br label %94

89:                                               ; preds = %79
  %90 = trunc i64 %73 to i8
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  store i8 %90, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  %93 = icmp eq i64 %73, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %89, %81
  %95 = phi i8* [ %84, %81 ], [ %92, %89 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %71, i64 %73, i1 false) #9
  br label %96

96:                                               ; preds = %94, %89
  %97 = phi i8* [ %92, %89 ], [ %95, %94 ]
  %98 = getelementptr inbounds i8, i8* %97, i64 %73
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 1
  %100 = ptrtoint %"class.std::__1::basic_string"* %99 to i64
  store i64 %100, i64* %22, align 8
  br label %102

101:                                              ; preds = %65
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_(%"class.std::__1::vector.39"* nonnull %5, i8** nonnull dereferenceable(8) %6, i64* nonnull dereferenceable(8) %7) #9
  br label %102

102:                                              ; preds = %96, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %103 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 1
  %104 = icmp eq %"class.base::BasicStringPiece"* %103, %17
  br i1 %104, label %23, label %105

105:                                              ; preds = %102
  %106 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  br label %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_Z30GetAllFeatureTutorialStringIdsv(%"class.std::__1::vector.32"* sret) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN37UserEducationInternalsPageHandlerImpl13StartTutorialERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.UserEducationInternalsPageHandlerImpl* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = tail call i64 @_Z30GetFeatureTutorialFromStringIdN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %10, i64 %14) #9
  %16 = trunc i64 %15 to i8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %2
  %19 = lshr i64 %15, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %class.UserEducationInternalsPageHandlerImpl, %class.UserEducationInternalsPageHandlerImpl* %0, i64 0, i32 1
  %22 = load %class.FeatureTutorialService*, %class.FeatureTutorialService** %21, align 8
  %23 = bitcast %class.FeatureTutorialService* %22 to i1 (%class.FeatureTutorialService*, i32)***
  %24 = load i1 (%class.FeatureTutorialService*, i32)**, i1 (%class.FeatureTutorialService*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.FeatureTutorialService*, i32)*, i1 (%class.FeatureTutorialService*, i32)** %24, i64 3
  %26 = load i1 (%class.FeatureTutorialService*, i32)*, i1 (%class.FeatureTutorialService*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%class.FeatureTutorialService* %22, i32 %20) #9
  br label %28

28:                                               ; preds = %2, %18
  ret void
}

declare i64 @_Z30GetFeatureTutorialFromStringIdN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_(%"class.std::__1::vector.39"*, i8** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #11
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %20, 384307168202282325
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 768614336404564650, %15 ]
  %29 = mul i64 %28, 24
  %30 = tail call i8* @_Znwm(i64 %29) #10
  %31 = bitcast i8* %30 to %"class.std::__1::basic_string"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %33
  %37 = ptrtoint %"class.std::__1::basic_string"* %36 to i64
  %38 = load i8*, i8** %1, align 8
  %39 = load i64, i64* %2, align 8
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::basic_string"* %35 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %42) #11
  unreachable

43:                                               ; preds = %32
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %39, 16
  %47 = and i64 %46, -16
  %48 = tail call i8* @_Znwm(i64 %47) #10
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %52, align 8
  br label %59

53:                                               ; preds = %43
  %54 = trunc i64 %39 to i8
  %55 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %58 = icmp eq i64 %39, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %45
  %60 = phi i8* [ %48, %45 ], [ %57, %53 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %38, i64 %39, i1 false) #9
  br label %61

61:                                               ; preds = %53, %59
  %62 = phi i8* [ %57, %53 ], [ %60, %59 ]
  %63 = getelementptr inbounds i8, i8* %62, i64 %39
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %66, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %67
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  br label %83

72:                                               ; preds = %61, %72
  %73 = phi %"class.std::__1::basic_string"* [ %75, %72 ], [ %35, %61 ]
  %74 = phi %"class.std::__1::basic_string"* [ %76, %72 ], [ %68, %61 ]
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %77 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #9
  %79 = icmp eq %"class.std::__1::basic_string"* %76, %67
  br i1 %79, label %80, label %72

80:                                               ; preds = %72
  %81 = load i64, i64* %7, align 8
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  br label %83

83:                                               ; preds = %70, %80
  %84 = phi %"class.std::__1::basic_string"* [ %67, %70 ], [ %82, %80 ]
  %85 = phi %"class.std::__1::basic_string"* [ %35, %70 ], [ %75, %80 ]
  %86 = phi i64 [ %71, %70 ], [ %81, %80 ]
  %87 = ptrtoint %"class.std::__1::basic_string"* %85 to i64
  store i64 %87, i64* %7, align 8
  store i64 %65, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %88 = inttoptr i64 %86 to %"class.std::__1::basic_string"*
  %89 = icmp eq %"class.std::__1::basic_string"* %84, %88
  br i1 %89, label %102, label %90

90:                                               ; preds = %83, %100
  %91 = phi %"class.std::__1::basic_string"* [ %92, %100 ], [ %84, %83 ]
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 -1
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  tail call void @_ZdlPv(i8* %99) #10
  br label %100

100:                                              ; preds = %97, %90
  %101 = icmp eq %"class.std::__1::basic_string"* %92, %88
  br i1 %101, label %102, label %90

102:                                              ; preds = %100, %83
  %103 = icmp eq i64 %86, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %86 to i8*
  tail call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %102, %104
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
