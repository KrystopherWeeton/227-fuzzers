; ModuleID = '../../net/nqe/socket_watcher.cc'
source_filename = "../../net/nqe/socket_watcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::nqe::internal::SocketWatcher" = type { %"class.net::SocketPerformanceWatcher", i32, %class.scoped_refptr, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3", %"class.base::TimeDelta", i8, %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.absl::optional" }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.3" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.5" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::basic_string"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", %"class.base::RepeatingCallback", %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.18", %"class.std::__1::__tuple_leaf.19" }
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.18" = type { %"class.base::TimeDelta" }
%"class.std::__1::__tuple_leaf.19" = type { %"class.absl::optional" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS5_S6_SB_EE6CreateIRSF_JRKS5_S8_SD_EEEPSG_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS6_S7_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS5_S6_SB_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS6_S7_SC_EEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE = comdat any

@_ZTVN3net3nqe8internal13SocketWatcherE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::nqe::internal::SocketWatcher"*)* @_ZN3net3nqe8internal13SocketWatcherD2Ev to i8*), i8* bitcast (void (%"class.net::nqe::internal::SocketWatcher"*)* @_ZN3net3nqe8internal13SocketWatcherD0Ev to i8*), i8* bitcast (i1 (%"class.net::nqe::internal::SocketWatcher"*)* @_ZNK3net3nqe8internal13SocketWatcher22ShouldNotifyUpdatedRTTEv to i8*), i8* bitcast (void (%"class.net::nqe::internal::SocketWatcher"*, %"class.base::TimeDelta"*)* @_ZN3net3nqe8internal13SocketWatcher21OnUpdatedRTTAvailableERKN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.net::nqe::internal::SocketWatcher"*)* @_ZN3net3nqe8internal13SocketWatcher19OnConnectionChangedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"OnUpdatedRTTAvailable\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"../../net/nqe/socket_watcher.cc\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN3net3nqe8internal13SocketWatcherC1ENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListEN4base9TimeDeltaEb13scoped_refptrINS8_22SingleThreadTaskRunnerEENS8_17RepeatingCallbackIFvS4_RKS9_RKN4absl8optionalImEEEEENSD_IFbNS8_9TimeTicksEEEEPKNS8_9TickClockE = hidden unnamed_addr alias void (%"class.net::nqe::internal::SocketWatcher"*, i32, %"class.net::AddressList"*, i64, i1, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*), void (%"class.net::nqe::internal::SocketWatcher"*, i32, %"class.net::AddressList"*, i64, i1, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*)* @_ZN3net3nqe8internal13SocketWatcherC2ENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListEN4base9TimeDeltaEb13scoped_refptrINS8_22SingleThreadTaskRunnerEENS8_17RepeatingCallbackIFvS4_RKS9_RKN4absl8optionalImEEEEENSD_IFbNS8_9TimeTicksEEEEPKNS8_9TickClockE
@_ZN3net3nqe8internal13SocketWatcherD1Ev = hidden unnamed_addr alias void (%"class.net::nqe::internal::SocketWatcher"*), void (%"class.net::nqe::internal::SocketWatcher"*)* @_ZN3net3nqe8internal13SocketWatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal13SocketWatcherC2ENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListEN4base9TimeDeltaEb13scoped_refptrINS8_22SingleThreadTaskRunnerEENS8_17RepeatingCallbackIFvS4_RKS9_RKN4absl8optionalImEEEEENSD_IFbNS8_9TimeTicksEEEEPKNS8_9TickClockE(%"class.net::nqe::internal::SocketWatcher"*, i32, %"class.net::AddressList"* nocapture readonly dereferenceable(48), i64, i1 zeroext, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %10 = alloca %"class.net::IPAddressBytes", align 1
  %11 = ptrtoint %"class.base::SingleThreadTaskRunner"* %5 to i64
  %12 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net3nqe8internal13SocketWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 1
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %16, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %17) #7
  %18 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 4, i32 0
  %19 = getelementptr inbounds %"class.base::RepeatingCallback.3", %"class.base::RepeatingCallback.3"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %18, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %19) #7
  %20 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 5, i32 0
  store i64 %3, i64* %20, align 8
  %21 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 6
  br i1 %4, label %32, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %23, align 8
  %25 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %25, align 8
  %27 = icmp eq %"class.net::IPEndPoint"* %24, %26
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 0, i32 0
  %30 = tail call zeroext i1 @_ZNK3net9IPAddress18IsPubliclyRoutableEv(%"class.net::IPAddress"* %29) #7
  %31 = zext i1 %30 to i8
  br label %32

32:                                               ; preds = %22, %28, %9
  %33 = phi i8 [ 1, %9 ], [ 0, %22 ], [ %31, %28 ]
  store i8 %33, i8* %21, align 8
  %34 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 8
  store %"class.base::TickClock"* %8, %"class.base::TickClock"** %35, align 8
  %36 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 9
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %37, align 8
  %39 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 1
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = icmp eq %"class.net::IPEndPoint"* %38, %40
  br i1 %41, label %87, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 0, i32 0
  %44 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %44) #7
  %45 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %44, i8 -86, i64 17, i1 false) #7
  call void @_ZN3net14IPAddressBytesC1ERKS0_(%"class.net::IPAddressBytes"* nonnull %10, %"class.net::IPAddressBytes"* dereferenceable(17) %45) #7
  %46 = call zeroext i1 @_ZNK3net9IPAddress16IsIPv4MappedIPv6Ev(%"class.net::IPAddress"* %43) #7
  %47 = select i1 %46, i32 12, i32 0
  %48 = call zeroext i1 @_ZNK3net9IPAddress16IsIPv4MappedIPv6Ev(%"class.net::IPAddress"* %43) #7
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %43) #7
  %51 = select i1 %50, i32 4, i32 8
  %52 = icmp ult i32 %47, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %49, %42
  %54 = phi i32 [ %51, %49 ], [ 16, %42 ]
  %55 = zext i32 %47 to i64
  %56 = zext i32 %54 to i64
  br label %59

57:                                               ; preds = %59, %49
  %58 = phi i64 [ 0, %49 ], [ %84, %59 ]
  call void @_ZN3net14IPAddressBytesD1Ev(%"class.net::IPAddressBytes"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %44) #7
  br label %87

59:                                               ; preds = %59, %53
  %60 = phi i64 [ %55, %53 ], [ %85, %59 ]
  %61 = phi i64 [ 0, %53 ], [ %84, %59 ]
  %62 = shl i64 %61, 8
  %63 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %10, i64 0, i32 0, i32 0, i64 %60
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  %66 = or i64 %62, %65
  %67 = or i64 %60, 1
  %68 = shl i64 %66, 8
  %69 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %10, i64 0, i32 0, i32 0, i64 %67
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = or i64 %68, %71
  %73 = or i64 %60, 2
  %74 = shl i64 %72, 8
  %75 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %10, i64 0, i32 0, i32 0, i64 %73
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = or i64 %74, %77
  %79 = or i64 %60, 3
  %80 = shl i64 %78, 8
  %81 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %10, i64 0, i32 0, i32 0, i64 %79
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i64
  %84 = or i64 %80, %83
  %85 = add nuw nsw i64 %60, 4
  %86 = icmp eq i64 %85, %56
  br i1 %86, label %57, label %59

87:                                               ; preds = %57, %32
  %88 = phi i64 [ %58, %57 ], [ undef, %32 ]
  %89 = phi i8 [ 1, %57 ], [ 0, %32 ]
  %90 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 %89, i8* %90, align 8
  %91 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %88, i64* %91, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK3net9IPAddress18IsPubliclyRoutableEv(%"class.net::IPAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal13SocketWatcherD2Ev(%"class.net::nqe::internal::SocketWatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net3nqe8internal13SocketWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #7
  %5 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 2, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #7
  br label %16

16:                                               ; preds = %1, %8, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal13SocketWatcherD0Ev(%"class.net::nqe::internal::SocketWatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net3nqe8internal13SocketWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #7
  %5 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 2, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #7
  br label %16

16:                                               ; preds = %1, %8, %13
  %17 = bitcast %"class.net::nqe::internal::SocketWatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net3nqe8internal13SocketWatcher22ShouldNotifyUpdatedRTTEv(%"class.net::nqe::internal::SocketWatcher"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 8
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #7
  %14 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 2, i32 0
  %15 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %16 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::SequencedTaskRunner"*
  %17 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to i1 (%"class.base::SequencedTaskRunner"*)***
  %18 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %18, i64 5
  %20 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.base::SequencedTaskRunner"* %16) #7
  br i1 %21, label %22, label %31

22:                                               ; preds = %6
  %23 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  store i64 %13, i64* %24, align 8
  %25 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %28 = bitcast void ()** %27 to i1 (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)**
  %29 = load i1 (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)** %28, align 8
  %30 = call zeroext i1 %29(%"class.base::internal::BindStateBase"* %26, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  br i1 %30, label %38, label %31

31:                                               ; preds = %22, %6
  %32 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 7, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = sub nsw i64 %13, %33
  %35 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 5, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp sge i64 %34, %36
  br label %38

38:                                               ; preds = %31, %22, %1
  %39 = phi i1 [ false, %1 ], [ %37, %31 ], [ true, %22 ]
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal13SocketWatcher21OnUpdatedRTTAvailableERKN4base9TimeDeltaE(%"class.net::nqe::internal::SocketWatcher"*, %"class.base::TimeDelta"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, 2
  br i1 %7, label %38, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store i8 1, i8* %9, align 8
  br label %38

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 8
  %19 = load %"class.base::TickClock"*, %"class.base::TickClock"** %18, align 8
  %20 = bitcast %"class.base::TickClock"* %19 to i64 (%"class.base::TickClock"*)***
  %21 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %21, i64 2
  %23 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::TickClock"* %19) #7
  %25 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.base::SingleThreadTaskRunner"** %26 to %"class.base::TaskRunner"**
  %28 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %27, align 8
  %29 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 125) #7
  %30 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcher", %"class.net::nqe::internal::SocketWatcher"* %0, i64 0, i32 10
  %33 = call %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS5_S6_SB_EE6CreateIRSF_JRKS5_S8_SD_EEEPSG_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS6_S7_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::RepeatingCallback"* dereferenceable(8) %30, i32* dereferenceable(4) %31, %"class.base::TimeDelta"* dereferenceable(8) %1, %"class.absl::optional"* dereferenceable(16) %32) #7, !noalias !3
  %34 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %34, %"class.base::internal::BindStateBase"** %35, align 8, !alias.scope !3
  %36 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %28, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #7
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  br label %38

38:                                               ; preds = %2, %17, %16
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net3nqe8internal13SocketWatcher19OnConnectionChangedEv(%"class.net::nqe::internal::SocketWatcher"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3net14IPAddressBytesC1ERKS0_(%"class.net::IPAddressBytes"*, %"class.net::IPAddressBytes"* dereferenceable(17)) unnamed_addr #2

declare zeroext i1 @_ZNK3net9IPAddress16IsIPv4MappedIPv6Ev(%"class.net::IPAddress"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net14IPAddressBytesD1Ev(%"class.net::IPAddressBytes"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS5_S6_SB_EE6CreateIRSF_JRKS5_S8_SD_EEEPSG_PFvvEOT_DpOT0_(void ()*, %"class.base::RepeatingCallback"* dereferenceable(8), i32* dereferenceable(4), %"class.base::TimeDelta"* dereferenceable(8), %"class.absl::optional"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = tail call i8* @_Znwm(i64 72) #8
  %8 = bitcast i8* %7 to %"struct.base::internal::BindState"*
  %9 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %9, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS5_S6_SB_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS6_S7_SC_EEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE) #7
  %10 = getelementptr inbounds i8, i8* %7, i64 32
  %11 = bitcast i8* %10 to %"class.base::internal::CallbackBaseCopyable"*
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %11, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %12) #7
  %13 = getelementptr inbounds i8, i8* %7, i64 40
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %2, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %17 = getelementptr inbounds i8, i8* %7, i64 48
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %16, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 56
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false) #7
  %22 = bitcast i8* %10 to %"class.base::internal::BindStateBase"**
  %23 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = icmp eq %"class.base::internal::BindStateBase"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %5
  %26 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)) #7
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  br label %28

28:                                               ; preds = %5, %25
  ret %"struct.base::internal::BindState"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS6_S7_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i32*
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.base::TimeDelta"*
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.absl::optional"*
  %10 = load i32, i32* %5, align 4
  %11 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  %17 = inttoptr i64 %14 to %"class.base::internal::BindStateBase"*
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeDelta"*, %"class.absl::optional"*)**
  %20 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeDelta"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeDelta"*, %"class.absl::optional"*)** %19, align 8
  tail call void %20(%"class.base::internal::BindStateBase"* %17, i32 %10, %"class.base::TimeDelta"* dereferenceable(8) %7, %"class.absl::optional"* dereferenceable(16) %9) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS5_S6_SB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #7
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJS6_S7_SC_EEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #7
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #7
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackERNS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJRKS6_S9_SE_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackERNS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJRKS6_S9_SE_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIRNS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJRKS4_S7_SC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIRNS_17RepeatingCallbackIFvN3net31SocketPerformanceWatcherFactory8ProtocolERKNS_9TimeDeltaERKN4absl8optionalImEEEEEJRKS4_S7_SC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
