; ModuleID = '../../third_party/icu/source/i18n/bocsu.cpp'
source_filename = "../../third_party/icu/source/i18n/bocsu.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::ByteSink" = type { i32 (...)** }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_writeIdenticalLevelRun_69(i32, i16* nocapture readonly, i32, %"class.icu_69::ByteSink"* dereferenceable(8)) local_unnamed_addr #0 {
  %5 = alloca [64 x i8], align 16
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 64, i1 false)
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #2
  store i32 -1431655766, i32* %6, align 4
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %201

10:                                               ; preds = %4
  %11 = shl nsw i32 %2, 1
  %12 = bitcast %"class.icu_69::ByteSink"* %3 to i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)***
  %13 = bitcast %"class.icu_69::ByteSink"* %3 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  br label %14

14:                                               ; preds = %10, %189
  %15 = phi i32 [ 0, %10 ], [ %191, %189 ]
  %16 = phi i32 [ %0, %10 ], [ %190, %189 ]
  %17 = load i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)**, i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)*** %12, align 8
  %18 = getelementptr inbounds i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)*, i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)** %17, i64 3
  %19 = load i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)*, i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)** %18, align 8
  %20 = call i8* %19(%"class.icu_69::ByteSink"* %3, i32 1, i32 %11, i8* nonnull %7, i32 64, i32* nonnull %6) #2
  %21 = load i32, i32* %6, align 4
  %22 = icmp slt i32 %21, 16
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  store i32 64, i32* %6, align 4
  br label %24

24:                                               ; preds = %23, %14
  %25 = phi i32 [ 64, %23 ], [ %21, %14 ]
  %26 = phi i8* [ %7, %23 ], [ %20, %14 ]
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = icmp sge i32 %15, %2
  %31 = icmp ugt i8* %26, %29
  %32 = or i1 %30, %31
  br i1 %32, label %189, label %33

33:                                               ; preds = %24, %183
  %34 = phi i8* [ %185, %183 ], [ %26, %24 ]
  %35 = phi i32 [ %64, %183 ], [ %15, %24 ]
  %36 = phi i32 [ %184, %183 ], [ %16, %24 ]
  %37 = add i32 %36, -19968
  %38 = icmp ugt i32 %37, 20991
  %39 = and i32 %36, -128
  %40 = or i32 %39, 80
  %41 = select i1 %38, i32 %40, i32 30292
  %42 = add nsw i32 %35, 1
  %43 = sext i32 %35 to i64
  %44 = getelementptr inbounds i16, i16* %1, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 64512
  %48 = icmp ne i32 %47, 55296
  %49 = icmp eq i32 %42, %2
  %50 = or i1 %49, %48
  br i1 %50, label %63, label %51

51:                                               ; preds = %33
  %52 = sext i32 %42 to i64
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = and i32 %55, 64512
  %57 = icmp eq i32 %56, 56320
  br i1 %57, label %58, label %63

58:                                               ; preds = %51
  %59 = add nsw i32 %35, 2
  %60 = shl nuw nsw i32 %46, 10
  %61 = add nsw i32 %60, -56613888
  %62 = add nsw i32 %61, %55
  br label %63

63:                                               ; preds = %33, %51, %58
  %64 = phi i32 [ %42, %33 ], [ %59, %58 ], [ %42, %51 ]
  %65 = phi i32 [ %46, %33 ], [ %62, %58 ], [ %46, %51 ]
  %66 = icmp eq i32 %65, 65534
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 2, i8* %34, align 1
  br label %183

69:                                               ; preds = %63
  %70 = sub nsw i32 %65, %41
  %71 = icmp sgt i32 %70, -81
  br i1 %71, label %72, label %121

72:                                               ; preds = %69
  %73 = icmp slt i32 %70, 81
  br i1 %73, label %74, label %78

74:                                               ; preds = %72
  %75 = trunc i32 %70 to i8
  %76 = add i8 %75, -127
  %77 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %76, i8* %34, align 1
  br label %183

78:                                               ; preds = %72
  %79 = icmp slt i32 %70, 10668
  br i1 %79, label %80, label %90

80:                                               ; preds = %78
  %81 = trunc i32 %70 to i16
  %82 = udiv i16 %81, 253
  %83 = trunc i16 %82 to i8
  %84 = add nuw nsw i8 %83, -46
  %85 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %84, i8* %34, align 1
  %86 = urem i16 %81, 253
  %87 = trunc i16 %86 to i8
  %88 = add nuw i8 %87, 3
  %89 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %88, i8* %85, align 1
  br label %183

90:                                               ; preds = %78
  %91 = icmp slt i32 %70, 192786
  %92 = urem i32 %70, 253
  %93 = udiv i32 %70, 253
  %94 = trunc i32 %92 to i8
  %95 = add nuw i8 %94, 3
  br i1 %91, label %96, label %108

96:                                               ; preds = %90
  %97 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %95, i8* %97, align 1
  %98 = udiv i32 %70, 253
  %99 = trunc i32 %98 to i16
  %100 = urem i16 %99, 253
  %101 = trunc i16 %100 to i8
  %102 = add nuw i8 %101, 3
  %103 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %102, i8* %103, align 1
  %104 = udiv i32 %70, 64009
  %105 = trunc i32 %104 to i8
  %106 = add nuw nsw i8 %105, -4
  store i8 %106, i8* %34, align 1
  %107 = getelementptr inbounds i8, i8* %34, i64 3
  br label %183

108:                                              ; preds = %90
  %109 = getelementptr inbounds i8, i8* %34, i64 3
  store i8 %95, i8* %109, align 1
  %110 = urem i32 %93, 253
  %111 = trunc i32 %110 to i8
  %112 = add nuw i8 %111, 3
  %113 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %112, i8* %113, align 1
  %114 = udiv i32 %70, 64009
  %115 = trunc i32 %114 to i16
  %116 = urem i16 %115, 253
  %117 = trunc i16 %116 to i8
  %118 = add nuw i8 %117, 3
  %119 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %118, i8* %119, align 1
  store i8 -1, i8* %34, align 1
  %120 = getelementptr inbounds i8, i8* %34, i64 4
  br label %183

121:                                              ; preds = %69
  %122 = icmp sgt i32 %70, -10669
  br i1 %122, label %123, label %137

123:                                              ; preds = %121
  %124 = srem i32 %70, 253
  %125 = sdiv i32 %70, 253
  %126 = icmp slt i32 %124, 0
  %127 = add nsw i32 %124, 253
  %128 = ashr i32 %124, 31
  %129 = add nsw i32 %128, %125
  %130 = select i1 %126, i32 %127, i32 %124
  %131 = trunc i32 %129 to i8
  %132 = add nsw i8 %131, 49
  %133 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %132, i8* %34, align 1
  %134 = trunc i32 %130 to i8
  %135 = add i8 %134, 3
  %136 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %135, i8* %133, align 1
  br label %183

137:                                              ; preds = %121
  %138 = icmp sgt i32 %70, -192787
  %139 = srem i32 %70, 253
  %140 = sdiv i32 %70, 253
  %141 = icmp slt i32 %139, 0
  %142 = add nsw i32 %139, 253
  %143 = ashr i32 %139, 31
  %144 = add nsw i32 %143, %140
  %145 = select i1 %141, i32 %142, i32 %139
  %146 = trunc i32 %145 to i8
  %147 = add i8 %146, 3
  br i1 %138, label %148, label %163

148:                                              ; preds = %137
  %149 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %147, i8* %149, align 1
  %150 = srem i32 %144, 253
  %151 = sdiv i32 %144, 253
  %152 = icmp slt i32 %150, 0
  %153 = add nsw i32 %150, 253
  %154 = ashr i32 %150, 31
  %155 = add nsw i32 %154, %151
  %156 = select i1 %152, i32 %153, i32 %150
  %157 = trunc i32 %156 to i8
  %158 = add i8 %157, 3
  %159 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %158, i8* %159, align 1
  %160 = trunc i32 %155 to i8
  %161 = add i8 %160, 7
  store i8 %161, i8* %34, align 1
  %162 = getelementptr inbounds i8, i8* %34, i64 3
  br label %183

163:                                              ; preds = %137
  %164 = getelementptr inbounds i8, i8* %34, i64 3
  store i8 %147, i8* %164, align 1
  %165 = srem i32 %144, 253
  %166 = sdiv i32 %144, 253
  %167 = icmp slt i32 %165, 0
  %168 = add nsw i32 %165, 253
  %169 = ashr i32 %165, 31
  %170 = add nsw i32 %169, %166
  %171 = select i1 %167, i32 %168, i32 %165
  %172 = trunc i32 %171 to i8
  %173 = add i8 %172, 3
  %174 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %173, i8* %174, align 1
  %175 = srem i32 %170, 253
  %176 = icmp slt i32 %175, 0
  %177 = add nsw i32 %175, 253
  %178 = select i1 %176, i32 %177, i32 %175
  %179 = trunc i32 %178 to i8
  %180 = add i8 %179, 3
  %181 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %180, i8* %181, align 1
  store i8 3, i8* %34, align 1
  %182 = getelementptr inbounds i8, i8* %34, i64 4
  br label %183

183:                                              ; preds = %163, %148, %123, %108, %96, %80, %74, %67
  %184 = phi i32 [ 0, %67 ], [ %65, %74 ], [ %65, %80 ], [ %65, %96 ], [ %65, %108 ], [ %65, %123 ], [ %65, %148 ], [ %65, %163 ]
  %185 = phi i8* [ %68, %67 ], [ %77, %74 ], [ %89, %80 ], [ %107, %96 ], [ %120, %108 ], [ %136, %123 ], [ %162, %148 ], [ %182, %163 ]
  %186 = icmp sge i32 %64, %2
  %187 = icmp ugt i8* %185, %29
  %188 = or i1 %186, %187
  br i1 %188, label %189, label %33

189:                                              ; preds = %183, %24
  %190 = phi i32 [ %16, %24 ], [ %184, %183 ]
  %191 = phi i32 [ %15, %24 ], [ %64, %183 ]
  %192 = phi i8* [ %26, %24 ], [ %185, %183 ]
  %193 = ptrtoint i8* %192 to i64
  %194 = ptrtoint i8* %26 to i64
  %195 = sub i64 %193, %194
  %196 = trunc i64 %195 to i32
  %197 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %13, align 8
  %198 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %197, i64 2
  %199 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %198, align 8
  call void %199(%"class.icu_69::ByteSink"* %3, i8* %26, i32 %196) #2
  %200 = icmp slt i32 %191, %2
  br i1 %200, label %14, label %201

201:                                              ; preds = %189, %4
  %202 = phi i32 [ %0, %4 ], [ %190, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #2
  ret i32 %202
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
