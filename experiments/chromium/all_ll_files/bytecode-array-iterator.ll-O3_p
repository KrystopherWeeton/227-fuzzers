; ModuleID = '../../v8/src/interpreter/bytecode-array-iterator.cc'
source_filename = "../../v8/src/interpreter/bytecode-array-iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::interpreter::BytecodeArrayIterator" = type { %"class.v8::internal::Handle.0", i8*, i8*, i8*, i8, i32, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.635", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.464", %"class.std::__1::vector.670", %"class.v8::internal::ConcurrentAllocator" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.21", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.151", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.155", %"class.std::__1::vector.155", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::shared_ptr.470", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.493", %"class.std::__1::unique_ptr.519", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.525", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.538", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.320", i8, [7 x i8], %"class.std::__1::unordered_map.544", %"class.std::__1::unordered_map.570", %"class.std::__1::unordered_map.544", %"class.std::__1::unordered_map.594", %"class.std::__1::vector.622", i8, %"class.std::__1::unique_ptr.629", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.16", %"struct.std::__1::atomic.16", %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.684", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.690", %"class.std::__1::unique_ptr.711", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.721", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.841", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.854", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.864", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.875", %"struct.std::__1::atomic.142", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.950", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.993"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1001", i32, i8, i8, i32, i32, %"class.std::__1::vector.1007", %"class.std::__1::vector.1007", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1014", i64, %"class.std::__1::unordered_map.1015", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.531", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.150", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1071", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1085", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1119", %"class.std::__1::vector.1123", %"class.std::__1::vector.1123", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.678", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.678" = type { %"struct.std::__1::__atomic_base.679" }
%"struct.std::__1::__atomic_base.679" = type { %"struct.std::__1::__cxx_atomic_impl.680" }
%"struct.std::__1::__cxx_atomic_impl.680" = type { %"struct.std::__1::__cxx_atomic_base_impl.681" }
%"struct.std::__1::__cxx_atomic_base_impl.681" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.682", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.682" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.531" }
%"class.std::__1::shared_ptr.690" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.129", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.691", %"class.std::__1::unique_ptr.705" }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.131" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.16", %"struct.std::__1::atomic.60", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.694" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.129", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.694" = type { %"class.std::__1::__vector_base.695" }
%"class.std::__1::__vector_base.695" = type { %"class.std::__1::unique_ptr.696"*, %"class.std::__1::unique_ptr.696"*, %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.std::__1::unique_ptr.696"* }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.714", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.714" = type { %"struct.std::__1::__atomic_base.715" }
%"struct.std::__1::__atomic_base.715" = type { %"struct.std::__1::__cxx_atomic_impl.716" }
%"struct.std::__1::__cxx_atomic_impl.716" = type { %"struct.std::__1::__cxx_atomic_base_impl.717" }
%"struct.std::__1::__cxx_atomic_base_impl.717" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.721" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.722", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.722" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.723", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.723" = type { %"class.std::__1::__vector_base.724" }
%"class.std::__1::__vector_base.724" = type { %"class.std::__1::unique_ptr.725"*, %"class.std::__1::unique_ptr.725"*, %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::unique_ptr.725" = type opaque
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.std::__1::unique_ptr.725"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.731", %"class.std::__1::unique_ptr.737", %"struct.std::__1::atomic.142", %"class.std::__1::unique_ptr.743", %"class.std::__1::unique_ptr.749", %"class.std::__1::unique_ptr.755", %"class.std::__1::unique_ptr.761", %"class.std::__1::unique_ptr.767", %"class.std::__1::set.773", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.773" = type { %"class.std::__1::__tree.774" }
%"class.std::__1::__tree.774" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.782" }
%"class.v8::internal::TaggedImpl.782" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.781" }
%"class.v8::internal::TaggedImpl.781" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.648", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.783", %"class.v8::internal::DetachableVector.784", %"class.v8::internal::DetachableVector.783", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.784" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.783" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.642", %"class.std::__1::unique_ptr.471" }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.474", %"class.std::__1::set.482" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.474" = type { %"class.std::__1::__tree.475" }
%"class.std::__1::__tree.475" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::set.482" = type { %"class.std::__1::__tree.483" }
%"class.std::__1::__tree.483" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.785", %"class.std::__1::vector.791", %"class.std::__1::unique_ptr.798", %"class.std::__1::vector.805", %"class.std::__1::unique_ptr.812", i64, %"class.std::__1::vector.818", %"class.std::__1::vector.826", %"class.std::__1::vector.834", i8, i8, i32 }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.793" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.v8::internal::GlobalHandles::NodeSpace.801"* }
%"class.v8::internal::GlobalHandles::NodeSpace.801" = type opaque
%"class.std::__1::vector.805" = type { %"class.std::__1::__vector_base.806" }
%"class.std::__1::__vector_base.806" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.807" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { %"struct.std::__1::pair.820"*, %"struct.std::__1::pair.820"*, %"class.std::__1::__compressed_pair.821" }
%"struct.std::__1::pair.820" = type opaque
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"struct.std::__1::pair.820"* }
%"class.std::__1::vector.826" = type { %"class.std::__1::__vector_base.827" }
%"class.std::__1::__vector_base.827" = type { %"struct.std::__1::pair.828"*, %"struct.std::__1::pair.828"*, %"class.std::__1::__compressed_pair.829" }
%"struct.std::__1::pair.828" = type opaque
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"struct.std::__1::pair.828"* }
%"class.std::__1::vector.834" = type { %"class.std::__1::__vector_base.835" }
%"class.std::__1::__vector_base.835" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.836" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.654", %"class.std::__1::vector.841" }
%"class.std::__1::vector.654" = type { %"class.std::__1::__vector_base.655" }
%"class.std::__1::__vector_base.655" = type { i64**, i64**, %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.848" }
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.841" = type { %"class.std::__1::__vector_base.842" }
%"class.std::__1::__vector_base.842" = type { i32*, i32*, %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.854" = type { %"struct.std::__1::__atomic_base.855" }
%"struct.std::__1::__atomic_base.855" = type { %"struct.std::__1::__cxx_atomic_impl.856" }
%"struct.std::__1::__cxx_atomic_impl.856" = type { %"struct.std::__1::__cxx_atomic_base_impl.857" }
%"struct.std::__1::__cxx_atomic_base_impl.857" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.864" = type { %"struct.std::__1::__atomic_base.865" }
%"struct.std::__1::__atomic_base.865" = type { %"struct.std::__1::__cxx_atomic_impl.866" }
%"struct.std::__1::__cxx_atomic_impl.866" = type { %"struct.std::__1::__cxx_atomic_base_impl.867" }
%"struct.std::__1::__cxx_atomic_base_impl.867" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.871 }
%union.anon.871 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.875" = type { %"class.std::__1::__hash_table.876" }
%"class.std::__1::__hash_table.876" = type <{ %"class.std::__1::unique_ptr.877", %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.892", %"class.std::__1::__compressed_pair.895", [4 x i8] }>
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879", %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"struct.std::__1::__hash_node_base.880"** }
%"struct.std::__1::__hash_node_base.880" = type { %"struct.std::__1::__hash_node_base.880"* }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.std::__1::__bucket_list_deallocator.882" }
%"class.std::__1::__bucket_list_deallocator.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"struct.std::__1::__hash_node_base.880" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::atomic.142" = type { %"struct.std::__1::__atomic_base.143" }
%"struct.std::__1::__atomic_base.143" = type { %"struct.std::__1::__cxx_atomic_impl.144" }
%"struct.std::__1::__cxx_atomic_impl.144" = type { %"struct.std::__1::__cxx_atomic_base_impl.145" }
%"struct.std::__1::__cxx_atomic_base_impl.145" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.901", %"class.v8::internal::Handle.907", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.908", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.907" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.908" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"class.std::__1::unique_ptr.923", %"class.std::__1::unique_ptr.929", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.935", %"class.std::__1::vector.941", %"struct.std::__1::pair.949" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"*, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::unique_ptr.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.std::__1::unique_ptr.917"* }
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { %"struct.std::__1::pair.943"*, %"struct.std::__1::pair.943"*, %"class.std::__1::__compressed_pair.944" }
%"struct.std::__1::pair.943" = type opaque
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::pair.943"* }
%"struct.std::__1::pair.949" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.683"*, i16, i8*)*, i8* }
%"class.v8::Local.683" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.953", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.953" = type { %"class.std::__1::__hash_table.954" }
%"class.std::__1::__hash_table.954" = type <{ %"class.std::__1::unique_ptr.955", %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.970", %"class.std::__1::__compressed_pair.974", [4 x i8] }>
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957", %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"struct.std::__1::__hash_node_base.958"** }
%"struct.std::__1::__hash_node_base.958" = type { %"struct.std::__1::__hash_node_base.958"* }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.std::__1::__bucket_list_deallocator.960" }
%"class.std::__1::__bucket_list_deallocator.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"struct.std::__1::__hash_node_base.958" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.988" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.982"**, %"struct.std::__1::pair.982"**, %"struct.std::__1::pair.982"**, %"class.std::__1::__compressed_pair.983" }
%"struct.std::__1::pair.982" = type opaque
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.std::__1::pair.982"** }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.993" = type { %"class.std::__1::__vector_base.994" }
%"class.std::__1::__vector_base.994" = type { %"class.v8::internal::Handle.995"*, %"class.v8::internal::Handle.995"*, %"class.std::__1::__compressed_pair.996" }
%"class.v8::internal::Handle.995" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.v8::internal::Handle.995"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.859", i32, %"class.v8::Local.683" }
%"class.v8::Local.859" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.654", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1007" = type { %"class.std::__1::__vector_base.1008" }
%"class.std::__1::__vector_base.1008" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1014" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1015" = type { %"class.std::__1::__hash_table.1016" }
%"class.std::__1::__hash_table.1016" = type <{ %"class.std::__1::unique_ptr.1017", %"class.std::__1::__compressed_pair.1027", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1035", [4 x i8] }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019", %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1020"** }
%"struct.std::__1::__hash_node_base.1020" = type { %"struct.std::__1::__hash_node_base.1020"* }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.std::__1::__bucket_list_deallocator.1022" }
%"class.std::__1::__bucket_list_deallocator.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1020" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.150" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1039", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1068", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1069", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1039" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1064, %union.anon.1066, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1064 = type { i64 }
%union.anon.1066 = type { i64 }
%"class.std::__1::weak_ptr.1068" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.150" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1069" = type { %"class.v8::PersistentBase.1070" }
%"class.v8::PersistentBase.1070" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1040", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1040" = type { %"class.std::__1::__hash_table.1041" }
%"class.std::__1::__hash_table.1041" = type <{ %"class.std::__1::unique_ptr.1042", %"class.std::__1::__compressed_pair.1052", %"class.std::__1::__compressed_pair.1057", %"class.std::__1::__compressed_pair.1060", [4 x i8] }>
%"class.std::__1::unique_ptr.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044", %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"struct.std::__1::__hash_node_base.1045"** }
%"struct.std::__1::__hash_node_base.1045" = type { %"struct.std::__1::__hash_node_base.1045"* }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.std::__1::__bucket_list_deallocator.1047" }
%"class.std::__1::__bucket_list_deallocator.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"struct.std::__1::__hash_node_base.1045" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1076", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.860", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.860" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1093" }
%"class.std::__1::unordered_map.1093" = type { %"class.std::__1::__hash_table.1094" }
%"class.std::__1::__hash_table.1094" = type <{ %"class.std::__1::unique_ptr.1095", %"class.std::__1::__compressed_pair.1105", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1113", [4 x i8] }>
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097", %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.std::__1::__hash_node_base.1098"** }
%"struct.std::__1::__hash_node_base.1098" = type { %"struct.std::__1::__hash_node_base.1098"* }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.std::__1::__bucket_list_deallocator.1100" }
%"class.std::__1::__bucket_list_deallocator.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.std::__1::__hash_node_base.1098" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::atomic.1119" = type { %"struct.std::__1::__atomic_base.1120" }
%"struct.std::__1::__atomic_base.1120" = type { %"struct.std::__1::__cxx_atomic_impl.1121" }
%"struct.std::__1::__cxx_atomic_impl.1121" = type { %"struct.std::__1::__cxx_atomic_base_impl.1122" }
%"struct.std::__1::__cxx_atomic_base_impl.1122" = type { %"class.std::__1::vector.1123"* }
%"class.std::__1::vector.1123" = type { %"class.std::__1::__vector_base.1124" }
%"class.std::__1::__vector_base.1124" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1125" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.93" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.89" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.30", %"class.std::__1::vector.30", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.32" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.37" }
%"class.std::__1::__hash_table.37" = type <{ %"class.std::__1::unique_ptr.38", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.55", [4 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base.41"** }
%"struct.std::__1::__hash_node_base.41" = type { %"struct.std::__1::__hash_node_base.41"* }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__bucket_list_deallocator.43" }
%"class.std::__1::__bucket_list_deallocator.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.41" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.16", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.78", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.16", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.64" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.66" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl.80" }
%"struct.std::__1::__cxx_atomic_impl.80" = type { %"struct.std::__1::__cxx_atomic_base_impl.81" }
%"struct.std::__1::__cxx_atomic_base_impl.81" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.82", i8, [7 x i8] }>
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { i64*, i64*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"class.std::__1::__compressed_pair.96" }
%"struct.std::__1::pair.95" = type { i32, i64 }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::pair.95"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.101" }
%"class.std::__1::unordered_map.101" = type { %"class.std::__1::__hash_table.102" }
%"class.std::__1::__hash_table.102" = type <{ %"class.std::__1::unique_ptr.103", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.123", [4 x i8] }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base.106"** }
%"struct.std::__1::__hash_node_base.106" = type { %"struct.std::__1::__hash_node_base.106"* }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::__bucket_list_deallocator.108" }
%"class.std::__1::__bucket_list_deallocator.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.106" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.142", %"struct.std::__1::atomic.146", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__cxx_atomic_impl.153" }
%"struct.std::__1::__cxx_atomic_impl.153" = type { %"struct.std::__1::__cxx_atomic_base_impl.154" }
%"struct.std::__1::__cxx_atomic_base_impl.154" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.157" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.270", %"class.std::__1::vector.270", %"class.std::__1::vector.270", %"class.std::__1::vector.277", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.171", %"class.std::__1::vector.172", %"class.std::__1::vector.179", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.171" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.174" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::unique_ptr.181" = type opaque
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::unique_ptr.181"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.187", %"class.v8::internal::Worklist.189", %"class.v8::internal::Worklist.189", %"class.v8::internal::Worklist.189", %"class.v8::internal::Worklist.191", %"class.v8::internal::Worklist.193", %"class.v8::internal::Worklist.195", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.187" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.189" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.191" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.193" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.195" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.203", i8, i64 }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.219" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.171"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.219" = type { %"class.std::__1::__hash_table.220" }
%"class.std::__1::__hash_table.220" = type <{ %"class.std::__1::unique_ptr.221", %"class.std::__1::__compressed_pair.231", %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.239", [4 x i8] }>
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223", %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::__hash_node_base.224"** }
%"struct.std::__1::__hash_node_base.224" = type { %"struct.std::__1::__hash_node_base.224"* }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.std::__1::__bucket_list_deallocator.226" }
%"class.std::__1::__bucket_list_deallocator.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::__hash_node_base.224" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.246" }
%"class.std::__1::unordered_map.246" = type { %"class.std::__1::__hash_table.247" }
%"class.std::__1::__hash_table.247" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.266", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base.251"** }
%"struct.std::__1::__hash_node_base.251" = type { %"struct.std::__1::__hash_node_base.251"* }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::__bucket_list_deallocator.253" }
%"class.std::__1::__bucket_list_deallocator.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base.251" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { %"struct.std::__1::pair.279"*, %"struct.std::__1::pair.279"*, %"class.std::__1::__compressed_pair.280" }
%"struct.std::__1::pair.279" = type opaque
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::pair.279"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.285", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.270"], [3 x %"class.std::__1::vector.270"], i8, %"struct.std::__1::atomic.142", [6 x i8], %"class.std::__1::vector.270", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.295"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.270", %"class.std::__1::vector.270", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.295" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.320", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.313"], %"class.std::__1::unique_ptr.285" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.352", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.356", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.361" }
%"struct.std::__1::atomic.352" = type { %"struct.std::__1::__atomic_base.353" }
%"struct.std::__1::__atomic_base.353" = type { %"struct.std::__1::__cxx_atomic_impl.354" }
%"struct.std::__1::__cxx_atomic_impl.354" = type { %"struct.std::__1::__cxx_atomic_base_impl.355" }
%"struct.std::__1::__cxx_atomic_base_impl.355" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.356" = type { %"struct.std::__1::__atomic_base.357" }
%"struct.std::__1::__atomic_base.357" = type { %"struct.std::__1::__cxx_atomic_impl.358" }
%"struct.std::__1::__cxx_atomic_impl.358" = type { %"struct.std::__1::__cxx_atomic_base_impl.359" }
%"struct.std::__1::__cxx_atomic_base_impl.359" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.361" = type { %"class.std::__1::__hash_table.362" }
%"class.std::__1::__hash_table.362" = type <{ %"class.std::__1::unique_ptr.363", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.381", [4 x i8] }>
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.366"** }
%"struct.std::__1::__hash_node_base.366" = type { %"struct.std::__1::__hash_node_base.366"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator.368" }
%"class.std::__1::__bucket_list_deallocator.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.366" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.285", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.142", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.391", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.391" = type { %"class.std::__1::__hash_table.392" }
%"class.std::__1::__hash_table.392" = type <{ %"class.std::__1::unique_ptr.393", %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.411", [4 x i8] }>
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.396"** }
%"struct.std::__1::__hash_node_base.396" = type { %"struct.std::__1::__hash_node_base.396"* }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.std::__1::__bucket_list_deallocator.398" }
%"class.std::__1::__bucket_list_deallocator.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.396" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.427" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::shared_ptr.470" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.489", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.471", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.489" = type { %"struct.std::__1::__atomic_base.490" }
%"struct.std::__1::__atomic_base.490" = type { %"struct.std::__1::__cxx_atomic_impl.491" }
%"struct.std::__1::__cxx_atomic_impl.491" = type { %"struct.std::__1::__cxx_atomic_base_impl.492" }
%"struct.std::__1::__cxx_atomic_base_impl.492" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.493" = type { %"class.std::__1::__hash_table.494" }
%"class.std::__1::__hash_table.494" = type <{ %"class.std::__1::unique_ptr.495", %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.513", [4 x i8] }>
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497", %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.std::__1::__hash_node_base.498"** }
%"struct.std::__1::__hash_node_base.498" = type { %"struct.std::__1::__hash_node_base.498"* }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.std::__1::__bucket_list_deallocator.500" }
%"class.std::__1::__bucket_list_deallocator.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"struct.std::__1::__hash_node_base.498" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.531", %"class.std::__1::vector.531" }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.320" = type { %"class.std::__1::__hash_table.321" }
%"class.std::__1::__hash_table.321" = type <{ %"class.std::__1::unique_ptr.322", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.341", [4 x i8] }>
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.std::__1::__hash_node_base.325"** }
%"struct.std::__1::__hash_node_base.325" = type { %"struct.std::__1::__hash_node_base.325"* }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::__bucket_list_deallocator.327" }
%"class.std::__1::__bucket_list_deallocator.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.325" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.570" = type { %"class.std::__1::__hash_table.571" }
%"class.std::__1::__hash_table.571" = type <{ %"class.std::__1::unique_ptr.572", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.590", [4 x i8] }>
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.575"** }
%"struct.std::__1::__hash_node_base.575" = type { %"struct.std::__1::__hash_node_base.575"* }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.std::__1::__bucket_list_deallocator.577" }
%"class.std::__1::__bucket_list_deallocator.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.std::__1::__hash_node_base.575" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.544" = type { %"class.std::__1::__hash_table.545" }
%"class.std::__1::__hash_table.545" = type <{ %"class.std::__1::unique_ptr.546", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.564", [4 x i8] }>
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548", %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.std::__1::__hash_node_base.549"** }
%"struct.std::__1::__hash_node_base.549" = type { %"struct.std::__1::__hash_node_base.549"* }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.std::__1::__bucket_list_deallocator.551" }
%"class.std::__1::__bucket_list_deallocator.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.549" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.594" = type { %"class.std::__1::__hash_table.595" }
%"class.std::__1::__hash_table.595" = type <{ %"class.std::__1::unique_ptr.596", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598", %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.599"** }
%"struct.std::__1::__hash_node_base.599" = type { %"struct.std::__1::__hash_node_base.599"* }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.std::__1::__bucket_list_deallocator.601" }
%"class.std::__1::__bucket_list_deallocator.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"struct.std::__1::__hash_node_base.599" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::vector.622" = type { %"class.std::__1::__vector_base.623" }
%"class.std::__1::__vector_base.623" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.635" = type { %"struct.std::__1::__atomic_base.636" }
%"struct.std::__1::__atomic_base.636" = type { %"struct.std::__1::__cxx_atomic_impl.637" }
%"struct.std::__1::__cxx_atomic_impl.637" = type { %"struct.std::__1::__cxx_atomic_base_impl.638" }
%"struct.std::__1::__cxx_atomic_base_impl.638" = type { i32 }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.654" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::vector.670" = type { %"class.std::__1::__vector_base.671" }
%"class.std::__1::__vector_base.671" = type { %"struct.std::__1::pair.672"*, %"struct.std::__1::pair.672"*, %"class.std::__1::__compressed_pair.673" }
%"struct.std::__1::pair.672" = type opaque
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"struct.std::__1::pair.672"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::interpreter::JumpTableTargetOffsets" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::Smi", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK2v88internal11interpreter21BytecodeArrayIterator26GetConstantForIndexOperandINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEiPT_ = comdat any

$_ZNK2v88internal11interpreter21BytecodeArrayIterator26GetConstantForIndexOperandINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEiPT_ = comdat any

$_ZN2v88internal11interpreter21BytecodeArrayIterator22UpdatePointersCallbackEPv = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal7Isolate12isolate_key_E = external local_unnamed_addr global i32, align 4
@_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE = external local_unnamed_addr constant [3 x [197 x i8]], align 16
@_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE = external local_unnamed_addr constant [0 x i8*], align 8

@_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32), void (%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32)* @_ZN2v88internal11interpreter21BytecodeArrayIteratorC2ENS0_6HandleINS0_13BytecodeArrayEEEi
@_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::BytecodeArrayIterator"*), void (%"class.v8::internal::interpreter::BytecodeArrayIterator"*)* @_ZN2v88internal11interpreter21BytecodeArrayIteratorD2Ev
@_ZN2v88internal11interpreter22JumpTableTargetOffsetsC1EPKNS1_21BytecodeArrayIteratorEiii = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::JumpTableTargetOffsets"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, i32, i32), void (%"class.v8::internal::interpreter::JumpTableTargetOffsets"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, i32, i32)* @_ZN2v88internal11interpreter22JumpTableTargetOffsetsC2EPKNS1_21BytecodeArrayIteratorEiii
@_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorC1EiiiPKNS1_21BytecodeArrayIteratorE = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*, i32, i32, i32, %"class.v8::internal::interpreter::BytecodeArrayIterator"*), void (%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*, i32, i32, i32, %"class.v8::internal::interpreter::BytecodeArrayIterator"*)* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorC2EiiiPKNS1_21BytecodeArrayIteratorE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal11interpreter21BytecodeArrayIterator26GetConstantForIndexOperandINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEiPT_(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = ptrtoint i8* %5 to i64
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 8
  %16 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %6, i32 %1, i8 zeroext %15) #6
  %17 = sext i32 %16 to i64
  %18 = add i64 %17, %13
  %19 = load i8, i8* %14, align 8
  %20 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %18, i8 zeroext %12, i8 zeroext %19) #6
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = shl i32 %20, 2
  %31 = sext i32 %30 to i64
  %32 = add nsw i64 %31, 7
  %33 = add i64 %32, %29
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %24, %36
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %3
  %42 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 %37) #6
  br label %56

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #6
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 %37, i64* %52, align 8
  br label %56

56:                                               ; preds = %41, %51
  %57 = phi i64* [ %42, %41 ], [ %52, %51 ]
  ret i64* %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator15GetIndexOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal11interpreter21BytecodeArrayIterator26GetConstantForIndexOperandINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEiPT_(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = ptrtoint i8* %5 to i64
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 8
  %16 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %6, i32 %1, i8 zeroext %15) #6
  %17 = sext i32 %16 to i64
  %18 = add i64 %17, %13
  %19 = load i8, i8* %14, align 8
  %20 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %18, i8 zeroext %12, i8 zeroext %19) #6
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = shl i32 %20, 2
  %31 = sext i32 %30 to i64
  %32 = add nsw i64 %31, 7
  %33 = add i64 %32, %29
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %24, %36
  %38 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %2, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %2, i64 0, i32 1
  %43 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %42, i64 %37) #6
  br label %59

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %2, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %46, i64 0, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %46, i64 0, i32 0, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %46) #6
  %54 = load i64*, i64** %47, align 8
  br label %55

55:                                               ; preds = %52, %44
  %56 = phi i64* [ %54, %52 ], [ %48, %44 ]
  %57 = phi i64* [ %53, %52 ], [ %48, %44 ]
  %58 = getelementptr inbounds i64, i64* %56, i64 1
  store i64* %58, i64** %47, align 8
  store i64 %37, i64* %57, align 8
  br label %59

59:                                               ; preds = %41, %55
  %60 = phi i64* [ %43, %41 ], [ %57, %55 ]
  ret i64* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC2ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 1
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 33
  %8 = inttoptr i64 %7 to i8*
  store i8* %8, i8** %5, align 8
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 2
  %10 = load i64, i64* %1, align 8
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = ashr i32 %13, 1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %8, i64 %15
  store i8* %16, i8** %9, align 8
  %17 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %18 = sext i32 %2 to i64
  %19 = getelementptr inbounds i8, i8* %8, i64 %18
  store i8* %19, i8** %17, align 8
  %20 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 5
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 6
  %23 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() #6
  %24 = icmp eq %"class.v8::internal::LocalHeap"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() #6
  br label %32

27:                                               ; preds = %3
  %28 = load i32, i32* @_ZN2v88internal7Isolate12isolate_key_E, align 4
  %29 = tail call i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32 %28) #6
  %30 = bitcast i8* %29 to %"class.v8::internal::Isolate"*
  %31 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal7Isolate22main_thread_local_heapEv(%"class.v8::internal::Isolate"* %30) #6
  br label %32

32:                                               ; preds = %27, %25
  %33 = phi %"class.v8::internal::LocalHeap"* [ %26, %25 ], [ %31, %27 ]
  store %"class.v8::internal::LocalHeap"* %33, %"class.v8::internal::LocalHeap"** %22, align 8
  %34 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0 to i8*
  tail call void @_ZN2v88internal9LocalHeap21AddGCEpilogueCallbackEPFvPvES2_(%"class.v8::internal::LocalHeap"* %33, void (i8*)* nonnull @_ZN2v88internal11interpreter21BytecodeArrayIterator22UpdatePointersCallbackEPv, i8* %34) #6
  %35 = load i8*, i8** %17, align 8
  %36 = load i8*, i8** %9, align 8
  %37 = icmp ult i8* %35, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %32
  %39 = load i8, i8* %35, align 1
  %40 = icmp ult i8 %39, 4
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = zext i8 %39 to i32
  %43 = shl nuw nsw i32 %42, 3
  %44 = lshr i32 67240962, %43
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %20, align 8
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  store i8* %46, i8** %17, align 8
  br label %48

47:                                               ; preds = %38
  store i8 1, i8* %20, align 8
  br label %48

48:                                               ; preds = %47, %41
  %49 = phi i32 [ 1, %41 ], [ 0, %47 ]
  store i32 %49, i32* %21, align 4
  br label %50

50:                                               ; preds = %48, %32
  ret void
}

declare %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() local_unnamed_addr #1

declare %"class.v8::internal::LocalHeap"* @_ZN2v88internal7Isolate22main_thread_local_heapEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal9LocalHeap21AddGCEpilogueCallbackEPFvPvES2_(%"class.v8::internal::LocalHeap"*, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11interpreter21BytecodeArrayIterator22UpdatePointersCallbackEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 33
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, %6
  br i1 %10, label %29, label %11

11:                                               ; preds = %1
  store i8* %6, i8** %8, align 8
  %12 = load i64, i64* %3, align 8
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %6, i64 %17
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %0, i64 24
  %24 = bitcast i8* %23 to i8**
  %25 = bitcast i8* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %22
  %28 = getelementptr inbounds i8, i8* %18, i64 %27
  store i8* %28, i8** %24, align 8
  store i8* %18, i8** %20, align 8
  br label %29

29:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD2Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 6
  %3 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2, align 8
  %4 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0 to i8*
  tail call void @_ZN2v88internal9LocalHeap24RemoveGCEpilogueCallbackEPFvPvES2_(%"class.v8::internal::LocalHeap"* %3, void (i8*)* nonnull @_ZN2v88internal11interpreter21BytecodeArrayIterator22UpdatePointersCallbackEPv, i8* %4) #6
  ret void
}

declare void @_ZN2v88internal9LocalHeap24RemoveGCEpilogueCallbackEPFvPvES2_(%"class.v8::internal::LocalHeap"*, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter21BytecodeArrayIterator9SetOffsetEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %1 to i64
  %9 = add nuw nsw i64 %8, 33
  %10 = add i64 %9, %7
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ugt i8* %14, %11
  br i1 %15, label %16, label %30

16:                                               ; preds = %4
  %17 = load i8, i8* %11, align 1
  %18 = icmp ult i8 %17, 4
  br i1 %18, label %19, label %27

19:                                               ; preds = %16
  %20 = zext i8 %17 to i32
  %21 = shl nuw nsw i32 %20, 3
  %22 = lshr i32 67240962, %21
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  store i8 %23, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %25, i8** %12, align 8
  %26 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 5
  store i32 1, i32* %26, align 4
  br label %30

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 5
  store i32 0, i32* %29, align 4
  br label %30

30:                                               ; preds = %27, %19, %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter21BytecodeArrayIterator15ApplyDebugBreakEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = sub nsw i64 0, %6
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = tail call zeroext i1 @_ZN2v88internal11interpreter9Bytecodes12IsDebugBreakENS1_8BytecodeE(i8 zeroext %9) #6
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = tail call zeroext i8 @_ZN2v88internal11interpreter9Bytecodes13GetDebugBreakENS1_8BytecodeE(i8 zeroext %9) #6
  store i8 %12, i8* %8, align 1
  br label %13

13:                                               ; preds = %1, %11
  ret void
}

declare zeroext i1 @_ZN2v88internal11interpreter9Bytecodes12IsDebugBreakENS1_8BytecodeE(i8 zeroext) local_unnamed_addr #1

declare zeroext i8 @_ZN2v88internal11interpreter9Bytecodes13GetDebugBreakENS1_8BytecodeE(i8 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator21current_bytecode_sizeEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 8
  %9 = lshr i8 %8, 1
  %10 = zext i8 %9 to i64
  %11 = zext i8 %6 to i64
  %12 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %10, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add nsw i32 %3, %14
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator36current_bytecode_size_without_prefixEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 8
  %7 = lshr i8 %6, 1
  %8 = zext i8 %7 to i64
  %9 = zext i8 %4 to i64
  %10 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetUnsignedOperandEiNS1_11OperandTypeE(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8
  %11 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %8, i32 %1, i8 zeroext %10) #6
  %12 = sext i32 %11 to i64
  %13 = add i64 %6, %12
  %14 = load i8, i8* %9, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %13, i8 zeroext %2, i8 zeroext %14) #6
  ret i32 %15
}

declare i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext, i32, i8 zeroext) local_unnamed_addr #1

declare i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64, i8 zeroext, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator16GetSignedOperandEiNS1_11OperandTypeE(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8
  %11 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %8, i32 %1, i8 zeroext %10) #6
  %12 = sext i32 %11 to i64
  %13 = add i64 %6, %12
  %14 = load i8, i8* %9, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder19DecodeSignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %13, i8 zeroext %2, i8 zeroext %14) #6
  ret i32 %15
}

declare i32 @_ZN2v88internal11interpreter15BytecodeDecoder19DecodeSignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64, i8 zeroext, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator14GetFlagOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8
  %10 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %7, i32 %1, i8 zeroext %9) #6
  %11 = sext i32 %10 to i64
  %12 = add i64 %5, %11
  %13 = load i8, i8* %8, align 8
  %14 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %12, i8 zeroext 1, i8 zeroext %13) #6
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator27GetUnsignedImmediateOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8
  %10 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %7, i32 %1, i8 zeroext %9) #6
  %11 = sext i32 %10 to i64
  %12 = add i64 %5, %11
  %13 = load i8, i8* %8, align 8
  %14 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %12, i8 zeroext 6, i8 zeroext %13) #6
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetImmediateOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8
  %10 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %7, i32 %1, i8 zeroext %9) #6
  %11 = sext i32 %10 to i64
  %12 = add i64 %5, %11
  %13 = load i8, i8* %8, align 8
  %14 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder19DecodeSignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %12, i8 zeroext 8, i8 zeroext %13) #6
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetRegisterCountOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8
  %10 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %7, i32 %1, i8 zeroext %9) #6
  %11 = sext i32 %10 to i64
  %12 = add i64 %5, %11
  %13 = load i8, i8* %8, align 8
  %14 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %12, i8 zeroext 7, i8 zeroext %13) #6
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator14GetSlotOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %16, %12
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator11GetReceiverEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 23
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 3
  %9 = tail call i32 @_ZN2v88internal11interpreter8Register18FromParameterIndexEii(i32 0, i32 %8) #6
  ret i32 %9
}

declare i32 @_ZN2v88internal11interpreter8Register18FromParameterIndexEii(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator12GetParameterEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = add nsw i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 3
  %11 = tail call i32 @_ZN2v88internal11interpreter8Register18FromParameterIndexEii(i32 %3, i32 %10) #6
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeRegisterOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  ret i32 %19
}

declare i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeRegisterOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64, i8 zeroext, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal11interpreter21BytecodeArrayIterator22GetRegisterPairOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %16, %12
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeRegisterOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  %20 = add nsw i32 %19, 1
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %19 to i64
  %24 = or i64 %22, %23
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal11interpreter21BytecodeArrayIterator22GetRegisterListOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %16, %12
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeRegisterOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  %20 = add nsw i32 %1, 1
  %21 = bitcast i8** %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = inttoptr i64 %22 to i8*
  %24 = load i8, i8* %23, align 1
  %25 = load i8, i8* %13, align 8
  %26 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %24, i32 %20, i8 zeroext %25) #6
  %27 = sext i32 %26 to i64
  %28 = add i64 %22, %27
  %29 = load i8, i8* %13, align 8
  %30 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %28, i8 zeroext 7, i8 zeroext %29) #6
  %31 = zext i32 %30 to i64
  %32 = shl nuw i64 %31, 32
  %33 = zext i32 %19 to i64
  %34 = or i64 %32, %33
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetRegisterOperandRangeEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  switch i8 %11, label %24 [
    i8 13, label %12
    i8 10, label %12
    i8 9, label %25
    i8 12, label %25
    i8 11, label %22
    i8 14, label %22
    i8 15, label %23
  ]

12:                                               ; preds = %2, %2
  %13 = ptrtoint i8* %4 to i64
  %14 = add nsw i32 %1, 1
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 8
  %17 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %14, i8 zeroext %16) #6
  %18 = sext i32 %17 to i64
  %19 = add i64 %13, %18
  %20 = load i8, i8* %15, align 8
  %21 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %19, i8 zeroext 7, i8 zeroext %20) #6
  br label %25

22:                                               ; preds = %2, %2
  br label %25

23:                                               ; preds = %2
  br label %25

24:                                               ; preds = %2
  br label %25

25:                                               ; preds = %2, %2, %24, %23, %22, %12
  %26 = phi i32 [ %21, %12 ], [ 0, %24 ], [ 3, %23 ], [ 2, %22 ], [ 1, %2 ], [ 1, %2 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetRuntimeIdOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator28GetNativeContextIndexOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator21GetIntrinsicIdOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 %1, i8 zeroext %14) #6
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = load i8, i8* %13, align 8
  %19 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %17, i8 zeroext %11, i8 zeroext %18) #6
  %20 = tail call i32 @_ZN2v88internal11interpreter16IntrinsicsHelper11ToRuntimeIdENS2_11IntrinsicIdE(i32 %19) #6
  ret i32 %20
}

declare i32 @_ZN2v88internal11interpreter16IntrinsicsHelper11ToRuntimeIdENS2_11IntrinsicIdE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal11interpreter21BytecodeArrayIterator20IsConstantAtIndexSmiEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = shl i32 %1, 2
  %13 = sext i32 %12 to i64
  %14 = add nsw i64 %13, 7
  %15 = add i64 %14, %11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetConstantAtIndexAsSmiEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = shl i32 %1, 2
  %13 = sext i32 %12 to i64
  %14 = add nsw i64 %13, 7
  %15 = add i64 %14, %11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator27GetRelativeJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = or i8 %4, 1
  %6 = icmp eq i8 %5, -119
  %7 = add i8 %4, 107
  %8 = icmp ult i8 %7, 10
  %9 = or i1 %6, %8
  %10 = ptrtoint i8* %3 to i64
  br i1 %9, label %11, label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 8
  %14 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %4, i32 0, i8 zeroext %13) #6
  %15 = sext i32 %14 to i64
  %16 = add i64 %10, %15
  %17 = load i8, i8* %12, align 8
  %18 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %16, i8 zeroext 6, i8 zeroext %17) #6
  %19 = icmp eq i8 %4, -120
  %20 = sub nsw i32 0, %18
  %21 = select i1 %19, i32 %20, i32 %18
  br label %54

22:                                               ; preds = %1
  %23 = add i8 %4, 118
  %24 = icmp ult i8 %23, 11
  br i1 %24, label %25, label %53

25:                                               ; preds = %22
  %26 = zext i8 %4 to i64
  %27 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %26
  %28 = load i8*, i8** %27, align 8
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 4
  %31 = load i8, i8* %30, align 8
  %32 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %4, i32 0, i8 zeroext %31) #6
  %33 = sext i32 %32 to i64
  %34 = add i64 %33, %10
  %35 = load i8, i8* %30, align 8
  %36 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %34, i8 zeroext %29, i8 zeroext %35) #6
  %37 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, -4294967296
  %41 = add i64 %39, 7
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = shl i32 %36, 2
  %47 = sext i32 %46 to i64
  %48 = add nsw i64 %47, 7
  %49 = add i64 %48, %45
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = ashr i32 %51, 1
  br label %54

53:                                               ; preds = %22
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #7
  unreachable

54:                                               ; preds = %25, %11
  %55 = phi i32 [ %21, %11 ], [ %52, %25 ]
  ret i32 %55
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator27GetRelativeJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %0)
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = trunc i64 %9 to i32
  %11 = add i32 %2, %10
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator17GetAbsoluteOffsetEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, %1
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal11interpreter21BytecodeArrayIterator25GetJumpTableTargetOffsetsEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* noalias nocapture sret, %"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %1, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, -83
  %7 = zext i8 %5 to i64
  %8 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  br i1 %6, label %10, label %31

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %9, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = ptrtoint i8* %4 to i64
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 8
  %16 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext -83, i32 1, i8 zeroext %15) #6
  %17 = sext i32 %16 to i64
  %18 = add i64 %17, %13
  %19 = load i8, i8* %14, align 8
  %20 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %18, i8 zeroext %12, i8 zeroext %19) #6
  %21 = bitcast i8** %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = inttoptr i64 %22 to i8*
  %24 = load i8, i8* %23, align 1
  %25 = load i8, i8* %14, align 8
  %26 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %24, i32 2, i8 zeroext %25) #6
  %27 = sext i32 %26 to i64
  %28 = add i64 %22, %27
  %29 = load i8, i8* %14, align 8
  %30 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %28, i8 zeroext 6, i8 zeroext %29) #6
  br label %60

31:                                               ; preds = %2
  %32 = load i8, i8* %9, align 1
  %33 = ptrtoint i8* %4 to i64
  %34 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %1, i64 0, i32 4
  %35 = load i8, i8* %34, align 8
  %36 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %5, i32 0, i8 zeroext %35) #6
  %37 = sext i32 %36 to i64
  %38 = add i64 %37, %33
  %39 = load i8, i8* %34, align 8
  %40 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %38, i8 zeroext %32, i8 zeroext %39) #6
  %41 = bitcast i8** %3 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %42 to i8*
  %44 = load i8, i8* %43, align 1
  %45 = load i8, i8* %34, align 8
  %46 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %44, i32 1, i8 zeroext %45) #6
  %47 = sext i32 %46 to i64
  %48 = add i64 %42, %47
  %49 = load i8, i8* %34, align 8
  %50 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder21DecodeUnsignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %48, i8 zeroext 6, i8 zeroext %49) #6
  %51 = load i64, i64* %41, align 8
  %52 = inttoptr i64 %51 to i8*
  %53 = load i8, i8* %52, align 1
  %54 = load i8, i8* %34, align 8
  %55 = tail call i32 @_ZN2v88internal11interpreter9Bytecodes16GetOperandOffsetENS1_8BytecodeEiNS1_12OperandScaleE(i8 zeroext %53, i32 2, i8 zeroext %54) #6
  %56 = sext i32 %55 to i64
  %57 = add i64 %51, %56
  %58 = load i8, i8* %34, align 8
  %59 = tail call i32 @_ZN2v88internal11interpreter15BytecodeDecoder19DecodeSignedOperandEmNS1_11OperandTypeENS1_12OperandScaleE(i64 %57, i8 zeroext 8, i8 zeroext %58) #6
  br label %60

60:                                               ; preds = %31, %10
  %61 = phi i32 [ %20, %10 ], [ %40, %31 ]
  %62 = phi i32 [ %30, %10 ], [ %50, %31 ]
  %63 = phi i32 [ 0, %10 ], [ %59, %31 ]
  %64 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 0
  store %"class.v8::internal::interpreter::BytecodeArrayIterator"* %1, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 1
  store i32 %61, i32* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 2
  store i32 %62, i32* %66, align 4
  %67 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 3
  store i32 %63, i32* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNK2v88internal11interpreter21BytecodeArrayIterator7PrintToERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = sub nsw i64 0, %7
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 23
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 3
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal11interpreter15BytecodeDecoder6DecodeERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKhi(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %9, i32 %16) #6
  ret %"class.std::__1::basic_ostream"* %17
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal11interpreter15BytecodeDecoder6DecodeERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKhi(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter21BytecodeArrayIterator14UpdatePointersEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 33
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, %6
  br i1 %9, label %26, label %10

10:                                               ; preds = %1
  store i8* %6, i8** %7, align 8
  %11 = load i64, i64* %3, align 8
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = ashr i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %6, i64 %16
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 2
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %0, i64 0, i32 3
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %20
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  store i8* %25, i8** %21, align 8
  store i8* %17, i8** %18, align 8
  br label %26

26:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal11interpreter22JumpTableTargetOffsetsC2EPKNS1_21BytecodeArrayIteratorEiii(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* nocapture, %"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, i32, i32) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 0
  store %"class.v8::internal::interpreter::BytecodeArrayIterator"* %1, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 3
  store i32 %4, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* noalias nocapture sret, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %6
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 0
  store %"class.v8::internal::interpreter::BytecodeArrayIterator"* %11, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  store i32 %4, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 3
  store i32 %6, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 4
  store i32 %9, i32* %16, align 8
  %17 = icmp sgt i32 %8, 0
  br i1 %17, label %18, label %52

18:                                               ; preds = %2
  %19 = sext i32 %6 to i64
  %20 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %11, i64 0, i32 0, i32 0, i32 0
  %21 = sext i32 %9 to i64
  %22 = load i64*, i64** %20, align 8
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 7
  %26 = inttoptr i64 %25 to i32*
  br label %27

27:                                               ; preds = %42, %18
  %28 = phi i32 [ %4, %18 ], [ %45, %42 ]
  %29 = phi i64 [ %19, %18 ], [ %43, %42 ]
  %30 = load i32, i32* %26, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %24, %31
  %33 = trunc i64 %29 to i32
  %34 = shl i32 %33, 2
  %35 = sext i32 %34 to i64
  %36 = add nsw i64 %35, 7
  %37 = add i64 %36, %32
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %27
  %43 = add nsw i64 %29, 1
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %15, align 4
  %45 = add nsw i32 %28, 1
  store i32 %45, i32* %14, align 8
  %46 = icmp eq i64 %43, %21
  br i1 %46, label %52, label %27

47:                                               ; preds = %27
  %48 = inttoptr i64 %37 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %24, %50
  store i64 %51, i64* %13, align 8
  br label %52

52:                                               ; preds = %42, %2, %47
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets3endEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* noalias nocapture sret, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, %4
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, %6
  %11 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  store i32 %7, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 3
  store i32 %10, i32* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 4
  store i32 %10, i32* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal11interpreter22JumpTableTargetOffsets4sizeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8, !noalias !3
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8, !noalias !3
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4, !noalias !3
  %8 = add nsw i32 %7, %5
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets", %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %9, align 8, !noalias !3
  %11 = icmp sgt i32 %7, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = sext i32 %8 to i64
  %15 = load i64*, i64** %13, align 8, !noalias !3
  %16 = load i64, i64* %15, align 8, !noalias !3
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 7
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4, !noalias !3
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = shl i32 %5, 2
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %24, 7
  %26 = add i64 %25, %22
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4, !noalias !3
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %52, label %31

31:                                               ; preds = %12
  %32 = sext i32 %5 to i64
  br label %43

33:                                               ; preds = %43
  %34 = trunc i64 %46 to i32
  %35 = shl i32 %34, 2
  %36 = sext i32 %35 to i64
  %37 = add nsw i64 %36, 7
  %38 = add i64 %37, %22
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4, !noalias !3
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %31, %33
  %44 = phi i64 [ %46, %33 ], [ %32, %31 ]
  %45 = phi i32 [ %47, %33 ], [ %3, %31 ]
  %46 = add nsw i64 %44, 1
  %47 = add nsw i32 %45, 1
  %48 = icmp eq i64 %46, %14
  br i1 %48, label %57, label %33

49:                                               ; preds = %33
  %50 = trunc i64 %46 to i32
  %51 = inttoptr i64 %38 to i32*
  br label %52

52:                                               ; preds = %49, %12
  %53 = phi i32 [ %3, %12 ], [ %47, %49 ]
  %54 = phi i32 [ %5, %12 ], [ %50, %49 ]
  %55 = phi i32* [ %27, %12 ], [ %51, %49 ]
  %56 = load atomic i32, i32* %55 monotonic, align 4, !noalias !3
  br label %57

57:                                               ; preds = %43, %1, %52
  %58 = phi i32 [ %53, %52 ], [ %3, %1 ], [ %47, %43 ]
  %59 = phi i32 [ %54, %52 ], [ %5, %1 ], [ %8, %43 ]
  %60 = add nsw i32 %7, %3
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %10, i64 0, i32 0, i32 0, i32 0
  %64 = sext i32 %8 to i64
  br label %67

65:                                               ; preds = %118, %57
  %66 = phi i32 [ 0, %57 ], [ %71, %118 ]
  ret i32 %66

67:                                               ; preds = %62, %118
  %68 = phi i32 [ 0, %62 ], [ %71, %118 ]
  %69 = phi i32 [ %59, %62 ], [ %120, %118 ]
  %70 = phi i32 [ %58, %62 ], [ %119, %118 ]
  %71 = add nuw nsw i32 %68, 1
  %72 = add nsw i32 %69, 1
  %73 = add nsw i32 %70, 1
  %74 = icmp slt i32 %72, %8
  br i1 %74, label %75, label %118

75:                                               ; preds = %67
  %76 = load i64*, i64** %63, align 8
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, -4294967296
  %79 = add i64 %77, 7
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = shl i32 %72, 2
  %85 = sext i32 %84 to i64
  %86 = add nsw i64 %85, 7
  %87 = add i64 %86, %83
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %113, label %92

92:                                               ; preds = %75
  %93 = sext i32 %72 to i64
  br label %104

94:                                               ; preds = %104
  %95 = trunc i64 %107 to i32
  %96 = shl i32 %95, 2
  %97 = sext i32 %96 to i64
  %98 = add nsw i64 %97, 7
  %99 = add i64 %98, %83
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %92, %94
  %105 = phi i64 [ %107, %94 ], [ %93, %92 ]
  %106 = phi i32 [ %108, %94 ], [ %73, %92 ]
  %107 = add nsw i64 %105, 1
  %108 = add nsw i32 %106, 1
  %109 = icmp eq i64 %107, %64
  br i1 %109, label %118, label %94

110:                                              ; preds = %94
  %111 = trunc i64 %107 to i32
  %112 = inttoptr i64 %99 to i32*
  br label %113

113:                                              ; preds = %110, %75
  %114 = phi i32 [ %73, %75 ], [ %108, %110 ]
  %115 = phi i32 [ %72, %75 ], [ %111, %110 ]
  %116 = phi i32* [ %88, %75 ], [ %112, %110 ]
  %117 = load atomic i32, i32* %116 monotonic, align 4
  br label %118

118:                                              ; preds = %104, %67, %113
  %119 = phi i32 [ %114, %113 ], [ %73, %67 ], [ %108, %104 ]
  %120 = phi i32 [ %115, %113 ], [ %72, %67 ], [ %8, %104 ]
  %121 = icmp eq i32 %119, %60
  br i1 %121, label %65, label %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nocapture readonly, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratordeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = ashr i32 %8, 1
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %5, i64 0, i32 3
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %5, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %12, %15
  %17 = trunc i64 %16 to i32
  %18 = add i32 %9, %17
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %3 to i64
  %22 = or i64 %20, %21
  ret i64 %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(32) %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorppEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* returned) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %4, %9
  br i1 %10, label %11, label %48

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 0
  %13 = sext i32 %4 to i64
  %14 = load %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %12, align 8
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = sext i32 %9 to i64
  br label %17

17:                                               ; preds = %37, %11
  %18 = phi i32 [ %7, %11 ], [ %40, %37 ]
  %19 = phi i64 [ %13, %11 ], [ %38, %37 ]
  %20 = load i64*, i64** %15, align 8
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 7
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = trunc i64 %19 to i32
  %29 = shl i32 %28, 2
  %30 = sext i32 %29 to i64
  %31 = add nsw i64 %30, 7
  %32 = add i64 %31, %27
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %17
  %38 = add nsw i64 %19, 1
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %2, align 4
  %40 = add nsw i32 %18, 1
  store i32 %40, i32* %5, align 8
  %41 = icmp eq i64 %38, %16
  br i1 %41, label %48, label %17

42:                                               ; preds = %17
  %43 = inttoptr i64 %32 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %22, %45
  %47 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i64 %46, i64* %47, align 8
  br label %48

48:                                               ; preds = %37, %1, %42
  ret %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorC2EiiiPKNS1_21BytecodeArrayIteratorE(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nocapture, i32, i32, i32, %"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 0
  store %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 3
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 4
  store i32 %3, i32* %10, align 8
  %11 = icmp slt i32 %2, %3
  br i1 %11, label %12, label %46

12:                                               ; preds = %5
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = sext i32 %3 to i64
  br label %16

16:                                               ; preds = %36, %12
  %17 = phi i32 [ %1, %12 ], [ %39, %36 ]
  %18 = phi i64 [ %13, %12 ], [ %37, %36 ]
  %19 = load i64*, i64** %14, align 8
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, -4294967296
  %22 = add i64 %20, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = trunc i64 %18 to i32
  %28 = shl i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = add nsw i64 %29, 7
  %31 = add i64 %30, %26
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %16
  %37 = add nsw i64 %18, 1
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %9, align 4
  %39 = add nsw i32 %17, 1
  store i32 %39, i32* %8, align 8
  %40 = icmp eq i64 %37, %15
  br i1 %40, label %46, label %16

41:                                               ; preds = %16
  %42 = inttoptr i64 %31 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %21, %44
  store i64 %45, i64* %7, align 8
  br label %46

46:                                               ; preds = %36, %5, %41
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iterator23UpdateAndAdvanceToValidEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %3, %5
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 2
  %10 = sext i32 %3 to i64
  %11 = load %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"** %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = sext i32 %5 to i64
  br label %14

14:                                               ; preds = %7, %33
  %15 = phi i64 [ %10, %7 ], [ %34, %33 ]
  %16 = load i64*, i64** %12, align 8
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = trunc i64 %15 to i32
  %25 = shl i32 %24, 2
  %26 = sext i32 %25 to i64
  %27 = add nsw i64 %26, 7
  %28 = add i64 %27, %23
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %14
  %34 = add nsw i64 %15, 1
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %2, align 4
  %36 = load i32, i32* %9, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %9, align 8
  %38 = icmp slt i64 %34, %13
  br i1 %38, label %14, label %45

39:                                               ; preds = %14
  %40 = inttoptr i64 %28 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %18, %42
  %44 = getelementptr inbounds %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  br label %45

45:                                               ; preds = %33, %1, %39
  ret void
}

declare i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32) local_unnamed_addr #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv"}
