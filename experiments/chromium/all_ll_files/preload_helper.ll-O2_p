; ModuleID = '../../third_party/blink/renderer/core/loader/preload_helper.cc'
source_filename = "../../third_party/blink/renderer/core/loader/preload_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.169 }
%union.anon.169 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.374 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.375 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.368", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.370", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.375 }
%"class.WTF::RefCounted.368" = type { %"class.base::RefCounted.369" }
%"class.base::RefCounted.369" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.370" = type { %"class.absl::optional_internal::optional_data.371" }
%"class.absl::optional_internal::optional_data.371" = type { %"class.absl::optional_internal::optional_data_base.372" }
%"class.absl::optional_internal::optional_data_base.372" = type { %"class.absl::optional_internal::optional_data_dtor_base.373" }
%"class.absl::optional_internal::optional_data_dtor_base.373" = type { i8, %union.anon.374 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1287" }
%"class.WTF::HashMap.1287" = type { %"class.WTF::HashTable.1288" }
%"class.WTF::HashTable.1288" = type <{ %"struct.WTF::KeyValuePair.1291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1291" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1292 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1293", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1302, i8, %"class.url::Origin" }
%"class.base::RefCounted.1293" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1294" }
%"class.std::__1::vector.1294" = type { %"class.std::__1::__vector_base.1295" }
%"class.std::__1::__vector_base.1295" = type { %"class.std::__1::unique_ptr.1296"*, %"class.std::__1::unique_ptr.1296"*, %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.2167" }
%"class.std::__1::__compressed_pair.2167" = type { %"struct.std::__1::__compressed_pair_elem.2168" }
%"struct.std::__1::__compressed_pair_elem.2168" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.std::__1::unique_ptr.1296"* }
%class.scoped_refptr.1302 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1303", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1303" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.123" }
%"struct.std::__1::atomic.123" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__cxx_atomic_impl.126" }
%"struct.std::__1::__cxx_atomic_impl.126" = type { %"struct.std::__1::__cxx_atomic_base_impl.127" }
%"struct.std::__1::__cxx_atomic_base_impl.127" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.370" }
%"class.WTF::Vector.1314" = type { %"class.WTF::VectorBuffer.1315" }
%"class.WTF::VectorBuffer.1315" = type { %"class.WTF::VectorBufferBase.1316" }
%"class.WTF::VectorBufferBase.1316" = type { %class.scoped_refptr.375*, i32, i32 }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.295 = type { %"class.base::TimeDelta" }
%union.anon.1323 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote.1329" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1330 = type { %"class.base::RefCountedData.1331"* }
%"class.base::RefCountedData.1331" = type { %"class.base::RefCountedThreadSafe.2172", %"class.base::internal::flat_tree.2173" }
%"class.base::RefCountedThreadSafe.2172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2173" = type { %"class.std::__1::vector.2174" }
%"class.std::__1::vector.2174" = type { %"class.std::__1::__vector_base.2175" }
%"class.std::__1::__vector_base.2175" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2176" }
%"class.std::__1::__compressed_pair.2176" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"struct.std::__1::__compressed_pair_elem.2177" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1976, %"class.mojo::PendingRemote.1977" }
%class.scoped_refptr.1976 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1977" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.1379" = type { i8 }
%"class.WTF::HashSet.1380" = type { %"class.WTF::HashTable.1381" }
%"class.WTF::HashTable.1381" = type <{ %"struct.std::__1::pair.1384"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1384" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.717 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.718", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.718" = type { %"class.base::RefCounted.719" }
%"class.base::RefCounted.719" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.722" }
%"class.blink::HeapHashMap.722" = type { %"class.WTF::HashMap.725" }
%"class.WTF::HashMap.725" = type { %"class.WTF::HashTable.726" }
%"class.WTF::HashTable.726" = type <{ %"struct.WTF::KeyValuePair.728"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.728" = type { %"class.blink::WeakMember.729", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.731", i32, [4 x i8], %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.869", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.875", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.881", %"class.std::__1::unique_ptr.887", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.905", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.209", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.764", %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.782", %"class.std::__1::unique_ptr.782", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.810", %"class.std::__1::unique_ptr.817", %"class.std::__1::unique_ptr.824", %"class.std::__1::unique_ptr.849", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.767" = type { %"struct.std::__1::__atomic_base.768" }
%"struct.std::__1::__atomic_base.768" = type { %"struct.std::__1::__atomic_base.769" }
%"struct.std::__1::__atomic_base.769" = type { %"struct.std::__1::__cxx_atomic_impl.770" }
%"struct.std::__1::__cxx_atomic_impl.770" = type { %"struct.std::__1::__cxx_atomic_base_impl.771" }
%"struct.std::__1::__cxx_atomic_base_impl.771" = type { i64 }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.blink::Worklist.778"* }
%"class.blink::Worklist.778" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.blink::Worklist.785"* }
%"class.blink::Worklist.785" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.blink::Worklist.792"* }
%"class.blink::Worklist.792" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::Worklist.799"* }
%"class.blink::Worklist.799" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.blink::Worklist.806"* }
%"class.blink::Worklist.806" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.blink::Worklist.813"* }
%"class.blink::Worklist.813" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.blink::Worklist.820"* }
%"class.blink::Worklist.820" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.767" }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.827", %"class.std::__1::__compressed_pair.835", %"class.std::__1::__compressed_pair.840", %"class.std::__1::__compressed_pair.842", [4 x i8] }>
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829", %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { i64 }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { float }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.852", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.861" }
%"class.WTF::Vector.861" = type { %"class.WTF::VectorBuffer.862" }
%"class.WTF::VectorBuffer.862" = type { %"class.WTF::VectorBufferBase.863" }
%"class.WTF::VectorBufferBase.863" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.875" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.878" }
%"class.WTF::VectorBuffer.878" = type { %"class.WTF::VectorBufferBase.879" }
%"class.WTF::VectorBufferBase.879" = type { %"struct.std::__1::pair.880"*, i32, i32 }
%"struct.std::__1::pair.880" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.893" }
%"class.std::__1::unique_ptr.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.778"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.785"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.792"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.799"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.806"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1165", i64 }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1167" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.911 }
%class.scoped_refptr.911 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.1385 = type { %"class.base::RefCountedData.1386"* }
%"class.base::RefCountedData.1386" = type opaque
%class.scoped_refptr.1387 = type { %"class.base::RefCountedData.1388"* }
%"class.base::RefCountedData.1388" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::LinkLoadParameters" = type { %"class.blink::LinkRelAttribute", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional" }
%"class.blink::LinkRelAttribute" = type <{ i32, i16, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.119", %"class.WTF::Vector.119", i8, i32, %"class.blink::Member.130", %"class.blink::Member.409", %"class.blink::Member.695", %"class.blink::Member.697", %"class.blink::Member.699", %"class.blink::Member.701", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.703", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.709", %"class.blink::Member.711", %"class.blink::Member.60", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.714", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.22", %"class.blink::Member.671", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::UserActionElementSet", %"class.blink::Member.924", double, double, i64, i64, %"class.blink::HeapHashSet.926", %"class.blink::HeapHashSet.933", i16, i8, %"class.blink::Member.940", %"class.blink::Member.942", %"class.blink::Member.944", %"class.blink::Member.946", %"class.blink::TextLinkColors", %"class.blink::Member.948", i8, [7 x i8], %"class.blink::HeapHashMap.950", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.22", %"class.WTF::Vector.957", %"class.blink::Member.962", %"class.blink::Member.964", i8, %"class.blink::Member.22", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.966", %"class.blink::HeapVector.990", %"class.std::__1::unique_ptr.997", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1003", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1016", %"class.WTF::Vector.1018", i8, i8, %"class.std::__1::unique_ptr.1023", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1029", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1037", i8, i32, %"class.blink::Member.1039", %"class.blink::Member.1041", %"class.blink::Member.1043", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1045", %"class.WTF::HashMap.1047", %"class.blink::Member.1052", %"class.blink::Member.1054", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1060", i8, i32, %"class.blink::Member.1067", %"class.blink::Member.1069", i32, %"class.blink::Member.1071", %"class.blink::Member.1073", %"class.blink::Member.1075", %"class.std::__1::unique_ptr.1077", i64, %"class.std::__1::unique_ptr.1083", i32, i32, %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::Member.1093", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1111", %"class.WTF::Vector.682", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1113", %"class.blink::Member.1120", %"class.std::__1::unique_ptr.1122", %"class.blink::Member.1128", i8, i8, %"class.WTF::String", %"class.blink::Member.1130", i8, [7 x i8], %"class.blink::HeapHashMap.1132", %"class.blink::HeapObserverSet.1139", %"class.blink::Member.1147", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1149", i32, i8, i8, %"class.blink::WeakMember.1151", %"class.blink::Member.1152" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.2", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.4" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.8", %"class.blink::Member.10", %"class.blink::Member.2", %"class.blink::Member.12", %"class.blink::Member.12", %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member.47", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.52", %"class.blink::HeapVector.54" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.18" }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.22", i32, %"class.blink::HeapVector" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.49" }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::HeapHashMap.51"* }
%"class.blink::HeapHashMap.51" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.54" = type { %"class.WTF::Vector.57" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.60"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.112" }
%"class.blink::HeapHashMap.112" = type { %"class.WTF::HashMap.115" }
%"class.WTF::HashMap.115" = type { %"class.WTF::HashTable.116" }
%"class.WTF::HashTable.116" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.499", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.507", %"class.blink::Member.10", %"class.blink::Member.509", i8, %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::Member.541", %"class.blink::Member.543", %"class.blink::Member.545", %"class.blink::Member.549", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.466", %"class.blink::Member.551", %class.scoped_refptr.553, %"class.blink::HeapHashSet.615", %"class.blink::Member.622", %"class.blink::HeapHashMap.635", %"class.std::__1::unique_ptr.642", %"class.blink::Member.654", %"class.blink::Member.675", %"class.blink::Member.677", %"class.blink::Member.679", %"class.WTF::Vector.682", %"class.util::TokenType", %"class.WTF::HashSet.687", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.152", %"class.blink::Member.154", %"class.blink::Member.156", %"class.blink::Member.158", i8, %"class.WTF::Vector.160" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.145" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.134" }
%"class.blink::HeapVector.134" = type { %"class.WTF::Vector.137" }
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139", [32 x i8] }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.140" }
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::HeapVector.142"* }
%"class.blink::HeapVector.142" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.WTF::Vector.148"* }
%"class.WTF::Vector.148" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1480", %"class.blink::Member.1482", %"class.blink::Member.1484", i8, i32, i8, i32, %"class.blink::Member.1486", %"class.blink::Member.154", %"class.blink::FrameLifecycle", %"class.blink::Member.152", %"class.blink::Member.152", %"class.blink::Member.152", %"class.blink::Member.152", %"class.blink::Member.152", %"class.blink::Member.152", %"class.blink::Member.660", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1496", i8, %"class.base::UnguessableToken", %"class.absl::optional.1498", %"class.absl::optional", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.152", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.152", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1488" }
%"class.std::__1::vector.1488" = type { %"class.std::__1::__vector_base.1489" }
%"class.std::__1::__vector_base.1489" = type { %"struct.std::__1::pair.1490"*, %"struct.std::__1::pair.1490"*, %"class.std::__1::__compressed_pair.1491" }
%"struct.std::__1::pair.1490" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"struct.std::__1::pair.1490"* }
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1498" = type { %"class.absl::optional_internal::optional_data.1499" }
%"class.absl::optional_internal::optional_data.1499" = type { %"class.absl::optional_internal::optional_data_base.1500" }
%"class.absl::optional_internal::optional_data_base.1500" = type { %"class.absl::optional_internal::optional_data_dtor_base.1501" }
%"class.absl::optional_internal::optional_data_dtor_base.1501" = type { i8, %union.anon.1502 }
%union.anon.1502 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1503" }
%"class.blink::HeapHashSet.1503" = type { %"class.WTF::HashSet.1506" }
%"class.WTF::HashSet.1506" = type { %"class.WTF::HashTable.1507" }
%"class.WTF::HashTable.1507" = type <{ %"class.blink::WeakMember.1509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1509" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.160" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.336" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.163, %"class.std::__1::unique_ptr.286", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.165, i32 }>
%class.scoped_refptr.163 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.165, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.252", %"class.absl::optional.257", %"class.absl::optional.213", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.277", i8, [7 x i8], %class.scoped_refptr.165, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.164" }>
%"class.base::RefCountedThreadSafe.164" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.184", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.185" }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.165, %"class.std::__1::unique_ptr.190", %"class.absl::optional.199", %"struct.std::__1::atomic.209", i8, i8, i8, i8, i32, i32, %"class.absl::optional.213", %"class.std::__1::unique_ptr.218", i8, i64, %class.scoped_refptr.248, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.251" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.165, i8, %"class.mojo::ScopedHandleBase.193", %class.scoped_refptr.194, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.195" }
%"class.mojo::ScopedHandleBase.193" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.194 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.195" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.199" = type { %"class.absl::optional_internal::optional_data.200" }
%"class.absl::optional_internal::optional_data.200" = type { %"class.absl::optional_internal::optional_data_base.201" }
%"class.absl::optional_internal::optional_data_base.201" = type { %"class.absl::optional_internal::optional_data_dtor_base.202" }
%"class.absl::optional_internal::optional_data_dtor_base.202" = type { i8, %union.anon.203 }
%union.anon.203 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.204", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.204" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.221", i8, i64, %class.scoped_refptr.222, %class.scoped_refptr.244 }
%"class.base::RepeatingCallback.221" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.222 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.223", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.233", i8, [7 x i8] }>
%"class.base::RefCounted.223" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::map.233" = type { %"class.std::__1::__tree.234" }
%"class.std::__1::__tree.234" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%class.scoped_refptr.244 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.248 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1930", [4 x i8], %"class.base::RepeatingCallback.289", %class.scoped_refptr.165, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1930" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.289" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.250 }
%class.scoped_refptr.250 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.251" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.252" = type { %"class.absl::optional_internal::optional_data.253" }
%"class.absl::optional_internal::optional_data.253" = type { %"class.absl::optional_internal::optional_data_base.254" }
%"class.absl::optional_internal::optional_data_base.254" = type { %"class.absl::optional_internal::optional_data_dtor_base.255" }
%"class.absl::optional_internal::optional_data_dtor_base.255" = type { i8, %union.anon.256 }
%union.anon.256 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.257" = type { %"class.absl::optional_internal::optional_data.258" }
%"class.absl::optional_internal::optional_data.258" = type { %"class.absl::optional_internal::optional_data_base.259" }
%"class.absl::optional_internal::optional_data_base.259" = type { %"class.absl::optional_internal::optional_data_dtor_base.260" }
%"class.absl::optional_internal::optional_data_dtor_base.260" = type { i8, [7 x i8], %union.anon.261 }
%union.anon.261 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.213" = type { %"class.absl::optional_internal::optional_data.214" }
%"class.absl::optional_internal::optional_data.214" = type { %"class.absl::optional_internal::optional_data_base.215" }
%"class.absl::optional_internal::optional_data_base.215" = type { %"class.absl::optional_internal::optional_data_dtor_base.216" }
%"class.absl::optional_internal::optional_data_dtor_base.216" = type { i8, %union.anon.217 }
%union.anon.217 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.262 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.262 = type { %"class.std::__1::map.265" }
%"class.std::__1::map.265" = type { %"class.std::__1::__tree.266" }
%"class.std::__1::__tree.266" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.276"*, i64 }
%"class.std::__1::unique_ptr.276" = type opaque
%"class.std::__1::map.277" = type { %"class.std::__1::__tree.278" }
%"class.std::__1::__tree.278" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.289", %"class.base::OnceCallback.290", %"class.absl::optional.291", %"class.absl::optional.296", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.303", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.311", %"class.std::__1::map.322", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.331", i8, %class.scoped_refptr.165, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.332" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.290" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.291" = type { %"class.absl::optional_internal::optional_data.292" }
%"class.absl::optional_internal::optional_data.292" = type { %"class.absl::optional_internal::optional_data_base.293" }
%"class.absl::optional_internal::optional_data_base.293" = type { %"class.absl::optional_internal::optional_data_dtor_base.294" }
%"class.absl::optional_internal::optional_data_dtor_base.294" = type { i8, %union.anon.295 }
%"class.absl::optional.296" = type { %"class.absl::optional_internal::optional_data.297" }
%"class.absl::optional_internal::optional_data.297" = type { %"class.absl::optional_internal::optional_data_base.298" }
%"class.absl::optional_internal::optional_data_base.298" = type { %"class.absl::optional_internal::optional_data_dtor_base.299" }
%"class.absl::optional_internal::optional_data_dtor_base.299" = type { i8, %union.anon.300 }
%union.anon.300 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.165, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.301" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.301" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.302 }
%class.scoped_refptr.302 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.306", %class.scoped_refptr.307 }
%"class.base::RepeatingCallback.306" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.307 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.164", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.311" = type { %"class.std::__1::__tree.312" }
%"class.std::__1::__tree.312" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::map.322" = type { %"class.std::__1::__tree.323" }
%"class.std::__1::__tree.323" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.base::OnceCallback.331" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.332" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.165 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166" }>
%"class.base::RefCountedThreadSafe.166" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.344", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.415", i32, i8, [3 x i8], %"class.blink::HeapVector.417", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.436", %"class.blink::Member.495", %"class.blink::Member.497", i8 }>
%"class.blink::Supplementable.344" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.345" }
%"class.blink::HeapHashMap.345" = type { %"class.WTF::HashMap.348" }
%"class.WTF::HashMap.348" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"struct.WTF::KeyValuePair.351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.351" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.359" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.352" }
%"class.blink::HeapHashSet.352" = type { %"class.WTF::HashSet.355" }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::WeakMember.358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.358" = type opaque
%"class.blink::Supplementable.359" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.360" }
%"class.blink::HeapHashMap.360" = type { %"class.WTF::HashMap.363" }
%"class.WTF::HashMap.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"struct.WTF::KeyValuePair.366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.366" = type { i8*, %"class.blink::Member.2183" }
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2185" }
%"class.blink::Member.2185" = type { %"class.blink::MemberBase.2186" }
%"class.blink::MemberBase.2186" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.367, %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.403", %"class.blink::Member.409", i32, [4 x i8], %"class.WTF::HashSet.411", i32, i32 }
%class.scoped_refptr.367 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.379", %"class.std::__1::map.390", %"class.std::__1::map.399"* }
%"class.std::__1::map.379" = type { %"class.std::__1::__tree.380" }
%"class.std::__1::__tree.380" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::map.390" = type { %"class.std::__1::__tree.391" }
%"class.std::__1::__tree.391" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::map.399" = type opaque
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.411" = type { %"class.WTF::HashTable.412" }
%"class.WTF::HashTable.412" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.417" = type { %"class.WTF::Vector.420" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::Member.423"*, i32, i32 }
%"class.blink::Member.423" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.429", i32, i32 }
%"class.blink::HeapHashMap.429" = type { %"class.WTF::HashMap.432" }
%"class.WTF::HashMap.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.439" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.442" }
%"class.WTF::Vector.442" = type { %"class.WTF::VectorBuffer.443" }
%"class.WTF::VectorBuffer.443" = type { %"class.WTF::VectorBufferBase.444" }
%"class.WTF::VectorBufferBase.444" = type { %"class.mojo::StructPtr.445"*, i32, i32 }
%"class.mojo::StructPtr.445" = type { %"class.std::__1::unique_ptr.446" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.449", %"class.WTF::HashMap.456", %"class.WTF::HashMap.461", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.466", i32, %"class.mojo::StructPtr.471", %"class.WTF::Vector.466" }
%"class.mojo::StructPtr.449" = type { %"class.std::__1::unique_ptr.450" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.471" = type { %"class.std::__1::unique_ptr.472" }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.466", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.486" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.286", i32 }>
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.499" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.500" }
%"class.blink::HeapHashMap.500" = type { %"class.WTF::HashMap.503" }
%"class.WTF::HashMap.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"struct.WTF::KeyValuePair.506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.506" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type { %"class.blink::NavigatorBase", %"class.blink::Supplementable.528", %"struct.blink::UserAgentMetadata" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.520" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.519", %"class.WTF::Vector.466", i8 }>
%"class.blink::WeakMember.519" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.344", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.415", i32, i8, [3 x i8], %"class.blink::HeapVector.417", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.436", %"class.blink::Member.495", %"class.blink::Member.497", i8, [7 x i8] }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.519" }
%"class.blink::Supplementable.520" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.521" }
%"class.blink::HeapHashMap.521" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type { i8*, %"class.blink::Member.2254" }
%"class.blink::Member.2254" = type { %"class.blink::MemberBase.2255" }
%"class.blink::MemberBase.2255" = type { %"class.blink::Supplement.2256"* }
%"class.blink::Supplement.2256" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2257" }
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::NavigatorBase"* }
%"class.blink::Supplementable.528" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.529" }
%"class.blink::HeapHashMap.529" = type { %"class.WTF::HashMap.532" }
%"class.WTF::HashMap.532" = type { %"class.WTF::HashTable.533" }
%"class.WTF::HashTable.533" = type <{ %"struct.WTF::KeyValuePair.535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.535" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.536" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.553 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.555", i64, %"class.WTF::Vector.559", %"class.WTF::Vector.564", %"class.WTF::Vector.570", %"class.WTF::Vector.588", %class.scoped_refptr.367, %"class.WTF::HashMap.594", %"class.WTF::Vector.599", %"class.WTF::Vector.559", %"class.WTF::Vector.605", %"class.WTF::HashMap.610", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.554" }
%"class.base::RefCountedThreadSafe.554" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { i8* }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566", [8 x i8] }
%"class.WTF::VectorBufferBase.566" = type { %class.scoped_refptr.567*, i32, i32 }
%class.scoped_refptr.567 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.580" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.573 }
%class.scoped_refptr.573 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.591", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.591" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.598" = type opaque
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %"class.mojo::ScopedHandleBase.602"*, i32, i32 }
%"class.mojo::ScopedHandleBase.602" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.559" = type { %"class.WTF::VectorBuffer.560" }
%"class.WTF::VectorBuffer.560" = type { %"class.WTF::VectorBufferBase.561", [16 x i8] }
%"class.WTF::VectorBufferBase.561" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.614" = type { i8**, %"class.std::__1::unique_ptr.2187" }
%"class.std::__1::unique_ptr.2187" = type { %"class.std::__1::__compressed_pair.2188" }
%"class.std::__1::__compressed_pair.2188" = type { %"struct.std::__1::__compressed_pair_elem.2189" }
%"struct.std::__1::__compressed_pair_elem.2189" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.615" = type { %"class.WTF::HashSet.618" }
%"class.WTF::HashSet.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"class.blink::WeakMember.621"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.621" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.629", %"class.blink::Member.629", %"class.blink::Member.631", %"class.blink::Member.633", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.624" }
%"class.absl::optional.624" = type { %"class.absl::optional_internal::optional_data.625" }
%"class.absl::optional_internal::optional_data.625" = type { %"class.absl::optional_internal::optional_data_base.626" }
%"class.absl::optional_internal::optional_data_base.626" = type { %"class.absl::optional_internal::optional_data_dtor_base.627" }
%"class.absl::optional_internal::optional_data_dtor_base.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { i64 }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::Event"* }
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.635" = type { %"class.WTF::HashMap.638" }
%"class.WTF::HashMap.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type opaque
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.645", %"class.base::WeakPtrFactory.650" }
%"class.WTF::HashMap.645" = type { %"class.WTF::HashTable.646" }
%"class.WTF::HashTable.646" = type <{ %"struct.WTF::KeyValuePair.649"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.649" = type opaque
%"class.base::WeakPtrFactory.650" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.660", %"class.blink::CachedTextInputInfo", %"class.blink::Member.671", %"class.blink::Member.673", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.658" }
%"class.blink::WeakMember.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.662", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.664", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::ContainerNode"* }
%"class.blink::LayoutObject" = type opaque
%"class.blink::HeapHashMap.664" = type { %"class.WTF::HashMap.667" }
%"class.WTF::HashMap.667" = type { %"class.WTF::HashTable.668" }
%"class.WTF::HashTable.668" = type <{ %"struct.WTF::KeyValuePair.670"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.670" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.130", %"class.blink::Member.1474", %"class.blink::Member.1476" }
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.130", %"class.blink::HeapMojoRemote.1469" }
%"class.blink::HeapMojoRemote.1469" = type { %"class.blink::Member.1470" }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::HeapHashMap.681"* }
%"class.blink::HeapHashMap.681" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.687" = type { %"class.WTF::HashTable.688" }
%"class.WTF::HashTable.688" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.693" }
%"class.WTF::VectorBuffer.693" = type { %"class.WTF::VectorBufferBase.694" }
%"class.WTF::VectorBufferBase.694" = type { i64*, i32, i32 }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1174", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1179", %class.scoped_refptr.914, %class.scoped_refptr.914, %"class.blink::Member.1181", %"class.blink::Member.1183", %"class.blink::Member.1189", %"class.blink::Member.1193", %"class.blink::Member.1245", %"class.blink::HeapHashMap.1247", %"class.blink::HeapHashSet.1254", %"class.blink::HeapHashSet.1254", %"class.blink::HeapHashMap.1414", %"class.blink::HeapVector.1421", %"class.blink::Member.1429", %"class.blink::HeapTaskRunnerTimer.1431", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1433", %"class.WTF::Vector.1440", %"class.blink::HeapHashSet.1446", %"class.blink::HeapHashSet.1446", %"class.std::__1::unique_ptr.1452", %"class.base::WeakPtr.1238", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1464", i8, i8, %"class.base::WeakPtrFactory.1466" }
%"class.blink::ThreadState::PrefinalizerRegistration.1174" = type { i8 }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.914 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1187" }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1197", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1199", %"class.WTF::HashSet.1204", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1208", %"class.std::__1::map.1215", %"class.std::__1::map.1226", %"class.std::__1::unique_ptr.1235", %"class.blink::Member.1183", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1242", %"class.mojo::InlinedStructPtr.1244", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1199" = type { %"class.WTF::HashTable.1200" }
%"class.WTF::HashTable.1200" = type <{ %"struct.WTF::KeyValuePair.1203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1203" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1204" = type { %"class.WTF::HashTable.1205" }
%"class.WTF::HashTable.1205" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1208" = type { %"class.WTF::HashMap.1211" }
%"class.WTF::HashMap.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"struct.WTF::KeyValuePair.1214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1214" = type opaque
%"class.std::__1::map.1215" = type { %"class.std::__1::__tree.1216" }
%"class.std::__1::__tree.1216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1217", %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::map.1226" = type { %"class.std::__1::__tree.1227" }
%"class.std::__1::__tree.1227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1228", %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1238", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1244" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1247" = type { %"class.WTF::HashMap.1250" }
%"class.WTF::HashMap.1250" = type { %"class.WTF::HashTable.1251" }
%"class.WTF::HashTable.1251" = type <{ %"struct.WTF::KeyValuePair.1253"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1253" = type opaque
%"class.blink::HeapHashSet.1254" = type { %"class.WTF::HashSet.1257" }
%"class.WTF::HashSet.1257" = type { %"class.WTF::HashTable.1258" }
%"class.WTF::HashTable.1258" = type <{ %"class.blink::WeakMember.1260"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1264", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1284", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1372", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1389", %"class.blink::ResourceResponse", %class.scoped_refptr.1391, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1264" = type { %"class.absl::optional_internal::optional_data.1265" }
%"class.absl::optional_internal::optional_data.1265" = type { %"class.absl::optional_internal::optional_data_base.1266" }
%"class.absl::optional_internal::optional_data_base.1266" = type { %"class.absl::optional_internal::optional_data_dtor_base.1267" }
%"class.absl::optional_internal::optional_data_dtor_base.1267" = type { i8, %union.anon.1268 }
%union.anon.1268 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1269", i8, %"class.absl::optional.1274", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1269" = type { %"class.absl::optional_internal::optional_data.1270" }
%"class.absl::optional_internal::optional_data.1270" = type { %"class.absl::optional_internal::optional_data_base.1271" }
%"class.absl::optional_internal::optional_data_base.1271" = type { %"class.absl::optional_internal::optional_data_dtor_base.1272" }
%"class.absl::optional_internal::optional_data_dtor_base.1272" = type { i8, [7 x i8], %union.anon.1273 }
%union.anon.1273 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1274" = type { %"class.absl::optional_internal::optional_data.1275" }
%"class.absl::optional_internal::optional_data.1275" = type { %"class.absl::optional_internal::optional_data_base.1276" }
%"class.absl::optional_internal::optional_data_base.1276" = type { %"class.absl::optional_internal::optional_data_dtor_base.1277" }
%"class.absl::optional_internal::optional_data_dtor_base.1277" = type { i8, %union.anon.1278 }
%union.anon.1278 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1279", %"class.WTF::Vector.466" }
%"class.WTF::Vector.1279" = type { %"class.WTF::VectorBuffer.1280" }
%"class.WTF::VectorBuffer.1280" = type { %"class.WTF::VectorBufferBase.1281" }
%"class.WTF::VectorBufferBase.1281" = type { i32*, i32, i32 }
%"class.WTF::Vector.1284" = type { %"class.WTF::VectorBuffer.1285" }
%"class.WTF::VectorBuffer.1285" = type { %"class.WTF::VectorBufferBase.1286" }
%"class.WTF::VectorBufferBase.1286" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1368" }
%"class.WTF::HashMap.1368" = type { %"class.WTF::HashTable.1369" }
%"class.WTF::HashTable.1369" = type <{ %"struct.WTF::KeyValuePair.1371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1371" = type <{ %"class.blink::WeakMember.2181", i32, [4 x i8] }>
%"class.blink::WeakMember.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2152", [7 x i8], %"class.blink::Member.1427", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2152" = type { i8 }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1261" }
%"class.blink::HeapHashSet.1372" = type { %"class.WTF::HashSet.1375" }
%"class.WTF::HashSet.1375" = type { %"class.WTF::HashTable.1376" }
%"class.WTF::HashTable.1376" = type <{ %"class.blink::WeakMember.1378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1378" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1379", %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1332" }
%"class.base::time_internal::TimeBase.1332" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1304", %"class.absl::optional.1309", %"class.absl::optional.1319", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional", %"class.absl::optional.1319", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1319", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional", %"class.absl::optional.1324", i8, %class.scoped_refptr.1330 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.1304" = type { %"class.absl::optional_internal::optional_data.1305" }
%"class.absl::optional_internal::optional_data.1305" = type { %"class.absl::optional_internal::optional_data_base.1306" }
%"class.absl::optional_internal::optional_data_base.1306" = type { %"class.absl::optional_internal::optional_data_dtor_base.1307" }
%"class.absl::optional_internal::optional_data_dtor_base.1307" = type { i8, %union.anon.1308 }
%union.anon.1308 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1309" = type { %"class.absl::optional_internal::optional_data.1310" }
%"class.absl::optional_internal::optional_data.1310" = type { %"class.absl::optional_internal::optional_data_base.1311" }
%"class.absl::optional_internal::optional_data_base.1311" = type { %"class.absl::optional_internal::optional_data_dtor_base.1312" }
%"class.absl::optional_internal::optional_data_dtor_base.1312" = type { i8, %union.anon.1313 }
%union.anon.1313 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.291", %"class.absl::optional.291" }
%"class.absl::optional.1319" = type { %"class.absl::optional_internal::optional_data.1320" }
%"class.absl::optional_internal::optional_data.1320" = type { %"class.absl::optional_internal::optional_data_base.1321" }
%"class.absl::optional_internal::optional_data_base.1321" = type { %"class.absl::optional_internal::optional_data_dtor_base.1322" }
%"class.absl::optional_internal::optional_data_dtor_base.1322" = type { i8, %union.anon.1323 }
%"class.absl::optional.1324" = type { %"class.absl::optional_internal::optional_data.1325" }
%"class.absl::optional_internal::optional_data.1325" = type { %"class.absl::optional_internal::optional_data_base.1326" }
%"class.absl::optional_internal::optional_data_base.1326" = type { %"class.absl::optional_internal::optional_data_dtor_base.1327" }
%"class.absl::optional_internal::optional_data_dtor_base.1327" = type { i8, %union.anon.1328 }
%union.anon.1328 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" }
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1333", %class.scoped_refptr.1347, %class.scoped_refptr.1348, %"struct.blink::CacheControlHeader", %"class.absl::optional.291", %"class.absl::optional.1349", %"class.absl::optional.1349", %"class.absl::optional.1349", i64, %"class.blink::KURL", %"class.WTF::Vector.1354", %"class.WTF::String", %"class.WTF::Vector.466", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional", %"class.WTF::Vector.466", %"class.blink::KURL", %"class.absl::optional.1359" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1333" = type { %"class.absl::optional_internal::optional_data.1334" }
%"class.absl::optional_internal::optional_data.1334" = type { %"class.absl::optional_internal::optional_data_base.1335" }
%"class.absl::optional_internal::optional_data_base.1335" = type { %"class.absl::optional_internal::optional_data_dtor_base.1336" }
%"class.absl::optional_internal::optional_data_dtor_base.1336" = type { i8, %union.anon.1337 }
%union.anon.1337 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.466", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1338", %"class.WTF::Vector.1342" }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1342" = type { %"class.WTF::VectorBuffer.1343" }
%"class.WTF::VectorBuffer.1343" = type { %"class.WTF::VectorBufferBase.1344" }
%"class.WTF::VectorBufferBase.1344" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1347 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1348 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1349" = type { %"class.absl::optional_internal::optional_data.1350" }
%"class.absl::optional_internal::optional_data.1350" = type { %"class.absl::optional_internal::optional_data_base.1351" }
%"class.absl::optional_internal::optional_data_base.1351" = type { %"class.absl::optional_internal::optional_data_dtor_base.1352" }
%"class.absl::optional_internal::optional_data_dtor_base.1352" = type { i8, %union.anon.1353 }
%union.anon.1353 = type { %"class.base::Time" }
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1359" = type { %"class.absl::optional_internal::optional_data.1360" }
%"class.absl::optional_internal::optional_data.1360" = type { %"class.absl::optional_internal::optional_data_base.1361" }
%"class.absl::optional_internal::optional_data_base.1361" = type { %"class.absl::optional_internal::optional_data_dtor_base.1362" }
%"class.absl::optional_internal::optional_data_dtor_base.1362" = type { i8, %union.anon.1363 }
%union.anon.1363 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1391 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1392", i64, %"class.WTF::Vector.1394", %"class.WTF::Vector.1399" }
%"class.WTF::RefCounted.1392" = type { %"class.base::RefCounted.1393" }
%"class.base::RefCounted.1393" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { i8*, i32, i32 }
%"class.WTF::Vector.1399" = type { %"class.WTF::VectorBuffer.1400" }
%"class.WTF::VectorBuffer.1400" = type { %"class.WTF::VectorBufferBase.1401" }
%"class.WTF::VectorBufferBase.1401" = type { %"class.std::__1::unique_ptr.1402"*, i32, i32 }
%"class.std::__1::unique_ptr.1402" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1405" }
%"class.std::__1::__tree.1405" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1406", %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.blink::HeapHashMap.1414" = type { %"class.WTF::HashMap.1417" }
%"class.WTF::HashMap.1417" = type { %"class.WTF::HashTable.1418" }
%"class.WTF::HashTable.1418" = type <{ %"struct.WTF::KeyValuePair.1420"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1420" = type opaque
%"class.blink::HeapVector.1421" = type { %"class.WTF::Vector.1424" }
%"class.WTF::Vector.1424" = type { %"class.WTF::VectorBuffer.1425" }
%"class.WTF::VectorBuffer.1425" = type { %"class.WTF::VectorBufferBase.1426" }
%"class.WTF::VectorBufferBase.1426" = type { %"class.blink::Member.1427"*, i32, i32 }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1431" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1432", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.914, %"class.base::WeakPtrFactory.915" }
%"class.base::WeakPtrFactory.915" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1432" = type { %"class.blink::MemberBase.696" }
%"class.blink::HeapHashMap.1433" = type { %"class.WTF::HashMap.1436" }
%"class.WTF::HashMap.1436" = type { %"class.WTF::HashTable.1437" }
%"class.WTF::HashTable.1437" = type <{ %"struct.WTF::KeyValuePair.1439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1439" = type opaque
%"class.WTF::Vector.1440" = type { %"class.WTF::VectorBuffer.1441" }
%"class.WTF::VectorBuffer.1441" = type { %"class.WTF::VectorBufferBase.1442" }
%"class.WTF::VectorBufferBase.1442" = type { %class.scoped_refptr.1443*, i32, i32 }
%class.scoped_refptr.1443 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1446" = type { %"class.WTF::HashSet.1449" }
%"class.WTF::HashSet.1449" = type { %"class.WTF::HashTable.1450" }
%"class.WTF::HashTable.1450" = type <{ %"class.blink::Member.1389"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { %"class.WTF::HashSet.1455"* }
%"class.WTF::HashSet.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.1238" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1462" }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1466" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.62", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.64, %"class.WTF::Vector.83", %"class.WTF::Vector.83", %"class.blink::Member", %"class.blink::Member.88", %"class.blink::HeapHashSet", %"class.blink::Member.10", %"class.WTF::HashSet.96", %"class.WTF::TextPosition", %"class.blink::Member.100", %"class.blink::HeapVector.102", %"class.blink::Member.109" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.64 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.65", %"class.WTF::Vector.67" }
%"class.WTF::RefCounted.65" = type { %"class.base::RefCounted.66" }
%"class.base::RefCounted.66" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.std::__1::unique_ptr.70"*, i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.73", %"class.WTF::String" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.90" }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.94" }
%"class.WTF::HashTable.94" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.3" }
%"class.WTF::HashSet.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.64, %"class.blink::Member.60", %"class.blink::Member.88" }
%"class.blink::HeapVector.102" = type { %"class.WTF::Vector.105" }
%"class.WTF::Vector.105" = type { %"class.WTF::VectorBuffer.106" }
%"class.WTF::VectorBuffer.106" = type { %"class.WTF::VectorBufferBase.107" }
%"class.WTF::VectorBufferBase.107" = type { %"class.blink::Member.88"*, i32, i32 }
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.713 }
%class.scoped_refptr.713 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.714" = type { %"class.WTF::VectorBuffer.715" }
%"class.WTF::VectorBuffer.715" = type { %"class.WTF::VectorBufferBase.716" }
%"class.WTF::VectorBufferBase.716" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.717 }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.10", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.917" }
%"class.blink::HeapHashMap.917" = type { %"class.WTF::HashMap.920" }
%"class.WTF::HashMap.920" = type { %"class.WTF::HashTable.921" }
%"class.WTF::HashTable.921" = type <{ %"struct.WTF::KeyValuePair.923"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.923" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.926" = type { %"class.WTF::HashSet.929" }
%"class.WTF::HashSet.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"class.blink::WeakMember.932"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.932" = type opaque
%"class.blink::HeapHashSet.933" = type { %"class.WTF::HashSet.936" }
%"class.WTF::HashSet.936" = type { %"class.WTF::HashTable.937" }
%"class.WTF::HashTable.937" = type <{ %"class.blink::WeakMember.939"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.939" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.2", %"class.blink::HeapVector.54" }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.950" = type { %"class.WTF::HashMap.953" }
%"class.WTF::HashMap.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ %"struct.WTF::KeyValuePair.956"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.956" = type opaque
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959" }
%"class.WTF::VectorBufferBase.959" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.25" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.29", %"class.blink::Member.31", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.29" = type { %"class.WTF::SingleThreadedBitField.30" }
%"class.WTF::SingleThreadedBitField.30" = type { i32 }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.34", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.10", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.984", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.914, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::HeapHashSet.984" = type { %"class.WTF::HashSet.987" }
%"class.WTF::HashSet.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"class.blink::Member.976"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.980", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.982", %"class.blink::WeakMember.916", %"class.blink::WeakMember.519", i8, [7 x i8] }>
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.916" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::Document"* }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.972" }
%"class.WTF::Deque.972" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.974" }
%"class.WTF::VectorBuffer.974" = type { %"class.WTF::VectorBufferBase.975" }
%"class.WTF::VectorBufferBase.975" = type { %"class.blink::Member.976"*, i32, i32 }
%"class.blink::HeapVector.990" = type { %"class.WTF::Vector.993" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"class.blink::Member.980"*, i32, i32 }
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1003" = type { %"class.WTF::HashSet.1006" }
%"class.WTF::HashSet.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"class.blink::WeakMember.1009"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1009" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1010", i32, [4 x i8] }>
%"class.WTF::Vector.1010" = type { %"class.WTF::VectorBuffer.1011" }
%"class.WTF::VectorBuffer.1011" = type { %"class.WTF::VectorBufferBase.1012" }
%"class.WTF::VectorBufferBase.1012" = type { %"struct.std::__1::pair.1013"*, i32, i32 }
%"struct.std::__1::pair.1013" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1018" = type { %"class.WTF::VectorBuffer.1019" }
%"class.WTF::VectorBuffer.1019" = type { %"class.WTF::VectorBufferBase.1020" }
%"class.WTF::VectorBufferBase.1020" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Member.22"*, i32, i32 }
%"class.blink::HeapVector.1029" = type { %"class.WTF::Vector.1032" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::Member.1035"*, i32, i32 }
%"class.blink::Member.1035" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.10" }
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1047" = type { %"class.WTF::HashTable.1048" }
%"class.WTF::HashTable.1048" = type <{ %"struct.WTF::KeyValuePair.1051"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1051" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.916", { i64, i64 } }
%"class.blink::HeapHashSet.1060" = type { %"class.WTF::HashSet.1063" }
%"class.WTF::HashSet.1063" = type { %"class.WTF::HashTable.1064" }
%"class.WTF::HashTable.1064" = type <{ %"class.blink::Member.1066"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1066" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type { %"class.blink::Member.10", %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription", %"class.blink::Length", i32, i8, %"class.mojo::AssociatedRemote.1103" }
%"struct.blink::ViewportDescription" = type { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, float, float, i8, i8, i8, i8, %"class.absl::optional.1098" }
%"class.absl::optional.1098" = type { %"class.absl::optional_internal::optional_data.1099" }
%"class.absl::optional_internal::optional_data.1099" = type { %"class.absl::optional_internal::optional_data_base.1100" }
%"class.absl::optional_internal::optional_data_base.1100" = type { %"class.absl::optional_internal::optional_data_dtor_base.1101" }
%"class.absl::optional_internal::optional_data_dtor_base.1101" = type { i8, %union.anon.1102 }
%union.anon.1102 = type { i32 }
%"class.blink::Length" = type <{ %union.anon.1097, i8, i8, i8, i8 }>
%union.anon.1097 = type { i32 }
%"class.mojo::AssociatedRemote.1103" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1104" }
%"class.mojo::internal::AssociatedInterfacePtrState.1104" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1105" }
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.blink::mojom::blink::DisplayCutoutHostProxy"* }
%"class.blink::mojom::blink::DisplayCutoutHostProxy" = type { %"class.blink::mojom::blink::DisplayCutoutHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::DisplayCutoutHost" = type { i32 (...)** }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684" }
%"class.WTF::VectorBufferBase.684" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1113" = type { %"class.WTF::HashMap.1116" }
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type opaque
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1132" = type { %"class.WTF::HashMap.1135" }
%"class.WTF::HashMap.1135" = type { %"class.WTF::HashTable.1136" }
%"class.WTF::HashTable.1136" = type <{ %"struct.WTF::KeyValuePair.1138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1138" = type opaque
%"class.blink::HeapObserverSet.1139" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1140" }
%"class.blink::HeapHashSet.1140" = type { %"class.WTF::HashSet.1143" }
%"class.WTF::HashSet.1143" = type { %"class.WTF::HashTable.1144" }
%"class.WTF::HashTable.1144" = type <{ %"class.blink::WeakMember.1146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1146" = type opaque
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.10", %"class.blink::HeapHashSet.1156", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1163", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1156" = type { %"class.WTF::HashSet.1159" }
%"class.WTF::HashSet.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"class.blink::Member.1162"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1162" = type opaque
%"class.blink::HeapTaskRunnerTimer.1163" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1164", { i64, i64 } }
%"class.blink::WeakMember.1164" = type { %"class.blink::MemberBase.1150" }
%"class.blink::WeakMember.1151" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1510", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1518", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1526", %"class.blink::FrameLoader", %"class.blink::Member.1543", %"class.blink::Member.22", %"class.blink::Member.1545", %"class.blink::Member.1547", %"class.blink::Member.1549", %"class.blink::Member.1551", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1555", %class.scoped_refptr.1557, %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::Member.1562", %"class.blink::Member.1564", %"class.blink::Member.1566", %"class.blink::Member.1568", %"class.blink::Member.1570", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1572", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1575", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1597", %"class.std::__1::unique_ptr.1598", %"class.absl::optional", i32, [4 x i8], %"class.std::__1::unique_ptr.1604", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1612", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1617", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1622", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1625", %"class.blink::Member.1627", %"class.blink::Member.1629", %"class.blink::Member.1631", %"class.mojo::StructPtr.1634", %"class.blink::Member.1642", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1644", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1510" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1511" }
%"class.blink::HeapHashMap.1511" = type { %"class.WTF::HashMap.1514" }
%"class.WTF::HashMap.1514" = type { %"class.WTF::HashTable.1515" }
%"class.WTF::HashTable.1515" = type <{ %"struct.WTF::KeyValuePair.1517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1517" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1518" = type { %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1524" }
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.289", %"class.base::RepeatingCallback.2195", i64, %"class.std::__1::map.2196", i8*, i64, %"class.base::WeakPtrFactory.2205" }
%"class.base::RepeatingCallback.2195" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2196" = type { %"class.std::__1::__tree.2197" }
%"class.std::__1::__tree.2197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2198", %"class.std::__1::__compressed_pair.2202" }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.2202" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.base::WeakPtrFactory.2205" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1526" = type { %"class.WTF::HashSet.1529" }
%"class.WTF::HashSet.1529" = type { %"class.WTF::HashTable.1530" }
%"class.WTF::HashTable.1530" = type <{ %"class.blink::WeakMember.1532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1532" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.660", %"class.blink::Member.1533", %"class.blink::Member.1535", %"class.std::__1::unique_ptr.1537", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1455" }
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1537" = type { %"class.std::__1::__compressed_pair.1538" }
%"class.std::__1::__compressed_pair.1538" = type { %"struct.std::__1::__compressed_pair_elem.1539" }
%"struct.std::__1::__compressed_pair_elem.1539" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1651", %"class.blink::Member.660", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1656", i8, i32, %"class.blink::Color", %"class.absl::optional.1658", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1663", %"class.blink::Member.1665", %"class.blink::Member.1665", %"class.std::__1::unique_ptr.1668", i32, [4 x i8], %"class.WTF::HashSet.1671", %"class.blink::Member.1678", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1680", %"class.blink::HeapHashSet.1687", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1695", i8, %"class.blink::Member.1701", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1713", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1727", i8, %"class.std::__1::unique_ptr.1733", %"class.std::__1::unique_ptr.1850", %"class.WTF::Vector.1856", i32, %class.scoped_refptr.1861, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1862", %"class.blink::Member.1864", %"class.blink::Member.1866", %"class.blink::HeapHashSet.1868", %"class.blink::HeapHashSet.1875", %"class.std::__1::unique_ptr.1882", %"class.std::__1::unique_ptr.1888", %"class.WTF::Vector.119" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1651" = type { %"class.WTF::HashTable.1652" }
%"class.WTF::HashTable.1652" = type <{ %class.scoped_refptr.1655*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1655 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1656" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1657", { i64, i64 } }
%"class.blink::WeakMember.1657" = type { %"class.blink::MemberBase.1544" }
%"class.absl::optional.1658" = type { %"class.absl::optional_internal::optional_data.1659" }
%"class.absl::optional_internal::optional_data.1659" = type { %"class.absl::optional_internal::optional_data_base.1660" }
%"class.absl::optional_internal::optional_data_base.1660" = type { %"class.absl::optional_internal::optional_data_dtor_base.1661" }
%"class.absl::optional_internal::optional_data_dtor_base.1661" = type { i8, %union.anon.1662 }
%union.anon.1662 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::HeapHashSet.1667"* }
%"class.blink::HeapHashSet.1667" = type opaque
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.WTF::HashSet.1671"* }
%"class.WTF::HashSet.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1680" = type { %"class.WTF::HashSet.1683" }
%"class.WTF::HashSet.1683" = type { %"class.WTF::HashTable.1684" }
%"class.WTF::HashTable.1684" = type <{ %"class.blink::Member.1686"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1686" = type opaque
%"class.blink::HeapHashSet.1687" = type { %"class.WTF::HashSet.1690" }
%"class.WTF::HashSet.1690" = type { %"class.WTF::HashTable.1691" }
%"class.WTF::HashTable.1691" = type <{ %"class.blink::Member.1693"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1917", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1928", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.22" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1919", %"class.blink::Member.1920", %"class.blink::Member.1922", %"class.blink::Member.1924", %"class.blink::Member.1926", %"class.WTF::Vector.119", i16, %class.scoped_refptr.914 }
%"class.blink::ThreadState::PrefinalizerRegistration.1919" = type { i8 }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1928" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1929", { i64, i64 } }
%"class.blink::WeakMember.1929" = type { %"class.blink::MemberBase.1694" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1705", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1705" = type { %"class.WTF::HashTable.1706" }
%"class.WTF::HashTable.1706" = type <{ %"struct.WTF::KeyValuePair.1708"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1708" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1709", i32, i32 }
%"class.WTF::Vector.1709" = type { %"class.WTF::VectorBuffer.1710" }
%"class.WTF::VectorBuffer.1710" = type { %"class.WTF::VectorBufferBase.1711" }
%"class.WTF::VectorBufferBase.1711" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1713" = type { %"class.WTF::LinkedHashSet.1716" }
%"class.WTF::LinkedHashSet.1716" = type { %"class.WTF::HashMap.1717", %"class.WTF::VectorBackedLinkedList.1721" }
%"class.WTF::HashMap.1717" = type { %"class.WTF::HashTable.1718" }
%"class.WTF::HashTable.1718" = type <{ %"struct.WTF::KeyValuePair.1720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1720" = type opaque
%"class.WTF::VectorBackedLinkedList.1721" = type { %"class.WTF::Vector.1722", i32, i32 }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %"class.WTF::VectorBackedLinkedListNode.1725"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1725" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1727" = type { %"class.std::__1::__compressed_pair.1728" }
%"class.std::__1::__compressed_pair.1728" = type { %"struct.std::__1::__compressed_pair_elem.1729" }
%"struct.std::__1::__compressed_pair_elem.1729" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1736, %class.scoped_refptr.1736, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1827", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1832", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1736 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1737", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1744" }
%"class.WTF::RefCounted.1737" = type { %"class.base::RefCounted.1738" }
%"class.base::RefCounted.1738" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1739", i32, [4 x i8] }>
%"class.WTF::Vector.1739" = type { %"class.WTF::VectorBuffer.1740" }
%"class.WTF::VectorBuffer.1740" = type { %"class.WTF::VectorBufferBase.1741" }
%"class.WTF::VectorBufferBase.1741" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1744" = type { %"class.WTF::VectorBuffer.1745" }
%"class.WTF::VectorBuffer.1745" = type { %"class.WTF::VectorBufferBase.1746" }
%"class.WTF::VectorBufferBase.1746" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1750", %"class.std::__1::unique_ptr.1799", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1747, %class.scoped_refptr.1748, %class.scoped_refptr.1749 }
%class.scoped_refptr.1747 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1763", i8, i8, %class.scoped_refptr.1747, i32, i32 }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1748 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1912" }
%"class.blink::PaintPropertyNode.1912" = type { %"class.WTF::RefCounted.1913", i8, i8, %class.scoped_refptr.1748, i32, i32 }
%"class.WTF::RefCounted.1913" = type { %"class.base::RefCounted.1914" }
%"class.base::RefCounted.1914" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1749 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1909" }
%"class.blink::PaintPropertyNode.1909" = type { %"class.WTF::RefCounted.1910", i8, i8, %class.scoped_refptr.1749, i32, i32 }
%"class.WTF::RefCounted.1910" = type { %"class.base::RefCounted.1911" }
%"class.base::RefCounted.1911" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1750" = type { %"class.std::__1::__compressed_pair.1751" }
%"class.std::__1::__compressed_pair.1751" = type { %"struct.std::__1::__compressed_pair_elem.1752" }
%"struct.std::__1::__compressed_pair_elem.1752" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1753", %"class.WTF::Vector.1758", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1758" = type { %"class.WTF::VectorBuffer.1759" }
%"class.WTF::VectorBuffer.1759" = type { %"class.WTF::VectorBufferBase.1760" }
%"class.WTF::VectorBufferBase.1760" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1778" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1771, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1772", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1765" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1765" = type { %"class.std::__1::__compressed_pair.1766" }
%"class.std::__1::__compressed_pair.1766" = type { %"struct.std::__1::__compressed_pair_elem.1767" }
%"struct.std::__1::__compressed_pair_elem.1767" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1771 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1894", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1894" = type { %"class.WTF::RefCounted.1895", i8, i8, %class.scoped_refptr.1771, i32, i32 }
%"class.WTF::RefCounted.1895" = type { %"class.base::RefCounted.1896" }
%"class.base::RefCounted.1896" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1897" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1897" = type { %"class.absl::optional_internal::optional_data.1898" }
%"class.absl::optional_internal::optional_data.1898" = type { %"class.absl::optional_internal::optional_data_base.1899" }
%"class.absl::optional_internal::optional_data_base.1899" = type { %"class.absl::optional_internal::optional_data_dtor_base.1900" }
%"class.absl::optional_internal::optional_data_dtor_base.1900" = type { i8, %union.anon.1901 }
%union.anon.1901 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1902", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1902" = type { %"class.std::__1::__vector_base.1903" }
%"class.std::__1::__vector_base.1903" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1904" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1781", %"class.std::__1::unique_ptr.1787", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1787" = type { %"class.std::__1::__compressed_pair.1788" }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.1789" }
%"struct.std::__1::__compressed_pair_elem.1789" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1802", %"class.absl::optional.1802" }
%"class.absl::optional.1802" = type { %"class.absl::optional_internal::optional_data.1803" }
%"class.absl::optional_internal::optional_data.1803" = type { %"class.absl::optional_internal::optional_data_base.1804" }
%"class.absl::optional_internal::optional_data_base.1804" = type { %"class.absl::optional_internal::optional_data_dtor_base.1805" }
%"class.absl::optional_internal::optional_data_dtor_base.1805" = type { i8, [3 x i8], %union.anon.1806 }
%union.anon.1806 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1744"*, %"class.absl::optional.1812", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1812" = type { %"class.absl::optional_internal::optional_data.1813" }
%"class.absl::optional_internal::optional_data.1813" = type { %"class.absl::optional_internal::optional_data_base.1814" }
%"class.absl::optional_internal::optional_data_base.1814" = type { %"class.absl::optional_internal::optional_data_dtor_base.1815" }
%"class.absl::optional_internal::optional_data_dtor_base.1815" = type { i8, %union.anon.1816 }
%union.anon.1816 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1817", %"class.WTF::Vector.1822" }
%"class.WTF::Vector.1817" = type { %"class.WTF::VectorBuffer.1818" }
%"class.WTF::VectorBuffer.1818" = type { %"class.WTF::VectorBufferBase.1819", [128 x i8] }
%"class.WTF::VectorBufferBase.1819" = type { i32*, i32, i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824", [128 x i8] }
%"class.WTF::VectorBufferBase.1824" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829" }
%"class.WTF::VectorBufferBase.1829" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"struct.WTF::KeyValuePair.1836"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1836" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1837", %"class.WTF::Vector.1842" }
%"class.WTF::HashMap.1837" = type { %"class.WTF::HashTable.1838" }
%"class.WTF::HashTable.1838" = type <{ %"struct.WTF::KeyValuePair.1841"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1841" = type opaque
%"class.WTF::Vector.1842" = type { %"class.WTF::VectorBuffer.1843" }
%"class.WTF::VectorBuffer.1843" = type { %"class.WTF::VectorBufferBase.1844" }
%"class.WTF::VectorBufferBase.1844" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1850" = type { %"class.std::__1::__compressed_pair.1851" }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1856" = type { %"class.WTF::VectorBuffer.1857" }
%"class.WTF::VectorBuffer.1857" = type { %"class.WTF::VectorBufferBase.1858" }
%"class.WTF::VectorBufferBase.1858" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1861 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1864" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1868" = type { %"class.WTF::HashSet.1871" }
%"class.WTF::HashSet.1871" = type { %"class.WTF::HashTable.1872" }
%"class.WTF::HashTable.1872" = type <{ %"class.blink::WeakMember.1874"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1874" = type opaque
%"class.blink::HeapHashSet.1875" = type { %"class.WTF::HashSet.1878" }
%"class.WTF::HashSet.1878" = type { %"class.WTF::HashTable.1879" }
%"class.WTF::HashTable.1879" = type <{ %"class.blink::WeakMember.1881"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1881" = type opaque
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1888" = type { %"class.std::__1::__compressed_pair.1889" }
%"class.std::__1::__compressed_pair.1889" = type { %"struct.std::__1::__compressed_pair_elem.1890" }
%"struct.std::__1::__compressed_pair_elem.1890" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1349", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type { %"class.blink::Member.660" }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1557 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1572" = type { %"class.blink::Member.1573" }
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2208" }
%"class.mojo::Remote.2208" = type { %"class.mojo::internal::InterfacePtrState.2209" }
%"class.mojo::internal::InterfacePtrState.2209" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2210" }
%"class.std::__1::unique_ptr.2210" = type { %"class.std::__1::__compressed_pair.2211" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.2212" }
%"struct.std::__1::__compressed_pair_elem.2212" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1575" = type { %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.1577" }
%"struct.std::__1::__compressed_pair_elem.1577" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1578, %"class.blink::WebVector.1580", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1578 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1579", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1579" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1580" = type { %"class.std::__1::vector.1581" }
%"class.std::__1::vector.1581" = type { %"class.std::__1::__vector_base.1582" }
%"class.std::__1::__vector_base.1582" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1583" }
%"class.std::__1::__compressed_pair.1583" = type { %"struct.std::__1::__compressed_pair_elem.1584" }
%"struct.std::__1::__compressed_pair_elem.1584" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1588, i8, [7 x i8] }>
%class.scoped_refptr.1588 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1589", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1589" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1590" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1590" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"class.base::RepeatingCallback.1597" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1610" }
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2218" }
%"class.mojo::AssociatedRemote.2218" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2219" }
%"class.mojo::internal::AssociatedInterfacePtrState.2219" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2220" }
%"class.std::__1::unique_ptr.2220" = type { %"class.std::__1::__compressed_pair.2221" }
%"class.std::__1::__compressed_pair.2221" = type { %"struct.std::__1::__compressed_pair_elem.2222" }
%"struct.std::__1::__compressed_pair_elem.2222" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1612" = type { %"class.blink::Member.1613" }
%"class.blink::Member.1613" = type { %"class.blink::MemberBase.1614" }
%"class.blink::MemberBase.1614" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2228" }
%"class.mojo::AssociatedRemote.2228" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2229" }
%"class.mojo::internal::AssociatedInterfacePtrState.2229" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2230" }
%"class.std::__1::unique_ptr.2230" = type { %"class.std::__1::__compressed_pair.2231" }
%"class.std::__1::__compressed_pair.2231" = type { %"struct.std::__1::__compressed_pair_elem.2232" }
%"struct.std::__1::__compressed_pair_elem.2232" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1615" }
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2238", %"class.blink::Member.660", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2238" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2239" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.286" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2239" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1617" = type { %"class.blink::Member.1618" }
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2242", %"class.blink::Member.660", %"class.mojo::AssociatedReceiver.2243" }
%"class.blink::ThreadState::PrefinalizerRegistration.2242" = type { i8 }
%"class.mojo::AssociatedReceiver.2243" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2244" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2244" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1620" }
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2247", %"class.blink::Member.660", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2247" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.163, %"class.std::__1::unique_ptr.286", %"class.base::WeakPtrFactory.2248" }
%"class.base::WeakPtrFactory.2248" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1622" = type { %"class.blink::Member.1623" }
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2251", %"class.blink::Member.660", %"class.mojo::AssociatedReceiver.2252" }
%"class.blink::ThreadState::PrefinalizerRegistration.2251" = type { i8 }
%"class.mojo::AssociatedReceiver.2252" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2253" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2253" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::HeapHashMap.1633"* }
%"class.blink::HeapHashMap.1633" = type opaque
%"class.mojo::StructPtr.1634" = type { %"class.std::__1::unique_ptr.1635" }
%"class.std::__1::unique_ptr.1635" = type { %"class.std::__1::__compressed_pair.1636" }
%"class.std::__1::__compressed_pair.1636" = type { %"struct.std::__1::__compressed_pair_elem.1637" }
%"struct.std::__1::__compressed_pair_elem.1637" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1638", %"class.mojo::InlinedStructPtr.1244" }
%"class.mojo::InlinedStructPtr.1638" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1644" = type { %"class.absl::optional_internal::optional_data.1645" }
%"class.absl::optional_internal::optional_data.1645" = type { %"class.absl::optional_internal::optional_data_base.1646" }
%"class.absl::optional_internal::optional_data_base.1646" = type { %"class.absl::optional_internal::optional_data_dtor_base.1647" }
%"class.absl::optional_internal::optional_data_dtor_base.1647" = type { i8, %union.anon.1648 }
%union.anon.1648 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1931" }
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::Settings"* }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1937", %"class.WTF::HashMap.1937", %"class.WTF::HashMap.1937", %"class.WTF::HashMap.1937", %"class.WTF::HashMap.1937", %"class.WTF::HashMap.1937", %"class.WTF::HashMap.1937", %"class.std::__1::unique_ptr.1942" }
%"class.WTF::HashMap.1937" = type { %"class.WTF::HashTable.1938" }
%"class.WTF::HashTable.1938" = type <{ %"struct.WTF::KeyValuePair.1941"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1941" = type opaque
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.WTF::Vector.1945"* }
%"class.WTF::Vector.1945" = type opaque
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1951", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1963", %"class.WTF::Vector.1964" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1954", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1963" = type { %"class.blink::MemberBase.661" }
%"class.WTF::Vector.1964" = type { %"class.WTF::VectorBuffer.1965" }
%"class.WTF::VectorBuffer.1965" = type { %"class.WTF::VectorBufferBase.1819" }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2285" = type { %"class.WTF::StringTypeAdapter.2286" }
%"class.WTF::StringTypeAdapter.2286" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.1968" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.WTF::StringAppend.1978" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.blink::MediaValues" = type { i32 (...)** }
%"struct.blink::PageScaleConstraints" = type { %"class.blink::FloatSize", float, float, float }
%"class.blink::SizesAttributeParser" = type <{ %class.scoped_refptr.64, %"class.blink::MediaValues"*, %"class.blink::ExecutionContext"*, float, i8, i8, [2 x i8] }>
%"class.blink::ImageCandidate" = type <{ %"class.WTF::String", %"class.WTF::StringView", float, i32, i32, [4 x i8] }>
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.2274", i8, [7 x i8] }>
%"class.blink::Member.2274" = type { %"class.blink::MemberBase.2275" }
%"class.blink::MemberBase.2275" = type { %"class.blink::MediaValues"* }
%"class.blink::ImageResource" = type <{ %"class.blink::Resource", %"class.blink::MultipartImageResourceParser::Client", %"class.blink::Member.2051", %"class.blink::Member.2074", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::MultipartImageResourceParser::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2051" = type { %"class.blink::MemberBase.2052" }
%"class.blink::MemberBase.2052" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.2055", float, i8, %class.scoped_refptr.2057, %"class.WTF::HashCountedSet.2068", %"class.WTF::HashCountedSet.2068" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.2057 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.2058", i8, %class.scoped_refptr.1391, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.2062" }
%"class.WTF::ThreadSafeRefCounted.2058" = type { %"class.base::RefCountedThreadSafe.2059" }
%"class.base::RefCountedThreadSafe.2059" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.2060" }
%"class.blink::PersistentBase.2060" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.2061" }
%"class.blink::PersistentNodePtr.2061" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2062" = type { %"class.std::__1::__compressed_pair.2063" }
%"class.std::__1::__compressed_pair.2063" = type { %"struct.std::__1::__compressed_pair_elem.2064" }
%"struct.std::__1::__compressed_pair_elem.2064" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet.2068" = type { %"class.WTF::HashMap.2069" }
%"class.WTF::HashMap.2069" = type { %"class.WTF::HashTable.2070" }
%"class.WTF::HashTable.2070" = type <{ %"struct.WTF::KeyValuePair.2073"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2073" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::MultipartImageResourceParser"* }
%"class.blink::MultipartImageResourceParser" = type <{ %"class.blink::ResourceResponse", %"class.WTF::Vector.1394", %"class.blink::Member.2078", %"class.WTF::Vector.1394", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::MultipartImageResourceParser::Client"* }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.2128", i32, i32, %"class.blink::Member.2150", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.2080" }
%"class.std::__1::unique_ptr.2080" = type { %"class.std::__1::__compressed_pair.2081" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.2082" }
%"struct.std::__1::__compressed_pair_elem.2082" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.2083", i32, %"class.WTF::Vector.1394", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2089" }
%"class.std::__1::unique_ptr.2083" = type { %"class.std::__1::__compressed_pair.2084" }
%"class.std::__1::__compressed_pair.2084" = type { %"struct.std::__1::__compressed_pair_elem.2085" }
%"struct.std::__1::__compressed_pair_elem.2085" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2089" = type { %"class.std::__1::__compressed_pair.2090" }
%"class.std::__1::__compressed_pair.2090" = type { %"struct.std::__1::__compressed_pair_elem.2091" }
%"struct.std::__1::__compressed_pair_elem.2091" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::ParkableString" = type { %class.scoped_refptr.2098 }
%class.scoped_refptr.2098 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2099", %"class.WTF::String", %"class.std::__1::unique_ptr.2101" }
%"class.WTF::RefCounted.2099" = type { %"class.base::RefCounted.2100" }
%"class.base::RefCounted.2100" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2101" = type { %"class.std::__1::__compressed_pair.2102" }
%"class.std::__1::__compressed_pair.2102" = type { %"struct.std::__1::__compressed_pair_elem.2103" }
%"struct.std::__1::__compressed_pair_elem.2103" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2104", %"class.std::__1::unique_ptr.2115", %"class.WTF::Vector.2121", i8, i32 }
%"class.std::__1::unique_ptr.2104" = type { %"class.std::__1::__compressed_pair.2105" }
%"class.std::__1::__compressed_pair.2105" = type { %"struct.std::__1::__compressed_pair_elem.2106" }
%"struct.std::__1::__compressed_pair_elem.2106" = type { %"class.WTF::Vector.2107"* }
%"class.WTF::Vector.2107" = type { %"class.WTF::VectorBuffer.2108" }
%"class.WTF::VectorBuffer.2108" = type { %"class.WTF::VectorBufferBase.2109" }
%"class.WTF::VectorBufferBase.2109" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2115" = type { %"class.std::__1::__compressed_pair.2116" }
%"class.std::__1::__compressed_pair.2116" = type { %"struct.std::__1::__compressed_pair_elem.2117" }
%"struct.std::__1::__compressed_pair_elem.2117" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2121" = type { %"class.WTF::VectorBuffer.2122" }
%"class.WTF::VectorBuffer.2122" = type { %"class.WTF::VectorBufferBase.2109", [32 x i8] }
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration.2132", i32, %"class.blink::Member.2133", %"class.blink::Member.2135", %"class.mojo::ScopedHandleBase.2137", %"class.std::__1::unique_ptr.190", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.2138", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.914 }
%"class.blink::ThreadState::PrefinalizerRegistration.2132" = type { i8 }
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::ScriptResource"* }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.2137" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.2138" = type { %"class.std::__1::__compressed_pair.2139" }
%"class.std::__1::__compressed_pair.2139" = type { %"struct.std::__1::__compressed_pair_elem.2140" }
%"struct.std::__1::__compressed_pair_elem.2140" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.2141" }
%"class.std::__1::unique_ptr.2141" = type { %"class.std::__1::__compressed_pair.2142" }
%"class.std::__1::__compressed_pair.2142" = type { %"struct.std::__1::__compressed_pair_elem.2143" }
%"struct.std::__1::__compressed_pair_elem.2143" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.blink::CSSStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String", %"class.blink::Member.62" }
%"class.blink::FontResource" = type { %"class.blink::Resource", %class.scoped_refptr.2153, %"class.WTF::String", i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapHashSet.2154" }
%class.scoped_refptr.2153 = type { %"class.blink::FontCustomPlatformData"* }
%"class.blink::FontCustomPlatformData" = type opaque
%"class.blink::HeapHashSet.2154" = type { %"class.WTF::HashSet.2157" }
%"class.WTF::HashSet.2157" = type { %"class.WTF::HashTable.2158" }
%"class.WTF::HashTable.2158" = type <{ %"class.blink::WeakMember.2160"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2160" = type opaque
%"class.blink::FontResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2152", [7 x i8], %"class.blink::Member.1427", i8 }>
%"class.blink::RawResource" = type <{ %"class.blink::Resource", %class.scoped_refptr.2161, %"class.blink::Member.2165", i8, [7 x i8] }>
%class.scoped_refptr.2161 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.2162", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.2164", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.2162" = type { %"class.base::RefCountedThreadSafe.2163" }
%"class.base::RefCountedThreadSafe.2163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.2164" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::BufferingBytesConsumer"* }
%"class.blink::BufferingBytesConsumer" = type opaque
%"class.blink::RawResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::SingleModuleClient" = type { %"class.blink::NameClient" }
%"class.blink::Persistent.2033" = type { %"class.blink::PersistentBase.2034" }
%"class.blink::PersistentBase.2034" = type { %"class.blink::SingleModuleClient"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ModuleScriptFetchRequest" = type { %"class.blink::KURL", i32, i32, i32, [4 x i8], %"class.blink::ScriptFetchOptions", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1380", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1379", [6 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1983, %"class.blink::Member.1984", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2031" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.1983 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.1988", %"class.blink::HeapHashMap.1997", %"class.std::__1::unique_ptr.2007", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.2019", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.2022" }
%"class.blink::HeapHashMap.1988" = type { %"class.WTF::HashMap.1991" }
%"class.WTF::HashMap.1991" = type { %"class.WTF::HashTable.1992" }
%"class.WTF::HashTable.1992" = type <{ %"struct.WTF::KeyValuePair.1994"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1994" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.1997" = type { %"class.WTF::HashMap.2000" }
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2003" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.2004" }
%"class.blink::TraceWrapperV8Reference.2004" = type { %"class.v8::TracedReference.2005" }
%"class.v8::TracedReference.2005" = type { %"class.v8::BasicTracedReference.2006" }
%"class.v8::BasicTracedReference.2006" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.2010" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.2010" = type { %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.2019" = type { %"class.v8::Persistent.2020" }
%"class.v8::Persistent.2020" = type { %"class.v8::PersistentBase.2021" }
%"class.v8::PersistentBase.2021" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.2022" = type { %"class.WTF::HashMap.2025" }
%"class.WTF::HashMap.2025" = type { %"class.WTF::HashTable.2026" }
%"class.WTF::HashTable.2026" = type <{ %"struct.WTF::KeyValuePair.2028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2028" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2029" }
%"class.blink::Persistent.2029" = type { %"class.blink::PersistentBase.2030" }
%"class.blink::PersistentBase.2030" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2031" = type { %"class.base::StrongAlias.2032" }
%"class.base::StrongAlias.2032" = type { %"class.base::UnguessableToken" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2304" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2033" }
%"class.std::__1::__tuple_leaf.2304" = type { i8* }
%"class.blink::LinkHeaderSet" = type { %"class.WTF::Vector.2046" }
%"class.WTF::Vector.2046" = type { %"class.WTF::VectorBuffer.2047" }
%"class.WTF::VectorBuffer.2047" = type { %"class.WTF::VectorBufferBase.2048" }
%"class.WTF::VectorBufferBase.2048" = type { %"class.blink::LinkHeader"*, i32, i32 }
%"class.blink::LinkHeader" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1319", i8, [7 x i8] }>
%"class.blink::AlternateSignedExchangeResourceInfo" = type { %"class.WTF::HashMap.2038" }
%"class.WTF::HashMap.2038" = type { %"class.WTF::HashTable.2039" }
%"class.WTF::HashTable.2039" = type <{ %"struct.WTF::KeyValuePair.2042"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2042" = type { %"class.blink::KURL", %"class.WTF::Vector.2261" }
%"class.WTF::Vector.2261" = type { %"class.WTF::VectorBuffer.2262" }
%"class.WTF::VectorBuffer.2262" = type { %"class.WTF::VectorBufferBase.2263" }
%"class.WTF::VectorBufferBase.2263" = type { %"class.std::__1::unique_ptr.2264"*, i32, i32 }
%"class.std::__1::unique_ptr.2264" = type { %"class.std::__1::__compressed_pair.2267" }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.2268" }
%"struct.std::__1::__compressed_pair_elem.2268" = type { %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* }
%"class.blink::AlternateSignedExchangeResourceInfo::Entry" = type { %"class.blink::KURL", %"class.blink::KURL", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::NavigatorLanguage" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.519", %"class.WTF::Vector.466", i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ModuleScript" = type opaque

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev = comdat any

$_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE = comdat any

$_ZN5blink18ScriptFetchOptionsD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink18LinkLoadParametersD2Ev = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink10LinkHeaderD2Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA45_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EEDnEEC2IS7_JS9_DnEEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EEDnEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESB_EEEEEPS1_DpOT_ = comdat any

$_ZN5blink35AlternateSignedExchangeResourceInfoD2Ev = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [28 x i8] c"DNS prefetch triggered for \00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Preconnect triggered for \00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"Preconnect CORS setting is \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"use-credentials\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"track\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"fetch\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"<link rel=preload> has an invalid `href` value\00", align 1
@.str.12 = private unnamed_addr constant [50 x i8] c"<link rel=preload> uses an unsupported `as` value\00", align 1
@.str.13 = private unnamed_addr constant [48 x i8] c"<link rel=preload> must have a valid `as` value\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"<link rel=preload> has an unsupported `type` value\00", align 1
@_ZN5blink26fetch_initiator_type_names5kLinkE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.15 = private unnamed_addr constant [165 x i8] c"The `integrity` attribute is currently ignored for preload destinations that do not support subresource integrity. See https://crbug.com/981419 for more information\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"Preload triggered for \00", align 1
@.str.17 = private unnamed_addr constant [45 x i8] c"<link rel=modulepreload> has no `href` value\00", align 1
@.str.18 = private unnamed_addr constant [52 x i8] c"<link rel=modulepreload> has an invalid `as` value \00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"ModulePreloadIfNeeded\00", align 1
@.str.20 = private unnamed_addr constant [63 x i8] c"../../third_party/blink/renderer/core/loader/preload_helper.cc\00", align 1
@.str.21 = private unnamed_addr constant [54 x i8] c"<link rel=modulepreload> has an invalid `href` value \00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"Module preload triggered for \00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"document\00", align 1
@_ZN5blink8features23kPrefetchPrivacyChangesE = external global %"struct.base::Feature", align 8
@__const._ZN5blink13PreloadHelper16PrefetchIfNeededERKNS_18LinkLoadParametersERNS_8DocumentE.link_fetch_params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1379", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, [6 x i8], %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.167" { %"struct.std::__1::__compressed_pair_elem.168" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.169 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.167" { %"struct.std::__1::__compressed_pair_elem.168" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.169 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.374 } } } } { { { { i8, [7 x i8], %union.anon.374 } } } { { { i8, [7 x i8], %union.anon.374 } } { { i8, [7 x i8], %union.anon.374 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.374 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.375 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.375 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.375 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.1287" { %"class.WTF::HashTable.1288" <{ %"struct.WTF::KeyValuePair.1291"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1291"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.1292 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.1314" { %"class.WTF::VectorBuffer.1315" { %"class.WTF::VectorBufferBase.1316" { %class.scoped_refptr.375* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.375*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.466" { %"class.WTF::VectorBuffer.467" { %"class.WTF::VectorBufferBase.468" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } } { { { { i8, [7 x i8], %union.anon.1323 } } } { { { i8, [7 x i8], %union.anon.1323 } } { { i8, [7 x i8], %union.anon.1323 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1323 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.295 } } } } { { { { i8, [7 x i8], %union.anon.295 } } } { { { i8, [7 x i8], %union.anon.295 } } { { i8, [7 x i8], %union.anon.295 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.295 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } { { { { i8, [7 x i8], %union.anon.295 } } } { { { i8, [7 x i8], %union.anon.295 } } { { i8, [7 x i8], %union.anon.295 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.295 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } } { { { { i8, [7 x i8], %union.anon.1323 } } } { { { i8, [7 x i8], %union.anon.1323 } } { { i8, [7 x i8], %union.anon.1323 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1323 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.1323 } } } } { { { { i8, [7 x i8], %union.anon.1323 } } } { { { i8, [7 x i8], %union.anon.1323 } } { { i8, [7 x i8], %union.anon.1323 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1323 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote.1329" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.1330 { %"class.base::RefCountedData.1331"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1331"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.1976 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.1977" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1379", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, [6 x i8], %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias.1379" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.1380" { %"class.WTF::HashTable.1381" <{ %"struct.std::__1::pair.1384"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1384"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.717 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.1385 { %"class.base::RefCountedData.1386"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1386"*) }, %class.scoped_refptr.1387 { %"class.base::RefCountedData.1388"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1388"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@.str.24 = private unnamed_addr constant [9 x i8] c"prefetch\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.25 = private unnamed_addr constant [6 x i8] c"audio\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"audioworklet\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"embed\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"manifest\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"paintworklet\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"report\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"sharedworker\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"video\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"worker\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"xslt\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.37 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::IntegrityAlgorithm>]\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase58is_signed_exchange_prefetch_cache_for_navigations_enabled_E = external local_unnamed_addr global i8, align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.40 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.43 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.44 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13PreloadHelper19DnsPrefetchIfNeededERKNS_18LinkLoadParametersEPNS_8DocumentEPNS_10LocalFrameENS0_10LinkCallerE(%"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.blink::Document"*, %"class.blink::LocalFrame"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 0, i32 1
  %10 = load i16, i16* %9, align 4
  %11 = and i16 %10, 4
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %190, label %13

13:                                               ; preds = %4
  %14 = icmp eq %"class.blink::Document"* %1, null
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %16 = icmp eq %"class.blink::UseCounter"* %15, null
  %17 = or i1 %14, %16
  br i1 %17, label %30, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::UseCounter"* %15 to void (%"class.blink::UseCounter"*, i32)***
  %20 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, i64 3
  %22 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, align 8
  tail call void %22(%"class.blink::UseCounter"* nonnull %15, i32 899) #10
  %23 = icmp ne i32 %3, 0
  %24 = or i1 %23, %17
  br i1 %24, label %30, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::UseCounter"* %15 to void (%"class.blink::UseCounter"*, i32)***
  %27 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %27, i64 3
  %29 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, align 8
  tail call void %29(%"class.blink::UseCounter"* nonnull %15, i32 902) #10
  br label %30

30:                                               ; preds = %13, %18, %25
  %31 = icmp eq %"class.blink::LocalFrame"* %2, null
  br i1 %31, label %190, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0
  %34 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %33) #10
  %35 = icmp eq %"class.blink::Settings"* %34, null
  br i1 %35, label %190, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %34, i64 0, i32 71
  %38 = bitcast [14 x i8]* %37 to i112*
  %39 = load i112, i112* %38, align 8
  %40 = and i112 %39, 268435456
  %41 = icmp eq i112 %40, 0
  br i1 %41, label %190, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  %44 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %43) #10
  br i1 %44, label %45, label %190

45:                                               ; preds = %42
  %46 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %43) #10
  br i1 %46, label %190, label %47

47:                                               ; preds = %45
  %48 = load i112, i112* %38, align 8
  %49 = and i112 %48, 2251799813685248
  %50 = icmp eq i112 %49, 0
  br i1 %50, label %162, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  %53 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #10
  %54 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %43) #10
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %99, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %73

63:                                               ; preds = %56
  %64 = zext i32 %62 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #10
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %63
  tail call void @llvm.trap() #10
  unreachable

71:                                               ; preds = %63
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %61, align 4
  br label %73

73:                                               ; preds = %71, %56
  %74 = phi i32 [ %72, %71 ], [ %62, %56 ]
  %75 = load atomic i32, i32* %57 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %88

78:                                               ; preds = %73
  %79 = zext i32 %74 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #10
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %78
  tail call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %61, align 4
  br label %88

88:                                               ; preds = %86, %73
  %89 = phi i32 [ %87, %86 ], [ %74, %73 ]
  %90 = load atomic i32, i32* %57 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = add i32 %89, -1
  store i32 %94, i32* %61, align 4
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi i32 [ %94, %93 ], [ %89, %88 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #10
  br label %99

99:                                               ; preds = %51, %95, %98
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %101, align 8
  %102 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  %104 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %105 = bitcast i8* %104 to %"class.blink::ConsoleMessage"*
  %106 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %105, i32 8, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::SourceLocation"* %106) #10
  %107 = getelementptr inbounds i8, i8* %104, i64 -4
  %108 = bitcast i8* %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = or i16 %109, 1
  store atomic i16 %110, i16* %108 release, align 2
  br i1 %14, label %112, label %111

111:                                              ; preds = %99
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* nonnull %1, %"class.blink::ConsoleMessage"* %105, i1 zeroext false) #10
  br label %115

112:                                              ; preds = %99
  %113 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 16, i32 0, i32 0
  %114 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %113, align 8
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %114, %"class.blink::ConsoleMessage"* %105, i1 zeroext false) #10
  br label %115

115:                                              ; preds = %111, %112
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #10
  br label %131

131:                                              ; preds = %115, %127, %130
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %131, %143, %146
  br i1 %55, label %161, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #10
  br label %161

161:                                              ; preds = %147, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %162

162:                                              ; preds = %47, %161
  %163 = call %"class.blink::WebPrescientNetworking"* @_ZN5blink10LocalFrame19PrescientNetworkingEv(%"class.blink::LocalFrame"* nonnull %2) #10
  %164 = icmp eq %"class.blink::WebPrescientNetworking"* %163, null
  br i1 %164, label %190, label %165

165:                                              ; preds = %162
  %166 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #10
  %167 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #10
  %168 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %43) #10
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %169, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %170 = bitcast %"class.blink::WebPrescientNetworking"* %163 to void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)***
  %171 = load void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)**, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)** %171, i64 2
  %173 = load void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebString"*)** %172, align 8
  call void %173(%"class.blink::WebPrescientNetworking"* nonnull %163, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #10
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %165
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #10
  br label %189

189:                                              ; preds = %165, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #10
  br label %190

190:                                              ; preds = %36, %30, %4, %42, %45, %32, %162, %189
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #10
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #10
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #10
  %29 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #10
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #10
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2286"* nonnull %47, i8* %50) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #10
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #10
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #10
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #10
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #10
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #10
  %90 = bitcast %"class.WTF::StringTypeAdapter.2285"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #10
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #10
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2285"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #10
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2286"* nonnull %108, i16* %111) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #10
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #10
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #10
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #10
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #10
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::WebPrescientNetworking"* @_ZN5blink10LocalFrame19PrescientNetworkingEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13PreloadHelper18PreconnectIfNeededERKNS_18LinkLoadParametersEPNS_8DocumentEPNS_10LocalFrameENS0_10LinkCallerE(%"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.blink::Document"*, %"class.blink::LocalFrame"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::StringAppend.1968", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.WTF::StringAppend.1968", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::WebURL", align 8
  %15 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 0, i32 1
  %16 = load i16, i16* %15, align 4
  %17 = and i16 %16, 8
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %227, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  %21 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %20) #10
  br i1 %21, label %22, label %227

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %20) #10
  br i1 %23, label %24, label %227

24:                                               ; preds = %22
  %25 = icmp eq %"class.blink::Document"* %1, null
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %27 = icmp eq %"class.blink::UseCounter"* %26, null
  %28 = or i1 %25, %27
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::UseCounter"* %26 to void (%"class.blink::UseCounter"*, i32)***
  %31 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %31, i64 3
  %33 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %32, align 8
  tail call void %33(%"class.blink::UseCounter"* nonnull %26, i32 900) #10
  %34 = icmp ne i32 %3, 0
  %35 = or i1 %34, %28
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::UseCounter"* %26 to void (%"class.blink::UseCounter"*, i32)***
  %38 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %38, i64 3
  %40 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %39, align 8
  tail call void %40(%"class.blink::UseCounter"* nonnull %26, i32 903) #10
  br label %41

41:                                               ; preds = %24, %29, %36
  %42 = icmp eq %"class.blink::LocalFrame"* %2, null
  br i1 %42, label %227, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0
  %45 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %44) #10
  %46 = icmp eq %"class.blink::Settings"* %45, null
  br i1 %46, label %213, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %45, i64 0, i32 71
  %49 = bitcast [14 x i8]* %48 to i112*
  %50 = load i112, i112* %49, align 8
  %51 = and i112 %50, 2251799813685248
  %52 = icmp eq i112 %51, 0
  br i1 %52, label %213, label %53

53:                                               ; preds = %47
  %54 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #10
  store i32 8, i32* %5, align 4
  %55 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #10
  store i32 0, i32* %6, align 4
  %56 = bitcast %"class.WTF::StringAppend.1968"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #10
  %57 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25) #10
  %58 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9, i32 4, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #10
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %53, %61, %76
  %79 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::StringImpl"* %59)
  %80 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %7, i64 0, i32 0, i32 0, i32 0
  %81 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %79, 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %7, i64 0, i32 1, i32 0, i32 0
  %83 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %79, 1
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %82, align 8
  %84 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, %"class.WTF::StringAppend.1968"* nonnull dereferenceable(16) %7) #10
  br i1 %25, label %86, label %85

85:                                               ; preds = %78
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* nonnull %1, %"class.blink::ConsoleMessage"* %84, i1 zeroext false) #10
  br label %89

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 16, i32 0, i32 0
  %88 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %87, align 8
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %88, %"class.blink::ConsoleMessage"* %84, i1 zeroext false) #10
  br label %89

89:                                               ; preds = %85, %86
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %104, %101, %89
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %105, %117, %120
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %138

138:                                              ; preds = %121, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #10
  %139 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %213, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #10
  store i32 8, i32* %9, align 4
  %144 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #10
  store i32 0, i32* %10, align 4
  %145 = bitcast %"class.WTF::StringAppend.1968"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #10
  %146 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), i64 27) #10
  %147 = load i32, i32* %139, align 8
  %148 = icmp eq i32 %147, 1
  %149 = select i1 %148, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)
  %150 = select i1 %148, i64 9, i64 15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* %149, i64 %150) #10
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::StringImpl"* %152)
  %154 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %11, i64 0, i32 0, i32 0, i32 0
  %155 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %153, 0
  store %"class.WTF::StringImpl"* %155, %"class.WTF::StringImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %11, i64 0, i32 1, i32 0, i32 0
  %157 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %153, 1
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %156, align 8
  %158 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10, %"class.WTF::StringAppend.1968"* nonnull dereferenceable(16) %11) #10
  br i1 %25, label %160, label %159

159:                                              ; preds = %142
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* nonnull %1, %"class.blink::ConsoleMessage"* %158, i1 zeroext false) #10
  br label %163

160:                                              ; preds = %142
  %161 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 16, i32 0, i32 0
  %162 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %161, align 8
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %162, %"class.blink::ConsoleMessage"* %158, i1 zeroext false) #10
  br label %163

163:                                              ; preds = %159, %160
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #10
  br label %179

179:                                              ; preds = %178, %175, %163
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %195

195:                                              ; preds = %179, %191, %194
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %212

212:                                              ; preds = %195, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #10
  br label %213

213:                                              ; preds = %47, %212, %43, %138
  %214 = call %"class.blink::WebPrescientNetworking"* @_ZN5blink10LocalFrame19PrescientNetworkingEv(%"class.blink::LocalFrame"* nonnull %2) #10
  %215 = icmp eq %"class.blink::WebPrescientNetworking"* %214, null
  br i1 %215, label %227, label %216

216:                                              ; preds = %213
  %217 = bitcast %"class.blink::WebURL"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %217) #10
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %20) #10
  %218 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = icmp ne i32 %219, 1
  %221 = bitcast %"class.blink::WebPrescientNetworking"* %214 to void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)***
  %222 = load void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)**, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)*, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)** %222, i64 3
  %224 = load void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)*, void (%"class.blink::WebPrescientNetworking"*, %"class.blink::WebURL"*, i1)** %223, align 8
  call void %224(%"class.blink::WebPrescientNetworking"* nonnull %214, %"class.blink::WebURL"* nonnull dereferenceable(96) %14, i1 zeroext %220) #10
  %225 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %14, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %225) #10
  %226 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %14, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %226) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %217) #10
  br label %227

227:                                              ; preds = %41, %4, %216, %213, %22, %19
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.1968", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1968"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1968"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink13PreloadHelper30GetResourceTypeFromAsAttributeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %30

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %30

30:                                               ; preds = %22, %18
  %31 = phi i64 [ %29, %22 ], [ %20, %18 ]
  %32 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %31, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 5, i32* %37, align 8
  %38 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br i1 %38, label %165, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi i64 [ %54, %47 ], [ %45, %43 ]
  %57 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  br i1 %63, label %165, label %64

64:                                               ; preds = %55
  %65 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #10
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %70, i64* %71, align 8
  br label %80

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %78, align 8
  %79 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %80

80:                                               ; preds = %72, %68
  %81 = phi i64 [ %79, %72 ], [ %70, %68 ]
  %82 = phi i32 [ %75, %72 ], [ 0, %68 ]
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %82, i32* %83, align 8
  %84 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #10
  %85 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %81, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 5, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #10
  br i1 %88, label %165, label %89

89:                                               ; preds = %80
  %90 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #10
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %94, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %96 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %95, i64* %96, align 8
  br label %105

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %105

105:                                              ; preds = %97, %93
  %106 = phi i64 [ %104, %97 ], [ %95, %93 ]
  %107 = phi i32 [ %100, %97 ], [ 0, %93 ]
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %107, i32* %108, align 8
  %109 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %106, i64* %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 5, i32* %112, align 8
  %113 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #10
  br i1 %113, label %165, label %114

114:                                              ; preds = %105
  %115 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %119, align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %121 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %120, i64* %121, align 8
  br label %130

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 1
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %128 = bitcast i8** %127 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %128, align 8
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %130

130:                                              ; preds = %122, %118
  %131 = phi i64 [ %129, %122 ], [ %120, %118 ]
  %132 = phi i32 [ %125, %122 ], [ 0, %118 ]
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %132, i32* %133, align 8
  %134 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #10
  %135 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %131, i64* %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 4, i32* %137, align 8
  %138 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  br i1 %138, label %165, label %139

139:                                              ; preds = %130
  %140 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #10
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %144, align 8
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %145, i64* %146, align 8
  br label %155

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 1
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %153 = bitcast i8** %152 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %153, align 8
  %154 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %155

155:                                              ; preds = %147, %143
  %156 = phi i64 [ %154, %147 ], [ %145, %143 ]
  %157 = phi i32 [ %150, %147 ], [ 0, %143 ]
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %157, i32* %158, align 8
  %159 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #10
  %160 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %156, i64* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 5, i32* %162, align 8
  %163 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #10
  %164 = zext i1 %163 to i16
  br label %165

165:                                              ; preds = %155, %130, %105, %80, %55, %30
  %166 = phi i16 [ 1, %30 ], [ 1, %55 ], [ 1, %80 ], [ 1, %105 ], [ 1, %130 ], [ %164, %155 ]
  %167 = phi i16 [ 256, %30 ], [ 768, %55 ], [ 512, %80 ], [ 2304, %105 ], [ 1024, %130 ], [ 1280, %155 ]
  %168 = or i16 %167, %166
  ret i16 %168
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Resource"* @_ZN5blink13PreloadHelper15PreloadIfNeededERKNS_18LinkLoadParametersERNS_8DocumentERKNS_4KURLENS0_10LinkCallerEPKNS_19ViewportDescriptionENS_17ParserDispositionE(%"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.blink::Document"* dereferenceable(2848), %"class.blink::KURL"* dereferenceable(112), i32, %"struct.blink::ViewportDescription"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.WTF::StringView", align 8
  %33 = alloca %"class.blink::KURL", align 8
  %34 = alloca %"class.blink::KURL", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.WTF::String", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = alloca %"class.blink::ResourceRequest", align 8
  %41 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %42 = alloca %"class.blink::FetchParameters", align 8
  %43 = alloca %"class.blink::ResourceRequest", align 8
  %44 = alloca %"class.WTF::HashSet.1380", align 8
  %45 = alloca %"class.WTF::String", align 8
  %46 = alloca %"class.WTF::String", align 8
  %47 = alloca %"class.WTF::StringAppend.1978", align 8
  %48 = alloca %"class.WTF::StringAppend", align 8
  %49 = tail call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %1) #10
  %50 = icmp eq %"class.blink::DocumentLoader"* %49, null
  br i1 %50, label %1016, label %51

51:                                               ; preds = %6
  %52 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 0, i32 1
  %53 = load i16, i16* %52, align 4
  %54 = and i16 %53, 32
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %1016, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 3
  %58 = tail call i16 @_ZN5blink13PreloadHelper30GetResourceTypeFromAsAttributeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %57)
  %59 = trunc i16 %58 to i8
  %60 = lshr i16 %58, 8
  %61 = trunc i16 %60 to i8
  %62 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %62) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %33) #10
  %63 = icmp eq i8 %59, 0
  %64 = xor i1 %63, true
  %65 = icmp eq i8 %61, 1
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %87

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 10
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %78 = bitcast %"class.blink::UseCounter"* %77 to void (%"class.blink::UseCounter"*, i32)***
  %79 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %79, i64 3
  %81 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %80, align 8
  call void %81(%"class.blink::UseCounter"* %77, i32 2778) #10
  %82 = call fastcc %"class.blink::MediaValues"* @_ZN5blink12_GLOBAL__N_117CreateMediaValuesERNS_8DocumentEPKNS_19ViewportDescriptionE(%"class.blink::Document"* dereferenceable(2848) %1, %"struct.blink::ViewportDescription"* %4)
  %83 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %34, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  %85 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 11
  call fastcc void @_ZN5blink12_GLOBAL__N_118GetBestFitImageURLERKNS_8DocumentERKNS_4KURLEPNS_11MediaValuesES6_RKN3WTF6StringESC_(%"class.blink::KURL"* nonnull sret %34, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::MediaValues"* %82, %"class.blink::KURL"* dereferenceable(112) %84, %"class.WTF::String"* dereferenceable(8) %68, %"class.WTF::String"* dereferenceable(8) %85)
  %86 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %33, %"class.blink::KURL"* nonnull dereferenceable(112) %34) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %83) #10
  br label %90

87:                                               ; preds = %56, %67, %72
  %88 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  %89 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %33, %"class.blink::KURL"* dereferenceable(112) %88) #10
  br label %90

90:                                               ; preds = %87, %76
  %91 = phi %"class.blink::MediaValues"* [ %82, %76 ], [ null, %87 ]
  %92 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %93 = bitcast %"class.blink::UseCounter"* %92 to void (%"class.blink::UseCounter"*, i32)***
  %94 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %94, i64 3
  %96 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %95, align 8
  call void %96(%"class.blink::UseCounter"* %92, i32 901) #10
  %97 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %33) #10
  br i1 %97, label %98, label %100

98:                                               ; preds = %90
  %99 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %33) #10
  br i1 %99, label %100, label %126

100:                                              ; preds = %98, %90
  %101 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %35, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i64 46) #10
  %102 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %103 = bitcast i8* %102 to %"class.blink::ConsoleMessage"*
  %104 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %103, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %35, %"class.blink::SourceLocation"* %104) #10
  %105 = getelementptr inbounds i8, i8* %102, i64 -4
  %106 = bitcast i8* %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = or i16 %107, 1
  store atomic i16 %108, i16* %106 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %103, i1 zeroext false) #10
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #10
  br label %125

125:                                              ; preds = %100, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #10
  br label %1014

126:                                              ; preds = %98
  %127 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 4
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %143, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %131
  %136 = icmp eq %"class.blink::MediaValues"* %91, null
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = call fastcc %"class.blink::MediaValues"* @_ZN5blink12_GLOBAL__N_117CreateMediaValuesERNS_8DocumentEPKNS_19ViewportDescriptionE(%"class.blink::Document"* dereferenceable(2848) %1, %"struct.blink::ViewportDescription"* %4)
  br label %139

139:                                              ; preds = %135, %137
  %140 = phi %"class.blink::MediaValues"* [ %91, %135 ], [ %138, %137 ]
  %141 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %142 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_112MediaMatchesERKN3WTF6StringEPNS_11MediaValuesEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8) %127, %"class.blink::MediaValues"* %140, %"class.blink::ExecutionContext"* %141)
  br i1 %142, label %143, label %1014

143:                                              ; preds = %126, %139, %131
  %144 = icmp eq i32 %3, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %143
  %146 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %93, align 8
  %147 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %146, i64 3
  %148 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %147, align 8
  call void %148(%"class.blink::UseCounter"* %92, i32 1124) #10
  br label %149

149:                                              ; preds = %145, %143
  br i1 %63, label %150, label %552

150:                                              ; preds = %149
  %151 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #10
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %152, align 8
  %153 = bitcast %"class.WTF::StringView"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #10
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  store i8* null, i8** %158, align 8
  %159 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %160 = bitcast %"class.WTF::StringView"* %31 to i64*
  store i64 %159, i64* %160, align 8
  br label %169

161:                                              ; preds = %150
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 0
  store %"class.WTF::StringImpl"* %155, %"class.WTF::StringImpl"** %162, align 8
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 1
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  %167 = bitcast i8** %166 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %165, %"class.WTF::StringImpl"** %167, align 8
  %168 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %169

169:                                              ; preds = %161, %157
  %170 = phi i64 [ %168, %161 ], [ %159, %157 ]
  %171 = phi i32 [ %164, %161 ], [ 0, %157 ]
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 %171, i32* %172, align 8
  %173 = bitcast %"class.WTF::StringView"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #10
  %174 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %170, i64* %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 5, i32* %176, align 8
  %177 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %31, %"class.WTF::StringView"* nonnull dereferenceable(24) %32) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #10
  br i1 %177, label %453, label %178

178:                                              ; preds = %169
  %179 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #10
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %182, label %186

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* null, i8** %183, align 8
  %184 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %185 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %184, i64* %185, align 8
  br label %194

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 0
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 1
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  %192 = bitcast i8** %191 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %192, align 8
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %194

194:                                              ; preds = %186, %182
  %195 = phi i64 [ %193, %186 ], [ %184, %182 ]
  %196 = phi i32 [ %189, %186 ], [ 0, %182 ]
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 %196, i32* %197, align 8
  %198 = bitcast %"class.WTF::StringView"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #10
  %199 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %195, i64* %199, align 8
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 12, i32* %201, align 8
  %202 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %29, %"class.WTF::StringView"* nonnull dereferenceable(24) %30) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #10
  br i1 %202, label %453, label %203

203:                                              ; preds = %194
  %204 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #10
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* null, i8** %208, align 8
  %209 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %210 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %209, i64* %210, align 8
  br label %219

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 0
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 1
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  %217 = bitcast i8** %216 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %217, align 8
  %218 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %219

219:                                              ; preds = %211, %207
  %220 = phi i64 [ %218, %211 ], [ %209, %207 ]
  %221 = phi i32 [ %214, %211 ], [ 0, %207 ]
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 %221, i32* %222, align 8
  %223 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #10
  %224 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %220, i64* %224, align 8
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8** %225, align 8
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 8, i32* %226, align 8
  %227 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %27, %"class.WTF::StringView"* nonnull dereferenceable(24) %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #10
  br i1 %227, label %453, label %228

228:                                              ; preds = %219
  %229 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #10
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* null, i8** %233, align 8
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %235 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %234, i64* %235, align 8
  br label %244

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 0
  store %"class.WTF::StringImpl"* %230, %"class.WTF::StringImpl"** %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 1
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  %242 = bitcast i8** %241 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %240, %"class.WTF::StringImpl"** %242, align 8
  %243 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %244

244:                                              ; preds = %236, %232
  %245 = phi i64 [ %243, %236 ], [ %234, %232 ]
  %246 = phi i32 [ %239, %236 ], [ 0, %232 ]
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 %246, i32* %247, align 8
  %248 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #10
  %249 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %245, i64* %249, align 8
  %250 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i8** %250, align 8
  %251 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 5, i32* %251, align 8
  %252 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %25, %"class.WTF::StringView"* nonnull dereferenceable(24) %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #10
  br i1 %252, label %453, label %253

253:                                              ; preds = %244
  %254 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #10
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %257, label %261

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* null, i8** %258, align 8
  %259 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %260 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %259, i64* %260, align 8
  br label %269

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 0
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %262, align 8
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 1
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %267 = bitcast i8** %266 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %265, %"class.WTF::StringImpl"** %267, align 8
  %268 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %269

269:                                              ; preds = %261, %257
  %270 = phi i64 [ %268, %261 ], [ %259, %257 ]
  %271 = phi i32 [ %264, %261 ], [ 0, %257 ]
  %272 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 %271, i32* %272, align 8
  %273 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #10
  %274 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %270, i64* %274, align 8
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i8** %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 8, i32* %276, align 8
  %277 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #10
  br i1 %277, label %453, label %278

278:                                              ; preds = %269
  %279 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #10
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* null, i8** %283, align 8
  %284 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %285 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %284, i64* %285, align 8
  br label %294

286:                                              ; preds = %278
  %287 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 1
  %291 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %292 = bitcast i8** %291 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %290, %"class.WTF::StringImpl"** %292, align 8
  %293 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %294

294:                                              ; preds = %286, %282
  %295 = phi i64 [ %293, %286 ], [ %284, %282 ]
  %296 = phi i32 [ %289, %286 ], [ 0, %282 ]
  %297 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %296, i32* %297, align 8
  %298 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #10
  %299 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %295, i64* %299, align 8
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8** %300, align 8
  %301 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 6, i32* %301, align 8
  %302 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %21, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #10
  br i1 %302, label %453, label %303

303:                                              ; preds = %294
  %304 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %304) #10
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %307, label %311

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* null, i8** %308, align 8
  %309 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %310 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %309, i64* %310, align 8
  br label %319

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %305, %"class.WTF::StringImpl"** %312, align 8
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 1
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %317 = bitcast i8** %316 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %317, align 8
  %318 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %319

319:                                              ; preds = %311, %307
  %320 = phi i64 [ %318, %311 ], [ %309, %307 ]
  %321 = phi i32 [ %314, %311 ], [ 0, %307 ]
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %321, i32* %322, align 8
  %323 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #10
  %324 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %320, i64* %324, align 8
  %325 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i8** %325, align 8
  %326 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 12, i32* %326, align 8
  %327 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %304) #10
  br i1 %327, label %453, label %328

328:                                              ; preds = %319
  %329 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %329) #10
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %332, label %336

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %333, align 8
  %334 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %335 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %334, i64* %335, align 8
  br label %344

336:                                              ; preds = %328
  %337 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %330, %"class.WTF::StringImpl"** %337, align 8
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 1
  %341 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %342 = bitcast i8** %341 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %342, align 8
  %343 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %344

344:                                              ; preds = %336, %332
  %345 = phi i64 [ %343, %336 ], [ %334, %332 ]
  %346 = phi i32 [ %339, %336 ], [ 0, %332 ]
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %346, i32* %347, align 8
  %348 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %348) #10
  %349 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %345, i64* %349, align 8
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8** %350, align 8
  %351 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 6, i32* %351, align 8
  %352 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %348) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %329) #10
  br i1 %352, label %453, label %353

353:                                              ; preds = %344
  %354 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #10
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %357, label %361

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %358, align 8
  %359 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %360 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %359, i64* %360, align 8
  br label %369

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %355, %"class.WTF::StringImpl"** %362, align 8
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 1
  %366 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %367 = bitcast i8** %366 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %365, %"class.WTF::StringImpl"** %367, align 8
  %368 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %369

369:                                              ; preds = %361, %357
  %370 = phi i64 [ %368, %361 ], [ %359, %357 ]
  %371 = phi i32 [ %364, %361 ], [ 0, %357 ]
  %372 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %371, i32* %372, align 8
  %373 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #10
  %374 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %370, i64* %374, align 8
  %375 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), i8** %375, align 8
  %376 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 12, i32* %376, align 8
  %377 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #10
  br i1 %377, label %453, label %378

378:                                              ; preds = %369
  %379 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %379) #10
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %382, label %386

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %383, align 8
  %384 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %385 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %384, i64* %385, align 8
  br label %394

386:                                              ; preds = %378
  %387 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %380, %"class.WTF::StringImpl"** %387, align 8
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 1
  %391 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %392 = bitcast i8** %391 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %390, %"class.WTF::StringImpl"** %392, align 8
  %393 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %394

394:                                              ; preds = %386, %382
  %395 = phi i64 [ %393, %386 ], [ %384, %382 ]
  %396 = phi i32 [ %389, %386 ], [ 0, %382 ]
  %397 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %396, i32* %397, align 8
  %398 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #10
  %399 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %395, i64* %399, align 8
  %400 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), i8** %400, align 8
  %401 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 5, i32* %401, align 8
  %402 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %379) #10
  br i1 %402, label %453, label %403

403:                                              ; preds = %394
  %404 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %404) #10
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %407, label %411

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %408, align 8
  %409 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %410 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %409, i64* %410, align 8
  br label %419

411:                                              ; preds = %403
  %412 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %405, %"class.WTF::StringImpl"** %412, align 8
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 1
  %416 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %417 = bitcast i8** %416 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %415, %"class.WTF::StringImpl"** %417, align 8
  %418 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %419

419:                                              ; preds = %411, %407
  %420 = phi i64 [ %418, %411 ], [ %409, %407 ]
  %421 = phi i32 [ %414, %411 ], [ 0, %407 ]
  %422 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %421, i32* %422, align 8
  %423 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %423) #10
  %424 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %420, i64* %424, align 8
  %425 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i8** %425, align 8
  %426 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 6, i32* %426, align 8
  %427 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %423) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %404) #10
  br i1 %427, label %453, label %428

428:                                              ; preds = %419
  %429 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %429) #10
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %430, null
  br i1 %431, label %432, label %436

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %433, align 8
  %434 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %435 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %434, i64* %435, align 8
  br label %444

436:                                              ; preds = %428
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %430, %"class.WTF::StringImpl"** %437, align 8
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 1
  %439 = load i32, i32* %438, align 4
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 1
  %441 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %442 = bitcast i8** %441 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %440, %"class.WTF::StringImpl"** %442, align 8
  %443 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %444

444:                                              ; preds = %432, %436
  %445 = phi i64 [ %443, %436 ], [ %434, %432 ]
  %446 = phi i32 [ %439, %436 ], [ 0, %432 ]
  %447 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %446, i32* %447, align 8
  %448 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %448) #10
  %449 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %445, i64* %449, align 8
  %450 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8** %450, align 8
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 4, i32* %451, align 8
  %452 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %448) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %429) #10
  br i1 %452, label %453, label %490

453:                                              ; preds = %169, %194, %219, %244, %269, %294, %319, %344, %369, %394, %419, %444
  %454 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %37, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.12, i64 0, i64 0), i64 49) #10
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %456 = bitcast %"class.WTF::String"* %37 to i64*
  %457 = load i64, i64* %456, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %455, align 8
  %458 = bitcast %"class.WTF::String"* %36 to i64*
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  store i64 %457, i64* %458, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %527, label %461

461:                                              ; preds = %453
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %467 = load i32, i32* %466, align 4
  br i1 %465, label %468, label %470

468:                                              ; preds = %461
  %469 = add i32 %467, -1
  store i32 %469, i32* %466, align 4
  br label %470

470:                                              ; preds = %468, %461
  %471 = phi i32 [ %469, %468 ], [ %467, %461 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %459) #10
  br label %474

474:                                              ; preds = %470, %473
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %527, label %477

477:                                              ; preds = %474
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %483 = load i32, i32* %482, align 4
  br i1 %481, label %484, label %486

484:                                              ; preds = %477
  %485 = add i32 %483, -1
  store i32 %485, i32* %482, align 4
  br label %486

486:                                              ; preds = %484, %477
  %487 = phi i32 [ %485, %484 ], [ %483, %477 ]
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %527

489:                                              ; preds = %486
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %475) #10
  br label %527

490:                                              ; preds = %444
  %491 = bitcast %"class.WTF::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %491) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %38, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13, i64 0, i64 0), i64 47) #10
  %492 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %493 = bitcast %"class.WTF::String"* %38 to i64*
  %494 = load i64, i64* %493, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %492, align 8
  %495 = bitcast %"class.WTF::String"* %36 to i64*
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  store i64 %494, i64* %495, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %527, label %498

498:                                              ; preds = %490
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #10
  br label %511

511:                                              ; preds = %507, %510
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %512, null
  br i1 %513, label %527, label %514

514:                                              ; preds = %511
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = load atomic i32, i32* %515 monotonic, align 4
  %517 = and i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  br i1 %518, label %521, label %523

521:                                              ; preds = %514
  %522 = add i32 %520, -1
  store i32 %522, i32* %519, align 4
  br label %523

523:                                              ; preds = %521, %514
  %524 = phi i32 [ %522, %521 ], [ %520, %514 ]
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %527

526:                                              ; preds = %523
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %512) #10
  br label %527

527:                                              ; preds = %526, %523, %511, %490, %489, %486, %474, %453
  %528 = phi i8* [ %454, %453 ], [ %454, %474 ], [ %454, %486 ], [ %454, %489 ], [ %491, %490 ], [ %491, %511 ], [ %491, %523 ], [ %491, %526 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %528) #10
  %529 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %530 = bitcast i8* %529 to %"class.blink::ConsoleMessage"*
  %531 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %530, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %36, %"class.blink::SourceLocation"* %531) #10
  %532 = getelementptr inbounds i8, i8* %529, i64 -4
  %533 = bitcast i8* %532 to i16*
  %534 = load atomic i16, i16* %533 monotonic, align 2
  %535 = or i16 %534, 1
  store atomic i16 %535, i16* %533 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %530, i1 zeroext false) #10
  %536 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %537 = icmp eq %"class.WTF::StringImpl"* %536, null
  br i1 %537, label %551, label %538

538:                                              ; preds = %527
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %536, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = load atomic i32, i32* %539 monotonic, align 4
  %541 = and i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %536, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  br i1 %542, label %545, label %547

545:                                              ; preds = %538
  %546 = add i32 %544, -1
  store i32 %546, i32* %543, align 4
  br label %547

547:                                              ; preds = %545, %538
  %548 = phi i32 [ %546, %545 ], [ %544, %538 ]
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %551

550:                                              ; preds = %547
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %536) #10
  br label %551

551:                                              ; preds = %527, %547, %550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #10
  br label %1014

552:                                              ; preds = %149
  %553 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 2
  %554 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %553, i64 0, i32 0, i32 0
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %554, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %555, null
  br i1 %556, label %618, label %557

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 1
  %559 = load i32, i32* %558, align 4
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %618, label %561

561:                                              ; preds = %557
  switch i8 %61, label %592 [
    i8 1, label %590
    i8 3, label %562
    i8 2, label %564
    i8 4, label %566
    i8 10, label %568
    i8 11, label %568
    i8 9, label %588
    i8 5, label %618
  ]

562:                                              ; preds = %561
  %563 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %553) #10
  br i1 %563, label %618, label %592

564:                                              ; preds = %561
  %565 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedStyleSheetMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %553) #10
  br i1 %565, label %618, label %592

566:                                              ; preds = %561
  %567 = call zeroext i1 @_ZN5blink16MIMETypeRegistry23IsSupportedFontMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %553) #10
  br i1 %567, label %618, label %592

568:                                              ; preds = %561, %561
  %569 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %569) #10
  %570 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %570, align 8
  %571 = call zeroext i1 @_ZN5blink16MIMETypeRegistry24IsSupportedMediaMIMETypeERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8) %553, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %570, align 8
  %573 = icmp eq %"class.WTF::StringImpl"* %572, null
  br i1 %573, label %587, label %574

574:                                              ; preds = %568
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = load atomic i32, i32* %575 monotonic, align 4
  %577 = and i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 0
  %580 = load i32, i32* %579, align 4
  br i1 %578, label %581, label %583

581:                                              ; preds = %574
  %582 = add i32 %580, -1
  store i32 %582, i32* %579, align 4
  br label %583

583:                                              ; preds = %581, %574
  %584 = phi i32 [ %582, %581 ], [ %580, %574 ]
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %583
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %572) #10
  br label %587

587:                                              ; preds = %586, %583, %568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %569) #10
  br i1 %571, label %618, label %592

588:                                              ; preds = %561
  %589 = call zeroext i1 @_ZN5blink16MIMETypeRegistry28IsSupportedTextTrackMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %553) #10
  br i1 %589, label %618, label %592

590:                                              ; preds = %561
  %591 = call zeroext i1 @_ZN5blink16MIMETypeRegistry32IsSupportedImagePrefixedMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %553) #10
  br i1 %591, label %618, label %592

592:                                              ; preds = %561, %562, %564, %566, %587, %588, %590
  %593 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %593) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %39, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.14, i64 0, i64 0), i64 50) #10
  %594 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %595 = bitcast i8* %594 to %"class.blink::ConsoleMessage"*
  %596 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %595, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %39, %"class.blink::SourceLocation"* %596) #10
  %597 = getelementptr inbounds i8, i8* %594, i64 -4
  %598 = bitcast i8* %597 to i16*
  %599 = load atomic i16, i16* %598 monotonic, align 2
  %600 = or i16 %599, 1
  store atomic i16 %600, i16* %598 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %595, i1 zeroext false) #10
  %601 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %601, align 8
  %603 = icmp eq %"class.WTF::StringImpl"* %602, null
  br i1 %603, label %617, label %604

604:                                              ; preds = %592
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %602, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %606 = load atomic i32, i32* %605 monotonic, align 4
  %607 = and i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %602, i64 0, i32 0
  %610 = load i32, i32* %609, align 4
  br i1 %608, label %611, label %613

611:                                              ; preds = %604
  %612 = add i32 %610, -1
  store i32 %612, i32* %609, align 4
  br label %613

613:                                              ; preds = %611, %604
  %614 = phi i32 [ %612, %611 ], [ %610, %604 ]
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %617

616:                                              ; preds = %613
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %602) #10
  br label %617

617:                                              ; preds = %592, %613, %616
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %593) #10
  br label %1014

618:                                              ; preds = %552, %561, %557, %562, %564, %566, %587, %588, %590
  %619 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %40, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %619) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %619, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %40, %"class.blink::KURL"* nonnull dereferenceable(112) %33) #10
  %620 = call i32 @_ZN5blink15ResourceFetcher23DetermineRequestContextENS_12ResourceTypeENS0_10IsImageSetE(i8 zeroext %61, i32 0) #10
  %621 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %40, i64 0, i32 0, i32 15
  store i32 %620, i32* %621, align 8
  %622 = call i32 @_ZN5blink15ResourceFetcher27DetermineRequestDestinationENS_12ResourceTypeE(i8 zeroext %61) #10
  %623 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %40, i64 0, i32 0, i32 16
  store i32 %622, i32* %623, align 4
  %624 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 8
  %625 = load i32, i32* %624, align 8
  %626 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %40, i64 0, i32 0, i32 23
  store i32 %625, i32* %626, align 8
  %627 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 7
  %628 = call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %627) #10
  %629 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %40, i64 0, i32 0, i32 18
  store i32 %628, i32* %629, align 4
  %630 = bitcast %"struct.blink::ResourceLoaderOptions"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %630) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %630, i8 -86, i64 112, i1 false)
  %631 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %632 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %631) #10
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %41, %"class.blink::DOMWrapperWorld"* %632) #10
  %633 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names5kLinkE, align 8
  %634 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %633, i64 0, i32 0, i32 0, i32 0
  %635 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %634, align 8
  %636 = icmp eq %"class.WTF::StringImpl"* %635, null
  br i1 %636, label %654, label %637

637:                                              ; preds = %618
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %635, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %639 = load atomic i32, i32* %638 monotonic, align 4
  %640 = and i32 %639, 2
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %654

642:                                              ; preds = %637
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %635, i64 0, i32 0
  %644 = load i32, i32* %643, align 4
  %645 = zext i32 %644 to i33
  %646 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %645, i33 1) #10
  %647 = extractvalue { i33, i1 } %646, 1
  %648 = extractvalue { i33, i1 } %646, 0
  %649 = icmp slt i33 %648, 0
  %650 = or i1 %647, %649
  br i1 %650, label %651, label %652, !prof !2

651:                                              ; preds = %642
  call void @llvm.trap() #10
  unreachable

652:                                              ; preds = %642
  %653 = trunc i33 %648 to i32
  store i32 %653, i32* %643, align 4
  br label %654

654:                                              ; preds = %652, %637, %618
  %655 = ptrtoint %"class.WTF::StringImpl"* %635 to i64
  %656 = bitcast %"struct.blink::ResourceLoaderOptions"* %41 to i64*
  %657 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %658 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %657, align 8
  store i64 %655, i64* %656, align 8
  %659 = icmp eq %"class.WTF::StringImpl"* %658, null
  br i1 %659, label %673, label %660

660:                                              ; preds = %654
  %661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %658, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %662 = load atomic i32, i32* %661 monotonic, align 4
  %663 = and i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %658, i64 0, i32 0
  %666 = load i32, i32* %665, align 4
  br i1 %664, label %667, label %669

667:                                              ; preds = %660
  %668 = add i32 %666, -1
  store i32 %668, i32* %665, align 4
  br label %669

669:                                              ; preds = %667, %660
  %670 = phi i32 [ %668, %667 ], [ %666, %660 ]
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %673

672:                                              ; preds = %669
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %658) #10
  br label %673

673:                                              ; preds = %654, %669, %672
  %674 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %41, i64 0, i32 8
  store i8 %5, i8* %674, align 8
  %675 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %675) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %675, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1379", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, [6 x i8], %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1379", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, [6 x i8], %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink13PreloadHelper16PrefetchIfNeededERKNS_18LinkLoadParametersERNS_8DocumentE.link_fetch_params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %43, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %40) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %42, %"class.blink::ResourceRequest"* nonnull %43, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %41) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %43) #10
  %676 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 95, i32 0
  %677 = bitcast %"class.blink::TextResourceDecoderOptions"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %677) #10
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %7, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %676) #10
  %678 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 1
  %679 = bitcast %"class.blink::TextResourceDecoderOptions"* %678 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %679, i8* nonnull align 8 %677, i64 32, i1 false) #10
  %680 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 1, i32 7
  %681 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %7, i64 0, i32 7
  %682 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %680, %"class.blink::KURL"* dereferenceable(112) %681) #10
  %683 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 1, i32 8, i64 0
  %684 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %7, i64 0, i32 8, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %683, i8* align 8 %684, i64 3, i1 false) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %681) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %677) #10
  %685 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 11
  store i8 2, i8* %685, align 2
  %686 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 1
  %687 = load i32, i32* %686, align 8
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %693, label %689

689:                                              ; preds = %673
  %690 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %691 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %690) #10
  %692 = load i32, i32* %686, align 8
  call void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"* nonnull %42, %"class.blink::SecurityOrigin"* %691, i32 %692) #10
  br label %693

693:                                              ; preds = %673, %689
  %694 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 6
  %695 = or i8 %61, 1
  %696 = icmp eq i8 %695, 3
  %697 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %694, i64 0, i32 0, i32 0
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %704, label %700

700:                                              ; preds = %693
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 1
  %702 = load i32, i32* %701, align 4
  %703 = icmp eq i32 %702, 0
  br label %704

704:                                              ; preds = %693, %700
  %705 = phi i1 [ true, %693 ], [ %703, %700 ]
  br i1 %696, label %706, label %792

706:                                              ; preds = %704
  br i1 %705, label %819, label %707

707:                                              ; preds = %706
  %708 = bitcast %"class.WTF::HashSet.1380"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %708) #10
  %709 = getelementptr inbounds %"class.WTF::HashSet.1380", %"class.WTF::HashSet.1380"* %44, i64 0, i32 0, i32 0
  %710 = getelementptr inbounds %"class.WTF::HashSet.1380", %"class.WTF::HashSet.1380"* %44, i64 0, i32 0, i32 1
  %711 = bitcast %"class.WTF::HashSet.1380"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %711, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %708, i8 0, i64 20, i1 false) #10
  %712 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %713 = call i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %712) #10
  %714 = call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %694, i32 %713, %"class.WTF::HashSet.1380"* nonnull dereferenceable(24) %44) #10
  %715 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 2, i32 7, i32 0
  %716 = getelementptr inbounds %"class.WTF::HashSet.1380", %"class.WTF::HashSet.1380"* %44, i64 0, i32 0
  %717 = call dereferenceable(24) %"class.WTF::HashTable.1381"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_(%"class.WTF::HashTable.1381"* %715, %"class.WTF::HashTable.1381"* nonnull dereferenceable(24) %716) #10
  %718 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 0, i32 0, i32 21
  %719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %720 = icmp eq %"class.WTF::StringImpl"* %719, null
  br i1 %720, label %738, label %721

721:                                              ; preds = %707
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %738

726:                                              ; preds = %721
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  %729 = zext i32 %728 to i33
  %730 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %729, i33 1) #10
  %731 = extractvalue { i33, i1 } %730, 1
  %732 = extractvalue { i33, i1 } %730, 0
  %733 = icmp slt i33 %732, 0
  %734 = or i1 %731, %733
  br i1 %734, label %735, label %736, !prof !2

735:                                              ; preds = %726
  call void @llvm.trap() #10
  unreachable

736:                                              ; preds = %726
  %737 = trunc i33 %732 to i32
  store i32 %737, i32* %727, align 4
  br label %738

738:                                              ; preds = %736, %721, %707
  %739 = ptrtoint %"class.WTF::StringImpl"* %719 to i64
  %740 = bitcast %"class.WTF::String"* %718 to i64*
  %741 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %718, i64 0, i32 0, i32 0
  %742 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %741, align 8
  store i64 %739, i64* %740, align 8
  %743 = icmp eq %"class.WTF::StringImpl"* %742, null
  br i1 %743, label %757, label %744

744:                                              ; preds = %738
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %742, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load atomic i32, i32* %745 monotonic, align 4
  %747 = and i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %742, i64 0, i32 0
  %750 = load i32, i32* %749, align 4
  br i1 %748, label %751, label %753

751:                                              ; preds = %744
  %752 = add i32 %750, -1
  store i32 %752, i32* %749, align 4
  br label %753

753:                                              ; preds = %751, %744
  %754 = phi i32 [ %752, %751 ], [ %750, %744 ]
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %757

756:                                              ; preds = %753
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %742) #10
  br label %757

757:                                              ; preds = %738, %753, %756
  %758 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %709, align 8
  %759 = icmp eq %"struct.std::__1::pair.1384"* %758, null
  br i1 %759, label %791, label %760, !prof !3

760:                                              ; preds = %757
  %761 = load i32, i32* %710, align 8
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %789, label %763

763:                                              ; preds = %760
  %764 = zext i32 %761 to i64
  br label %765

765:                                              ; preds = %786, %763
  %766 = phi i64 [ 0, %763 ], [ %787, %786 ]
  %767 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %758, i64 %766
  %768 = bitcast %"struct.std::__1::pair.1384"* %767 to i8**
  %769 = load i8*, i8** %768, align 8
  %770 = bitcast i8* %769 to %"class.WTF::StringImpl"*
  %771 = ptrtoint i8* %769 to i64
  switch i64 %771, label %772 [
    i64 -1, label %786
    i64 0, label %786
  ]

772:                                              ; preds = %765
  %773 = getelementptr inbounds i8, i8* %769, i64 8
  %774 = bitcast i8* %773 to i32*
  %775 = load atomic i32, i32* %774 monotonic, align 4
  %776 = and i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = bitcast i8* %769 to i32*
  %779 = load i32, i32* %778, align 4
  br i1 %777, label %780, label %782

780:                                              ; preds = %772
  %781 = add i32 %779, -1
  store i32 %781, i32* %778, align 4
  br label %782

782:                                              ; preds = %780, %772
  %783 = phi i32 [ %781, %780 ], [ %779, %772 ]
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %785, label %786

785:                                              ; preds = %782
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %770) #10
  br label %786

786:                                              ; preds = %785, %782, %765, %765
  %787 = add nuw nsw i64 %766, 1
  %788 = icmp eq i64 %787, %764
  br i1 %788, label %789, label %765

789:                                              ; preds = %786, %760
  %790 = bitcast %"struct.std::__1::pair.1384"* %758 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %790) #10
  store %"struct.std::__1::pair.1384"* null, %"struct.std::__1::pair.1384"** %709, align 8
  br label %791

791:                                              ; preds = %757, %789
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %708) #10
  br label %819

792:                                              ; preds = %704
  br i1 %705, label %819, label %793

793:                                              ; preds = %792
  %794 = bitcast %"class.WTF::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %794) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %45, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.15, i64 0, i64 0), i64 164) #10
  %795 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %796 = bitcast i8* %795 to %"class.blink::ConsoleMessage"*
  %797 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %796, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %45, %"class.blink::SourceLocation"* %797) #10
  %798 = getelementptr inbounds i8, i8* %795, i64 -4
  %799 = bitcast i8* %798 to i16*
  %800 = load atomic i16, i16* %799 monotonic, align 2
  %801 = or i16 %800, 1
  store atomic i16 %801, i16* %799 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %796, i1 zeroext false) #10
  %802 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %803 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %802, align 8
  %804 = icmp eq %"class.WTF::StringImpl"* %803, null
  br i1 %804, label %818, label %805

805:                                              ; preds = %793
  %806 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %803, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %807 = load atomic i32, i32* %806 monotonic, align 4
  %808 = and i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %803, i64 0, i32 0
  %811 = load i32, i32* %810, align 4
  br i1 %809, label %812, label %814

812:                                              ; preds = %805
  %813 = add i32 %811, -1
  store i32 %813, i32* %810, align 4
  br label %814

814:                                              ; preds = %812, %805
  %815 = phi i32 [ %813, %812 ], [ %811, %805 ]
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %817, label %818

817:                                              ; preds = %814
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %803) #10
  br label %818

818:                                              ; preds = %793, %814, %817
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %794) #10
  br label %819

819:                                              ; preds = %792, %818, %706, %791
  %820 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 2, i32 6
  %821 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 5, i32 0, i32 0
  %822 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %821, align 8
  %823 = icmp eq %"class.WTF::StringImpl"* %822, null
  br i1 %823, label %841, label %824

824:                                              ; preds = %819
  %825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %826 = load atomic i32, i32* %825 monotonic, align 4
  %827 = and i32 %826, 2
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %829, label %841

829:                                              ; preds = %824
  %830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 0
  %831 = load i32, i32* %830, align 4
  %832 = zext i32 %831 to i33
  %833 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %832, i33 1) #10
  %834 = extractvalue { i33, i1 } %833, 1
  %835 = extractvalue { i33, i1 } %833, 0
  %836 = icmp slt i33 %835, 0
  %837 = or i1 %834, %836
  br i1 %837, label %838, label %839, !prof !2

838:                                              ; preds = %829
  call void @llvm.trap() #10
  unreachable

839:                                              ; preds = %829
  %840 = trunc i33 %835 to i32
  store i32 %840, i32* %830, align 4
  br label %841

841:                                              ; preds = %839, %824, %819
  %842 = ptrtoint %"class.WTF::StringImpl"* %822 to i64
  %843 = bitcast %"class.WTF::String"* %820 to i64*
  %844 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %820, i64 0, i32 0, i32 0
  %845 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %844, align 8
  store i64 %842, i64* %843, align 8
  %846 = icmp eq %"class.WTF::StringImpl"* %845, null
  br i1 %846, label %860, label %847

847:                                              ; preds = %841
  %848 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %845, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %849 = load atomic i32, i32* %848 monotonic, align 4
  %850 = and i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %845, i64 0, i32 0
  %853 = load i32, i32* %852, align 4
  br i1 %851, label %854, label %856

854:                                              ; preds = %847
  %855 = add i32 %853, -1
  store i32 %855, i32* %852, align 4
  br label %856

856:                                              ; preds = %854, %847
  %857 = phi i32 [ %855, %854 ], [ %853, %847 ]
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %859, label %860

859:                                              ; preds = %856
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %845) #10
  br label %860

860:                                              ; preds = %841, %856, %859
  %861 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %862 = icmp eq %"class.blink::Settings"* %861, null
  br i1 %862, label %1011, label %863

863:                                              ; preds = %860
  %864 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %861, i64 0, i32 71
  %865 = bitcast [14 x i8]* %864 to i112*
  %866 = load i112, i112* %865, align 8
  %867 = and i112 %866, 4503599627370496
  %868 = icmp eq i112 %867, 0
  br i1 %868, label %1011, label %869

869:                                              ; preds = %863
  %870 = bitcast %"class.WTF::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %870) #10
  %871 = bitcast %"class.WTF::StringAppend.1978"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %871) #10
  %872 = bitcast %"class.WTF::StringAppend"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %872) #10
  %873 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* nonnull %33) #10
  %874 = icmp eq %"class.WTF::StringImpl"* %873, null
  br i1 %874, label %918, label %875

875:                                              ; preds = %869
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %877 = load atomic i32, i32* %876 monotonic, align 4
  %878 = and i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 0
  %881 = load i32, i32* %880, align 4
  br i1 %879, label %882, label %892

882:                                              ; preds = %875
  %883 = zext i32 %881 to i33
  %884 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %883, i33 1) #10
  %885 = extractvalue { i33, i1 } %884, 1
  %886 = extractvalue { i33, i1 } %884, 0
  %887 = icmp slt i33 %886, 0
  %888 = or i1 %885, %887
  br i1 %888, label %889, label %890, !prof !2

889:                                              ; preds = %882
  call void @llvm.trap() #10
  unreachable

890:                                              ; preds = %882
  %891 = trunc i33 %886 to i32
  store i32 %891, i32* %880, align 4
  br label %892

892:                                              ; preds = %890, %875
  %893 = phi i32 [ %891, %890 ], [ %881, %875 ]
  %894 = load atomic i32, i32* %876 monotonic, align 4
  %895 = and i32 %894, 2
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %907

897:                                              ; preds = %892
  %898 = zext i32 %893 to i33
  %899 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %898, i33 1) #10
  %900 = extractvalue { i33, i1 } %899, 1
  %901 = extractvalue { i33, i1 } %899, 0
  %902 = icmp slt i33 %901, 0
  %903 = or i1 %900, %902
  br i1 %903, label %904, label %905, !prof !2

904:                                              ; preds = %897
  call void @llvm.trap() #10
  unreachable

905:                                              ; preds = %897
  %906 = trunc i33 %901 to i32
  store i32 %906, i32* %880, align 4
  br label %907

907:                                              ; preds = %905, %892
  %908 = phi i32 [ %906, %905 ], [ %893, %892 ]
  %909 = load atomic i32, i32* %876 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %914

912:                                              ; preds = %907
  %913 = add i32 %908, -1
  store i32 %913, i32* %880, align 4
  br label %914

914:                                              ; preds = %912, %907
  %915 = phi i32 [ %913, %912 ], [ %908, %907 ]
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %917, label %918

917:                                              ; preds = %914
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %873) #10
  br label %918

918:                                              ; preds = %869, %914, %917
  %919 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %48, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8** %919, align 8
  %920 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %48, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %873, %"class.WTF::StringImpl"** %920, align 8
  %921 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* nonnull %33) #10
  call void @_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1978"* nonnull sret %47, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %48, %"class.WTF::StringImpl"* %921)
  %922 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev(%"class.WTF::StringAppend.1978"* nonnull %47)
  %923 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %922, %"class.WTF::StringImpl"** %923, align 8
  %924 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %925 = bitcast i8* %924 to %"class.blink::ConsoleMessage"*
  %926 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %925, i32 8, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %46, %"class.blink::SourceLocation"* %926) #10
  %927 = getelementptr inbounds i8, i8* %924, i64 -4
  %928 = bitcast i8* %927 to i16*
  %929 = load atomic i16, i16* %928 monotonic, align 2
  %930 = or i16 %929, 1
  store atomic i16 %930, i16* %928 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %925, i1 zeroext false) #10
  %931 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %923, align 8
  %932 = icmp eq %"class.WTF::StringImpl"* %931, null
  br i1 %932, label %946, label %933

933:                                              ; preds = %918
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %935 = load atomic i32, i32* %934 monotonic, align 4
  %936 = and i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 0
  %939 = load i32, i32* %938, align 4
  br i1 %937, label %940, label %942

940:                                              ; preds = %933
  %941 = add i32 %939, -1
  store i32 %941, i32* %938, align 4
  br label %942

942:                                              ; preds = %940, %933
  %943 = phi i32 [ %941, %940 ], [ %939, %933 ]
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %946

945:                                              ; preds = %942
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %931) #10
  br label %946

946:                                              ; preds = %918, %942, %945
  %947 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %47, i64 0, i32 1, i32 0, i32 0
  %948 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %947, align 8
  %949 = icmp eq %"class.WTF::StringImpl"* %948, null
  br i1 %949, label %963, label %950

950:                                              ; preds = %946
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %952 = load atomic i32, i32* %951 monotonic, align 4
  %953 = and i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 0
  %956 = load i32, i32* %955, align 4
  br i1 %954, label %957, label %959

957:                                              ; preds = %950
  %958 = add i32 %956, -1
  store i32 %958, i32* %955, align 4
  br label %959

959:                                              ; preds = %957, %950
  %960 = phi i32 [ %958, %957 ], [ %956, %950 ]
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %963

962:                                              ; preds = %959
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %948) #10
  br label %963

963:                                              ; preds = %962, %959, %946
  %964 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %47, i64 0, i32 0, i32 1, i32 0, i32 0
  %965 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %964, align 8
  %966 = icmp eq %"class.WTF::StringImpl"* %965, null
  br i1 %966, label %980, label %967

967:                                              ; preds = %963
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %969 = load atomic i32, i32* %968 monotonic, align 4
  %970 = and i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 0
  %973 = load i32, i32* %972, align 4
  br i1 %971, label %974, label %976

974:                                              ; preds = %967
  %975 = add i32 %973, -1
  store i32 %975, i32* %972, align 4
  br label %976

976:                                              ; preds = %974, %967
  %977 = phi i32 [ %975, %974 ], [ %973, %967 ]
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %980

979:                                              ; preds = %976
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %965) #10
  br label %980

980:                                              ; preds = %963, %976, %979
  %981 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %920, align 8
  %982 = icmp eq %"class.WTF::StringImpl"* %981, null
  br i1 %982, label %996, label %983

983:                                              ; preds = %980
  %984 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %981, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %985 = load atomic i32, i32* %984 monotonic, align 4
  %986 = and i32 %985, 2
  %987 = icmp eq i32 %986, 0
  %988 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %981, i64 0, i32 0
  %989 = load i32, i32* %988, align 4
  br i1 %987, label %990, label %992

990:                                              ; preds = %983
  %991 = add i32 %989, -1
  store i32 %991, i32* %988, align 4
  br label %992

992:                                              ; preds = %990, %983
  %993 = phi i32 [ %991, %990 ], [ %989, %983 ]
  %994 = icmp eq i32 %993, 0
  br i1 %994, label %995, label %996

995:                                              ; preds = %992
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %981) #10
  br label %996

996:                                              ; preds = %980, %992, %995
  br i1 %874, label %1010, label %997

997:                                              ; preds = %996
  %998 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %999 = load atomic i32, i32* %998 monotonic, align 4
  %1000 = and i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 0
  %1003 = load i32, i32* %1002, align 4
  br i1 %1001, label %1004, label %1006

1004:                                             ; preds = %997
  %1005 = add i32 %1003, -1
  store i32 %1005, i32* %1002, align 4
  br label %1006

1006:                                             ; preds = %1004, %997
  %1007 = phi i32 [ %1005, %1004 ], [ %1003, %997 ]
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1010

1009:                                             ; preds = %1006
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %873) #10
  br label %1010

1010:                                             ; preds = %996, %1006, %1009
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %872) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %871) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %870) #10
  br label %1011

1011:                                             ; preds = %863, %1010, %860
  %1012 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %42, i64 0, i32 2, i32 0, i32 2
  store i8 1, i8* %1012, align 8
  %1013 = call %"class.blink::Resource"* @_ZN5blink13PreloadHelper12StartPreloadENS_12ResourceTypeERNS_15FetchParametersERNS_8DocumentE(i8 zeroext %61, %"class.blink::FetchParameters"* nonnull dereferenceable(1344) %42, %"class.blink::Document"* dereferenceable(2848) %1)
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %675) #10
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %630) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %619) #10
  br label %1014

1014:                                             ; preds = %139, %1011, %617, %551, %125
  %1015 = phi %"class.blink::Resource"* [ null, %125 ], [ null, %551 ], [ %1013, %1011 ], [ null, %617 ], [ null, %139 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %62) #10
  br label %1016

1016:                                             ; preds = %51, %6, %1014
  %1017 = phi %"class.blink::Resource"* [ %1015, %1014 ], [ null, %6 ], [ null, %51 ]
  ret %"class.blink::Resource"* %1017
}

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::MediaValues"* @_ZN5blink12_GLOBAL__N_117CreateMediaValuesERNS_8DocumentEPKNS_19ViewportDescriptionE(%"class.blink::Document"* dereferenceable(2848), %"struct.blink::ViewportDescription"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = alloca %"struct.blink::PageScaleConstraints", align 4
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #10
  %8 = tail call %"class.blink::MediaValues"* @_ZN5blink11MediaValues26CreateDynamicIfFrameExistsEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %7) #10
  %9 = icmp eq %"struct.blink::ViewportDescription"* %1, null
  br i1 %9, label %52, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = bitcast %"class.blink::MediaValues"* %8 to i32 (%"class.blink::MediaValues"*)***
  %15 = load i32 (%"class.blink::MediaValues"*)**, i32 (%"class.blink::MediaValues"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::MediaValues"*)*, i32 (%"class.blink::MediaValues"*)** %15, i64 8
  %17 = load i32 (%"class.blink::MediaValues"*)*, i32 (%"class.blink::MediaValues"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::MediaValues"* %8) #10
  %19 = sitofp i32 %18 to float
  %20 = load i32 (%"class.blink::MediaValues"*)**, i32 (%"class.blink::MediaValues"*)*** %14, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::MediaValues"*)*, i32 (%"class.blink::MediaValues"*)** %20, i64 9
  %22 = load i32 (%"class.blink::MediaValues"*)*, i32 (%"class.blink::MediaValues"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::MediaValues"* %8) #10
  %24 = sitofp i32 %23 to float
  store float %19, float* %12, align 4
  store float %24, float* %13, align 4
  %25 = bitcast %"struct.blink::PageScaleConstraints"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints"* %4, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints"* %4, i64 0, i32 0, i32 1
  %28 = bitcast i64* %5 to i8*
  %29 = bitcast %"struct.blink::PageScaleConstraints"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -1, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 153, i32 0, i32 0
  %31 = load %"class.blink::ViewportData"*, %"class.blink::ViewportData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ViewportData", %"class.blink::ViewportData"* %31, i64 0, i32 3
  %33 = bitcast %"class.blink::Length"* %32 to i64*
  %34 = load i64, i64* %33, align 4, !noalias !4
  store i64 %34, i64* %5, align 8, !alias.scope !4
  %35 = and i64 %34, 280375465082880
  %36 = icmp eq i64 %35, 8796093022208
  br i1 %36, label %37, label %38

37:                                               ; preds = %10
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #10
  br label %38

38:                                               ; preds = %10, %37
  call void @_ZNK5blink19ViewportDescription7ResolveERKNS_9FloatSizeERKNS_6LengthE(%"struct.blink::PageScaleConstraints"* nonnull sret %4, %"struct.blink::ViewportDescription"* nonnull %1, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, %"class.blink::Length"* nonnull dereferenceable(8) %6) #10
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #10
  br label %43

43:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %44 = load float, float* %26, align 4
  %45 = fpext float %44 to double
  %46 = load float, float* %27, align 4
  %47 = fpext float %46 to double
  %48 = bitcast %"class.blink::MediaValues"* %8 to void (%"class.blink::MediaValues"*, double, double)***
  %49 = load void (%"class.blink::MediaValues"*, double, double)**, void (%"class.blink::MediaValues"*, double, double)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::MediaValues"*, double, double)*, void (%"class.blink::MediaValues"*, double, double)** %49, i64 24
  %51 = load void (%"class.blink::MediaValues"*, double, double)*, void (%"class.blink::MediaValues"*, double, double)** %50, align 8
  call void %51(%"class.blink::MediaValues"* %8, double %45, double %47) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %52

52:                                               ; preds = %2, %43
  ret %"class.blink::MediaValues"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_118GetBestFitImageURLERKNS_8DocumentERKNS_4KURLEPNS_11MediaValuesES6_RKN3WTF6StringESC_(%"class.blink::KURL"* noalias sret, %"class.blink::Document"* dereferenceable(2848), %"class.blink::KURL"* dereferenceable(112), %"class.blink::MediaValues"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %8 = alloca %"class.blink::SizesAttributeParser", align 8
  %9 = alloca %"class.blink::ImageCandidate", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = bitcast %"class.blink::SizesAttributeParser"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  %13 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  call void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"* nonnull %8, %"class.blink::MediaValues"* %3, %"class.WTF::String"* dereferenceable(8) %6, %"class.blink::ExecutionContext"* %13) #10
  %14 = call float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"* nonnull %8) #10
  %15 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %8, i64 0, i32 0, i32 0
  %16 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %15, align 8
  %17 = icmp eq %"class.blink::MediaQuerySet"* %16, null
  br i1 %17, label %53, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %53

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %16, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::Vector.67", %"class.WTF::Vector.67"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.70"*, %"class.std::__1::unique_ptr.70"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr.70"* %26, null
  br i1 %27, label %51, label %28, !prof !3

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::unique_ptr.70"* %26 to i8*
  %30 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %16, i64 0, i32 1, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %49, label %33, !prof !2

33:                                               ; preds = %28
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %26, i64 %34
  br label %36

36:                                               ; preds = %43, %33
  %37 = phi %"class.std::__1::unique_ptr.70"* [ %44, %43 ], [ %26, %33 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %38, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %38, align 8
  %40 = icmp eq %"class.blink::MediaQuery"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %39) #10
  %42 = bitcast %"class.blink::MediaQuery"* %39 to i8*
  call void @free(i8* %42) #10
  br label %43

43:                                               ; preds = %41, %36
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %37, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.70"* %44, %35
  br i1 %45, label %46, label %36

46:                                               ; preds = %43
  store i32 0, i32* %30, align 4
  %47 = bitcast %"class.WTF::Vector.67"* %24 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %28
  %50 = phi i8* [ %48, %46 ], [ %29, %28 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  br label %51

51:                                               ; preds = %49, %23
  %52 = bitcast %"class.blink::MediaQuerySet"* %16 to i8*
  call void @free(i8* %52) #10
  br label %53

53:                                               ; preds = %7, %18, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  %54 = bitcast %"class.blink::ImageCandidate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54) #10
  %55 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 2
  %57 = bitcast %"class.blink::ImageCandidate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %56, align 8
  %58 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 3
  %59 = bitcast %"class.blink::MediaValues"* %3 to float (%"class.blink::MediaValues"*)***
  %60 = bitcast i32* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 -86, i64 12, i1 false)
  %61 = load float (%"class.blink::MediaValues"*)**, float (%"class.blink::MediaValues"*)*** %59, align 8
  %62 = getelementptr inbounds float (%"class.blink::MediaValues"*)*, float (%"class.blink::MediaValues"*)** %61, i64 10
  %63 = load float (%"class.blink::MediaValues"*)*, float (%"class.blink::MediaValues"*)** %62, align 8
  %64 = call float %63(%"class.blink::MediaValues"* %3) #10
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 4
  call void @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringES3_PNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %9, float %64, float %14, %"class.WTF::String"* dereferenceable(8) %65, %"class.WTF::String"* dereferenceable(8) %5, %"class.blink::Document"* null) #10
  %66 = call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %2) #10
  br i1 %66, label %87, label %67

67:                                               ; preds = %53
  %68 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  %69 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 1
  %70 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* %69) #10
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %2, %"class.WTF::String"* nonnull dereferenceable(8) %11) #10
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %107, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %107

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #10
  br label %107

87:                                               ; preds = %53
  %88 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %89 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 1
  %90 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* %89) #10
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %91, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret %0, %"class.blink::Document"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10) #10
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %106, %103, %87, %67, %83, %86
  %108 = phi i8* [ %68, %86 ], [ %68, %83 ], [ %68, %67 ], [ %88, %87 ], [ %88, %103 ], [ %88, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #10
  br label %124

124:                                              ; preds = %107, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54) #10
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_112MediaMatchesERKN3WTF6StringEPNS_11MediaValuesEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::MediaValues"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 {
  %4 = alloca %"class.blink::MediaQueryEvaluator", align 8
  %5 = tail call %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8) %0, %"class.blink::ExecutionContext"* %2) #10
  %6 = bitcast %"class.blink::MediaQueryEvaluator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = bitcast %"class.blink::MediaQueryEvaluator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"* nonnull %4, %"class.blink::MediaValues"* dereferenceable(8) %1) #10
  %8 = call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* nonnull %4, %"class.blink::MediaQuerySet"* dereferenceable(24) %5, %"class.WTF::Vector.83"* null, %"class.WTF::Vector.83"* null) #10
  call void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %9 = icmp eq %"class.blink::MediaQuerySet"* %5, null
  br i1 %9, label %45, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #10
  %12 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %45

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.67", %"class.WTF::Vector.67"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.70"*, %"class.std::__1::unique_ptr.70"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.70"* %18, null
  br i1 %19, label %43, label %20, !prof !3

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr.70"* %18 to i8*
  %22 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25, !prof !2

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %18, i64 %26
  br label %28

28:                                               ; preds = %35, %25
  %29 = phi %"class.std::__1::unique_ptr.70"* [ %36, %35 ], [ %18, %25 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %30, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %30, align 8
  %32 = icmp eq %"class.blink::MediaQuery"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %31) #10
  %34 = bitcast %"class.blink::MediaQuery"* %31 to i8*
  call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %29, i64 1
  %37 = icmp eq %"class.std::__1::unique_ptr.70"* %36, %27
  br i1 %37, label %38, label %28

38:                                               ; preds = %35
  store i32 0, i32* %22, align 4
  %39 = bitcast %"class.WTF::Vector.67"* %16 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %20
  %42 = phi i8* [ %40, %38 ], [ %21, %20 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  br label %43

43:                                               ; preds = %15, %41
  %44 = bitcast %"class.blink::MediaQuerySet"* %5 to i8*
  call void @free(i8* %44) #10
  br label %45

45:                                               ; preds = %3, %10, %43
  ret i1 %8
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare i32 @_ZN5blink15ResourceFetcher23DetermineRequestContextENS_12ResourceTypeENS0_10IsImageSetE(i8 zeroext, i32) local_unnamed_addr #2

declare i32 @_ZN5blink15ResourceFetcher27DetermineRequestDestinationENS_12ResourceTypeE(i8 zeroext) local_unnamed_addr #2

declare i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #2

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"*, %"class.blink::SecurityOrigin"*, i32) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::HashSet.1380"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1978"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %3, %9, %24
  %27 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #10
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %47

45:                                               ; preds = %26
  %46 = inttoptr i64 %5 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_(%"class.WTF::StringAppend.1978"* %0, i8* %46, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* null)
  br label %60

47:                                               ; preds = %28, %43
  %48 = inttoptr i64 %5 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_(%"class.WTF::StringAppend.1978"* %0, i8* %48, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* nonnull %2)
  %49 = load atomic i32, i32* %29 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %60

60:                                               ; preds = %45, %56, %59
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev(%"class.WTF::StringAppend.1978"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #10
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %15 = select i1 %13, %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"* %12
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  br i1 %19, label %63, label %20

20:                                               ; preds = %1
  %21 = icmp eq %"class.WTF::StringImpl"* %6, null
  %22 = select i1 %21, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %63, label %27

27:                                               ; preds = %20
  %28 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %29 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv(%"class.WTF::StringAppend.1978"* %0)
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %29, i8** nonnull dereferenceable(8) %3) #10
  %31 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPh(%"class.WTF::StringAppend.1978"* %0, i8* %31)
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %99, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %33
  %41 = zext i32 %39 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #10
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %40
  call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %33, %48
  %51 = phi i32 [ %49, %48 ], [ %39, %33 ]
  %52 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %53 = load atomic i32, i32* %34 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %58 = add i32 %51, -1
  store i32 %58, i32* %57, align 4
  br label %59

59:                                               ; preds = %56, %50
  %60 = phi i32 [ %58, %56 ], [ %51, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %99

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %99

63:                                               ; preds = %20, %1
  %64 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %65 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv(%"class.WTF::StringAppend.1978"* %0)
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %65, i16** nonnull dereferenceable(8) %4) #10
  %67 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPDs(%"class.WTF::StringAppend.1978"* %0, i16* %67)
  %68 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %68, label %99, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %86

76:                                               ; preds = %69
  %77 = zext i32 %75 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #10
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %76
  call void @llvm.trap() #10
  unreachable

84:                                               ; preds = %76
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %74, align 4
  br label %86

86:                                               ; preds = %69, %84
  %87 = phi i32 [ %85, %84 ], [ %75, %69 ]
  %88 = ptrtoint %"class.WTF::StringImpl"* %66 to i64
  %89 = load atomic i32, i32* %70 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %94 = add i32 %87, -1
  store i32 %94, i32* %93, align 4
  br label %95

95:                                               ; preds = %92, %86
  %96 = phi i32 [ %94, %92 ], [ %87, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #10
  br label %99

99:                                               ; preds = %98, %95, %63, %62, %59, %27
  %100 = phi i8* [ %28, %27 ], [ %28, %59 ], [ %28, %62 ], [ %64, %63 ], [ %64, %95 ], [ %64, %98 ]
  %101 = phi i64 [ 0, %27 ], [ %52, %59 ], [ %52, %62 ], [ 0, %63 ], [ %88, %95 ], [ %88, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #10
  %102 = inttoptr i64 %101 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %102
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Resource"* @_ZN5blink13PreloadHelper12StartPreloadENS_12ResourceTypeERNS_15FetchParametersERNS_8DocumentE(i8 zeroext, %"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::Document"* nocapture readonly dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %4, align 8
  switch i8 %0, label %43 [
    i8 1, label %6
    i8 3, label %9
    i8 2, label %14
    i8 4, label %17
    i8 10, label %22
    i8 11, label %22
    i8 9, label %29
    i8 5, label %36
  ]

6:                                                ; preds = %3
  %7 = tail call %"class.blink::ImageResource"* @_ZN5blink13ImageResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5) #10
  %8 = getelementptr inbounds %"class.blink::ImageResource", %"class.blink::ImageResource"* %7, i64 0, i32 0
  br label %43

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0, i32 15
  store i32 23, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0, i32 16
  store i32 13, i32* %11, align 4
  %12 = tail call %"class.blink::ScriptResource"* @_ZN5blink14ScriptResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientENS0_16StreamingAllowedE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5, %"class.blink::ResourceClient"* null, i32 1) #10
  %13 = getelementptr inbounds %"class.blink::ScriptResource", %"class.blink::ScriptResource"* %12, i64 0, i32 0, i32 0
  br label %43

14:                                               ; preds = %3
  %15 = tail call %"class.blink::CSSStyleSheetResource"* @_ZN5blink21CSSStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5, %"class.blink::ResourceClient"* null) #10
  %16 = getelementptr inbounds %"class.blink::CSSStyleSheetResource", %"class.blink::CSSStyleSheetResource"* %15, i64 0, i32 0, i32 0
  br label %43

17:                                               ; preds = %3
  %18 = tail call %"class.blink::FontResource"* @_ZN5blink12FontResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_18FontResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5, %"class.blink::FontResourceClient"* null) #10
  %19 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 187, i32 0, i32 0
  %21 = load %"class.blink::FontPreloadManager"*, %"class.blink::FontPreloadManager"** %20, align 8
  tail call void @_ZN5blink18FontPreloadManager21FontPreloadingStartedEPNS_12FontResourceE(%"class.blink::FontPreloadManager"* %21, %"class.blink::FontResource"* %18) #10
  br label %43

22:                                               ; preds = %3, %3
  %23 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0, i32 8
  %24 = load i16, i16* %23, align 8
  %25 = or i16 %24, 64
  store i16 %25, i16* %23, align 8
  %26 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 2, i32 1
  store i8 1, i8* %26, align 8
  %27 = tail call %"class.blink::RawResource"* @_ZN5blink11RawResource10FetchMediaERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5, %"class.blink::RawResourceClient"* null) #10
  %28 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %27, i64 0, i32 0
  br label %43

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0, i32 8
  %31 = load i16, i16* %30, align 8
  %32 = or i16 %31, 64
  store i16 %32, i16* %30, align 8
  %33 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 2, i32 1
  store i8 1, i8* %33, align 8
  %34 = tail call %"class.blink::RawResource"* @_ZN5blink11RawResource14FetchTextTrackERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5, %"class.blink::RawResourceClient"* null) #10
  %35 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %34, i64 0, i32 0
  br label %43

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0, i32 8
  %38 = load i16, i16* %37, align 8
  %39 = or i16 %38, 64
  store i16 %39, i16* %37, align 8
  %40 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 2, i32 1
  store i8 1, i8* %40, align 8
  %41 = tail call %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %5, %"class.blink::RawResourceClient"* null) #10
  %42 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %41, i64 0, i32 0
  br label %43

43:                                               ; preds = %3, %36, %29, %22, %17, %14, %9, %6
  %44 = phi %"class.blink::Resource"* [ null, %3 ], [ %42, %36 ], [ %35, %29 ], [ %28, %22 ], [ %19, %17 ], [ %16, %14 ], [ %13, %9 ], [ %8, %6 ]
  ret %"class.blink::Resource"* %44
}

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13PreloadHelper21ModulePreloadIfNeededERKNS_18LinkLoadParametersERNS_8DocumentEPKNS_19ViewportDescriptionEPNS_18SingleModuleClientE(%"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.blink::Document"* dereferenceable(2848), %"struct.blink::ViewportDescription"*, %"class.blink::SingleModuleClient"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to { i64, i64 }*
  %15 = alloca %"class.blink::Persistent.2033", align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::HashSet.1380", align 8
  %21 = alloca %"class.blink::SubresourceIntegrity::ReportInfo", align 8
  %22 = alloca %"class.blink::ModuleScriptFetchRequest", align 8
  %23 = alloca %"class.blink::ScriptFetchOptions", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca i64, align 8
  %26 = bitcast i64* %25 to %"class.WTF::TextPosition"*
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %"class.WTF::StringAppend.1978", align 8
  %30 = alloca %"class.WTF::StringAppend", align 8
  %31 = tail call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %1) #10
  %32 = icmp eq %"class.blink::DocumentLoader"* %31, null
  br i1 %32, label %715, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 0, i32 1
  %35 = load i16, i16* %34, align 4
  %36 = and i16 %35, 512
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %715, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %40 = bitcast %"class.blink::UseCounter"* %39 to void (%"class.blink::UseCounter"*, i32)***
  %41 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %41, i64 3
  %43 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %42, align 8
  tail call void %43(%"class.blink::UseCounter"* %39, i32 2232) #10
  %44 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  %45 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %44) #10
  br i1 %45, label %46, label %50

46:                                               ; preds = %38
  %47 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #10
  store i32 8, i32* %7, align 4
  %48 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #10
  store i32 2, i32* %8, align 4
  %49 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA45_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, [45 x i8]* nonnull dereferenceable(45) @.str.17) #10
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %49, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #10
  br label %715

50:                                               ; preds = %38
  %51 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %52 = icmp eq %"class.blink::ExecutionContext"* %51, null
  %53 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %51, i64 -1, i32 8
  %54 = bitcast i32* %53 to %"class.blink::LocalDOMWindow"*
  %55 = select i1 %52, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %54
  %56 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %55, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.blink::Frame"** %56 to %"class.blink::LocalFrame"**
  %58 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %57, align 8
  %59 = tail call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %58) #10
  %60 = tail call %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"* %59) #10
  %61 = icmp eq %"class.blink::Modulator"* %60, null
  br i1 %61, label %715, label %62

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %246, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %246, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %72, align 8
  %73 = load i32, i32* %67, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %73, i32* %77, align 8
  %78 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #10
  %79 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %80 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 6, i32* %82, align 8
  %83 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  br i1 %83, label %246, label %84

84:                                               ; preds = %70
  %85 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #10
  %86 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #10
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %132, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %106

96:                                               ; preds = %89
  %97 = zext i32 %95 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #10
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %96
  call void @llvm.trap() #10
  unreachable

104:                                              ; preds = %96
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %94, align 4
  br label %106

106:                                              ; preds = %104, %89
  %107 = phi i32 [ %105, %104 ], [ %95, %89 ]
  %108 = load atomic i32, i32* %90 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %121

111:                                              ; preds = %106
  %112 = zext i32 %107 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #10
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %111
  call void @llvm.trap() #10
  unreachable

119:                                              ; preds = %111
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %94, align 4
  br label %121

121:                                              ; preds = %119, %106
  %122 = phi i32 [ %120, %119 ], [ %107, %106 ]
  %123 = load atomic i32, i32* %90 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  %127 = add i32 %122, -1
  store i32 %127, i32* %94, align 4
  br label %128

128:                                              ; preds = %126, %121
  %129 = phi i32 [ %127, %126 ], [ %122, %121 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #10
  br label %132

132:                                              ; preds = %84, %128, %131
  %133 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.18, i64 0, i64 0), i8** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %134, align 8
  %135 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  %137 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %138 = bitcast i8* %137 to %"class.blink::ConsoleMessage"*
  %139 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %138, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::SourceLocation"* %139) #10
  %140 = getelementptr inbounds i8, i8* %137, i64 -4
  %141 = bitcast i8* %140 to i16*
  %142 = load atomic i16, i16* %141 monotonic, align 2
  %143 = or i16 %142, 1
  store atomic i16 %143, i16* %141 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %138, i1 zeroext false) #10
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %132
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #10
  br label %159

159:                                              ; preds = %132, %155, %158
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #10
  br label %175

175:                                              ; preds = %159, %171, %174
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #10
  %176 = icmp eq %"class.blink::SingleModuleClient"* %3, null
  br i1 %176, label %715, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.blink::Modulator"* %60 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)***
  %179 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %179, i64 5
  %181 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %180, align 8
  %182 = call %"class.base::SingleThreadTaskRunner"* %181(%"class.blink::Modulator"* nonnull %60) #10
  %183 = bitcast %"class.base::SingleThreadTaskRunner"* %182 to %"class.base::TaskRunner"*
  %184 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %184) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.20, i64 0, i64 0), i32 428) #10
  %185 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #10
  store <2 x i64> <i64 33, i64 0>, <2 x i64>* %13, align 16
  %186 = bitcast %"class.blink::Persistent.2033"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #10
  %187 = getelementptr inbounds %"class.blink::Persistent.2033", %"class.blink::Persistent.2033"* %15, i64 0, i32 0
  %188 = getelementptr inbounds %"class.blink::Persistent.2033", %"class.blink::Persistent.2033"* %15, i64 0, i32 0, i32 0
  store %"class.blink::SingleModuleClient"* %3, %"class.blink::SingleModuleClient"** %188, align 8, !alias.scope !7
  %189 = getelementptr inbounds %"class.blink::Persistent.2033", %"class.blink::Persistent.2033"* %15, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %189, align 8, !alias.scope !7
  %190 = icmp eq %"class.blink::SingleModuleClient"* %3, inttoptr (i64 -1 to %"class.blink::SingleModuleClient"*)
  br i1 %190, label %217, label %191

191:                                              ; preds = %177
  %192 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !7
  %193 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %192, i64 0, i32 1
  %194 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %193) #10, !noalias !7
  %195 = icmp eq i8* %194, null
  br i1 %195, label %196, label %198, !prof !2

196:                                              ; preds = %191
  %197 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %193, i8* %197) #10
  br label %198

198:                                              ; preds = %196, %191
  %199 = phi i8* [ %197, %196 ], [ %194, %191 ]
  %200 = bitcast i8* %199 to %"class.blink::ThreadState"**
  %201 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %200, align 8, !noalias !7
  %202 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %201, i64 0, i32 3, i32 0, i32 0, i32 0
  %203 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %202, align 8, !noalias !7
  %204 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %204, align 8, !noalias !7
  %206 = icmp eq %"class.blink::PersistentNode"* %205, null
  br i1 %206, label %207, label %210, !prof !2

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %203, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %208) #10
  %209 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %204, align 8
  br label %210

210:                                              ; preds = %207, %198
  %211 = phi %"class.blink::PersistentNode"* [ %209, %207 ], [ %205, %198 ]
  %212 = bitcast %"class.blink::PersistentNode"* %211 to i64*
  %213 = load i64, i64* %212, align 8, !noalias !7
  %214 = bitcast %"class.blink::PersistentRegion"* %203 to i64*
  store i64 %213, i64* %214, align 8, !noalias !7
  %215 = bitcast %"class.blink::PersistentNode"* %211 to %"class.blink::PersistentBase.2034"**
  store %"class.blink::PersistentBase.2034"* %187, %"class.blink::PersistentBase.2034"** %215, align 8, !noalias !7
  %216 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %211, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %216, align 8
  store %"class.blink::PersistentNode"* %211, %"class.blink::PersistentNode"** %189, align 8, !alias.scope !7
  br label %217

217:                                              ; preds = %177, %210
  %218 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #10
  store i8* null, i8** %16, align 8
  %219 = call i8* @_Znwm(i64 72) #11, !noalias !10
  %220 = bitcast i8* %219 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EEDnEEC2IS7_JS9_DnEEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %220, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %14, %"class.blink::Persistent.2033"* nonnull dereferenceable(16) %15, i8** nonnull dereferenceable(8) %16) #10, !noalias !10
  %221 = bitcast %"class.base::OnceCallback"* %12 to i8**
  store i8* %219, i8** %221, align 8, !alias.scope !10
  %222 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %183, %"class.base::Location"* nonnull dereferenceable(32) %11, %"class.base::OnceCallback"* nonnull %12) #10
  %223 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %223) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #10
  %224 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %189, align 8
  %225 = icmp eq %"class.blink::PersistentNode"* %224, null
  br i1 %225, label %245, label %226

226:                                              ; preds = %217
  %227 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %228 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %227, i64 0, i32 1
  %229 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %228) #10
  %230 = icmp eq i8* %229, null
  br i1 %230, label %231, label %233, !prof !2

231:                                              ; preds = %226
  %232 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %228, i8* %232) #10
  br label %233

233:                                              ; preds = %231, %226
  %234 = phi i8* [ %232, %231 ], [ %229, %226 ]
  %235 = bitcast i8* %234 to %"class.blink::ThreadState"**
  %236 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %235, align 8
  %237 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %236, i64 0, i32 3, i32 0, i32 0, i32 0
  %238 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %237, align 8
  %239 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %189, align 8
  %240 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %238, i64 0, i32 0, i32 0
  %241 = bitcast %"class.blink::PersistentRegion"* %238 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.blink::PersistentNode"* %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %239, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %244, align 8
  store %"class.blink::PersistentNode"* %239, %"class.blink::PersistentNode"** %240, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %189, align 8
  br label %245

245:                                              ; preds = %217, %233
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #10
  br label %715

246:                                              ; preds = %70, %62, %66
  %247 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %44) #10
  br i1 %247, label %318, label %248

248:                                              ; preds = %246
  %249 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249) #10
  store i32 8, i32* %17, align 4
  %250 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #10
  store i32 2, i32* %18, align 4
  %251 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %251) #10
  %252 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9, i32 4, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %298, label %255

255:                                              ; preds = %248
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %272

262:                                              ; preds = %255
  %263 = zext i32 %261 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #10
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !2

269:                                              ; preds = %262
  call void @llvm.trap() #10
  unreachable

270:                                              ; preds = %262
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %260, align 4
  br label %272

272:                                              ; preds = %270, %255
  %273 = phi i32 [ %271, %270 ], [ %261, %255 ]
  %274 = load atomic i32, i32* %256 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %287

277:                                              ; preds = %272
  %278 = zext i32 %273 to i33
  %279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %278, i33 1) #10
  %280 = extractvalue { i33, i1 } %279, 1
  %281 = extractvalue { i33, i1 } %279, 0
  %282 = icmp slt i33 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %284, label %285, !prof !2

284:                                              ; preds = %277
  call void @llvm.trap() #10
  unreachable

285:                                              ; preds = %277
  %286 = trunc i33 %281 to i32
  store i32 %286, i32* %260, align 4
  br label %287

287:                                              ; preds = %285, %272
  %288 = phi i32 [ %286, %285 ], [ %273, %272 ]
  %289 = load atomic i32, i32* %256 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %287
  %293 = add i32 %288, -1
  store i32 %293, i32* %260, align 4
  br label %294

294:                                              ; preds = %292, %287
  %295 = phi i32 [ %293, %292 ], [ %288, %287 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #10
  br label %298

298:                                              ; preds = %248, %294, %297
  %299 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21, i64 0, i64 0), i8** %299, align 8
  %300 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %253, %"class.WTF::StringImpl"** %300, align 8
  %301 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %18, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %19) #10
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %301, i1 zeroext false) #10
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #10
  br label %317

317:                                              ; preds = %298, %313, %316
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %251) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249) #10
  br label %715

318:                                              ; preds = %246
  %319 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 4
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %319, i64 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %331, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %323
  %328 = call fastcc %"class.blink::MediaValues"* @_ZN5blink12_GLOBAL__N_117CreateMediaValuesERNS_8DocumentEPKNS_19ViewportDescriptionE(%"class.blink::Document"* dereferenceable(2848) %1, %"struct.blink::ViewportDescription"* %2)
  %329 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %330 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_112MediaMatchesERKN3WTF6StringEPNS_11MediaValuesEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8) %319, %"class.blink::MediaValues"* %328, %"class.blink::ExecutionContext"* %329)
  br i1 %330, label %331, label %715

331:                                              ; preds = %318, %327, %323
  %332 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 1
  %333 = load i32, i32* %332, align 8
  %334 = call i32 @_ZN5blink12ScriptLoader27ModuleScriptCredentialsModeENS_25CrossOriginAttributeValueE(i32 %333) #10
  %335 = bitcast %"class.WTF::HashSet.1380"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %335) #10
  %336 = getelementptr inbounds %"class.WTF::HashSet.1380", %"class.WTF::HashSet.1380"* %20, i64 0, i32 0, i32 0
  %337 = getelementptr inbounds %"class.WTF::HashSet.1380", %"class.WTF::HashSet.1380"* %20, i64 0, i32 0, i32 1
  %338 = getelementptr inbounds %"class.WTF::HashSet.1380", %"class.WTF::HashSet.1380"* %20, i64 0, i32 0, i32 2
  %339 = bitcast %"class.WTF::HashSet.1380"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 0, i64 20, i1 false) #10
  %340 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 6
  %341 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %340, i64 0, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %404, label %344

344:                                              ; preds = %331
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %404, label %348

348:                                              ; preds = %344
  %349 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %350 = call i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %349) #10
  %351 = bitcast %"class.blink::SubresourceIntegrity::ReportInfo"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %351) #10
  %352 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %353 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  %354 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %21, i64 0, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %351, i8 0, i64 32, i1 false) #10
  %355 = call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEEPNS0_10ReportInfoE(%"class.WTF::String"* dereferenceable(8) %340, i32 %350, %"class.WTF::HashSet.1380"* nonnull dereferenceable(24) %20, %"class.blink::SubresourceIntegrity::ReportInfo"* nonnull %21) #10
  %356 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  call void @_ZN5blink26SubresourceIntegrityHelper8DoReportERNS_16ExecutionContextERKNS_20SubresourceIntegrity10ReportInfoE(%"class.blink::ExecutionContext"* dereferenceable(376) %356, %"class.blink::SubresourceIntegrity::ReportInfo"* nonnull dereferenceable(32) %21) #10
  %357 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %21, i64 0, i32 1
  %358 = getelementptr inbounds %"class.WTF::Vector.466", %"class.WTF::Vector.466"* %357, i64 0, i32 0, i32 0, i32 0
  %359 = load %"class.WTF::String"*, %"class.WTF::String"** %358, align 8
  %360 = icmp eq %"class.WTF::String"* %359, null
  br i1 %360, label %394, label %361, !prof !3

361:                                              ; preds = %348
  %362 = bitcast %"class.WTF::String"* %359 to i8*
  %363 = load i32, i32* %354, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %392, label %365, !prof !2

365:                                              ; preds = %361
  %366 = zext i32 %363 to i64
  %367 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %359, i64 %366
  br label %368

368:                                              ; preds = %386, %365
  %369 = phi %"class.WTF::String"* [ %387, %386 ], [ %359, %365 ]
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %369, i64 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #10
  br label %386

386:                                              ; preds = %385, %382, %368
  %387 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %369, i64 1
  %388 = icmp eq %"class.WTF::String"* %387, %367
  br i1 %388, label %389, label %368

389:                                              ; preds = %386
  store i32 0, i32* %354, align 4
  %390 = bitcast %"class.WTF::Vector.466"* %357 to i8**
  %391 = load i8*, i8** %390, align 8
  br label %392

392:                                              ; preds = %389, %361
  %393 = phi i8* [ %391, %389 ], [ %362, %361 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %393) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %358, align 8
  br label %394

394:                                              ; preds = %392, %348
  %395 = load i32*, i32** %352, align 8
  %396 = icmp eq i32* %395, null
  %397 = bitcast i32* %395 to i8*
  br i1 %396, label %403, label %398, !prof !3

398:                                              ; preds = %394
  %399 = load i32, i32* %353, align 4
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %402, label %401, !prof !2

401:                                              ; preds = %398
  store i32 0, i32* %353, align 4
  br label %402

402:                                              ; preds = %401, %398
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %397) #10
  store i32* null, i32** %352, align 8
  br label %403

403:                                              ; preds = %394, %402
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %351) #10
  br label %404

404:                                              ; preds = %331, %403, %344
  %405 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %22, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %405) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %405, i8 -86, i64 208, i1 false)
  %406 = bitcast %"class.blink::ScriptFetchOptions"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %406) #10
  %407 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 8
  %408 = load i32, i32* %407, align 8
  %409 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 5, i32 0, i32 0
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %410, %"class.WTF::StringImpl"** %411, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %412, label %430, label %413

413:                                              ; preds = %404
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %430

418:                                              ; preds = %413
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  %421 = zext i32 %420 to i33
  %422 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %421, i33 1) #10
  %423 = extractvalue { i33, i1 } %422, 1
  %424 = extractvalue { i33, i1 } %422, 0
  %425 = icmp slt i33 %424, 0
  %426 = or i1 %423, %425
  br i1 %426, label %427, label %428, !prof !2

427:                                              ; preds = %418
  call void @llvm.trap() #10
  unreachable

428:                                              ; preds = %418
  %429 = trunc i33 %424 to i32
  store i32 %429, i32* %419, align 4
  br label %430

430:                                              ; preds = %428, %413, %404
  %431 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 1, i32 0
  %432 = bitcast %"class.WTF::HashTable.1381"* %431 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %432, i8 0, i64 20, i1 false) #10
  %433 = load i32, i32* %338, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %482, label %435

435:                                              ; preds = %430
  call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1381"* %431, i32 %433) #10
  %436 = load i32, i32* %338, align 4
  %437 = icmp eq i32 %436, 0
  %438 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %336, align 8
  %439 = load i32, i32* %337, align 8
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %438, i64 %440
  br i1 %437, label %482, label %442

442:                                              ; preds = %435
  %443 = icmp eq i32 %439, 0
  br i1 %443, label %458, label %444

444:                                              ; preds = %442, %455
  %445 = phi %"struct.std::__1::pair.1384"* [ %456, %455 ], [ %438, %442 ]
  %446 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %445, i64 0, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  %449 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %445, i64 0, i32 1
  %450 = load i8, i8* %449, align 1
  %451 = icmp eq i8 %450, 0
  %452 = and i1 %448, %451
  %453 = icmp eq %"class.WTF::StringImpl"* %447, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %454 = or i1 %453, %452
  br i1 %454, label %455, label %458

455:                                              ; preds = %444
  %456 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %445, i64 1
  %457 = icmp eq %"struct.std::__1::pair.1384"* %456, %441
  br i1 %457, label %482, label %444

458:                                              ; preds = %444, %442
  %459 = phi %"struct.std::__1::pair.1384"* [ %438, %442 ], [ %445, %444 ]
  %460 = icmp eq %"struct.std::__1::pair.1384"* %459, %441
  br i1 %460, label %482, label %461

461:                                              ; preds = %458, %480
  %462 = phi %"struct.std::__1::pair.1384"* [ %467, %480 ], [ %459, %458 ]
  %463 = call { %"struct.std::__1::pair.1384"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.1381"* %431, %"struct.std::__1::pair.1384"* dereferenceable(16) %462, %"struct.std::__1::pair.1384"* dereferenceable(16) %462) #10
  %464 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %462, i64 1
  %465 = icmp eq %"struct.std::__1::pair.1384"* %464, %441
  br i1 %465, label %482, label %466

466:                                              ; preds = %461, %477
  %467 = phi %"struct.std::__1::pair.1384"* [ %478, %477 ], [ %464, %461 ]
  %468 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %467, i64 0, i32 0, i32 0, i32 0
  %469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8
  %470 = icmp eq %"class.WTF::StringImpl"* %469, null
  %471 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %467, i64 0, i32 1
  %472 = load i8, i8* %471, align 1
  %473 = icmp eq i8 %472, 0
  %474 = and i1 %470, %473
  %475 = icmp eq %"class.WTF::StringImpl"* %469, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %476 = or i1 %475, %474
  br i1 %476, label %477, label %480

477:                                              ; preds = %466
  %478 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %467, i64 1
  %479 = icmp eq %"struct.std::__1::pair.1384"* %478, %441
  br i1 %479, label %482, label %466

480:                                              ; preds = %466
  %481 = icmp eq %"struct.std::__1::pair.1384"* %467, %441
  br i1 %481, label %482, label %461

482:                                              ; preds = %455, %461, %480, %477, %430, %435, %458
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %484 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %483, %"class.WTF::StringImpl"** %484, align 8
  %485 = icmp eq %"class.WTF::StringImpl"* %483, null
  br i1 %485, label %503, label %486

486:                                              ; preds = %482
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = and i32 %488, 2
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %503

491:                                              ; preds = %486
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 0
  %493 = load i32, i32* %492, align 4
  %494 = zext i32 %493 to i33
  %495 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %494, i33 1) #10
  %496 = extractvalue { i33, i1 } %495, 1
  %497 = extractvalue { i33, i1 } %495, 0
  %498 = icmp slt i33 %497, 0
  %499 = or i1 %496, %498
  br i1 %499, label %500, label %501, !prof !2

500:                                              ; preds = %491
  call void @llvm.trap() #10
  unreachable

501:                                              ; preds = %491
  %502 = trunc i33 %497 to i32
  store i32 %502, i32* %492, align 4
  br label %503

503:                                              ; preds = %482, %486, %501
  %504 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 3
  store i8 1, i8* %504, align 8
  %505 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 5
  store i32 %334, i32* %505, align 4
  %506 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 6
  store i32 %408, i32* %506, align 8
  %507 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 7
  store i32 1, i32* %507, align 4
  %508 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 8
  store i8 2, i8* %508, align 8
  %509 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %23, i64 0, i32 9, i32 0
  store i8 0, i8* %509, align 1
  %510 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510) #10
  %511 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %511, align 8
  %512 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %512) #10
  store i64 0, i64* %25, align 8
  call void @_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE(%"class.blink::ModuleScriptFetchRequest"* nonnull %22, %"class.blink::KURL"* dereferenceable(112) %44, i32 1, i32 23, i32 13, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %23, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %26)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %512) #10
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %528, label %515

515:                                              ; preds = %503
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  br i1 %519, label %522, label %524

522:                                              ; preds = %515
  %523 = add i32 %521, -1
  store i32 %523, i32* %520, align 4
  br label %524

524:                                              ; preds = %522, %515
  %525 = phi i32 [ %523, %522 ], [ %521, %515 ]
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %513) #10
  br label %528

528:                                              ; preds = %503, %524, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #10
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %406) #10
  %529 = call %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"* %55) #10
  %530 = bitcast %"class.blink::Modulator"* %60 to void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)***
  %531 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)**, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*** %530, align 8
  %532 = getelementptr inbounds void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)** %531, i64 10
  %533 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)** %532, align 8
  call void %533(%"class.blink::Modulator"* nonnull %60, %"class.blink::ModuleScriptFetchRequest"* nonnull dereferenceable(208) %22, %"class.blink::ResourceFetcher"* %529, i32 1, i32 0, %"class.blink::SingleModuleClient"* %3) #10
  %534 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %535 = icmp eq %"class.blink::Settings"* %534, null
  br i1 %535, label %661, label %536

536:                                              ; preds = %528
  %537 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %534, i64 0, i32 71
  %538 = bitcast [14 x i8]* %537 to i112*
  %539 = load i112, i112* %538, align 8
  %540 = and i112 %539, 4503599627370496
  %541 = icmp eq i112 %540, 0
  br i1 %541, label %661, label %542

542:                                              ; preds = %536
  %543 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %543) #10
  store i32 8, i32* %27, align 4
  %544 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %544) #10
  store i32 0, i32* %28, align 4
  %545 = bitcast %"class.WTF::StringAppend.1978"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #10
  %546 = bitcast %"class.WTF::StringAppend"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %546) #10
  %547 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %44) #10
  %548 = icmp eq %"class.WTF::StringImpl"* %547, null
  br i1 %548, label %592, label %549

549:                                              ; preds = %542
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %551 = load atomic i32, i32* %550 monotonic, align 4
  %552 = and i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 0
  %555 = load i32, i32* %554, align 4
  br i1 %553, label %556, label %566

556:                                              ; preds = %549
  %557 = zext i32 %555 to i33
  %558 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %557, i33 1) #10
  %559 = extractvalue { i33, i1 } %558, 1
  %560 = extractvalue { i33, i1 } %558, 0
  %561 = icmp slt i33 %560, 0
  %562 = or i1 %559, %561
  br i1 %562, label %563, label %564, !prof !2

563:                                              ; preds = %556
  call void @llvm.trap() #10
  unreachable

564:                                              ; preds = %556
  %565 = trunc i33 %560 to i32
  store i32 %565, i32* %554, align 4
  br label %566

566:                                              ; preds = %564, %549
  %567 = phi i32 [ %565, %564 ], [ %555, %549 ]
  %568 = load atomic i32, i32* %550 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %581

571:                                              ; preds = %566
  %572 = zext i32 %567 to i33
  %573 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %572, i33 1) #10
  %574 = extractvalue { i33, i1 } %573, 1
  %575 = extractvalue { i33, i1 } %573, 0
  %576 = icmp slt i33 %575, 0
  %577 = or i1 %574, %576
  br i1 %577, label %578, label %579, !prof !2

578:                                              ; preds = %571
  call void @llvm.trap() #10
  unreachable

579:                                              ; preds = %571
  %580 = trunc i33 %575 to i32
  store i32 %580, i32* %554, align 4
  br label %581

581:                                              ; preds = %579, %566
  %582 = phi i32 [ %580, %579 ], [ %567, %566 ]
  %583 = load atomic i32, i32* %550 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %588

586:                                              ; preds = %581
  %587 = add i32 %582, -1
  store i32 %587, i32* %554, align 4
  br label %588

588:                                              ; preds = %586, %581
  %589 = phi i32 [ %587, %586 ], [ %582, %581 ]
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %592

591:                                              ; preds = %588
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %547) #10
  br label %592

592:                                              ; preds = %542, %588, %591
  %593 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %30, i64 0, i32 0
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0), i8** %593, align 8
  %594 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %30, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %547, %"class.WTF::StringImpl"** %594, align 8
  %595 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %44) #10
  call void @_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1978"* nonnull sret %29, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %30, %"class.WTF::StringImpl"* %595)
  %596 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESB_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %27, i32* nonnull dereferenceable(4) %28, %"class.WTF::StringAppend.1978"* nonnull dereferenceable(24) %29) #10
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %1, %"class.blink::ConsoleMessage"* %596, i1 zeroext false) #10
  %597 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %29, i64 0, i32 1, i32 0, i32 0
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %599 = icmp eq %"class.WTF::StringImpl"* %598, null
  br i1 %599, label %613, label %600

600:                                              ; preds = %592
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  br i1 %604, label %607, label %609

607:                                              ; preds = %600
  %608 = add i32 %606, -1
  store i32 %608, i32* %605, align 4
  br label %609

609:                                              ; preds = %607, %600
  %610 = phi i32 [ %608, %607 ], [ %606, %600 ]
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %598) #10
  br label %613

613:                                              ; preds = %612, %609, %592
  %614 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #10
  br label %630

630:                                              ; preds = %613, %626, %629
  %631 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %594, align 8
  %632 = icmp eq %"class.WTF::StringImpl"* %631, null
  br i1 %632, label %646, label %633

633:                                              ; preds = %630
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load atomic i32, i32* %634 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  br i1 %637, label %640, label %642

640:                                              ; preds = %633
  %641 = add i32 %639, -1
  store i32 %641, i32* %638, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %641, %640 ], [ %639, %633 ]
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %642
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %631) #10
  br label %646

646:                                              ; preds = %630, %642, %645
  br i1 %548, label %660, label %647

647:                                              ; preds = %646
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  br i1 %651, label %654, label %656

654:                                              ; preds = %647
  %655 = add i32 %653, -1
  store i32 %655, i32* %652, align 4
  br label %656

656:                                              ; preds = %654, %647
  %657 = phi i32 [ %655, %654 ], [ %653, %647 ]
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %660

659:                                              ; preds = %656
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %547) #10
  br label %660

660:                                              ; preds = %646, %656, %659
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %546) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %545) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %544) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %543) #10
  br label %661

661:                                              ; preds = %536, %528, %660
  %662 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %22, i64 0, i32 6, i32 0, i32 0
  %663 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %662, align 8
  %664 = icmp eq %"class.WTF::StringImpl"* %663, null
  br i1 %664, label %678, label %665

665:                                              ; preds = %661
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load atomic i32, i32* %666 monotonic, align 4
  %668 = and i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 0
  %671 = load i32, i32* %670, align 4
  br i1 %669, label %672, label %674

672:                                              ; preds = %665
  %673 = add i32 %671, -1
  store i32 %673, i32* %670, align 4
  br label %674

674:                                              ; preds = %672, %665
  %675 = phi i32 [ %673, %672 ], [ %671, %665 ]
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %678

677:                                              ; preds = %674
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %663) #10
  br label %678

678:                                              ; preds = %661, %674, %677
  %679 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %22, i64 0, i32 5
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* %679) #10
  %680 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %22, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %680) #10
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %405) #10
  %681 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %336, align 8
  %682 = icmp eq %"struct.std::__1::pair.1384"* %681, null
  br i1 %682, label %714, label %683, !prof !3

683:                                              ; preds = %678
  %684 = load i32, i32* %337, align 8
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %712, label %686

686:                                              ; preds = %683
  %687 = zext i32 %684 to i64
  br label %688

688:                                              ; preds = %709, %686
  %689 = phi i64 [ 0, %686 ], [ %710, %709 ]
  %690 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %681, i64 %689
  %691 = bitcast %"struct.std::__1::pair.1384"* %690 to i8**
  %692 = load i8*, i8** %691, align 8
  %693 = bitcast i8* %692 to %"class.WTF::StringImpl"*
  %694 = ptrtoint i8* %692 to i64
  switch i64 %694, label %695 [
    i64 -1, label %709
    i64 0, label %709
  ]

695:                                              ; preds = %688
  %696 = getelementptr inbounds i8, i8* %692, i64 8
  %697 = bitcast i8* %696 to i32*
  %698 = load atomic i32, i32* %697 monotonic, align 4
  %699 = and i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = bitcast i8* %692 to i32*
  %702 = load i32, i32* %701, align 4
  br i1 %700, label %703, label %705

703:                                              ; preds = %695
  %704 = add i32 %702, -1
  store i32 %704, i32* %701, align 4
  br label %705

705:                                              ; preds = %703, %695
  %706 = phi i32 [ %704, %703 ], [ %702, %695 ]
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %708, label %709

708:                                              ; preds = %705
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %693) #10
  br label %709

709:                                              ; preds = %708, %705, %688, %688
  %710 = add nuw nsw i64 %689, 1
  %711 = icmp eq i64 %710, %687
  br i1 %711, label %712, label %688

712:                                              ; preds = %709, %683
  %713 = bitcast %"struct.std::__1::pair.1384"* %681 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %713) #10
  store %"struct.std::__1::pair.1384"* null, %"struct.std::__1::pair.1384"** %336, align 8
  br label %714

714:                                              ; preds = %678, %712
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %335) #10
  br label %715

715:                                              ; preds = %33, %50, %175, %245, %327, %714, %317, %4, %46
  ret void
}

declare %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare i32 @_ZN5blink12ScriptLoader27ModuleScriptCredentialsModeENS_25CrossOriginAttributeValueE(i32) local_unnamed_addr #2

declare i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEEPNS0_10ReportInfoE(%"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::HashSet.1380"* dereferenceable(24), %"class.blink::SubresourceIntegrity::ReportInfo"*) local_unnamed_addr #2

declare void @_ZN5blink26SubresourceIntegrityHelper8DoReportERNS_16ExecutionContextERKNS_20SubresourceIntegrity10ReportInfoE(%"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::SubresourceIntegrity::ReportInfo"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ModuleScriptFetchRequestC2ERKNS_4KURLENS_10ModuleTypeENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsERKN3WTF6StringERKNSD_12TextPositionE(%"class.blink::ModuleScriptFetchRequest"*, %"class.blink::KURL"* dereferenceable(112), i32, i32, i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64), %"class.WTF::String"* dereferenceable(8), %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %9, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %10 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 2
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 3
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #10
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  tail call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %8
  %35 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.1381"* %35, %"class.WTF::HashTable.1381"* dereferenceable(24) %36) #10
  %37 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  %59 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 5, i32 3
  %60 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %5, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 18, i1 false) #10
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %58, %65, %80
  %83 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %0, i64 0, i32 7
  %84 = bitcast %"class.WTF::TextPosition"* %7 to i64*
  %85 = bitcast %"class.WTF::TextPosition"* %83 to i64*
  %86 = load i64, i64* %84, align 4
  store i64 %86, i64* %85, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.1384"* %20, null
  br i1 %21, label %54, label %22, !prof !3

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %49, %26
  %29 = phi i64 [ 0, %26 ], [ %50, %49 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %20, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1384"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"*
  %34 = ptrtoint i8* %32 to i64
  switch i64 %34, label %35 [
    i64 -1, label %49
    i64 0, label %49
  ]

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %32 to i32*
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %35
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #10
  br label %49

49:                                               ; preds = %48, %45, %28, %28
  %50 = add nuw nsw i64 %29, 1
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %52, label %28

52:                                               ; preds = %49, %22
  %53 = bitcast %"struct.std::__1::pair.1384"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  store %"struct.std::__1::pair.1384"* null, %"struct.std::__1::pair.1384"** %19, align 8
  br label %54

54:                                               ; preds = %18, %52
  %55 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

declare %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Resource"* @_ZN5blink13PreloadHelper16PrefetchIfNeededERKNS_18LinkLoadParametersERNS_8DocumentE(%"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ResourceRequest", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %6 = alloca %"class.blink::FetchParameters", align 8
  %7 = alloca %"class.blink::ResourceRequest", align 8
  %8 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 0, i32 1
  %9 = load i16, i16* %8, align 4
  %10 = and i16 %9, 16
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %134, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  %14 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %13) #10
  br i1 %14, label %15, label %134

15:                                               ; preds = %12
  %16 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #10
  %17 = icmp eq %"class.blink::LocalFrame"* %16, null
  br i1 %17, label %134, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %20 = bitcast %"class.blink::UseCounter"* %19 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* %19, i32 917) #10
  %24 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %13) #10
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %30, align 8
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %31, i64* %32, align 8
  br label %40

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  br label %40

40:                                               ; preds = %29, %33
  %41 = phi i32 [ %36, %33 ], [ 0, %29 ]
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %41, i32* %42, align 8
  %43 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [9 x i8]* nonnull dereferenceable(9) @.str.23)
  br i1 %43, label %44, label %52

44:                                               ; preds = %40
  %45 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %46 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %45) #10
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %46, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !17
  %49 = icmp eq i8 %48, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 47
  store i8 1, i8* %51, align 4
  br label %53

52:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %53

53:                                               ; preds = %44, %52, %50
  %54 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #10
  %56 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 8
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 23
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 7
  %60 = call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %59) #10
  %61 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 18
  store i32 %60, i32* %61, align 4
  %62 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features23kPrefetchPrivacyChangesE) #10
  br i1 %62, label %63, label %65

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 20
  store i32 1, i32* %64, align 4
  store i32 3, i32* %58, align 8
  br label %65

65:                                               ; preds = %63, %53
  %66 = bitcast %"struct.blink::ResourceLoaderOptions"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %66) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 112, i1 false)
  %67 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %68 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %67) #10
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %5, %"class.blink::DOMWrapperWorld"* %68) #10
  %69 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names5kLinkE, align 8
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %88, %73, %65
  %91 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %92 = bitcast %"struct.blink::ResourceLoaderOptions"* %5 to i64*
  %93 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #10
  br label %109

109:                                              ; preds = %90, %105, %108
  %110 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %110) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1379", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, [6 x i8], %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.374 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.375, %class.scoped_refptr.375, %class.scoped_refptr.375, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1292, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1314", %"class.WTF::Vector.466", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.295 } } } }, { { { { i8, [7 x i8], %union.anon.295 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.1323 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1323 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1329" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1330 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1379", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1380", i8, i8, [6 x i8], %class.scoped_refptr.717, %class.scoped_refptr.1385, %class.scoped_refptr.1387 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink13PreloadHelper16PrefetchIfNeededERKNS_18LinkLoadParametersERNS_8DocumentE.link_fetch_params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %7, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %3) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %6, %"class.blink::ResourceRequest"* nonnull %7, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %5) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %7) #10
  %111 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %116 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %115) #10
  %117 = load i32, i32* %111, align 8
  call void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"* nonnull %6, %"class.blink::SecurityOrigin"* %116, i32 %117) #10
  br label %118

118:                                              ; preds = %109, %114
  %119 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase58is_signed_exchange_prefetch_cache_for_navigations_enabled_E, align 1, !range !17
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %118
  %122 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %123 = icmp eq %"class.blink::ExecutionContext"* %122, null
  %124 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %122, i64 0, i32 4
  %125 = select i1 %123, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %124
  %126 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase40SignedExchangeSubresourcePrefetchEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %125) #10
  %127 = zext i1 %126 to i8
  br label %128

128:                                              ; preds = %118, %121
  %129 = phi i8 [ 1, %118 ], [ %127, %121 ]
  %130 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 0, i32 0, i32 44
  store i8 %129, i8* %130, align 1
  %131 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 14, i32 0, i32 0
  %132 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %131, align 8
  %133 = call %"class.blink::Resource"* @_ZN5blink20LinkPrefetchResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %6, %"class.blink::ResourceFetcher"* %132) #10
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %110) #10
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %66) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %24) #10
  br label %134

134:                                              ; preds = %2, %12, %15, %128
  %135 = phi %"class.blink::Resource"* [ %133, %128 ], [ null, %15 ], [ null, %12 ], [ null, %2 ]
  ret %"class.blink::Resource"* %135
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase40SignedExchangeSubresourcePrefetchEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare %"class.blink::Resource"* @_ZN5blink20LinkPrefetchResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13PreloadHelper19LoadLinksFromHeaderERKN3WTF6StringERKNS_4KURLERNS_10LocalFrameEPNS_8DocumentENS0_16CanLoadResourcesENS0_18MediaPreloadPolicyEPKNS_19ViewportDescriptionENSt3__110unique_ptrINS_35AlternateSignedExchangeResourceInfoENSH_14default_deleteISJ_EEEEPKN4base16UnguessableTokenE(%"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::LocalFrame"* dereferenceable(1176), %"class.blink::Document"*, i32, i32, %"struct.blink::ViewportDescription"*, i64, %"class.base::UnguessableToken"* readonly) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::LinkHeaderSet", align 8
  %11 = alloca %"struct.blink::LinkLoadParameters", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.blink::LinkRelAttribute", align 4
  %15 = alloca %"class.WTF::String", align 8
  %16 = inttoptr i64 %7 to %"class.blink::AlternateSignedExchangeResourceInfo"*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %247, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %247, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::LinkHeaderSet"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.blink::LinkHeaderSet", %"class.blink::LinkHeaderSet"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::LinkHeaderSet", %"class.blink::LinkHeaderSet"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = bitcast %"class.blink::LinkHeaderSet"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13LinkHeaderSetC1ERKN3WTF6StringE(%"class.blink::LinkHeaderSet"* nonnull %10, %"class.WTF::String"* dereferenceable(8) %0) #10
  %29 = load %"class.blink::LinkHeader"*, %"class.blink::LinkHeader"** %26, align 8
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %64, label %34

34:                                               ; preds = %24
  %35 = bitcast %"struct.blink::LinkLoadParameters"* %11 to i8*
  %36 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 0, i32 1
  %37 = icmp ne %"class.base::UnguessableToken"* %8, null
  %38 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast %"class.base::UnguessableToken"* %39 to i8*
  %41 = bitcast %"class.base::UnguessableToken"* %8 to i8*
  %42 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %union.anon* %42 to i8*
  %44 = icmp eq i64 %7, 0
  %45 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 9
  %47 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 3
  %48 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 10
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %11, i64 0, i32 11
  %52 = icmp eq %"class.blink::Document"* %3, null
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %3, i64 0, i32 2
  %54 = icmp eq %"class.blink::UseCounter"* %53, null
  %55 = or i1 %52, %54
  %56 = bitcast %"class.blink::UseCounter"* %53 to void (%"class.blink::UseCounter"*, i32)***
  %57 = bitcast %"class.blink::LinkRelAttribute"* %14 to i8*
  %58 = bitcast %"class.WTF::String"* %15 to i8*
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %60 = icmp eq i32 %4, 0
  %61 = icmp eq i32 %4, 1
  br label %84

62:                                               ; preds = %244
  %63 = load %"class.blink::LinkHeader"*, %"class.blink::LinkHeader"** %26, align 8
  br label %64

64:                                               ; preds = %62, %24
  %65 = phi %"class.blink::LinkHeader"* [ %63, %62 ], [ %29, %24 ]
  %66 = icmp eq %"class.blink::LinkHeader"* %65, null
  br i1 %66, label %83, label %67, !prof !3

67:                                               ; preds = %64
  %68 = bitcast %"class.blink::LinkHeader"* %65 to i8*
  %69 = load i32, i32* %27, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %81, label %71, !prof !2

71:                                               ; preds = %67
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %65, i64 %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi %"class.blink::LinkHeader"* [ %76, %74 ], [ %65, %71 ]
  call void @_ZN5blink10LinkHeaderD2Ev(%"class.blink::LinkHeader"* %75) #10
  %76 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %75, i64 1
  %77 = icmp eq %"class.blink::LinkHeader"* %76, %73
  br i1 %77, label %78, label %74

78:                                               ; preds = %74
  store i32 0, i32* %27, align 4
  %79 = bitcast %"class.blink::LinkHeaderSet"* %10 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %67
  %82 = phi i8* [ %80, %78 ], [ %68, %67 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #10
  store %"class.blink::LinkHeader"* null, %"class.blink::LinkHeader"** %26, align 8
  br label %83

83:                                               ; preds = %64, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  br label %247

84:                                               ; preds = %34, %244
  %85 = phi %"class.blink::LinkHeader"* [ %29, %34 ], [ %245, %244 ]
  %86 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 14
  %87 = load i8, i8* %86, align 8, !range !17
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %244, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %244, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %244, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %244, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %244, label %105

105:                                              ; preds = %101
  switch i32 %5, label %154 [
    i32 2, label %106
    i32 1, label %130
  ]

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 4, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %154

114:                                              ; preds = %110, %106
  %115 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 8, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %154

122:                                              ; preds = %118, %114
  %123 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 9, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %244, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %244, label %154

130:                                              ; preds = %105
  %131 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 4, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %244

138:                                              ; preds = %134, %130
  %139 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 8, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %244

146:                                              ; preds = %142, %138
  %147 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 0, i32 9, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %244

154:                                              ; preds = %126, %150, %146, %110, %118, %105
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 224, i1 false)
  call void @_ZN5blink18LinkLoadParametersC1ERKNS_10LinkHeaderERKNS_4KURLE(%"struct.blink::LinkLoadParameters"* nonnull %11, %"class.blink::LinkHeader"* dereferenceable(128) %85, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %155 = load i16, i16* %36, align 4
  %156 = and i16 %155, 32
  %157 = icmp ne i16 %156, 0
  %158 = and i1 %37, %157
  br i1 %158, label %159, label %164

159:                                              ; preds = %154
  %160 = load i8, i8* %38, align 8, !range !17
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %41, i64 16, i1 false) #10
  br label %164

163:                                              ; preds = %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %41, i64 16, i1 false) #10
  store i8 1, i8* %38, align 8
  br label %164

164:                                              ; preds = %163, %162, %154
  %165 = phi i8 [ 0, %154 ], [ 1, %162 ], [ 1, %163 ]
  %166 = xor i1 %157, true
  %167 = or i1 %44, %166
  br i1 %167, label %205, label %168

168:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %45) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %46) #10
  %169 = call i16 @_ZN5blink13PreloadHelper30GetResourceTypeFromAsAttributeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %47)
  %170 = trunc i16 %169 to i8
  %171 = icmp ne i8 %170, 0
  %172 = and i16 %169, -256
  %173 = icmp eq i16 %172, 256
  %174 = and i1 %171, %173
  br i1 %174, label %175, label %185

175:                                              ; preds = %168
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %178
  %183 = call fastcc %"class.blink::MediaValues"* @_ZN5blink12_GLOBAL__N_117CreateMediaValuesERNS_8DocumentEPKNS_19ViewportDescriptionE(%"class.blink::Document"* dereferenceable(2848) %3, %"struct.blink::ViewportDescription"* %6)
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %50) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_118GetBestFitImageURLERKNS_8DocumentERKNS_4KURLEPNS_11MediaValuesES6_RKN3WTF6StringESC_(%"class.blink::KURL"* nonnull sret %13, %"class.blink::Document"* dereferenceable(2848) %3, %"class.blink::KURL"* dereferenceable(112) %1, %"class.blink::MediaValues"* %183, %"class.blink::KURL"* dereferenceable(112) %46, %"class.WTF::String"* dereferenceable(8) %48, %"class.WTF::String"* dereferenceable(8) %51)
  %184 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* nonnull dereferenceable(112) %13) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %50) #10
  br label %185

185:                                              ; preds = %168, %175, %178, %182
  %186 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %2) #10
  %187 = call %"class.blink::Navigator"* @_ZN5blink14LocalDOMWindow9navigatorEv(%"class.blink::LocalDOMWindow"* %186) #10
  %188 = getelementptr inbounds %"class.blink::Navigator", %"class.blink::Navigator"* %187, i64 0, i32 0, i32 2
  %189 = bitcast %"class.blink::NavigatorLanguage.base"* %188 to %"class.blink::NavigatorLanguage"*
  %190 = call dereferenceable(16) %"class.WTF::Vector.466"* @_ZN5blink17NavigatorLanguage9languagesEv(%"class.blink::NavigatorLanguage"* %189) #10
  %191 = call %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLEN4absl8optionalINS_12ResourceTypeEEERKN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"* nonnull %16, %"class.blink::KURL"* nonnull dereferenceable(112) %12, i16 %169, %"class.WTF::Vector.466"* dereferenceable(16) %190) #10
  %192 = icmp eq %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %191, null
  br i1 %192, label %203, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %191, i64 0, i32 1
  %195 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %194) #10
  br i1 %195, label %196, label %203

196:                                              ; preds = %193
  br i1 %55, label %201, label %197

197:                                              ; preds = %196
  %198 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %56, align 8
  %199 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %198, i64 3
  %200 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %199, align 8
  call void %200(%"class.blink::UseCounter"* nonnull %53, i32 2953) #10
  br label %201

201:                                              ; preds = %196, %197
  %202 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %46, %"class.blink::KURL"* dereferenceable(112) %194) #10
  br label %203

203:                                              ; preds = %185, %201, %193
  %204 = phi i8 [ 1, %201 ], [ %165, %193 ], [ %165, %185 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %45) #10
  br label %205

205:                                              ; preds = %164, %203
  %206 = phi i8 [ %204, %203 ], [ %165, %164 ]
  %207 = and i8 %206, 1
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %205
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i64 8) #10
  call void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"* nonnull %14, %"class.WTF::String"* nonnull dereferenceable(8) %15) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 4 %57, i64 6, i1 false)
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #10
  br label %225

225:                                              ; preds = %209, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  br label %226

226:                                              ; preds = %205, %225
  %227 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %46, %"class.blink::KURL"* dereferenceable(112) %1) #10
  br i1 %227, label %243, label %228

228:                                              ; preds = %226
  br i1 %60, label %230, label %229

229:                                              ; preds = %228
  call void @_ZN5blink13PreloadHelper19DnsPrefetchIfNeededERKNS_18LinkLoadParametersEPNS_8DocumentEPNS_10LocalFrameENS0_10LinkCallerE(%"struct.blink::LinkLoadParameters"* nonnull dereferenceable(224) %11, %"class.blink::Document"* %3, %"class.blink::LocalFrame"* %2, i32 0)
  call void @_ZN5blink13PreloadHelper18PreconnectIfNeededERKNS_18LinkLoadParametersEPNS_8DocumentEPNS_10LocalFrameENS0_10LinkCallerE(%"struct.blink::LinkLoadParameters"* nonnull dereferenceable(224) %11, %"class.blink::Document"* %3, %"class.blink::LocalFrame"* %2, i32 0)
  br i1 %61, label %233, label %230

230:                                              ; preds = %228, %229
  %231 = call %"class.blink::Resource"* @_ZN5blink13PreloadHelper15PreloadIfNeededERKNS_18LinkLoadParametersERNS_8DocumentERKNS_4KURLENS0_10LinkCallerEPKNS_19ViewportDescriptionENS_17ParserDispositionE(%"struct.blink::LinkLoadParameters"* nonnull dereferenceable(224) %11, %"class.blink::Document"* dereferenceable(2848) %3, %"class.blink::KURL"* dereferenceable(112) %1, i32 0, %"struct.blink::ViewportDescription"* %6, i8 zeroext 1)
  %232 = call %"class.blink::Resource"* @_ZN5blink13PreloadHelper16PrefetchIfNeededERKNS_18LinkLoadParametersERNS_8DocumentE(%"struct.blink::LinkLoadParameters"* nonnull dereferenceable(224) %11, %"class.blink::Document"* dereferenceable(2848) %3)
  call void @_ZN5blink13PreloadHelper21ModulePreloadIfNeededERKNS_18LinkLoadParametersERNS_8DocumentEPKNS_19ViewportDescriptionEPNS_18SingleModuleClientE(%"struct.blink::LinkLoadParameters"* nonnull dereferenceable(224) %11, %"class.blink::Document"* dereferenceable(2848) %3, %"struct.blink::ViewportDescription"* %6, %"class.blink::SingleModuleClient"* null)
  br label %233

233:                                              ; preds = %229, %230
  %234 = load i16, i16* %36, align 4
  %235 = and i16 %234, 1024
  %236 = icmp eq i16 %235, 0
  %237 = or i1 %236, %55
  br i1 %237, label %242, label %238

238:                                              ; preds = %233
  %239 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %56, align 8
  %240 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %239, i64 3
  %241 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %240, align 8
  call void %241(%"class.blink::UseCounter"* nonnull %53, i32 1690) #10
  br label %242

242:                                              ; preds = %233, %238
  call void @_ZN5blink18LinkLoadParametersD2Ev(%"struct.blink::LinkLoadParameters"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %35) #10
  br label %244

243:                                              ; preds = %226
  call void @_ZN5blink18LinkLoadParametersD2Ev(%"struct.blink::LinkLoadParameters"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %35) #10
  br label %244

244:                                              ; preds = %126, %150, %84, %134, %142, %122, %97, %89, %243, %93, %101, %242
  %245 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %85, i64 1
  %246 = icmp eq %"class.blink::LinkHeader"* %245, %32
  br i1 %246, label %62, label %84

247:                                              ; preds = %9, %20, %83
  %248 = icmp eq i64 %7, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %247
  call void @_ZN5blink35AlternateSignedExchangeResourceInfoD2Ev(%"class.blink::AlternateSignedExchangeResourceInfo"* nonnull %16) #10
  %250 = inttoptr i64 %7 to i8*
  call void @_ZdlPv(i8* %250) #11
  br label %251

251:                                              ; preds = %247, %249
  ret void
}

declare void @_ZN5blink13LinkHeaderSetC1ERKN3WTF6StringE(%"class.blink::LinkHeaderSet"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink18LinkLoadParametersC1ERKNS_10LinkHeaderERKNS_4KURLE(%"struct.blink::LinkLoadParameters"*, %"class.blink::LinkHeader"* dereferenceable(128), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* @_ZNK5blink35AlternateSignedExchangeResourceInfo17FindMatchingEntryERKNS_4KURLEN4absl8optionalINS_12ResourceTypeEEERKN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEE(%"class.blink::AlternateSignedExchangeResourceInfo"*, %"class.blink::KURL"* dereferenceable(112), i16, %"class.WTF::Vector.466"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::Navigator"* @_ZN5blink14LocalDOMWindow9navigatorEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.WTF::Vector.466"* @_ZN5blink17NavigatorLanguage9languagesEv(%"class.blink::NavigatorLanguage"*) local_unnamed_addr #2

declare void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18LinkLoadParametersD2Ev(%"struct.blink::LinkLoadParameters"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 10, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %36) #10
  %37 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 7, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %35, %49, %52
  %54 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 6, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %70

70:                                               ; preds = %53, %66, %69
  %71 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 5, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #10
  br label %87

87:                                               ; preds = %70, %83, %86
  %88 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 4, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #10
  br label %104

104:                                              ; preds = %87, %100, %103
  %105 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 3, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %104, %117, %120
  %122 = getelementptr inbounds %"struct.blink::LinkLoadParameters", %"struct.blink::LinkLoadParameters"* %0, i64 0, i32 2, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %138

138:                                              ; preds = %121, %134, %137
  ret void
}

declare %"class.blink::ImageResource"* @_ZN5blink13ImageResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*) local_unnamed_addr #2

declare %"class.blink::ScriptResource"* @_ZN5blink14ScriptResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientENS0_16StreamingAllowedE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::ResourceClient"*, i32) local_unnamed_addr #2

declare %"class.blink::CSSStyleSheetResource"* @_ZN5blink21CSSStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::ResourceClient"*) local_unnamed_addr #2

declare %"class.blink::FontResource"* @_ZN5blink12FontResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_18FontResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::FontResourceClient"*) local_unnamed_addr #2

declare void @_ZN5blink18FontPreloadManager21FontPreloadingStartedEPNS_12FontResourceE(%"class.blink::FontPreloadManager"*, %"class.blink::FontResource"*) local_unnamed_addr #2

declare %"class.blink::RawResource"* @_ZN5blink11RawResource10FetchMediaERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #2

declare %"class.blink::RawResource"* @_ZN5blink11RawResource14FetchTextTrackERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #2

declare %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #2

declare void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::MediaValues"* @_ZN5blink11MediaValues26CreateDynamicIfFrameExistsEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink19ViewportDescription7ResolveERKNS_9FloatSizeERKNS_6LengthE(%"struct.blink::PageScaleConstraints"* sret, %"struct.blink::ViewportDescription"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"*, %"class.blink::MediaValues"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) unnamed_addr #2

declare float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"*) local_unnamed_addr #2

declare void @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringES3_PNS_8DocumentE(%"class.blink::ImageCandidate"* sret, float, float, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaValues"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaQuerySet"* dereferenceable(24), %"class.WTF::Vector.83"*, %"class.WTF::Vector.83"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink16MIMETypeRegistry32IsSupportedImagePrefixedMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedStyleSheetMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry23IsSupportedFontMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry24IsSupportedMediaMIMETypeERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry28IsSupportedTextTrackMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.1381"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_(%"class.WTF::HashTable.1381"*, %"class.WTF::HashTable.1381"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.1381", align 8
  %4 = bitcast %"class.WTF::HashTable.1381"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %3, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashTable.1381"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.1381"* nonnull %3, %"class.WTF::HashTable.1381"* dereferenceable(24) %1)
  %10 = bitcast %"class.WTF::HashTable.1381"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::HashTable.1381"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  store atomic i64 %13, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %6, align 8
  store i32 %16, i32* %14, align 4
  store i32 %15, i32* %6, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %7, align 4
  store i32 %19, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %20 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2147483647
  %23 = load i32, i32* %8, align 8
  %24 = and i32 %23, 2147483647
  %25 = and i32 %21, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %20, align 8
  %27 = and i32 %23, -2147483648
  %28 = or i32 %27, %22
  store i32 %28, i32* %8, align 8
  %29 = inttoptr i64 %13 to %"struct.std::__1::pair.1384"*
  %30 = icmp eq i64 %13, 0
  br i1 %30, label %61, label %31, !prof !3

31:                                               ; preds = %2
  %32 = icmp eq i32 %15, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %31
  %34 = zext i32 %15 to i64
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %29, i64 %36
  %38 = bitcast %"struct.std::__1::pair.1384"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast i8* %39 to %"class.WTF::StringImpl"*
  %41 = ptrtoint i8* %39 to i64
  switch i64 %41, label %42 [
    i64 -1, label %56
    i64 0, label %56
  ]

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %39, i64 8
  %44 = bitcast i8* %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = bitcast i8* %39 to i32*
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %42
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %42
  %53 = phi i32 [ %51, %50 ], [ %49, %42 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %56

56:                                               ; preds = %55, %52, %35, %35
  %57 = add nuw nsw i64 %36, 1
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %59, label %35

59:                                               ; preds = %56, %31
  %60 = inttoptr i64 %13 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #10
  store %"struct.std::__1::pair.1384"* null, %"struct.std::__1::pair.1384"** %5, align 8
  br label %61

61:                                               ; preds = %2, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.WTF::HashTable.1381"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.1381"*, %"class.WTF::HashTable.1381"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %1, i64 0, i32 2
  %4 = bitcast %"class.WTF::HashTable.1381"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1381"* %0, i32 %5)
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %1, i64 0, i32 0
  %11 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %11, i64 %14
  br i1 %9, label %35, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16, %29
  %19 = phi %"struct.std::__1::pair.1384"* [ %30, %29 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %19, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = and i1 %22, %25
  %27 = icmp eq %"class.WTF::StringImpl"* %21, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %19, i64 1
  %31 = icmp eq %"struct.std::__1::pair.1384"* %30, %15
  br i1 %31, label %35, label %18

32:                                               ; preds = %18, %16
  %33 = phi %"struct.std::__1::pair.1384"* [ %11, %16 ], [ %19, %18 ]
  %34 = icmp eq %"struct.std::__1::pair.1384"* %33, %15
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %36, %55, %52, %2, %7, %32
  ret void

36:                                               ; preds = %32, %55
  %37 = phi %"struct.std::__1::pair.1384"* [ %42, %55 ], [ %33, %32 ]
  %38 = tail call { %"struct.std::__1::pair.1384"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.1381"* %0, %"struct.std::__1::pair.1384"* dereferenceable(16) %37, %"struct.std::__1::pair.1384"* dereferenceable(16) %37) #10
  %39 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %37, i64 1
  %40 = icmp eq %"struct.std::__1::pair.1384"* %39, %15
  br i1 %40, label %35, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"struct.std::__1::pair.1384"* [ %53, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  %46 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %42, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  %49 = and i1 %45, %48
  %50 = icmp eq %"class.WTF::StringImpl"* %44, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %42, i64 1
  %54 = icmp eq %"struct.std::__1::pair.1384"* %53, %15
  br i1 %54, label %35, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"struct.std::__1::pair.1384"* %42, %15
  br i1 %56, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1381"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"struct.std::__1::pair.1384"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %37
  %40 = bitcast %"struct.std::__1::pair.1384"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %37, i32 1
  store i8 0, i8* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %42
  %44 = bitcast %"struct.std::__1::pair.1384"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %42, i32 1
  store i8 0, i8* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %46
  %48 = bitcast %"struct.std::__1::pair.1384"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %46, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %50
  %52 = bitcast %"struct.std::__1::pair.1384"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %61
  %64 = bitcast %"struct.std::__1::pair.1384"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %30, i64 %61, i32 1
  store i8 0, i8* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !18

69:                                               ; preds = %60, %57
  %70 = call %"struct.std::__1::pair.1384"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.1381"* %0, %"struct.std::__1::pair.1384"* %30, i32 %17, %"struct.std::__1::pair.1384"* null) #10
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.1384"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.1381"*, %"struct.std::__1::pair.1384"*, i32, %"struct.std::__1::pair.1384"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1381", align 8
  %6 = bitcast %"class.WTF::HashTable.1381"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1381"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1384"* %1, %"struct.std::__1::pair.1384"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair.1384"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1381"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1381"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %15, align 8
  %23 = ptrtoint %"struct.std::__1::pair.1384"* %22 to i64
  br label %71

24:                                               ; preds = %119
  %25 = bitcast %"class.WTF::HashTable.1381"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1381"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %120, %24 ]
  %33 = phi %"struct.std::__1::pair.1384"* [ null, %16 ], [ %123, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %121, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.std::__1::pair.1384"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %35, i64 %42
  %44 = bitcast %"struct.std::__1::pair.1384"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.std::__1::pair.1384"* %33

71:                                               ; preds = %21, %119
  %72 = phi i64 [ %120, %119 ], [ %23, %21 ]
  %73 = phi i32 [ %121, %119 ], [ %13, %21 ]
  %74 = phi %"struct.std::__1::pair.1384"* [ %122, %119 ], [ %22, %21 ]
  %75 = phi %"struct.std::__1::pair.1384"* [ %123, %119 ], [ null, %21 ]
  %76 = phi i32 [ %124, %119 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %74, i64 %77, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i1 %81, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %80, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %87 = or i1 %86, %85
  br i1 %87, label %119, label %88

88:                                               ; preds = %71
  %89 = call { %"struct.std::__1::pair.1384"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.1381"* nonnull %5, %"struct.std::__1::pair.1384"* dereferenceable(16) %78) #10
  %90 = extractvalue { %"struct.std::__1::pair.1384"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = bitcast %"struct.std::__1::pair.1384"* %78 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1384"* %90 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %90, i64 0, i32 1
  %112 = load i8, i8* %82, align 8
  store i8 %112, i8* %111, align 8
  %113 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %15, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %113, i64 %77
  %115 = icmp eq %"struct.std::__1::pair.1384"* %114, %3
  %116 = select i1 %115, %"struct.std::__1::pair.1384"* %90, %"struct.std::__1::pair.1384"* %75
  %117 = load i32, i32* %12, align 8
  %118 = ptrtoint %"struct.std::__1::pair.1384"* %113 to i64
  br label %119

119:                                              ; preds = %71, %107
  %120 = phi i64 [ %72, %71 ], [ %118, %107 ]
  %121 = phi i32 [ %73, %71 ], [ %117, %107 ]
  %122 = phi %"struct.std::__1::pair.1384"* [ %74, %71 ], [ %113, %107 ]
  %123 = phi %"struct.std::__1::pair.1384"* [ %75, %71 ], [ %116, %107 ]
  %124 = add i32 %76, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.1384"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.1381"*, %"struct.std::__1::pair.1384"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 15
  %23 = xor i32 %22, -1
  %24 = add nsw i32 %23, %21
  %25 = lshr i32 %24, 10
  %26 = xor i32 %25, %24
  %27 = mul nsw i32 %26, 9
  %28 = lshr i32 %27, 6
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 11
  %31 = xor i32 %30, -1
  %32 = add i32 %29, %31
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = zext i32 %18 to i64
  %36 = mul i64 %35, 5146158508761418231
  %37 = zext i32 %34 to i64
  %38 = mul i64 %37, -682818954288075998
  %39 = add i64 %38, %36
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = and i32 %7, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %4, i64 %43
  %45 = ptrtoint %"struct.std::__1::pair.1384"* %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  %49 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %4, i64 %43, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %17
  %54 = xor i32 %41, -1
  %55 = lshr i64 %39, 55
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, %54
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %76

68:                                               ; preds = %94
  %69 = ptrtoint %"struct.std::__1::pair.1384"* %100 to i64
  br label %70

70:                                               ; preds = %68, %17
  %71 = phi i64 [ %45, %17 ], [ %69, %68 ]
  %72 = phi %"struct.std::__1::pair.1384"* [ null, %17 ], [ %95, %68 ]
  %73 = icmp eq %"struct.std::__1::pair.1384"* %72, null
  %74 = ptrtoint %"struct.std::__1::pair.1384"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %109

76:                                               ; preds = %53, %94
  %77 = phi %"struct.std::__1::pair.1384"* [ null, %53 ], [ %95, %94 ]
  %78 = phi i8* [ %49, %53 ], [ %105, %94 ]
  %79 = phi %"class.WTF::StringImpl"* [ %47, %53 ], [ %103, %94 ]
  %80 = phi i64 [ %45, %53 ], [ %101, %94 ]
  %81 = phi %"struct.std::__1::pair.1384"* [ %44, %53 ], [ %100, %94 ]
  %82 = phi i64 [ %43, %53 ], [ %99, %94 ]
  %83 = phi i64 [ 0, %53 ], [ %97, %94 ]
  %84 = bitcast %"struct.std::__1::pair.1384"* %81 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, inttoptr (i64 -1 to i8*)
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"* %88) #10
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = load i8, i8* %78, align 8
  %92 = load i8, i8* %19, align 8
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %76, %87, %90
  %95 = phi %"struct.std::__1::pair.1384"* [ %77, %87 ], [ %77, %90 ], [ %81, %76 ]
  %96 = icmp eq i64 %83, 0
  %97 = select i1 %96, i64 %67, i64 %83
  %98 = add i64 %97, %82
  %99 = and i64 %98, %8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %4, i64 %99
  %101 = ptrtoint %"struct.std::__1::pair.1384"* %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %4, i64 %99, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  %108 = and i1 %104, %107
  br i1 %108, label %68, label %76

109:                                              ; preds = %90, %70
  %110 = phi i64 [ %75, %70 ], [ %80, %90 ]
  %111 = phi i8 [ 0, %70 ], [ 1, %90 ]
  %112 = inttoptr i64 %110 to %"struct.std::__1::pair.1384"*
  %113 = insertvalue { %"struct.std::__1::pair.1384"*, i8 } undef, %"struct.std::__1::pair.1384"* %112, 0
  %114 = insertvalue { %"struct.std::__1::pair.1384"*, i8 } %113, i8 %111, 1
  ret { %"struct.std::__1::pair.1384"*, i8 } %114
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.1384"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.1381"*, %"struct.std::__1::pair.1384"* dereferenceable(16), %"struct.std::__1::pair.1384"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.1384"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair.1384"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1381"* %0, %"struct.std::__1::pair.1384"* null)
  %9 = load %"struct.std::__1::pair.1384"*, %"struct.std::__1::pair.1384"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair.1384"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 15
  %30 = xor i32 %29, -1
  %31 = add nsw i32 %30, %28
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul nsw i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = zext i32 %25 to i64
  %43 = mul i64 %42, 5146158508761418231
  %44 = zext i32 %41 to i64
  %45 = mul i64 %44, -682818954288075998
  %46 = add i64 %45, %43
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = and i32 %14, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  %55 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %11, i64 %50, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %24
  %60 = xor i32 %48, -1
  %61 = lshr i64 %46, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %59, %91
  %75 = phi i8* [ %55, %59 ], [ %101, %91 ]
  %76 = phi %"class.WTF::StringImpl"* [ %53, %59 ], [ %99, %91 ]
  %77 = phi %"struct.std::__1::pair.1384"* [ %51, %59 ], [ %97, %91 ]
  %78 = phi %"struct.std::__1::pair.1384"* [ null, %59 ], [ %92, %91 ]
  %79 = phi i64 [ %50, %59 ], [ %96, %91 ]
  %80 = phi i64 [ 0, %59 ], [ %94, %91 ]
  %81 = bitcast %"struct.std::__1::pair.1384"* %77 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %91, label %84

84:                                               ; preds = %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %85) #10
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = load i8, i8* %75, align 8
  %89 = load i8, i8* %26, align 8
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %172, label %91

91:                                               ; preds = %74, %84, %87
  %92 = phi %"struct.std::__1::pair.1384"* [ %78, %87 ], [ %77, %74 ], [ %78, %84 ]
  %93 = icmp eq i64 %80, 0
  %94 = select i1 %93, i64 %73, i64 %80
  %95 = add i64 %94, %79
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %11, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %11, i64 %96, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = and i1 %100, %103
  br i1 %104, label %105, label %74

105:                                              ; preds = %91
  %106 = icmp eq %"struct.std::__1::pair.1384"* %92, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair.1384"* %92 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %92, i64 0, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %24, %105, %107
  %117 = phi %"struct.std::__1::pair.1384"* [ %92, %107 ], [ %97, %105 ], [ %51, %24 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %2, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #10
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %126
  tail call void @llvm.trap() #10
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  %139 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %140 = bitcast %"struct.std::__1::pair.1384"* %117 to i64*
  %141 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %117, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #10
  br label %157

157:                                              ; preds = %138, %153, %156
  %158 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %2, i64 0, i32 1
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %117, i64 0, i32 1
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %157
  %171 = tail call %"struct.std::__1::pair.1384"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1381"* %0, %"struct.std::__1::pair.1384"* %117)
  br label %172

172:                                              ; preds = %87, %157, %170
  %173 = phi i8 [ 1, %157 ], [ 1, %170 ], [ 0, %87 ]
  %174 = phi %"struct.std::__1::pair.1384"* [ %117, %157 ], [ %171, %170 ], [ %77, %87 ]
  %175 = insertvalue { %"struct.std::__1::pair.1384"*, i8 } undef, %"struct.std::__1::pair.1384"* %174, 0
  %176 = insertvalue { %"struct.std::__1::pair.1384"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::pair.1384"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.1384"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1381"*, %"struct.std::__1::pair.1384"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1381", %"class.WTF::HashTable.1381"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.std::__1::pair.1384"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %45
  %48 = bitcast %"struct.std::__1::pair.1384"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %45, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %50
  %52 = bitcast %"struct.std::__1::pair.1384"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %54
  %56 = bitcast %"struct.std::__1::pair.1384"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %54, i32 1
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %58
  %60 = bitcast %"struct.std::__1::pair.1384"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %58, i32 1
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %69
  %72 = bitcast %"struct.std::__1::pair.1384"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.1384", %"struct.std::__1::pair.1384"* %36, i64 %69, i32 1
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !20

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.std::__1::pair.1384"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.1381"* %0, %"struct.std::__1::pair.1384"* %36, i32 %32, %"struct.std::__1::pair.1384"* %1) #10
  ret %"struct.std::__1::pair.1384"* %78
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LinkHeaderD2Ev(%"class.blink::LinkHeader"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !17
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #10
  br label %22

22:                                               ; preds = %21, %18, %5
  store i8 0, i8* %2, align 8
  br label %23

23:                                               ; preds = %1, %22
  %24 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 12, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #10
  br label %40

40:                                               ; preds = %23, %36, %39
  %41 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 11, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 10, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #10
  br label %74

74:                                               ; preds = %57, %70, %73
  %75 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 9, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %74, %87, %90
  %92 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 8, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #10
  br label %108

108:                                              ; preds = %91, %104, %107
  %109 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 7, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #10
  br label %125

125:                                              ; preds = %108, %121, %124
  %126 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 6, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #10
  br label %142

142:                                              ; preds = %125, %138, %141
  %143 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 5, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #10
  br label %159

159:                                              ; preds = %142, %155, %158
  %160 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 4, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #10
  br label %176

176:                                              ; preds = %159, %172, %175
  %177 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 3, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #10
  br label %193

193:                                              ; preds = %176, %189, %192
  %194 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 2, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #10
  br label %210

210:                                              ; preds = %193, %206, %209
  %211 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 1, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #10
  br label %227

227:                                              ; preds = %210, %223, %226
  %228 = getelementptr inbounds %"class.blink::LinkHeader", %"class.blink::LinkHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #10
  br label %244

244:                                              ; preds = %227, %240, %243
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2286"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2286"*, i16*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.43, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1968"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.1968"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.1968"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #10
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.1968"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1968"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #10
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.2285"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.2285"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #10
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2286"* nonnull %67, i8* %30) #10
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2286"* nonnull %68, i8* %71) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1968"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #10
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.2285"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #10
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.2285"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.2285"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #10
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.2285"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2286"* nonnull %144, i16* %107) #10
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2286"* nonnull %145, i16* %148) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #10
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %157
  call void @llvm.trap() #10
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #10
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1968"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.1968", %"class.WTF::StringAppend.1968"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %31, i8* %32) #10
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_(%"class.WTF::StringAppend.1978"*, i8*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = bitcast %"class.WTF::StringAppend.1978"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %4, %9, %24
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %27, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #10
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %29, %44
  %47 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %48 = load atomic i32, i32* %30 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %53 = add i32 %47, -1
  store i32 %53, i32* %52, align 4
  br label %54

54:                                               ; preds = %51, %46
  %55 = phi i32 [ %53, %51 ], [ %47, %46 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %58

58:                                               ; preds = %26, %54, %57
  br i1 %8, label %72, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %72

72:                                               ; preds = %58, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv(%"class.WTF::StringAppend.1978"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %8) #10
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %8) #10
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPh(%"class.WTF::StringAppend.1978"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #10
  %30 = load i8*, i8** %29, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %30) #10
  %31 = bitcast %"class.WTF::StringTypeAdapter.2285"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #10
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %22
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %22
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.2285"* %4 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %32, align 8
  store i32 %48, i32* %33, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %1) #10
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0
  %51 = load i32, i32* %28, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2286"* nonnull %50, i8* %53) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10
  %54 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0
  %55 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %6) #10
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2286"* nonnull %54, i8* %57) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPDs(%"class.WTF::StringAppend.1978"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2285", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2285"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #10
  %30 = load i8*, i8** %29, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %30) #10
  %31 = bitcast %"class.WTF::StringTypeAdapter.2285"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1978", %"class.WTF::StringAppend.1978"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #10
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %22
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %22
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.2285"* %4 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %32, align 8
  store i32 %48, i32* %33, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %1) #10
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %4, i64 0, i32 0
  %51 = load i32, i32* %28, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2286"* nonnull %50, i16* %53) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10
  %54 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2285", %"class.WTF::StringTypeAdapter.2285"* %5, i64 0, i32 0
  %55 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %6) #10
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %1, i64 %56
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2286"* nonnull %54, i16* %57) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA45_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [45 x i8]* dereferenceable(45)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds [45 x i8], [45 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [45 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #12
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #10
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SingleModuleClient"**
  %5 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::SingleModuleClient"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SingleModuleClient"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SingleModuleClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SingleModuleClient"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::SingleModuleClient"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)**
  %21 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::SingleModuleClient"* %12, %"class.blink::ModuleScript"* null) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EEDnEEC2IS7_JS9_DnEEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2033"* dereferenceable(16), i8** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %6, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EEDnEE7DestroyEPKNS0_13BindStateBaseE) #10
  %7 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::Persistent.2033"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::tuple"* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %16, align 8
  switch i64 %14, label %17 [
    i64 0, label %43
    i64 -1, label %43
  ]

17:                                               ; preds = %5
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #10
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  %32 = icmp eq %"class.blink::PersistentNode"* %31, null
  br i1 %32, label %33, label %36, !prof !2

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %34) #10
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  br label %36

36:                                               ; preds = %33, %24
  %37 = phi %"class.blink::PersistentNode"* [ %35, %33 ], [ %31, %24 ]
  %38 = bitcast %"class.blink::PersistentNode"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"class.blink::PersistentNode"* %37 to %"class.blink::PersistentBase.2034"**
  store %"class.blink::PersistentBase.2034"* %12, %"class.blink::PersistentBase.2034"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %42, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %16, align 8
  br label %43

43:                                               ; preds = %5, %5, %36
  %44 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i8* null, i8** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EEDnEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #10
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESB_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.1978"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev(%"class.WTF::StringAppend.1978"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #10
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35AlternateSignedExchangeResourceInfoD2Ev(%"class.blink::AlternateSignedExchangeResourceInfo"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.2042"*, %"struct.WTF::KeyValuePair.2042"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.2042"* %3, null
  br i1 %4, label %105, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo", %"class.blink::AlternateSignedExchangeResourceInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %103, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %100, %9
  %12 = phi i64 [ 0, %9 ], [ %101, %100 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.2042", %"struct.WTF::KeyValuePair.2042"* %3, i64 %12, i32 0, i32 4
  %14 = bitcast %"class.WTF::String"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %100, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2042", %"struct.WTF::KeyValuePair.2042"* %3, i64 %12, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.2261", %"class.WTF::Vector.2261"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.2264"*, %"class.std::__1::unique_ptr.2264"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.2264"* %20, null
  br i1 %21, label %98, label %22, !prof !3

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::unique_ptr.2264"* %20 to i8*
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2042", %"struct.WTF::KeyValuePair.2042"* %3, i64 %12, i32 1, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %96, label %27, !prof !2

27:                                               ; preds = %22
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.2264", %"class.std::__1::unique_ptr.2264"* %20, i64 %28
  br label %30

30:                                               ; preds = %90, %27
  %31 = phi %"class.std::__1::unique_ptr.2264"* [ %91, %90 ], [ %20, %27 ]
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.2264", %"class.std::__1::unique_ptr.2264"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::AlternateSignedExchangeResourceInfo::Entry"*, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %32, align 8
  store %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* null, %"class.blink::AlternateSignedExchangeResourceInfo::Entry"** %32, align 8
  %34 = icmp eq %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, null
  br i1 %34, label %90, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, i64 0, i32 4, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #10
  br label %69

69:                                               ; preds = %68, %65, %52
  %70 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #10
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %87) #10
  %88 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %88) #10
  %89 = getelementptr inbounds %"class.blink::AlternateSignedExchangeResourceInfo::Entry", %"class.blink::AlternateSignedExchangeResourceInfo::Entry"* %33, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %86, %30
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2264", %"class.std::__1::unique_ptr.2264"* %31, i64 1
  %92 = icmp eq %"class.std::__1::unique_ptr.2264"* %91, %29
  br i1 %92, label %93, label %30

93:                                               ; preds = %90
  store i32 0, i32* %24, align 4
  %94 = bitcast %"class.WTF::Vector.2261"* %18 to i8**
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %93, %22
  %97 = phi i8* [ %95, %93 ], [ %23, %22 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %97) #10
  store %"class.std::__1::unique_ptr.2264"* null, %"class.std::__1::unique_ptr.2264"** %19, align 8
  br label %98

98:                                               ; preds = %96, %17
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.2042", %"struct.WTF::KeyValuePair.2042"* %3, i64 %12, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %99) #10
  br label %100

100:                                              ; preds = %98, %11
  %101 = add nuw nsw i64 %12, 1
  %102 = icmp eq i64 %101, %10
  br i1 %102, label %103, label %11

103:                                              ; preds = %100, %5
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2042", %"struct.WTF::KeyValuePair.2042"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #10
  store %"struct.WTF::KeyValuePair.2042"* null, %"struct.WTF::KeyValuePair.2042"** %2, align 8
  br label %105

105:                                              ; preds = %1, %103
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink12ViewportData23ViewportDefaultMinWidthEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink12ViewportData23ViewportDefaultMinWidthEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink22WrapPersistentInternalINS_18SingleModuleClientEEENS_10PersistentIT_EEPS3_: argument 0"}
!9 = distinct !{!9, !"_ZN5blink22WrapPersistentInternalINS_18SingleModuleClientEEENS_10PersistentIT_EEPS3_"}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EEDnEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EEDnEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EEDnEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EEDnEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!15 = distinct !{!15, !16, !"_ZN3WTF4BindIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EEDnEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF4BindIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EEDnEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!17 = !{i8 0, i8 2}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
