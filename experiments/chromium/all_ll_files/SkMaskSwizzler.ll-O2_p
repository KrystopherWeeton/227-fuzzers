; ModuleID = '../../third_party/skia/src/codec/SkMaskSwizzler.cpp'
source_filename = "../../third_party/skia/src/codec/SkMaskSwizzler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkMaskSwizzler = type <{ %class.SkSampler.base, [4 x i8], %class.SkMasks*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%class.SkMasks = type { %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo" }
%"struct.SkMasks::MaskInfo" = type { i32, i32, i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZNK14SkMaskSwizzler9fillWidthEv = comdat any

$_ZN14SkMaskSwizzlerD0Ev = comdat any

$_ZN9SkSamplerD2Ev = comdat any

@_ZTV14SkMaskSwizzler = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%class.SkMaskSwizzler*)* @_ZNK14SkMaskSwizzler9fillWidthEv to i8*), i8* bitcast (void (%class.SkSampler*)* @_ZN9SkSamplerD2Ev to i8*), i8* bitcast (void (%class.SkMaskSwizzler*)* @_ZN14SkMaskSwizzlerD0Ev to i8*), i8* bitcast (i32 (%class.SkMaskSwizzler*, i32)* @_ZN14SkMaskSwizzler12onSetSampleXEi to i8*)] }, align 8

@_ZN14SkMaskSwizzlerC1EP7SkMasksPFvPvPKhiS1_jjEii = hidden unnamed_addr alias void (%class.SkMaskSwizzler*, %class.SkMasks*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, i32, i32), void (%class.SkMaskSwizzler*, %class.SkMasks*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, i32, i32)* @_ZN14SkMaskSwizzlerC2EP7SkMasksPFvPvPKhiS1_jjEii

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %class.SkMaskSwizzler* @_ZN14SkMaskSwizzler18CreateMaskSwizzlerERK11SkImageInfobP7SkMasksjRKN7SkCodec7OptionsE(%struct.SkImageInfo* nocapture readonly dereferenceable(24), i1 zeroext, %class.SkMasks*, i32, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  switch i32 %3, label %101 [
    i32 16, label %6
    i32 24, label %26
    i32 32, label %46
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %66 [
    i32 4, label %9
    i32 6, label %17
    i32 2, label %25
  ]

9:                                                ; preds = %6
  br i1 %1, label %66, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 2
  %14 = select i1 %13, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL29swizzle_mask16_to_rgba_premulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* null
  %15 = icmp eq i32 %12, 3
  %16 = select i1 %15, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL31swizzle_mask16_to_rgba_unpremulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %14
  br label %66

17:                                               ; preds = %6
  br i1 %1, label %66, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 2
  %22 = select i1 %21, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL29swizzle_mask16_to_bgra_premulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* null
  %23 = icmp eq i32 %20, 3
  %24 = select i1 %23, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL31swizzle_mask16_to_bgra_unpremulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %22
  br label %66

25:                                               ; preds = %6
  br label %66

26:                                               ; preds = %5
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %66 [
    i32 4, label %29
    i32 6, label %37
    i32 2, label %45
  ]

29:                                               ; preds = %26
  br i1 %1, label %66, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 2
  %34 = select i1 %33, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL29swizzle_mask24_to_rgba_premulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* null
  %35 = icmp eq i32 %32, 3
  %36 = select i1 %35, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL31swizzle_mask24_to_rgba_unpremulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %34
  br label %66

37:                                               ; preds = %26
  br i1 %1, label %66, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 2
  %42 = select i1 %41, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL29swizzle_mask24_to_bgra_premulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* null
  %43 = icmp eq i32 %40, 3
  %44 = select i1 %43, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL31swizzle_mask24_to_bgra_unpremulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %42
  br label %66

45:                                               ; preds = %26
  br label %66

46:                                               ; preds = %5
  %47 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  switch i32 %48, label %66 [
    i32 4, label %49
    i32 6, label %57
    i32 2, label %65
  ]

49:                                               ; preds = %46
  br i1 %1, label %66, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 2
  %54 = select i1 %53, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL29swizzle_mask32_to_rgba_premulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* null
  %55 = icmp eq i32 %52, 3
  %56 = select i1 %55, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL31swizzle_mask32_to_rgba_unpremulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %54
  br label %66

57:                                               ; preds = %46
  br i1 %1, label %66, label %58

58:                                               ; preds = %57
  %59 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 2
  %62 = select i1 %61, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL29swizzle_mask32_to_bgra_premulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* null
  %63 = icmp eq i32 %60, 3
  %64 = select i1 %63, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* @_ZL31swizzle_mask32_to_bgra_unpremulPvPKhiP7SkMasksjj, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %62
  br label %66

65:                                               ; preds = %46
  br label %66

66:                                               ; preds = %58, %57, %50, %49, %38, %37, %30, %29, %18, %17, %10, %9, %65, %46, %45, %26, %25, %6
  %67 = phi void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* [ null, %46 ], [ @_ZL21swizzle_mask32_to_565PvPKhiP7SkMasksjj, %65 ], [ null, %26 ], [ @_ZL21swizzle_mask24_to_565PvPKhiP7SkMasksjj, %45 ], [ null, %6 ], [ @_ZL21swizzle_mask16_to_565PvPKhiP7SkMasksjj, %25 ], [ @_ZL29swizzle_mask16_to_rgba_opaquePvPKhiP7SkMasksjj, %9 ], [ %16, %10 ], [ @_ZL29swizzle_mask16_to_bgra_opaquePvPKhiP7SkMasksjj, %17 ], [ %24, %18 ], [ @_ZL29swizzle_mask24_to_rgba_opaquePvPKhiP7SkMasksjj, %29 ], [ %36, %30 ], [ @_ZL29swizzle_mask24_to_bgra_opaquePvPKhiP7SkMasksjj, %37 ], [ %44, %38 ], [ @_ZL29swizzle_mask32_to_rgba_opaquePvPKhiP7SkMasksjj, %49 ], [ %56, %50 ], [ @_ZL29swizzle_mask32_to_bgra_opaquePvPKhiP7SkMasksjj, %57 ], [ %64, %58 ]
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %71 = load %struct.SkIRect*, %struct.SkIRect** %70, align 8
  %72 = icmp eq %struct.SkIRect* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %71, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %71, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %77, %75
  br label %79

79:                                               ; preds = %66, %73
  %80 = phi i32 [ %75, %73 ], [ 0, %66 ]
  %81 = phi i32 [ %78, %73 ], [ %69, %66 ]
  %82 = tail call i8* @_Znwm(i64 56) #8
  %83 = bitcast i8* %82 to %class.SkMaskSwizzler*
  %84 = bitcast i8* %82 to i32 (...)***
  %85 = getelementptr inbounds i8, i8* %82, i64 8
  %86 = bitcast i8* %85 to i32*
  store i32 1, i32* %86, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV14SkMaskSwizzler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %87 = getelementptr inbounds i8, i8* %82, i64 16
  %88 = bitcast i8* %87 to %class.SkMasks**
  store %class.SkMasks* %2, %class.SkMasks** %88, align 8
  %89 = getelementptr inbounds i8, i8* %82, i64 24
  %90 = bitcast i8* %89 to void (i8*, i8*, i32, %class.SkMasks*, i32, i32)**
  store void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %67, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)** %90, align 8
  %91 = getelementptr inbounds i8, i8* %82, i64 32
  %92 = bitcast i8* %91 to i32*
  store i32 %81, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %82, i64 36
  %94 = bitcast i8* %93 to i32*
  store i32 %81, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %82, i64 40
  %96 = bitcast i8* %95 to i32*
  store i32 1, i32* %96, align 8
  %97 = getelementptr inbounds i8, i8* %82, i64 44
  %98 = bitcast i8* %97 to i32*
  store i32 %80, i32* %98, align 4
  %99 = getelementptr inbounds i8, i8* %82, i64 48
  %100 = bitcast i8* %99 to i32*
  store i32 %80, i32* %100, align 8
  br label %101

101:                                              ; preds = %5, %79
  %102 = phi %class.SkMaskSwizzler* [ %83, %79 ], [ null, %5 ]
  ret %class.SkMaskSwizzler* %102
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask16_to_rgba_opaquePvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %34, %16 ]
  %18 = phi i16* [ %12, %9 ], [ %33, %16 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = zext i8 %21 to i32
  %25 = zext i8 %22 to i32
  %26 = zext i8 %23 to i32
  %27 = shl nuw nsw i32 %25, 8
  %28 = shl nuw nsw i32 %26, 16
  %29 = or i32 %27, %24
  %30 = or i32 %29, %28
  %31 = or i32 %30, -16777216
  %32 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds i16, i16* %18, i64 %13
  %34 = add nuw nsw i64 %17, 1
  %35 = icmp eq i64 %34, %14
  br i1 %35, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL31swizzle_mask16_to_rgba_unpremulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %37, %16 ]
  %18 = phi i16* [ %12, %9 ], [ %36, %16 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %20) #9
  %25 = zext i8 %24 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = zext i8 %23 to i32
  %29 = shl nuw i32 %25, 24
  %30 = shl nuw nsw i32 %27, 8
  %31 = shl nuw nsw i32 %28, 16
  %32 = or i32 %30, %26
  %33 = or i32 %32, %31
  %34 = or i32 %33, %29
  %35 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds i16, i16* %18, i64 %13
  %37 = add nuw nsw i64 %17, 1
  %38 = icmp eq i64 %37, %14
  br i1 %38, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask16_to_rgba_premulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %46, %6
  ret void

16:                                               ; preds = %46, %9
  %17 = phi i64 [ 0, %9 ], [ %58, %46 ]
  %18 = phi i16* [ %12, %9 ], [ %57, %46 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %20) #9
  %25 = zext i8 %24 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = zext i8 %23 to i32
  %29 = icmp eq i8 %24, -1
  br i1 %29, label %46, label %30

30:                                               ; preds = %16
  %31 = mul nuw nsw i32 %25, %26
  %32 = add nuw nsw i32 %31, 128
  %33 = lshr i32 %32, 8
  %34 = add nuw nsw i32 %33, %32
  %35 = lshr i32 %34, 8
  %36 = mul nuw nsw i32 %25, %27
  %37 = add nuw nsw i32 %36, 128
  %38 = lshr i32 %37, 8
  %39 = add nuw nsw i32 %38, %37
  %40 = lshr i32 %39, 8
  %41 = mul nuw nsw i32 %25, %28
  %42 = add nuw nsw i32 %41, 128
  %43 = lshr i32 %42, 8
  %44 = add nuw nsw i32 %43, %42
  %45 = lshr i32 %44, 8
  br label %46

46:                                               ; preds = %16, %30
  %47 = phi i32 [ %35, %30 ], [ %26, %16 ]
  %48 = phi i32 [ %40, %30 ], [ %27, %16 ]
  %49 = phi i32 [ %45, %30 ], [ %28, %16 ]
  %50 = shl nuw i32 %25, 24
  %51 = or i32 %47, %50
  %52 = shl nuw nsw i32 %48, 8
  %53 = or i32 %51, %52
  %54 = shl i32 %49, 16
  %55 = or i32 %53, %54
  %56 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i16, i16* %18, i64 %13
  %58 = add nuw nsw i64 %17, 1
  %59 = icmp eq i64 %58, %14
  br i1 %59, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask16_to_bgra_opaquePvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %34, %16 ]
  %18 = phi i16* [ %12, %9 ], [ %33, %16 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = zext i8 %21 to i32
  %25 = zext i8 %22 to i32
  %26 = zext i8 %23 to i32
  %27 = shl nuw nsw i32 %24, 16
  %28 = shl nuw nsw i32 %25, 8
  %29 = or i32 %27, %28
  %30 = or i32 %29, %26
  %31 = or i32 %30, -16777216
  %32 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds i16, i16* %18, i64 %13
  %34 = add nuw nsw i64 %17, 1
  %35 = icmp eq i64 %34, %14
  br i1 %35, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL31swizzle_mask16_to_bgra_unpremulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %37, %16 ]
  %18 = phi i16* [ %12, %9 ], [ %36, %16 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %20) #9
  %25 = zext i8 %24 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = zext i8 %23 to i32
  %29 = shl nuw i32 %25, 24
  %30 = shl nuw nsw i32 %26, 16
  %31 = shl nuw nsw i32 %27, 8
  %32 = or i32 %31, %30
  %33 = or i32 %32, %28
  %34 = or i32 %33, %29
  %35 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds i16, i16* %18, i64 %13
  %37 = add nuw nsw i64 %17, 1
  %38 = icmp eq i64 %37, %14
  br i1 %38, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask16_to_bgra_premulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %46, %6
  ret void

16:                                               ; preds = %46, %9
  %17 = phi i64 [ 0, %9 ], [ %58, %46 ]
  %18 = phi i16* [ %12, %9 ], [ %57, %46 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %20) #9
  %25 = zext i8 %24 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = zext i8 %23 to i32
  %29 = icmp eq i8 %24, -1
  br i1 %29, label %46, label %30

30:                                               ; preds = %16
  %31 = mul nuw nsw i32 %25, %26
  %32 = add nuw nsw i32 %31, 128
  %33 = lshr i32 %32, 8
  %34 = add nuw nsw i32 %33, %32
  %35 = lshr i32 %34, 8
  %36 = mul nuw nsw i32 %25, %27
  %37 = add nuw nsw i32 %36, 128
  %38 = lshr i32 %37, 8
  %39 = add nuw nsw i32 %38, %37
  %40 = lshr i32 %39, 8
  %41 = mul nuw nsw i32 %25, %28
  %42 = add nuw nsw i32 %41, 128
  %43 = lshr i32 %42, 8
  %44 = add nuw nsw i32 %43, %42
  %45 = lshr i32 %44, 8
  br label %46

46:                                               ; preds = %16, %30
  %47 = phi i32 [ %35, %30 ], [ %26, %16 ]
  %48 = phi i32 [ %40, %30 ], [ %27, %16 ]
  %49 = phi i32 [ %45, %30 ], [ %28, %16 ]
  %50 = shl nuw i32 %25, 24
  %51 = shl i32 %47, 16
  %52 = or i32 %51, %50
  %53 = shl nuw nsw i32 %48, 8
  %54 = or i32 %52, %53
  %55 = or i32 %54, %49
  %56 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i16, i16* %18, i64 %13
  %58 = add nuw nsw i64 %17, 1
  %59 = icmp eq i64 %58, %14
  br i1 %59, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21swizzle_mask16_to_565PvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i16*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i16*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %36, %16 ]
  %18 = phi i16* [ %12, %9 ], [ %35, %16 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %20) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %20) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %20) #9
  %24 = lshr i8 %21, 3
  %25 = zext i8 %24 to i16
  %26 = shl nuw i16 %25, 11
  %27 = lshr i8 %22, 2
  %28 = zext i8 %27 to i16
  %29 = shl nuw nsw i16 %28, 5
  %30 = or i16 %29, %26
  %31 = lshr i8 %23, 3
  %32 = zext i8 %31 to i16
  %33 = or i16 %30, %32
  %34 = getelementptr inbounds i16, i16* %7, i64 %17
  store i16 %33, i16* %34, align 2
  %35 = getelementptr inbounds i16, i16* %18, i64 %13
  %36 = add nuw nsw i64 %17, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask24_to_rgba_opaquePvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %17, %6
  ret void

17:                                               ; preds = %17, %9
  %18 = phi i64 [ 0, %9 ], [ %45, %17 ]
  %19 = phi i8* [ %12, %9 ], [ %44, %17 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = zext i8 %32 to i32
  %36 = zext i8 %33 to i32
  %37 = zext i8 %34 to i32
  %38 = shl nuw nsw i32 %36, 8
  %39 = shl nuw nsw i32 %37, 16
  %40 = or i32 %38, %35
  %41 = or i32 %40, %39
  %42 = or i32 %41, -16777216
  %43 = getelementptr inbounds i32, i32* %7, i64 %18
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %19, i64 %14
  %45 = add nuw nsw i64 %18, 1
  %46 = icmp eq i64 %45, %15
  br i1 %46, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL31swizzle_mask24_to_rgba_unpremulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %17, %6
  ret void

17:                                               ; preds = %17, %9
  %18 = phi i64 [ 0, %9 ], [ %48, %17 ]
  %19 = phi i8* [ %12, %9 ], [ %47, %17 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %31) #9
  %36 = zext i8 %35 to i32
  %37 = zext i8 %32 to i32
  %38 = zext i8 %33 to i32
  %39 = zext i8 %34 to i32
  %40 = shl nuw i32 %36, 24
  %41 = shl nuw nsw i32 %38, 8
  %42 = shl nuw nsw i32 %39, 16
  %43 = or i32 %41, %37
  %44 = or i32 %43, %42
  %45 = or i32 %44, %40
  %46 = getelementptr inbounds i32, i32* %7, i64 %18
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %19, i64 %14
  %48 = add nuw nsw i64 %18, 1
  %49 = icmp eq i64 %48, %15
  br i1 %49, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask24_to_rgba_premulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %57, %6
  ret void

17:                                               ; preds = %57, %9
  %18 = phi i64 [ 0, %9 ], [ %69, %57 ]
  %19 = phi i8* [ %12, %9 ], [ %68, %57 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %31) #9
  %36 = zext i8 %35 to i32
  %37 = zext i8 %32 to i32
  %38 = zext i8 %33 to i32
  %39 = zext i8 %34 to i32
  %40 = icmp eq i8 %35, -1
  br i1 %40, label %57, label %41

41:                                               ; preds = %17
  %42 = mul nuw nsw i32 %36, %37
  %43 = add nuw nsw i32 %42, 128
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  %47 = mul nuw nsw i32 %36, %38
  %48 = add nuw nsw i32 %47, 128
  %49 = lshr i32 %48, 8
  %50 = add nuw nsw i32 %49, %48
  %51 = lshr i32 %50, 8
  %52 = mul nuw nsw i32 %36, %39
  %53 = add nuw nsw i32 %52, 128
  %54 = lshr i32 %53, 8
  %55 = add nuw nsw i32 %54, %53
  %56 = lshr i32 %55, 8
  br label %57

57:                                               ; preds = %17, %41
  %58 = phi i32 [ %46, %41 ], [ %37, %17 ]
  %59 = phi i32 [ %51, %41 ], [ %38, %17 ]
  %60 = phi i32 [ %56, %41 ], [ %39, %17 ]
  %61 = shl nuw i32 %36, 24
  %62 = or i32 %58, %61
  %63 = shl nuw nsw i32 %59, 8
  %64 = or i32 %62, %63
  %65 = shl i32 %60, 16
  %66 = or i32 %64, %65
  %67 = getelementptr inbounds i32, i32* %7, i64 %18
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %19, i64 %14
  %69 = add nuw nsw i64 %18, 1
  %70 = icmp eq i64 %69, %15
  br i1 %70, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask24_to_bgra_opaquePvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %17, %6
  ret void

17:                                               ; preds = %17, %9
  %18 = phi i64 [ 0, %9 ], [ %45, %17 ]
  %19 = phi i8* [ %12, %9 ], [ %44, %17 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = zext i8 %32 to i32
  %36 = zext i8 %33 to i32
  %37 = zext i8 %34 to i32
  %38 = shl nuw nsw i32 %35, 16
  %39 = shl nuw nsw i32 %36, 8
  %40 = or i32 %38, %39
  %41 = or i32 %40, %37
  %42 = or i32 %41, -16777216
  %43 = getelementptr inbounds i32, i32* %7, i64 %18
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %19, i64 %14
  %45 = add nuw nsw i64 %18, 1
  %46 = icmp eq i64 %45, %15
  br i1 %46, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL31swizzle_mask24_to_bgra_unpremulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %17, %6
  ret void

17:                                               ; preds = %17, %9
  %18 = phi i64 [ 0, %9 ], [ %48, %17 ]
  %19 = phi i8* [ %12, %9 ], [ %47, %17 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %31) #9
  %36 = zext i8 %35 to i32
  %37 = zext i8 %32 to i32
  %38 = zext i8 %33 to i32
  %39 = zext i8 %34 to i32
  %40 = shl nuw i32 %36, 24
  %41 = shl nuw nsw i32 %37, 16
  %42 = shl nuw nsw i32 %38, 8
  %43 = or i32 %42, %41
  %44 = or i32 %43, %39
  %45 = or i32 %44, %40
  %46 = getelementptr inbounds i32, i32* %7, i64 %18
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %19, i64 %14
  %48 = add nuw nsw i64 %18, 1
  %49 = icmp eq i64 %48, %15
  br i1 %49, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask24_to_bgra_premulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %57, %6
  ret void

17:                                               ; preds = %57, %9
  %18 = phi i64 [ 0, %9 ], [ %69, %57 ]
  %19 = phi i8* [ %12, %9 ], [ %68, %57 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %31) #9
  %36 = zext i8 %35 to i32
  %37 = zext i8 %32 to i32
  %38 = zext i8 %33 to i32
  %39 = zext i8 %34 to i32
  %40 = icmp eq i8 %35, -1
  br i1 %40, label %57, label %41

41:                                               ; preds = %17
  %42 = mul nuw nsw i32 %36, %37
  %43 = add nuw nsw i32 %42, 128
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  %47 = mul nuw nsw i32 %36, %38
  %48 = add nuw nsw i32 %47, 128
  %49 = lshr i32 %48, 8
  %50 = add nuw nsw i32 %49, %48
  %51 = lshr i32 %50, 8
  %52 = mul nuw nsw i32 %36, %39
  %53 = add nuw nsw i32 %52, 128
  %54 = lshr i32 %53, 8
  %55 = add nuw nsw i32 %54, %53
  %56 = lshr i32 %55, 8
  br label %57

57:                                               ; preds = %17, %41
  %58 = phi i32 [ %46, %41 ], [ %37, %17 ]
  %59 = phi i32 [ %51, %41 ], [ %38, %17 ]
  %60 = phi i32 [ %56, %41 ], [ %39, %17 ]
  %61 = shl nuw i32 %36, 24
  %62 = shl i32 %58, 16
  %63 = or i32 %62, %61
  %64 = shl nuw nsw i32 %59, 8
  %65 = or i32 %63, %64
  %66 = or i32 %65, %60
  %67 = getelementptr inbounds i32, i32* %7, i64 %18
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %19, i64 %14
  %69 = add nuw nsw i64 %18, 1
  %70 = icmp eq i64 %69, %15
  br i1 %70, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21swizzle_mask24_to_565PvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i16*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = mul i32 %4, 3
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = mul i32 %5, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %17, %6
  ret void

17:                                               ; preds = %17, %9
  %18 = phi i64 [ 0, %9 ], [ %47, %17 ]
  %19 = phi i8* [ %12, %9 ], [ %46, %17 ]
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds i8, i8* %19, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %26, %30
  %32 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %31) #9
  %33 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %31) #9
  %34 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %31) #9
  %35 = lshr i8 %32, 3
  %36 = zext i8 %35 to i16
  %37 = shl nuw i16 %36, 11
  %38 = lshr i8 %33, 2
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 5
  %41 = or i16 %40, %37
  %42 = lshr i8 %34, 3
  %43 = zext i8 %42 to i16
  %44 = or i16 %41, %43
  %45 = getelementptr inbounds i16, i16* %7, i64 %18
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds i8, i8* %19, i64 %14
  %47 = add nuw nsw i64 %18, 1
  %48 = icmp eq i64 %47, %15
  br i1 %48, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask32_to_rgba_opaquePvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %33, %16 ]
  %18 = phi i32* [ %12, %9 ], [ %32, %16 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = zext i8 %20 to i32
  %24 = zext i8 %21 to i32
  %25 = zext i8 %22 to i32
  %26 = shl nuw nsw i32 %24, 8
  %27 = shl nuw nsw i32 %25, 16
  %28 = or i32 %26, %23
  %29 = or i32 %28, %27
  %30 = or i32 %29, -16777216
  %31 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds i32, i32* %18, i64 %13
  %33 = add nuw nsw i64 %17, 1
  %34 = icmp eq i64 %33, %14
  br i1 %34, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL31swizzle_mask32_to_rgba_unpremulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %36, %16 ]
  %18 = phi i32* [ %12, %9 ], [ %35, %16 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %19) #9
  %24 = zext i8 %23 to i32
  %25 = zext i8 %20 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = shl nuw i32 %24, 24
  %29 = shl nuw nsw i32 %26, 8
  %30 = shl nuw nsw i32 %27, 16
  %31 = or i32 %29, %25
  %32 = or i32 %31, %30
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %18, i64 %13
  %36 = add nuw nsw i64 %17, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask32_to_rgba_premulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %45, %6
  ret void

16:                                               ; preds = %45, %9
  %17 = phi i64 [ 0, %9 ], [ %57, %45 ]
  %18 = phi i32* [ %12, %9 ], [ %56, %45 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %19) #9
  %24 = zext i8 %23 to i32
  %25 = zext i8 %20 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = icmp eq i8 %23, -1
  br i1 %28, label %45, label %29

29:                                               ; preds = %16
  %30 = mul nuw nsw i32 %24, %25
  %31 = add nuw nsw i32 %30, 128
  %32 = lshr i32 %31, 8
  %33 = add nuw nsw i32 %32, %31
  %34 = lshr i32 %33, 8
  %35 = mul nuw nsw i32 %24, %26
  %36 = add nuw nsw i32 %35, 128
  %37 = lshr i32 %36, 8
  %38 = add nuw nsw i32 %37, %36
  %39 = lshr i32 %38, 8
  %40 = mul nuw nsw i32 %24, %27
  %41 = add nuw nsw i32 %40, 128
  %42 = lshr i32 %41, 8
  %43 = add nuw nsw i32 %42, %41
  %44 = lshr i32 %43, 8
  br label %45

45:                                               ; preds = %16, %29
  %46 = phi i32 [ %34, %29 ], [ %25, %16 ]
  %47 = phi i32 [ %39, %29 ], [ %26, %16 ]
  %48 = phi i32 [ %44, %29 ], [ %27, %16 ]
  %49 = shl nuw i32 %24, 24
  %50 = or i32 %46, %49
  %51 = shl nuw nsw i32 %47, 8
  %52 = or i32 %50, %51
  %53 = shl i32 %48, 16
  %54 = or i32 %52, %53
  %55 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds i32, i32* %18, i64 %13
  %57 = add nuw nsw i64 %17, 1
  %58 = icmp eq i64 %57, %14
  br i1 %58, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask32_to_bgra_opaquePvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %33, %16 ]
  %18 = phi i32* [ %12, %9 ], [ %32, %16 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = zext i8 %20 to i32
  %24 = zext i8 %21 to i32
  %25 = zext i8 %22 to i32
  %26 = shl nuw nsw i32 %23, 16
  %27 = shl nuw nsw i32 %24, 8
  %28 = or i32 %26, %27
  %29 = or i32 %28, %25
  %30 = or i32 %29, -16777216
  %31 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds i32, i32* %18, i64 %13
  %33 = add nuw nsw i64 %17, 1
  %34 = icmp eq i64 %33, %14
  br i1 %34, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL31swizzle_mask32_to_bgra_unpremulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %36, %16 ]
  %18 = phi i32* [ %12, %9 ], [ %35, %16 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %19) #9
  %24 = zext i8 %23 to i32
  %25 = zext i8 %20 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = shl nuw i32 %24, 24
  %29 = shl nuw nsw i32 %25, 16
  %30 = shl nuw nsw i32 %26, 8
  %31 = or i32 %30, %29
  %32 = or i32 %31, %27
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %18, i64 %13
  %36 = add nuw nsw i64 %17, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29swizzle_mask32_to_bgra_premulPvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i32*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %45, %6
  ret void

16:                                               ; preds = %45, %9
  %17 = phi i64 [ 0, %9 ], [ %57, %45 ]
  %18 = phi i32* [ %12, %9 ], [ %56, %45 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = tail call zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks* %3, i32 %19) #9
  %24 = zext i8 %23 to i32
  %25 = zext i8 %20 to i32
  %26 = zext i8 %21 to i32
  %27 = zext i8 %22 to i32
  %28 = icmp eq i8 %23, -1
  br i1 %28, label %45, label %29

29:                                               ; preds = %16
  %30 = mul nuw nsw i32 %24, %25
  %31 = add nuw nsw i32 %30, 128
  %32 = lshr i32 %31, 8
  %33 = add nuw nsw i32 %32, %31
  %34 = lshr i32 %33, 8
  %35 = mul nuw nsw i32 %24, %26
  %36 = add nuw nsw i32 %35, 128
  %37 = lshr i32 %36, 8
  %38 = add nuw nsw i32 %37, %36
  %39 = lshr i32 %38, 8
  %40 = mul nuw nsw i32 %24, %27
  %41 = add nuw nsw i32 %40, 128
  %42 = lshr i32 %41, 8
  %43 = add nuw nsw i32 %42, %41
  %44 = lshr i32 %43, 8
  br label %45

45:                                               ; preds = %16, %29
  %46 = phi i32 [ %34, %29 ], [ %25, %16 ]
  %47 = phi i32 [ %39, %29 ], [ %26, %16 ]
  %48 = phi i32 [ %44, %29 ], [ %27, %16 ]
  %49 = shl nuw i32 %24, 24
  %50 = shl i32 %46, 16
  %51 = or i32 %50, %49
  %52 = shl nuw nsw i32 %47, 8
  %53 = or i32 %51, %52
  %54 = or i32 %53, %48
  %55 = getelementptr inbounds i32, i32* %7, i64 %17
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds i32, i32* %18, i64 %13
  %57 = add nuw nsw i64 %17, 1
  %58 = icmp eq i64 %57, %14
  br i1 %58, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21swizzle_mask32_to_565PvPKhiP7SkMasksjj(i8* nocapture, i8* nocapture readonly, i32, %class.SkMasks*, i32, i32) #1 {
  %7 = bitcast i8* %0 to i16*
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i32*
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = zext i32 %5 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %6
  ret void

16:                                               ; preds = %16, %9
  %17 = phi i64 [ 0, %9 ], [ %35, %16 ]
  %18 = phi i32* [ %12, %9 ], [ %34, %16 ]
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks* %3, i32 %19) #9
  %21 = tail call zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks* %3, i32 %19) #9
  %22 = tail call zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks* %3, i32 %19) #9
  %23 = lshr i8 %20, 3
  %24 = zext i8 %23 to i16
  %25 = shl nuw i16 %24, 11
  %26 = lshr i8 %21, 2
  %27 = zext i8 %26 to i16
  %28 = shl nuw nsw i16 %27, 5
  %29 = or i16 %28, %25
  %30 = lshr i8 %22, 3
  %31 = zext i8 %30 to i16
  %32 = or i16 %29, %31
  %33 = getelementptr inbounds i16, i16* %7, i64 %17
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i32, i32* %18, i64 %13
  %35 = add nuw nsw i64 %17, 1
  %36 = icmp eq i64 %35, %14
  br i1 %36, label %15, label %16
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14SkMaskSwizzlerC2EP7SkMasksPFvPvPKhiS1_jjEii(%class.SkMaskSwizzler* nocapture, %class.SkMasks*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, i32, i32) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV14SkMaskSwizzler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 2
  store %class.SkMasks* %1, %class.SkMasks** %8, align 8
  %9 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 3
  store void (i8*, i8*, i32, %class.SkMasks*, i32, i32)* %2, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)** %9, align 8
  %10 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 4
  store i32 %4, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 5
  store i32 %4, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 6
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 7
  store i32 %3, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 8
  store i32 %3, i32* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN14SkMaskSwizzler12onSetSampleXEi(%class.SkMaskSwizzler* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 8
  %4 = sdiv i32 %1, 2
  %5 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, %4
  %8 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 8
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = sdiv i32 %10, %1
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %13, %12 ], [ 1, %2 ]
  %16 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 5
  store i32 %15, i32* %16, align 4
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkMaskSwizzler7swizzleEPvPKh(%class.SkMaskSwizzler* nocapture readonly, i8*, i8* noalias) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 3
  %5 = load void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)** %4, align 8
  %6 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 2
  %9 = load %class.SkMasks*, %class.SkMasks** %8, align 8
  %10 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  tail call void %5(i8* %1, i8* %2, i32 %7, %class.SkMasks* %9, i32 %11, i32 %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkMaskSwizzler9fillWidthEv(%class.SkMaskSwizzler*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkMaskSwizzlerD0Ev(%class.SkMaskSwizzler*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkMaskSwizzler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare zeroext i8 @_ZNK7SkMasks6getRedEj(%class.SkMasks*, i32) local_unnamed_addr #6

declare zeroext i8 @_ZNK7SkMasks8getGreenEj(%class.SkMasks*, i32) local_unnamed_addr #6

declare zeroext i8 @_ZNK7SkMasks7getBlueEj(%class.SkMasks*, i32) local_unnamed_addr #6

declare zeroext i8 @_ZNK7SkMasks8getAlphaEj(%class.SkMasks*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkSamplerD2Ev(%class.SkSampler*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
