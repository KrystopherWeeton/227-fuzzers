; ModuleID = '../../cc/tiles/tile_task_manager.cc'
source_filename = "../../cc/tiles/tile_task_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"class.cc::TileTaskManagerImpl" = type <{ %"class.cc::TileTaskManager", %"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken", [4 x i8] }>
%"class.cc::NamespaceToken" = type { i32 }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector", %"class.std::__1::vector.5" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.2" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr, i16, i16, i32 }
%class.scoped_refptr = type { %"class.cc::Task"* }
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.7" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.cc::TaskGraph::Edge"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.scoped_refptr* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.19", i8, [7 x i8] }>
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %class.scoped_refptr.21*, %class.scoped_refptr.21*, %"class.std::__1::__compressed_pair.22" }
%class.scoped_refptr.21 = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.scoped_refptr.21* }
%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope" = type { %"class.base::IgnoreHangsInScope" }
%"class.base::IgnoreHangsInScope" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

@_ZTVN2cc15TileTaskManagerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::TileTaskManager"*)* @_ZN2cc15TileTaskManagerD2Ev to i8*), i8* bitcast (void (%"class.cc::TileTaskManager"*)* @_ZN2cc15TileTaskManagerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN2cc19TileTaskManagerImplE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::TileTaskManagerImpl"*)* @_ZN2cc19TileTaskManagerImplD2Ev to i8*), i8* bitcast (void (%"class.cc::TileTaskManagerImpl"*)* @_ZN2cc19TileTaskManagerImplD0Ev to i8*), i8* bitcast (void (%"class.cc::TileTaskManagerImpl"*, %"struct.cc::TaskGraph"*)* @_ZN2cc19TileTaskManagerImpl13ScheduleTasksEPNS_9TaskGraphE to i8*), i8* bitcast (void (%"class.cc::TileTaskManagerImpl"*)* @_ZN2cc19TileTaskManagerImpl22CheckForCompletedTasksEv to i8*), i8* bitcast (void (%"class.cc::TileTaskManagerImpl"*)* @_ZN2cc19TileTaskManagerImpl8ShutdownEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [35 x i8] c"TileTaskManagerImpl::ScheduleTasks\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"TileTaskManagerImpl::CheckForCompletedTasks\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"TileTaskManagerImpl::Shutdown\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Shutdown\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"../../cc/tiles/tile_task_manager.cc\00", align 1

@_ZN2cc15TileTaskManagerD1Ev = hidden unnamed_addr alias void (%"class.cc::TileTaskManager"*), void (%"class.cc::TileTaskManager"*)* @_ZN2cc15TileTaskManagerD2Ev
@_ZN2cc19TileTaskManagerImplC1EPNS_15TaskGraphRunnerE = hidden unnamed_addr alias void (%"class.cc::TileTaskManagerImpl"*, %"class.cc::TaskGraphRunner"*), void (%"class.cc::TileTaskManagerImpl"*, %"class.cc::TaskGraphRunner"*)* @_ZN2cc19TileTaskManagerImplC2EPNS_15TaskGraphRunnerE
@_ZN2cc19TileTaskManagerImplD1Ev = hidden unnamed_addr alias void (%"class.cc::TileTaskManagerImpl"*), void (%"class.cc::TileTaskManagerImpl"*)* @_ZN2cc19TileTaskManagerImplD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc15TileTaskManagerC2Ev(%"class.cc::TileTaskManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TileTaskManager", %"class.cc::TileTaskManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15TileTaskManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc15TileTaskManagerD2Ev(%"class.cc::TileTaskManager"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2cc15TileTaskManagerD0Ev(%"class.cc::TileTaskManager"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::TileTaskManagerImpl"* @_ZN2cc19TileTaskManagerImpl6CreateEPNS_15TaskGraphRunnerE(%"class.cc::TaskGraphRunner"*) local_unnamed_addr #4 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #11
  %3 = bitcast i8* %2 to %"class.cc::TileTaskManagerImpl"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc19TileTaskManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to %"class.cc::TaskGraphRunner"**
  store %"class.cc::TaskGraphRunner"* %0, %"class.cc::TaskGraphRunner"** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast i8* %7 to %"class.cc::NamespaceToken"*
  %9 = bitcast %"class.cc::TaskGraphRunner"* %0 to void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)***
  %10 = load void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)**, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)** %10, i64 2
  %12 = load void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)** %11, align 8
  tail call void %12(%"class.cc::NamespaceToken"* sret %8, %"class.cc::TaskGraphRunner"* %0) #12
  ret %"class.cc::TileTaskManagerImpl"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19TileTaskManagerImplC2EPNS_15TaskGraphRunnerE(%"class.cc::TileTaskManagerImpl"*, %"class.cc::TaskGraphRunner"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc19TileTaskManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 1
  store %"class.cc::TaskGraphRunner"* %1, %"class.cc::TaskGraphRunner"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 2
  %6 = bitcast %"class.cc::TaskGraphRunner"* %1 to void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)***
  %7 = load void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)**, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)** %7, i64 2
  %9 = load void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)** %8, align 8
  tail call void %9(%"class.cc::NamespaceToken"* sret %5, %"class.cc::TaskGraphRunner"* %1) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc19TileTaskManagerImplD2Ev(%"class.cc::TileTaskManagerImpl"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19TileTaskManagerImplD0Ev(%"class.cc::TileTaskManagerImpl"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.cc::TileTaskManagerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19TileTaskManagerImpl13ScheduleTasksEPNS_9TaskGraphE(%"class.cc::TileTaskManagerImpl"* nocapture readonly, %"struct.cc::TaskGraph"*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 1
  %19 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %18, align 8
  %20 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %22 = load i32, i32* %20, align 8
  store i32 %22, i32* %21, align 4
  %23 = bitcast %"class.cc::TaskGraphRunner"* %19 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)***
  %24 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)** %24, i64 3
  %26 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)** %25, align 8
  call void %26(%"class.cc::TaskGraphRunner"* %19, %"class.cc::NamespaceToken"* nonnull %4, %"struct.cc::TaskGraph"* %1) #12
  %27 = icmp eq i8* %17, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %14
  %29 = load i8, i8* %17, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #12
  br label %32

32:                                               ; preds = %14, %28, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19TileTaskManagerImpl22CheckForCompletedTasksEv(%"class.cc::TileTaskManagerImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.std::__1::vector.12", align 8
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %10 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %8 ]
  %18 = bitcast %"class.std::__1::vector.12"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #12
  %21 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 1
  %22 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %25 = load i32, i32* %23, align 8
  store i32 %25, i32* %24, align 4
  %26 = bitcast %"class.cc::TaskGraphRunner"* %22 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)***
  %27 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)** %27, i64 5
  %29 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.12"*)** %28, align 8
  call void %29(%"class.cc::TaskGraphRunner"* %22, %"class.cc::NamespaceToken"* nonnull %4, %"class.std::__1::vector.12"* nonnull %3) #12
  %30 = load %class.scoped_refptr*, %class.scoped_refptr** %19, align 8
  %31 = load %class.scoped_refptr*, %class.scoped_refptr** %20, align 8
  %32 = icmp eq %class.scoped_refptr* %30, %31
  br i1 %32, label %35, label %74

33:                                               ; preds = %74
  %34 = load %class.scoped_refptr*, %class.scoped_refptr** %19, align 8
  br label %35

35:                                               ; preds = %33, %14
  %36 = phi %class.scoped_refptr* [ %34, %33 ], [ %30, %14 ]
  %37 = icmp eq %class.scoped_refptr* %36, null
  br i1 %37, label %67, label %38

38:                                               ; preds = %35
  %39 = bitcast %class.scoped_refptr* %36 to i8*
  %40 = load %class.scoped_refptr*, %class.scoped_refptr** %20, align 8
  %41 = icmp eq %class.scoped_refptr* %40, %36
  br i1 %41, label %65, label %42

42:                                               ; preds = %38, %60
  %43 = phi %class.scoped_refptr* [ %44, %60 ], [ %40, %38 ]
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 -1
  %45 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 0, i32 0
  %46 = load %"class.cc::Task"*, %"class.cc::Task"** %45, align 8
  %47 = icmp eq %"class.cc::Task"* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %46, i64 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe"* %54 to %"class.cc::Task"*
  %56 = bitcast %"class.base::RefCountedThreadSafe"* %54 to void (%"class.cc::Task"*)***
  %57 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %57, i64 2
  %59 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %58, align 8
  call void %59(%"class.cc::Task"* nonnull %55) #12
  br label %60

60:                                               ; preds = %53, %48, %42
  %61 = icmp eq %class.scoped_refptr* %44, %36
  br i1 %61, label %62, label %42

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.12"* %3 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %38
  %66 = phi i8* [ %64, %62 ], [ %39, %38 ]
  store %class.scoped_refptr* %36, %class.scoped_refptr** %20, align 8
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %35, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %68 = icmp eq i8* %17, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = load i8, i8* %17, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #12
  br label %73

73:                                               ; preds = %67, %69, %72
  ret void

74:                                               ; preds = %14, %74
  %75 = phi %class.scoped_refptr* [ %83, %74 ], [ %30, %14 ]
  %76 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %75, i64 0, i32 0
  %77 = load %"class.cc::Task"*, %"class.cc::Task"** %76, align 8
  %78 = bitcast %"class.cc::Task"* %77 to %"class.cc::TileTask"*
  %79 = bitcast %"class.cc::Task"* %77 to void (%"class.cc::TileTask"*)***
  %80 = load void (%"class.cc::TileTask"*)**, void (%"class.cc::TileTask"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.cc::TileTask"*)*, void (%"class.cc::TileTask"*)** %80, i64 3
  %82 = load void (%"class.cc::TileTask"*)*, void (%"class.cc::TileTask"*)** %81, align 8
  call void %82(%"class.cc::TileTask"* %78) #12
  call void @_ZN2cc8TileTask11DidCompleteEv(%"class.cc::TileTask"* %78) #12
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %75, i64 1
  %84 = icmp eq %class.scoped_refptr* %83, %31
  br i1 %84, label %33, label %74
}

declare void @_ZN2cc8TileTask11DidCompleteEv(%"class.cc::TileTask"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19TileTaskManagerImpl8ShutdownEv(%"class.cc::TileTaskManagerImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"struct.cc::TaskGraph", align 8
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = alloca %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope", align 1
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.cc::NamespaceToken", align 4
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %1
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %17

17:                                               ; preds = %1, %11
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %16, %11 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), %11 ]
  %20 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %11 ]
  %21 = bitcast %"struct.cc::TaskGraph"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #12
  %22 = bitcast %"struct.cc::TaskGraph"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 48, i1 false)
  call void @_ZN2cc9TaskGraphC1Ev(%"struct.cc::TaskGraph"* nonnull %3) #12
  %23 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 1
  %24 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %23, align 8
  %25 = getelementptr inbounds %"class.cc::TileTaskManagerImpl", %"class.cc::TileTaskManagerImpl"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %27 = load i32, i32* %25, align 8
  store i32 %27, i32* %26, align 4
  %28 = bitcast %"class.cc::TaskGraphRunner"* %24 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)***
  %29 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)** %29, i64 3
  %31 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)** %30, align 8
  call void %31(%"class.cc::TaskGraphRunner"* %24, %"class.cc::NamespaceToken"* nonnull %4, %"struct.cc::TaskGraph"* nonnull %3) #12
  %32 = getelementptr inbounds %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope", %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #12
  store i8 -86, i8* %32, align 1
  %33 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 55) #12
  call void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeC1ERKNS_8LocationE(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #12
  %34 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %23, align 8
  %35 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %7, i64 0, i32 0
  %36 = load i32, i32* %25, align 8
  store i32 %36, i32* %35, align 4
  %37 = bitcast %"class.cc::TaskGraphRunner"* %34 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)***
  %38 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)** %38, i64 4
  %40 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)** %39, align 8
  call void %40(%"class.cc::TaskGraphRunner"* %34, %"class.cc::NamespaceToken"* nonnull %7) #12
  call void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeD1Ev(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #12
  call void @_ZN2cc9TaskGraphD1Ev(%"struct.cc::TaskGraph"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #12
  %41 = icmp eq i8* %20, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %17
  %43 = load i8, i8* %20, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %18) #12
  br label %46

46:                                               ; preds = %17, %42, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare void @_ZN2cc9TaskGraphC1Ev(%"struct.cc::TaskGraph"*) unnamed_addr #8

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #8

declare void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeC1ERKNS_8LocationE(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeD1Ev(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN2cc9TaskGraphD1Ev(%"struct.cc::TaskGraph"*) unnamed_addr #9

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #8

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #8

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #8

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
