; ModuleID = '../../third_party/libwebp/src/mux/muxedit.c'
source_filename = "../../third_party/libwebp/src/mux/muxedit.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ChunkInfo = type { i32, i32, i32 }
%struct.WebPMux = type { %struct.WebPMuxImage*, %struct.WebPChunk*, %struct.WebPChunk*, %struct.WebPChunk*, %struct.WebPChunk*, %struct.WebPChunk*, %struct.WebPChunk*, i32, i32 }
%struct.WebPMuxImage = type { %struct.WebPChunk*, %struct.WebPChunk*, %struct.WebPChunk*, %struct.WebPChunk*, i32, i32, i32, i32, %struct.WebPMuxImage* }
%struct.WebPChunk = type { i32, i32, %struct.WebPData, %struct.WebPChunk* }
%struct.WebPData = type { i8*, i64 }
%struct.WebPMuxFrameInfo = type { %struct.WebPData, i32, i32, i32, i32, i32, i32, [1 x i32] }
%struct.WebPMuxAnimParams = type { i32, i32 }

@kChunks = external local_unnamed_addr constant [11 x %struct.ChunkInfo], align 16
@.str = private unnamed_addr constant [5 x i8] c"RIFF\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.WebPMux* @WebPNewInternal(i32) local_unnamed_addr #0 {
  %2 = and i32 %0, -256
  %3 = icmp eq i32 %2, 256
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = tail call i8* @WebPSafeMalloc(i64 1, i64 64) #4
  %6 = bitcast i8* %5 to %struct.WebPMux*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 64, i1 false) #4
  br label %9

9:                                                ; preds = %8, %4, %1
  %10 = phi %struct.WebPMux* [ null, %1 ], [ %6, %4 ], [ %6, %8 ]
  ret %struct.WebPMux* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @WebPSafeMalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPMuxDelete(%struct.WebPMux*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.WebPMux* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 0
  %5 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %4, align 8
  %6 = icmp eq %struct.WebPMuxImage* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3, %7
  %8 = phi %struct.WebPMuxImage* [ %9, %7 ], [ %5, %3 ]
  %9 = tail call %struct.WebPMuxImage* @MuxImageDelete(%struct.WebPMuxImage* nonnull %8) #4
  store %struct.WebPMuxImage* %9, %struct.WebPMuxImage** %4, align 8
  %10 = icmp eq %struct.WebPMuxImage* %9, null
  br i1 %10, label %11, label %7

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 5
  tail call void @ChunkListDelete(%struct.WebPChunk** %12) #4
  %13 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 1
  tail call void @ChunkListDelete(%struct.WebPChunk** %13) #4
  %14 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 4
  tail call void @ChunkListDelete(%struct.WebPChunk** %14) #4
  %15 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 2
  tail call void @ChunkListDelete(%struct.WebPChunk** %15) #4
  %16 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 3
  tail call void @ChunkListDelete(%struct.WebPChunk** %16) #4
  %17 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 6
  tail call void @ChunkListDelete(%struct.WebPChunk** %17) #4
  %18 = bitcast %struct.WebPMux* %0 to i8*
  tail call void @WebPSafeFree(i8* nonnull %18) #4
  br label %19

19:                                               ; preds = %1, %11
  ret void
}

declare void @WebPSafeFree(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxSetChunk(%struct.WebPMux*, i8*, %struct.WebPData*, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.WebPMux* %0, null
  %6 = icmp eq i8* %1, null
  %7 = or i1 %5, %6
  %8 = icmp eq %struct.WebPData* %2, null
  %9 = or i1 %7, %8
  br i1 %9, label %46, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %2, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4294967286
  br i1 %17, label %46, label %18

18:                                               ; preds = %14
  %19 = tail call i32 @ChunkGetTagFromFourCC(i8* nonnull %1) #4
  %20 = tail call i32 @ChunkGetIdFromTag(i32 %19) #4
  switch i32 %20, label %21 [
    i32 3, label %46
    i32 5, label %46
    i32 6, label %46
  ]

21:                                               ; preds = %18
  %22 = tail call %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux* nonnull %0, i32 %20) #4
  %23 = load %struct.WebPChunk*, %struct.WebPChunk** %22, align 8
  %24 = icmp eq %struct.WebPChunk* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %21, %37
  %26 = phi %struct.WebPChunk* [ %38, %37 ], [ %23, %21 ]
  %27 = phi %struct.WebPChunk** [ %40, %37 ], [ %22, %21 ]
  %28 = phi i32 [ %39, %37 ], [ 0, %21 ]
  %29 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %26, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, %19
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = tail call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %26) #4
  store %struct.WebPChunk* %33, %struct.WebPChunk** %27, align 8
  br label %37

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %26, i64 0, i32 3
  %36 = load %struct.WebPChunk*, %struct.WebPChunk** %35, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi %struct.WebPChunk* [ %33, %32 ], [ %36, %34 ]
  %39 = phi i32 [ 1, %32 ], [ %28, %34 ]
  %40 = phi %struct.WebPChunk** [ %27, %32 ], [ %35, %34 ]
  %41 = icmp eq %struct.WebPChunk* %38, null
  br i1 %41, label %42, label %25

42:                                               ; preds = %37
  %43 = icmp ugt i32 %39, 1
  br i1 %43, label %46, label %44

44:                                               ; preds = %21, %42
  %45 = tail call fastcc i32 @MuxSet(%struct.WebPMux* %0, i32 %19, %struct.WebPData* %2, i32 %3)
  br label %46

46:                                               ; preds = %18, %18, %18, %42, %4, %10, %14, %44
  %47 = phi i32 [ %45, %44 ], [ -1, %14 ], [ -1, %10 ], [ -1, %4 ], [ %39, %42 ], [ -1, %18 ], [ -1, %18 ], [ -1, %18 ]
  ret i32 %47
}

declare i32 @ChunkGetTagFromFourCC(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @MuxSet(%struct.WebPMux*, i32, %struct.WebPData*, i32) unnamed_addr #0 {
  %5 = alloca %struct.WebPChunk, align 8
  %6 = bitcast %struct.WebPChunk* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  %7 = bitcast %struct.WebPChunk* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = tail call i32 @ChunkGetIndexFromTag(i32 %1) #4
  call void @ChunkInit(%struct.WebPChunk* nonnull %5) #4
  switch i32 %8, label %45 [
    i32 0, label %9
    i32 1, label %15
    i32 2, label %21
    i32 7, label %27
    i32 8, label %33
    i32 9, label %39
  ]

9:                                                ; preds = %4
  %10 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* %2, i32 %3, i32 %1) #4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %45

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 5
  %14 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %13) #4
  br label %45

15:                                               ; preds = %4
  %16 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* %2, i32 %3, i32 %1) #4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %45

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 1
  %20 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %19) #4
  br label %45

21:                                               ; preds = %4
  %22 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* %2, i32 %3, i32 %1) #4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %45

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 4
  %26 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %25) #4
  br label %45

27:                                               ; preds = %4
  %28 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* %2, i32 %3, i32 %1) #4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %45

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 2
  %32 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %31) #4
  br label %45

33:                                               ; preds = %4
  %34 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* %2, i32 %3, i32 %1) #4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %45

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 3
  %38 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %37) #4
  br label %45

39:                                               ; preds = %4
  %40 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* %2, i32 %3, i32 %1) #4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 6
  %44 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %43) #4
  br label %45

45:                                               ; preds = %4, %39, %42, %33, %36, %27, %30, %21, %24, %15, %18, %9, %12
  %46 = phi i32 [ %14, %12 ], [ %10, %9 ], [ %20, %18 ], [ %16, %15 ], [ %26, %24 ], [ %22, %21 ], [ %32, %30 ], [ %28, %27 ], [ %38, %36 ], [ %34, %33 ], [ %44, %42 ], [ %40, %39 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxSetImage(%struct.WebPMux*, %struct.WebPData*, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.WebPMuxImage, align 8
  %5 = bitcast %struct.WebPMuxImage* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  %6 = icmp eq %struct.WebPMux* %0, null
  %7 = icmp eq %struct.WebPData* %1, null
  %8 = or i1 %6, %7
  br i1 %8, label %34, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %1, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, 4294967286
  br i1 %16, label %34, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 0
  %19 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %18, align 8
  %20 = icmp eq %struct.WebPMuxImage* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17, %21
  %22 = phi %struct.WebPMuxImage* [ %23, %21 ], [ %19, %17 ]
  %23 = tail call %struct.WebPMuxImage* @MuxImageDelete(%struct.WebPMuxImage* nonnull %22) #4
  store %struct.WebPMuxImage* %23, %struct.WebPMuxImage** %18, align 8
  %24 = icmp eq %struct.WebPMuxImage* %23, null
  br i1 %24, label %25, label %21

25:                                               ; preds = %21, %17
  call void @MuxImageInit(%struct.WebPMuxImage* nonnull %4) #4
  %26 = call fastcc i32 @SetAlphaAndImageChunks(%struct.WebPData* %1, i32 %2, %struct.WebPMuxImage* nonnull %4)
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = call i32 @MuxImagePush(%struct.WebPMuxImage* nonnull %4, %struct.WebPMuxImage** %18) #4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28, %25
  %32 = phi i32 [ %26, %25 ], [ %29, %28 ]
  %33 = call %struct.WebPMuxImage* @MuxImageRelease(%struct.WebPMuxImage* nonnull %4) #4
  br label %34

34:                                               ; preds = %28, %3, %9, %13, %31
  %35 = phi i32 [ %32, %31 ], [ -1, %13 ], [ -1, %9 ], [ -1, %3 ], [ 1, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #4
  ret i32 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @MuxImageInit(%struct.WebPMuxImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @SetAlphaAndImageChunks(%struct.WebPData*, i32, %struct.WebPMuxImage*) unnamed_addr #0 {
  %4 = alloca %struct.WebPChunk, align 8
  %5 = alloca %struct.WebPChunk, align 8
  %6 = alloca %struct.WebPData, align 8
  %7 = alloca %struct.WebPData, align 8
  %8 = bitcast %struct.WebPData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %6, i64 0, i32 0
  %10 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %6, i64 0, i32 1
  %11 = bitcast %struct.WebPData* %7 to i8*
  %12 = bitcast %struct.WebPData* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %13 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #4
  %14 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 4
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i32 @bcmp(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17, %3
  %23 = bitcast %struct.WebPData* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %23, i64 16, i1 false) #4
  br label %43

24:                                               ; preds = %17
  %25 = tail call %struct.WebPMux* @WebPMuxCreateInternal(%struct.WebPData* %0, i32 0, i32 264) #4
  %26 = icmp eq %struct.WebPMux* %25, null
  br i1 %26, label %81, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %25, i64 0, i32 0
  %29 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %28, align 8
  %30 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %29, i64 0, i32 2
  %31 = load %struct.WebPChunk*, %struct.WebPChunk** %30, align 8
  %32 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %31, i64 0, i32 2
  %33 = bitcast %struct.WebPData* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %33, i64 16, i1 false) #4
  %34 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %29, i64 0, i32 1
  %35 = load %struct.WebPChunk*, %struct.WebPChunk** %34, align 8
  %36 = icmp eq %struct.WebPChunk* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %35, i64 0, i32 2
  %39 = bitcast %struct.WebPData* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %39, i64 16, i1 false) #4
  %40 = load i8*, i8** %13, align 8
  br label %41

41:                                               ; preds = %37, %27
  %42 = phi i8* [ %40, %37 ], [ null, %27 ]
  tail call void @WebPMuxDelete(%struct.WebPMux* nonnull %25) #4
  br label %43

43:                                               ; preds = %22, %41
  %44 = phi i8* [ null, %22 ], [ %42, %41 ]
  %45 = load i8*, i8** %9, align 8
  %46 = load i64, i64* %10, align 8
  %47 = tail call i32 @VP8LCheckSignature(i8* %45, i64 %46) #4
  %48 = icmp eq i32 %47, 0
  %49 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 6, i32 0), align 8
  %50 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 5, i32 0), align 4
  %51 = select i1 %48, i32 %50, i32 %49
  %52 = icmp eq i8* %44, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %43
  %54 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 4, i32 0), align 16
  %55 = bitcast %struct.WebPChunk* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 32, i1 false) #4
  call void @ChunkInit(%struct.WebPChunk* nonnull %5) #4
  %56 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %5, %struct.WebPData* nonnull %7, i32 %1, i32 %54) #4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %2, i64 0, i32 1
  %60 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %5, %struct.WebPChunk** %59) #4
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #4
  br label %66

63:                                               ; preds = %53, %58
  %64 = phi i32 [ %56, %53 ], [ %60, %58 ]
  %65 = call %struct.WebPChunk* @ChunkRelease(%struct.WebPChunk* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #4
  br label %81

66:                                               ; preds = %62, %43
  %67 = bitcast %struct.WebPChunk* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false) #4
  call void @ChunkInit(%struct.WebPChunk* nonnull %4) #4
  %68 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %4, %struct.WebPData* nonnull %6, i32 %1, i32 %51) #4
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %2, i64 0, i32 2
  %72 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %4, %struct.WebPChunk** %71) #4
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %77, label %74

74:                                               ; preds = %66, %70
  %75 = phi i32 [ %68, %66 ], [ %72, %70 ]
  %76 = call %struct.WebPChunk* @ChunkRelease(%struct.WebPChunk* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #4
  br label %81

77:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #4
  %78 = call i32 @MuxImageFinalize(%struct.WebPMuxImage* %2) #4
  %79 = icmp eq i32 %78, 0
  %80 = select i1 %79, i32 -1, i32 1
  br label %81

81:                                               ; preds = %24, %74, %63, %77
  %82 = phi i32 [ %80, %77 ], [ %64, %63 ], [ %75, %74 ], [ -2, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %82
}

declare i32 @MuxImagePush(%struct.WebPMuxImage*, %struct.WebPMuxImage**) local_unnamed_addr #2

declare %struct.WebPMuxImage* @MuxImageRelease(%struct.WebPMuxImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxPushFrame(%struct.WebPMux*, %struct.WebPMuxFrameInfo*, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.WebPChunk, align 8
  %5 = alloca %struct.WebPMuxImage, align 8
  %6 = alloca %struct.WebPData, align 8
  %7 = bitcast %struct.WebPMuxImage* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = icmp eq %struct.WebPMux* %0, null
  %9 = icmp eq %struct.WebPMuxFrameInfo* %1, null
  %10 = or i1 %8, %9
  br i1 %10, label %144, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %144

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 0
  %17 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %144, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, 4294967286
  br i1 %23, label %144, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 0
  %26 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %25, align 8
  %27 = icmp eq %struct.WebPMuxImage* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %26, i64 0, i32 0
  %30 = load %struct.WebPChunk*, %struct.WebPChunk** %29, align 8
  %31 = icmp eq %struct.WebPChunk* %30, null
  br i1 %31, label %144, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %30, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = tail call i32 @ChunkGetIdFromTag(i32 %34) #4
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %144

38:                                               ; preds = %24, %32
  call void @MuxImageInit(%struct.WebPMuxImage* nonnull %5) #4
  %39 = call fastcc i32 @SetAlphaAndImageChunks(%struct.WebPData* %16, i32 %2, %struct.WebPMuxImage* nonnull %5)
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %141

41:                                               ; preds = %38
  %42 = bitcast %struct.WebPData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #4
  %43 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %6, i64 0, i32 0
  %44 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %6, i64 0, i32 1
  %45 = bitcast %struct.WebPData* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 3, i32 0), align 4
  %47 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %struct.WebPMuxFrameInfo, %struct.WebPMuxFrameInfo* %1, i64 0, i32 6
  %56 = load i32, i32* %55, align 4
  %57 = or i32 %50, %48
  %58 = icmp ugt i32 %57, 16777215
  br i1 %58, label %136, label %59

59:                                               ; preds = %41
  %60 = icmp ugt i32 %52, 16777215
  %61 = icmp ugt i32 %54, 1
  %62 = or i1 %60, %61
  br i1 %62, label %136, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %5, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %5, i64 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 3, i32 2), align 4
  %69 = zext i32 %68 to i64
  %70 = call i8* @WebPSafeMalloc(i64 1, i64 %69) #4
  %71 = icmp eq i8* %70, null
  br i1 %71, label %136, label %72

72:                                               ; preds = %63
  %73 = lshr i32 %48, 1
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %70, align 1
  %75 = lshr i32 %48, 9
  %76 = trunc i32 %75 to i8
  %77 = getelementptr inbounds i8, i8* %70, i64 1
  store i8 %76, i8* %77, align 1
  %78 = lshr i32 %48, 17
  %79 = trunc i32 %78 to i8
  %80 = getelementptr inbounds i8, i8* %70, i64 2
  store i8 %79, i8* %80, align 1
  %81 = getelementptr inbounds i8, i8* %70, i64 3
  %82 = lshr i32 %50, 1
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %81, align 1
  %84 = lshr i32 %50, 9
  %85 = trunc i32 %84 to i8
  %86 = getelementptr inbounds i8, i8* %70, i64 4
  store i8 %85, i8* %86, align 1
  %87 = lshr i32 %50, 17
  %88 = trunc i32 %87 to i8
  %89 = getelementptr inbounds i8, i8* %70, i64 5
  store i8 %88, i8* %89, align 1
  %90 = getelementptr inbounds i8, i8* %70, i64 6
  %91 = add nsw i32 %65, -1
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %90, align 1
  %93 = lshr i32 %91, 8
  %94 = trunc i32 %93 to i8
  %95 = getelementptr inbounds i8, i8* %70, i64 7
  store i8 %94, i8* %95, align 1
  %96 = lshr i32 %91, 16
  %97 = trunc i32 %96 to i8
  %98 = getelementptr inbounds i8, i8* %70, i64 8
  store i8 %97, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %70, i64 9
  %100 = add nsw i32 %67, -1
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %99, align 1
  %102 = lshr i32 %100, 8
  %103 = trunc i32 %102 to i8
  %104 = getelementptr inbounds i8, i8* %70, i64 10
  store i8 %103, i8* %104, align 1
  %105 = lshr i32 %100, 16
  %106 = trunc i32 %105 to i8
  %107 = getelementptr inbounds i8, i8* %70, i64 11
  store i8 %106, i8* %107, align 1
  %108 = getelementptr inbounds i8, i8* %70, i64 12
  %109 = trunc i32 %52 to i8
  store i8 %109, i8* %108, align 1
  %110 = lshr i32 %52, 8
  %111 = trunc i32 %110 to i8
  %112 = getelementptr inbounds i8, i8* %70, i64 13
  store i8 %111, i8* %112, align 1
  %113 = lshr i32 %52, 16
  %114 = trunc i32 %113 to i8
  %115 = getelementptr inbounds i8, i8* %70, i64 14
  store i8 %114, i8* %115, align 1
  %116 = icmp eq i32 %56, 1
  %117 = select i1 %116, i8 2, i8 0
  %118 = icmp eq i32 %54, 1
  %119 = zext i1 %118 to i8
  %120 = or i8 %117, %119
  %121 = getelementptr inbounds i8, i8* %70, i64 15
  store i8 %120, i8* %121, align 1
  store i8* %70, i8** %43, align 8
  store i64 %69, i64* %44, align 8
  %122 = bitcast %struct.WebPChunk* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 32, i1 false) #4
  call void @ChunkInit(%struct.WebPChunk* nonnull %4) #4
  %123 = call i32 @ChunkAssignData(%struct.WebPChunk* nonnull %4, %struct.WebPData* nonnull %6, i32 1, i32 %46) #4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %129

125:                                              ; preds = %72
  %126 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %5, i64 0, i32 0
  %127 = call i32 @ChunkSetHead(%struct.WebPChunk* nonnull %4, %struct.WebPChunk** nonnull %126) #4
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %132, label %129

129:                                              ; preds = %125, %72
  %130 = phi i32 [ %123, %72 ], [ %127, %125 ]
  %131 = call %struct.WebPChunk* @ChunkRelease(%struct.WebPChunk* nonnull %4) #4
  br label %132

132:                                              ; preds = %125, %129
  %133 = phi i32 [ %130, %129 ], [ 1, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #4
  %134 = load i8*, i8** %43, align 8
  call void @WebPFree(i8* %134) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #4
  %135 = icmp eq i32 %133, 1
  br i1 %135, label %138, label %136

136:                                              ; preds = %59, %41, %63, %132
  %137 = phi i32 [ %133, %132 ], [ -3, %63 ], [ -1, %41 ], [ -1, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #4
  br label %141

138:                                              ; preds = %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #4
  %139 = call i32 @MuxImagePush(%struct.WebPMuxImage* nonnull %5, %struct.WebPMuxImage** %25) #4
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %144, label %141

141:                                              ; preds = %136, %138, %38
  %142 = phi i32 [ %39, %38 ], [ %139, %138 ], [ %137, %136 ]
  %143 = call %struct.WebPMuxImage* @MuxImageRelease(%struct.WebPMuxImage* nonnull %5) #4
  br label %144

144:                                              ; preds = %28, %138, %15, %20, %11, %3, %32, %141
  %145 = phi i32 [ %142, %141 ], [ -1, %32 ], [ -1, %3 ], [ -1, %11 ], [ -1, %20 ], [ -1, %15 ], [ 1, %138 ], [ -1, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #4
  ret i32 %145
}

declare i32 @ChunkGetIdFromTag(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxSetAnimationParams(%struct.WebPMux*, %struct.WebPMuxAnimParams* readonly) local_unnamed_addr #0 {
  %3 = alloca [6 x i8], align 1
  %4 = alloca %struct.WebPData, align 8
  %5 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %5) #4
  %6 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 1
  %7 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 2
  %8 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 3
  %9 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 4
  %10 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 5
  %11 = bitcast %struct.WebPData* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 6, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %12 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %4, i64 0, i32 0
  %13 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %4, i64 0, i32 1
  store i8* %5, i8** %12, align 8
  store i64 6, i64* %13, align 8
  %14 = icmp eq %struct.WebPMux* %0, null
  %15 = icmp eq %struct.WebPMuxAnimParams* %1, null
  %16 = or i1 %14, %15
  br i1 %16, label %62, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.WebPMuxAnimParams, %struct.WebPMuxAnimParams* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 65535
  br i1 %20, label %62, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 2, i32 0), align 8
  %23 = call i32 @ChunkGetIdFromTag(i32 %22) #4
  switch i32 %23, label %24 [
    i32 3, label %62
    i32 5, label %62
    i32 6, label %62
  ]

24:                                               ; preds = %21
  %25 = call %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux* nonnull %0, i32 %23) #4
  %26 = load %struct.WebPChunk*, %struct.WebPChunk** %25, align 8
  %27 = icmp eq %struct.WebPChunk* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24, %40
  %29 = phi %struct.WebPChunk* [ %41, %40 ], [ %26, %24 ]
  %30 = phi %struct.WebPChunk** [ %43, %40 ], [ %25, %24 ]
  %31 = phi i32 [ %42, %40 ], [ 0, %24 ]
  %32 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %29, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %22
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %29) #4
  store %struct.WebPChunk* %36, %struct.WebPChunk** %30, align 8
  br label %40

37:                                               ; preds = %28
  %38 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %29, i64 0, i32 3
  %39 = load %struct.WebPChunk*, %struct.WebPChunk** %38, align 8
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi %struct.WebPChunk* [ %36, %35 ], [ %39, %37 ]
  %42 = phi i32 [ 1, %35 ], [ %31, %37 ]
  %43 = phi %struct.WebPChunk** [ %30, %35 ], [ %38, %37 ]
  %44 = icmp eq %struct.WebPChunk* %41, null
  br i1 %44, label %45, label %28

45:                                               ; preds = %40
  %46 = icmp ugt i32 %42, 1
  br i1 %46, label %62, label %47

47:                                               ; preds = %24, %45
  %48 = getelementptr inbounds %struct.WebPMuxAnimParams, %struct.WebPMuxAnimParams* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = trunc i32 %49 to i8
  store i8 %50, i8* %5, align 1
  %51 = lshr i32 %49, 8
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* %6, align 1
  %53 = lshr i32 %49, 16
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %7, align 1
  %55 = lshr i32 %49, 24
  %56 = trunc i32 %55 to i8
  store i8 %56, i8* %8, align 1
  %57 = load i32, i32* %18, align 4
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %9, align 1
  %59 = lshr i32 %57, 8
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %10, align 1
  %61 = call fastcc i32 @MuxSet(%struct.WebPMux* %0, i32 %22, %struct.WebPData* nonnull %4, i32 1)
  br label %62

62:                                               ; preds = %21, %21, %21, %45, %17, %2, %47
  %63 = phi i32 [ %61, %47 ], [ -1, %2 ], [ -1, %17 ], [ %42, %45 ], [ -1, %21 ], [ -1, %21 ], [ -1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %5) #4
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxSetCanvasSize(%struct.WebPMux*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.WebPMux* %0, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %3
  %6 = or i32 %2, %1
  %7 = icmp slt i32 %6, 0
  %8 = icmp sgt i32 %1, 16777216
  %9 = or i1 %8, %7
  %10 = icmp sgt i32 %2, 16777216
  %11 = or i1 %10, %9
  br i1 %11, label %51, label %12

12:                                               ; preds = %5
  %13 = sext i32 %1 to i64
  %14 = sext i32 %2 to i64
  %15 = mul nsw i64 %14, %13
  %16 = icmp ugt i64 %15, 4294967295
  br i1 %16, label %51, label %17

17:                                               ; preds = %12
  %18 = mul nsw i32 %2, %1
  %19 = icmp ne i32 %18, 0
  %20 = icmp eq i32 %6, 0
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %51

22:                                               ; preds = %17
  %23 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 0, i32 0), align 16
  %24 = tail call i32 @ChunkGetIdFromTag(i32 %23) #4
  switch i32 %24, label %25 [
    i32 3, label %51
    i32 5, label %51
    i32 6, label %51
  ]

25:                                               ; preds = %22
  %26 = tail call %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux* nonnull %0, i32 %24) #4
  %27 = load %struct.WebPChunk*, %struct.WebPChunk** %26, align 8
  %28 = icmp eq %struct.WebPChunk* %27, null
  br i1 %28, label %48, label %29

29:                                               ; preds = %25, %41
  %30 = phi %struct.WebPChunk* [ %42, %41 ], [ %27, %25 ]
  %31 = phi %struct.WebPChunk** [ %44, %41 ], [ %26, %25 ]
  %32 = phi i32 [ %43, %41 ], [ 0, %25 ]
  %33 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %30, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, %23
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = tail call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %30) #4
  store %struct.WebPChunk* %37, %struct.WebPChunk** %31, align 8
  br label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %30, i64 0, i32 3
  %40 = load %struct.WebPChunk*, %struct.WebPChunk** %39, align 8
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi %struct.WebPChunk* [ %37, %36 ], [ %40, %38 ]
  %43 = phi i32 [ 1, %36 ], [ %32, %38 ]
  %44 = phi %struct.WebPChunk** [ %31, %36 ], [ %39, %38 ]
  %45 = icmp eq %struct.WebPChunk* %42, null
  br i1 %45, label %46, label %29

46:                                               ; preds = %41
  %47 = icmp ugt i32 %43, 1
  br i1 %47, label %51, label %48

48:                                               ; preds = %25, %46
  %49 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 7
  store i32 %1, i32* %49, align 8
  %50 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 8
  store i32 %2, i32* %50, align 4
  br label %51

51:                                               ; preds = %22, %22, %22, %46, %17, %12, %5, %3, %48
  %52 = phi i32 [ 1, %48 ], [ -1, %3 ], [ -1, %5 ], [ -1, %12 ], [ -1, %17 ], [ %43, %46 ], [ -1, %22 ], [ -1, %22 ], [ -1, %22 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxDeleteChunk(%struct.WebPMux*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.WebPMux* %0, null
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @ChunkGetTagFromFourCC(i8* nonnull %1) #4
  %8 = tail call i32 @ChunkGetIdFromTag(i32 %7) #4
  switch i32 %8, label %9 [
    i32 3, label %30
    i32 5, label %30
    i32 6, label %30
  ]

9:                                                ; preds = %6
  %10 = tail call %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux* nonnull %0, i32 %8) #4
  %11 = load %struct.WebPChunk*, %struct.WebPChunk** %10, align 8
  %12 = icmp eq %struct.WebPChunk* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %9, %25
  %14 = phi %struct.WebPChunk* [ %26, %25 ], [ %11, %9 ]
  %15 = phi %struct.WebPChunk** [ %28, %25 ], [ %10, %9 ]
  %16 = phi i32 [ %27, %25 ], [ 0, %9 ]
  %17 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %14, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, %7
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %14) #4
  store %struct.WebPChunk* %21, %struct.WebPChunk** %15, align 8
  br label %25

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %14, i64 0, i32 3
  %24 = load %struct.WebPChunk*, %struct.WebPChunk** %23, align 8
  br label %25

25:                                               ; preds = %22, %20
  %26 = phi %struct.WebPChunk* [ %21, %20 ], [ %24, %22 ]
  %27 = phi i32 [ 1, %20 ], [ %16, %22 ]
  %28 = phi %struct.WebPChunk** [ %15, %20 ], [ %23, %22 ]
  %29 = icmp eq %struct.WebPChunk* %26, null
  br i1 %29, label %30, label %13

30:                                               ; preds = %25, %9, %6, %6, %6, %2
  %31 = phi i32 [ -1, %2 ], [ -1, %6 ], [ -1, %6 ], [ -1, %6 ], [ 0, %9 ], [ %27, %25 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxDeleteFrame(%struct.WebPMux*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.WebPMux* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 0
  %6 = tail call i32 @MuxImageDeleteNth(%struct.WebPMuxImage** %5, i32 %1) #4
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %2 ]
  ret i32 %8
}

declare i32 @MuxImageDeleteNth(%struct.WebPMuxImage**, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPMuxAssemble(%struct.WebPMux*, %struct.WebPData*) local_unnamed_addr #0 {
  %3 = alloca [10 x i8], align 1
  %4 = alloca %struct.WebPData, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.WebPMuxImage*, align 8
  %8 = icmp eq %struct.WebPData* %1, null
  br i1 %8, label %383, label %9

9:                                                ; preds = %2
  %10 = bitcast %struct.WebPData* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false)
  %11 = icmp eq %struct.WebPMux* %0, null
  br i1 %11, label %383, label %12

12:                                               ; preds = %9
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #4
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #4
  store i32 -1431655766, i32* %6, align 4
  %15 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 3, i32 1), align 4
  %16 = call i32 @WebPMuxNumChunks(%struct.WebPMux* nonnull %0, i32 %15, i32* nonnull %5) #4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %88

18:                                               ; preds = %12
  %19 = load i32, i32* %5, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %52

21:                                               ; preds = %18
  %22 = bitcast %struct.WebPMuxImage** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  store %struct.WebPMuxImage* null, %struct.WebPMuxImage** %7, align 8
  %23 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 0
  %24 = call i32 @MuxImageGetNth(%struct.WebPMuxImage** %23, i32 1, %struct.WebPMuxImage** nonnull %7) #4
  %25 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %7, align 8
  %26 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %25, i64 0, i32 0
  %27 = load %struct.WebPChunk*, %struct.WebPChunk** %26, align 8
  %28 = icmp eq %struct.WebPChunk* %27, null
  br i1 %28, label %51, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %33, %29
  %38 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %25, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, %31
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %25, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 8
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %41, %33
  %48 = call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %27) #4
  %49 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %7, align 8
  %50 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %49, i64 0, i32 0
  store %struct.WebPChunk* null, %struct.WebPChunk** %50, align 8
  store i32 0, i32* %5, align 4
  br label %51

51:                                               ; preds = %47, %41, %37, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  br label %52

52:                                               ; preds = %51, %18
  %53 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 2, i32 1), align 4
  %54 = call i32 @WebPMuxNumChunks(%struct.WebPMux* nonnull %0, i32 %53, i32* nonnull %6) #4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %88

56:                                               ; preds = %52
  %57 = load i32, i32* %6, align 4
  %58 = icmp sgt i32 %57, 0
  %59 = load i32, i32* %5, align 4
  %60 = icmp eq i32 %59, 0
  %61 = and i1 %58, %60
  br i1 %61, label %62, label %90

62:                                               ; preds = %56
  %63 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 2, i32 0), align 8
  %64 = call i32 @ChunkGetIdFromTag(i32 %63) #4
  switch i32 %64, label %65 [
    i32 3, label %88
    i32 5, label %88
    i32 6, label %88
  ]

65:                                               ; preds = %62
  %66 = call %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux* nonnull %0, i32 %64) #4
  %67 = load %struct.WebPChunk*, %struct.WebPChunk** %66, align 8
  %68 = icmp eq %struct.WebPChunk* %67, null
  br i1 %68, label %88, label %69

69:                                               ; preds = %65, %81
  %70 = phi %struct.WebPChunk* [ %82, %81 ], [ %67, %65 ]
  %71 = phi %struct.WebPChunk** [ %84, %81 ], [ %66, %65 ]
  %72 = phi i32 [ %83, %81 ], [ 0, %65 ]
  %73 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %70, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, %63
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %70) #4
  store %struct.WebPChunk* %77, %struct.WebPChunk** %71, align 8
  br label %81

78:                                               ; preds = %69
  %79 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %70, i64 0, i32 3
  %80 = load %struct.WebPChunk*, %struct.WebPChunk** %79, align 8
  br label %81

81:                                               ; preds = %78, %76
  %82 = phi %struct.WebPChunk* [ %77, %76 ], [ %80, %78 ]
  %83 = phi i32 [ 1, %76 ], [ %72, %78 ]
  %84 = phi %struct.WebPChunk** [ %71, %76 ], [ %79, %78 ]
  %85 = icmp eq %struct.WebPChunk* %82, null
  br i1 %85, label %86, label %69

86:                                               ; preds = %81
  %87 = icmp eq i32 %83, 1
  br i1 %87, label %90, label %88

88:                                               ; preds = %12, %52, %86, %65, %62, %62, %62
  %89 = phi i32 [ -1, %62 ], [ -1, %62 ], [ -1, %62 ], [ 0, %65 ], [ %83, %86 ], [ %54, %52 ], [ %16, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #4
  br label %383

90:                                               ; preds = %86, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #4
  %91 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %91) #4
  %92 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 1
  %93 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 2
  %94 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 3
  %95 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 4
  %96 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 5
  %97 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 6
  %98 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 7
  %99 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 8
  %100 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 9
  %101 = bitcast %struct.WebPData* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %91, i8 -86, i64 10, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #4
  %102 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %4, i64 0, i32 0
  %103 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %4, i64 0, i32 1
  store i8* %91, i8** %102, align 8
  store i64 10, i64* %103, align 8
  %104 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 0
  %105 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %104, align 8
  %106 = icmp eq %struct.WebPMuxImage* %105, null
  br i1 %106, label %286, label %107

107:                                              ; preds = %90
  %108 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %105, i64 0, i32 2
  %109 = load %struct.WebPChunk*, %struct.WebPChunk** %108, align 8
  %110 = icmp eq %struct.WebPChunk* %109, null
  br i1 %110, label %286, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %109, i64 0, i32 2, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %286, label %115

115:                                              ; preds = %111
  %116 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 0, i32 0), align 16
  %117 = call i32 @ChunkGetIdFromTag(i32 %116) #4
  switch i32 %117, label %118 [
    i32 3, label %286
    i32 5, label %286
    i32 6, label %286
  ]

118:                                              ; preds = %115
  %119 = call %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux* %0, i32 %117) #4
  %120 = load %struct.WebPChunk*, %struct.WebPChunk** %119, align 8
  %121 = icmp eq %struct.WebPChunk* %120, null
  br i1 %121, label %141, label %122

122:                                              ; preds = %118, %134
  %123 = phi %struct.WebPChunk* [ %135, %134 ], [ %120, %118 ]
  %124 = phi %struct.WebPChunk** [ %137, %134 ], [ %119, %118 ]
  %125 = phi i32 [ %136, %134 ], [ 0, %118 ]
  %126 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %123, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, %116
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = call %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk* nonnull %123) #4
  store %struct.WebPChunk* %130, %struct.WebPChunk** %124, align 8
  br label %134

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %123, i64 0, i32 3
  %133 = load %struct.WebPChunk*, %struct.WebPChunk** %132, align 8
  br label %134

134:                                              ; preds = %131, %129
  %135 = phi %struct.WebPChunk* [ %130, %129 ], [ %133, %131 ]
  %136 = phi i32 [ 1, %129 ], [ %125, %131 ]
  %137 = phi %struct.WebPChunk** [ %124, %129 ], [ %132, %131 ]
  %138 = icmp eq %struct.WebPChunk* %135, null
  br i1 %138, label %139, label %122

139:                                              ; preds = %134
  %140 = icmp ugt i32 %136, 1
  br i1 %140, label %286, label %141

141:                                              ; preds = %139, %118
  %142 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 1
  %143 = load %struct.WebPChunk*, %struct.WebPChunk** %142, align 8
  %144 = icmp eq %struct.WebPChunk* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %143, i64 0, i32 2, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  %149 = select i1 %148, i32 0, i32 32
  br label %150

150:                                              ; preds = %145, %141
  %151 = phi i32 [ 0, %141 ], [ %149, %145 ]
  %152 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 2
  %153 = load %struct.WebPChunk*, %struct.WebPChunk** %152, align 8
  %154 = icmp eq %struct.WebPChunk* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %153, i64 0, i32 2, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  %159 = or i32 %151, 8
  %160 = select i1 %158, i32 %151, i32 %159
  br label %161

161:                                              ; preds = %155, %150
  %162 = phi i32 [ %151, %150 ], [ %160, %155 ]
  %163 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 3
  %164 = load %struct.WebPChunk*, %struct.WebPChunk** %163, align 8
  %165 = icmp eq %struct.WebPChunk* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %164, i64 0, i32 2, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = icmp eq i8* %168, null
  %170 = or i32 %162, 4
  %171 = select i1 %169, i32 %162, i32 %170
  br label %172

172:                                              ; preds = %166, %161
  %173 = phi i32 [ %162, %161 ], [ %171, %166 ]
  %174 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %105, i64 0, i32 0
  %175 = load %struct.WebPChunk*, %struct.WebPChunk** %174, align 8
  %176 = icmp eq %struct.WebPChunk* %175, null
  br i1 %176, label %184, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %175, i64 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = load i32, i32* getelementptr inbounds ([11 x %struct.ChunkInfo], [11 x %struct.ChunkInfo]* @kChunks, i64 0, i64 3, i32 0), align 4
  %181 = icmp eq i32 %179, %180
  %182 = or i32 %173, 2
  %183 = select i1 %181, i32 %182, i32 %173
  br label %184

184:                                              ; preds = %177, %172
  %185 = phi i32 [ %173, %172 ], [ %183, %177 ]
  %186 = call i32 @MuxImageCount(%struct.WebPMuxImage* nonnull %105, i32 5) #4
  %187 = icmp sgt i32 %186, 0
  %188 = or i32 %185, 16
  %189 = select i1 %187, i32 %188, i32 %185
  %190 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %104, align 8
  %191 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %190, i64 0, i32 8
  %192 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %191, align 8
  %193 = icmp eq %struct.WebPMuxImage* %192, null
  br i1 %193, label %248, label %194

194:                                              ; preds = %184
  %195 = icmp eq %struct.WebPMuxImage* %190, null
  br i1 %195, label %286, label %196

196:                                              ; preds = %194, %205
  %197 = phi i32 [ %244, %205 ], [ 0, %194 ]
  %198 = phi i32 [ %242, %205 ], [ 0, %194 ]
  %199 = phi %struct.WebPMuxImage* [ %246, %205 ], [ %190, %194 ]
  %200 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %199, i64 0, i32 0
  %201 = load %struct.WebPChunk*, %struct.WebPChunk** %200, align 8
  %202 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %201, i64 0, i32 2, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = icmp eq i64 %203, 16
  br i1 %204, label %205, label %286

205:                                              ; preds = %196
  %206 = getelementptr inbounds %struct.WebPChunk, %struct.WebPChunk* %201, i64 0, i32 2, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds i8, i8* %207, i64 1
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = shl nuw nsw i32 %212, 8
  %214 = or i32 %213, %209
  %215 = getelementptr inbounds i8, i8* %207, i64 2
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = shl nuw nsw i32 %217, 16
  %219 = or i32 %214, %218
  %220 = shl nuw nsw i32 %219, 1
  %221 = getelementptr inbounds i8, i8* %207, i64 3
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds i8, i8* %207, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = shl nuw nsw i32 %226, 8
  %228 = or i32 %227, %223
  %229 = getelementptr inbounds i8, i8* %207, i64 5
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = shl nuw nsw i32 %231, 16
  %233 = or i32 %228, %232
  %234 = shl nuw nsw i32 %233, 1
  %235 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %199, i64 0, i32 4
  %236 = load i32, i32* %235, align 8
  %237 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %199, i64 0, i32 5
  %238 = load i32, i32* %237, align 4
  %239 = add nsw i32 %220, %236
  %240 = add nsw i32 %234, %238
  %241 = icmp sgt i32 %239, %198
  %242 = select i1 %241, i32 %239, i32 %198
  %243 = icmp sgt i32 %240, %197
  %244 = select i1 %243, i32 %240, i32 %197
  %245 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %199, i64 0, i32 8
  %246 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %245, align 8
  %247 = icmp eq %struct.WebPMuxImage* %246, null
  br i1 %247, label %253, label %196

248:                                              ; preds = %184
  %249 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %190, i64 0, i32 4
  %250 = load i32, i32* %249, align 8
  %251 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %190, i64 0, i32 5
  %252 = load i32, i32* %251, align 4
  br label %253

253:                                              ; preds = %205, %248
  %254 = phi i32 [ %250, %248 ], [ %242, %205 ]
  %255 = phi i32 [ %252, %248 ], [ %244, %205 ]
  %256 = icmp slt i32 %254, 1
  %257 = icmp slt i32 %255, 1
  %258 = or i1 %256, %257
  br i1 %258, label %286, label %259

259:                                              ; preds = %253
  %260 = icmp sgt i32 %254, 16777216
  %261 = icmp sgt i32 %255, 16777216
  %262 = or i1 %260, %261
  br i1 %262, label %286, label %263

263:                                              ; preds = %259
  %264 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 7
  %265 = load i32, i32* %264, align 8
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  %268 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 8
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %277, label %271

271:                                              ; preds = %267, %263
  %272 = icmp sgt i32 %254, %265
  br i1 %272, label %286, label %273

273:                                              ; preds = %271
  %274 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 8
  %275 = load i32, i32* %274, align 4
  %276 = icmp sgt i32 %255, %275
  br i1 %276, label %286, label %277

277:                                              ; preds = %273, %267
  %278 = phi i32 [ %254, %267 ], [ %265, %273 ]
  %279 = phi i32 [ %255, %267 ], [ %275, %273 ]
  %280 = icmp eq i32 %189, 0
  br i1 %280, label %281, label %288

281:                                              ; preds = %277
  %282 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 6
  %283 = load %struct.WebPChunk*, %struct.WebPChunk** %282, align 8
  %284 = icmp eq %struct.WebPChunk* %283, null
  br i1 %284, label %285, label %288

285:                                              ; preds = %281
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #4
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %91) #4
  br label %313

286:                                              ; preds = %196, %111, %107, %90, %139, %253, %259, %273, %271, %115, %115, %115, %194
  %287 = phi i32 [ -1, %194 ], [ -1, %115 ], [ -1, %115 ], [ -1, %115 ], [ -1, %271 ], [ -1, %273 ], [ -1, %259 ], [ -1, %253 ], [ %136, %139 ], [ -1, %90 ], [ -1, %107 ], [ -1, %111 ], [ -1, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #4
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %91) #4
  br label %383

288:                                              ; preds = %277, %281
  %289 = call i32 @MuxHasAlpha(%struct.WebPMuxImage* nonnull %105) #4
  %290 = icmp eq i32 %289, 0
  %291 = select i1 %290, i32 %189, i32 %188
  %292 = trunc i32 %291 to i8
  store i8 %292, i8* %91, align 1
  %293 = lshr i32 %291, 8
  %294 = trunc i32 %293 to i8
  store i8 %294, i8* %92, align 1
  %295 = lshr i32 %291, 16
  %296 = trunc i32 %295 to i8
  store i8 %296, i8* %93, align 1
  %297 = lshr i32 %291, 24
  %298 = trunc i32 %297 to i8
  store i8 %298, i8* %94, align 1
  %299 = add nsw i32 %278, -1
  %300 = trunc i32 %299 to i8
  store i8 %300, i8* %95, align 1
  %301 = lshr i32 %299, 8
  %302 = trunc i32 %301 to i8
  store i8 %302, i8* %96, align 1
  %303 = lshr i32 %299, 16
  %304 = trunc i32 %303 to i8
  store i8 %304, i8* %97, align 1
  %305 = add nsw i32 %279, -1
  %306 = trunc i32 %305 to i8
  store i8 %306, i8* %98, align 1
  %307 = lshr i32 %305, 8
  %308 = trunc i32 %307 to i8
  store i8 %308, i8* %99, align 1
  %309 = lshr i32 %305, 16
  %310 = trunc i32 %309 to i8
  store i8 %310, i8* %100, align 1
  %311 = call fastcc i32 @MuxSet(%struct.WebPMux* %0, i32 %116, %struct.WebPData* nonnull %4, i32 1) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #4
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %91) #4
  %312 = icmp eq i32 %311, 1
  br i1 %312, label %313, label %383

313:                                              ; preds = %285, %288
  %314 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 5
  %315 = load %struct.WebPChunk*, %struct.WebPChunk** %314, align 8
  %316 = call i64 @ChunkListDiskSize(%struct.WebPChunk* %315) #4
  %317 = load %struct.WebPChunk*, %struct.WebPChunk** %142, align 8
  %318 = call i64 @ChunkListDiskSize(%struct.WebPChunk* %317) #4
  %319 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 4
  %320 = load %struct.WebPChunk*, %struct.WebPChunk** %319, align 8
  %321 = call i64 @ChunkListDiskSize(%struct.WebPChunk* %320) #4
  %322 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %104, align 8
  %323 = icmp eq %struct.WebPMuxImage* %322, null
  br i1 %323, label %332, label %324

324:                                              ; preds = %313, %324
  %325 = phi i64 [ %328, %324 ], [ 0, %313 ]
  %326 = phi %struct.WebPMuxImage* [ %330, %324 ], [ %322, %313 ]
  %327 = call i64 @MuxImageDiskSize(%struct.WebPMuxImage* nonnull %326) #4
  %328 = add i64 %327, %325
  %329 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %326, i64 0, i32 8
  %330 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %329, align 8
  %331 = icmp eq %struct.WebPMuxImage* %330, null
  br i1 %331, label %332, label %324

332:                                              ; preds = %324, %313
  %333 = phi i64 [ 0, %313 ], [ %328, %324 ]
  %334 = load %struct.WebPChunk*, %struct.WebPChunk** %152, align 8
  %335 = call i64 @ChunkListDiskSize(%struct.WebPChunk* %334) #4
  %336 = load %struct.WebPChunk*, %struct.WebPChunk** %163, align 8
  %337 = call i64 @ChunkListDiskSize(%struct.WebPChunk* %336) #4
  %338 = getelementptr inbounds %struct.WebPMux, %struct.WebPMux* %0, i64 0, i32 6
  %339 = load %struct.WebPChunk*, %struct.WebPChunk** %338, align 8
  %340 = call i64 @ChunkListDiskSize(%struct.WebPChunk* %339) #4
  %341 = add i64 %316, 12
  %342 = add i64 %341, %318
  %343 = add i64 %342, %321
  %344 = add i64 %343, %333
  %345 = add i64 %344, %335
  %346 = add i64 %345, %337
  %347 = add i64 %346, %340
  %348 = call i8* @WebPSafeMalloc(i64 1, i64 %347) #4
  %349 = icmp eq i8* %348, null
  br i1 %349, label %383, label %350

350:                                              ; preds = %332
  %351 = call i8* @MuxEmitRiffHeader(i8* nonnull %348, i64 %347) #4
  %352 = load %struct.WebPChunk*, %struct.WebPChunk** %314, align 8
  %353 = call i8* @ChunkListEmit(%struct.WebPChunk* %352, i8* %351) #4
  %354 = load %struct.WebPChunk*, %struct.WebPChunk** %142, align 8
  %355 = call i8* @ChunkListEmit(%struct.WebPChunk* %354, i8* %353) #4
  %356 = load %struct.WebPChunk*, %struct.WebPChunk** %319, align 8
  %357 = call i8* @ChunkListEmit(%struct.WebPChunk* %356, i8* %355) #4
  %358 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %104, align 8
  %359 = icmp eq %struct.WebPMuxImage* %358, null
  br i1 %359, label %367, label %360

360:                                              ; preds = %350, %360
  %361 = phi i8* [ %363, %360 ], [ %357, %350 ]
  %362 = phi %struct.WebPMuxImage* [ %365, %360 ], [ %358, %350 ]
  %363 = call i8* @MuxImageEmit(%struct.WebPMuxImage* nonnull %362, i8* %361) #4
  %364 = getelementptr inbounds %struct.WebPMuxImage, %struct.WebPMuxImage* %362, i64 0, i32 8
  %365 = load %struct.WebPMuxImage*, %struct.WebPMuxImage** %364, align 8
  %366 = icmp eq %struct.WebPMuxImage* %365, null
  br i1 %366, label %367, label %360

367:                                              ; preds = %360, %350
  %368 = phi i8* [ %357, %350 ], [ %363, %360 ]
  %369 = load %struct.WebPChunk*, %struct.WebPChunk** %152, align 8
  %370 = call i8* @ChunkListEmit(%struct.WebPChunk* %369, i8* %368) #4
  %371 = load %struct.WebPChunk*, %struct.WebPChunk** %163, align 8
  %372 = call i8* @ChunkListEmit(%struct.WebPChunk* %371, i8* %370) #4
  %373 = load %struct.WebPChunk*, %struct.WebPChunk** %338, align 8
  %374 = call i8* @ChunkListEmit(%struct.WebPChunk* %373, i8* %372) #4
  %375 = call i32 @MuxValidate(%struct.WebPMux* nonnull %0) #4
  %376 = icmp eq i32 %375, 1
  br i1 %376, label %378, label %377

377:                                              ; preds = %367
  call void @WebPSafeFree(i8* nonnull %348) #4
  br label %378

378:                                              ; preds = %367, %377
  %379 = phi i64 [ 0, %377 ], [ %347, %367 ]
  %380 = phi i8* [ null, %377 ], [ %348, %367 ]
  %381 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %1, i64 0, i32 0
  store i8* %380, i8** %381, align 8
  %382 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %1, i64 0, i32 1
  store i64 %379, i64* %382, align 8
  br label %383

383:                                              ; preds = %286, %88, %332, %288, %9, %2, %378
  %384 = phi i32 [ %375, %378 ], [ -1, %2 ], [ -1, %9 ], [ %311, %288 ], [ -3, %332 ], [ %89, %88 ], [ %287, %286 ]
  ret i32 %384
}

declare i64 @ChunkListDiskSize(%struct.WebPChunk*) local_unnamed_addr #2

declare i8* @MuxEmitRiffHeader(i8*, i64) local_unnamed_addr #2

declare i8* @ChunkListEmit(%struct.WebPChunk*, i8*) local_unnamed_addr #2

declare i32 @MuxValidate(%struct.WebPMux*) local_unnamed_addr #2

declare void @ChunkListDelete(%struct.WebPChunk**) local_unnamed_addr #2

declare %struct.WebPChunk** @MuxGetChunkListFromId(%struct.WebPMux*, i32) local_unnamed_addr #2

declare %struct.WebPChunk* @ChunkDelete(%struct.WebPChunk*) local_unnamed_addr #2

declare i32 @ChunkGetIndexFromTag(i32) local_unnamed_addr #2

declare void @ChunkInit(%struct.WebPChunk*) local_unnamed_addr #2

declare i32 @ChunkAssignData(%struct.WebPChunk*, %struct.WebPData*, i32, i32) local_unnamed_addr #2

declare i32 @ChunkSetHead(%struct.WebPChunk*, %struct.WebPChunk**) local_unnamed_addr #2

declare %struct.WebPMuxImage* @MuxImageDelete(%struct.WebPMuxImage*) local_unnamed_addr #2

declare i32 @MuxImageFinalize(%struct.WebPMuxImage*) local_unnamed_addr #2

declare i32 @VP8LCheckSignature(i8*, i64) local_unnamed_addr #2

declare %struct.WebPMux* @WebPMuxCreateInternal(%struct.WebPData*, i32, i32) local_unnamed_addr #2

declare %struct.WebPChunk* @ChunkRelease(%struct.WebPChunk*) local_unnamed_addr #2

declare void @WebPFree(i8*) local_unnamed_addr #2

declare i32 @WebPMuxNumChunks(%struct.WebPMux*, i32, i32*) local_unnamed_addr #2

declare i32 @MuxImageGetNth(%struct.WebPMuxImage**, i32, %struct.WebPMuxImage**) local_unnamed_addr #2

declare i32 @MuxImageCount(%struct.WebPMuxImage*, i32) local_unnamed_addr #2

declare i32 @MuxHasAlpha(%struct.WebPMuxImage*) local_unnamed_addr #2

declare i64 @MuxImageDiskSize(%struct.WebPMuxImage*) local_unnamed_addr #2

declare i8* @MuxImageEmit(%struct.WebPMuxImage*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
