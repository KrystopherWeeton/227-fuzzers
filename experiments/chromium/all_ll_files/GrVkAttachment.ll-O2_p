; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkAttachment.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkAttachment.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.439, %class.sk_sp.439, %class.gr_sp, %class.gr_sp }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.191 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.43", %"class.std::__1::shared_ptr.43", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.45", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.51" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.15", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.17" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.43" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.43", %"class.std::__1::vector.440", i8, %"class.std::__1::vector.448", %"class.std::__1::forward_list", %class.SkTHashMap.461, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"*, %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.std::__1::unique_ptr.442"* }
%"class.std::__1::vector.448" = type { %"class.std::__1::__vector_base.449" }
%"class.std::__1::__vector_base.449" = type { %"class.std::__1::unique_ptr.450"*, %"class.std::__1::unique_ptr.450"*, %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.std::__1::unique_ptr.450"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.461 = type { %class.SkTHashTable.462 }
%class.SkTHashTable.462 = type { i32, i32, %class.SkAutoTArray.463 }
%class.SkAutoTArray.463 = type { %"class.std::__1::unique_ptr.464" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.496" }
%"struct.std::__1::pair.496" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.43", %"class.std::__1::shared_ptr.44" }
%"class.std::__1::shared_ptr.44" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i64*, i64*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.165", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.62", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.61 }
%class.sk_sp.61 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.72, %class.SkTArray.81, %class.SkTArray.83, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.65"*, i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.83, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.84 }
%class.sk_sp.84 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.72 = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.479" }
%"struct.std::__1::pair.479" = type { i32, %class.SkTArray.480* }
%class.SkTArray.480 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.81 = type { %"class.std::__1::unique_ptr.82"*, i64 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.480, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.83 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.97 }
%class.SkFibBlockSizes.97 = type { i32 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.125 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.137, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.153, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.129 }
%class.SkTHashTable.129 = type { i32, i32, %class.SkAutoTArray.130 }
%class.SkAutoTArray.130 = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.137 = type { %class.SkTHashTable.138 }
%class.SkTHashTable.138 = type { i32, i32, %class.SkAutoTArray.139 }
%class.SkAutoTArray.139 = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.146, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.146 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.147" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.152, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.152 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.153 = type { %class.SkTHashTable.154 }
%class.SkTHashTable.154 = type { i32, i32, %class.SkAutoTArray.155 }
%class.SkAutoTArray.155 = type { %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.168, %class.sk_sp.168 }
%class.sk_sp.168 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.190 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.190 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.191 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.192, void (i8*)*, i8* }
%class.SkNVRefCnt.192 = type { %"struct.std::__1::atomic" }
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.193, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.sk_sp.193 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.194, i32, i8, [3 x i8] }>
%union.anon.194 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.195", %"struct.std::__1::atomic.199" }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__cxx_atomic_impl.202" }
%"struct.std::__1::__cxx_atomic_impl.202" = type { %"struct.std::__1::__cxx_atomic_base_impl.203" }
%"struct.std::__1::__cxx_atomic_base_impl.203" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.191 }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.439 = type { %class.GrVkImageView* }
%class.GrVkImageView = type { %class.GrVkManagedResource, %struct.VkImageView_T*, %class.GrVkSamplerYcbcrConversion* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%struct.VkImageView_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%class.gr_sp = type { %class.GrVkDescriptorSet* }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%struct.VkDescriptorSet_T = type opaque
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%struct.VkDescriptorPool_T = type opaque
%class.GrResourceHandle = type { i32 }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.204, %class.sk_sp.348, %class.sk_sp.349, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.423, %class.SkSTArray.423, %class.SkTArray.426, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.433" }
%class.sk_sp.204 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.339", %"class.GrVkInterface::VkPtr.340", %"class.GrVkInterface::VkPtr.341", %"class.GrVkInterface::VkPtr.342", %"class.GrVkInterface::VkPtr.343", %"class.GrVkInterface::VkPtr.344", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.346", %"class.GrVkInterface::VkPtr.347" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.205" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.206" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.207" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.208" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.209" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.210" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.211" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.212" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.213" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.214" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.215" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.216" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.217" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.218" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.219" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.220" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.221" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.222" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.223" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.GrVkInterface::VkPtr.224" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.226" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.227" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.228" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.229" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.231" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.232" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.233" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.234" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.236" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.237" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.239" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.241" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.242" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.245" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.246" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.247" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.248" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.249" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.250" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.251" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.252" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.253" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.254" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.255" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.256" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.257" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.258" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.259" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.260" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.261" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.262" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.263" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.264" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.266" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.267" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.268" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.269" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.270" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.271" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.GrVkInterface::VkPtr.274" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.275" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%"class.GrVkInterface::VkPtr.277" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.278" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.280" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.281" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.283" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.284" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.286" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.287" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.289" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.290" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.291" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.331" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.334" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.336" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.338" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.339" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.340" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.341" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.342" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.343" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.344" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.345" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.346" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.347" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.348 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.349 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.357, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.350, %"class.std::__1::unique_ptr.351", i32, [4 x i8] }>
%class.SkTDArray.350 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.357 = type { %class.SkAlignedSTStorage.358, %class.SkTArray.359 }
%class.SkAlignedSTStorage.358 = type { [48 x i8] }
%class.SkTArray.359 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.360, %class.SkSTArray.362, %class.SkTArray.368, %class.SkSTArray.369, %class.SkMutex, %class.SkSTArray.369, %class.SkTDynamicHash.372, %class.SkTDynamicHash.381, %class.sk_sp.390, %class.SkSTArray.399, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.360 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.361, %class.GrVkRenderPass* }
%class.sk_sp.361 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type opaque
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.362 = type { %class.SkAlignedSTStorage.363, %class.SkTArray.364 }
%class.SkAlignedSTStorage.363 = type { [224 x i8] }
%class.SkTArray.364 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.365, i32, [4 x i8] }>
%class.SkSTArray.365 = type { %class.SkAlignedSTStorage.366, %class.SkTArray.367 }
%class.SkAlignedSTStorage.366 = type { [32 x i8] }
%class.SkTArray.367 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.368 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.369 = type { %class.SkAlignedSTStorage.370, %class.SkTArray.371 }
%class.SkAlignedSTStorage.370 = type { [32 x i8] }
%class.SkTArray.371 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.372 = type { %class.SkTHashTable.373 }
%class.SkTHashTable.373 = type { i32, i32, %class.SkAutoTArray.374 }
%class.SkAutoTArray.374 = type { %"class.std::__1::unique_ptr.375" }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.381 = type { %class.SkTHashTable.382 }
%class.SkTHashTable.382 = type { i32, i32, %class.SkAutoTArray.383 }
%class.SkAutoTArray.383 = type { %"class.std::__1::unique_ptr.384" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.390 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.391, %class.SkTInternalLList }
%class.SkTHashTable.391 = type { i32, i32, %class.SkAutoTArray.392 }
%class.SkAutoTArray.392 = type { %"class.std::__1::unique_ptr.393" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.399 = type { %class.SkAlignedSTStorage.400, %class.SkTArray.401 }
%class.SkAlignedSTStorage.400 = type { [32 x i8] }
%class.SkTArray.401 = type { %"class.std::__1::unique_ptr.402"*, i64 }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.405, %class.SkSTArray.406, %class.SkSTArray.409 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.SkTArray.405 = type { %class.GrVkDescriptorSet**, i64 }
%class.SkSTArray.406 = type { %class.SkAlignedSTStorage.407, %class.SkTArray.408 }
%class.SkAlignedSTStorage.407 = type { [16 x i8] }
%class.SkTArray.408 = type { i32*, i64 }
%class.SkSTArray.409 = type { %class.SkAlignedSTStorage.410, %class.SkTArray.411 }
%class.SkAlignedSTStorage.410 = type { [32 x i8] }
%class.SkTArray.411 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.415", %class.GrGpu* }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.418" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.417, i8*, i64 }
%class.sk_sp.417 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type opaque
%class.SkSTArray.423 = type { %class.SkAlignedSTStorage.424, %class.SkTArray.425 }
%class.SkAlignedSTStorage.424 = type { [8 x i8] }
%class.SkTArray.425 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.426 = type { %"class.std::__1::unique_ptr.427"*, i64 }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.470 = type { %class.GrVkAttachment* }
%"struct.GrVkImage::ImageDesc" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkTraceMemoryDump = type opaque
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.GrBackendFormat = type { i32, i8, %union.anon.471, i32, [4 x i8] }
%union.anon.471 = type { %struct.anon.472 }
%struct.anon.472 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%class.GrRenderTarget = type opaque

$_ZNK12GrAttachment15getResourceTypeEv = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZNK14GrVkAttachment13backendFormatEv = comdat any

$_ZN9GrSurface9asTextureEv = comdat any

$_ZNK9GrSurface9asTextureEv = comdat any

$_ZN9GrSurface14asRenderTargetEv = comdat any

$_ZNK9GrSurface14asRenderTargetEv = comdat any

$_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN32GrBackendSurfaceMutableStateImplD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZTV32GrBackendSurfaceMutableStateImpl = comdat any

@_ZTV14GrVkAttachment = hidden unnamed_addr constant { [17 x i8*], [4 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrAttachment*)* @_ZNK12GrAttachment15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrVkAttachment*)* @_ZN14GrVkAttachmentD2Ev to i8*), i8* bitcast (void (%class.GrVkAttachment*)* @_ZN14GrVkAttachmentD0Ev to i8*), i8* bitcast (void (%class.GrVkAttachment*)* @_ZN14GrVkAttachment9onReleaseEv to i8*), i8* bitcast (void (%class.GrVkAttachment*)* @_ZN14GrVkAttachment9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrAttachment*, %class.GrScratchKey*)* @_ZNK12GrAttachment17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrAttachment*)* @_ZNK12GrAttachment15onGpuMemorySizeEv to i8*), i8* bitcast (void (%class.GrBackendFormat*, %class.GrVkAttachment*)* @_ZNK14GrVkAttachment13backendFormatEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZN9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZNK9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrSurface*)* @_ZN9GrSurface14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrSurface*)* @_ZNK9GrSurface14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrSurface*, %class.sk_sp.191*)* @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)], [4 x i8*] [i8* inttoptr (i64 -192 to i8*), i8* null, i8* bitcast (void (%class.GrVkAttachment*)* @_ZThn192_N14GrVkAttachmentD1Ev to i8*), i8* bitcast (void (%class.GrVkAttachment*)* @_ZThn192_N14GrVkAttachmentD0Ev to i8*)] }, align 8
@_ZTV12GrAttachment = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV9GrSurface = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV32GrBackendSurfaceMutableStateImpl = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.GrBackendSurfaceMutableStateImpl*)* @_ZN32GrBackendSurfaceMutableStateImplD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [18 x i8] c"StencilAttachment\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Surface\00", align 1

@_ZN14GrVkAttachmentC1EP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsERK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplES8_IK13GrVkImageViewESD_10SkBudgeted = hidden unnamed_addr alias void (%class.GrVkAttachment*, %class.GrVkGpu*, i64, i8, %struct.GrVkImageInfo*, %class.sk_sp.193*, %class.sk_sp.439*, %class.sk_sp.439*, i1), void (%class.GrVkAttachment*, %class.GrVkGpu*, i64, i8, %struct.GrVkImageInfo*, %class.sk_sp.193*, %class.sk_sp.439*, %class.sk_sp.439*, i1)* @_ZN14GrVkAttachmentC2EP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsERK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplES8_IK13GrVkImageViewESD_10SkBudgeted
@_ZN14GrVkAttachmentC1EP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsERK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplES8_IK13GrVkImageViewESD_24GrBackendObjectOwnership15GrWrapCacheableb = hidden unnamed_addr alias void (%class.GrVkAttachment*, %class.GrVkGpu*, i64, i8, %struct.GrVkImageInfo*, %class.sk_sp.193*, %class.sk_sp.439*, %class.sk_sp.439*, i1, i1, i1), void (%class.GrVkAttachment*, %class.GrVkGpu*, i64, i8, %struct.GrVkImageInfo*, %class.sk_sp.193*, %class.sk_sp.439*, %class.sk_sp.439*, i1, i1, i1)* @_ZN14GrVkAttachmentC2EP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsERK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplES8_IK13GrVkImageViewESD_24GrBackendObjectOwnership15GrWrapCacheableb
@_ZN14GrVkAttachmentD1Ev = hidden unnamed_addr alias void (%class.GrVkAttachment*), void (%class.GrVkAttachment*)* @_ZN14GrVkAttachmentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachmentC2EP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsERK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplES8_IK13GrVkImageViewESD_10SkBudgeted(%class.GrVkAttachment*, %class.GrVkGpu*, i64, i8 zeroext, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.193* nocapture, %class.sk_sp.439* nocapture, %class.sk_sp.439* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp.193, align 8
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 9
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %16, %class.GrGpu* %11) #8
  %17 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast %struct.SkISize* %18 to i64*
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 3
  store i8 %15, i8* %21, align 4
  %22 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12GrAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %23 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 1
  store i8 %3, i8* %23, align 8
  %24 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 3
  store i32 %13, i32* %24, align 4
  %25 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 1
  %28 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %5, i64 0, i32 0
  %29 = bitcast %class.sk_sp.193* %5 to i64*
  %30 = load i64, i64* %29, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %28, align 8
  %31 = bitcast %class.sk_sp.193* %10 to i64*
  store i64 %30, i64* %31, align 8
  call void @_ZN9GrVkImageC2EPK7GrVkGpuRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE24GrBackendObjectOwnershipb(%class.GrVkImage* %27, %class.GrVkGpu* %1, %struct.GrVkImageInfo* dereferenceable(144) %4, %class.sk_sp.193* nonnull %10, i1 zeroext true, i1 zeroext false) #8
  %32 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %10, i64 0, i32 0
  %33 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %32, align 8
  %34 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %9
  %36 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.GrBackendSurfaceMutableStateImpl* %33 to %class.SkRefCntBase*
  %41 = bitcast %class.GrBackendSurfaceMutableStateImpl* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  call void %44(%class.SkRefCntBase* nonnull %40) #8
  br label %45

45:                                               ; preds = %9, %35, %39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %46 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %27, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 2
  %48 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %6, i64 0, i32 0
  %49 = bitcast %class.sk_sp.439* %6 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %48, align 8
  %51 = bitcast %class.sk_sp.439* %47 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 3
  %53 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %7, i64 0, i32 0
  %54 = bitcast %class.sk_sp.439* %7 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %53, align 8
  %56 = bitcast %class.sk_sp.439* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 4, i32 0
  %58 = bitcast %class.GrVkDescriptorSet** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false)
  call void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource* %16, i1 zeroext %8) #8
  ret void
}

declare void @_ZN9GrVkImageC2EPK7GrVkGpuRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE24GrBackendObjectOwnershipb(%class.GrVkImage*, %class.GrVkGpu*, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.193*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachmentC2EP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsERK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplES8_IK13GrVkImageViewESD_24GrBackendObjectOwnership15GrWrapCacheableb(%class.GrVkAttachment*, %class.GrVkGpu*, i64, i8 zeroext, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.193* nocapture, %class.sk_sp.439* nocapture, %class.sk_sp.439* nocapture, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %12 = alloca %class.sk_sp.193, align 8
  %13 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 9
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %18, %class.GrGpu* %13) #8
  %19 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %struct.SkISize* %20 to i64*
  store i64 %2, i64* %21, align 8
  %22 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 3
  store i8 %17, i8* %23, align 4
  %24 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12GrAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %25 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 1
  store i8 %3, i8* %25, align 8
  %26 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 3
  store i32 %15, i32* %26, align 4
  %27 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 5
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 1
  %30 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %5, i64 0, i32 0
  %31 = bitcast %class.sk_sp.193* %5 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  %33 = bitcast %class.sk_sp.193* %12 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZN9GrVkImageC2EPK7GrVkGpuRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE24GrBackendObjectOwnershipb(%class.GrVkImage* %29, %class.GrVkGpu* %1, %struct.GrVkImageInfo* dereferenceable(144) %4, %class.sk_sp.193* nonnull %12, i1 zeroext %8, i1 zeroext %10) #8
  %34 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %12, i64 0, i32 0
  %35 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %34, align 8
  %36 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %11
  %38 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.GrBackendSurfaceMutableStateImpl* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.GrBackendSurfaceMutableStateImpl* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #8
  br label %47

47:                                               ; preds = %11, %37, %41
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %48 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %29, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 2
  %50 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %6, i64 0, i32 0
  %51 = bitcast %class.sk_sp.439* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %50, align 8
  %53 = bitcast %class.sk_sp.439* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 3
  %55 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %7, i64 0, i32 0
  %56 = bitcast %class.sk_sp.439* %7 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %55, align 8
  %58 = bitcast %class.sk_sp.439* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 4, i32 0
  %60 = bitcast %class.GrVkDescriptorSet** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %18, i1 zeroext %9) #8
  ret void
}

declare void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment11MakeStencilEP7GrVkGpu7SkISizei8VkFormat(%class.sk_sp.470* noalias nocapture sret, %class.GrVkGpu*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN14GrVkAttachment4MakeEP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsEi8VkFormatjj11GrProtected10SkBudgeted(%class.sk_sp.470* sret %0, %class.GrVkGpu* %1, i64 %2, i8 zeroext 1, i32 %3, i32 %4, i32 1, i32 34, i1 zeroext false, i1 zeroext true)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment4MakeEP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsEi8VkFormatjj11GrProtected10SkBudgeted(%class.sk_sp.470* noalias nocapture sret, %class.GrVkGpu*, i64, i8 zeroext, i32, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %11 = alloca %class.sk_sp.193, align 8
  %12 = alloca %"struct.GrVkImage::ImageDesc", align 4
  %13 = alloca %struct.GrVkImageInfo, align 8
  %14 = alloca %class.sk_sp.439, align 8
  %15 = alloca %class.sk_sp.439, align 8
  %16 = trunc i64 %2 to i32
  %17 = lshr i64 %2, 32
  %18 = trunc i64 %17 to i32
  %19 = zext i1 %8 to i8
  %20 = bitcast %"struct.GrVkImage::ImageDesc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 40, i1 false)
  %21 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 3
  %25 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 4
  %26 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 5
  %27 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 6
  %28 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 7
  %29 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 8
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %12, i64 0, i32 9
  store i32 1, i32* %21, align 4
  store i32 %5, i32* %22, align 4
  store i32 %16, i32* %23, align 4
  store i32 %18, i32* %24, align 4
  store i32 %6, i32* %25, align 4
  store i32 %4, i32* %26, align 4
  store i32 0, i32* %27, align 4
  store i32 %7, i32* %28, align 4
  store i8 %19, i8* %30, align 4
  %31 = bitcast %struct.GrVkImageInfo* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 144, i1 false)
  %32 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 1, i32 5
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 1, i32 6
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 2
  %35 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 36, i1 false) #8
  %36 = bitcast i32* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #8
  store i32 1, i32* %35, align 8
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 7
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 8
  store i32 -1, i32* %38, align 8
  %39 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 9
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 11, i32 0
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 11, i32 2
  %42 = bitcast i64* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 36, i1 false) #8
  %43 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 12
  store i32 0, i32* %43, align 8
  %44 = call zeroext i1 @_ZN9GrVkImage13InitImageInfoEP7GrVkGpuRKNS_9ImageDescEP13GrVkImageInfo(%class.GrVkGpu* %1, %"struct.GrVkImage::ImageDesc"* nonnull dereferenceable(40) %12, %struct.GrVkImageInfo* nonnull %13) #8
  br i1 %44, label %47, label %45

45:                                               ; preds = %10
  %46 = getelementptr inbounds %class.sk_sp.470, %class.sk_sp.470* %0, i64 0, i32 0
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %46, align 8
  br label %151

47:                                               ; preds = %10
  %48 = bitcast %class.sk_sp.439* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  %49 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %14, i64 0, i32 0
  store %class.GrVkImageView* null, %class.GrVkImageView** %49, align 8
  %50 = bitcast %class.sk_sp.439* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #8
  %51 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %15, i64 0, i32 0
  store %class.GrVkImageView* null, %class.GrVkImageView** %51, align 8
  %52 = call fastcc zeroext i1 @_ZL10make_viewsP7GrVkGpuRK13GrVkImageInfoN12GrAttachment10UsageFlagsEP5sk_spIK13GrVkImageViewESA_(%class.GrVkGpu* %1, %struct.GrVkImageInfo* nonnull dereferenceable(144) %13, i8 zeroext %3, %class.sk_sp.439* nonnull %14, %class.sk_sp.439* nonnull %15)
  br i1 %52, label %55, label %53

53:                                               ; preds = %47
  call void @_ZN9GrVkImage16DestroyImageInfoEPK7GrVkGpuP13GrVkImageInfo(%class.GrVkGpu* %1, %struct.GrVkImageInfo* nonnull %13) #8
  %54 = getelementptr inbounds %class.sk_sp.470, %class.sk_sp.470* %0, i64 0, i32 0
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %54, align 8
  br label %118

55:                                               ; preds = %47
  %56 = call i8* @_Znwm(i64 32) #9
  %57 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %13, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %38, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 1, i32* %61, align 4
  %62 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV32GrBackendSurfaceMutableStateImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  %64 = bitcast i8* %63 to i32*
  store i32 %58, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %56, i64 16
  %66 = bitcast i8* %65 to i32*
  store i32 %59, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %56, i64 20
  %68 = bitcast i8* %67 to i32*
  store i32 1, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %56, i64 24
  store i8 1, i8* %69, align 4
  %70 = ptrtoint i8* %56 to i64
  %71 = call i8* @_Znwm(i64 408) #9
  %72 = bitcast %class.sk_sp.439* %14 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %49, align 8
  %74 = bitcast %class.sk_sp.439* %15 to i64*
  %75 = load i64, i64* %74, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %51, align 8
  %76 = bitcast %class.sk_sp.193* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  %77 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  %78 = load i32, i32* %35, align 8
  %79 = load i8, i8* %39, align 4, !range !2
  %80 = bitcast i8* %71 to %class.GrGpuResource*
  call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* nonnull %80, %class.GrGpu* %77) #8
  %81 = bitcast i8* %71 to i32 (...)***
  %82 = getelementptr inbounds i8, i8* %71, i64 152
  %83 = bitcast i8* %82 to i64*
  store i64 %2, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %71, i64 160
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %71, i64 164
  store i8 %79, i8* %86, align 4
  %87 = getelementptr inbounds i8, i8* %71, i64 168
  %88 = bitcast i8* %87 to %class.GrRefCntedCallback**
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %88, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12GrAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %89 = getelementptr inbounds i8, i8* %71, i64 176
  store i8 %3, i8* %89, align 8
  %90 = getelementptr inbounds i8, i8* %71, i64 180
  %91 = bitcast i8* %90 to i32*
  store i32 %78, i32* %91, align 4
  %92 = getelementptr inbounds i8, i8* %71, i64 184
  store i8 0, i8* %92, align 8
  %93 = getelementptr inbounds i8, i8* %71, i64 185
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %71, i64 192
  %95 = bitcast i8* %94 to %class.GrVkImage*
  %96 = bitcast %class.sk_sp.193* %11 to i64*
  store i64 %70, i64* %96, align 8
  call void @_ZN9GrVkImageC2EPK7GrVkGpuRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE24GrBackendObjectOwnershipb(%class.GrVkImage* %95, %class.GrVkGpu* %1, %struct.GrVkImageInfo* nonnull dereferenceable(144) %13, %class.sk_sp.193* nonnull %11, i1 zeroext true, i1 zeroext false) #8
  %97 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %11, i64 0, i32 0
  %98 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %97, align 8
  %99 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %55
  %101 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %98, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %class.GrBackendSurfaceMutableStateImpl* %98 to %class.SkRefCntBase*
  %106 = bitcast %class.GrBackendSurfaceMutableStateImpl* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #8
  br label %110

110:                                              ; preds = %55, %100, %104
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %111 = bitcast i8* %94 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds i8, i8* %71, i64 376
  %113 = bitcast i8* %112 to i64*
  store i64 %73, i64* %113, align 8
  %114 = getelementptr inbounds i8, i8* %71, i64 384
  %115 = bitcast i8* %114 to i64*
  store i64 %75, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %71, i64 392
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #8
  call void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource* nonnull %80, i1 zeroext %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  %117 = bitcast %class.sk_sp.470* %0 to i8**
  store i8* %71, i8** %117, align 8
  br label %118

118:                                              ; preds = %110, %53
  %119 = load %class.GrVkImageView*, %class.GrVkImageView** %51, align 8
  %120 = icmp eq %class.GrVkImageView* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = bitcast %class.GrVkImageView* %119 to %class.GrManagedResource*
  %123 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %119, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %134

126:                                              ; preds = %121
  %127 = bitcast %class.GrVkImageView* %119 to void (%class.GrManagedResource*)***
  %128 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %128, i64 4
  %130 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %129, align 8
  call void %130(%class.GrManagedResource* nonnull %122) #8
  %131 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %127, align 8
  %132 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %131, i64 1
  %133 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %132, align 8
  call void %133(%class.GrManagedResource* nonnull %122) #8
  br label %134

134:                                              ; preds = %118, %121, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #8
  %135 = load %class.GrVkImageView*, %class.GrVkImageView** %49, align 8
  %136 = icmp eq %class.GrVkImageView* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %134
  %138 = bitcast %class.GrVkImageView* %135 to %class.GrManagedResource*
  %139 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %135, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %150

142:                                              ; preds = %137
  %143 = bitcast %class.GrVkImageView* %135 to void (%class.GrManagedResource*)***
  %144 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %143, align 8
  %145 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %144, i64 4
  %146 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %145, align 8
  call void %146(%class.GrManagedResource* nonnull %138) #8
  %147 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %143, align 8
  %148 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %147, i64 1
  %149 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %148, align 8
  call void %149(%class.GrManagedResource* nonnull %138) #8
  br label %150

150:                                              ; preds = %134, %137, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br label %151

151:                                              ; preds = %150, %45
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment8MakeMSAAEP7GrVkGpu7SkISizei8VkFormat11GrProtected(%class.sk_sp.470* noalias nocapture sret, %class.GrVkGpu*, i64, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN14GrVkAttachment4MakeEP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsEi8VkFormatjj11GrProtected10SkBudgeted(%class.sk_sp.470* sret %0, %class.GrVkGpu* %1, i64 %2, i8 zeroext 2, i32 %3, i32 %4, i32 1, i32 19, i1 zeroext %5, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment11MakeTextureEP7GrVkGpu7SkISize8VkFormatj12GrRenderablei10SkBudgeted11GrProtected(%class.sk_sp.470* noalias nocapture sret, %class.GrVkGpu*, i64, i32, i32, i1 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = select i1 %5, i8 6, i8 4
  %11 = select i1 %5, i32 151, i32 7
  tail call void @_ZN14GrVkAttachment4MakeEP7GrVkGpu7SkISizeN12GrAttachment10UsageFlagsEi8VkFormatjj11GrProtected10SkBudgeted(%class.sk_sp.470* sret %0, %class.GrVkGpu* %1, i64 %2, i8 zeroext %10, i32 %6, i32 %3, i32 %4, i32 %11, i1 zeroext %8, i1 zeroext %7)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN9GrVkImage13InitImageInfoEP7GrVkGpuRKNS_9ImageDescEP13GrVkImageInfo(%class.GrVkGpu*, %"struct.GrVkImage::ImageDesc"* dereferenceable(40), %struct.GrVkImageInfo*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL10make_viewsP7GrVkGpuRK13GrVkImageInfoN12GrAttachment10UsageFlagsEP5sk_spIK13GrVkImageViewESA_(%class.GrVkGpu*, %struct.GrVkImageInfo* dereferenceable(144), i8 zeroext, %class.sk_sp.439* nocapture, %class.sk_sp.439* nocapture) unnamed_addr #0 {
  %6 = alloca %class.sk_sp.439, align 8
  %7 = alloca %class.sk_sp.439, align 8
  %8 = and i8 %2, 1
  %9 = zext i8 %8 to i32
  %10 = and i8 %2, 3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %5
  %13 = bitcast %class.sk_sp.439* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 0
  %15 = load %struct.VkImage_T*, %struct.VkImage_T** %14, align 8
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 11
  call void @_ZN13GrVkImageView4MakeEP7GrVkGpuP9VkImage_T8VkFormatNS_4TypeEjRK23GrVkYcbcrConversionInfo(%class.sk_sp.439* nonnull sret %6, %class.GrVkGpu* %0, %struct.VkImage_T* %15, i32 %17, i32 %9, i32 1, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %18) #8
  %19 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %6, i64 0, i32 0
  %20 = bitcast %class.sk_sp.439* %6 to i64*
  %21 = load i64, i64* %20, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %19, align 8
  %22 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %3, i64 0, i32 0
  %23 = load %class.GrVkImageView*, %class.GrVkImageView** %22, align 8
  %24 = bitcast %class.sk_sp.439* %3 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %class.GrVkImageView* %23, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %12
  %27 = bitcast %class.GrVkImageView* %23 to %class.GrManagedResource*
  %28 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = bitcast %class.GrVkImageView* %23 to void (%class.GrManagedResource*)***
  %33 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %33, i64 4
  %35 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %34, align 8
  call void %35(%class.GrManagedResource* nonnull %27) #8
  %36 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %32, align 8
  %37 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %36, i64 1
  %38 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %37, align 8
  call void %38(%class.GrManagedResource* nonnull %27) #8
  br label %39

39:                                               ; preds = %12, %26, %31
  %40 = load %class.GrVkImageView*, %class.GrVkImageView** %19, align 8
  %41 = icmp eq %class.GrVkImageView* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = bitcast %class.GrVkImageView* %40 to %class.GrManagedResource*
  %44 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = bitcast %class.GrVkImageView* %40 to void (%class.GrManagedResource*)***
  %49 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %49, i64 4
  %51 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %50, align 8
  call void %51(%class.GrManagedResource* nonnull %43) #8
  %52 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %48, align 8
  %53 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %52, i64 1
  %54 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %53, align 8
  call void %54(%class.GrManagedResource* nonnull %43) #8
  br label %55

55:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  %56 = load %class.GrVkImageView*, %class.GrVkImageView** %22, align 8
  %57 = icmp eq %class.GrVkImageView* %56, null
  br i1 %57, label %110, label %58

58:                                               ; preds = %5, %55
  %59 = and i8 %2, 4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %109, label %61

61:                                               ; preds = %58
  %62 = bitcast %class.sk_sp.439* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #8
  %63 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 0
  %64 = load %struct.VkImage_T*, %struct.VkImage_T** %63, align 8
  %65 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 7
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %1, i64 0, i32 11
  call void @_ZN13GrVkImageView4MakeEP7GrVkGpuP9VkImage_T8VkFormatNS_4TypeEjRK23GrVkYcbcrConversionInfo(%class.sk_sp.439* nonnull sret %7, %class.GrVkGpu* %0, %struct.VkImage_T* %64, i32 %66, i32 %9, i32 %68, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %69) #8
  %70 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %7, i64 0, i32 0
  %71 = bitcast %class.sk_sp.439* %7 to i64*
  %72 = load i64, i64* %71, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %70, align 8
  %73 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %4, i64 0, i32 0
  %74 = load %class.GrVkImageView*, %class.GrVkImageView** %73, align 8
  %75 = bitcast %class.sk_sp.439* %4 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %class.GrVkImageView* %74, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %61
  %78 = bitcast %class.GrVkImageView* %74 to %class.GrManagedResource*
  %79 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %90

82:                                               ; preds = %77
  %83 = bitcast %class.GrVkImageView* %74 to void (%class.GrManagedResource*)***
  %84 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %84, i64 4
  %86 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %85, align 8
  call void %86(%class.GrManagedResource* nonnull %78) #8
  %87 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %83, align 8
  %88 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %87, i64 1
  %89 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %88, align 8
  call void %89(%class.GrManagedResource* nonnull %78) #8
  br label %90

90:                                               ; preds = %61, %77, %82
  %91 = load %class.GrVkImageView*, %class.GrVkImageView** %70, align 8
  %92 = icmp eq %class.GrVkImageView* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = bitcast %class.GrVkImageView* %91 to %class.GrManagedResource*
  %95 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %91, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %106

98:                                               ; preds = %93
  %99 = bitcast %class.GrVkImageView* %91 to void (%class.GrManagedResource*)***
  %100 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %100, i64 4
  %102 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %101, align 8
  call void %102(%class.GrManagedResource* nonnull %94) #8
  %103 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %99, align 8
  %104 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %103, i64 1
  %105 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %104, align 8
  call void %105(%class.GrManagedResource* nonnull %94) #8
  br label %106

106:                                              ; preds = %90, %93, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #8
  %107 = load %class.GrVkImageView*, %class.GrVkImageView** %73, align 8
  %108 = icmp eq %class.GrVkImageView* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %106, %58
  br label %110

110:                                              ; preds = %55, %106, %109
  %111 = phi i1 [ true, %109 ], [ false, %55 ], [ false, %106 ]
  ret i1 %111
}

declare void @_ZN9GrVkImage16DestroyImageInfoEPK7GrVkGpuP13GrVkImageInfo(%class.GrVkGpu*, %struct.GrVkImageInfo*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment11MakeWrappedEP7GrVkGpu7SkISizeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplEN12GrAttachment10UsageFlagsE15GrWrapOwnership15GrWrapCacheableb(%class.sk_sp.470* noalias nocapture sret, %class.GrVkGpu*, i64, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.193* nocapture, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp.193, align 8
  %11 = alloca %class.sk_sp.439, align 8
  %12 = alloca %class.sk_sp.439, align 8
  %13 = bitcast %class.sk_sp.439* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %11, i64 0, i32 0
  store %class.GrVkImageView* null, %class.GrVkImageView** %14, align 8
  %15 = bitcast %class.sk_sp.439* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %class.sk_sp.439, %class.sk_sp.439* %12, i64 0, i32 0
  store %class.GrVkImageView* null, %class.GrVkImageView** %16, align 8
  br i1 %8, label %26, label %17

17:                                               ; preds = %9
  %18 = call fastcc zeroext i1 @_ZL10make_viewsP7GrVkGpuRK13GrVkImageInfoN12GrAttachment10UsageFlagsEP5sk_spIK13GrVkImageViewESA_(%class.GrVkGpu* %1, %struct.GrVkImageInfo* dereferenceable(144) %3, i8 zeroext %5, %class.sk_sp.439* nonnull %11, %class.sk_sp.439* nonnull %12)
  br i1 %18, label %19, label %24

19:                                               ; preds = %17
  %20 = bitcast %class.sk_sp.439* %11 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %class.sk_sp.439* %12 to i64*
  %23 = load i64, i64* %22, align 8
  br label %26

24:                                               ; preds = %17
  %25 = getelementptr inbounds %class.sk_sp.470, %class.sk_sp.470* %0, i64 0, i32 0
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %25, align 8
  br label %78

26:                                               ; preds = %9, %19
  %27 = phi i64 [ %23, %19 ], [ 0, %9 ]
  %28 = phi i64 [ %21, %19 ], [ 0, %9 ]
  %29 = icmp ne i32 %6, 0
  %30 = tail call i8* @_Znwm(i64 408) #9
  %31 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %4, i64 0, i32 0
  %32 = bitcast %class.sk_sp.193* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %31, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %14, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %16, align 8
  %34 = bitcast %class.sk_sp.193* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  %36 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 9
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = bitcast i8* %30 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* nonnull %40, %class.GrGpu* %35) #8
  %41 = bitcast i8* %30 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %30, i64 152
  %43 = bitcast i8* %42 to i64*
  store i64 %2, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %30, i64 160
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %30, i64 164
  store i8 %39, i8* %46, align 4
  %47 = getelementptr inbounds i8, i8* %30, i64 168
  %48 = bitcast i8* %47 to %class.GrRefCntedCallback**
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12GrAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %49 = getelementptr inbounds i8, i8* %30, i64 176
  store i8 %5, i8* %49, align 8
  %50 = getelementptr inbounds i8, i8* %30, i64 180
  %51 = bitcast i8* %50 to i32*
  store i32 %37, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %30, i64 184
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds i8, i8* %30, i64 185
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds i8, i8* %30, i64 192
  %55 = bitcast i8* %54 to %class.GrVkImage*
  %56 = bitcast %class.sk_sp.193* %10 to i64*
  store i64 %33, i64* %56, align 8
  call void @_ZN9GrVkImageC2EPK7GrVkGpuRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE24GrBackendObjectOwnershipb(%class.GrVkImage* %55, %class.GrVkGpu* %1, %struct.GrVkImageInfo* dereferenceable(144) %3, %class.sk_sp.193* nonnull %10, i1 zeroext %29, i1 zeroext %8) #8
  %57 = getelementptr inbounds %class.sk_sp.193, %class.sk_sp.193* %10, i64 0, i32 0
  %58 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %57, align 8
  %59 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %26
  %61 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.GrBackendSurfaceMutableStateImpl* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.GrBackendSurfaceMutableStateImpl* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #8
  br label %70

70:                                               ; preds = %64, %60, %26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %71 = bitcast i8* %54 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds i8, i8* %30, i64 376
  %73 = bitcast i8* %72 to i64*
  store i64 %28, i64* %73, align 8
  %74 = getelementptr inbounds i8, i8* %30, i64 384
  %75 = bitcast i8* %74 to i64*
  store i64 %27, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %30, i64 392
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #8
  call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* nonnull %40, i1 zeroext %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %77 = bitcast %class.sk_sp.470* %0 to i8**
  store i8* %30, i8** %77, align 8
  br label %78

78:                                               ; preds = %70, %24
  %79 = load %class.GrVkImageView*, %class.GrVkImageView** %16, align 8
  %80 = icmp eq %class.GrVkImageView* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = bitcast %class.GrVkImageView* %79 to %class.GrManagedResource*
  %83 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = bitcast %class.GrVkImageView* %79 to void (%class.GrManagedResource*)***
  %88 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %88, i64 4
  %90 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %89, align 8
  call void %90(%class.GrManagedResource* nonnull %82) #8
  %91 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %87, align 8
  %92 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %91, i64 1
  %93 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %92, align 8
  call void %93(%class.GrManagedResource* nonnull %82) #8
  br label %94

94:                                               ; preds = %78, %81, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %95 = load %class.GrVkImageView*, %class.GrVkImageView** %14, align 8
  %96 = icmp eq %class.GrVkImageView* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = bitcast %class.GrVkImageView* %95 to %class.GrManagedResource*
  %99 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %95, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %110

102:                                              ; preds = %97
  %103 = bitcast %class.GrVkImageView* %95 to void (%class.GrManagedResource*)***
  %104 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %104, i64 4
  %106 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %105, align 8
  call void %106(%class.GrManagedResource* nonnull %98) #8
  %107 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %103, align 8
  %108 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %107, i64 1
  %109 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %108, align 8
  call void %109(%class.GrManagedResource* nonnull %98) #8
  br label %110

110:                                              ; preds = %94, %97, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment23inputDescSetForBlendingEP7GrVkGpu(%class.gr_sp* noalias nocapture sret, %class.GrVkAttachment* nocapture, %class.GrVkGpu*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkDescriptorImageInfo, align 8
  %5 = alloca %struct.VkWriteDescriptorSet, align 8
  %6 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %11, align 8
  br label %90

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 4, i32 0
  %14 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  %15 = icmp eq %class.GrVkDescriptorSet* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  store %class.GrVkDescriptorSet* %14, %class.GrVkDescriptorSet** %17, align 8
  br label %90

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 9
  %22 = tail call %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider21getInputDescriptorSetEv(%class.GrVkResourceProvider* %21) #8
  %23 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  store %class.GrVkDescriptorSet* %22, %class.GrVkDescriptorSet** %13, align 8
  %24 = icmp eq %class.GrVkDescriptorSet* %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = bitcast %class.GrVkDescriptorSet* %23 to %class.GrManagedResource*
  %27 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = bitcast %class.GrVkDescriptorSet* %23 to %class.GrRecycledResource*
  %32 = bitcast %class.GrVkDescriptorSet* %23 to void (%class.GrRecycledResource*)***
  %33 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %33, i64 5
  %35 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %34, align 8
  tail call void %35(%class.GrRecycledResource* nonnull %31) #8
  br label %47

36:                                               ; preds = %25
  %37 = atomicrmw add i32* %27, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = bitcast %class.GrVkDescriptorSet* %23 to void (%class.GrManagedResource*)***
  %41 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %41, i64 4
  %43 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %42, align 8
  tail call void %43(%class.GrManagedResource* nonnull %26) #8
  %44 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %45 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, i64 1
  %46 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, align 8
  tail call void %46(%class.GrManagedResource* nonnull %26) #8
  br label %47

47:                                               ; preds = %39, %36, %30
  %48 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  br label %49

49:                                               ; preds = %47, %20
  %50 = phi %class.GrVkDescriptorSet* [ %48, %47 ], [ %22, %20 ]
  %51 = icmp eq %class.GrVkDescriptorSet* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %53, align 8
  br label %90

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 2, i32 0
  %56 = load %class.GrVkImageView*, %class.GrVkImageView** %55, align 8
  %57 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %56, i64 0, i32 1
  %58 = bitcast %struct.VkImageView_T** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %50, i64 0, i32 1
  %61 = bitcast %struct.VkDescriptorSet_T** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %struct.VkDescriptorImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #8
  %65 = bitcast %struct.VkImageView_T** %64 to i64*
  store i64 %59, i64* %65, align 8
  %66 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %4, i64 0, i32 2
  store i32 1, i32* %66, align 8
  %67 = bitcast %struct.VkWriteDescriptorSet* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %67) #8
  %68 = bitcast %struct.VkWriteDescriptorSet* %5 to i64*
  store i64 35, i64* %68, align 8
  %69 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 2
  %71 = bitcast %struct.VkDescriptorSet_T** %70 to i64*
  store i64 %62, i64* %71, align 8
  %72 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 3
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 10>, <4 x i32>* %73, align 8
  %74 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* %4, %struct.VkDescriptorImageInfo** %74, align 8
  %75 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 8
  %76 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 1, i32 0
  %77 = bitcast %struct.VkDescriptorBufferInfo** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8
  %78 = load %struct.GrVkInterface*, %struct.GrVkInterface** %76, align 8
  %79 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %78, i64 0, i32 1, i32 77, i32 0
  %80 = load void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)** %79, align 8
  %81 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 6
  %82 = load %struct.VkDevice_T*, %struct.VkDevice_T** %81, align 8
  call void %80(%struct.VkDevice_T* %82, i32 1, %struct.VkWriteDescriptorSet* nonnull %5, i32 0, %struct.VkCopyDescriptorSet* null) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  %83 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  %84 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  %85 = icmp eq %class.GrVkDescriptorSet* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %54
  %87 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  br label %89

89:                                               ; preds = %54, %86
  store %class.GrVkDescriptorSet* %84, %class.GrVkDescriptorSet** %83, align 8
  br label %90

90:                                               ; preds = %89, %52, %16, %10
  ret void
}

declare %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider21getInputDescriptorSetEv(%class.GrVkResourceProvider*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment23inputDescSetForMSAALoadEP7GrVkGpu(%class.gr_sp* noalias nocapture sret, %class.GrVkAttachment* nocapture, %class.GrVkGpu*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkDescriptorImageInfo, align 8
  %5 = alloca %struct.VkWriteDescriptorSet, align 8
  %6 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %11, align 8
  br label %90

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 5, i32 0
  %14 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  %15 = icmp eq %class.GrVkDescriptorSet* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  store %class.GrVkDescriptorSet* %14, %class.GrVkDescriptorSet** %17, align 8
  br label %90

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 9
  %22 = tail call %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider21getInputDescriptorSetEv(%class.GrVkResourceProvider* %21) #8
  %23 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  store %class.GrVkDescriptorSet* %22, %class.GrVkDescriptorSet** %13, align 8
  %24 = icmp eq %class.GrVkDescriptorSet* %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = bitcast %class.GrVkDescriptorSet* %23 to %class.GrManagedResource*
  %27 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = bitcast %class.GrVkDescriptorSet* %23 to %class.GrRecycledResource*
  %32 = bitcast %class.GrVkDescriptorSet* %23 to void (%class.GrRecycledResource*)***
  %33 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %33, i64 5
  %35 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %34, align 8
  tail call void %35(%class.GrRecycledResource* nonnull %31) #8
  br label %47

36:                                               ; preds = %25
  %37 = atomicrmw add i32* %27, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = bitcast %class.GrVkDescriptorSet* %23 to void (%class.GrManagedResource*)***
  %41 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %41, i64 4
  %43 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %42, align 8
  tail call void %43(%class.GrManagedResource* nonnull %26) #8
  %44 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %45 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, i64 1
  %46 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, align 8
  tail call void %46(%class.GrManagedResource* nonnull %26) #8
  br label %47

47:                                               ; preds = %39, %36, %30
  %48 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  br label %49

49:                                               ; preds = %47, %20
  %50 = phi %class.GrVkDescriptorSet* [ %48, %47 ], [ %22, %20 ]
  %51 = icmp eq %class.GrVkDescriptorSet* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %53, align 8
  br label %90

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 2, i32 0
  %56 = load %class.GrVkImageView*, %class.GrVkImageView** %55, align 8
  %57 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %56, i64 0, i32 1
  %58 = bitcast %struct.VkImageView_T** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %50, i64 0, i32 1
  %61 = bitcast %struct.VkDescriptorSet_T** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %struct.VkDescriptorImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #8
  %65 = bitcast %struct.VkImageView_T** %64 to i64*
  store i64 %59, i64* %65, align 8
  %66 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %4, i64 0, i32 2
  store i32 5, i32* %66, align 8
  %67 = bitcast %struct.VkWriteDescriptorSet* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %67) #8
  %68 = bitcast %struct.VkWriteDescriptorSet* %5 to i64*
  store i64 35, i64* %68, align 8
  %69 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 2
  %71 = bitcast %struct.VkDescriptorSet_T** %70 to i64*
  store i64 %62, i64* %71, align 8
  %72 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 3
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 10>, <4 x i32>* %73, align 8
  %74 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* %4, %struct.VkDescriptorImageInfo** %74, align 8
  %75 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %5, i64 0, i32 8
  %76 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 1, i32 0
  %77 = bitcast %struct.VkDescriptorBufferInfo** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8
  %78 = load %struct.GrVkInterface*, %struct.GrVkInterface** %76, align 8
  %79 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %78, i64 0, i32 1, i32 77, i32 0
  %80 = load void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)** %79, align 8
  %81 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 6
  %82 = load %struct.VkDevice_T*, %struct.VkDevice_T** %81, align 8
  call void %80(%struct.VkDevice_T* %82, i32 1, %struct.VkWriteDescriptorSet* nonnull %5, i32 0, %struct.VkCopyDescriptorSet* null) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  %83 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %0, i64 0, i32 0
  %84 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %13, align 8
  %85 = icmp eq %class.GrVkDescriptorSet* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %54
  %87 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  br label %89

89:                                               ; preds = %54, %86
  store %class.GrVkDescriptorSet* %84, %class.GrVkDescriptorSet** %83, align 8
  br label %90

90:                                               ; preds = %89, %52, %16, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachmentD2Ev(%class.GrVkAttachment*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [4 x i8*] }, { [17 x i8*], [4 x i8*] }* @_ZTV14GrVkAttachment, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 5, i32 0
  %6 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %5, align 8
  %7 = icmp eq %class.GrVkDescriptorSet* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.GrVkDescriptorSet* %6 to %class.GrManagedResource*
  %10 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = bitcast %class.GrVkDescriptorSet* %6 to %class.GrRecycledResource*
  %15 = bitcast %class.GrVkDescriptorSet* %6 to void (%class.GrRecycledResource*)***
  %16 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %16, i64 5
  %18 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %17, align 8
  tail call void %18(%class.GrRecycledResource* nonnull %14) #8
  br label %30

19:                                               ; preds = %8
  %20 = atomicrmw add i32* %10, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %30

22:                                               ; preds = %19
  %23 = bitcast %class.GrVkDescriptorSet* %6 to void (%class.GrManagedResource*)***
  %24 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %24, i64 4
  %26 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %25, align 8
  tail call void %26(%class.GrManagedResource* nonnull %9) #8
  %27 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %23, align 8
  %28 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %27, i64 1
  %29 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %28, align 8
  tail call void %29(%class.GrManagedResource* nonnull %9) #8
  br label %30

30:                                               ; preds = %1, %13, %19, %22
  %31 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 4, i32 0
  %32 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %31, align 8
  %33 = icmp eq %class.GrVkDescriptorSet* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = bitcast %class.GrVkDescriptorSet* %32 to %class.GrManagedResource*
  %36 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 acquire, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = bitcast %class.GrVkDescriptorSet* %32 to %class.GrRecycledResource*
  %41 = bitcast %class.GrVkDescriptorSet* %32 to void (%class.GrRecycledResource*)***
  %42 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %42, i64 5
  %44 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %43, align 8
  tail call void %44(%class.GrRecycledResource* nonnull %40) #8
  br label %56

45:                                               ; preds = %34
  %46 = atomicrmw add i32* %36, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %56

48:                                               ; preds = %45
  %49 = bitcast %class.GrVkDescriptorSet* %32 to void (%class.GrManagedResource*)***
  %50 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %50, i64 4
  %52 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %51, align 8
  tail call void %52(%class.GrManagedResource* nonnull %35) #8
  %53 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %49, align 8
  %54 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %53, i64 1
  %55 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %54, align 8
  tail call void %55(%class.GrManagedResource* nonnull %35) #8
  br label %56

56:                                               ; preds = %30, %39, %45, %48
  %57 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 3, i32 0
  %58 = load %class.GrVkImageView*, %class.GrVkImageView** %57, align 8
  %59 = icmp eq %class.GrVkImageView* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %56
  %61 = bitcast %class.GrVkImageView* %58 to %class.GrManagedResource*
  %62 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = bitcast %class.GrVkImageView* %58 to void (%class.GrManagedResource*)***
  %67 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %67, i64 4
  %69 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %68, align 8
  tail call void %69(%class.GrManagedResource* nonnull %61) #8
  %70 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %66, align 8
  %71 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %70, i64 1
  %72 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %71, align 8
  tail call void %72(%class.GrManagedResource* nonnull %61) #8
  br label %73

73:                                               ; preds = %56, %60, %65
  %74 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 2, i32 0
  %75 = load %class.GrVkImageView*, %class.GrVkImageView** %74, align 8
  %76 = icmp eq %class.GrVkImageView* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %73
  %78 = bitcast %class.GrVkImageView* %75 to %class.GrManagedResource*
  %79 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %90

82:                                               ; preds = %77
  %83 = bitcast %class.GrVkImageView* %75 to void (%class.GrManagedResource*)***
  %84 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %84, i64 4
  %86 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %85, align 8
  tail call void %86(%class.GrManagedResource* nonnull %78) #8
  %87 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %83, align 8
  %88 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %87, i64 1
  %89 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %88, align 8
  tail call void %89(%class.GrManagedResource* nonnull %78) #8
  br label %90

90:                                               ; preds = %73, %77, %82
  tail call void @_ZN9GrVkImageD2Ev(%class.GrVkImage* %3) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %91 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %92 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %91, align 8
  %93 = icmp eq %class.GrRefCntedCallback* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %92, i64 0, i32 0
  %96 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %107

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.SkNVRefCnt.192, %class.SkNVRefCnt.192* %95, i64 2
  %101 = bitcast %class.SkNVRefCnt.192* %100 to void (i8*)**
  %102 = load void (i8*)*, void (i8*)** %101, align 8
  %103 = getelementptr inbounds %class.SkNVRefCnt.192, %class.SkNVRefCnt.192* %95, i64 4
  %104 = bitcast %class.SkNVRefCnt.192* %103 to i8**
  %105 = load i8*, i8** %104, align 8
  tail call void %102(i8* %105) #8
  %106 = bitcast %class.GrRefCntedCallback* %92 to i8*
  tail call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %90, %94, %99
  %108 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %108) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9GrVkImageD2Ev(%class.GrVkImage*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn192_N14GrVkAttachmentD1Ev(%class.GrVkAttachment*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 -1, i32 1, i32 1, i32 1, i32 1
  %3 = bitcast i64* %2 to %class.GrVkAttachment*
  tail call void @_ZN14GrVkAttachmentD2Ev(%class.GrVkAttachment* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachmentD0Ev(%class.GrVkAttachment*) unnamed_addr #0 align 2 {
  tail call void @_ZN14GrVkAttachmentD2Ev(%class.GrVkAttachment* %0) #8
  %2 = bitcast %class.GrVkAttachment* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn192_N14GrVkAttachmentD0Ev(%class.GrVkAttachment*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 -1, i32 1, i32 1, i32 1, i32 1
  %3 = bitcast i64* %2 to %class.GrVkAttachment*
  tail call void @_ZN14GrVkAttachmentD2Ev(%class.GrVkAttachment* %3) #8
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment7releaseEv(%class.GrVkAttachment*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 1
  tail call void @_ZN9GrVkImage12releaseImageEv(%class.GrVkImage* %2) #8
  %3 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrVkImageView*, %class.GrVkImageView** %3, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %3, align 8
  %5 = icmp eq %class.GrVkImageView* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrVkImageView* %4 to %class.GrManagedResource*
  %8 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %19

11:                                               ; preds = %6
  %12 = bitcast %class.GrVkImageView* %4 to void (%class.GrManagedResource*)***
  %13 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %13, i64 4
  %15 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %14, align 8
  tail call void %15(%class.GrManagedResource* nonnull %7) #8
  %16 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %12, align 8
  %17 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %16, i64 1
  %18 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %17, align 8
  tail call void %18(%class.GrManagedResource* nonnull %7) #8
  br label %19

19:                                               ; preds = %1, %6, %11
  %20 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 3, i32 0
  %21 = load %class.GrVkImageView*, %class.GrVkImageView** %20, align 8
  store %class.GrVkImageView* null, %class.GrVkImageView** %20, align 8
  %22 = icmp eq %class.GrVkImageView* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = bitcast %class.GrVkImageView* %21 to %class.GrManagedResource*
  %25 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %36

28:                                               ; preds = %23
  %29 = bitcast %class.GrVkImageView* %21 to void (%class.GrManagedResource*)***
  %30 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %30, i64 4
  %32 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %31, align 8
  tail call void %32(%class.GrManagedResource* nonnull %24) #8
  %33 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %29, align 8
  %34 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %33, i64 1
  %35 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %34, align 8
  tail call void %35(%class.GrManagedResource* nonnull %24) #8
  br label %36

36:                                               ; preds = %19, %23, %28
  %37 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 4, i32 0
  %38 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %37, align 8
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %37, align 8
  %39 = icmp eq %class.GrVkDescriptorSet* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = bitcast %class.GrVkDescriptorSet* %38 to %class.GrManagedResource*
  %42 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 acquire, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = bitcast %class.GrVkDescriptorSet* %38 to %class.GrRecycledResource*
  %47 = bitcast %class.GrVkDescriptorSet* %38 to void (%class.GrRecycledResource*)***
  %48 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %48, i64 5
  %50 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %49, align 8
  tail call void %50(%class.GrRecycledResource* nonnull %46) #8
  br label %62

51:                                               ; preds = %40
  %52 = atomicrmw add i32* %42, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %62

54:                                               ; preds = %51
  %55 = bitcast %class.GrVkDescriptorSet* %38 to void (%class.GrManagedResource*)***
  %56 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %56, i64 4
  %58 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %57, align 8
  tail call void %58(%class.GrManagedResource* nonnull %41) #8
  %59 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %55, align 8
  %60 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %59, i64 1
  %61 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %60, align 8
  tail call void %61(%class.GrManagedResource* nonnull %41) #8
  br label %62

62:                                               ; preds = %36, %45, %51, %54
  %63 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 5, i32 0
  %64 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %63, align 8
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %63, align 8
  %65 = icmp eq %class.GrVkDescriptorSet* %64, null
  br i1 %65, label %88, label %66

66:                                               ; preds = %62
  %67 = bitcast %class.GrVkDescriptorSet* %64 to %class.GrManagedResource*
  %68 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 acquire, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %66
  %72 = bitcast %class.GrVkDescriptorSet* %64 to %class.GrRecycledResource*
  %73 = bitcast %class.GrVkDescriptorSet* %64 to void (%class.GrRecycledResource*)***
  %74 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %74, i64 5
  %76 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %75, align 8
  tail call void %76(%class.GrRecycledResource* nonnull %72) #8
  br label %88

77:                                               ; preds = %66
  %78 = atomicrmw add i32* %68, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %88

80:                                               ; preds = %77
  %81 = bitcast %class.GrVkDescriptorSet* %64 to void (%class.GrManagedResource*)***
  %82 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %82, i64 4
  %84 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %83, align 8
  tail call void %84(%class.GrManagedResource* nonnull %67) #8
  %85 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %81, align 8
  %86 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %85, i64 1
  %87 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %86, align 8
  tail call void %87(%class.GrManagedResource* nonnull %67) #8
  br label %88

88:                                               ; preds = %62, %71, %77, %80
  ret void
}

declare void @_ZN9GrVkImage12releaseImageEv(%class.GrVkImage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment9onReleaseEv(%class.GrVkAttachment*) unnamed_addr #0 align 2 {
  tail call void @_ZN14GrVkAttachment7releaseEv(%class.GrVkAttachment* %0)
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9GrSurface9onReleaseEv(%class.GrSurface* %2) #8
  ret void
}

declare void @_ZN9GrSurface9onReleaseEv(%class.GrSurface*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrVkAttachment9onAbandonEv(%class.GrVkAttachment*) unnamed_addr #0 align 2 {
  tail call void @_ZN14GrVkAttachment7releaseEv(%class.GrVkAttachment* %0)
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9GrSurface9onAbandonEv(%class.GrSurface* %2) #8
  ret void
}

declare void @_ZN9GrSurface9onAbandonEv(%class.GrSurface*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrVkGpu* @_ZNK14GrVkAttachment8getVkGpuEv(%class.GrVkAttachment* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %class.GrGpu** %2 to %class.GrVkGpu**
  %4 = load %class.GrVkGpu*, %class.GrVkGpu** %3, align 8
  ret %class.GrVkGpu* %4
}

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK12GrAttachment15getResourceTypeEv(%class.GrAttachment*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 1
  %5 = select i1 %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK12GrAttachment17computeScratchKeyEP12GrScratchKey(%class.GrAttachment*, %class.GrScratchKey*) unnamed_addr #1

declare i64 @_ZNK12GrAttachment15onGpuMemorySizeEv(%class.GrAttachment*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14GrVkAttachment13backendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrVkAttachment*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.GrVkYcbcrConversionInfo, align 8
  %4 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 5
  %5 = load %"class.GrVkImage::Resource"*, %"class.GrVkImage::Resource"** %4, align 8, !noalias !3
  %6 = icmp eq %"class.GrVkImage::Resource"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 11, i32 3
  %9 = load i32, i32* %8, align 8, !noalias !3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 11
  tail call void @_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* sret %0, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %12) #8
  br label %17

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 4
  %15 = load i32, i32* %14, align 8, !noalias !3
  %16 = bitcast %struct.GrVkYcbcrConversionInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #8, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 48, i1 false) #8, !noalias !6
  call void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* %0, i32 %15, %struct.GrVkYcbcrConversionInfo* nonnull dereferenceable(48) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #8, !noalias !6
  br label %17

17:                                               ; preds = %11, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZN9GrSurface9asTextureEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrTexture* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZNK9GrSurface9asTextureEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrTexture* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZN9GrSurface14asRenderTargetEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRenderTarget* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZNK9GrSurface14asRenderTargetEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRenderTarget* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrSurface*, %class.sk_sp.191*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource*, %class.GrGpu*) unnamed_addr #1

declare void @_ZN13GrVkImageView4MakeEP7GrVkGpuP9VkImage_T8VkFormatNS_4TypeEjRK23GrVkYcbcrConversionInfo(%class.sk_sp.439* sret, %class.GrVkGpu*, %struct.VkImage_T*, i32, i32, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN32GrBackendSurfaceMutableStateImplD0Ev(%class.GrBackendSurfaceMutableStateImpl*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %class.GrBackendSurfaceMutableStateImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #4

declare void @_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* sret, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat*, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK9GrVkImage16getBackendFormatEv: argument 0"}
!5 = distinct !{!5, !"_ZNK9GrVkImage16getBackendFormatEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!8 = distinct !{!8, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
