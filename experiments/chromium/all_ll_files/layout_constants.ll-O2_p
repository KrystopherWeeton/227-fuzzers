; ModuleID = '../../chrome/browser/ui/layout_constants.cc'
source_filename = "../../chrome/browser/ui/layout_constants.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.ui::TouchUiController" = type { i8, i32, %"class.base::RepeatingCallbackList" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }

@_ZN8features19kScrollableTabStripE = external global %"struct.base::Feature", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z17GetLayoutConstant14LayoutConstant(i32) local_unnamed_addr #0 {
  %2 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #2
  %3 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %2, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 2, label %10
    i32 1, label %5
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %2, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %1, %5, %9
  %11 = phi i1 [ true, %1 ], [ %8, %5 ], [ false, %9 ]
  switch i32 %0, label %70 [
    i32 0, label %12
    i32 1, label %21
    i32 2, label %23
    i32 3, label %71
    i32 4, label %34
    i32 5, label %35
    i32 6, label %36
    i32 7, label %37
    i32 8, label %38
    i32 9, label %40
    i32 10, label %42
    i32 11, label %44
    i32 12, label %46
    i32 13, label %47
    i32 14, label %49
    i32 15, label %56
    i32 16, label %57
    i32 18, label %59
    i32 17, label %60
    i32 19, label %64
    i32 20, label %66
    i32 21, label %68
  ]

12:                                               ; preds = %10
  %13 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #2
  %14 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %71 [
    i32 2, label %20
    i32 1, label %16
  ]

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %13, i64 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %71, label %20

20:                                               ; preds = %16, %12
  br label %71

21:                                               ; preds = %10
  %22 = select i1 %11, i32 36, i32 28
  br label %71

23:                                               ; preds = %10
  br i1 %11, label %24, label %71

24:                                               ; preds = %23
  %25 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #2
  %26 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #2
  %27 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %71 [
    i32 2, label %33
    i32 1, label %29
  ]

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %26, i64 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %71, label %33

33:                                               ; preds = %29, %24
  br label %71

34:                                               ; preds = %10
  br label %71

35:                                               ; preds = %10
  br label %71

36:                                               ; preds = %10
  br label %71

37:                                               ; preds = %10
  br label %71

38:                                               ; preds = %10
  %39 = select i1 %11, i32 3, i32 2
  br label %71

40:                                               ; preds = %10
  %41 = select i1 %11, i32 36, i32 28
  br label %71

42:                                               ; preds = %10
  %43 = select i1 %11, i32 20, i32 16
  br label %71

44:                                               ; preds = %10
  %45 = select i1 %11, i32 8, i32 4
  br label %71

46:                                               ; preds = %10
  br label %71

47:                                               ; preds = %10
  %48 = select i1 %11, i32 12, i32 16
  br label %71

49:                                               ; preds = %10
  %50 = select i1 %11, i32 41, i32 34
  %51 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #2
  %52 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kScrollableTabStripE) #2
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = add nuw nsw i32 %50, %54
  br label %71

56:                                               ; preds = %10
  br label %71

57:                                               ; preds = %10
  %58 = select i1 %11, i32 4, i32 6
  br label %71

59:                                               ; preds = %10
  br label %71

60:                                               ; preds = %10
  %61 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kScrollableTabStripE) #2
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  br label %71

64:                                               ; preds = %10
  %65 = select i1 %11, i32 48, i32 28
  br label %71

66:                                               ; preds = %10
  %67 = select i1 %11, i32 0, i32 4
  br label %71

68:                                               ; preds = %10
  %69 = select i1 %11, i32 12, i32 8
  br label %71

70:                                               ; preds = %10
  br label %71

71:                                               ; preds = %33, %24, %29, %20, %12, %16, %60, %10, %23, %70, %68, %66, %64, %59, %57, %56, %49, %47, %46, %44, %42, %40, %38, %37, %36, %35, %34, %21
  %72 = phi i32 [ 0, %70 ], [ %69, %68 ], [ %67, %66 ], [ %65, %64 ], [ 8, %59 ], [ %58, %57 ], [ 8, %56 ], [ %55, %49 ], [ %48, %47 ], [ 16, %46 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ], [ %39, %38 ], [ 3, %37 ], [ 1, %36 ], [ 2, %35 ], [ 16, %34 ], [ %22, %21 ], [ 39, %23 ], [ 24, %10 ], [ %63, %60 ], [ 40, %20 ], [ 32, %16 ], [ 32, %12 ], [ 40, %33 ], [ 32, %29 ], [ 32, %24 ]
  ret i32 %72
}

declare %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_Z15GetLayoutInsets11LayoutInset(i32) local_unnamed_addr #0 {
  %2 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #2
  %3 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %2, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 2, label %10
    i32 1, label %5
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %2, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %1, %5, %9
  %11 = phi i1 [ true, %1 ], [ %8, %5 ], [ false, %9 ]
  switch i32 %0, label %30 [
    i32 0, label %12
    i32 1, label %16
    i32 2, label %21
    i32 3, label %26
  ]

12:                                               ; preds = %10
  %13 = select i1 %11, i32 5, i32 4
  %14 = select i1 %11, i32 10, i32 8
  %15 = select i1 %11, i64 42949672965, i64 34359738372
  br label %30

16:                                               ; preds = %10
  %17 = select i1 %11, i32 12, i32 6
  %18 = zext i32 %17 to i64
  %19 = shl nuw nsw i64 %18, 32
  %20 = or i64 %19, %18
  br label %30

21:                                               ; preds = %10
  %22 = select i1 %11, i32 10, i32 0
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 32
  %25 = or i64 %24, %23
  br label %30

26:                                               ; preds = %10
  %27 = select i1 %11, i32 0, i32 4
  %28 = select i1 %11, i32 0, i32 8
  %29 = select i1 %11, i64 0, i64 34359738372
  br label %30

30:                                               ; preds = %26, %12, %10, %21, %16
  %31 = phi i32 [ %22, %21 ], [ %17, %16 ], [ 0, %10 ], [ %13, %12 ], [ %27, %26 ]
  %32 = phi i32 [ %22, %21 ], [ %17, %16 ], [ 0, %10 ], [ %14, %12 ], [ %28, %26 ]
  %33 = phi i64 [ %25, %21 ], [ %20, %16 ], [ 0, %10 ], [ %15, %12 ], [ %29, %26 ]
  %34 = zext i32 %32 to i64
  %35 = shl nuw nsw i64 %34, 32
  %36 = zext i32 %31 to i64
  %37 = or i64 %35, %36
  %38 = insertvalue { i64, i64 } undef, i64 %37, 0
  %39 = insertvalue { i64, i64 } %38, i64 %33, 1
  ret { i64, i64 } %39
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
