; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/pcy_lib.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/pcy_lib.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.X509_POLICY_TREE_st = type { %struct.X509_POLICY_LEVEL_st*, i32, %struct.stack_st_X509_POLICY_DATA*, %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE*, i32 }
%struct.X509_POLICY_LEVEL_st = type { %struct.x509_st*, %struct.stack_st_X509_POLICY_NODE*, %struct.X509_POLICY_NODE_st*, i32 }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type { %struct.X509_POLICY_DATA_st*, %struct.stack_st_X509_POLICY_DATA*, i64, i64, i64 }
%struct.X509_POLICY_DATA_st = type { i32, %struct.asn1_object_st*, %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_ASN1_OBJECT* }
%struct.stack_st_POLICYQUALINFO = type opaque
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_POLICY_NODE_st = type { %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_NODE_st*, i32 }
%struct.stack_st_X509_POLICY_DATA = type opaque
%struct.stack_st_X509_POLICY_NODE = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_policy_tree_level_count(%struct.X509_POLICY_TREE_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_TREE_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_POLICY_LEVEL_st* @X509_policy_tree_get0_level(%struct.X509_POLICY_TREE_st* readonly, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_POLICY_TREE_st* %0, null
  %4 = icmp slt i32 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 0
  %12 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %11, align 8
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %6, %10
  %16 = phi %struct.X509_POLICY_LEVEL_st* [ %14, %10 ], [ null, %6 ], [ null, %2 ]
  ret %struct.X509_POLICY_LEVEL_st* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_X509_POLICY_NODE* @X509_policy_tree_get0_policies(%struct.X509_POLICY_TREE_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_TREE_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 3
  %5 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %struct.stack_st_X509_POLICY_NODE* [ %5, %3 ], [ null, %1 ]
  ret %struct.stack_st_X509_POLICY_NODE* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_X509_POLICY_NODE* @X509_policy_tree_get0_user_policies(%struct.X509_POLICY_TREE_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_TREE_st* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 3
  %10 = select i1 %7, %struct.stack_st_X509_POLICY_NODE** %8, %struct.stack_st_X509_POLICY_NODE** %9
  %11 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %10, align 8
  br label %12

12:                                               ; preds = %3, %1
  %13 = phi %struct.stack_st_X509_POLICY_NODE* [ null, %1 ], [ %11, %3 ]
  ret %struct.stack_st_X509_POLICY_NODE* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_policy_level_node_count(%struct.X509_POLICY_LEVEL_st* readonly) local_unnamed_addr #1 {
  %2 = icmp eq %struct.X509_POLICY_LEVEL_st* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %0, i64 0, i32 2
  %5 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %4, align 8
  %6 = icmp ne %struct.X509_POLICY_NODE_st* %5, null
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %0, i64 0, i32 1
  %9 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %8, align 8
  %10 = icmp eq %struct.stack_st_X509_POLICY_NODE* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast %struct.stack_st_X509_POLICY_NODE* %9 to %struct.stack_st*
  %13 = tail call i64 @sk_num(%struct.stack_st* nonnull %12) #3
  %14 = trunc i64 %13 to i32
  %15 = add i32 %14, %7
  br label %16

16:                                               ; preds = %11, %3, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %11 ], [ %7, %3 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_POLICY_NODE_st* @X509_policy_level_get0_node(%struct.X509_POLICY_LEVEL_st* readonly, i32) local_unnamed_addr #1 {
  %3 = icmp eq %struct.X509_POLICY_LEVEL_st* %0, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %0, i64 0, i32 2
  %6 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %5, align 8
  %7 = icmp eq %struct.X509_POLICY_NODE_st* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  %11 = add nsw i32 %1, -1
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi i32 [ %11, %10 ], [ %1, %4 ]
  %14 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %0, i64 0, i32 1
  %15 = bitcast %struct.stack_st_X509_POLICY_NODE** %14 to %struct.stack_st**
  %16 = load %struct.stack_st*, %struct.stack_st** %15, align 8
  %17 = sext i32 %13 to i64
  %18 = tail call i8* @sk_value(%struct.stack_st* %16, i64 %17) #3
  %19 = bitcast i8* %18 to %struct.X509_POLICY_NODE_st*
  br label %20

20:                                               ; preds = %8, %2, %12
  %21 = phi %struct.X509_POLICY_NODE_st* [ %19, %12 ], [ null, %2 ], [ %6, %8 ]
  ret %struct.X509_POLICY_NODE_st* %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_object_st* @X509_policy_node_get0_policy(%struct.X509_POLICY_NODE_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_NODE_st* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %0, i64 0, i32 0
  %5 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %5, i64 0, i32 1
  %7 = load %struct.asn1_object_st*, %struct.asn1_object_st** %6, align 8
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi %struct.asn1_object_st* [ %7, %3 ], [ null, %1 ]
  ret %struct.asn1_object_st* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_POLICYQUALINFO* @X509_policy_node_get0_qualifiers(%struct.X509_POLICY_NODE_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_NODE_st* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %0, i64 0, i32 0
  %5 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %4, align 8
  %6 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %5, i64 0, i32 2
  %7 = load %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_POLICYQUALINFO** %6, align 8
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi %struct.stack_st_POLICYQUALINFO* [ %7, %3 ], [ null, %1 ]
  ret %struct.stack_st_POLICYQUALINFO* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_POLICY_NODE_st* @X509_policy_node_get0_parent(%struct.X509_POLICY_NODE_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_NODE_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %0, i64 0, i32 1
  %5 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %struct.X509_POLICY_NODE_st* [ %5, %3 ], [ null, %1 ]
  ret %struct.X509_POLICY_NODE_st* %7
}

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
