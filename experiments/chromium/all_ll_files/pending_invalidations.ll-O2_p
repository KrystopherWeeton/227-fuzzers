; ModuleID = '../../third_party/blink/renderer/core/css/invalidation/pending_invalidations.cc'
source_filename = "../../third_party/blink/renderer/core/css/invalidation/pending_invalidations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.170", i32, [4 x i8], %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.306", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.340", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.347", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.286", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.280", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i64 }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { float }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.289", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.298" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.328" }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.217"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.585" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__cxx_atomic_impl.349" }
%"struct.std::__1::__cxx_atomic_impl.349" = type { %"struct.std::__1::__cxx_atomic_base_impl.350" }
%"struct.std::__1::__cxx_atomic_base_impl.350" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.122" }
%"struct.std::__1::atomic.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__cxx_atomic_impl.125" }
%"struct.std::__1::__cxx_atomic_impl.125" = type { %"struct.std::__1::__cxx_atomic_base_impl.126" }
%"struct.std::__1::__cxx_atomic_base_impl.126" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::Member", %"class.blink::NodeInvalidationSets" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member", %"class.blink::Member.19", %"class.blink::Member.4", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.72", %"class.blink::HeapVector.74" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.118", %"class.WTF::Vector.118", i8, i32, %"class.blink::Member.129", %"class.blink::Member.131", %"class.blink::Member.133", %"class.blink::Member.135", %"class.blink::Member.137", %"class.blink::Member.139", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.142", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.80", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.153", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.36", %"class.blink::Member.363", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::UserActionElementSet", %"class.blink::Member.372", double, double, i64, i64, %"class.blink::HeapHashSet.374", %"class.blink::HeapHashSet.381", i16, i8, %"class.blink::Member.388", %"class.blink::Member.390", %"class.blink::Member.392", %"class.blink::Member.394", %"class.blink::TextLinkColors", %"class.blink::Member.396", i8, [7 x i8], %"class.blink::HeapHashMap.398", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.36", %"class.WTF::Vector.405", %"class.blink::Member.410", %"class.blink::Member.412", i8, %"class.blink::Member.36", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.414", %"class.blink::HeapVector.416", %"class.std::__1::unique_ptr.424", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.430", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.443", %"class.WTF::Vector.445", i8, i8, %"class.std::__1::unique_ptr.450", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.456", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.464", i8, i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.472", %"class.WTF::HashMap.474", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.483", %"class.blink::Member.485", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.487", i8, i32, %"class.blink::Member.494", %"class.blink::Member.496", i32, %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", %"class.std::__1::unique_ptr.504", i64, %"class.std::__1::unique_ptr.510", i32, i32, %"class.blink::Member.521", %"class.blink::Member.523", %"class.blink::Member.525", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.527", %"class.WTF::Vector.529", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.534", %"class.blink::Member.541", %"class.std::__1::unique_ptr.543", %"class.blink::Member.549", i8, i8, %"class.WTF::String", %"class.blink::Member.551", i8, [7 x i8], %"class.blink::HeapHashMap.553", %"class.blink::HeapObserverSet", %"class.blink::Member.567", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.569", i32, i8, i8, %"class.blink::WeakMember.571", %"class.blink::Member.572" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.111" }
%"class.blink::HeapHashMap.111" = type { %"class.WTF::HashMap.114" }
%"class.WTF::HashMap.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"struct.WTF::KeyValuePair.117"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.117" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.121 }
%class.scoped_refptr.121 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.122" }
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.590", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.631", i32, i8, [3 x i8], %"class.blink::HeapVector.633", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.641", %"class.blink::Member.643", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.652", %"class.blink::Member.658", %"class.blink::Member.660", i8, [7 x i8] }>
%"class.blink::Supplementable.590" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.591" }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.606" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.598" }
%"class.blink::HeapObserverSet.598" = type { i32, [4 x i8], %"class.blink::HeapHashSet.599" }
%"class.blink::HeapHashSet.599" = type { %"class.WTF::HashSet.602" }
%"class.WTF::HashSet.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"class.blink::WeakMember.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.605" = type opaque
%"class.blink::Supplementable.606" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.607" }
%"class.blink::HeapHashMap.607" = type { %"class.WTF::HashMap.610" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type { i8*, %"class.blink::Member.1117" }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1119" }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.614, %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.621", %"class.std::__1::unique_ptr.621", %"class.blink::Member.131", i32, [4 x i8], %"class.WTF::HashSet.627", i32, i32 }
%class.scoped_refptr.614 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.633" = type { %"class.WTF::Vector.636" }
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { %"class.blink::Member.639"*, i32, i32 }
%"class.blink::Member.639" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.645", i32, i32 }
%"class.blink::HeapHashMap.645" = type { %"class.WTF::HashMap.648" }
%"class.WTF::HashMap.648" = type { %"class.WTF::HashTable.649" }
%"class.WTF::HashTable.649" = type <{ %"struct.WTF::KeyValuePair.651"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.651" = type opaque
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.82", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.84, %"class.WTF::Vector.85", %"class.WTF::Vector.85", %"class.blink::Member.2", %"class.blink::Member.90", %"class.blink::HeapHashSet", %"class.blink::Member.19", %"class.WTF::HashSet", %"class.WTF::TextPosition", %"class.blink::Member.99", %"class.blink::HeapVector.101", %"class.blink::Member.108" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.84 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.92" }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.96" }
%"class.WTF::HashSet.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.101" = type { %"class.WTF::Vector.104" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.blink::Member.90"*, i32, i32 }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.152 }
%class.scoped_refptr.152 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.157", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.157" = type { %"class.base::RefCounted.158" }
%"class.base::RefCounted.158" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.161" }
%"class.blink::HeapHashMap.161" = type { %"class.WTF::HashMap.164" }
%"class.WTF::HashMap.164" = type { %"class.WTF::HashTable.165" }
%"class.WTF::HashTable.165" = type <{ %"struct.WTF::KeyValuePair.167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.167" = type { %"class.blink::WeakMember.168", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.365" }
%"class.blink::HeapHashMap.365" = type { %"class.WTF::HashMap.368" }
%"class.WTF::HashMap.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %"struct.WTF::KeyValuePair.371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.371" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.374" = type { %"class.WTF::HashSet.377" }
%"class.WTF::HashSet.377" = type { %"class.WTF::HashTable.378" }
%"class.WTF::HashTable.378" = type <{ %"class.blink::WeakMember.380"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.380" = type opaque
%"class.blink::HeapHashSet.381" = type { %"class.WTF::HashSet.384" }
%"class.WTF::HashSet.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"class.blink::WeakMember.387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.387" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.74" }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.398" = type { %"class.WTF::HashMap.401" }
%"class.WTF::HashMap.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"struct.WTF::KeyValuePair.404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.404" = type opaque
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.41" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.39", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.39" = type { %"class.base::RefCounted.40" }
%"class.base::RefCounted.40" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.45", %"class.blink::Member.47", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.45" = type { %"class.WTF::SingleThreadedBitField.46" }
%"class.WTF::SingleThreadedBitField.46" = type { i32 }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.50", %"class.WTF::AtomicString", %"class.WTF::Vector.52" }
%"class.WTF::RefCounted.50" = type { %"class.base::RefCounted.51" }
%"class.base::RefCounted.51" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54", [32 x i8] }
%"class.WTF::VectorBufferBase.54" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.416" = type { %"class.WTF::Vector.419" }
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"class.blink::Member.422"*, i32, i32 }
%"class.blink::Member.422" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.430" = type { %"class.WTF::HashSet.433" }
%"class.WTF::HashSet.433" = type { %"class.WTF::HashTable.434" }
%"class.WTF::HashTable.434" = type <{ %"class.blink::WeakMember.436"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.436" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.437", i32, [4 x i8] }>
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"struct.std::__1::pair.440"*, i32, i32 }
%"struct.std::__1::pair.440" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.36"*, i32, i32 }
%"class.blink::HeapVector.456" = type { %"class.WTF::Vector.459" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::Member.462"*, i32, i32 }
%"class.blink::Member.462" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.19" }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"struct.WTF::KeyValuePair.478"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.478" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.362", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.353, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.353 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.354" }>
%"class.base::RefCountedThreadSafe.354" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.355 }
%class.scoped_refptr.355 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.356", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.356" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.357" }
%"struct.std::__1::atomic.357" = type { %"struct.std::__1::__atomic_base.358" }
%"struct.std::__1::__atomic_base.358" = type { %"struct.std::__1::__atomic_base.359" }
%"struct.std::__1::__atomic_base.359" = type { %"struct.std::__1::__cxx_atomic_impl.360" }
%"struct.std::__1::__cxx_atomic_impl.360" = type { %"struct.std::__1::__cxx_atomic_base_impl.361" }
%"struct.std::__1::__cxx_atomic_base_impl.361" = type { i8 }
%"class.blink::WeakMember.362" = type { %"class.blink::MemberBase.20" }
%"class.blink::HeapHashSet.487" = type { %"class.WTF::HashSet.490" }
%"class.WTF::HashSet.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"class.blink::Member.493"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.493" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, [4 x i8], %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.534" = type { %"class.WTF::HashMap.537" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.553" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.559"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.559" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.560" }
%"class.blink::HeapHashSet.560" = type { %"class.WTF::HashSet.563" }
%"class.WTF::HashSet.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"class.blink::WeakMember.566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.566" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.19", %"class.blink::HeapHashSet.576", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.583", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.576" = type { %"class.WTF::HashSet.579" }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"class.blink::Member.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.582" = type opaque
%"class.blink::HeapTaskRunnerTimer.583" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.584", { i64, i64 } }
%"class.blink::WeakMember.584" = type { %"class.blink::MemberBase.570" }
%"class.blink::WeakMember.571" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.25" }
%"class.blink::HeapHashMap.25" = type { %"class.WTF::HashMap.28" }
%"class.WTF::HashMap.28" = type { %"class.WTF::HashTable.29" }
%"class.WTF::HashTable.29" = type <{ %"struct.WTF::KeyValuePair.31"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.31" = type { %"class.WTF::AtomicString", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.36", i32, %"class.blink::HeapVector" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.69" }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapHashMap.71"* }
%"class.blink::HeapHashMap.71" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.74" = type { %"class.WTF::Vector.77" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { %"class.blink::Member.80"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.14", %"union.blink::InvalidationSet::Backing.15", %"union.blink::InvalidationSet::Backing.16", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.14" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.15" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.16" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"struct.blink::InvalidationLists" = type { %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1146", %"class.blink::Member.1301", %"class.blink::Member.1303", %"class.blink::Member.1322", %"class.blink::Member.1324" }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1143 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1143, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1149" }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1152", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1158", %"class.std::__1::unique_ptr.1281", i8, %"class.absl::optional.1287", %class.scoped_refptr.1263, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1292" }
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1161, %class.scoped_refptr.1161, %class.scoped_refptr.1161, %class.scoped_refptr.1161, %class.scoped_refptr.1161, %class.scoped_refptr.1161, %class.scoped_refptr.1196, %class.scoped_refptr.1212, %class.scoped_refptr.1213, %class.scoped_refptr.1213, %class.scoped_refptr.1213, %class.scoped_refptr.1213, %class.scoped_refptr.1213, %class.scoped_refptr.1213, %class.scoped_refptr.1253, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1254, %class.scoped_refptr.1277 }
%class.scoped_refptr.1161 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1178" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1162", i8, i8, %class.scoped_refptr.1164, i32, i32 }
%"class.WTF::RefCounted.1162" = type { %"class.base::RefCounted.1163" }
%"class.base::RefCounted.1163" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1164 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1171, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1172", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1165" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1171 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1197", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1197" = type { %"class.WTF::RefCounted.1198", i8, i8, %class.scoped_refptr.1171, i32, i32 }
%"class.WTF::RefCounted.1198" = type { %"class.base::RefCounted.1199" }
%"class.base::RefCounted.1199" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1200" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1200" = type { %"class.absl::optional_internal::optional_data.1201" }
%"class.absl::optional_internal::optional_data.1201" = type { %"class.absl::optional_internal::optional_data_base.1202" }
%"class.absl::optional_internal::optional_data_base.1202" = type { %"class.absl::optional_internal::optional_data_dtor_base.1203" }
%"class.absl::optional_internal::optional_data_dtor_base.1203" = type { i8, %union.anon.1204 }
%union.anon.1204 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1205", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1205" = type { %"class.std::__1::__vector_base.1206" }
%"class.std::__1::__vector_base.1206" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1207" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1181", %"class.std::__1::unique_ptr.1187", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1196 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1212 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1213 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1214" }
%"class.blink::PaintPropertyNode.1214" = type { %"class.WTF::RefCounted.1215", i8, i8, %class.scoped_refptr.1217, i32, i32 }
%"class.WTF::RefCounted.1215" = type { %"class.base::RefCounted.1216" }
%"class.base::RefCounted.1216" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1217 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1164, %class.scoped_refptr.1218, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1240", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1218 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1255" }
%"class.blink::PaintPropertyNode.1255" = type { %"class.WTF::RefCounted.1256", i8, i8, %class.scoped_refptr.1218, i32, i32 }
%"class.WTF::RefCounted.1256" = type { %"class.base::RefCounted.1257" }
%"class.base::RefCounted.1257" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1219" }
%"class.std::__1::vector.1219" = type { %"class.std::__1::__vector_base.1220" }
%"class.std::__1::__vector_base.1220" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1235" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1221, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1228", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1221 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1222, i32, %"class.absl::optional.1223", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.122" }>
%class.sk_sp.1222 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1223" = type { %"class.absl::optional_internal::optional_data.1224" }
%"class.absl::optional_internal::optional_data.1224" = type { %"class.absl::optional_internal::optional_data_base.1225" }
%"class.absl::optional_internal::optional_data_base.1225" = type { %"class.absl::optional_internal::optional_data_dtor_base.1226" }
%"class.absl::optional_internal::optional_data_dtor_base.1226" = type { i8, %union.anon.1227 }
%union.anon.1227 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1228" = type { %"class.std::__1::__vector_base.1229" }
%"class.std::__1::__vector_base.1229" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1230" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1240" = type { %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1246" }
%"class.std::__1::vector.1246" = type { %"class.std::__1::__vector_base.1247" }
%"class.std::__1::__vector_base.1247" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { i32* }
%class.scoped_refptr.1253 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1254 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1266" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1164, %"class.absl::optional.1258", %class.scoped_refptr.1263, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1258" = type { %"class.absl::optional_internal::optional_data.1259" }
%"class.absl::optional_internal::optional_data.1259" = type { %"class.absl::optional_internal::optional_data_base.1260" }
%"class.absl::optional_internal::optional_data_base.1260" = type { %"class.absl::optional_internal::optional_data_dtor_base.1261" }
%"class.absl::optional_internal::optional_data_dtor_base.1261" = type { i8, [3 x i8], %union.anon.1262 }
%union.anon.1262 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1269", i32, [4 x i8] }>
%"class.WTF::Vector.1269" = type { %"class.WTF::VectorBuffer.1270" }
%"class.WTF::VectorBuffer.1270" = type { %"class.WTF::VectorBufferBase.1271" }
%"class.WTF::VectorBufferBase.1271" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1277 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1164, %class.scoped_refptr.1218, %class.scoped_refptr.1217 }
%"class.absl::optional.1287" = type { %"class.absl::optional_internal::optional_data.1288" }
%"class.absl::optional_internal::optional_data.1288" = type { %"class.absl::optional_internal::optional_data_base.1289" }
%"class.absl::optional_internal::optional_data_base.1289" = type { %"class.absl::optional_internal::optional_data_dtor_base.1290" }
%"class.absl::optional_internal::optional_data_dtor_base.1290" = type { i8, %union.anon.1291 }
%union.anon.1291 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1263 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1264", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1035, i32, %"struct.std::__1::atomic.357", %"struct.std::__1::atomic.357", i8, i8 }>
%class.sk_sp.1035 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1036, %class.SkTDArray.1037, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.122" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1036 = type { i8*, i32, i32 }
%class.SkTDArray.1037 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1038 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.122", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.357" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1038 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.347", [3 x i8] }
%"class.WTF::RefCounted.1264" = type { %"class.base::RefCounted.1265" }
%"class.base::RefCounted.1265" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1143 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1097", %"class.std::__1::unique_ptr.1099" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.729", %"class.blink::DataRef.809", %"class.blink::DataRef.813", %"class.blink::DataRef.1013", %"class.blink::DataRef.1080", %"class.blink::DataRef.1084", %"class.blink::DataRef.1088", %"class.blink::DataRef.1092", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.665", %"class.blink::DataRef.667", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.667" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.669", %"class.blink::Font" }
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.702 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.672, %class.scoped_refptr.680, %class.scoped_refptr.690, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.701 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1114", [4 x i8] }>
%"class.WTF::RefCounted.1114" = type { %"class.base::RefCounted.1115" }
%"class.base::RefCounted.1115" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.672 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.678", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.673" }
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.681", %"class.WTF::RefCounted.688", [4 x i8] }>
%"class.blink::FontSettings.681" = type { %"class.WTF::Vector.682" }
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684" }
%"class.WTF::VectorBufferBase.684" = type { %"class.blink::FontTagValuePair.685"*, i32, i32 }
%"class.blink::FontTagValuePair.685" = type { i32, float }
%"class.WTF::RefCounted.688" = type { %"class.base::RefCounted.689" }
%"class.base::RefCounted.689" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.690 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.691", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.698, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.691" = type { %"class.base::RefCounted.692" }
%"class.base::RefCounted.692" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.698 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.699", [4 x i8] }>
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.701 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.702 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.703", %"class.WTF::Vector.705", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.703" = type { %"class.base::RefCounted.704" }
%"class.base::RefCounted.704" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.705" = type { %"class.WTF::VectorBuffer.706" }
%"class.WTF::VectorBuffer.706" = type { %"class.WTF::VectorBufferBase.707", [8 x i8] }
%"class.WTF::VectorBufferBase.707" = type { %class.scoped_refptr.708*, i32, i32 }
%class.scoped_refptr.708 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.709", [4 x i8] }>
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.715", %class.scoped_refptr.722, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.709" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.713 }
%union.anon.713 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.714, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.122" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.714 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.718, %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.722 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.723", [4 x i8] }>
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.725" }
%"class.blink::PersistentBase.725" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.726" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.726" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.728, i8, i8, i8, i8 }>
%union.anon.728 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.731", [4 x i8], %"class.blink::DataRef.733", %"class.blink::DataRef.774", %"class.WTF::Vector.778", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.782, %class.scoped_refptr.791, %"class.blink::Persistent.799", %"class.blink::Persistent.801", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.733" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.735", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.737, %class.scoped_refptr.744, %"class.blink::Persistent.761", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.737 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.738", %"class.WTF::Vector.739" }
%"class.base::RefCountedThreadSafe.738" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.740" }
%"class.WTF::VectorBuffer.740" = type { %"class.WTF::VectorBufferBase.741" }
%"class.WTF::VectorBufferBase.741" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.744 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.745", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.745" = type { %"class.base::RefCounted.746" }
%"class.base::RefCounted.746" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.747", %"class.blink::Persistent.752" }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.751" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1131 }
%class.scoped_refptr.1131 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1132", %"class.WTF::Vector.996", %"class.WTF::Vector.1134", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1132" = type { %"class.base::RefCounted.1133" }
%"class.base::RefCounted.1133" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.996" = type { %"class.WTF::VectorBuffer.997" }
%"class.WTF::VectorBuffer.997" = type { %"class.WTF::VectorBufferBase.998" }
%"class.WTF::VectorBufferBase.998" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1134" = type { %"class.WTF::VectorBuffer.1135" }
%"class.WTF::VectorBuffer.1135" = type { %"class.WTF::VectorBufferBase.1136" }
%"class.WTF::VectorBufferBase.1136" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1137 }
%union.anon.1137 = type { double }
%"class.blink::Persistent.752" = type { %"class.blink::PersistentBase.753" }
%"class.blink::PersistentBase.753" = type { %"class.blink::HeapHashMap.754"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.754" = type { %"class.WTF::HashMap.757" }
%"class.WTF::HashMap.757" = type { %"class.WTF::HashTable.758" }
%"class.WTF::HashTable.758" = type <{ %"struct.WTF::KeyValuePair.760"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.760" = type opaque
%"class.blink::Persistent.761" = type { %"class.blink::PersistentBase.762" }
%"class.blink::PersistentBase.762" = type { %"class.blink::HeapVector.763"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.763" = type { %"class.WTF::Vector.766" }
%"class.WTF::Vector.766" = type { %"class.WTF::VectorBuffer.767" }
%"class.WTF::VectorBuffer.767" = type { %"class.WTF::VectorBufferBase.768" }
%"class.WTF::VectorBufferBase.768" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.769", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.774" = type { %class.scoped_refptr.775 }
%class.scoped_refptr.775 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.776", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.776" = type { %"class.base::RefCounted.777" }
%"class.base::RefCounted.777" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.54" }
%class.scoped_refptr.782 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.783", %"class.WTF::Vector.785" }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"struct.std::__1::pair.788"*, i32, i32 }
%"struct.std::__1::pair.788" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.791 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.792", [4 x i8], %"class.WTF::Vector.794" }
%"class.WTF::RefCounted.792" = type { %"class.base::RefCounted.793" }
%"class.base::RefCounted.793" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.794" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.796", [28 x i8] }>
%"class.WTF::VectorBufferBase.796" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.799" = type { %"class.blink::PersistentBase.800" }
%"class.blink::PersistentBase.800" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.801" = type { %"class.blink::PersistentBase.802" }
%"class.blink::PersistentBase.802" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.805", %"class.blink::Member.807" }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.809" = type { %class.scoped_refptr.810 }
%class.scoped_refptr.810 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.811", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.813" = type { %class.scoped_refptr.814 }
%class.scoped_refptr.814 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.815", [4 x i8], %"class.blink::DataRef.817", %"class.blink::DataRef.883", %"class.blink::TransformOperations", %class.scoped_refptr.791, %"class.blink::Persistent.1007", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.817" = type { %class.scoped_refptr.818 }
%class.scoped_refptr.818 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.819", [4 x i8], %"class.blink::DataRef.821", %"class.blink::Persistent.859", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.819" = type { %"class.base::RefCounted.820" }
%"class.base::RefCounted.820" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.821" = type { %class.scoped_refptr.822 }
%class.scoped_refptr.822 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.823", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.841, %class.scoped_refptr.844, %class.scoped_refptr.847, %class.scoped_refptr.850, %class.scoped_refptr.851, %class.scoped_refptr.852, %"class.blink::Persistent.859", %"class.blink::Persistent.874", %"class.absl::optional.878", %"class.absl::optional.878", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.823" = type { %"class.base::RefCounted.824" }
%"class.base::RefCounted.824" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.825", %"class.std::__1::unique_ptr.830" }
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.833", %"class.WTF::Vector.825", i32, i32 }
%"class.WTF::Vector.833" = type { %"class.WTF::VectorBuffer.834" }
%"class.WTF::VectorBuffer.834" = type { %"class.WTF::VectorBufferBase.835" }
%"class.WTF::VectorBufferBase.835" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.841 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.842", [4 x i8] }>
%"class.WTF::RefCounted.842" = type { %"class.base::RefCounted.843" }
%"class.base::RefCounted.843" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.844 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.845", [4 x i8] }>
%"class.WTF::RefCounted.845" = type { %"class.base::RefCounted.846" }
%"class.base::RefCounted.846" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.847 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.848" }>
%"class.WTF::RefCounted.848" = type { %"class.base::RefCounted.849" }
%"class.base::RefCounted.849" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.850 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.851 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.852 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.853", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.853" = type { %"class.base::RefCounted.854" }
%"class.base::RefCounted.854" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.855" }
%"class.blink::DataRef.855" = type { %class.scoped_refptr.856 }
%class.scoped_refptr.856 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.799", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.857" }
%"class.WTF::RefCounted.857" = type { %"class.base::RefCounted.858" }
%"class.base::RefCounted.858" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.874" = type { %"class.blink::PersistentBase.875" }
%"class.blink::PersistentBase.875" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.844, %"class.blink::Member.769", i32, [4 x i8] }>
%"class.absl::optional.878" = type { %"class.absl::optional_internal::optional_data.879" }
%"class.absl::optional_internal::optional_data.879" = type { %"class.absl::optional_internal::optional_data_base.880" }
%"class.absl::optional_internal::optional_data_base.880" = type { %"class.absl::optional_internal::optional_data_dtor_base.881" }
%"class.absl::optional_internal::optional_data_dtor_base.881" = type { i8, [3 x i8], %union.anon.882 }
%union.anon.882 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.859" = type { %"class.blink::PersistentBase.860" }
%"class.blink::PersistentBase.860" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.863" }
%"class.blink::HeapVector.863" = type { %"class.WTF::Vector.866" }
%"class.WTF::Vector.866" = type { %"class.WTF::VectorBuffer.867" }
%"class.WTF::VectorBuffer.867" = type { %"class.WTF::VectorBufferBase.868" }
%"class.WTF::VectorBufferBase.868" = type { %"class.blink::Member.869"*, i32, i32 }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.883" = type { %class.scoped_refptr.884 }
%class.scoped_refptr.884 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.885", %"class.blink::DataRef.887", %"class.blink::DataRef.891", %"class.blink::DataRef.900", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.919", %"class.std::__1::unique_ptr.930", %"class.std::__1::unique_ptr.968", %"class.std::__1::unique_ptr.979", %"class.std::__1::unique_ptr.990", %"class.WTF::Vector.996", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.885" = type { %"class.base::RefCounted.886" }
%"class.base::RefCounted.886" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.887" = type { %class.scoped_refptr.888 }
%class.scoped_refptr.888 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.889", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.889" = type { %"class.base::RefCounted.890" }
%"class.base::RefCounted.890" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.891" = type { %class.scoped_refptr.892 }
%class.scoped_refptr.892 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.893", [4 x i8], %"class.WTF::Vector.895", i8, [7 x i8] }>
%"class.WTF::RefCounted.893" = type { %"class.base::RefCounted.894" }
%"class.base::RefCounted.894" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.895" = type { %"class.WTF::VectorBuffer.896" }
%"class.WTF::VectorBuffer.896" = type { %"class.WTF::VectorBufferBase.897" }
%"class.WTF::VectorBufferBase.897" = type { i32*, i32, i32 }
%"class.blink::DataRef.900" = type { %class.scoped_refptr.901 }
%class.scoped_refptr.901 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.902", [4 x i8], %"class.WTF::HashMap.904", %"class.WTF::HashMap.904", %"class.WTF::HashMap.904", %"class.WTF::HashMap.904", %"class.WTF::HashMap.904", %"class.WTF::HashMap.904", %"class.WTF::HashMap.909", %"class.WTF::HashMap.909", %"class.WTF::HashMap.909", %"class.WTF::HashMap.909", %"class.WTF::HashMap.914", %"class.WTF::Vector.825", %"class.WTF::Vector.825", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.904" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"struct.WTF::KeyValuePair.908"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.908" = type { %"class.WTF::String", %"class.WTF::Vector.1121" }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { i64*, i32, i32 }
%"class.WTF::HashMap.909" = type { %"class.WTF::HashTable.910" }
%"class.WTF::HashTable.910" = type <{ %"struct.WTF::KeyValuePair.913"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.913" = type { i64, %"class.WTF::Vector.996" }
%"class.WTF::HashMap.914" = type { %"class.WTF::HashTable.915" }
%"class.WTF::HashTable.915" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.922" }
%"class.WTF::HashMap.922" = type { %"class.WTF::HashTable.923" }
%"class.WTF::HashTable.923" = type <{ %"struct.WTF::KeyValuePair.926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.926" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1126", %"class.absl::optional.1126", %"class.absl::optional.1126" }
%"class.absl::optional.1126" = type { %"class.absl::optional_internal::optional_data.1127" }
%"class.absl::optional_internal::optional_data.1127" = type { %"class.absl::optional_internal::optional_data_base.1128" }
%"class.absl::optional_internal::optional_data_base.1128" = type { %"class.absl::optional_internal::optional_data_dtor_base.1129" }
%"class.absl::optional_internal::optional_data_dtor_base.1129" = type { i8, %union.anon.1130 }
%union.anon.1130 = type { i32 }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.778", %"class.WTF::Vector.945", %"class.WTF::Vector.933", %"class.WTF::Vector.950", %"class.WTF::Vector.955", %"class.WTF::Vector.960" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.933", %"class.WTF::Vector.933", %"class.WTF::Vector.938" }
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940" }
%"class.WTF::VectorBufferBase.940" = type { %class.scoped_refptr.941*, i32, i32 }
%class.scoped_refptr.941 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.942" }
%"class.base::RefCountedThreadSafe.942" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { double*, i32, i32 }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { i32*, i32, i32 }
%"class.WTF::Vector.955" = type { %"class.WTF::VectorBuffer.956" }
%"class.WTF::VectorBuffer.956" = type { %"class.WTF::VectorBufferBase.957" }
%"class.WTF::VectorBufferBase.957" = type { i32*, i32, i32 }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.971" }
%"class.WTF::Vector.971" = type { %"class.WTF::VectorBuffer.972" }
%"class.WTF::VectorBuffer.972" = type { %"class.WTF::VectorBufferBase.973" }
%"class.WTF::VectorBufferBase.973" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.982" }
%"class.WTF::Vector.982" = type { %"class.WTF::VectorBuffer.983" }
%"class.WTF::VectorBuffer.983" = type { %"class.WTF::VectorBufferBase.984" }
%"class.WTF::VectorBufferBase.984" = type { %"class.blink::Persistent.799"*, i32, i32 }
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.799", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1001" }
%"class.WTF::Vector.1001" = type { %"class.WTF::VectorBuffer.1002" }
%"class.WTF::VectorBuffer.1002" = type { %"class.WTF::VectorBufferBase.1003" }
%"class.WTF::VectorBufferBase.1003" = type { %class.scoped_refptr.1004*, i32, i32 }
%class.scoped_refptr.1004 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.848", [4 x i8] }>
%"class.blink::Persistent.1007" = type { %"class.blink::PersistentBase.1008" }
%"class.blink::PersistentBase.1008" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1011" }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1013" = type { %class.scoped_refptr.1014 }
%class.scoped_refptr.1014 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1015", [4 x i8], %"class.blink::DataRef.1017", %"class.blink::DataRef.1021", %"class.blink::DataRef.1042", %"class.blink::DataRef.1060", %"class.blink::DataRef.1072", %"class.blink::DataRef.1076", %class.scoped_refptr.1046, i32, [4 x i8] }>
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1017" = type { %class.scoped_refptr.1018 }
%class.scoped_refptr.1018 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1019", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1021" = type { %class.scoped_refptr.1022 }
%class.scoped_refptr.1022 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1023", %class.scoped_refptr.1025, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1023" = type { %"class.base::RefCounted.1024" }
%"class.base::RefCounted.1024" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1025 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1026", %"class.std::__1::unique_ptr.1032", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.845" }>
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1042" = type { %class.scoped_refptr.1043 }
%class.scoped_refptr.1043 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1044", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1046, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1060" = type { %class.scoped_refptr.1061 }
%class.scoped_refptr.1061 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1062", [4 x i8], %class.scoped_refptr.1064, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1062" = type { %"class.base::RefCounted.1063" }
%"class.base::RefCounted.1063" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1064 = type { %"class.base::RefCountedData.1065"* }
%"class.base::RefCountedData.1065" = type { %"class.base::RefCountedThreadSafe.1066", %"class.WTF::Vector.1067" }
%"class.base::RefCountedThreadSafe.1066" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1067" = type { %"class.WTF::VectorBuffer.1068" }
%"class.WTF::VectorBuffer.1068" = type { %"class.WTF::VectorBufferBase.1069" }
%"class.WTF::VectorBufferBase.1069" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1072" = type { %class.scoped_refptr.1073 }
%class.scoped_refptr.1073 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1074", %class.scoped_refptr.1046, %class.scoped_refptr.1046, %class.scoped_refptr.1046 }
%"class.WTF::RefCounted.1074" = type { %"class.base::RefCounted.1075" }
%"class.base::RefCounted.1075" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1076" = type { %class.scoped_refptr.1077 }
%class.scoped_refptr.1077 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1078", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1078" = type { %"class.base::RefCounted.1079" }
%"class.base::RefCounted.1079" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1046 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1047", %"class.blink::Persistent.1049", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1049" = type { %"class.blink::PersistentBase.1050" }
%"class.blink::PersistentBase.1050" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.36", %"class.blink::HeapHashMap.1053" }
%"class.blink::HeapHashMap.1053" = type { %"class.WTF::HashMap.1056" }
%"class.WTF::HashMap.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"struct.WTF::KeyValuePair.1059"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1059" = type opaque
%"class.blink::DataRef.1080" = type { %class.scoped_refptr.1081 }
%class.scoped_refptr.1081 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1082", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1082" = type { %"class.base::RefCounted.1083" }
%"class.base::RefCounted.1083" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1084" = type { %class.scoped_refptr.1085 }
%class.scoped_refptr.1085 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1086", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1088" = type { %class.scoped_refptr.1089 }
%class.scoped_refptr.1089 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1090", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1090" = type { %"class.base::RefCounted.1091" }
%"class.base::RefCounted.1091" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1092" = type { %class.scoped_refptr.1093 }
%class.scoped_refptr.1093 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1094", %class.scoped_refptr.1096 }
%"class.WTF::RefCounted.1094" = type { %"class.base::RefCounted.1095" }
%"class.base::RefCounted.1095" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1096 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1112", %"class.blink::StyleVariables", %class.scoped_refptr.1096 }
%"class.WTF::RefCounted.1112" = type { %"class.base::RefCounted.1113" }
%"class.base::RefCounted.1113" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1097" = type { %"class.base::RefCounted.1098" }
%"class.base::RefCounted.1098" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1102" }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.WTF::Vector.1105"* }
%"class.WTF::Vector.1105" = type { %"class.WTF::VectorBuffer.1141" }
%"class.WTF::VectorBuffer.1141" = type { %"class.WTF::VectorBufferBase.1142", [32 x i8] }
%"class.WTF::VectorBufferBase.1142" = type { %class.scoped_refptr.1143*, i32, i32 }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1307", %"class.blink::HeapHashSet.1316" }
%"class.blink::HeapVector.1307" = type { %"class.WTF::Vector.1310" }
%"class.WTF::Vector.1310" = type { %"class.WTF::VectorBuffer.1311" }
%"class.WTF::VectorBuffer.1311" = type { %"class.WTF::VectorBufferBase.1312" }
%"class.WTF::VectorBufferBase.1312" = type { %"class.blink::Member.1313"*, i32, i32 }
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1316" = type { %"class.WTF::HashSet.1319" }
%"class.WTF::HashSet.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"class.blink::Member.1313"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::HeapHashSet.1326"* }
%"class.blink::HeapHashSet.1326" = type opaque
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.14", %"union.blink::InvalidationSet::Backing.15", %"union.blink::InvalidationSet::Backing.16", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1116, %class.scoped_refptr.1116 }
%class.scoped_refptr.1116 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink20NodeInvalidationSetsD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15InvalidationSetEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS2_25DescendantInvalidationSetEEEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS4_S7_S8_SA_SF_SD_SG_EE = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS1_12KeyValuePairIS5_NS_20NodeInvalidationSetsEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS3_12KeyValuePairIS7_NS_20NodeInvalidationSetsEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink19style_change_reason17kStyleInvalidatorE = external constant [0 x i8], align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15InvalidationSetEEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::InvalidationSet>]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS3_12KeyValuePairIS7_NS_20NodeInvalidationSetsEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

@_ZN5blink20PendingInvalidationsC1Ev = hidden unnamed_addr alias void (%"class.blink::PendingInvalidations"*), void (%"class.blink::PendingInvalidations"*)* @_ZN5blink20PendingInvalidationsC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PendingInvalidationsC2Ev(%"class.blink::PendingInvalidations"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PendingInvalidations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #8
  tail call void @_ZN5blink15InvalidationSet16CacheTracingFlagEv() #8
  ret void
}

declare void @_ZN5blink15InvalidationSet16CacheTracingFlagEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PendingInvalidations31ScheduleInvalidationSetsForNodeERKNS_17InvalidationListsERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"*, %"struct.blink::InvalidationLists"* nocapture readonly dereferenceable(32), %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 65536
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %198

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.scoped_refptr*, %class.scoped_refptr** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %198, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %19, %149
  %26 = phi i8 [ 0, %19 ], [ %150, %149 ]
  %27 = phi %class.scoped_refptr* [ %13, %19 ], [ %151, %149 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %29, i64 0, i32 6, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %92, label %34

34:                                               ; preds = %25
  %35 = load i32, i32* %7, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 8
  br i1 %37, label %38, label %51

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %41, align 8
  %43 = icmp ne %"class.blink::ContainerNode"* %42, %2
  %44 = icmp eq %"class.blink::ContainerNode"* %2, null
  %45 = or i1 %44, %43
  br i1 %45, label %51, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.blink::Node"** %47 to %"class.blink::Element"**
  %49 = load %"class.blink::Element"*, %"class.blink::Element"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %49, i64 0, i32 0
  br label %51

51:                                               ; preds = %38, %34, %46
  %52 = phi %"class.blink::ContainerNode"* [ %50, %46 ], [ %2, %38 ], [ %2, %34 ]
  %53 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %52, i64 0, i32 0
  %54 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #8
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  call void @llvm.trap() #8
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %51, %57, %72
  %75 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleInvalidatorE, i64 0, i64 0), i8** %75, align 8
  %76 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %76, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %53, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %148, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %148

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #8
  br label %148

92:                                               ; preds = %25
  %93 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %29, i64 0, i32 8
  %94 = load i8, i8* %93, align 2
  %95 = and i8 %94, 4
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %139, label %97

97:                                               ; preds = %92
  %98 = load i32, i32* %7, align 8
  %99 = and i32 %98, 12
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %139

101:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #8
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #8
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %101, %104, %119
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleInvalidatorE, i64 0, i64 0), i8** %23, align 8
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %24, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %6, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #8
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #8
  br label %137

137:                                              ; preds = %121, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  %138 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %28, align 8
  br label %139

139:                                              ; preds = %92, %137, %97
  %140 = phi %"class.blink::InvalidationSet"* [ %29, %92 ], [ %138, %137 ], [ %29, %97 ]
  %141 = call zeroext i1 @_ZNK5blink15InvalidationSet16HasEmptyBackingsEv(%"class.blink::InvalidationSet"* %140) #8
  br i1 %141, label %142, label %149

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %140, i64 0, i32 6, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = and i8 %144, 57
  %146 = icmp eq i8 %145, 0
  %147 = select i1 %146, i8 %26, i8 1
  br label %149

148:                                              ; preds = %74, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #8
  br label %198

149:                                              ; preds = %142, %139
  %150 = phi i8 [ 1, %139 ], [ %147, %142 ]
  %151 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %152 = icmp eq %class.scoped_refptr* %151, %17
  br i1 %152, label %153, label %25

153:                                              ; preds = %149
  %154 = and i8 %150, 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %198, label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %7, align 8
  %158 = and i32 %157, 12
  %159 = icmp eq i32 %158, 0
  %160 = and i32 %157, 1
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %159, label %163, label %174

163:                                              ; preds = %156
  br i1 %161, label %170, label %164

164:                                              ; preds = %163
  %165 = bitcast %"class.blink::NodeData"** %162 to %"class.blink::NodeRareData"**
  %166 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %166, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %168, i64 0, i32 2, i32 0
  br label %186

170:                                              ; preds = %163
  %171 = bitcast %"class.blink::NodeData"** %162 to %"class.blink::NodeRenderingData"**
  %172 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %172, i64 0, i32 2, i32 0
  br label %186

174:                                              ; preds = %156
  %175 = bitcast %"class.blink::NodeData"** %162 to %"class.blink::NodeRareData"**
  %176 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %176, i64 0, i32 1, i32 0, i32 0
  %178 = bitcast %"class.blink::NodeData"** %162 to %"class.blink::NodeRenderingData"**
  %179 = select i1 %161, %"class.blink::NodeRenderingData"** %178, %"class.blink::NodeRenderingData"** %177
  %180 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %180, i64 0, i32 1
  %182 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %181, align 8
  %183 = icmp eq %"class.blink::LayoutObject"* %182, null
  br i1 %183, label %190, label %184

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %182, i64 0, i32 5, i32 0
  br label %186

186:                                              ; preds = %164, %170, %184
  %187 = phi %"class.blink::ComputedStyle"** [ %185, %184 ], [ %169, %164 ], [ %173, %170 ]
  %188 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %187, align 8
  %189 = icmp eq %"class.blink::ComputedStyle"* %188, null
  br i1 %189, label %190, label %202

190:                                              ; preds = %174, %186
  %191 = icmp eq i32 %158, 8
  br i1 %191, label %192, label %198

192:                                              ; preds = %190
  %193 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %194 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %194, i64 0, i32 1, i32 0, i32 0
  %196 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %195, align 8
  %197 = icmp eq %"class.blink::ContainerNode"* %196, %2
  br i1 %197, label %202, label %198

198:                                              ; preds = %11, %153, %190, %192, %148, %3
  %199 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %341, label %202

202:                                              ; preds = %186, %192, %198
  %203 = phi i1 [ false, %198 ], [ true, %192 ], [ true, %186 ]
  %204 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %205 = load %"class.blink::Node"*, %"class.blink::Node"** %204, align 8
  %206 = icmp eq %"class.blink::Node"* %205, null
  %207 = call dereferenceable(32) %"class.blink::NodeInvalidationSets"* @_ZN5blink20PendingInvalidations26EnsurePendingInvalidationsERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %2)
  %208 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %209 = load %class.scoped_refptr*, %class.scoped_refptr** %208, align 8
  %210 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %209, i64 %212
  %214 = icmp eq i32 %211, 0
  br i1 %214, label %220, label %215

215:                                              ; preds = %202
  %216 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 1
  %217 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %216, i64 0, i32 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 1, i32 0, i32 0, i32 2
  %219 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %225

220:                                              ; preds = %273, %202
  %221 = phi i8 [ 0, %202 ], [ %274, %273 ]
  %222 = and i8 %221, 1
  %223 = icmp ne i8 %222, 0
  %224 = or i1 %203, %223
  br i1 %224, label %277, label %278

225:                                              ; preds = %215, %273
  %226 = phi %class.scoped_refptr* [ %209, %215 ], [ %275, %273 ]
  %227 = phi i8 [ 0, %215 ], [ %274, %273 ]
  br i1 %206, label %228, label %235

228:                                              ; preds = %225
  %229 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %226, i64 0, i32 0
  %230 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %230, i64 0, i32 8
  %232 = load i8, i8* %231, align 2
  %233 = and i8 %232, 3
  %234 = icmp eq i8 %233, 2
  br i1 %234, label %235, label %273

235:                                              ; preds = %228, %225
  %236 = load %class.scoped_refptr*, %class.scoped_refptr** %217, align 8
  %237 = load i32, i32* %218, align 4
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %236, i64 %238
  %240 = icmp eq i32 %237, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %226, i64 0, i32 0
  %243 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %242, align 8
  br label %244

244:                                              ; preds = %249, %241
  %245 = phi %class.scoped_refptr* [ %236, %241 ], [ %250, %249 ]
  %246 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %245, i64 0, i32 0
  %247 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %246, align 8
  %248 = icmp eq %"class.blink::InvalidationSet"* %247, %243
  br i1 %248, label %252, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %245, i64 1
  %251 = icmp ult %class.scoped_refptr* %250, %239
  br i1 %251, label %244, label %259

252:                                              ; preds = %244
  %253 = ptrtoint %class.scoped_refptr* %245 to i64
  %254 = ptrtoint %class.scoped_refptr* %236 to i64
  %255 = sub i64 %253, %254
  %256 = lshr exact i64 %255, 3
  %257 = trunc i64 %256 to i32
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %259, label %273

259:                                              ; preds = %249, %252, %235
  %260 = load i32, i32* %219, align 8
  %261 = icmp eq i32 %237, %260
  br i1 %261, label %272, label %262, !prof !2

262:                                              ; preds = %259
  %263 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %226, i64 0, i32 0
  %264 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %263, align 8
  %265 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %236, i64 %238, i32 0
  store %"class.blink::InvalidationSet"* %264, %"class.blink::InvalidationSet"** %265, align 8
  %266 = icmp eq %"class.blink::InvalidationSet"* %264, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %264, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %268) #8
  br label %269

269:                                              ; preds = %267, %262
  %270 = load i32, i32* %218, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %218, align 4
  br label %273

272:                                              ; preds = %259
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"* %216, %class.scoped_refptr* dereferenceable(8) %226) #8
  br label %273

273:                                              ; preds = %252, %272, %269, %228
  %274 = phi i8 [ %227, %228 ], [ %227, %252 ], [ 1, %269 ], [ 1, %272 ]
  %275 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %226, i64 1
  %276 = icmp eq %class.scoped_refptr* %275, %213
  br i1 %276, label %220, label %225

277:                                              ; preds = %220
  call void @_ZN5blink4Node25SetNeedsStyleInvalidationEv(%"class.blink::Node"* %6) #8
  br label %278

278:                                              ; preds = %220, %277
  br i1 %203, label %279, label %341

279:                                              ; preds = %278
  %280 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %281 = load %class.scoped_refptr*, %class.scoped_refptr** %280, align 8
  %282 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %281, i64 %284
  %286 = icmp eq i32 %283, 0
  br i1 %286, label %341, label %287

287:                                              ; preds = %279
  %288 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 0
  %289 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 0, i32 0, i32 0, i32 0
  %290 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 0, i32 0, i32 0, i32 2
  %291 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %207, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %292

292:                                              ; preds = %287, %338
  %293 = phi %class.scoped_refptr* [ %281, %287 ], [ %339, %338 ]
  %294 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %293, i64 0, i32 0
  %295 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %294, align 8
  %296 = call zeroext i1 @_ZNK5blink15InvalidationSet16HasEmptyBackingsEv(%"class.blink::InvalidationSet"* %295) #8
  br i1 %296, label %297, label %302

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %295, i64 0, i32 6, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = and i8 %299, 57
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %338, label %302

302:                                              ; preds = %292, %297
  %303 = load %class.scoped_refptr*, %class.scoped_refptr** %289, align 8
  %304 = load i32, i32* %290, align 4
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %303, i64 %305
  %307 = icmp eq i32 %304, 0
  br i1 %307, label %325, label %308

308:                                              ; preds = %302
  %309 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %294, align 8
  br label %310

310:                                              ; preds = %315, %308
  %311 = phi %class.scoped_refptr* [ %303, %308 ], [ %316, %315 ]
  %312 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %311, i64 0, i32 0
  %313 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %312, align 8
  %314 = icmp eq %"class.blink::InvalidationSet"* %313, %309
  br i1 %314, label %318, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %311, i64 1
  %317 = icmp ult %class.scoped_refptr* %316, %306
  br i1 %317, label %310, label %325

318:                                              ; preds = %310
  %319 = ptrtoint %class.scoped_refptr* %311 to i64
  %320 = ptrtoint %class.scoped_refptr* %303 to i64
  %321 = sub i64 %319, %320
  %322 = lshr exact i64 %321, 3
  %323 = trunc i64 %322 to i32
  %324 = icmp eq i32 %323, -1
  br i1 %324, label %325, label %338

325:                                              ; preds = %315, %318, %302
  %326 = load i32, i32* %291, align 8
  %327 = icmp eq i32 %304, %326
  br i1 %327, label %337, label %328, !prof !2

328:                                              ; preds = %325
  %329 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %294, align 8
  %330 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %303, i64 %305, i32 0
  store %"class.blink::InvalidationSet"* %329, %"class.blink::InvalidationSet"** %330, align 8
  %331 = icmp eq %"class.blink::InvalidationSet"* %329, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %329, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %333) #8
  br label %334

334:                                              ; preds = %332, %328
  %335 = load i32, i32* %290, align 4
  %336 = add i32 %335, 1
  store i32 %336, i32* %290, align 4
  br label %338

337:                                              ; preds = %325
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"* %288, %class.scoped_refptr* dereferenceable(8) %293) #8
  br label %338

338:                                              ; preds = %318, %297, %337, %334
  %339 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %293, i64 1
  %340 = icmp eq %class.scoped_refptr* %339, %285
  br i1 %340, label %341, label %292

341:                                              ; preds = %338, %279, %278, %198
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.blink::NodeInvalidationSets"* @_ZN5blink20PendingInvalidations26EnsurePendingInvalidationsERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ContainerNode"*, align 8
  %4 = alloca %"class.blink::NodeInvalidationSets", align 8
  %5 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %5, %"class.blink::ContainerNode"* %1) #8
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %15, label %84

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::ContainerNode"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %3, align 8
  %17 = bitcast %"class.blink::NodeInvalidationSets"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  %18 = bitcast %"class.blink::NodeInvalidationSets"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false)
  %19 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.blink::ContainerNode"** nonnull dereferenceable(8) %3, %"class.blink::NodeInvalidationSets"* nonnull dereferenceable(32) %4) #8
  %20 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %19, 0
  %21 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %4, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = icmp eq %class.scoped_refptr* %23, null
  br i1 %24, label %52, label %25, !prof !3

25:                                               ; preds = %15
  %26 = bitcast %class.scoped_refptr* %23 to i8*
  %27 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %50, label %30, !prof !2

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %31
  br label %33

33:                                               ; preds = %44, %30
  %34 = phi %class.scoped_refptr* [ %45, %44 ], [ %23, %30 ]
  %35 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %34, i64 0, i32 0
  %36 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %35, align 8
  %37 = icmp eq %"class.blink::InvalidationSet"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %36, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #8
  %40 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %36) #8
  br label %44

44:                                               ; preds = %43, %38, %33
  %45 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %34, i64 1
  %46 = icmp eq %class.scoped_refptr* %45, %32
  br i1 %46, label %47, label %33

47:                                               ; preds = %44
  store i32 0, i32* %27, align 4
  %48 = bitcast %"class.WTF::Vector"* %21 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %25
  %51 = phi i8* [ %49, %47 ], [ %26, %25 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %22, align 8
  br label %52

52:                                               ; preds = %50, %15
  %53 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %class.scoped_refptr*, %class.scoped_refptr** %53, align 8
  %55 = icmp eq %class.scoped_refptr* %54, null
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %52
  %57 = bitcast %class.scoped_refptr* %54 to i8*
  %58 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %81, label %61, !prof !2

61:                                               ; preds = %56
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %54, i64 %62
  br label %64

64:                                               ; preds = %75, %61
  %65 = phi %class.scoped_refptr* [ %76, %75 ], [ %54, %61 ]
  %66 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 0, i32 0
  %67 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %66, align 8
  %68 = icmp eq %"class.blink::InvalidationSet"* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %67, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #8
  %71 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %67) #8
  br label %75

75:                                               ; preds = %74, %69, %64
  %76 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 1
  %77 = icmp eq %class.scoped_refptr* %76, %63
  br i1 %77, label %78, label %64

78:                                               ; preds = %75
  store i32 0, i32* %58, align 4
  %79 = bitcast %"class.blink::NodeInvalidationSets"* %4 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %56
  %82 = phi i8* [ %80, %78 ], [ %57, %56 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %53, align 8
  br label %83

83:                                               ; preds = %52, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %84

84:                                               ; preds = %2, %83
  %85 = phi %"struct.WTF::KeyValuePair"* [ %20, %83 ], [ %7, %2 ]
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  ret %"class.blink::NodeInvalidationSets"* %86
}

declare void @_ZN5blink4Node25SetNeedsStyleInvalidationEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PendingInvalidations41ScheduleSiblingInvalidationsAsDescendantsERKNS_17InvalidationListsERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"*, %"struct.blink::InvalidationLists"* nocapture readonly dereferenceable(32), %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DescendantInvalidationSet"*, align 8
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %6 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %173, label %9

9:                                                ; preds = %3
  %10 = tail call dereferenceable(32) %"class.blink::NodeInvalidationSets"* @_ZN5blink20PendingInvalidations26EnsurePendingInvalidationsERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %2)
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0
  tail call void @_ZN5blink4Node25SetNeedsStyleInvalidationEv(%"class.blink::Node"* %11) #8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp ne i32 %14, 0
  %16 = bitcast %"class.blink::ContainerNode"* %2 to %"class.blink::Element"*
  %17 = icmp eq %"class.blink::ContainerNode"* %2, null
  %18 = or i1 %17, %15
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.blink::Node"** %19 to %"class.blink::Element"**
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %20, align 8
  %22 = select i1 %18, %"class.blink::Element"* %21, %"class.blink::Element"* %16
  %23 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = load i32, i32* %6, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %173, label %29

29:                                               ; preds = %9
  %30 = bitcast %"class.blink::DescendantInvalidationSet"** %4 to i8*
  %31 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %10, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %29, %170
  %36 = phi %class.scoped_refptr* [ %24, %29 ], [ %171, %170 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  store %"class.blink::DescendantInvalidationSet"* inttoptr (i64 -6148914691236517206 to %"class.blink::DescendantInvalidationSet"*), %"class.blink::DescendantInvalidationSet"** %4, align 8
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 0, i32 0
  %38 = bitcast %class.scoped_refptr* %36 to %"class.blink::SiblingInvalidationSet"**
  %39 = load %"class.blink::SiblingInvalidationSet"*, %"class.blink::SiblingInvalidationSet"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %39, i64 0, i32 2, i32 0
  %41 = load %"class.blink::DescendantInvalidationSet"*, %"class.blink::DescendantInvalidationSet"** %40, align 8
  store %"class.blink::DescendantInvalidationSet"* %41, %"class.blink::DescendantInvalidationSet"** %4, align 8
  %42 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %37, align 8
  %43 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %42, i64 0, i32 6, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %35
  %48 = icmp eq %"class.blink::DescendantInvalidationSet"* %41, null
  br i1 %48, label %96, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.blink::DescendantInvalidationSet", %"class.blink::DescendantInvalidationSet"* %41, i64 0, i32 0, i32 6, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = and i8 %51, 2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %96, label %54

54:                                               ; preds = %49, %35
  %55 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %22, i64 0, i32 0, i32 0
  %56 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #8
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #8
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  call void @llvm.trap() #8
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %54, %61, %76
  %79 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleInvalidatorE, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %80, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %55, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #8
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %169, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %169

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #8
  br label %169

96:                                               ; preds = %49, %47
  %97 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %42, i64 0, i32 8
  %98 = load i8, i8* %97, align 2
  %99 = and i8 %98, 4
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %96
  %102 = load %class.scoped_refptr*, %class.scoped_refptr** %32, align 8
  %103 = load i32, i32* %33, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 %104
  %106 = icmp eq i32 %103, 0
  br i1 %106, label %122, label %107

107:                                              ; preds = %101, %112
  %108 = phi %class.scoped_refptr* [ %113, %112 ], [ %102, %101 ]
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 0, i32 0
  %110 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %109, align 8
  %111 = icmp eq %"class.blink::InvalidationSet"* %110, %42
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 1
  %114 = icmp ult %class.scoped_refptr* %113, %105
  br i1 %114, label %107, label %122

115:                                              ; preds = %107
  %116 = ptrtoint %class.scoped_refptr* %108 to i64
  %117 = ptrtoint %class.scoped_refptr* %102 to i64
  %118 = sub i64 %116, %117
  %119 = lshr exact i64 %118, 3
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %134

122:                                              ; preds = %112, %115, %101
  %123 = load i32, i32* %34, align 8
  %124 = icmp eq i32 %103, %123
  br i1 %124, label %133, label %125, !prof !2

125:                                              ; preds = %122
  %126 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 %104, i32 0
  store %"class.blink::InvalidationSet"* %42, %"class.blink::InvalidationSet"** %126, align 8
  %127 = icmp eq %"class.blink::InvalidationSet"* %42, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %129) #8
  br label %130

130:                                              ; preds = %128, %125
  %131 = load i32, i32* %33, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %33, align 4
  br label %134

133:                                              ; preds = %122
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"* %31, %class.scoped_refptr* dereferenceable(8) %36) #8
  br label %134

134:                                              ; preds = %115, %96, %133, %130
  %135 = load %"class.blink::DescendantInvalidationSet"*, %"class.blink::DescendantInvalidationSet"** %4, align 8
  %136 = icmp eq %"class.blink::DescendantInvalidationSet"* %135, null
  %137 = bitcast %"class.blink::DescendantInvalidationSet"* %135 to %"class.blink::InvalidationSet"*
  br i1 %136, label %170, label %138

138:                                              ; preds = %134
  %139 = load %class.scoped_refptr*, %class.scoped_refptr** %32, align 8
  %140 = load i32, i32* %33, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %139, i64 %141
  %143 = icmp eq i32 %140, 0
  br i1 %143, label %159, label %144

144:                                              ; preds = %138, %149
  %145 = phi %class.scoped_refptr* [ %150, %149 ], [ %139, %138 ]
  %146 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %145, i64 0, i32 0
  %147 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %146, align 8
  %148 = icmp eq %"class.blink::InvalidationSet"* %147, %137
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %145, i64 1
  %151 = icmp ult %class.scoped_refptr* %150, %142
  br i1 %151, label %144, label %159

152:                                              ; preds = %144
  %153 = ptrtoint %class.scoped_refptr* %145 to i64
  %154 = ptrtoint %class.scoped_refptr* %139 to i64
  %155 = sub i64 %153, %154
  %156 = lshr exact i64 %155, 3
  %157 = trunc i64 %156 to i32
  %158 = icmp eq i32 %157, -1
  br i1 %158, label %159, label %170

159:                                              ; preds = %149, %152, %138
  %160 = load i32, i32* %34, align 8
  %161 = icmp eq i32 %140, %160
  br i1 %161, label %168, label %162, !prof !2

162:                                              ; preds = %159
  %163 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %139, i64 %141, i32 0
  %164 = bitcast %"class.blink::InvalidationSet"** %163 to %"class.blink::DescendantInvalidationSet"**
  store %"class.blink::DescendantInvalidationSet"* %135, %"class.blink::DescendantInvalidationSet"** %164, align 8
  %165 = getelementptr inbounds %"class.blink::DescendantInvalidationSet", %"class.blink::DescendantInvalidationSet"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #8
  %166 = load i32, i32* %33, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %33, align 4
  br label %170

168:                                              ; preds = %159
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS2_25DescendantInvalidationSetEEEvOT_(%"class.WTF::Vector"* %31, %"class.blink::DescendantInvalidationSet"** nonnull dereferenceable(8) %4) #8
  br label %170

169:                                              ; preds = %95, %92, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  br label %173

170:                                              ; preds = %152, %134, %162, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %171 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 1
  %172 = icmp eq %class.scoped_refptr* %171, %27
  br i1 %172, label %173, label %35

173:                                              ; preds = %170, %9, %169, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PendingInvalidations43RescheduleSiblingInvalidationsAsDescendantsERNS_7ElementE(%"class.blink::PendingInvalidations"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::InvalidationLists", align 8
  %4 = alloca %"class.blink::DescendantInvalidationSet"*, align 8
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #8
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 0, i32 0
  %13 = icmp eq %"class.blink::Node"* %12, %7
  br i1 %13, label %146, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %16, %"class.blink::ContainerNode"* %15) #8
  %18 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %17, 0
  %19 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %23
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %18, %24
  br i1 %25, label %146, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %146, label %30

30:                                               ; preds = %26
  %31 = bitcast %"struct.blink::InvalidationLists"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 32, i1 false) #8
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %39 = zext i32 %28 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %38, i64 %39
  %41 = bitcast %"class.blink::DescendantInvalidationSet"** %4 to i8*
  br label %103

42:                                               ; preds = %140
  call void @_ZN5blink20PendingInvalidations31ScheduleInvalidationSetsForNodeERKNS_17InvalidationListsERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"* %0, %"struct.blink::InvalidationLists"* nonnull dereferenceable(32) %3, %"class.blink::ContainerNode"* dereferenceable(80) %6)
  %43 = getelementptr inbounds %"struct.blink::InvalidationLists", %"struct.blink::InvalidationLists"* %3, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr*, %class.scoped_refptr** %44, align 8
  %46 = icmp eq %class.scoped_refptr* %45, null
  br i1 %46, label %73, label %47, !prof !3

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr* %45 to i8*
  %49 = load i32, i32* %36, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %71, label %51, !prof !2

51:                                               ; preds = %47
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %45, i64 %52
  br label %54

54:                                               ; preds = %65, %51
  %55 = phi %class.scoped_refptr* [ %66, %65 ], [ %45, %51 ]
  %56 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 0, i32 0
  %57 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %56, align 8
  %58 = icmp eq %"class.blink::InvalidationSet"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %57, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #8
  %61 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %57) #8
  br label %65

65:                                               ; preds = %64, %59, %54
  %66 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 1
  %67 = icmp eq %class.scoped_refptr* %66, %53
  br i1 %67, label %68, label %54

68:                                               ; preds = %65
  store i32 0, i32* %36, align 4
  %69 = bitcast %"class.WTF::Vector"* %43 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %47
  %72 = phi i8* [ %70, %68 ], [ %48, %47 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %44, align 8
  br label %73

73:                                               ; preds = %71, %42
  %74 = load %class.scoped_refptr*, %class.scoped_refptr** %33, align 8
  %75 = icmp eq %class.scoped_refptr* %74, null
  br i1 %75, label %102, label %76, !prof !3

76:                                               ; preds = %73
  %77 = bitcast %class.scoped_refptr* %74 to i8*
  %78 = load i32, i32* %35, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %100, label %80, !prof !2

80:                                               ; preds = %76
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %74, i64 %81
  br label %83

83:                                               ; preds = %94, %80
  %84 = phi %class.scoped_refptr* [ %95, %94 ], [ %74, %80 ]
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 0, i32 0
  %86 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %85, align 8
  %87 = icmp eq %"class.blink::InvalidationSet"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %86, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #8
  %90 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %88
  call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %86) #8
  br label %94

94:                                               ; preds = %93, %88, %83
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 1
  %96 = icmp eq %class.scoped_refptr* %95, %82
  br i1 %96, label %97, label %83

97:                                               ; preds = %94
  store i32 0, i32* %35, align 4
  %98 = bitcast %"struct.blink::InvalidationLists"* %3 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %76
  %101 = phi i8* [ %99, %97 ], [ %77, %76 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %101) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %33, align 8
  br label %102

102:                                              ; preds = %73, %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #8
  br label %146

103:                                              ; preds = %143, %30
  %104 = phi i32 [ 0, %30 ], [ %145, %143 ]
  %105 = phi i32 [ 0, %30 ], [ %144, %143 ]
  %106 = phi %class.scoped_refptr* [ %38, %30 ], [ %141, %143 ]
  %107 = icmp eq i32 %105, %104
  br i1 %107, label %120, label %108, !prof !2

108:                                              ; preds = %103
  %109 = load %class.scoped_refptr*, %class.scoped_refptr** %33, align 8
  %110 = zext i32 %105 to i64
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %106, i64 0, i32 0
  %112 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %111, align 8
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %109, i64 %110, i32 0
  store %"class.blink::InvalidationSet"* %112, %"class.blink::InvalidationSet"** %113, align 8
  %114 = icmp eq %"class.blink::InvalidationSet"* %112, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %112, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %116) #8
  br label %117

117:                                              ; preds = %115, %108
  %118 = load i32, i32* %35, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %35, align 4
  br label %121

120:                                              ; preds = %103
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"* nonnull %32, %class.scoped_refptr* dereferenceable(8) %106) #8
  br label %121

121:                                              ; preds = %117, %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  store %"class.blink::DescendantInvalidationSet"* inttoptr (i64 -6148914691236517206 to %"class.blink::DescendantInvalidationSet"*), %"class.blink::DescendantInvalidationSet"** %4, align 8
  %122 = bitcast %class.scoped_refptr* %106 to %"class.blink::SiblingInvalidationSet"**
  %123 = load %"class.blink::SiblingInvalidationSet"*, %"class.blink::SiblingInvalidationSet"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %123, i64 0, i32 2, i32 0
  %125 = load %"class.blink::DescendantInvalidationSet"*, %"class.blink::DescendantInvalidationSet"** %124, align 8
  store %"class.blink::DescendantInvalidationSet"* %125, %"class.blink::DescendantInvalidationSet"** %4, align 8
  %126 = icmp eq %"class.blink::DescendantInvalidationSet"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %121
  %128 = load i32, i32* %35, align 4
  %129 = load i32, i32* %34, align 8
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %139, label %131, !prof !2

131:                                              ; preds = %127
  %132 = load %class.scoped_refptr*, %class.scoped_refptr** %33, align 8
  %133 = zext i32 %128 to i64
  %134 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %132, i64 %133, i32 0
  %135 = bitcast %"class.blink::InvalidationSet"** %134 to %"class.blink::DescendantInvalidationSet"**
  store %"class.blink::DescendantInvalidationSet"* %125, %"class.blink::DescendantInvalidationSet"** %135, align 8
  %136 = getelementptr inbounds %"class.blink::DescendantInvalidationSet", %"class.blink::DescendantInvalidationSet"* %125, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %136) #8
  %137 = load i32, i32* %35, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %35, align 4
  br label %140

139:                                              ; preds = %127
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS2_25DescendantInvalidationSetEEEvOT_(%"class.WTF::Vector"* nonnull %32, %"class.blink::DescendantInvalidationSet"** nonnull dereferenceable(8) %4) #8
  br label %140

140:                                              ; preds = %139, %131, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  %141 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %106, i64 1
  %142 = icmp eq %class.scoped_refptr* %141, %40
  br i1 %142, label %42, label %143

143:                                              ; preds = %140
  %144 = load i32, i32* %35, align 4
  %145 = load i32, i32* %34, align 8
  br label %103

146:                                              ; preds = %102, %26, %14, %2
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PendingInvalidations17ClearInvalidationERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PendingInvalidations", %"class.blink::PendingInvalidations"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %3, %"class.blink::ContainerNode"* %1) #8
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %4, 0
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %4, 1
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS4_S7_S8_SA_SF_SD_SG_EE(%"class.WTF::HashTable"* %3, %"struct.WTF::KeyValuePair"* %5, %"struct.WTF::KeyValuePair"* %6) #8
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -8193
  store i32 %9, i32* %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %5 = icmp eq %class.scoped_refptr* %4, null
  br i1 %5, label %33, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 %12
  br label %14

14:                                               ; preds = %25, %11
  %15 = phi %class.scoped_refptr* [ %26, %25 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %17 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %16, align 8
  %18 = icmp eq %"class.blink::InvalidationSet"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #8
  %21 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %17) #8
  br label %25

25:                                               ; preds = %24, %19, %14
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 1
  %27 = icmp eq %class.scoped_refptr* %26, %13
  br i1 %27, label %28, label %14

28:                                               ; preds = %25
  store i32 0, i32* %8, align 4
  %29 = bitcast %"class.WTF::Vector"* %2 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %6
  %32 = phi i8* [ %30, %28 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %3, align 8
  br label %33

33:                                               ; preds = %1, %31
  %34 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.scoped_refptr*, %class.scoped_refptr** %34, align 8
  %36 = icmp eq %class.scoped_refptr* %35, null
  br i1 %36, label %64, label %37, !prof !3

37:                                               ; preds = %33
  %38 = bitcast %class.scoped_refptr* %35 to i8*
  %39 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %62, label %42, !prof !2

42:                                               ; preds = %37
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 %43
  br label %45

45:                                               ; preds = %56, %42
  %46 = phi %class.scoped_refptr* [ %57, %56 ], [ %35, %42 ]
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 0, i32 0
  %48 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %47, align 8
  %49 = icmp eq %"class.blink::InvalidationSet"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %48, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #8
  %52 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  tail call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %48) #8
  br label %56

56:                                               ; preds = %55, %50, %45
  %57 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 1
  %58 = icmp eq %class.scoped_refptr* %57, %44
  br i1 %58, label %59, label %45

59:                                               ; preds = %56
  store i32 0, i32* %39, align 4
  %60 = bitcast %"class.blink::NodeInvalidationSets"* %0 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %37
  %63 = phi i8* [ %61, %59 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %34, align 8
  br label %64

64:                                               ; preds = %33, %62
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15InvalidationSet16HasEmptyBackingsEv(%"class.blink::InvalidationSet"*) local_unnamed_addr #1

declare void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = icmp ugt %class.scoped_refptr* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15InvalidationSetEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15InvalidationSetEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr* %1 to i64
  %56 = ptrtoint %class.scoped_refptr* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15InvalidationSetEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15InvalidationSetEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 0, i32 0
  %105 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %104, align 8
  %106 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %100, i64 %103, i32 0
  store %"class.blink::InvalidationSet"* %105, %"class.blink::InvalidationSet"** %106, align 8
  %107 = icmp eq %"class.blink::InvalidationSet"* %105, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %105, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %109) #8
  br label %110

110:                                              ; preds = %99, %108
  %111 = load i32, i32* %3, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %3, align 4
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15InvalidationSetEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink15InvalidationSetEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS2_25DescendantInvalidationSetEEEvOT_(%"class.WTF::Vector"*, %"class.blink::DescendantInvalidationSet"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15InvalidationSetEEEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15InvalidationSetEEEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #8
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.blink::DescendantInvalidationSet"** %1 to %"class.blink::InvalidationSet"**
  %50 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %49, align 8
  %51 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48, i32 0
  store %"class.blink::InvalidationSet"* %50, %"class.blink::InvalidationSet"** %51, align 8
  %52 = icmp eq %"class.blink::InvalidationSet"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #8
  br label %55

55:                                               ; preds = %45, %53
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::ContainerNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ContainerNode"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %34, align 8
  %36 = icmp eq %"class.blink::ContainerNode"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %54, align 8
  %56 = icmp eq %"class.blink::ContainerNode"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %63, align 8
  %65 = icmp eq %"class.blink::ContainerNode"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS4_S7_S8_SA_SF_SD_SG_EE(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, %1
  br i1 %10, label %55, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  tail call void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"* %12) #8
  %13 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store atomic i64 -1, i64* %13 monotonic, align 8
  %14 = bitcast %"class.blink::NodeInvalidationSets"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 32, i1 false) #8
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  %18 = and i32 %17, 2147483647
  %19 = and i32 %16, -2147483648
  %20 = or i32 %18, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = mul i32 %23, 6
  %25 = load i32, i32* %6, align 8
  %26 = icmp ult i32 %24, %25
  %27 = icmp ugt i32 %25, 8
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %55

29:                                               ; preds = %11
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #8
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 6
  %41 = load i8, i8* %40, align 8, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 16
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %55, label %47

47:                                               ; preds = %36, %43
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 13
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = load i32, i32* %6, align 8
  %53 = lshr i32 %52, 1
  %54 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable"* %0, i32 %53, %"struct.WTF::KeyValuePair"* null) #8
  br label %55

55:                                               ; preds = %43, %11, %51, %47, %3
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %9 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable"* %0, i32 %1, %"struct.WTF::KeyValuePair"* %2, i8* nonnull dereferenceable(1) %4)
  %10 = load i8, i8* %4, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %11, label %12, label %32

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %13) #8
  %15 = bitcast %"class.blink::HeapHashTableBacking"* %14 to %"struct.WTF::KeyValuePair"*
  br label %21

16:                                               ; preds = %3
  %17 = zext i32 %1 to i64
  %18 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %17) #8
  %19 = bitcast %"class.blink::HeapHashTableBacking"* %18 to %"struct.WTF::KeyValuePair"*
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %12, %16
  %22 = phi %"struct.WTF::KeyValuePair"* [ %15, %12 ], [ %19, %16 ]
  %23 = phi i64 [ %13, %12 ], [ %17, %16 ]
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %26) #8
  %27 = add nuw nsw i64 %25, 1
  %28 = icmp eq i64 %27, %23
  br i1 %28, label %29, label %24

29:                                               ; preds = %24, %16
  %30 = phi %"struct.WTF::KeyValuePair"* [ %19, %16 ], [ %22, %24 ]
  %31 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %1, %"struct.WTF::KeyValuePair"* %2)
  br label %32

32:                                               ; preds = %8, %29
  %33 = phi %"struct.WTF::KeyValuePair"* [ %31, %29 ], [ %9, %8 ]
  ret %"struct.WTF::KeyValuePair"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %87, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = mul nuw nsw i64 %35, 40
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %87

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %50, %47 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %49) #8
  %50 = add nuw nsw i64 %48, 1
  %51 = icmp eq i64 %50, %43
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  br i1 %46, label %53, label %63

53:                                               ; preds = %77, %39, %52
  %54 = phi %"struct.WTF::KeyValuePair"* [ null, %52 ], [ null, %39 ], [ %70, %77 ]
  %55 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %55, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #8
  br label %61

61:                                               ; preds = %53, %58
  %62 = icmp eq i32 %1, 0
  br i1 %62, label %80, label %82

63:                                               ; preds = %52, %77
  %64 = phi i64 [ %78, %77 ], [ 0, %52 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %70, %77 ], [ null, %52 ]
  %66 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 %64
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, %2
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %64
  %70 = select i1 %68, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %65
  %71 = bitcast %"struct.WTF::KeyValuePair"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %74 [
    i64 -1, label %73
    i64 0, label %73
  ]

73:                                               ; preds = %63, %63
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %69) #8
  br label %77

74:                                               ; preds = %63
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %67, %"struct.WTF::KeyValuePair"* dereferenceable(40) %69)
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %64, i32 1
  call void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"* %76) #8
  br label %77

77:                                               ; preds = %73, %74
  %78 = add nuw nsw i64 %64, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %53, label %63

80:                                               ; preds = %82, %61
  %81 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %54)
  br label %87

82:                                               ; preds = %61, %82
  %83 = phi i64 [ %85, %82 ], [ 0, %61 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %83
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %84) #8
  %85 = add nuw nsw i64 %83, 1
  %86 = icmp eq i64 %85, %35
  br i1 %86, label %80, label %82

87:                                               ; preds = %34, %30, %80
  %88 = phi %"struct.WTF::KeyValuePair"* [ %81, %80 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %73

21:                                               ; preds = %91
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %92, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %94, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #8
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %67, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %64, %54
  %57 = phi i64 [ 0, %54 ], [ %65, %64 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %61 [
    i64 -1, label %64
    i64 0, label %64
  ]

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1
  call void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"* %62) #8
  store atomic i64 -1, i64* %59 monotonic, align 8
  %63 = bitcast %"class.blink::NodeInvalidationSets"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %63, i8 0, i64 32, i1 false) #8
  br label %64

64:                                               ; preds = %61, %56, %56
  %65 = add nuw nsw i64 %57, 1
  %66 = icmp eq i64 %65, %55
  br i1 %66, label %67, label %56

67:                                               ; preds = %64, %52
  %68 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %68) #8
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %69

69:                                               ; preds = %49, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %29

73:                                               ; preds = %18, %91
  %74 = phi i32 [ %13, %18 ], [ %92, %91 ]
  %75 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %93, %91 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %94, %91 ]
  %77 = phi i32 [ 0, %18 ], [ %95, %91 ]
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %78
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %91
    i64 0, label %91
  ]

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %83) #8
  %85 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %79, %"struct.WTF::KeyValuePair"* dereferenceable(40) %85) #8
  %86 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 %78
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, %3
  %89 = select i1 %88, %"struct.WTF::KeyValuePair"* %85, %"struct.WTF::KeyValuePair"* %76
  %90 = load i32, i32* %12, align 8
  br label %91

91:                                               ; preds = %73, %73, %82
  %92 = phi i32 [ %74, %73 ], [ %90, %82 ], [ %74, %73 ]
  %93 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %86, %82 ], [ %75, %73 ]
  %94 = phi %"struct.WTF::KeyValuePair"* [ %76, %73 ], [ %89, %82 ], [ %76, %73 ]
  %95 = add i32 %77, 1
  %96 = icmp eq i32 %95, %92
  br i1 %96, label %21, label %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_(%"struct.WTF::KeyValuePair"* dereferenceable(40), %"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  tail call void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"* %16) #8
  %17 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = bitcast %"class.blink::NodeInvalidationSets"* %20 to i64*
  %24 = bitcast %"class.blink::NodeInvalidationSets"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #8
  %25 = load i64, i64* %23, align 8
  %26 = bitcast %"class.blink::NodeInvalidationSets"* %16 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %21, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %21, align 4
  store i32 %28, i32* %27, align 4
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %22, align 4
  %32 = load i32, i32* %30, align 4
  store i32 %32, i32* %22, align 4
  store i32 %31, i32* %30, align 4
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %37 = bitcast %"class.WTF::Vector"* %34 to i64*
  %38 = bitcast %"class.WTF::Vector"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #8
  %39 = load i64, i64* %37, align 8
  %40 = bitcast %"class.WTF::Vector"* %33 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %42 = load i32, i32* %35, align 4
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %35, align 4
  store i32 %42, i32* %41, align 4
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %45 = load i32, i32* %36, align 4
  %46 = load i32, i32* %44, align 4
  store i32 %46, i32* %36, align 4
  store i32 %45, i32* %44, align 4
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %9
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #8
  br label %53

53:                                               ; preds = %9, %51
  %54 = phi i8* [ %52, %51 ], [ %49, %9 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 14
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %57, align 8
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair", align 8
  %3 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  %4 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.blink::NodeInvalidationSets"* %5 to i64*
  %9 = bitcast %"struct.WTF::KeyValuePair"* %2 to i64*
  store i64 0, i64* %9, align 8
  store atomic i64 0, i64* %8 monotonic, align 8, !alias.scope !5
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %13 = bitcast %"class.WTF::Vector"* %10 to i64*
  %14 = bitcast i32* %6 to i64*
  store i64 0, i64* %14, align 8
  store atomic i64 0, i64* %13 monotonic, align 8, !alias.scope !5
  store i32 0, i32* %11, align 8, !alias.scope !5
  store i32 0, i32* %12, align 4, !alias.scope !5
  %15 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %3, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(40) %2)
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %18 = icmp eq %class.scoped_refptr* %17, null
  br i1 %18, label %45, label %19, !prof !3

19:                                               ; preds = %1
  %20 = bitcast %class.scoped_refptr* %17 to i8*
  %21 = load i32, i32* %12, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %43, label %23, !prof !2

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 %24
  br label %26

26:                                               ; preds = %37, %23
  %27 = phi %class.scoped_refptr* [ %38, %37 ], [ %17, %23 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %28, align 8
  %30 = icmp eq %"class.blink::InvalidationSet"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %29, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #8
  %33 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %29) #8
  br label %37

37:                                               ; preds = %36, %31, %26
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %39 = icmp eq %class.scoped_refptr* %38, %25
  br i1 %39, label %40, label %26

40:                                               ; preds = %37
  store i32 0, i32* %12, align 4
  %41 = bitcast %"class.WTF::Vector"* %10 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %19
  %44 = phi i8* [ %42, %40 ], [ %20, %19 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %44) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %16, align 8
  br label %45

45:                                               ; preds = %43, %1
  %46 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %class.scoped_refptr*, %class.scoped_refptr** %46, align 8
  %48 = icmp eq %class.scoped_refptr* %47, null
  br i1 %48, label %75, label %49, !prof !3

49:                                               ; preds = %45
  %50 = bitcast %class.scoped_refptr* %47 to i8*
  %51 = load i32, i32* %7, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %73, label %53, !prof !2

53:                                               ; preds = %49
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %47, i64 %54
  br label %56

56:                                               ; preds = %67, %53
  %57 = phi %class.scoped_refptr* [ %68, %67 ], [ %47, %53 ]
  %58 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %57, i64 0, i32 0
  %59 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %58, align 8
  %60 = icmp eq %"class.blink::InvalidationSet"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %59, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #8
  %63 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %59) #8
  br label %67

67:                                               ; preds = %66, %61, %56
  %68 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %57, i64 1
  %69 = icmp eq %class.scoped_refptr* %68, %55
  br i1 %69, label %70, label %56

70:                                               ; preds = %67
  store i32 0, i32* %7, align 4
  %71 = bitcast %"class.blink::NodeInvalidationSets"* %5 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %49
  %74 = phi i8* [ %72, %70 ], [ %50, %49 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %46, align 8
  br label %75

75:                                               ; preds = %45, %73
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink6MemberINS2_13ContainerNodeEEENS2_20NodeInvalidationSetsEEENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %4 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %9 = getelementptr inbounds i8, i8* %0, i64 16
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %0, i64 20
  %12 = bitcast i8* %11 to i32*
  %13 = bitcast %"class.blink::NodeInvalidationSets"* %8 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %7 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %10, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %10, align 4
  store i32 %17, i32* %16, align 4
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %12, align 4
  %21 = load i32, i32* %19, align 4
  store i32 %21, i32* %12, align 4
  store i32 %20, i32* %19, align 4
  %22 = getelementptr inbounds i8, i8* %0, i64 24
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds i8, i8* %0, i64 32
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds i8, i8* %0, i64 36
  %27 = bitcast i8* %26 to i32*
  %28 = bitcast %"class.WTF::Vector"* %23 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #8
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %22 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %32 = load i32, i32* %25, align 4
  %33 = load i32, i32* %31, align 4
  store i32 %33, i32* %25, align 4
  store i32 %32, i32* %31, align 4
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %35 = load i32, i32* %27, align 4
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %27, align 4
  store i32 %35, i32* %34, align 4
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %72, label %39

39:                                               ; preds = %2
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #8
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 9
  %51 = load i8, i8* %50, align 1, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %72, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %54, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %57, align 8
  %59 = load atomic i64, i64* %6 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %58, i64 0, i32 0, i32 0
  %63 = inttoptr i64 %59 to i8*
  %64 = bitcast %"class.blink::MarkingVisitor"* %58 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %62, i8* nonnull %63, i8* %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #8
  %68 = load i64, i64* %54, align 8
  br label %69

69:                                               ; preds = %61, %53
  %70 = phi i64 [ %56, %53 ], [ %68, %61 ]
  %71 = add i64 %70, -1
  store i64 %71, i64* %54, align 8
  br label %72

72:                                               ; preds = %2, %46, %69
  ret %"struct.WTF::KeyValuePair"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.6, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 40
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS1_12KeyValuePairIS5_NS_20NodeInvalidationSetsEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS1_12KeyValuePairIS5_NS_20NodeInvalidationSetsEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = udiv i64 %22, 40
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp ugt i64 %22, 39
  br i1 %29, label %30, label %56

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp ult i64 %54, %23
  br i1 %55, label %32, label %56

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS3_12KeyValuePairIS7_NS_20NodeInvalidationSetsEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 40
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp ugt i64 %20, 39
  br i1 %23, label %24, label %36

24:                                               ; preds = %18, %32
  %25 = phi i64 [ %34, %32 ], [ 0, %18 ]
  %26 = phi i32 [ %33, %32 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %32
    i64 0, label %32
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 1
  tail call void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"* %31) #8
  br label %32

32:                                               ; preds = %30, %24, %24
  %33 = add i32 %26, 1
  %34 = zext i32 %33 to i64
  %35 = icmp ugt i64 %21, %34
  br i1 %35, label %24, label %36

36:                                               ; preds = %32, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13ContainerNodeEEENS2_12KeyValuePairIS6_NS_20NodeInvalidationSetsEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %34, align 8
  %36 = icmp eq %"class.blink::ContainerNode"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::ContainerNode"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::ContainerNode"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %67, align 8
  %69 = icmp eq %"class.blink::ContainerNode"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::ContainerNode"* %63, inttoptr (i64 -1 to %"class.blink::ContainerNode"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %79, align 8
  %81 = icmp eq %"class.blink::ContainerNode"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::ContainerNode"** dereferenceable(8), %"class.blink::NodeInvalidationSets"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ContainerNode"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %10
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #8
  br label %45

45:                                               ; preds = %10, %43
  %46 = phi i8* [ %44, %43 ], [ %41, %10 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %53, align 8
  %55 = icmp eq %"class.blink::ContainerNode"* %54, null
  br i1 %55, label %99, label %56

56:                                               ; preds = %45
  %57 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1, align 8
  %58 = xor i32 %36, -1
  %59 = lshr i32 %36, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %56, %78
  %72 = phi %"class.blink::ContainerNode"* [ %54, %56 ], [ %88, %78 ]
  %73 = phi %"struct.WTF::KeyValuePair"* [ %52, %56 ], [ %86, %78 ]
  %74 = phi %"struct.WTF::KeyValuePair"* [ null, %56 ], [ %81, %78 ]
  %75 = phi i64 [ %38, %56 ], [ %85, %78 ]
  %76 = phi i64 [ 0, %56 ], [ %83, %78 ]
  %77 = icmp eq %"class.blink::ContainerNode"* %72, %57
  br i1 %77, label %184, label %78

78:                                               ; preds = %71
  %79 = icmp eq %"class.blink::ContainerNode"* %72, inttoptr (i64 -1 to %"class.blink::ContainerNode"*)
  %80 = select i1 %51, %"struct.WTF::KeyValuePair"* %74, %"struct.WTF::KeyValuePair"* %73
  %81 = select i1 %79, %"struct.WTF::KeyValuePair"* %80, %"struct.WTF::KeyValuePair"* %74
  %82 = icmp eq i64 %76, 0
  %83 = select i1 %82, i64 %70, i64 %76
  %84 = add i64 %83, %75
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %87, align 8
  %89 = icmp eq %"class.blink::ContainerNode"* %88, null
  br i1 %89, label %90, label %71

90:                                               ; preds = %78
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %81, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %90
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_13ContainerNodeEEEEENS4_INS5_20NodeInvalidationSetsEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair"* nonnull dereferenceable(40) %81) #8
  %93 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, 2147483647
  %96 = and i32 %95, 2147483647
  %97 = and i32 %94, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %93, align 8
  br label %99

99:                                               ; preds = %45, %90, %92
  %100 = phi %"struct.WTF::KeyValuePair"* [ %81, %92 ], [ %86, %90 ], [ %52, %45 ]
  %101 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1, align 8
  %102 = ptrtoint %"class.blink::ContainerNode"* %101 to i64
  %103 = bitcast %"struct.WTF::KeyValuePair"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::ContainerNode"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #8
  br label %109

109:                                              ; preds = %99, %106
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1
  %111 = bitcast %"class.blink::NodeInvalidationSets"* %2 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.blink::NodeInvalidationSets"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store atomic i64 %114, i64* %111 monotonic, align 8
  store atomic i64 %112, i64* %113 monotonic, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i32, i32* %115, align 4
  %118 = load i32, i32* %116, align 4
  store i32 %118, i32* %115, align 4
  store i32 %117, i32* %116, align 4
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %120 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %121 = load i32, i32* %119, align 4
  %122 = load i32, i32* %120, align 4
  store i32 %122, i32* %119, align 4
  store i32 %121, i32* %120, align 4
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1, i32 1
  %124 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %2, i64 0, i32 1
  %125 = bitcast %"class.WTF::Vector"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.WTF::Vector"* %123 to i64*
  %128 = load i64, i64* %127, align 8
  store atomic i64 %128, i64* %125 monotonic, align 8
  store atomic i64 %126, i64* %127 monotonic, align 8
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %130 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %131 = load i32, i32* %129, align 4
  %132 = load i32, i32* %130, align 4
  store i32 %132, i32* %129, align 4
  store i32 %131, i32* %130, align 4
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %134 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %135 = load i32, i32* %133, align 4
  %136 = load i32, i32* %134, align 4
  store i32 %136, i32* %133, align 4
  store i32 %135, i32* %134, align 4
  %137 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %172, label %139

139:                                              ; preds = %109
  %140 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %141 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %140, i64 0, i32 1
  %142 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %141) #8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %146, !prof !2

144:                                              ; preds = %139
  %145 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %141, i8* %145) #8
  br label %146

146:                                              ; preds = %144, %139
  %147 = phi i8* [ %145, %144 ], [ %142, %139 ]
  %148 = bitcast i8* %147 to %"class.blink::ThreadState"**
  %149 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 9
  %151 = load i8, i8* %150, align 1, !range !4
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %172, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 13
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %158 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %157, align 8
  %159 = load atomic i64, i64* %103 monotonic, align 8
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %169, label %161

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %158, i64 0, i32 0, i32 0
  %163 = inttoptr i64 %159 to i8*
  %164 = bitcast %"class.blink::MarkingVisitor"* %158 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %165 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %165, i64 5
  %167 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %166, align 8
  tail call void %167(%"class.blink::Visitor"* %162, i8* nonnull %163, i8* %163, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #8
  %168 = load i64, i64* %154, align 8
  br label %169

169:                                              ; preds = %161, %153
  %170 = phi i64 [ %156, %153 ], [ %168, %161 ]
  %171 = add i64 %170, -1
  store i64 %171, i64* %154, align 8
  br label %172

172:                                              ; preds = %109, %146, %169
  %173 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = add i32 %174, 1
  store i32 %175, i32* %173, align 4
  %176 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %177 = load i32, i32* %176, align 8
  %178 = add i32 %177, %175
  %179 = shl i32 %178, 1
  %180 = load i32, i32* %12, align 8
  %181 = icmp ult i32 %179, %180
  br i1 %181, label %184, label %182

182:                                              ; preds = %172
  %183 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %100)
  br label %184

184:                                              ; preds = %71, %172, %182
  %185 = phi i8 [ 1, %172 ], [ 1, %182 ], [ 0, %71 ]
  %186 = phi %"struct.WTF::KeyValuePair"* [ %100, %172 ], [ %183, %182 ], [ %73, %71 ]
  %187 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %186, 0
  %188 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %187, i8 %185, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable"* %0, i32 %32, %"struct.WTF::KeyValuePair"* %1)
  ret %"struct.WTF::KeyValuePair"* %33
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink6MemberINS2_13ContainerNodeEEEEENS1_INS2_20NodeInvalidationSetsEEEE10EmptyValueEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink6MemberINS2_13ContainerNodeEEEEENS1_INS2_20NodeInvalidationSetsEEEE10EmptyValueEv"}
