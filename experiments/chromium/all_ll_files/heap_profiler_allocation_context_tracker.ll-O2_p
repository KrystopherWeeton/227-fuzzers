; ModuleID = '../../base/trace_event/heap_profiler_allocation_context_tracker.cc'
source_filename = "../../base/trace_event/heap_profiler_allocation_context_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.base::trace_event::AllocationContextTracker" = type <{ %"class.std::__1::vector", i8*, %"class.std::__1::vector.1", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"*, %"class.std::__1::__compressed_pair" }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.base::trace_event::StackFrame"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8** }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::trace_event::AllocationContext" = type { %"struct.base::trace_event::Backtrace", i8* }
%"struct.base::trace_event::Backtrace" = type { [48 x %"struct.base::trace_event::StackFrame"], i64 }

@_ZN4base11trace_event24AllocationContextTracker13capture_mode_E = hidden local_unnamed_addr global { { i32 } } zeroinitializer, align 4
@.str = private unnamed_addr constant [14 x i8] c"UntrackedTask\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"<truncated>\00", align 1
@_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker = internal global %"class.base::NoDestructor" zeroinitializer, align 4
@_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1

@_ZN4base11trace_event24AllocationContextTrackerC1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::AllocationContextTracker"*), void (%"class.base::trace_event::AllocationContextTracker"*)* @_ZN4base11trace_event24AllocationContextTrackerC2Ev
@_ZN4base11trace_event24AllocationContextTrackerD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::AllocationContextTracker"*), void (%"class.base::trace_event::AllocationContextTracker"*)* @_ZN4base11trace_event24AllocationContextTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base11trace_event12_GLOBAL__N_132DestructAllocationContextTrackerEPv) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker) #11
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to %"class.base::ThreadLocalStorage::Slot"*)) #11
  %9 = icmp eq i8* %8, inttoptr (i64 -1 to i8*)
  br i1 %9, label %51, label %10

10:                                               ; preds = %7
  %11 = bitcast i8* %8 to %"class.base::trace_event::AllocationContextTracker"*
  %12 = icmp eq i8* %8, null
  br i1 %12, label %13, label %51

13:                                               ; preds = %10
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !2

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base11trace_event12_GLOBAL__N_132DestructAllocationContextTrackerEPv) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker) #11
  br label %20

20:                                               ; preds = %13, %16, %19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to %"class.base::ThreadLocalStorage::Slot"*), i8* nonnull inttoptr (i64 -1 to i8*)) #11
  %21 = tail call i8* @_Znwm(i64 64) #12
  %22 = bitcast i8* %21 to %"class.base::trace_event::AllocationContextTracker"*
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = getelementptr inbounds i8, i8* %21, i64 16
  %25 = bitcast i8* %24 to i64*
  %26 = bitcast i8* %21 to i64*
  %27 = getelementptr inbounds i8, i8* %21, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 36, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %21, i64 8
  %29 = bitcast i8* %28 to i64*
  %30 = tail call i8* @_Znwm(i64 2048) #12
  %31 = ptrtoint i8* %30 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 2048
  %33 = ptrtoint i8* %32 to i64
  store i64 %31, i64* %26, align 8
  store i64 %31, i64* %29, align 8
  store i64 %33, i64* %25, align 8
  %34 = bitcast i8* %23 to i64*
  %35 = getelementptr inbounds i8, i8* %21, i64 40
  %36 = tail call i8* @_Znwm(i64 128) #12
  %37 = ptrtoint i8* %36 to i64
  store i64 %37, i64* %34, align 8
  %38 = bitcast i8* %36 to i64*
  store i64 ptrtoint ([14 x i8]* @.str to i64), i64* %38, align 8
  %39 = insertelement <2 x i8*> undef, i8* %36, i32 0
  %40 = shufflevector <2 x i8*> %39, <2 x i8*> undef, <2 x i32> zeroinitializer
  %41 = getelementptr i8, <2 x i8*> %40, <2 x i64> <i64 8, i64 128>
  %42 = ptrtoint <2 x i8*> %41 to <2 x i64>
  %43 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %43, align 8
  %44 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to i8*) acquire, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50, !prof !2

46:                                               ; preds = %20
  %47 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %46
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base11trace_event12_GLOBAL__N_132DestructAllocationContextTrackerEPv) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker) #11
  br label %50

50:                                               ; preds = %20, %46, %49
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base11trace_event12_GLOBAL__N_127AllocationContextTrackerTLSEvE21tls_alloc_ctx_tracker to %"class.base::ThreadLocalStorage::Slot"*), i8* nonnull %21) #11
  br label %51

51:                                               ; preds = %50, %10, %7
  %52 = phi %"class.base::trace_event::AllocationContextTracker"* [ null, %7 ], [ %11, %10 ], [ %22, %50 ]
  ret %"class.base::trace_event::AllocationContextTracker"* %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTrackerC2Ev(%"class.base::trace_event::AllocationContextTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.base::trace_event::StackFrame"** %3 to i64*
  %5 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 36, i1 false)
  %7 = tail call i8* @_Znwm(i64 2048) #12
  %8 = getelementptr inbounds i8, i8* %7, i64 2048
  %9 = ptrtoint i8* %8 to i64
  %10 = insertelement <2 x i8*> undef, i8* %7, i32 0
  %11 = shufflevector <2 x i8*> %10, <2 x i8*> undef, <2 x i32> zeroinitializer
  %12 = ptrtoint <2 x i8*> %11 to <2 x i64>
  %13 = bitcast %"class.base::trace_event::AllocationContextTracker"* %0 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  store i64 %9, i64* %4, align 8
  %14 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i8*** %14 to i64*
  %16 = tail call i8* @_Znwm(i64 128) #12
  %17 = getelementptr inbounds i8, i8* %16, i64 128
  %18 = ptrtoint i8* %17 to i64
  %19 = insertelement <2 x i8*> undef, i8* %16, i32 0
  %20 = shufflevector <2 x i8*> %19, <2 x i8*> undef, <2 x i32> zeroinitializer
  %21 = ptrtoint <2 x i8*> %20 to <2 x i64>
  %22 = bitcast %"class.std::__1::vector.1"* %2 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 8
  store i64 %18, i64* %15, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i8* %16 to i64*
  store i64 ptrtoint ([14 x i8]* @.str to i64), i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %16, i64 8
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast i8*** %23 to i64*
  store i64 %26, i64* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTrackerD2Ev(%"class.base::trace_event::AllocationContextTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i8**, i8*** %2, align 8
  %4 = icmp eq i8** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8** %3 to i64
  %7 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i8*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i8** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %11, align 8
  %13 = icmp eq %"struct.base::trace_event::StackFrame"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.base::trace_event::StackFrame"* %12 to i64
  %16 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.base::trace_event::StackFrame"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.base::trace_event::StackFrame"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker20SetCurrentThreadNameEPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0) acquire, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv()
  %11 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %10, i64 0, i32 1
  store i8* %0, i8** %11, align 8
  br label %12

12:                                               ; preds = %3, %6, %1, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker14SetCaptureModeENS1_11CaptureModeE(i32) local_unnamed_addr #4 align 2 {
  store atomic i32 %0, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0) release, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker20PushPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"*, i8* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.base::trace_event::StackFrame"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::trace_event::AllocationContextTracker"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, 128
  %12 = inttoptr i64 %6 to %"struct.base::trace_event::StackFrame"*
  br i1 %11, label %13, label %71

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %14, align 8
  %16 = icmp ugt %"struct.base::trace_event::StackFrame"* %15, %12
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %12, i64 0, i32 0
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %12, i64 0, i32 1
  store i8* %2, i8** %19, align 8
  %20 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %12, i64 1
  %21 = ptrtoint %"struct.base::trace_event::StackFrame"* %20 to i64
  store i64 %21, i64* %5, align 8
  br label %71

22:                                               ; preds = %13
  %23 = ptrtoint %"struct.base::trace_event::StackFrame"* %15 to i64
  %24 = add nuw nsw i64 %10, 1
  %25 = bitcast %"struct.base::trace_event::StackFrame"** %14 to i64*
  %26 = sub i64 %23, %8
  %27 = ashr exact i64 %26, 4
  %28 = icmp ult i64 %27, 576460752303423487
  br i1 %28, label %29, label %37

29:                                               ; preds = %22
  %30 = ashr exact i64 %26, 3
  %31 = icmp ult i64 %30, %24
  %32 = select i1 %31, i64 %24, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = icmp ugt i64 %32, 1152921504606846975
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %34, %22
  %38 = phi i64 [ %32, %34 ], [ 1152921504606846975, %22 ]
  %39 = shl i64 %38, 4
  %40 = tail call i8* @_Znwm(i64 %39) #12
  %41 = bitcast i8* %40 to %"struct.base::trace_event::StackFrame"*
  br label %42

42:                                               ; preds = %37, %29
  %43 = phi i64 [ %38, %37 ], [ 0, %29 ]
  %44 = phi %"struct.base::trace_event::StackFrame"* [ %41, %37 ], [ null, %29 ]
  %45 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %44, i64 %10
  %46 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %44, i64 %43
  %47 = ptrtoint %"struct.base::trace_event::StackFrame"* %46 to i64
  %48 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %45, i64 0, i32 0
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %44, i64 %10, i32 1
  store i8* %2, i8** %49, align 8
  %50 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %45, i64 1
  %51 = ptrtoint %"struct.base::trace_event::StackFrame"* %50 to i64
  %52 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %52, align 8
  %54 = load i64, i64* %5, align 8
  %55 = ptrtoint %"struct.base::trace_event::StackFrame"* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 4
  %58 = sub nsw i64 0, %57
  %59 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %45, i64 %58
  %60 = ptrtoint %"struct.base::trace_event::StackFrame"* %59 to i64
  %61 = icmp sgt i64 %56, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %42
  %63 = bitcast %"struct.base::trace_event::StackFrame"* %59 to i8*
  %64 = bitcast %"struct.base::trace_event::StackFrame"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %56, i1 false) #11
  %65 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %52, align 8
  br label %66

66:                                               ; preds = %62, %42
  %67 = phi %"struct.base::trace_event::StackFrame"* [ %53, %42 ], [ %65, %62 ]
  store i64 %60, i64* %7, align 8
  store i64 %51, i64* %5, align 8
  store i64 %47, i64* %25, align 8
  %68 = icmp eq %"struct.base::trace_event::StackFrame"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = bitcast %"struct.base::trace_event::StackFrame"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %69, %66, %17, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker19PopPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"* nocapture, i8* nocapture readnone, i8* nocapture readnone) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %4, align 8
  %6 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %6, align 8
  %8 = icmp eq %"struct.base::trace_event::StackFrame"* %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %7, i64 -1
  store %"struct.base::trace_event::StackFrame"* %10, %"struct.base::trace_event::StackFrame"** %6, align 8
  br label %11

11:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker20PushNativeStackFrameEPKv(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.base::trace_event::StackFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::trace_event::AllocationContextTracker"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = icmp ult i64 %9, 128
  %11 = inttoptr i64 %5 to %"struct.base::trace_event::StackFrame"*
  br i1 %10, label %12, label %70

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %13, align 8
  %15 = icmp ugt %"struct.base::trace_event::StackFrame"* %14, %11
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %11, i64 0, i32 0
  store i32 2, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %11, i64 0, i32 1
  store i8* %1, i8** %18, align 8
  %19 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %11, i64 1
  %20 = ptrtoint %"struct.base::trace_event::StackFrame"* %19 to i64
  store i64 %20, i64* %4, align 8
  br label %70

21:                                               ; preds = %12
  %22 = ptrtoint %"struct.base::trace_event::StackFrame"* %14 to i64
  %23 = add nuw nsw i64 %9, 1
  %24 = bitcast %"struct.base::trace_event::StackFrame"** %13 to i64*
  %25 = sub i64 %22, %7
  %26 = ashr exact i64 %25, 4
  %27 = icmp ult i64 %26, 576460752303423487
  br i1 %27, label %28, label %36

28:                                               ; preds = %21
  %29 = ashr exact i64 %25, 3
  %30 = icmp ult i64 %29, %23
  %31 = select i1 %30, i64 %23, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = icmp ugt i64 %31, 1152921504606846975
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

36:                                               ; preds = %33, %21
  %37 = phi i64 [ %31, %33 ], [ 1152921504606846975, %21 ]
  %38 = shl i64 %37, 4
  %39 = tail call i8* @_Znwm(i64 %38) #12
  %40 = bitcast i8* %39 to %"struct.base::trace_event::StackFrame"*
  br label %41

41:                                               ; preds = %36, %28
  %42 = phi i64 [ %37, %36 ], [ 0, %28 ]
  %43 = phi %"struct.base::trace_event::StackFrame"* [ %40, %36 ], [ null, %28 ]
  %44 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %43, i64 %9
  %45 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %43, i64 %42
  %46 = ptrtoint %"struct.base::trace_event::StackFrame"* %45 to i64
  %47 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %44, i64 0, i32 0
  store i32 2, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %43, i64 %9, i32 1
  store i8* %1, i8** %48, align 8
  %49 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %44, i64 1
  %50 = ptrtoint %"struct.base::trace_event::StackFrame"* %49 to i64
  %51 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %51, align 8
  %53 = load i64, i64* %4, align 8
  %54 = ptrtoint %"struct.base::trace_event::StackFrame"* %52 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 4
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %44, i64 %57
  %59 = ptrtoint %"struct.base::trace_event::StackFrame"* %58 to i64
  %60 = icmp sgt i64 %55, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %41
  %62 = bitcast %"struct.base::trace_event::StackFrame"* %58 to i8*
  %63 = bitcast %"struct.base::trace_event::StackFrame"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 %55, i1 false) #11
  %64 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %51, align 8
  br label %65

65:                                               ; preds = %61, %41
  %66 = phi %"struct.base::trace_event::StackFrame"* [ %52, %41 ], [ %64, %61 ]
  store i64 %59, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %46, i64* %24, align 8
  %67 = icmp eq %"struct.base::trace_event::StackFrame"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = bitcast %"struct.base::trace_event::StackFrame"* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %68, %65, %16, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker19PopNativeStackFrameEPKv(%"class.base::trace_event::AllocationContextTracker"* nocapture, i8* nocapture readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %3, align 8
  %5 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %5, align 8
  %7 = icmp eq %"struct.base::trace_event::StackFrame"* %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %6, i64 -1
  store %"struct.base::trace_event::StackFrame"* %9, %"struct.base::trace_event::StackFrame"** %5, align 8
  br label %10

10:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker22PushCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i8*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, 16
  %13 = inttoptr i64 %7 to i8**
  br i1 %12, label %14, label %74

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %16 = load i8**, i8*** %15, align 8
  %17 = icmp eq i8** %16, %13
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds i8*, i8** %13, i64 1
  %21 = ptrtoint i8** %20 to i64
  store i64 %21, i64* %6, align 8
  br label %74

22:                                               ; preds = %14
  %23 = ptrtoint i8** %16 to i64
  %24 = sub i64 %23, %9
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.1"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %22
  %31 = bitcast i8*** %15 to i64*
  %32 = icmp ult i64 %25, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = ashr exact i64 %24, 2
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

41:                                               ; preds = %38, %30
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %30 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to i8**
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi i8** [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds i8*, i8** %48, i64 %25
  %50 = getelementptr inbounds i8*, i8** %48, i64 %47
  %51 = ptrtoint i8** %50 to i64
  %52 = bitcast i8** %49 to i64*
  store i64 %3, i64* %52, align 8
  %53 = getelementptr inbounds i8*, i8** %49, i64 1
  %54 = ptrtoint i8** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %56 = load i8**, i8*** %55, align 8
  %57 = load i64, i64* %6, align 8
  %58 = ptrtoint i8** %56 to i64
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 3
  %61 = sub nsw i64 0, %60
  %62 = getelementptr inbounds i8*, i8** %49, i64 %61
  %63 = ptrtoint i8** %62 to i64
  %64 = icmp sgt i64 %59, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %46
  %66 = bitcast i8** %62 to i8*
  %67 = bitcast i8** %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 %59, i1 false) #11
  %68 = load i8**, i8*** %55, align 8
  br label %69

69:                                               ; preds = %65, %46
  %70 = phi i8** [ %56, %46 ], [ %68, %65 ]
  store i64 %63, i64* %8, align 8
  store i64 %54, i64* %6, align 8
  store i64 %51, i64* %31, align 8
  %71 = icmp eq i8** %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = bitcast i8** %70 to i8*
  tail call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %72, %69, %18, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11trace_event24AllocationContextTracker21PopCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"* nocapture, i8* nocapture readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 8
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %6 to i8**
  %13 = getelementptr inbounds i8*, i8** %12, i64 -1
  store i8** %13, i8*** %4, align 8
  br label %14

14:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_event24AllocationContextTracker18GetContextSnapshotEPNS0_17AllocationContextE(%"class.base::trace_event::AllocationContextTracker"* nocapture, %"struct.base::trace_event::AllocationContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [49 x i8*], align 16
  %5 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %150

8:                                                ; preds = %2
  %9 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0) monotonic, align 4
  %10 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 48
  %12 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %8
  store i32 1, i32* %5, align 8
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 16, i1 false) #11
  %17 = call i32 (i32, ...) @prctl(i32 16, i8* nonnull %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %21 = sext i32 %20 to i64
  %22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %16, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 %21) #11
  br label %23

23:                                               ; preds = %15, %19
  %24 = call noalias i8* @strdup(i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  store i8* %24, i8** %12, align 8
  %25 = load i32, i32* %5, align 8
  %26 = add i32 %25, -1
  store i32 %26, i32* %5, align 8
  %27 = icmp eq i8* %24, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %8, %23
  %29 = phi i8* [ %24, %23 ], [ %13, %8 ]
  %30 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 1
  %31 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 0, i32 0
  store i32 1, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 0, i32 1
  store i8* %29, i8** %32, align 8
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %"struct.base::trace_event::StackFrame"* [ %30, %28 ], [ %10, %23 ]
  switch i32 %9, label %132 [
    i32 3, label %51
    i32 1, label %35
    i32 2, label %35
  ]

35:                                               ; preds = %33, %33
  %36 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %36, align 8
  %38 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %38, align 8
  %40 = icmp eq %"struct.base::trace_event::StackFrame"* %37, %39
  br i1 %40, label %132, label %41

41:                                               ; preds = %35, %41
  %42 = phi %"struct.base::trace_event::StackFrame"* [ %44, %41 ], [ %34, %35 ]
  %43 = phi %"struct.base::trace_event::StackFrame"* [ %47, %41 ], [ %37, %35 ]
  %44 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %42, i64 1
  %45 = bitcast %"struct.base::trace_event::StackFrame"* %42 to i8*
  %46 = bitcast %"struct.base::trace_event::StackFrame"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false)
  %47 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %43, i64 1
  %48 = icmp eq %"struct.base::trace_event::StackFrame"* %47, %39
  %49 = icmp eq %"struct.base::trace_event::StackFrame"* %44, %11
  %50 = or i1 %48, %49
  br i1 %50, label %132, label %41

51:                                               ; preds = %33
  %52 = bitcast [49 x i8*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %52) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %52, i8 -86, i64 392, i1 false)
  %53 = getelementptr inbounds [49 x i8*], [49 x i8*]* %4, i64 0, i64 0
  %54 = call i64 @_ZN4base5debug23TraceStackFramePointersEPPKvmmb(i8** nonnull %53, i64 49, i64 1, i1 zeroext true) #11
  %55 = ptrtoint %"struct.base::trace_event::StackFrame"* %11 to i64
  %56 = ptrtoint %"struct.base::trace_event::StackFrame"* %34 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = icmp ugt i64 %54, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %51
  %61 = add nsw i64 %58, -1
  %62 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %34, i64 1
  %63 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %34, i64 0, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %34, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8** %64, align 8
  br label %65

65:                                               ; preds = %60, %51
  %66 = phi i64 [ %61, %60 ], [ %54, %51 ]
  %67 = phi %"struct.base::trace_event::StackFrame"* [ %62, %60 ], [ %34, %51 ]
  %68 = trunc i64 %66 to i32
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %97

70:                                               ; preds = %65
  %71 = shl i64 %66, 32
  %72 = ashr exact i64 %71, 32
  %73 = shl i64 %66, 32
  %74 = ashr exact i64 %73, 32
  %75 = add nsw i64 %74, -1
  %76 = and i64 %74, 3
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %92, label %78

78:                                               ; preds = %70, %78
  %79 = phi i64 [ %82, %78 ], [ %72, %70 ]
  %80 = phi %"struct.base::trace_event::StackFrame"* [ %86, %78 ], [ %67, %70 ]
  %81 = phi i64 [ %90, %78 ], [ %76, %70 ]
  %82 = add nsw i64 %79, -1
  %83 = getelementptr inbounds [49 x i8*], [49 x i8*]* %4, i64 0, i64 %82
  %84 = bitcast i8** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %80, i64 1
  %87 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %80, i64 0, i32 0
  store i32 2, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %80, i64 0, i32 1
  %89 = bitcast i8** %88 to i64*
  store i64 %85, i64* %89, align 8
  %90 = add i64 %81, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %78, !llvm.loop !3

92:                                               ; preds = %78, %70
  %93 = phi i64 [ %72, %70 ], [ %82, %78 ]
  %94 = phi %"struct.base::trace_event::StackFrame"* [ %67, %70 ], [ %86, %78 ]
  %95 = phi %"struct.base::trace_event::StackFrame"* [ undef, %70 ], [ %86, %78 ]
  %96 = icmp ult i64 %75, 3
  br i1 %96, label %97, label %99

97:                                               ; preds = %92, %99, %65
  %98 = phi %"struct.base::trace_event::StackFrame"* [ %67, %65 ], [ %95, %92 ], [ %127, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %52) #11
  br label %132

99:                                               ; preds = %92, %99
  %100 = phi i64 [ %123, %99 ], [ %93, %92 ]
  %101 = phi %"struct.base::trace_event::StackFrame"* [ %127, %99 ], [ %94, %92 ]
  %102 = add nsw i64 %100, -1
  %103 = getelementptr inbounds [49 x i8*], [49 x i8*]* %4, i64 0, i64 %102
  %104 = bitcast i8** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 0, i32 0
  store i32 2, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 0, i32 1
  %108 = bitcast i8** %107 to i64*
  store i64 %105, i64* %108, align 8
  %109 = add nsw i64 %100, -2
  %110 = getelementptr inbounds [49 x i8*], [49 x i8*]* %4, i64 0, i64 %109
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 1, i32 0
  store i32 2, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 1, i32 1
  %115 = bitcast i8** %114 to i64*
  store i64 %112, i64* %115, align 8
  %116 = add nsw i64 %100, -3
  %117 = getelementptr inbounds [49 x i8*], [49 x i8*]* %4, i64 0, i64 %116
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 2, i32 0
  store i32 2, i32* %120, align 8
  %121 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 2, i32 1
  %122 = bitcast i8** %121 to i64*
  store i64 %119, i64* %122, align 8
  %123 = add nsw i64 %100, -4
  %124 = getelementptr inbounds [49 x i8*], [49 x i8*]* %4, i64 0, i64 %123
  %125 = bitcast i8** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 4
  %128 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 3, i32 0
  store i32 2, i32* %128, align 8
  %129 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %101, i64 3, i32 1
  %130 = bitcast i8** %129 to i64*
  store i64 %126, i64* %130, align 8
  %131 = icmp sgt i64 %123, 0
  br i1 %131, label %99, label %97

132:                                              ; preds = %41, %35, %33, %97
  %133 = phi %"struct.base::trace_event::StackFrame"* [ %34, %33 ], [ %98, %97 ], [ %34, %35 ], [ %44, %41 ]
  %134 = ptrtoint %"struct.base::trace_event::StackFrame"* %133 to i64
  %135 = ptrtoint %"struct.base::trace_event::AllocationContext"* %1 to i64
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 4
  %138 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 1
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 0
  %140 = load i8**, i8*** %139, align 8
  %141 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %142 = load i8**, i8*** %141, align 8
  %143 = icmp eq i8** %140, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %132
  %145 = getelementptr inbounds i8*, i8** %142, i64 -1
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %132, %144
  %148 = phi i8* [ %146, %144 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 1
  store i8* %148, i8** %149, align 8
  br label %150

150:                                              ; preds = %2, %147
  %151 = phi i1 [ true, %147 ], [ false, %2 ]
  ret i1 %151
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN4base5debug23TraceStackFramePointersEPPKvmmb(i8**, i64, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_132DestructAllocationContextTrackerEPv(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 32
  %5 = bitcast i8* %4 to i8***
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = ptrtoint i8** %6 to i64
  %10 = getelementptr inbounds i8, i8* %0, i64 40
  %11 = bitcast i8* %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast i8** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  br label %13

13:                                               ; preds = %8, %3
  %14 = bitcast i8* %0 to %"struct.base::trace_event::StackFrame"**
  %15 = load %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"** %14, align 8
  %16 = icmp eq %"struct.base::trace_event::StackFrame"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"struct.base::trace_event::StackFrame"* %15 to i64
  %19 = getelementptr inbounds i8, i8* %0, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.base::trace_event::StackFrame"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %13, %17
  tail call void @_ZdlPv(i8* nonnull %0) #12
  br label %23

23:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @prctl(i32, ...) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
