; ModuleID = '../../third_party/pdfium/xfa/fwl/theme/cfwl_widgettp.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/theme/cfwl_widgettp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_WidgetTP = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFDE_TextOut* }
%class.CFDE_TextOut = type { %"class.std::__1::unique_ptr.0", %"class.fxcrt::RetainPtr", float, float, float, float, i8, %struct.FDE_TextStyle, %"class.std::__1::vector.55", i32, i32, %"class.fxcrt::WideString", %class.CFX_Matrix, %"class.std::__1::deque", i32, i64, i32, %"class.std::__1::vector.89" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CFGAS_TxtBreak* }
%class.CFGAS_TxtBreak = type opaque
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { i32*, i32*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.62" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.85" }
%"struct.std::__1::__split_buffer" = type { %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.std::__1::__compressed_pair.80" }
%"class.CFDE_TextOut::Line" = type { i8, %"class.std::__1::deque.68" }
%"class.std::__1::deque.68" = type { %"class.std::__1::__deque_base.69" }
%"class.std::__1::__deque_base.69" = type { %"struct.std::__1::__split_buffer.70", i64, %"class.std::__1::__compressed_pair.76" }
%"struct.std::__1::__split_buffer.70" = type { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"class.std::__1::__compressed_pair.71" }
%"struct.CFDE_TextOut::Piece" = type <{ i64, i64, i32, %class.CFX_RectF, [4 x i8] }>
%class.CFX_RectF = type { float, float, float, float }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.CFDE_TextOut::Piece"** }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.CFDE_TextOut::Line"** }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.91" }
%class.TextCharPos = type opaque
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.TextCharPos* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type { %"class.fxcrt::Retainable", %"class.pdfium::Optional", %"class.fxcrt::RetainPtr.7", %"class.fxcrt::MaybeOwned", %"class.std::__1::unique_ptr.18", %"class.std::__1::map", %"class.std::__1::map.30", %"class.std::__1::vector", %"class.std::__1::map.44" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.12", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CFX_UnicodeEncodingEx* }
%class.CFX_UnicodeEncodingEx = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::map.30" = type { %"class.std::__1::__tree.31" }
%"class.std::__1::__tree.31" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.fxcrt::RetainPtr"* }
%"class.std::__1::map.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.CFWL_WidgetTP::CColorData"* }
%"struct.CFWL_WidgetTP::CColorData" = type { [4 x i32], [4 x i32], [4 x i32], [4 x i32] }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.112", %"class.fxcrt::UnownedPtr.120" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.105", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.106" }
%"class.fxcrt::UnownedPtr.105" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.106" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.108", %"class.cppgc::internal::BasicMember.109", %"class.cppgc::internal::BasicMember.110", %"class.cppgc::internal::BasicMember.111" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.108" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.109" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.110" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.111" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.112" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.115" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.FX_PATHPOINT* }
%"class.fxcrt::UnownedPtr.120" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.121", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.131" }
%"class.fxcrt::UnownedPtr.121" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { float*, float*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.129", %"class.fxcrt::UnownedPtr.130" }
%"class.fxcrt::UnownedPtr.129" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.130" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.std::__1::unique_ptr.133"*, %"class.std::__1::unique_ptr.133"*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::unique_ptr.133" = type opaque
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.std::__1::unique_ptr.133"* }
%class.CFWL_ThemeText = type { %class.CFWL_ThemePart, i8, %struct.FDE_TextStyle, %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.120" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.139", i64 }
%"class.fxcrt::UnownedPtr.139" = type { i32* }
%class.CFWL_FontManager = type { %"class.std::__1::vector.140" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.std::__1::unique_ptr.142"*, %"class.std::__1::unique_ptr.142"*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::unique_ptr.142" = type opaque
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::unique_ptr.142"* }
%"class.pdfium::span.148" = type { %"class.fxcrt::UnownedPtr.149", i64 }
%"class.fxcrt::UnownedPtr.149" = type { float* }

@_ZTV13CFWL_WidgetTP = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_WidgetTP*)* @_ZN13CFWL_WidgetTPD2Ev to i8*), i8* bitcast (void (%class.CFWL_WidgetTP*)* @_ZN13CFWL_WidgetTPD0Ev to i8*), i8* bitcast (void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)* @_ZN13CFWL_WidgetTP14DrawBackgroundERK20CFWL_ThemeBackground to i8*), i8* bitcast (void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeText*)* @_ZN13CFWL_WidgetTP8DrawTextERK14CFWL_ThemeText to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i32] [i32 72, i32 101, i32 108, i32 118, i32 101, i32 116, i32 105, i32 99, i32 97, i32 0], align 4
@_ZZN13CFWL_WidgetTP9DrawFocusEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_MatrixE12kDashPattern = internal constant [2 x float] [float 1.000000e+00, float 1.000000e+00], align 4
@.str.1 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN13CFWL_WidgetTPC1Ev = hidden unnamed_addr alias void (%class.CFWL_WidgetTP*), void (%class.CFWL_WidgetTP*)* @_ZN13CFWL_WidgetTPC2Ev
@_ZN13CFWL_WidgetTPD1Ev = hidden unnamed_addr alias void (%class.CFWL_WidgetTP*), void (%class.CFWL_WidgetTP*)* @_ZN13CFWL_WidgetTPD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CFWL_WidgetTPC2Ev(%class.CFWL_WidgetTP* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV13CFWL_WidgetTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV13CFWL_WidgetTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  store %"struct.CFWL_WidgetTP::CColorData"* null, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %5 = icmp eq %"struct.CFWL_WidgetTP::CColorData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFWL_WidgetTP::CColorData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %9, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %9, align 8
  %11 = icmp eq %class.CFGAS_GEFont* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %10, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %10, i64 0, i32 0
  %19 = bitcast %class.CFGAS_GEFont* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  tail call void %22(%"class.fxcrt::Retainable"* nonnull %18) #9
  br label %23

23:                                               ; preds = %8, %12, %17
  %24 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %24, align 8
  store %class.CFDE_TextOut* null, %class.CFDE_TextOut** %24, align 8
  %26 = icmp eq %class.CFDE_TextOut* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %25) #9
  %28 = bitcast %class.CFDE_TextOut* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTPD0Ev(%class.CFWL_WidgetTP* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV13CFWL_WidgetTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  store %"struct.CFWL_WidgetTP::CColorData"* null, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %5 = icmp eq %"struct.CFWL_WidgetTP::CColorData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFWL_WidgetTP::CColorData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %9, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %9, align 8
  %11 = icmp eq %class.CFGAS_GEFont* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %10, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %10, i64 0, i32 0
  %19 = bitcast %class.CFGAS_GEFont* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  tail call void %22(%"class.fxcrt::Retainable"* nonnull %18) #9
  br label %23

23:                                               ; preds = %17, %12, %8
  %24 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %24, align 8
  store %class.CFDE_TextOut* null, %class.CFDE_TextOut** %24, align 8
  %26 = icmp eq %class.CFDE_TextOut* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %25) #9
  %28 = bitcast %class.CFDE_TextOut* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK13CFWL_WidgetTP5TraceEPN5cppgc7VisitorE(%class.CFWL_WidgetTP* nocapture, %"class.cppgc::Visitor"* nocapture) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP14DrawBackgroundERK20CFWL_ThemeBackground(%class.CFWL_WidgetTP* nocapture, %class.CFWL_ThemeBackground* nocapture dereferenceable(80)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP8DrawTextERK14CFWL_ThemeText(%class.CFWL_WidgetTP*, %class.CFWL_ThemeText* dereferenceable(88)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  tail call void @_ZN13CFWL_WidgetTP20EnsureTTOInitializedEv(%class.CFWL_WidgetTP* %0)
  %4 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %83, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %83, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 4, i32 0
  %14 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %13, align 8
  %15 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %15, align 8
  %17 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 2
  tail call void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut* %16, %struct.FDE_TextStyle* dereferenceable(3) %17) #9
  %18 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %15, align 8
  %19 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  tail call void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut* %18, i8 zeroext %20) #9
  %21 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load float, float* %25, align 8
  %27 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 3
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 4
  %30 = load float, float* %29, align 8
  %31 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 5
  %32 = load float, float* %31, align 4
  %33 = tail call %class.CFX_Matrix* @_ZNK16CFGAS_GEGraphics9GetMatrixEv(%class.CFGAS_GEGraphics* %14) #9
  %34 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %33, i64 0, i32 2
  %35 = bitcast %class.CFX_Matrix* %33 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4, !noalias !2
  %37 = shufflevector <2 x float> %36, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %38 = bitcast float* %34 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4, !noalias !2
  %40 = shufflevector <2 x float> %39, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %41 = insertelement <2 x float> undef, float %22, i32 0
  %42 = insertelement <2 x float> %41, float %26, i32 1
  %43 = shufflevector <2 x float> %42, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %44 = fmul <4 x float> %43, %37
  %45 = insertelement <2 x float> undef, float %24, i32 0
  %46 = insertelement <2 x float> %45, float %28, i32 1
  %47 = shufflevector <2 x float> %46, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %48 = fmul <4 x float> %47, %40
  %49 = fadd <4 x float> %44, %48
  %50 = extractelement <2 x float> %36, i32 0
  %51 = fmul float %30, %50
  %52 = extractelement <2 x float> %39, i32 0
  %53 = fmul float %32, %52
  %54 = fadd float %51, %53
  %55 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %33, i64 0, i32 4
  %56 = load float, float* %55, align 4, !noalias !2
  %57 = fadd float %54, %56
  %58 = extractelement <2 x float> %36, i32 1
  %59 = fmul float %30, %58
  %60 = extractelement <2 x float> %39, i32 1
  %61 = fmul float %32, %60
  %62 = fadd float %59, %61
  %63 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %33, i64 0, i32 5
  %64 = load float, float* %63, align 4, !noalias !2
  %65 = fadd float %62, %64
  %66 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %15, align 8
  %67 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %66, i64 0, i32 12, i32 0
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> %49, <4 x float>* %68, align 8
  %69 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %66, i64 0, i32 12, i32 4
  store float %57, float* %69, align 8
  %70 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %66, i64 0, i32 12, i32 5
  store float %65, float* %70, align 4
  %71 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %15, align 8
  %72 = tail call %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics* %14) #9
  %73 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %74 = icmp eq %"class.fxcrt::StringDataTemplate"* %73, null
  %75 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %73, i64 0, i32 3
  %76 = select i1 %74, [1 x i32]* @.str.1, [1 x i32]* %75
  %77 = getelementptr inbounds [1 x i32], [1 x i32]* %76, i64 0, i64 0
  %78 = shl i64 %9, 32
  %79 = ashr exact i64 %78, 32
  %80 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %77, i32** %80, align 8
  %81 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 1
  call void @_ZN12CFDE_TextOut13DrawLogicTextEP16CFX_RenderDeviceN5fxcrt18StringViewTemplateIwEERK9CFX_RectF(%class.CFDE_TextOut* %71, %class.CFX_RenderDevice* %72, %"class.fxcrt::StringViewTemplate"* nonnull %3, %class.CFX_RectF* dereferenceable(16) %82) #9
  br label %83

83:                                               ; preds = %2, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP20EnsureTTOInitializedEv(%class.CFWL_WidgetTP*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %5, align 8
  %7 = icmp eq %class.CFDE_TextOut* %6, null
  br i1 %7, label %8, label %62

8:                                                ; preds = %1
  %9 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = tail call %class.CFWL_FontManager* @_ZN16CFWL_FontManager11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str, i64 0, i64 0), i32** %11, align 8
  %12 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 9, i64* %12, align 8
  call void @_ZN16CFWL_FontManager8FindFontEN5fxcrt18StringViewTemplateIwEEjt(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CFWL_FontManager* %10, %"class.fxcrt::StringViewTemplate"* nonnull %3, i32 0, i16 zeroext 0) #9
  %13 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.fxcrt::RetainPtr"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %14, align 8
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %17, align 8
  %19 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  store i64 %16, i64* %19, align 8
  %20 = icmp eq %class.CFGAS_GEFont* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %18, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, -1
  store i64 %24, i64* %22, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %8, %21
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %14, align 8
  br label %46

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %18, i64 0, i32 0
  %29 = bitcast %class.CFGAS_GEFont* %18 to void (%"class.fxcrt::Retainable"*)***
  %30 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, i64 1
  %32 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, align 8
  call void %32(%"class.fxcrt::Retainable"* nonnull %28) #9
  %33 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %14, align 8
  %34 = bitcast %class.CFGAS_GEFont* %33 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %14, align 8
  %35 = icmp eq %class.CFGAS_GEFont* %33, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %33, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i64 %38, -1
  store i64 %39, i64* %37, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %33, i64 0, i32 0
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %34, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  call void %45(%"class.fxcrt::Retainable"* nonnull %42) #9
  br label %46

46:                                               ; preds = %26, %27, %36, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %47 = call i8* @_Znwm(i64 200) #8
  %48 = bitcast i8* %47 to %class.CFDE_TextOut*
  call void @_ZN12CFDE_TextOutC1Ev(%class.CFDE_TextOut* nonnull %48) #9
  %49 = ptrtoint i8* %47 to i64
  %50 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %5, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq %class.CFDE_TextOut* %50, null
  %53 = bitcast i8* %47 to %class.CFDE_TextOut*
  br i1 %52, label %57, label %54

54:                                               ; preds = %46
  call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %50) #9
  %55 = bitcast %class.CFDE_TextOut* %50 to i8*
  call void @_ZdlPv(i8* %55) #8
  %56 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %5, align 8
  br label %57

57:                                               ; preds = %54, %46
  %58 = phi %class.CFDE_TextOut* [ %56, %54 ], [ %53, %46 ]
  call void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut* %58, %"class.fxcrt::RetainPtr"* dereferenceable(8) %13) #9
  %59 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %5, align 8
  call void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut* %59, float 1.200000e+01) #9
  %60 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %5, align 8
  %61 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %60, i64 0, i32 9
  store i32 -16777216, i32* %61, align 8
  br label %62

62:                                               ; preds = %1, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut*, %struct.FDE_TextStyle* dereferenceable(3)) local_unnamed_addr #4

declare void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut*, i8 zeroext) local_unnamed_addr #4

declare %class.CFX_Matrix* @_ZNK16CFGAS_GEGraphics9GetMatrixEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #4

declare void @_ZN12CFDE_TextOut13DrawLogicTextEP16CFX_RenderDeviceN5fxcrt18StringViewTemplateIwEERK9CFX_RectF(%class.CFDE_TextOut*, %class.CFX_RenderDevice*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #4

declare %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.fxcrt::RetainPtr"* @_ZNK13CFWL_WidgetTP7GetFontEv(%class.CFWL_WidgetTP* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 2
  ret %"class.fxcrt::RetainPtr"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP24InitializeArrowColorDataEv(%class.CFWL_WidgetTP* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.99"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %5 = icmp eq %"struct.CFWL_WidgetTP::CColorData"* %4, null
  br i1 %5, label %6, label %36

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 64) #8
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 48, i1 false) #9
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.99"* %2 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast i8* %7 to <4 x i32>*
  store <4 x i32> <i32 -3483399, i32 -5521687, i32 -7892005, i32 -5461863>, <4 x i32>* %11, align 4
  %12 = getelementptr inbounds i8, i8* %7, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 -1971458, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 -131073, i32* %15, align 4
  %16 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %17 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %16, i64 0, i32 1, i64 2
  store i32 -9531663, i32* %17, align 4
  %18 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %19 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %18, i64 0, i32 1, i64 3
  store i32 -65797, i32* %19, align 4
  %20 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %21 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %20, i64 0, i32 2, i64 0
  store i32 -5255941, i32* %21, align 4
  %22 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %23 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %22, i64 0, i32 2, i64 1
  store i32 -4596997, i32* %23, align 4
  %24 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %25 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %24, i64 0, i32 2, i64 2
  store i32 -2957589, i32* %25, align 4
  %26 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %27 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %26, i64 0, i32 2, i64 3
  store i32 -790036, i32* %27, align 4
  %28 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %29 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %28, i64 0, i32 3, i64 0
  store i32 -11705979, i32* %29, align 4
  %30 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %31 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %30, i64 0, i32 3, i64 1
  store i32 -11705979, i32* %31, align 4
  %32 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %33 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %32, i64 0, i32 3, i64 2
  store i32 -11705979, i32* %33, align 4
  %34 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %3, align 8
  %35 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %34, i64 0, i32 3, i64 3
  store i32 -8355712, i32* %35, align 4
  br label %36

36:                                               ; preds = %1, %6
  ret void
}

declare %class.CFWL_FontManager* @_ZN16CFWL_FontManager11GetInstanceEv() local_unnamed_addr #4

declare void @_ZN16CFWL_FontManager8FindFontEN5fxcrt18StringViewTemplateIwEEjt(%"class.fxcrt::RetainPtr"* sret, %class.CFWL_FontManager*, %"class.fxcrt::StringViewTemplate"*, i32, i16 zeroext) local_unnamed_addr #4

declare void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut*, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut*, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP10DrawBorderEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.CFGAS_GEPath, align 8
  %6 = alloca %class.CFGAS_GEColor, align 8
  %7 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.CFGAS_GEPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = bitcast %class.CFGAS_GEPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %5) #9
  %11 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %18 = load float, float* %17, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %5, float %12, float %14, float %16, float %18) #9
  %19 = load float, float* %11, align 4
  %20 = fadd float %19, 1.000000e+00
  %21 = load float, float* %13, align 4
  %22 = fadd float %21, 1.000000e+00
  %23 = load float, float* %15, align 4
  %24 = fadd float %23, -2.000000e+00
  %25 = load float, float* %17, align 4
  %26 = fadd float %25, -2.000000e+00
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %5, float %20, float %22, float %24, float %26) #9
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* nonnull %1) #9
  %27 = bitcast %class.CFGAS_GEColor* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %6, i32 -16777216) #9
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* nonnull %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %6) #9
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* nonnull %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %5, i8 zeroext 1, %class.CFX_Matrix* dereferenceable(24) %3) #9
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* nonnull %1) #9
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br label %28

28:                                               ; preds = %4, %8
  ret void
}

declare void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath*) unnamed_addr #4

declare void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath*, float, float, float, float) local_unnamed_addr #4

declare void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #4

declare void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor*, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor*) unnamed_addr #5

declare void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP14FillBackgroundEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  tail call void @_ZN13CFWL_WidgetTP13FillSolidRectEP16CFGAS_GEGraphicsjRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* undef, %class.CFGAS_GEGraphics* %1, i32 -1250856, %class.CFX_RectF* dereferenceable(16) %2, %class.CFX_Matrix* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP13FillSolidRectEP16CFGAS_GEGraphicsjRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture readnone, %class.CFGAS_GEGraphics*, i32, %class.CFX_RectF* nocapture readonly dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca %class.CFGAS_GEColor, align 8
  %8 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #9
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 3
  %19 = load float, float* %18, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %6, float %13, float %15, float %17, float %19) #9
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* nonnull %1) #9
  %20 = bitcast %class.CFGAS_GEColor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %7, i32 %2) #9
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* nonnull %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %7) #9
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* nonnull %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #9
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* nonnull %1) #9
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  br label %21

21:                                               ; preds = %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP9DrawFocusEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.CFGAS_GEPath, align 8
  %6 = alloca %class.CFGAS_GEColor, align 8
  %7 = alloca %"class.pdfium::span.148", align 8
  %8 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %4
  %10 = bitcast %class.CFGAS_GEPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = bitcast %class.CFGAS_GEPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %5) #9
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %19 = load float, float* %18, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %5, float %13, float %15, float %17, float %19) #9
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* nonnull %1) #9
  %20 = bitcast %class.CFGAS_GEColor* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %6, i32 -16777216) #9
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* nonnull %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %6) #9
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.pdfium::span.148", %"class.pdfium::span.148"* %7, i64 0, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @_ZZN13CFWL_WidgetTP9DrawFocusEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_MatrixE12kDashPattern, i64 0, i64 0), float** %21, align 8
  %22 = getelementptr inbounds %"class.pdfium::span.148", %"class.pdfium::span.148"* %7, i64 0, i32 1
  store i64 2, i64* %22, align 8
  call void @_ZN16CFGAS_GEGraphics11SetLineDashEfN6pdfium4spanIKfEE(%class.CFGAS_GEGraphics* nonnull %1, float 0.000000e+00, %"class.pdfium::span.148"* nonnull %7) #9
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* nonnull %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %5, %class.CFX_Matrix* dereferenceable(24) %3) #9
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* nonnull %1) #9
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  br label %23

23:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN16CFGAS_GEGraphics11SetLineDashEfN6pdfium4spanIKfEE(%class.CFGAS_GEGraphics*, float, %"class.pdfium::span.148"*) local_unnamed_addr #4

declare void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP9DrawArrowEP16CFGAS_GEGraphicsRK9CFX_RectF18FWLTHEME_DIRECTIONjRK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %7 = alloca %class.CFGAS_GEPath, align 8
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %class.CFX_PTemplate, align 4
  %14 = alloca %class.CFX_PTemplate, align 4
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFX_PTemplate, align 4
  %17 = alloca %class.CFX_PTemplate, align 4
  %18 = alloca %class.CFX_PTemplate, align 4
  %19 = alloca %class.CFX_PTemplate, align 4
  %20 = alloca %class.CFX_PTemplate, align 4
  %21 = alloca %class.CFX_PTemplate, align 4
  %22 = alloca %class.CFX_PTemplate, align 4
  %23 = alloca %class.CFX_PTemplate, align 4
  %24 = alloca %class.CFX_PTemplate, align 4
  %25 = alloca %class.CFX_PTemplate, align 4
  %26 = alloca %class.CFX_PTemplate, align 4
  %27 = alloca %class.CFX_PTemplate, align 4
  %28 = alloca %class.CFX_PTemplate, align 4
  %29 = alloca %class.CFX_PTemplate, align 4
  %30 = alloca %class.CFX_PTemplate, align 4
  %31 = alloca %class.CFX_PTemplate, align 4
  %32 = alloca %class.CFGAS_GEColor, align 8
  %33 = icmp ult i32 %3, 2
  %34 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %35 = load float, float* %34, align 4
  %36 = select i1 %33, i32 9, i32 6
  %37 = sitofp i32 %36 to float
  %38 = fsub float %35, %37
  %39 = fmul float %38, 5.000000e-01
  %40 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %41 = load float, float* %40, align 4
  %42 = fadd float %41, %39
  %43 = fadd float %42, 5.000000e-01
  %44 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %45 = load float, float* %44, align 4
  %46 = select i1 %33, i32 6, i32 9
  %47 = sitofp i32 %46 to float
  %48 = fsub float %45, %47
  %49 = fmul float %48, 5.000000e-01
  %50 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %51 = load float, float* %50, align 4
  %52 = fadd float %51, %49
  %53 = fadd float %52, 5.000000e-01
  %54 = bitcast %class.CFGAS_GEPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  %55 = bitcast %class.CFGAS_GEPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %7) #9
  switch i32 %3, label %159 [
    i32 1, label %56
    i32 0, label %80
    i32 3, label %104
    i32 2, label %128
  ]

56:                                               ; preds = %6
  %57 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %58 = fadd float %53, 1.000000e+00
  %59 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %43, float* %59, align 4
  %60 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %58, float* %60, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  %61 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %62 = fadd float %43, 4.000000e+00
  %63 = fadd float %53, 5.000000e+00
  %64 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float %62, float* %64, align 4
  %65 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %63, float* %65, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  %66 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #9
  %67 = fadd float %43, 8.000000e+00
  %68 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %67, float* %68, align 4
  %69 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  store float %58, float* %69, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  %70 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #9
  %71 = fadd float %43, 7.000000e+00
  %72 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 0
  store float %71, float* %72, align 4
  %73 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  store float %53, float* %73, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #9
  %74 = bitcast %class.CFX_PTemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  %75 = fadd float %53, 3.000000e+00
  %76 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 0
  store float %62, float* %76, align 4
  %77 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  store float %75, float* %77, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  %78 = bitcast %class.CFX_PTemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  %79 = fadd float %43, 1.000000e+00
  br label %152

80:                                               ; preds = %6
  %81 = bitcast %class.CFX_PTemplate* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #9
  %82 = fadd float %53, 4.000000e+00
  %83 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 0
  store float %43, float* %83, align 4
  %84 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 1
  store float %82, float* %84, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #9
  %85 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #9
  %86 = fadd float %43, 4.000000e+00
  %87 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 0
  store float %86, float* %87, align 4
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  store float %53, float* %88, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #9
  %89 = bitcast %class.CFX_PTemplate* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #9
  %90 = fadd float %43, 8.000000e+00
  %91 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 0
  store float %90, float* %91, align 4
  %92 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 1
  store float %82, float* %92, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #9
  %93 = bitcast %class.CFX_PTemplate* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #9
  %94 = fadd float %43, 7.000000e+00
  %95 = fadd float %53, 5.000000e+00
  %96 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 0
  store float %94, float* %96, align 4
  %97 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 1
  store float %95, float* %97, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #9
  %98 = bitcast %class.CFX_PTemplate* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = fadd float %53, 2.000000e+00
  %100 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 0
  store float %86, float* %100, align 4
  %101 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 1
  store float %99, float* %101, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %102 = bitcast %class.CFX_PTemplate* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #9
  %103 = fadd float %43, 1.000000e+00
  br label %152

104:                                              ; preds = %6
  %105 = bitcast %class.CFX_PTemplate* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #9
  %106 = fadd float %43, 1.000000e+00
  %107 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %20, i64 0, i32 0
  store float %106, float* %107, align 4
  %108 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %20, i64 0, i32 1
  store float %53, float* %108, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #9
  %109 = bitcast %class.CFX_PTemplate* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #9
  %110 = fadd float %43, 5.000000e+00
  %111 = fadd float %53, 4.000000e+00
  %112 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %21, i64 0, i32 0
  store float %110, float* %112, align 4
  %113 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %21, i64 0, i32 1
  store float %111, float* %113, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #9
  %114 = bitcast %class.CFX_PTemplate* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #9
  %115 = fadd float %53, 8.000000e+00
  %116 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %22, i64 0, i32 0
  store float %106, float* %116, align 4
  %117 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %22, i64 0, i32 1
  store float %115, float* %117, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %22) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #9
  %118 = bitcast %class.CFX_PTemplate* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #9
  %119 = fadd float %53, 7.000000e+00
  %120 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %23, i64 0, i32 0
  store float %43, float* %120, align 4
  %121 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %23, i64 0, i32 1
  store float %119, float* %121, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  %122 = bitcast %class.CFX_PTemplate* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #9
  %123 = fadd float %43, 3.000000e+00
  %124 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %24, i64 0, i32 0
  store float %123, float* %124, align 4
  %125 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %24, i64 0, i32 1
  store float %111, float* %125, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %24) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #9
  %126 = bitcast %class.CFX_PTemplate* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #9
  %127 = fadd float %53, 1.000000e+00
  br label %152

128:                                              ; preds = %6
  %129 = bitcast %class.CFX_PTemplate* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #9
  %130 = fadd float %53, 4.000000e+00
  %131 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %26, i64 0, i32 0
  store float %43, float* %131, align 4
  %132 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %26, i64 0, i32 1
  store float %130, float* %132, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %26) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #9
  %133 = bitcast %class.CFX_PTemplate* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #9
  %134 = fadd float %43, 4.000000e+00
  %135 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %27, i64 0, i32 0
  store float %134, float* %135, align 4
  %136 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %27, i64 0, i32 1
  store float %53, float* %136, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %27) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #9
  %137 = bitcast %class.CFX_PTemplate* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #9
  %138 = fadd float %43, 5.000000e+00
  %139 = fadd float %53, 1.000000e+00
  %140 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %28, i64 0, i32 0
  store float %138, float* %140, align 4
  %141 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %28, i64 0, i32 1
  store float %139, float* %141, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %28) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #9
  %142 = bitcast %class.CFX_PTemplate* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #9
  %143 = fadd float %43, 2.000000e+00
  %144 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %29, i64 0, i32 0
  store float %143, float* %144, align 4
  %145 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %29, i64 0, i32 1
  store float %130, float* %145, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %29) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %146 = bitcast %class.CFX_PTemplate* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #9
  %147 = fadd float %53, 7.000000e+00
  %148 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %30, i64 0, i32 0
  store float %138, float* %148, align 4
  %149 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %30, i64 0, i32 1
  store float %147, float* %149, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %30) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #9
  %150 = bitcast %class.CFX_PTemplate* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #9
  %151 = fadd float %53, 8.000000e+00
  br label %152

152:                                              ; preds = %56, %80, %104, %128
  %153 = phi %class.CFX_PTemplate* [ %31, %128 ], [ %25, %104 ], [ %19, %80 ], [ %13, %56 ]
  %154 = phi float [ %134, %128 ], [ %43, %104 ], [ %103, %80 ], [ %79, %56 ]
  %155 = phi float [ %151, %128 ], [ %127, %104 ], [ %95, %80 ], [ %53, %56 ]
  %156 = phi i8* [ %150, %128 ], [ %126, %104 ], [ %102, %80 ], [ %78, %56 ]
  %157 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %153, i64 0, i32 0
  store float %154, float* %157, align 4
  %158 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %153, i64 0, i32 1
  store float %155, float* %158, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %153) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #9
  br label %159

159:                                              ; preds = %152, %6
  %160 = bitcast %class.CFGAS_GEColor* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #9
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %32, i32 %4) #9
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %32) #9
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #9
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %7, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %5) #9
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  ret void
}

declare void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP7DrawBtnEP16CFGAS_GEGraphicsRK9CFX_RectF14FWLTHEME_STATERK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.CFGAS_GEPath, align 8
  %7 = alloca %class.CFGAS_GEColor, align 8
  %8 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.99"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %11 = icmp eq %"struct.CFWL_WidgetTP::CColorData"* %10, null
  br i1 %11, label %12, label %43

12:                                               ; preds = %5
  %13 = tail call i8* @_Znwm(i64 64) #8
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 48, i1 false) #9
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.99"* %8 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast i8* %13 to <4 x i32>*
  store <4 x i32> <i32 -3483399, i32 -5521687, i32 -7892005, i32 -5461863>, <4 x i32>* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 -1971458, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 20
  %21 = bitcast i8* %20 to i32*
  store i32 -131073, i32* %21, align 4
  %22 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %23 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %22, i64 0, i32 1, i64 2
  store i32 -9531663, i32* %23, align 4
  %24 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %25 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %24, i64 0, i32 1, i64 3
  store i32 -65797, i32* %25, align 4
  %26 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %27 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %26, i64 0, i32 2, i64 0
  store i32 -5255941, i32* %27, align 4
  %28 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %29 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %28, i64 0, i32 2, i64 1
  store i32 -4596997, i32* %29, align 4
  %30 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %31 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %30, i64 0, i32 2, i64 2
  store i32 -2957589, i32* %31, align 4
  %32 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %33 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %32, i64 0, i32 2, i64 3
  store i32 -790036, i32* %33, align 4
  %34 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %35 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %34, i64 0, i32 3, i64 0
  store i32 -11705979, i32* %35, align 4
  %36 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %37 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %36, i64 0, i32 3, i64 1
  store i32 -11705979, i32* %37, align 4
  %38 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %39 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %38, i64 0, i32 3, i64 2
  store i32 -11705979, i32* %39, align 4
  %40 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %41 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %40, i64 0, i32 3, i64 3
  store i32 -8355712, i32* %41, align 4
  %42 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  br label %43

43:                                               ; preds = %5, %12
  %44 = phi %"struct.CFWL_WidgetTP::CColorData"* [ %10, %5 ], [ %42, %12 ]
  %45 = add nsw i32 %3, -1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %44, i64 0, i32 2, i64 %46
  %48 = load i32, i32* %47, align 4
  tail call void @_ZN13CFWL_WidgetTP13FillSolidRectEP16CFGAS_GEGraphicsjRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* undef, %class.CFGAS_GEGraphics* %1, i32 %48, %class.CFX_RectF* dereferenceable(16) %2, %class.CFX_Matrix* dereferenceable(24) %4)
  %49 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  %50 = bitcast %class.CFGAS_GEPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %6) #9
  %51 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %58 = load float, float* %57, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %6, float %52, float %54, float %56, float %58) #9
  %59 = bitcast %class.CFGAS_GEColor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  %60 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %9, align 8
  %61 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %60, i64 0, i32 0, i64 %46
  %62 = load i32, i32* %61, align 4
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %7, i32 %62) #9
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %7) #9
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %6, %class.CFX_Matrix* dereferenceable(24) %4) #9
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFWL_WidgetTP12DrawArrowBtnEP16CFGAS_GEGraphicsRK9CFX_RectF18FWLTHEME_DIRECTION14FWLTHEME_STATERK10CFX_Matrix(%class.CFWL_WidgetTP* nocapture, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), i32, i32, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  tail call void @_ZN13CFWL_WidgetTP7DrawBtnEP16CFGAS_GEGraphicsRK9CFX_RectF14FWLTHEME_STATERK10CFX_Matrix(%class.CFWL_WidgetTP* %0, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* dereferenceable(16) %2, i32 %4, %class.CFX_Matrix* dereferenceable(24) %5)
  %7 = getelementptr inbounds %class.CFWL_WidgetTP, %class.CFWL_WidgetTP* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.99"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %10 = icmp eq %"struct.CFWL_WidgetTP::CColorData"* %9, null
  br i1 %10, label %11, label %42

11:                                               ; preds = %6
  %12 = tail call i8* @_Znwm(i64 64) #8
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 48, i1 false) #9
  %14 = ptrtoint i8* %12 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.99"* %7 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast i8* %12 to <4 x i32>*
  store <4 x i32> <i32 -3483399, i32 -5521687, i32 -7892005, i32 -5461863>, <4 x i32>* %16, align 4
  %17 = getelementptr inbounds i8, i8* %12, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 -1971458, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %12, i64 20
  %20 = bitcast i8* %19 to i32*
  store i32 -131073, i32* %20, align 4
  %21 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %22 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %21, i64 0, i32 1, i64 2
  store i32 -9531663, i32* %22, align 4
  %23 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %24 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %23, i64 0, i32 1, i64 3
  store i32 -65797, i32* %24, align 4
  %25 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %26 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %25, i64 0, i32 2, i64 0
  store i32 -5255941, i32* %26, align 4
  %27 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %28 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %27, i64 0, i32 2, i64 1
  store i32 -4596997, i32* %28, align 4
  %29 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %30 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %29, i64 0, i32 2, i64 2
  store i32 -2957589, i32* %30, align 4
  %31 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %32 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %31, i64 0, i32 2, i64 3
  store i32 -790036, i32* %32, align 4
  %33 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %34 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %33, i64 0, i32 3, i64 0
  store i32 -11705979, i32* %34, align 4
  %35 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %36 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %35, i64 0, i32 3, i64 1
  store i32 -11705979, i32* %36, align 4
  %37 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %38 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %37, i64 0, i32 3, i64 2
  store i32 -11705979, i32* %38, align 4
  %39 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  %40 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %39, i64 0, i32 3, i64 3
  store i32 -8355712, i32* %40, align 4
  %41 = load %"struct.CFWL_WidgetTP::CColorData"*, %"struct.CFWL_WidgetTP::CColorData"** %8, align 8
  br label %42

42:                                               ; preds = %6, %11
  %43 = phi %"struct.CFWL_WidgetTP::CColorData"* [ %9, %6 ], [ %41, %11 ]
  %44 = add nsw i32 %4, -1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.CFWL_WidgetTP::CColorData", %"struct.CFWL_WidgetTP::CColorData"* %43, i64 0, i32 3, i64 %45
  %47 = load i32, i32* %46, align 4
  tail call void @_ZN13CFWL_WidgetTP9DrawArrowEP16CFGAS_GEGraphicsRK9CFX_RectF18FWLTHEME_DIRECTIONjRK10CFX_Matrix(%class.CFWL_WidgetTP* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* dereferenceable(16) %2, i32 %3, i32 %47, %class.CFX_Matrix* dereferenceable(24) %5)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN12CFDE_TextOutC1Ev(%class.CFDE_TextOut*) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
