; ModuleID = '../../components/download/internal/background_service/driver_entry.cc'
source_filename = "../../components/download/internal/background_service/driver_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.download::DriverEntry" = type { %"class.std::__1::basic_string", i32, i8, i8, i8, i64, i64, %"class.base::FilePath", %"class.absl::optional", %"class.base::Time", %class.scoped_refptr.11, %"class.std::__1::vector.18", %"class.std::__1::basic_string" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.storage::BlobDataHandle" }
%"class.storage::BlobDataHandle" = type { %"class.base::SupportsUserData::Data", %class.scoped_refptr, %class.scoped_refptr.2 }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%class.scoped_refptr.2 = type { %"class.storage::BlobDataHandle::BlobDataHandleShared"* }
%"class.storage::BlobDataHandle::BlobDataHandleShared" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::WeakPtr" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.5", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.11 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.12", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.13" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.23" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN8download11DriverEntryC1Ev = hidden unnamed_addr alias void (%"struct.download::DriverEntry"*), void (%"struct.download::DriverEntry"*)* @_ZN8download11DriverEntryC2Ev
@_ZN8download11DriverEntryC1ERKS0_ = hidden unnamed_addr alias void (%"struct.download::DriverEntry"*, %"struct.download::DriverEntry"*), void (%"struct.download::DriverEntry"*, %"struct.download::DriverEntry"*)* @_ZN8download11DriverEntryC2ERKS0_
@_ZN8download11DriverEntryD1Ev = hidden unnamed_addr alias void (%"struct.download::DriverEntry"*), void (%"struct.download::DriverEntry"*)* @_ZN8download11DriverEntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download11DriverEntryC2Ev(%"struct.download::DriverEntry"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.download::DriverEntry"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #7
  %3 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 1
  store i32 4, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 4
  store i8 1, i8* %6, align 2
  %7 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 7
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %8) #7
  %10 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.1* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 88, i1 false)
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download11DriverEntryC2ERKS0_(%"struct.download::DriverEntry"*, %"struct.download::DriverEntry"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.download::DriverEntry"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.download::DriverEntry"* %0 to i8*
  %9 = bitcast %"struct.download::DriverEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #7
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #7
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 1
  %19 = bitcast i32* %17 to i8*
  %20 = bitcast i32* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %21 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 7
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %21, %"class.base::FilePath"* dereferenceable(24) %22) #7
  %23 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #7
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN7storage14BlobDataHandleC1ERKS0_(%"class.storage::BlobDataHandle"* %29, %"class.storage::BlobDataHandle"* dereferenceable(24) %28) #7
  store i8 1, i8* %23, align 8
  br label %30

30:                                               ; preds = %16, %27
  %31 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 9, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 9, i32 0, i32 0
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 10, i32 0
  %35 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %34, align 8
  %36 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 10, i32 0
  store %"class.net::HttpResponseHeaders"* %35, %"class.net::HttpResponseHeaders"** %36, align 8
  %37 = icmp eq %"class.net::HttpResponseHeaders"* %35, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  br label %41

41:                                               ; preds = %30, %38
  %42 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 11
  %43 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 11
  %44 = bitcast %"class.std::__1::vector.18"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #7
  %45 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 11, i32 0, i32 1
  %46 = bitcast %class.GURL** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.18"* %43 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = sdiv exact i64 %50, 120
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %81, label %53

53:                                               ; preds = %41
  %54 = icmp ugt i64 %51, 153722867280912930
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector.18"* %42 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #8
  unreachable

57:                                               ; preds = %53
  %58 = tail call i8* @_Znwm(i64 %50) #9
  %59 = bitcast i8* %58 to %class.GURL*
  %60 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 11, i32 0, i32 1
  %61 = bitcast %class.GURL** %60 to i8**
  store i8* %58, i8** %61, align 8
  %62 = bitcast %"class.std::__1::vector.18"* %42 to i8**
  store i8* %58, i8** %62, align 8
  %63 = getelementptr inbounds %class.GURL, %class.GURL* %59, i64 %51
  %64 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %63, %class.GURL** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %43, i64 0, i32 0, i32 0
  %66 = load %class.GURL*, %class.GURL** %65, align 8
  %67 = load %class.GURL*, %class.GURL** %45, align 8
  %68 = bitcast %class.GURL** %60 to i64*
  %69 = ptrtoint i8* %58 to i64
  %70 = icmp eq %class.GURL* %66, %67
  br i1 %70, label %79, label %71

71:                                               ; preds = %57, %71
  %72 = phi %class.GURL* [ %75, %71 ], [ %59, %57 ]
  %73 = phi %class.GURL* [ %74, %71 ], [ %66, %57 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %72, %class.GURL* dereferenceable(120) %73) #7
  %74 = getelementptr inbounds %class.GURL, %class.GURL* %73, i64 1
  %75 = getelementptr inbounds %class.GURL, %class.GURL* %72, i64 1
  %76 = icmp eq %class.GURL* %74, %67
  br i1 %76, label %77, label %71

77:                                               ; preds = %71
  %78 = ptrtoint %class.GURL* %75 to i64
  br label %79

79:                                               ; preds = %77, %57
  %80 = phi i64 [ %69, %57 ], [ %78, %77 ]
  store i64 %80, i64* %68, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 12
  %83 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 12
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  %89 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #7
  br label %96

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %82, i8* %93, i64 %95) #7
  br label %96

96:                                               ; preds = %88, %91
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download11DriverEntryD2Ev(%"struct.download::DriverEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 12
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 11
  %12 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %11, i64 0, i32 0, i32 0
  %13 = load %class.GURL*, %class.GURL** %12, align 8
  %14 = icmp eq %class.GURL* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  %16 = bitcast %class.GURL* %13 to i8*
  %17 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 11, i32 0, i32 1
  %18 = load %class.GURL*, %class.GURL** %17, align 8
  %19 = icmp eq %class.GURL* %18, %13
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %20
  %21 = phi %class.GURL* [ %22, %20 ], [ %18, %15 ]
  %22 = getelementptr inbounds %class.GURL, %class.GURL* %21, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %22) #7
  %23 = icmp eq %class.GURL* %22, %13
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::vector.18"* %11 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi i8* [ %26, %24 ], [ %16, %15 ]
  store %class.GURL* %13, %class.GURL** %17, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %10, %27
  %30 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 10, i32 0
  %31 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %30, align 8
  %32 = icmp eq %"class.net::HttpResponseHeaders"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %31) #7
  %38 = bitcast %"class.net::HttpResponseHeaders"* %31 to i8*
  tail call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %29, %33, %37
  %40 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN7storage14BlobDataHandleD1Ev(%"class.storage::BlobDataHandle"* %44) #7
  store i8 0, i8* %40, align 8
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 7
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %46) #7
  %47 = bitcast %"struct.download::DriverEntry"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.download::DriverEntry", %"struct.download::DriverEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #9
  br label %54

54:                                               ; preds = %45, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN7storage14BlobDataHandleC1ERKS0_(%"class.storage::BlobDataHandle"*, %"class.storage::BlobDataHandle"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7storage14BlobDataHandleD1Ev(%"class.storage::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
