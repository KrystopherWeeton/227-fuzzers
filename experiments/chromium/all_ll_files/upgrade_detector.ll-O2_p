; ModuleID = '../../chrome/browser/upgrade_detector/upgrade_detector.cc'
source_filename = "../../chrome/browser/upgrade_detector/upgrade_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.BrowserProcess = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%class.UpgradeDetector = type { i32 (...)**, %"class.base::Clock"*, %"class.base::TickClock"*, %class.PrefChangeRegistrar, i32, %"class.base::Time", i8, i8, i8, %"class.base::RepeatingTimer", i32, i8, [3 x i8], %"class.base::ObserverList" }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.26" }
%"class.std::__1::__tree.26" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.37", %class.scoped_refptr.62, %"class.base::RepeatingCallback.63", %class.scoped_refptr.64, %"class.std::__1::unordered_map.65" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.44", i8, %"class.std::__1::unique_ptr.53" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.40, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.40 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted.41", [4 x i8] }>
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.62 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted.41" }>
%"class.base::RepeatingCallback.63" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.64 = type { %class.PrefRegistry* }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted", %class.scoped_refptr, %"class.std::__1::unordered_map", %"class.std::__1::set" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.65" = type { %"class.std::__1::__hash_table.66" }
%"class.std::__1::__hash_table.66" = type <{ %"class.std::__1::unique_ptr.67", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.85", [4 x i8] }>
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base.70"** }
%"struct.std::__1::__hash_node_base.70" = type { %"struct.std::__1::__hash_node_base.70"* }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__bucket_list_deallocator.72" }
%"class.std::__1::__bucket_list_deallocator.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base.70" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.99" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.89, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.89 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.90" }>
%"class.base::RefCountedThreadSafe.90" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.91" }
%"class.base::time_internal::TimeBase.91" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.93", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.93" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.94" }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__cxx_atomic_impl.97" }
%"struct.std::__1::__cxx_atomic_impl.97" = type { %"struct.std::__1::__cxx_atomic_base_impl.98" }
%"struct.std::__1::__cxx_atomic_base_impl.98" = type { i8 }
%"class.base::RepeatingCallback.99" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.100" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.PrefRegistrySimple = type { %class.PrefRegistry }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%class.UpgradeObserver = type { i32 (...)** }
%"class.PrefService::Preference" = type { %"class.std::__1::basic_string", i8, i32, %class.PrefService* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.105" }
%"union.absl::variant_internal::DestructibleUnionImpl.105" = type { %"union.absl::variant_internal::DestructibleUnionImpl.106" }
%"union.absl::variant_internal::DestructibleUnionImpl.106" = type { %"union.absl::variant_internal::DestructibleUnionImpl.107" }
%"union.absl::variant_internal::DestructibleUnionImpl.107" = type { %"union.absl::variant_internal::DestructibleUnionImpl.108" }
%"union.absl::variant_internal::DestructibleUnionImpl.108" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.UpgradeDetector::RelaunchWindow" = type { i32, i32, %"class.base::TimeDelta" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.base::Value"* }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.135", %"class.std::__1::map.142", i64 }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN15UpgradeDetector29OverrideHighAnnoyanceDeadlineEN4base4TimeE = comdat any

$_ZN15UpgradeDetector23ResetOverriddenDeadlineEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN5prefs28kAttemptedToEnableAutoupdateE = external constant [0 x i8], align 1
@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8
@_ZN5prefs27kRelaunchNotificationPeriodE = external constant [0 x i8], align 1
@_ZTV15UpgradeDetector = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetectorD2Ev to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetectorD0Ev to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector4InitEv to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector8ShutdownEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.UpgradeDetector*, i64)* @_ZN15UpgradeDetector29OverrideHighAnnoyanceDeadlineEN4base4TimeE to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector23ResetOverriddenDeadlineEv to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector21TriggerCriticalUpdateEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZZN15UpgradeDetector29GetRelaunchNotificationPeriodEvE9kMinValue = internal constant %"class.base::TimeDelta" { i64 3600000000 }, align 8
@_ZN5prefs21kRelaunchNotificationE = external constant [0 x i8], align 1
@_ZN5prefs15kRelaunchWindowE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [8 x i8] c"entries\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"start.hour\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"start.minute\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"duration_mins\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"TriggerCriticalUpdate\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"../../chrome/browser/upgrade_detector/upgrade_detector.cc\00", align 1
@.str.6 = private unnamed_addr constant [68 x i8] c"base::Time::FromLocalExploded(window_start_exploded, &window_start)\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZN8switches26kCheckForUpdateIntervalSecE = external constant [0 x i8], align 1

@_ZN15UpgradeDetectorD1Ev = hidden unnamed_addr alias void (%class.UpgradeDetector*), void (%class.UpgradeDetector*)* @_ZN15UpgradeDetectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector13RegisterPrefsEP18PrefRegistrySimple(%class.PrefRegistrySimple*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #13
  %4 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs28kAttemptedToEnableAutoupdateE, i64 0, i64 0)) #13
  %5 = icmp ugt i64 %4, -17
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %7) #14
  unreachable

8:                                                ; preds = %1
  %9 = icmp ult i64 %4, 23
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = add nuw i64 %4, 16
  %12 = and i64 %11, -16
  %13 = tail call i8* @_Znwm(i64 %12) #15
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %17, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

19:                                               ; preds = %8
  %20 = trunc i64 %4 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = icmp eq i64 %4, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %18, %10 ]
  %26 = phi i8* [ %3, %19 ], [ %13, %10 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs28kAttemptedToEnableAutoupdateE, i64 0, i64 0), i64 %4, i1 false) #13
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %25, %24 ]
  %29 = phi i8* [ %3, %19 ], [ %26, %24 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %4
  store i8 0, i8* %30, align 1
  call void @_ZN18PrefRegistrySimple19RegisterBooleanPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbj(%class.PrefRegistrySimple* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i1 zeroext false, i32 0) #13
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %27, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #13
  ret void
}

declare void @_ZN18PrefRegistrySimple19RegisterBooleanPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbj(%class.PrefRegistrySimple*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector4InitEv(%class.UpgradeDetector*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::RepeatingCallback.99", align 8
  %4 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %5 = bitcast %class.BrowserProcess* %4 to %class.PrefService* (%class.BrowserProcess*)***
  %6 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %5, align 8
  %7 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %6, i64 7
  %8 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %7, align 8
  %9 = tail call %class.PrefService* %8(%class.BrowserProcess* %4) #13
  %10 = icmp eq %class.PrefService* %9, null
  br i1 %10, label %58, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 3
  tail call void @_ZN19PrefChangeRegistrar4InitEP11PrefService(%class.PrefChangeRegistrar* %12, %class.PrefService* nonnull %9) #13
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs27kRelaunchNotificationPeriodE, i64 0, i64 0)) #13
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #14
  unreachable

18:                                               ; preds = %11
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %13, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs27kRelaunchNotificationPeriodE, i64 0, i64 0), i64 %14, i1 false) #13
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %13, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  %41 = bitcast %"class.base::RepeatingCallback.99"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  %42 = ptrtoint %class.UpgradeDetector* %0 to i64
  %43 = tail call i8* @_Znwm(i64 56) #15, !noalias !2
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !2
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 73, i64 0>, <2 x i64>* %46, align 8, !noalias !2
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = bitcast i8* %47 to i64*
  store i64 %42, i64* %48, align 8, !noalias !2
  %49 = bitcast %"class.base::RepeatingCallback.99"* %3 to i8**
  store i8* %43, i8** %49, align 8, !alias.scope !2
  call void @_ZN19PrefChangeRegistrar3AddERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base17RepeatingCallbackIFvvEEE(%class.PrefChangeRegistrar* %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.base::RepeatingCallback.99"* nonnull dereferenceable(8) %3) #13
  %50 = getelementptr inbounds %"class.base::RepeatingCallback.99", %"class.base::RepeatingCallback.99"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %37
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %37, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  br label %58

58:                                               ; preds = %1, %57
  ret void
}

declare void @_ZN19PrefChangeRegistrar4InitEP11PrefService(%class.PrefChangeRegistrar*, %class.PrefService*) local_unnamed_addr #1

declare void @_ZN19PrefChangeRegistrar3AddERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base17RepeatingCallbackIFvvEEE(%class.PrefChangeRegistrar*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::RepeatingCallback.99"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector8ShutdownEv(%class.UpgradeDetector*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %2) #13
  %3 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 3
  tail call void @_ZN19PrefChangeRegistrar9RemoveAllEv(%class.PrefChangeRegistrar* %3) #13
  ret void
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

declare void @_ZN19PrefChangeRegistrar9RemoveAllEv(%class.PrefChangeRegistrar*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector38OverrideRelaunchNotificationToRequiredEb(%class.UpgradeDetector*, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN15UpgradeDetector34NotifyRelaunchOverriddenToRequiredEb(%class.UpgradeDetector* %0, i1 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector34NotifyRelaunchOverriddenToRequiredEb(%class.UpgradeDetector*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %6 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %342, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !7
  %17 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !7
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #13
  br i1 %19, label %21, label %23

21:                                               ; preds = %9
  %22 = bitcast %"class.base::ObserverList"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13, !alias.scope !7
  br label %63

23:                                               ; preds = %9
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %11, align 8, !alias.scope !7
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #13
  store i64 0, i64* %12, align 8, !alias.scope !7
  %25 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %26 = load i32, i32* %25, align 8, !noalias !7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !7
  %31 = bitcast %"class.base::ObserverList"* %5 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !7
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8, !alias.scope !7
  %37 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8, !alias.scope !7
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8, !alias.scope !7
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %54, %58, %21, %35, %48
  %64 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #13
  %70 = bitcast %"class.base::ObserverList"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #13, !alias.scope !10
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  br label %72

72:                                               ; preds = %312, %63
  %73 = phi %"class.base::ObserverList"* [ %71, %63 ], [ %310, %312 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %300

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !13

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %403
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %405, %403 ], [ %173, %171 ]
  %178 = phi i64 [ %404, %403 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %381, label %375

193:                                              ; preds = %403, %171
  %194 = phi i64 [ %172, %171 ], [ %404, %403 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #13
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #13
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !15

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %371
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %373, %371 ], [ %266, %264 ]
  %271 = phi i64 [ %372, %371 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %349, label %343

286:                                              ; preds = %371, %264
  %287 = phi i64 [ %265, %264 ], [ %372, %371 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #13
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #13
  br label %342

300:                                              ; preds = %106
  %301 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 %109
  %304 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %303 to %class.UpgradeObserver**
  %305 = load %class.UpgradeObserver*, %class.UpgradeObserver** %304, align 8
  %306 = bitcast %class.UpgradeObserver* %305 to void (%class.UpgradeObserver*, i1)***
  %307 = load void (%class.UpgradeObserver*, i1)**, void (%class.UpgradeObserver*, i1)*** %306, align 8
  %308 = getelementptr inbounds void (%class.UpgradeObserver*, i1)*, void (%class.UpgradeObserver*, i1)** %307, i64 6
  %309 = load void (%class.UpgradeObserver*, i1)*, void (%class.UpgradeObserver*, i1)** %308, align 8
  call void %309(%class.UpgradeObserver* %305, i1 zeroext %1) #13
  %310 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %311 = icmp eq %"class.base::ObserverList"* %310, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %337, %333, %300, %313, %327
  br label %72

313:                                              ; preds = %300
  %314 = load i64, i64* %12, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %12, align 8
  %316 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 1
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.base::ObserverList"* %310 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = load i64, i64* %13, align 8
  %324 = icmp ult i64 %322, %323
  %325 = select i1 %324, i64 %322, i64 %323
  %326 = icmp ult i64 %315, %325
  br i1 %326, label %327, label %312

327:                                              ; preds = %313
  %328 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 %315, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %312

333:                                              ; preds = %327, %337
  %334 = phi i64 [ %335, %337 ], [ %315, %327 ]
  %335 = add nuw i64 %334, 1
  store i64 %335, i64* %12, align 8
  %336 = icmp ult i64 %335, %325
  br i1 %336, label %337, label %312

337:                                              ; preds = %333
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %335, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %333, label %312

342:                                              ; preds = %2, %299
  ret void

343:                                              ; preds = %281
  %344 = ptrtoint i8* %284 to i64
  %345 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %346 = inttoptr i64 %282 to i64*
  store i64 %344, i64* %346, align 8
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %345, i64 1
  %348 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %347 to i64
  br label %349

349:                                              ; preds = %343, %281
  %350 = phi i64 [ %282, %281 ], [ %348, %343 ]
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  br i1 %353, label %360, label %354

354:                                              ; preds = %349
  %355 = ptrtoint i8* %352 to i64
  %356 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %357 = inttoptr i64 %350 to i64*
  store i64 %355, i64* %357, align 8
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %359 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %358 to i64
  br label %360

360:                                              ; preds = %354, %349
  %361 = phi i64 [ %350, %349 ], [ %359, %354 ]
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %371, label %365

365:                                              ; preds = %360
  %366 = ptrtoint i8* %363 to i64
  %367 = inttoptr i64 %361 to %"class.base::internal::UncheckedObserverAdapter"*
  %368 = inttoptr i64 %361 to i64*
  store i64 %366, i64* %368, align 8
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %367, i64 1
  %370 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %369 to i64
  br label %371

371:                                              ; preds = %365, %360
  %372 = phi i64 [ %361, %360 ], [ %370, %365 ]
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %374 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %373, %221
  br i1 %374, label %286, label %269

375:                                              ; preds = %188
  %376 = ptrtoint i8* %191 to i64
  %377 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %378 = inttoptr i64 %189 to i64*
  store i64 %376, i64* %378, align 8
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %377, i64 1
  %380 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %379 to i64
  br label %381

381:                                              ; preds = %375, %188
  %382 = phi i64 [ %189, %188 ], [ %380, %375 ]
  %383 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = icmp eq i8* %384, null
  br i1 %385, label %392, label %386

386:                                              ; preds = %381
  %387 = ptrtoint i8* %384 to i64
  %388 = inttoptr i64 %382 to %"class.base::internal::UncheckedObserverAdapter"*
  %389 = inttoptr i64 %382 to i64*
  store i64 %387, i64* %389, align 8
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %388, i64 1
  %391 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %390 to i64
  br label %392

392:                                              ; preds = %386, %381
  %393 = phi i64 [ %382, %381 ], [ %391, %386 ]
  %394 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %395 = load i8*, i8** %394, align 8
  %396 = icmp eq i8* %395, null
  br i1 %396, label %403, label %397

397:                                              ; preds = %392
  %398 = ptrtoint i8* %395 to i64
  %399 = inttoptr i64 %393 to %"class.base::internal::UncheckedObserverAdapter"*
  %400 = inttoptr i64 %393 to i64*
  store i64 %398, i64* %400, align 8
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %399, i64 1
  %402 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %401 to i64
  br label %403

403:                                              ; preds = %397, %392
  %404 = phi i64 [ %393, %392 ], [ %402, %397 ]
  %405 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %406 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %405, %128
  br i1 %406, label %193, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetectorC2EPKN4base5ClockEPKNS0_9TickClockE(%class.UpgradeDetector*, %"class.base::Clock"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV15UpgradeDetector, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 1
  store %"class.base::Clock"* %1, %"class.base::Clock"** %5, align 8
  %6 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 2
  store %"class.base::TickClock"* %2, %"class.base::TickClock"** %6, align 8
  %7 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 3
  tail call void @_ZN19PrefChangeRegistrarC1Ev(%class.PrefChangeRegistrar* %7) #13
  %8 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 5, i32 0, i32 0
  %10 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 9
  %11 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 11, i1 false)
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %6, align 8
  tail call void @_ZN4base14RepeatingTimerC1EPKNS_9TickClockE(%"class.base::RepeatingTimer"* %10, %"class.base::TickClock"* %12) #13
  %13 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 10
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 11
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %16 = bitcast %"class.base::ObserverList"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #13
  %17 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17) #13
  %18 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  store i32 0, i32* %19, align 8
  ret void
}

declare void @_ZN19PrefChangeRegistrarC1Ev(%class.PrefChangeRegistrar*) unnamed_addr #1

declare void @_ZN4base14RepeatingTimerC1EPKNS_9TickClockE(%"class.base::RepeatingTimer"*, %"class.base::TickClock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetectorD2Ev(%class.UpgradeDetector*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV15UpgradeDetector, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #13
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 9
  tail call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %30) #13
  %31 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 3
  tail call void @_ZN19PrefChangeRegistrarD1Ev(%class.PrefChangeRegistrar* %31) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN19PrefChangeRegistrarD1Ev(%class.PrefChangeRegistrar*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetectorD0Ev(%class.UpgradeDetector* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector21NotifyOutdatedInstallEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %341, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !16
  %16 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !16
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br i1 %18, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.base::ObserverList"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !16
  br label %62

22:                                               ; preds = %8
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %10, align 8, !alias.scope !16
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #13
  store i64 0, i64* %11, align 8, !alias.scope !16
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !16
  %30 = bitcast %"class.base::ObserverList"* %4 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !16
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !16
  %36 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8, !alias.scope !16
  %37 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !16
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13, !alias.scope !19
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  br label %71

71:                                               ; preds = %311, %62
  %72 = phi %"class.base::ObserverList"* [ %70, %62 ], [ %309, %311 ]
  %73 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !22

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %402
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %172, %170 ]
  %177 = phi i64 [ %403, %402 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %380, label %374

192:                                              ; preds = %402, %170
  %193 = phi i64 [ %171, %170 ], [ %403, %402 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = bitcast %"class.base::LinkedList"* %209 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !23

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %370
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %265, %263 ]
  %270 = phi i64 [ %371, %370 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %348, label %342

285:                                              ; preds = %370, %263
  %286 = phi i64 [ %264, %263 ], [ %371, %370 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  br label %341

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %class.UpgradeObserver**
  %304 = load %class.UpgradeObserver*, %class.UpgradeObserver** %303, align 8
  %305 = bitcast %class.UpgradeObserver* %304 to void (%class.UpgradeObserver*)***
  %306 = load void (%class.UpgradeObserver*)**, void (%class.UpgradeObserver*)*** %305, align 8
  %307 = getelementptr inbounds void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %306, i64 4
  %308 = load void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %307, align 8
  call void %308(%class.UpgradeObserver* %304) #13
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %311, label %312

311:                                              ; preds = %336, %332, %299, %312, %326
  br label %71

312:                                              ; preds = %299
  %313 = load i64, i64* %11, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %11, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 1
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::ObserverList"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %317, %319
  %321 = ashr exact i64 %320, 3
  %322 = load i64, i64* %12, align 8
  %323 = icmp ult i64 %321, %322
  %324 = select i1 %323, i64 %321, i64 %322
  %325 = icmp ult i64 %314, %324
  br i1 %325, label %326, label %311

326:                                              ; preds = %312
  %327 = inttoptr i64 %319 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 %314, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %332, label %311

332:                                              ; preds = %326, %336
  %333 = phi i64 [ %334, %336 ], [ %314, %326 ]
  %334 = add nuw i64 %333, 1
  store i64 %334, i64* %11, align 8
  %335 = icmp ult i64 %334, %324
  br i1 %335, label %336, label %311

336:                                              ; preds = %332
  %337 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %334, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %332, label %311

341:                                              ; preds = %1, %298
  ret void

342:                                              ; preds = %280
  %343 = ptrtoint i8* %283 to i64
  %344 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %281 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %280
  %349 = phi i64 [ %281, %280 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %220
  br i1 %373, label %285, label %268

374:                                              ; preds = %187
  %375 = ptrtoint i8* %190 to i64
  %376 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %188 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %187
  %381 = phi i64 [ %188, %187 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %127
  br i1 %405, label %192, label %175
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector33NotifyOutdatedInstallNoAutoUpdateEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %341, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !24
  %16 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !24
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br i1 %18, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.base::ObserverList"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !24
  br label %62

22:                                               ; preds = %8
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %10, align 8, !alias.scope !24
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #13
  store i64 0, i64* %11, align 8, !alias.scope !24
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !24
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !24
  %30 = bitcast %"class.base::ObserverList"* %4 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !24
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !24
  %36 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8, !alias.scope !24
  %37 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !24
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13, !alias.scope !27
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  br label %71

71:                                               ; preds = %311, %62
  %72 = phi %"class.base::ObserverList"* [ %70, %62 ], [ %309, %311 ]
  %73 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !30

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %402
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %172, %170 ]
  %177 = phi i64 [ %403, %402 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %380, label %374

192:                                              ; preds = %402, %170
  %193 = phi i64 [ %171, %170 ], [ %403, %402 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = bitcast %"class.base::LinkedList"* %209 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !31

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %370
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %265, %263 ]
  %270 = phi i64 [ %371, %370 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %348, label %342

285:                                              ; preds = %370, %263
  %286 = phi i64 [ %264, %263 ], [ %371, %370 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  br label %341

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %class.UpgradeObserver**
  %304 = load %class.UpgradeObserver*, %class.UpgradeObserver** %303, align 8
  %305 = bitcast %class.UpgradeObserver* %304 to void (%class.UpgradeObserver*)***
  %306 = load void (%class.UpgradeObserver*)**, void (%class.UpgradeObserver*)*** %305, align 8
  %307 = getelementptr inbounds void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %306, i64 5
  %308 = load void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %307, align 8
  call void %308(%class.UpgradeObserver* %304) #13
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %311, label %312

311:                                              ; preds = %336, %332, %299, %312, %326
  br label %71

312:                                              ; preds = %299
  %313 = load i64, i64* %11, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %11, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 1
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::ObserverList"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %317, %319
  %321 = ashr exact i64 %320, 3
  %322 = load i64, i64* %12, align 8
  %323 = icmp ult i64 %321, %322
  %324 = select i1 %323, i64 %321, i64 %322
  %325 = icmp ult i64 %314, %324
  br i1 %325, label %326, label %311

326:                                              ; preds = %312
  %327 = inttoptr i64 %319 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 %314, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %332, label %311

332:                                              ; preds = %326, %336
  %333 = phi i64 [ %334, %336 ], [ %314, %326 ]
  %334 = add nuw i64 %333, 1
  store i64 %334, i64* %11, align 8
  %335 = icmp ult i64 %334, %324
  br i1 %335, label %336, label %311

336:                                              ; preds = %332
  %337 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %334, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %332, label %311

341:                                              ; preds = %1, %298
  ret void

342:                                              ; preds = %280
  %343 = ptrtoint i8* %283 to i64
  %344 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %281 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %280
  %349 = phi i64 [ %281, %280 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %220
  br i1 %373, label %285, label %268

374:                                              ; preds = %187
  %375 = ptrtoint i8* %190 to i64
  %376 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %188 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %187
  %381 = phi i64 [ %188, %187 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %127
  br i1 %405, label %192, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15UpgradeDetector29GetRelaunchNotificationPeriodEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %3 = bitcast %class.BrowserProcess* %2 to %class.PrefService* (%class.BrowserProcess*)***
  %4 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %3, align 8
  %5 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %4, i64 7
  %6 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %5, align 8
  %7 = tail call %class.PrefService* %6(%class.BrowserProcess* %2) #13
  %8 = icmp eq %class.PrefService* %7, null
  br i1 %8, label %55, label %9

9:                                                ; preds = %0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs27kRelaunchNotificationPeriodE, i64 0, i64 0)) #13
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #14
  unreachable

15:                                               ; preds = %9
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #15
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %10, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs27kRelaunchNotificationPeriodE, i64 0, i64 0), i64 %11, i1 false) #13
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %10, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  %38 = call %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #13
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %34, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  %46 = call %"class.base::Value"* @_ZNK11PrefService10Preference8GetValueEv(%"class.PrefService::Preference"* %38) #13
  %47 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* %46) #13
  %48 = call zeroext i1 @_ZNK11PrefService10Preference14IsDefaultValueEv(%"class.PrefService::Preference"* %38) #13
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = sext i32 %47 to i64
  %51 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull @_ZZN15UpgradeDetector29GetRelaunchNotificationPeriodEvE9kMinValue) #13
  %52 = icmp sgt i64 %51, %50
  %53 = mul nsw i64 %50, 1000
  %54 = select i1 %52, i64 0, i64 %53
  ret i64 %54

55:                                               ; preds = %45, %0
  ret i64 0
}

declare %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK11PrefService10Preference8GetValueEv(%"class.PrefService::Preference"*) local_unnamed_addr #1

declare i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11PrefService10Preference14IsDefaultValueEv(%"class.PrefService::Preference"*) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15UpgradeDetector35IsRelaunchNotificationPolicyEnabledEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %3 = bitcast %class.BrowserProcess* %2 to %class.PrefService* (%class.BrowserProcess*)***
  %4 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %3, align 8
  %5 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %4, i64 7
  %6 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %5, align 8
  %7 = tail call %class.PrefService* %6(%class.BrowserProcess* %2) #13
  %8 = icmp eq %class.PrefService* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kRelaunchNotificationE, i64 0, i64 0)) #13
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #14
  unreachable

15:                                               ; preds = %9
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #15
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %10, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kRelaunchNotificationE, i64 0, i64 0), i64 %11, i1 false) #13
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %10, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  %38 = call i32 @_ZNK11PrefService10GetIntegerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #13
  %39 = icmp ne i32 %38, 0
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %34, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br label %47

47:                                               ; preds = %0, %46
  %48 = phi i1 [ %39, %46 ], [ false, %0 ]
  ret i1 %48
}

declare i32 @_ZNK11PrefService10GetIntegerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15UpgradeDetector14AdjustDeadlineEN4base4TimeE(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"struct.UpgradeDetector::RelaunchWindow", align 8
  %6 = bitcast %"struct.UpgradeDetector::RelaunchWindow"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"struct.UpgradeDetector::RelaunchWindow", %"struct.UpgradeDetector::RelaunchWindow"* %5, i64 0, i32 2, i32 0
  %8 = tail call { i64, i64 } @_ZN15UpgradeDetector17GetRelaunchWindowEv()
  %9 = bitcast %"struct.UpgradeDetector::RelaunchWindow"* %5 to i64*
  %10 = extractvalue { i64, i64 } %8, 0
  store i64 %10, i64* %9, align 8
  %11 = extractvalue { i64, i64 } %8, 1
  store i64 %11, i64* %7, align 8
  %12 = icmp sgt i64 %11, 86399999999
  br i1 %12, label %107, label %13

13:                                               ; preds = %1
  %14 = call fastcc i64 @_ZN12_GLOBAL__N_132ComputeRelaunchWindowStartForDayERKN15UpgradeDetector14RelaunchWindowEN4base4TimeE(%"struct.UpgradeDetector::RelaunchWindow"* nonnull dereferenceable(16) %5, i64 %0)
  %15 = add i64 %11, -9223372036854775807
  %16 = icmp ult i64 %15, 2
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = add i64 %14, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = icmp eq i64 %14, %11
  %21 = or i1 %20, %19
  br i1 %21, label %33, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %33

25:                                               ; preds = %13
  %26 = icmp slt i64 %11, 0
  %27 = select i1 %26, i64 -9223372036854775808, i64 9223372036854775807
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 %11) #13
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 %27, i64 %30, !prof !32
  %32 = icmp sgt i64 %31, %0
  br i1 %32, label %73, label %33

33:                                               ; preds = %22, %17, %25
  %34 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 86400000000) #13
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 9223372036854775807, i64 %36, !prof !32
  %38 = call fastcc i64 @_ZN12_GLOBAL__N_132ComputeRelaunchWindowStartForDayERKN15UpgradeDetector14RelaunchWindowEN4base4TimeE(%"struct.UpgradeDetector::RelaunchWindow"* nonnull dereferenceable(16) %5, i64 %37)
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 93600000000) #13
  br label %47

42:                                               ; preds = %33
  %43 = sub nsw i64 %38, %14
  %44 = icmp sgt i64 %43, 93599999999
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 82800000000) #13
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi { i64, i1 } [ %46, %45 ], [ %41, %40 ]
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 9223372036854775807, i64 %50
  %52 = call fastcc i64 @_ZN12_GLOBAL__N_132ComputeRelaunchWindowStartForDayERKN15UpgradeDetector14RelaunchWindowEN4base4TimeE(%"struct.UpgradeDetector::RelaunchWindow"* nonnull dereferenceable(16) %5, i64 %51)
  br label %53

53:                                               ; preds = %47, %42
  %54 = phi i64 [ %38, %42 ], [ %52, %47 ]
  %55 = call i64 @_ZN4base13RandGeneratorEm(i64 %11) #13
  %56 = add i64 %55, -9223372036854775807
  %57 = icmp ult i64 %56, 2
  br i1 %57, label %65, label %58

58:                                               ; preds = %53
  %59 = icmp slt i64 %55, 0
  %60 = select i1 %59, i64 -9223372036854775808, i64 9223372036854775807
  %61 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %54, i64 %55) #13
  %62 = extractvalue { i64, i1 } %61, 1
  %63 = extractvalue { i64, i1 } %61, 0
  %64 = select i1 %62, i64 %60, i64 %63, !prof !32
  br label %107

65:                                               ; preds = %53
  %66 = add i64 %54, -9223372036854775807
  %67 = icmp ugt i64 %66, 1
  %68 = icmp eq i64 %54, %55
  %69 = or i1 %68, %67
  br i1 %69, label %107, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #13
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  br label %107

73:                                               ; preds = %25
  %74 = icmp sgt i64 %14, %0
  br i1 %74, label %75, label %107

75:                                               ; preds = %73
  %76 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 -86400000000)
  %77 = extractvalue { i64, i1 } %76, 1
  %78 = extractvalue { i64, i1 } %76, 0
  %79 = select i1 %77, i64 -9223372036854775808, i64 %78, !prof !32
  %80 = call fastcc i64 @_ZN12_GLOBAL__N_132ComputeRelaunchWindowStartForDayERKN15UpgradeDetector14RelaunchWindowEN4base4TimeE(%"struct.UpgradeDetector::RelaunchWindow"* nonnull dereferenceable(16) %5, i64 %79)
  %81 = icmp slt i64 %11, 0
  %82 = select i1 %81, i64 -9223372036854775808, i64 9223372036854775807
  %83 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %80, i64 %11) #13
  %84 = extractvalue { i64, i1 } %83, 1
  %85 = extractvalue { i64, i1 } %83, 0
  %86 = select i1 %84, i64 %82, i64 %85, !prof !32
  %87 = icmp sgt i64 %86, %0
  br i1 %87, label %107, label %88

88:                                               ; preds = %75
  %89 = call i64 @_ZN4base13RandGeneratorEm(i64 %11) #13
  %90 = add i64 %89, -9223372036854775807
  %91 = icmp ult i64 %90, 2
  br i1 %91, label %99, label %92

92:                                               ; preds = %88
  %93 = icmp slt i64 %89, 0
  %94 = select i1 %93, i64 -9223372036854775808, i64 9223372036854775807
  %95 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 %89) #13
  %96 = extractvalue { i64, i1 } %95, 1
  %97 = extractvalue { i64, i1 } %95, 0
  %98 = select i1 %96, i64 %94, i64 %97, !prof !32
  br label %107

99:                                               ; preds = %88
  %100 = add i64 %14, -9223372036854775807
  %101 = icmp ugt i64 %100, 1
  %102 = icmp eq i64 %14, %89
  %103 = or i1 %101, %102
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #13
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13
  br label %107

107:                                              ; preds = %73, %58, %65, %70, %104, %99, %92, %75, %1
  %108 = phi i64 [ %0, %1 ], [ %64, %58 ], [ %55, %65 ], [ %55, %70 ], [ %0, %73 ], [ %0, %75 ], [ %98, %92 ], [ %89, %99 ], [ %89, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret i64 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN15UpgradeDetector17GetRelaunchWindowEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::CheckedContiguousIterator", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %4 = bitcast %class.BrowserProcess* %3 to %class.PrefService* (%class.BrowserProcess*)***
  %5 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %4, align 8
  %6 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %5, i64 7
  %7 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %6, align 8
  %8 = tail call %class.PrefService* %7(%class.BrowserProcess* %3) #13
  %9 = icmp eq %class.PrefService* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %0
  %11 = tail call { i64, i64 } @_ZN15UpgradeDetector24GetDefaultRelaunchWindowEv() #13
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  br label %113

14:                                               ; preds = %0
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs15kRelaunchWindowE, i64 0, i64 0)) #13
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %19) #14
  unreachable

20:                                               ; preds = %14
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %31, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #15
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %29, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %36

31:                                               ; preds = %20
  %32 = trunc i64 %16 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %22
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %30, %22 ]
  %38 = phi i8* [ %15, %31 ], [ %25, %22 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs15kRelaunchWindowE, i64 0, i64 0), i64 %16, i1 false) #13
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %37, %36 ]
  %41 = phi i8* [ %15, %31 ], [ %38, %36 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %16
  store i8 0, i8* %42, align 1
  %43 = call %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #13
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %39, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  %51 = call zeroext i1 @_ZNK11PrefService10Preference14IsDefaultValueEv(%"class.PrefService::Preference"* %43) #13
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = call { i64, i64 } @_ZN15UpgradeDetector24GetDefaultRelaunchWindowEv() #13
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = extractvalue { i64, i64 } %53, 1
  br label %113

56:                                               ; preds = %50
  %57 = call %"class.base::Value"* @_ZNK11PrefService10Preference8GetValueEv(%"class.PrefService::Preference"* %43) #13
  %58 = call %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #13
  %59 = icmp eq %"class.base::Value"* %58, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = call %"class.std::__1::vector.126"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %58) #13
  %62 = icmp eq %"class.std::__1::vector.126"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %61, i64 0, i32 0, i32 0
  %65 = load %"class.base::Value"*, %"class.base::Value"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %61, i64 0, i32 0, i32 1
  %67 = load %"class.base::Value"*, %"class.base::Value"** %66, align 8
  %68 = icmp eq %"class.base::Value"* %65, %67
  br i1 %68, label %69, label %73

69:                                               ; preds = %60, %56, %63
  %70 = call { i64, i64 } @_ZN15UpgradeDetector24GetDefaultRelaunchWindowEv() #13
  %71 = extractvalue { i64, i64 } %70, 0
  %72 = extractvalue { i64, i64 } %70, 1
  br label %113

73:                                               ; preds = %63
  %74 = call %"class.std::__1::vector.126"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %58) #13
  %75 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #13
  %76 = icmp eq %"class.std::__1::vector.126"* %74, null
  br i1 %76, label %86, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %74, i64 0, i32 0, i32 0
  %79 = load %"class.base::Value"*, %"class.base::Value"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %74, i64 0, i32 0, i32 1
  %81 = bitcast %"class.base::Value"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint %"class.base::Value"* %79 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 5
  br label %86

86:                                               ; preds = %73, %77
  %87 = phi %"class.base::Value"* [ %79, %77 ], [ null, %73 ]
  %88 = phi i64 [ %85, %77 ], [ 0, %73 ]
  %89 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %87, i64 %88
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %1, %"class.base::Value"* %87, %"class.base::Value"* %87, %"class.base::Value"* %89) #13
  %90 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %1) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  %91 = call i64 @_ZNK4base5Value11FindIntPathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10) #13
  %92 = trunc i64 %91 to i8
  %93 = call i64 @_ZNK4base5Value11FindIntPathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %90, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12) #13
  %94 = trunc i64 %93 to i8
  %95 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %90, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i64 13) #13
  %96 = trunc i64 %95 to i8
  %97 = icmp ne i8 %92, 0
  %98 = icmp ne i8 %94, 0
  %99 = and i1 %97, %98
  %100 = icmp ne i8 %96, 0
  %101 = and i1 %99, %100
  br i1 %101, label %106, label %102

102:                                              ; preds = %86
  %103 = call { i64, i64 } @_ZN15UpgradeDetector24GetDefaultRelaunchWindowEv() #13
  %104 = extractvalue { i64, i64 } %103, 0
  %105 = extractvalue { i64, i64 } %103, 1
  br label %113

106:                                              ; preds = %86
  %107 = lshr i64 %91, 32
  %108 = and i64 %95, -4294967296
  %109 = icmp eq i64 %108, 9223372032559808512
  %110 = ashr i64 %95, 32
  %111 = mul nsw i64 %110, 60000000
  %112 = select i1 %109, i64 9223372036854775807, i64 %111
  br label %113

113:                                              ; preds = %102, %106, %52, %69, %10
  %114 = phi i64 [ %12, %10 ], [ %54, %52 ], [ %71, %69 ], [ %107, %106 ], [ %104, %102 ]
  %115 = phi i64 [ %12, %10 ], [ %54, %52 ], [ %71, %69 ], [ %93, %106 ], [ %104, %102 ]
  %116 = phi i64 [ %13, %10 ], [ %55, %52 ], [ %72, %69 ], [ %112, %106 ], [ %105, %102 ]
  %117 = and i64 %115, -4294967296
  %118 = and i64 %114, 4294967295
  %119 = or i64 %117, %118
  %120 = insertvalue { i64, i64 } undef, i64 %119, 0
  %121 = insertvalue { i64, i64 } %120, i64 %116, 1
  ret { i64, i64 } %121
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_132ComputeRelaunchWindowStartForDayERKN15UpgradeDetector14RelaunchWindowEN4base4TimeE(%"struct.UpgradeDetector::RelaunchWindow"* nocapture readonly dereferenceable(16), i64) unnamed_addr #0 {
  %3 = alloca %"class.base::Time", align 8
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"struct.base::Time::Exploded", align 4
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = bitcast %"struct.base::Time::Exploded"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %5, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %5, i64 0, i32 5
  %11 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %5, i64 0, i32 6
  %12 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %5, i64 0, i32 7
  %13 = bitcast %"struct.base::Time::Exploded"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false)
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* nonnull %4, i1 zeroext true, %"struct.base::Time::Exploded"* nonnull %5) #13
  %14 = getelementptr inbounds %"struct.UpgradeDetector::RelaunchWindow", %"struct.UpgradeDetector::RelaunchWindow"* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %9, align 4
  %16 = getelementptr inbounds %"struct.UpgradeDetector::RelaunchWindow", %"struct.UpgradeDetector::RelaunchWindow"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %18 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext true, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %5, %"class.base::Time"* nonnull %3) #13
  br i1 %19, label %29, label %20

20:                                               ; preds = %2
  %21 = load i32, i32* %9, align 4
  %22 = icmp slt i32 %21, 23
  %23 = select i1 %22, i32 1, i32 -1
  %24 = add nsw i32 %23, %21
  store i32 %24, i32* %9, align 4
  %25 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext true, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %5, %"class.base::Time"* nonnull %3) #13
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0)) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %26, %20, %2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  %30 = load i64, i64* %18, align 8
  ret i64 %30
}

declare { i64, i64 } @_ZN15UpgradeDetector24GetDefaultRelaunchWindowEv() local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare %"class.std::__1::vector.126"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

declare i64 @_ZNK4base5Value11FindIntPathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector13NotifyUpgradeEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 11
  %6 = zext i1 %4 to i8
  store i8 %6, i8* %5, align 4
  tail call void @_ZN15UpgradeDetector24NotifyUpgradeRecommendedEv(%class.UpgradeDetector* %0)
  %7 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %11 [
    i32 3, label %9
    i32 4, label %10
    i32 2, label %15
  ]

9:                                                ; preds = %1
  tail call void @_ZN15UpgradeDetector21NotifyOutdatedInstallEv(%class.UpgradeDetector* %0)
  br label %20

10:                                               ; preds = %1
  tail call void @_ZN15UpgradeDetector33NotifyOutdatedInstallNoAutoUpdateEv(%class.UpgradeDetector* %0)
  br label %20

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 1, !range !33
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %1, %11
  %16 = bitcast %class.UpgradeDetector* %0 to void (%class.UpgradeDetector*)***
  %17 = load void (%class.UpgradeDetector*)**, void (%class.UpgradeDetector*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.UpgradeDetector*)*, void (%class.UpgradeDetector*)** %17, i64 8
  %19 = load void (%class.UpgradeDetector*)*, void (%class.UpgradeDetector*)** %18, align 8
  tail call void %19(%class.UpgradeDetector* %0) #13
  br label %20

20:                                               ; preds = %11, %10, %15, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector24NotifyUpgradeRecommendedEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %341, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !34
  %16 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !34
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br i1 %18, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.base::ObserverList"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !34
  br label %62

22:                                               ; preds = %8
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %10, align 8, !alias.scope !34
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #13
  store i64 0, i64* %11, align 8, !alias.scope !34
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !34
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !34
  %30 = bitcast %"class.base::ObserverList"* %4 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !34
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !34
  %36 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8, !alias.scope !34
  %37 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !34
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13, !alias.scope !37
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  br label %71

71:                                               ; preds = %311, %62
  %72 = phi %"class.base::ObserverList"* [ %70, %62 ], [ %309, %311 ]
  %73 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !40

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %402
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %172, %170 ]
  %177 = phi i64 [ %403, %402 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %380, label %374

192:                                              ; preds = %402, %170
  %193 = phi i64 [ %171, %170 ], [ %403, %402 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = bitcast %"class.base::LinkedList"* %209 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !41

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %370
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %265, %263 ]
  %270 = phi i64 [ %371, %370 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %348, label %342

285:                                              ; preds = %370, %263
  %286 = phi i64 [ %264, %263 ], [ %371, %370 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  br label %341

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %class.UpgradeObserver**
  %304 = load %class.UpgradeObserver*, %class.UpgradeObserver** %303, align 8
  %305 = bitcast %class.UpgradeObserver* %304 to void (%class.UpgradeObserver*)***
  %306 = load void (%class.UpgradeObserver*)**, void (%class.UpgradeObserver*)*** %305, align 8
  %307 = getelementptr inbounds void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %306, i64 2
  %308 = load void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %307, align 8
  call void %308(%class.UpgradeObserver* %304) #13
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %311, label %312

311:                                              ; preds = %336, %332, %299, %312, %326
  br label %71

312:                                              ; preds = %299
  %313 = load i64, i64* %11, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %11, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 1
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::ObserverList"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %317, %319
  %321 = ashr exact i64 %320, 3
  %322 = load i64, i64* %12, align 8
  %323 = icmp ult i64 %321, %322
  %324 = select i1 %323, i64 %321, i64 %322
  %325 = icmp ult i64 %314, %324
  br i1 %325, label %326, label %311

326:                                              ; preds = %312
  %327 = inttoptr i64 %319 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 %314, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %332, label %311

332:                                              ; preds = %326, %336
  %333 = phi i64 [ %334, %336 ], [ %314, %326 ]
  %334 = add nuw i64 %333, 1
  store i64 %334, i64* %11, align 8
  %335 = icmp ult i64 %334, %324
  br i1 %335, label %336, label %311

336:                                              ; preds = %332
  %337 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %334, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %332, label %311

341:                                              ; preds = %1, %298
  ret void

342:                                              ; preds = %280
  %343 = ptrtoint i8* %283 to i64
  %344 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %281 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %280
  %349 = phi i64 [ %281, %280 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %220
  br i1 %373, label %285, label %268

374:                                              ; preds = %187
  %375 = ptrtoint i8* %190 to i64
  %376 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %188 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %187
  %381 = phi i64 [ %188, %187 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %127
  br i1 %405, label %192, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector30NotifyCriticalUpgradeInstalledEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %341, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !42
  %16 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !42
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br i1 %18, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.base::ObserverList"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !42
  br label %62

22:                                               ; preds = %8
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %10, align 8, !alias.scope !42
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #13
  store i64 0, i64* %11, align 8, !alias.scope !42
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !42
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !42
  %30 = bitcast %"class.base::ObserverList"* %4 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !42
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !42
  %36 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8, !alias.scope !42
  %37 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !42
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13, !alias.scope !45
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  br label %71

71:                                               ; preds = %311, %62
  %72 = phi %"class.base::ObserverList"* [ %70, %62 ], [ %309, %311 ]
  %73 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !48

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %402
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %172, %170 ]
  %177 = phi i64 [ %403, %402 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %380, label %374

192:                                              ; preds = %402, %170
  %193 = phi i64 [ %171, %170 ], [ %403, %402 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = bitcast %"class.base::LinkedList"* %209 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !49

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %370
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %265, %263 ]
  %270 = phi i64 [ %371, %370 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %348, label %342

285:                                              ; preds = %370, %263
  %286 = phi i64 [ %264, %263 ], [ %371, %370 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  br label %341

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %class.UpgradeObserver**
  %304 = load %class.UpgradeObserver*, %class.UpgradeObserver** %303, align 8
  %305 = bitcast %class.UpgradeObserver* %304 to void (%class.UpgradeObserver*)***
  %306 = load void (%class.UpgradeObserver*)**, void (%class.UpgradeObserver*)*** %305, align 8
  %307 = getelementptr inbounds void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %306, i64 3
  %308 = load void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %307, align 8
  call void %308(%class.UpgradeObserver* %304) #13
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %311, label %312

311:                                              ; preds = %336, %332, %299, %312, %326
  br label %71

312:                                              ; preds = %299
  %313 = load i64, i64* %11, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %11, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 1
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::ObserverList"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %317, %319
  %321 = ashr exact i64 %320, 3
  %322 = load i64, i64* %12, align 8
  %323 = icmp ult i64 %321, %322
  %324 = select i1 %323, i64 %321, i64 %322
  %325 = icmp ult i64 %314, %324
  br i1 %325, label %326, label %311

326:                                              ; preds = %312
  %327 = inttoptr i64 %319 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 %314, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %332, label %311

332:                                              ; preds = %326, %336
  %333 = phi i64 [ %334, %336 ], [ %314, %326 ]
  %334 = add nuw i64 %333, 1
  store i64 %334, i64* %11, align 8
  %335 = icmp ult i64 %334, %324
  br i1 %335, label %336, label %311

336:                                              ; preds = %332
  %337 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %334, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %332, label %311

341:                                              ; preds = %1, %298
  ret void

342:                                              ; preds = %280
  %343 = ptrtoint i8* %283 to i64
  %344 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %281 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %280
  %349 = phi i64 [ %281, %280 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %220
  br i1 %373, label %285, label %268

374:                                              ; preds = %187
  %375 = ptrtoint i8* %190 to i64
  %376 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %188 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %187
  %381 = phi i64 [ %188, %187 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %127
  br i1 %405, label %192, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector33NotifyUpdateOverCellularAvailableEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %340, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !50
  %16 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !50
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br i1 %18, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.base::ObserverList"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !50
  br label %62

22:                                               ; preds = %8
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %10, align 8, !alias.scope !50
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #13
  store i64 0, i64* %11, align 8, !alias.scope !50
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !50
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !50
  %30 = bitcast %"class.base::ObserverList"* %4 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !50
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !50
  %36 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8, !alias.scope !50
  %37 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !50
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13, !alias.scope !53
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  br label %71

71:                                               ; preds = %310, %62
  %72 = phi %"class.base::ObserverList"* [ %70, %62 ], [ %308, %310 ]
  %73 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !56

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %401
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %403, %401 ], [ %172, %170 ]
  %177 = phi i64 [ %402, %401 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %379, label %373

192:                                              ; preds = %401, %170
  %193 = phi i64 [ %171, %170 ], [ %402, %401 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = bitcast %"class.base::LinkedList"* %209 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !57

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %369
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %371, %369 ], [ %265, %263 ]
  %270 = phi i64 [ %370, %369 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %347, label %341

285:                                              ; preds = %369, %263
  %286 = phi i64 [ %264, %263 ], [ %370, %369 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  br label %340

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %class.UpgradeObserver**
  %304 = load %class.UpgradeObserver*, %class.UpgradeObserver** %303, align 8
  %305 = bitcast %class.UpgradeObserver* %304 to void (%class.UpgradeObserver*)***
  %306 = load void (%class.UpgradeObserver*)**, void (%class.UpgradeObserver*)*** %305, align 8
  %307 = load void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %306, align 8
  call void %307(%class.UpgradeObserver* %304) #13
  %308 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %309 = icmp eq %"class.base::ObserverList"* %308, null
  br i1 %309, label %310, label %311

310:                                              ; preds = %335, %331, %299, %311, %325
  br label %71

311:                                              ; preds = %299
  %312 = load i64, i64* %11, align 8
  %313 = add i64 %312, 1
  store i64 %313, i64* %11, align 8
  %314 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %308, i64 0, i32 0, i32 0, i32 1
  %315 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.base::ObserverList"* %308 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %316, %318
  %320 = ashr exact i64 %319, 3
  %321 = load i64, i64* %12, align 8
  %322 = icmp ult i64 %320, %321
  %323 = select i1 %322, i64 %320, i64 %321
  %324 = icmp ult i64 %313, %323
  br i1 %324, label %325, label %310

325:                                              ; preds = %311
  %326 = inttoptr i64 %318 to %"class.base::internal::UncheckedObserverAdapter"*
  %327 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %308, i64 0, i32 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 %313, i32 0
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %331, label %310

331:                                              ; preds = %325, %335
  %332 = phi i64 [ %333, %335 ], [ %313, %325 ]
  %333 = add nuw i64 %332, 1
  store i64 %333, i64* %11, align 8
  %334 = icmp ult i64 %333, %323
  br i1 %334, label %335, label %310

335:                                              ; preds = %331
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %327, align 8
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %333, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %331, label %310

340:                                              ; preds = %1, %298
  ret void

341:                                              ; preds = %280
  %342 = ptrtoint i8* %283 to i64
  %343 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %344 = inttoptr i64 %281 to i64*
  store i64 %342, i64* %344, align 8
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %343, i64 1
  %346 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %345 to i64
  br label %347

347:                                              ; preds = %341, %280
  %348 = phi i64 [ %281, %280 ], [ %346, %341 ]
  %349 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %358, label %352

352:                                              ; preds = %347
  %353 = ptrtoint i8* %350 to i64
  %354 = inttoptr i64 %348 to %"class.base::internal::UncheckedObserverAdapter"*
  %355 = inttoptr i64 %348 to i64*
  store i64 %353, i64* %355, align 8
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %354, i64 1
  %357 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %356 to i64
  br label %358

358:                                              ; preds = %352, %347
  %359 = phi i64 [ %348, %347 ], [ %357, %352 ]
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %369, label %363

363:                                              ; preds = %358
  %364 = ptrtoint i8* %361 to i64
  %365 = inttoptr i64 %359 to %"class.base::internal::UncheckedObserverAdapter"*
  %366 = inttoptr i64 %359 to i64*
  store i64 %364, i64* %366, align 8
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 1
  %368 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %367 to i64
  br label %369

369:                                              ; preds = %363, %358
  %370 = phi i64 [ %359, %358 ], [ %368, %363 ]
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %372 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %371, %220
  br i1 %372, label %285, label %268

373:                                              ; preds = %187
  %374 = ptrtoint i8* %190 to i64
  %375 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = inttoptr i64 %188 to i64*
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 1
  %378 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %377 to i64
  br label %379

379:                                              ; preds = %373, %187
  %380 = phi i64 [ %188, %187 ], [ %378, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = icmp eq i8* %382, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %379
  %385 = ptrtoint i8* %382 to i64
  %386 = inttoptr i64 %380 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = inttoptr i64 %380 to i64*
  store i64 %385, i64* %387, align 8
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 1
  %389 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %388 to i64
  br label %390

390:                                              ; preds = %384, %379
  %391 = phi i64 [ %380, %379 ], [ %389, %384 ]
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp eq i8* %393, null
  br i1 %394, label %401, label %395

395:                                              ; preds = %390
  %396 = ptrtoint i8* %393 to i64
  %397 = inttoptr i64 %391 to %"class.base::internal::UncheckedObserverAdapter"*
  %398 = inttoptr i64 %391 to i64*
  store i64 %396, i64* %398, align 8
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %397, i64 1
  %400 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %399 to i64
  br label %401

401:                                              ; preds = %395, %390
  %402 = phi i64 [ %391, %390 ], [ %400, %395 ]
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %404 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %403, %127
  br i1 %404, label %192, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector48NotifyUpdateOverCellularOneTimePermissionGrantedEv(%class.UpgradeDetector*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %341, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !58
  %16 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !58
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br i1 %18, label %20, label %22

20:                                               ; preds = %8
  %21 = bitcast %"class.base::ObserverList"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !58
  br label %62

22:                                               ; preds = %8
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %10, align 8, !alias.scope !58
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #13
  store i64 0, i64* %11, align 8, !alias.scope !58
  %24 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !58
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !58
  %30 = bitcast %"class.base::ObserverList"* %4 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !58
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !58
  %36 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8, !alias.scope !58
  %37 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !58
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<UpgradeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  %69 = bitcast %"class.base::ObserverList"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13, !alias.scope !61
  %70 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  br label %71

71:                                               ; preds = %311, %62
  %72 = phi %"class.base::ObserverList"* [ %70, %62 ], [ %309, %311 ]
  %73 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !64

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %402
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %402 ], [ %172, %170 ]
  %177 = phi i64 [ %403, %402 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %380, label %374

192:                                              ; preds = %402, %170
  %193 = phi i64 [ %171, %170 ], [ %403, %402 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #13
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = bitcast %"class.base::LinkedList"* %209 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !65

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %370
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %372, %370 ], [ %265, %263 ]
  %270 = phi i64 [ %371, %370 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %348, label %342

285:                                              ; preds = %370, %263
  %286 = phi i64 [ %264, %263 ], [ %371, %370 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #13
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #13
  br label %341

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %class.UpgradeObserver**
  %304 = load %class.UpgradeObserver*, %class.UpgradeObserver** %303, align 8
  %305 = bitcast %class.UpgradeObserver* %304 to void (%class.UpgradeObserver*)***
  %306 = load void (%class.UpgradeObserver*)**, void (%class.UpgradeObserver*)*** %305, align 8
  %307 = getelementptr inbounds void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %306, i64 1
  %308 = load void (%class.UpgradeObserver*)*, void (%class.UpgradeObserver*)** %307, align 8
  call void %308(%class.UpgradeObserver* %304) #13
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %311, label %312

311:                                              ; preds = %336, %332, %299, %312, %326
  br label %71

312:                                              ; preds = %299
  %313 = load i64, i64* %11, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %11, align 8
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 1
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.base::ObserverList"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %317, %319
  %321 = ashr exact i64 %320, 3
  %322 = load i64, i64* %12, align 8
  %323 = icmp ult i64 %321, %322
  %324 = select i1 %323, i64 %321, i64 %322
  %325 = icmp ult i64 %314, %324
  br i1 %325, label %326, label %311

326:                                              ; preds = %312
  %327 = inttoptr i64 %319 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %309, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 %314, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %332, label %311

332:                                              ; preds = %326, %336
  %333 = phi i64 [ %334, %336 ], [ %314, %326 ]
  %334 = add nuw i64 %333, 1
  store i64 %334, i64* %11, align 8
  %335 = icmp ult i64 %334, %324
  br i1 %335, label %336, label %311

336:                                              ; preds = %332
  %337 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %334, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %332, label %311

341:                                              ; preds = %1, %298
  ret void

342:                                              ; preds = %280
  %343 = ptrtoint i8* %283 to i64
  %344 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %281 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %280
  %349 = phi i64 [ %281, %280 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = ptrtoint i8* %351 to i64
  %355 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %349 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %348
  %360 = phi i64 [ %349, %348 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %373 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %372, %220
  br i1 %373, label %285, label %268

374:                                              ; preds = %187
  %375 = ptrtoint i8* %190 to i64
  %376 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %188 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %187
  %381 = phi i64 [ %188, %187 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %405 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %127
  br i1 %405, label %192, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector21TriggerCriticalUpdateEv(%class.UpgradeDetector*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback.99", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #13
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kCheckForUpdateIntervalSecE, i64 0, i64 0)) #13
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kCheckForUpdateIntervalSecE, i64 0, i64 0), i64 %7) #13
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  br i1 %13, label %20, label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  br i1 %17, label %20, label %21

20:                                               ; preds = %14, %12
  br label %21

21:                                               ; preds = %14, %12, %20
  %22 = phi i64 [ 600000000, %20 ], [ 10000000, %12 ], [ 10000000, %14 ]
  %23 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 9
  %24 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i32 352) #13
  %25 = bitcast %"class.base::RepeatingCallback.99"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = ptrtoint %class.UpgradeDetector* %0 to i64
  %27 = call i8* @_Znwm(i64 56) #15, !noalias !66
  %28 = bitcast i8* %27 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %28, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !66
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector9CheckIdleEv to i64), i64 0>, <2 x i64>* %30, align 8, !noalias !66
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 8, !noalias !66
  %33 = bitcast %"class.base::RepeatingCallback.99"* %2 to i8**
  store i8* %27, i8** %33, align 8, !alias.scope !66
  %34 = bitcast %"class.base::RepeatingTimer"* %23 to void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)***
  %35 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)**, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)** %35, i64 7
  %37 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.99"*)** %36, align 8
  call void %37(%"class.base::RepeatingTimer"* %23, %"class.base::Location"* nonnull dereferenceable(32) %4, i64 %22, %"class.base::RepeatingCallback.99"* nonnull %2) #13
  %38 = getelementptr inbounds %"class.base::RepeatingCallback.99", %"class.base::RepeatingCallback.99"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #13
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector9CheckIdleEv(%class.UpgradeDetector*) #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call zeroext i1 @_ZN6chrome27IsOffTheRecordSessionActiveEv() #13
  br i1 %3, label %31, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN11BrowserList20GetGuestBrowserCountEv() #13
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %4
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #13
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kCheckForUpdateIntervalSecE, i64 0, i64 0)) #13
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kCheckForUpdateIntervalSecE, i64 0, i64 0), i64 %10) #13
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = icmp ne i8 %13, 0
  br label %23

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ne i64 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %15, %17
  %24 = phi i1 [ %16, %15 ], [ %20, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  %25 = select i1 %24, i32 2, i32 7200
  %26 = call i32 @_ZN2ui18CalculateIdleStateEi(i32 %25) #13
  switch i32 %26, label %31 [
    i32 2, label %27
    i32 1, label %29
  ]

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 9, i32 0
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %28) #13
  call void @_ZN6chrome14AttemptRestartEv() #13
  br label %31

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 9, i32 0
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %30) #13
  call void @_ZN15UpgradeDetector30NotifyCriticalUpgradeInstalledEv(%class.UpgradeDetector* %0)
  br label %31

31:                                               ; preds = %27, %29, %23, %4, %1
  ret void
}

declare zeroext i1 @_ZN6chrome27IsOffTheRecordSessionActiveEv() local_unnamed_addr #1

declare i64 @_ZN11BrowserList20GetGuestBrowserCountEv() local_unnamed_addr #1

declare i32 @_ZN2ui18CalculateIdleStateEi(i32) local_unnamed_addr #1

declare void @_ZN6chrome14AttemptRestartEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector11AddObserverEP15UpgradeObserver(%class.UpgradeDetector*, %class.UpgradeObserver*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13
  %4 = icmp eq %class.UpgradeObserver* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %class.UpgradeObserver* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %class.UpgradeObserver* %1 to i64
  %32 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #15
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #13
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15UpgradeDetector14RemoveObserverEP15UpgradeObserver(%class.UpgradeDetector*, %class.UpgradeObserver* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %class.UpgradeObserver* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %class.UpgradeDetector, %class.UpgradeDetector* %0, i64 0, i32 13, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15UpgradeDetector29OverrideHighAnnoyanceDeadlineEN4base4TimeE(%class.UpgradeDetector*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15UpgradeDetector23ResetOverriddenDeadlineEv(%class.UpgradeDetector*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare i64 @_ZN4base13RandGeneratorEm(i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %class.UpgradeDetector*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.UpgradeDetector*)**
  %21 = load void (%class.UpgradeDetector*)*, void (%class.UpgradeDetector*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%class.UpgradeDetector*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.UpgradeDetector*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.UpgradeDetector* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIM15UpgradeDetectorFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIM15UpgradeDetectorFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!22 = distinct !{!22, !14}
!23 = distinct !{!23, !14}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!30 = distinct !{!30, !14}
!31 = distinct !{!31, !14}
!32 = !{!"branch_weights", i32 1, i32 2000}
!33 = !{i8 0, i8 2}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!39 = distinct !{!39, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !14}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!44 = distinct !{!44, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!47 = distinct !{!47, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !14}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!52 = distinct !{!52, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!55 = distinct !{!55, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!60 = distinct !{!60, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!63 = distinct !{!63, !"_ZNK4base12ObserverListI15UpgradeObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!64 = distinct !{!64, !14}
!65 = distinct !{!65, !14}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!68 = distinct !{!68, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERM15UpgradeDetectorFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!69 = distinct !{!69, !70, !"_ZN4base13BindRepeatingIRM15UpgradeDetectorFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!70 = distinct !{!70, !"_ZN4base13BindRepeatingIRM15UpgradeDetectorFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
