; ModuleID = '../../third_party/blink/renderer/platform/weborigin/scheme_registry.cc'
source_filename = "../../third_party/blink/renderer/platform/weborigin/scheme_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::(anonymous namespace)::URLSchemesRegistry>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::(anonymous namespace)::URLSchemesRegistry>::InstanceStorage" = type { %"class.blink::(anonymous namespace)::URLSchemesRegistry"* }
%"class.blink::(anonymous namespace)::URLSchemesRegistry" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashMap", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.1" }
%"class.WTF::HashTable.1" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKPKcSC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF22IdentityHashTranslatorINS_10StringHashENS_10HashTraitsINS_6StringEEENS_18PartitionAllocatorEE9TranslateIS3_RKPKcS9_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

@.str = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"filesystem\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"wss\00", align 1
@_ZZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink14SchemeRegistry11PolicyAreasEEEEEPKcv = private unnamed_addr constant [114 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::SchemeRegistry::PolicyAreas>]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink35SetDomainRelaxationForbiddenForTestEbRKNS_9WebStringE(i1 zeroext, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #9
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %13, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %14, i64 0, i32 0
  br i1 %0, label %16, label %18

16:                                               ; preds = %12
  %17 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  br label %29

18:                                               ; preds = %12
  %19 = call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %20 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %19, 0
  %21 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %14, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %13, i64 0, i32 2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 %25
  %27 = icmp eq %"class.WTF::String"* %26, %20
  br i1 %27, label %29, label %28

28:                                               ; preds = %18
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_(%"class.WTF::HashTable"* %15, %"class.WTF::String"* %20) #9
  br label %29

29:                                               ; preds = %8, %16, %18, %28
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %2, %29, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry47SetDomainRelaxationForbiddenForURLSchemeForTestEbRKN3WTF6StringE(i1 zeroext, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %11, i64 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %12, i64 0, i32 0
  br i1 %0, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %1) #9
  br label %27

16:                                               ; preds = %10
  %17 = tail call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* dereferenceable(8) %1) #9
  %18 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %17, 0
  %19 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %12, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %11, i64 0, i32 2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 %23
  %25 = icmp eq %"class.WTF::String"* %24, %18
  br i1 %25, label %27, label %26

26:                                               ; preds = %16
  tail call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* %18) #9
  br label %27

27:                                               ; preds = %2, %26, %16, %6, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ResetDomainRelaxationForTestEv() local_unnamed_addr #0 {
  %1 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %1, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %0
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %13
  %15 = bitcast %"class.WTF::String"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"class.WTF::String"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #9
  %38 = bitcast %"class.WTF::HashSet"* %2 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %7, align 8
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %1, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %39, align 4
  br label %40

40:                                               ; preds = %0, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry28ResetDomainRelaxationForTestEv() local_unnamed_addr #0 align 2 {
  %1 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %1, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %0
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %13
  %15 = bitcast %"class.WTF::String"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"class.WTF::String"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #9
  %38 = bitcast %"class.WTF::HashSet"* %2 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %7, align 8
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %1, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %39, align 4
  br label %40

40:                                               ; preds = %0, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry34RegisterURLSchemeAsDisplayIsolatedERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 0, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry37ShouldTreatURLSchemeAsDisplayIsolatedERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry45ShouldTreatURLSchemeAsRestrictingMixedContentERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi i64 [ %19, %12 ], [ %10, %8 ]
  %22 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 5, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry34ShouldLoadURLSchemeAsEmptyDocumentERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 1, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry39IsDomainRelaxationForbiddenForURLSchemeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 2, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry26CanDisplayOnlyIfCanRequestERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 4, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  br i1 %30, label %56, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %37, i64* %38, align 8
  br label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %47

47:                                               ; preds = %39, %35
  %48 = phi i64 [ %46, %39 ], [ %37, %35 ]
  %49 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #9
  %52 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %48, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  br label %56

56:                                               ; preds = %47, %22
  %57 = phi i1 [ true, %22 ], [ %55, %47 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry44RegisterURLSchemeAsNotAllowingJavascriptURLsERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 3, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry42RemoveURLSchemeAsNotAllowingJavascriptURLsERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %5 = tail call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %0) #9
  %6 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %11
  %13 = icmp eq %"class.WTF::String"* %12, %6
  br i1 %13, label %15, label %14

14:                                               ; preds = %1
  tail call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* %6) #9
  br label %15

15:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry47ShouldTreatURLSchemeAsNotAllowingJavascriptURLsERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 3, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry33ShouldTreatURLSchemeAsCorsEnabledERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 4, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14SchemeRegistry27ListOfCorsEnabledURLSchemesEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::StringBuilder", align 8
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1
  %7 = bitcast %union.anon* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 4
  store i8 0, i8* %10, align 1
  %11 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %11, i64 0, i32 4, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %11, i64 0, i32 4, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %11, i64 0, i32 4, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %19
  br i1 %14, label %44, label %21

21:                                               ; preds = %0
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %21, %27
  %24 = phi %"class.WTF::String"* [ %28, %27 ], [ %16, %21 ]
  %25 = bitcast %"class.WTF::String"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  switch i64 %26, label %30 [
    i64 -1, label %27
    i64 0, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %29 = icmp eq %"class.WTF::String"* %28, %20
  br i1 %29, label %44, label %23

30:                                               ; preds = %23, %21
  %31 = phi %"class.WTF::String"* [ %16, %21 ], [ %24, %23 ]
  %32 = icmp eq %"class.WTF::String"* %31, %20
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.WTF::StringView"* %2 to i8*
  %35 = bitcast %"class.WTF::StringView"* %2 to i64*
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %38 = bitcast %"class.WTF::StringView"* %3 to i8*
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %43 = bitcast %"class.WTF::StringView"* %3 to i64*
  br label %62

44:                                               ; preds = %27, %91, %101, %98, %0, %30
  %45 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %1) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %1) #9
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %61

61:                                               ; preds = %44, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #9
  ret %"class.WTF::StringImpl"* %45

62:                                               ; preds = %33, %101
  %63 = phi i8 [ 0, %33 ], [ %70, %101 ]
  %64 = phi %"class.WTF::String"* [ %31, %33 ], [ %95, %101 ]
  %65 = and i8 %63, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %68, i64* %35, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %36, align 8
  store i32 2, i32* %37, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  br label %69

69:                                               ; preds = %62, %67
  %70 = phi i8 [ %63, %67 ], [ 1, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #9
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %64) #9
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  store i8* null, i8** %40, align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %74, i64* %43, align 8
  store i32 0, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  br label %91

75:                                               ; preds = %69
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %39, align 8
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %41, align 8
  store i32 %77, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %75
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %75
  %88 = phi i32 [ %86, %85 ], [ %84, %75 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #9
  br label %91

91:                                               ; preds = %73, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 1
  %93 = icmp eq %"class.WTF::String"* %92, %20
  br i1 %93, label %44, label %94

94:                                               ; preds = %91, %98
  %95 = phi %"class.WTF::String"* [ %99, %98 ], [ %92, %91 ]
  %96 = bitcast %"class.WTF::String"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %101 [
    i64 -1, label %98
    i64 0, label %98
  ]

98:                                               ; preds = %94, %94
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %100 = icmp eq %"class.WTF::String"* %99, %20
  br i1 %100, label %44, label %94

101:                                              ; preds = %94
  %102 = icmp eq %"class.WTF::String"* %95, %20
  br i1 %102, label %44, label %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry28ShouldTreatURLSchemeAsLegacyERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi i64 [ %19, %12 ], [ %10, %8 ]
  %22 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry32ShouldTrackUsageMetricsForSchemeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 4, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  br i1 %30, label %56, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %37, i64* %38, align 8
  br label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %47

47:                                               ; preds = %39, %35
  %48 = phi i64 [ %46, %39 ], [ %37, %35 ]
  %49 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #9
  %52 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %48, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 5, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  br label %56

56:                                               ; preds = %47, %22
  %57 = phi i1 [ true, %22 ], [ %55, %47 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry41RegisterURLSchemeAsAllowingServiceWorkersERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 5, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry44ShouldTreatURLSchemeAsAllowingServiceWorkersERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 5, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry37RegisterURLSchemeAsSupportingFetchAPIERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 6, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry40ShouldTreatURLSchemeAsSupportingFetchAPIERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 6, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry15IsSpecialSchemeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %30

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %30

30:                                               ; preds = %22, %18
  %31 = phi i64 [ %29, %22 ], [ %20, %18 ]
  %32 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %35 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %31, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 3, i32* %37, align 8
  %38 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  br i1 %38, label %164, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #9
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi i64 [ %54, %47 ], [ %45, %43 ]
  %57 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  %60 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #9
  br i1 %63, label %164, label %64

64:                                               ; preds = %55
  %65 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #9
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %70, i64* %71, align 8
  br label %80

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %78, align 8
  %79 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %80

80:                                               ; preds = %72, %68
  %81 = phi i64 [ %79, %72 ], [ %70, %68 ]
  %82 = phi i32 [ %75, %72 ], [ 0, %68 ]
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %82, i32* %83, align 8
  %84 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #9
  %85 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %81, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 4, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #9
  br i1 %88, label %164, label %89

89:                                               ; preds = %80
  %90 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #9
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %94, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %96 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %95, i64* %96, align 8
  br label %105

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %105

105:                                              ; preds = %97, %93
  %106 = phi i64 [ %104, %97 ], [ %95, %93 ]
  %107 = phi i32 [ %100, %97 ], [ 0, %93 ]
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %107, i32* %108, align 8
  %109 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #9
  %110 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %106, i64* %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 5, i32* %112, align 8
  %113 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #9
  br i1 %113, label %164, label %114

114:                                              ; preds = %105
  %115 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #9
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %119, align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %121 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %120, i64* %121, align 8
  br label %130

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 1
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %128 = bitcast i8** %127 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %128, align 8
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %130

130:                                              ; preds = %122, %118
  %131 = phi i64 [ %129, %122 ], [ %120, %118 ]
  %132 = phi i32 [ %125, %122 ], [ 0, %118 ]
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %132, i32* %133, align 8
  %134 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #9
  %135 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %131, i64* %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %137, align 8
  %138 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #9
  br i1 %138, label %164, label %139

139:                                              ; preds = %130
  %140 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #9
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %144, align 8
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %145, i64* %146, align 8
  br label %155

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 1
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %153 = bitcast i8** %152 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %153, align 8
  %154 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %155

155:                                              ; preds = %147, %143
  %156 = phi i64 [ %154, %147 ], [ %145, %143 ]
  %157 = phi i32 [ %150, %147 ], [ 0, %143 ]
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %157, i32* %158, align 8
  %159 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #9
  %160 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %156, i64* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %162, align 8
  %163 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #9
  br label %164

164:                                              ; preds = %155, %130, %105, %80, %55, %30
  %165 = phi i1 [ true, %130 ], [ true, %105 ], [ true, %80 ], [ true, %55 ], [ true, %30 ], [ %163, %155 ]
  ret i1 %165
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry41RegisterURLSchemeAsFirstPartyWhenTopLevelERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 7, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry39RemoveURLSchemeAsFirstPartyWhenTopLevelERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 7
  %4 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %5 = tail call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %0) #9
  %6 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 7, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %11
  %13 = icmp eq %"class.WTF::String"* %12, %6
  br i1 %13, label %15, label %14

14:                                               ; preds = %1
  tail call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* %6) #9
  br label %15

15:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry44ShouldTreatURLSchemeAsFirstPartyWhenTopLevelERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 7, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry56RegisterURLSchemeAsFirstPartyWhenTopLevelEmbeddingSecureERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 8, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry59ShouldTreatURLSchemeAsFirstPartyWhenTopLevelEmbeddingSecureERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 5, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  br i1 %31, label %57, label %32

32:                                               ; preds = %23
  %33 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %38, i64* %39, align 8
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %48

48:                                               ; preds = %40, %36
  %49 = phi i64 [ %47, %40 ], [ %38, %36 ]
  %50 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #9
  %53 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %49, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %55, align 8
  %56 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  br i1 %56, label %57, label %69

57:                                               ; preds = %48, %23
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %67 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %66, i64 0, i32 8, i32 0
  %68 = call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %67, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %69

69:                                               ; preds = %48, %57, %61, %65
  %70 = phi i1 [ %68, %65 ], [ false, %48 ], [ false, %61 ], [ false, %57 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry37RegisterURLSchemeAsAllowedForReferrerERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 11, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry35RemoveURLSchemeAsAllowedForReferrerERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 11
  %4 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %5 = tail call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %0) #9
  %6 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 11, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %11
  %13 = icmp eq %"class.WTF::String"* %12, %6
  br i1 %13, label %15, label %14

14:                                               ; preds = %1
  tail call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* %6) #9
  br label %15

15:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry40ShouldTreatURLSchemeAsAllowedForReferrerERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 11, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry24RegisterURLSchemeAsErrorERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 12, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry27ShouldTreatURLSchemeAsErrorERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 12, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry45RegisterURLSchemeAsAllowingSharedArrayBuffersERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 14, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry48ShouldTreatURLSchemeAsAllowingSharedArrayBuffersERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 14, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry49RegisterURLSchemeAsBypassingContentSecurityPolicyERKN3WTF6StringENS0_11PolicyAreasE(%"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %3 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %3, i64 0, i32 9
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = tail call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1"* %5, %"struct.WTF::KeyValuePair"* null) #9
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %9, %2
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %2 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %3, i64 0, i32 9, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = lshr i32 %21, 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %19) #9
  br label %26

26:                                               ; preds = %24, %12
  %27 = phi i32 [ %25, %24 ], [ %22, %12 ]
  %28 = and i32 %27, %16
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %26
  %35 = xor i32 %27, -1
  %36 = lshr i32 %27, 23
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %60, %34
  %49 = phi %"struct.WTF::KeyValuePair"* [ %30, %34 ], [ %66, %60 ]
  %50 = phi %"struct.WTF::KeyValuePair"* [ null, %34 ], [ %61, %60 ]
  %51 = phi i64 [ %29, %34 ], [ %65, %60 ]
  %52 = phi i64 [ 0, %34 ], [ %63, %60 ]
  %53 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, inttoptr (i64 -1 to i8*)
  br i1 %55, label %60, label %56

56:                                               ; preds = %48
  %57 = bitcast i8* %54 to %"class.WTF::StringImpl"*
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %59 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"* %58) #9
  br i1 %59, label %133, label %60

60:                                               ; preds = %56, %48
  %61 = phi %"struct.WTF::KeyValuePair"* [ %50, %56 ], [ %49, %48 ]
  %62 = icmp eq i64 %52, 0
  %63 = select i1 %62, i64 %47, i64 %52
  %64 = add i64 %63, %51
  %65 = and i64 %64, %17
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %70, label %48

70:                                               ; preds = %60
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %61, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %70
  %73 = bitcast %"struct.WTF::KeyValuePair"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #9
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %3, i64 0, i32 9, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  br label %80

80:                                               ; preds = %72, %70, %26
  %81 = phi %"struct.WTF::KeyValuePair"* [ %61, %72 ], [ %66, %70 ], [ %30, %26 ]
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #9
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !3

98:                                               ; preds = %89
  tail call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %99, %84, %80
  %102 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %103 = bitcast %"struct.WTF::KeyValuePair"* %81 to i64*
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  store i64 %102, i64* %103, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #9
  br label %120

120:                                              ; preds = %119, %116, %101
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  store i32 %1, i32* %121, align 4
  %122 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %3, i64 0, i32 9, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %3, i64 0, i32 9, i32 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, %124
  %128 = shl i32 %127, 1
  %129 = load i32, i32* %14, align 8
  %130 = icmp ult i32 %128, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %120
  %132 = tail call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1"* %5, %"struct.WTF::KeyValuePair"* %81) #9
  br label %133

133:                                              ; preds = %56, %120, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry57RemoveURLSchemeRegisteredAsBypassingContentSecurityPolicyERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 9
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %68, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 9, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  %19 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %13) #9
  br label %20

20:                                               ; preds = %18, %7
  %21 = phi i32 [ %19, %18 ], [ %16, %7 ]
  %22 = and i32 %21, %10
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %23
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %68, label %28

28:                                               ; preds = %20
  %29 = xor i32 %21, -1
  %30 = lshr i32 %21, 23
  %31 = add i32 %30, %29
  %32 = shl i32 %31, 12
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 7
  %35 = xor i32 %34, %33
  %36 = shl i32 %35, 2
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 20
  %39 = xor i32 %38, %37
  %40 = or i32 %39, 1
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %53, %28
  %43 = phi %"struct.WTF::KeyValuePair"* [ %24, %28 ], [ %58, %53 ]
  %44 = phi i64 [ %23, %28 ], [ %57, %53 ]
  %45 = phi i64 [ 0, %28 ], [ %55, %53 ]
  %46 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %52 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"* %51) #9
  br i1 %52, label %62, label %53

53:                                               ; preds = %49, %42
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %41, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %11
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %68, label %42

62:                                               ; preds = %49
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %43, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %66 = load i32, i32* %8, align 8
  %67 = zext i32 %66 to i64
  br label %74

68:                                               ; preds = %53, %62, %20, %1
  %69 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %70 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 9, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 %72
  br label %74

74:                                               ; preds = %68, %64
  %75 = phi i64 [ %67, %64 ], [ %72, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %65, %64 ], [ %69, %68 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %43, %64 ], [ %73, %68 ]
  %78 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  %79 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 9, i32 0, i32 1
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 %75
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %80, %77
  br i1 %81, label %118, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %99

99:                                               ; preds = %98, %95, %82
  %100 = bitcast %"struct.WTF::KeyValuePair"* %77 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %100, align 8
  %101 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 9, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, 1
  %104 = and i32 %103, 2147483647
  %105 = and i32 %102, -2147483648
  %106 = or i32 %104, %105
  store i32 %106, i32* %101, align 8
  %107 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 9, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, -1
  store i32 %109, i32* %107, align 4
  %110 = mul i32 %109, 6
  %111 = load i32, i32* %79, align 8
  %112 = icmp ult i32 %110, %111
  %113 = icmp ugt i32 %111, 8
  %114 = and i1 %112, %113
  br i1 %114, label %115, label %118

115:                                              ; preds = %99
  %116 = lshr i32 %111, 1
  %117 = tail call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.1"* %78, i32 %116, %"struct.WTF::KeyValuePair"* null) #9
  br label %118

118:                                              ; preds = %74, %99, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry39SchemeShouldBypassContentSecurityPolicyERKN3WTF6StringENS0_11PolicyAreasE(%"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %80, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9
  br i1 %11, label %80, label %12

12:                                               ; preds = %6
  %13 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %13, i64 0, i32 9, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %15, null
  br i1 %16, label %76, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %13, i64 0, i32 9, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = zext i32 %20 to i64
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = lshr i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %22) #9
  br label %29

29:                                               ; preds = %27, %17
  %30 = phi i32 [ %28, %27 ], [ %25, %17 ]
  %31 = and i32 %30, %20
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %76, label %37

37:                                               ; preds = %29
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %62, %37
  %52 = phi %"struct.WTF::KeyValuePair"* [ %33, %37 ], [ %67, %62 ]
  %53 = phi i64 [ %32, %37 ], [ %66, %62 ]
  %54 = phi i64 [ 0, %37 ], [ %64, %62 ]
  %55 = bitcast %"struct.WTF::KeyValuePair"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %62, label %58

58:                                               ; preds = %51
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %61 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"* %60) #9
  br i1 %61, label %71, label %62

62:                                               ; preds = %58, %51
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %50, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %21
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %76, label %51

71:                                               ; preds = %58
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %52, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %62, %12, %29, %71, %73
  %77 = phi i32 [ %75, %73 ], [ 0, %71 ], [ 0, %12 ], [ 0, %29 ], [ 0, %62 ]
  %78 = and i32 %77, %1
  %79 = icmp eq i32 %78, %1
  br label %80

80:                                               ; preds = %2, %6, %76
  %81 = phi i1 [ %79, %76 ], [ false, %6 ], [ false, %2 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry44RegisterURLSchemeBypassingSecureContextCheckERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 10, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry36SchemeShouldBypassSecureContextCheckERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 10, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SchemeRegistry38RegisterURLSchemeAsAllowingWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %2, i64 0, i32 13, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSchemesRegistry", %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %10, i64 0, i32 13, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %0) #9
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(360) %"class.blink::(anonymous namespace)::URLSchemesRegistry"* @_ZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEv() unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::String", align 8
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca [2 x %"class.WTF::String"], align 8
  %5 = alloca [2 x %"class.WTF::String"], align 8
  %6 = alloca [2 x %"class.WTF::String"], align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %405, !prof !4

11:                                               ; preds = %0
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %405, label %14

14:                                               ; preds = %11
  %15 = tail call noalias i8* @malloc(i64 360) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #9
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #9
  %17 = getelementptr inbounds i8, i8* %15, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #9
  %18 = getelementptr inbounds i8, i8* %15, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #9
  %19 = getelementptr inbounds i8, i8* %15, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #9
  %20 = getelementptr inbounds i8, i8* %15, i64 120
  %21 = bitcast [2 x %"class.WTF::String"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %4, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #9
  %23 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %4, i64 0, i64 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #9
  %24 = bitcast i8* %20 to %"class.WTF::HashTable"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #9
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %24, i32 2) #9
  %25 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %24, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.WTF::String"* nonnull dereferenceable(8) %22) #9
  %26 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %24, %"class.WTF::String"* dereferenceable(8) %23, %"class.WTF::String"* dereferenceable(8) %23) #9
  %27 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %4, i64 0, i64 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %14
  %44 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %4, i64 0, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %393, label %380

47:                                               ; preds = %393
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %402) #9
  br label %60

60:                                               ; preds = %393, %59, %56
  %61 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %5, i64 0, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %365, label %352

64:                                               ; preds = %365
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %378) #9
  br label %77

77:                                               ; preds = %365, %76, %73
  %78 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %6, i64 0, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %342, label %329

81:                                               ; preds = %342
  %82 = bitcast i8** %7 to i8*
  %83 = bitcast i8* %19 to %"class.WTF::HashTable"*
  br label %107

84:                                               ; preds = %118, %342
  %85 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url22GetCSPBypassingSchemesEv() #9
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %85, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %88, align 8
  %90 = icmp eq %"class.std::__1::basic_string"* %87, %89
  br i1 %90, label %123, label %91

91:                                               ; preds = %84
  %92 = bitcast i8* %368 to %"class.WTF::HashTable.1"*
  %93 = bitcast i8* %368 to %"struct.WTF::KeyValuePair"**
  %94 = getelementptr inbounds i8, i8* %15, i64 224
  %95 = bitcast i8* %94 to i32*
  %96 = bitcast %"class.WTF::String"* %3 to i8*
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::String"* %1 to i8*
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds i8, i8* %15, i64 232
  %101 = bitcast i8* %100 to i32*
  %102 = bitcast %"class.WTF::String"* %2 to i8*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %104 = bitcast %"class.WTF::String"* %2 to i64*
  %105 = getelementptr inbounds i8, i8* %15, i64 228
  %106 = bitcast i8* %105 to i32*
  br label %133

107:                                              ; preds = %118, %81
  %108 = phi %"class.std::__1::basic_string"* [ %348, %81 ], [ %121, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  br label %118

116:                                              ; preds = %107
  %117 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  br label %118

118:                                              ; preds = %116, %113
  %119 = phi i8* [ %115, %113 ], [ %117, %116 ]
  store i8* %119, i8** %7, align 8
  %120 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKPKcSC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %83, i8** nonnull dereferenceable(8) %7, i8** nonnull dereferenceable(8) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #9
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 1
  %122 = icmp eq %"class.std::__1::basic_string"* %121, %350
  br i1 %122, label %84, label %107

123:                                              ; preds = %310, %84
  %124 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url23GetEmptyDocumentSchemesEv() #9
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %124, i64 0, i32 0, i32 1
  %128 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %127, align 8
  %129 = icmp eq %"class.std::__1::basic_string"* %126, %128
  br i1 %129, label %404, label %130

130:                                              ; preds = %123
  %131 = bitcast i8** %8 to i8*
  %132 = bitcast i8* %16 to %"class.WTF::HashTable"*
  br label %313

133:                                              ; preds = %310, %91
  %134 = phi %"class.std::__1::basic_string"* [ %87, %91 ], [ %311, %310 ]
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  br label %144

142:                                              ; preds = %133
  %143 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  br label %144

144:                                              ; preds = %142, %139
  %145 = phi i8* [ %141, %139 ], [ %143, %142 ]
  %146 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %93, align 8
  %147 = icmp eq %"struct.WTF::KeyValuePair"* %146, null
  br i1 %147, label %148, label %151

148:                                              ; preds = %144
  %149 = call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1"* %92, %"struct.WTF::KeyValuePair"* null) #9
  %150 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %93, align 8
  br label %151

151:                                              ; preds = %148, %144
  %152 = phi %"struct.WTF::KeyValuePair"* [ %146, %144 ], [ %150, %148 ]
  %153 = load i32, i32* %95, align 8
  %154 = add i32 %153, -1
  %155 = zext i32 %154 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9
  %156 = icmp eq i8* %145, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %151
  %158 = call i64 @strlen(i8* nonnull %145) #10
  br label %159

159:                                              ; preds = %157, %151
  %160 = phi i64 [ %158, %157 ], [ 0, %151 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %145, i64 %160) #9
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = lshr i32 %163, 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %159
  %167 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %161) #9
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  br label %169

169:                                              ; preds = %166, %159
  %170 = phi %"class.WTF::StringImpl"* [ %168, %166 ], [ %161, %159 ]
  %171 = phi i32 [ %167, %166 ], [ %164, %159 ]
  %172 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #9
  br label %186

186:                                              ; preds = %185, %182, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #9
  %187 = and i32 %171, %154
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 %188
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %189, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %259, label %193

193:                                              ; preds = %186
  %194 = xor i32 %171, -1
  %195 = lshr i32 %171, 23
  %196 = add i32 %195, %194
  %197 = shl i32 %196, 12
  %198 = xor i32 %197, %196
  %199 = lshr i32 %198, 7
  %200 = xor i32 %199, %198
  %201 = shl i32 %200, 2
  %202 = xor i32 %201, %200
  %203 = lshr i32 %202, 20
  %204 = xor i32 %203, %202
  %205 = or i32 %204, 1
  %206 = zext i32 %205 to i64
  br label %207

207:                                              ; preds = %240, %193
  %208 = phi %"struct.WTF::KeyValuePair"* [ %189, %193 ], [ %246, %240 ]
  %209 = phi %"struct.WTF::KeyValuePair"* [ null, %193 ], [ %241, %240 ]
  %210 = phi i64 [ %188, %193 ], [ %245, %240 ]
  %211 = phi i64 [ 0, %193 ], [ %243, %240 ]
  %212 = bitcast %"struct.WTF::KeyValuePair"* %208 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = icmp eq i8* %213, inttoptr (i64 -1 to i8*)
  br i1 %214, label %240, label %215

215:                                              ; preds = %207
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  br i1 %156, label %218, label %216

216:                                              ; preds = %215
  %217 = call i64 @strlen(i8* nonnull %145) #10
  br label %218

218:                                              ; preds = %216, %215
  %219 = phi i64 [ %217, %216 ], [ 0, %215 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %1, i8* %145, i64 %219) #9
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %208, i64 0, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %223 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %221, %"class.WTF::StringImpl"* %222) #9
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #9
  br label %239

239:                                              ; preds = %238, %235, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br i1 %223, label %310, label %240

240:                                              ; preds = %239, %207
  %241 = phi %"struct.WTF::KeyValuePair"* [ %209, %239 ], [ %208, %207 ]
  %242 = icmp eq i64 %211, 0
  %243 = select i1 %242, i64 %206, i64 %211
  %244 = add i64 %243, %210
  %245 = and i64 %244, %155
  %246 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 %245
  %247 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %246, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %250, label %207

250:                                              ; preds = %240
  %251 = icmp eq %"struct.WTF::KeyValuePair"* %241, null
  br i1 %251, label %259, label %252

252:                                              ; preds = %250
  %253 = bitcast %"struct.WTF::KeyValuePair"* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 0, i64 16, i1 false) #9
  %254 = load i32, i32* %101, align 8
  %255 = add i32 %254, 2147483647
  %256 = and i32 %255, 2147483647
  %257 = and i32 %254, -2147483648
  %258 = or i32 %256, %257
  store i32 %258, i32* %101, align 8
  br label %259

259:                                              ; preds = %252, %250, %186
  %260 = phi %"struct.WTF::KeyValuePair"* [ %241, %252 ], [ %246, %250 ], [ %189, %186 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #9
  br i1 %156, label %263, label %261

261:                                              ; preds = %259
  %262 = call i64 @strlen(i8* nonnull %145) #10
  br label %263

263:                                              ; preds = %261, %259
  %264 = phi i64 [ %262, %261 ], [ 0, %259 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %145, i64 %264) #9
  %265 = load i64, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %103, align 8
  %266 = bitcast %"struct.WTF::KeyValuePair"* %260 to i64*
  %267 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %260, i64 0, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  store i64 %265, i64* %266, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %263
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #9
  br label %283

283:                                              ; preds = %282, %279, %263
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #9
  br label %299

299:                                              ; preds = %298, %295, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #9
  %300 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %260, i64 0, i32 1
  store i32 -1, i32* %300, align 4
  %301 = load i32, i32* %106, align 4
  %302 = add i32 %301, 1
  store i32 %302, i32* %106, align 4
  %303 = load i32, i32* %101, align 8
  %304 = add i32 %303, %302
  %305 = shl i32 %304, 1
  %306 = load i32, i32* %95, align 8
  %307 = icmp ult i32 %305, %306
  br i1 %307, label %310, label %308

308:                                              ; preds = %299
  %309 = call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1"* %92, %"struct.WTF::KeyValuePair"* %260) #9
  br label %310

310:                                              ; preds = %239, %308, %299
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 1
  %312 = icmp eq %"class.std::__1::basic_string"* %311, %89
  br i1 %312, label %123, label %133

313:                                              ; preds = %324, %130
  %314 = phi %"class.std::__1::basic_string"* [ %126, %130 ], [ %327, %324 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #9
  %315 = bitcast %"class.std::__1::basic_string"* %314 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %313
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %314, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load i8*, i8** %320, align 8
  br label %324

322:                                              ; preds = %313
  %323 = bitcast %"class.std::__1::basic_string"* %314 to i8*
  br label %324

324:                                              ; preds = %322, %319
  %325 = phi i8* [ %321, %319 ], [ %323, %322 ]
  store i8* %325, i8** %8, align 8
  %326 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKPKcSC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %132, i8** nonnull dereferenceable(8) %8, i8** nonnull dereferenceable(8) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #9
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %314, i64 1
  %328 = icmp eq %"class.std::__1::basic_string"* %327, %128
  br i1 %328, label %404, label %313

329:                                              ; preds = %77
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  br i1 %333, label %336, label %338

336:                                              ; preds = %329
  %337 = add i32 %335, -1
  store i32 %337, i32* %334, align 4
  br label %338

338:                                              ; preds = %336, %329
  %339 = phi i32 [ %337, %336 ], [ %335, %329 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #9
  br label %342

342:                                              ; preds = %341, %338, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %371) #9
  %343 = getelementptr inbounds i8, i8* %15, i64 288
  call void @llvm.memset.p0i8.i64(i8* align 8 %343, i8 0, i64 20, i1 false) #9
  %344 = getelementptr inbounds i8, i8* %15, i64 312
  call void @llvm.memset.p0i8.i64(i8* align 8 %344, i8 0, i64 20, i1 false) #9
  %345 = getelementptr inbounds i8, i8* %15, i64 336
  call void @llvm.memset.p0i8.i64(i8* align 8 %345, i8 0, i64 20, i1 false) #9
  %346 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url21GetCorsEnabledSchemesEv() #9
  %347 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %346, i64 0, i32 0, i32 0
  %348 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %347, align 8
  %349 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %346, i64 0, i32 0, i32 1
  %350 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %349, align 8
  %351 = icmp eq %"class.std::__1::basic_string"* %348, %350
  br i1 %351, label %84, label %81

352:                                              ; preds = %60
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  br i1 %356, label %359, label %361

359:                                              ; preds = %352
  %360 = add i32 %358, -1
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %359, %352
  %362 = phi i32 [ %360, %359 ], [ %358, %352 ]
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #9
  br label %365

365:                                              ; preds = %364, %361, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %395) #9
  %366 = getelementptr inbounds i8, i8* %15, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %366, i8 0, i64 20, i1 false) #9
  %367 = getelementptr inbounds i8, i8* %15, i64 192
  call void @llvm.memset.p0i8.i64(i8* align 8 %367, i8 0, i64 20, i1 false) #9
  %368 = getelementptr inbounds i8, i8* %15, i64 216
  call void @llvm.memset.p0i8.i64(i8* align 8 %368, i8 0, i64 20, i1 false) #9
  %369 = getelementptr inbounds i8, i8* %15, i64 240
  call void @llvm.memset.p0i8.i64(i8* align 8 %369, i8 0, i64 20, i1 false) #9
  %370 = getelementptr inbounds i8, i8* %15, i64 264
  %371 = bitcast [2 x %"class.WTF::String"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %371) #9
  %372 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %6, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %372, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #9
  %373 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %6, i64 0, i64 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %373, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #9
  %374 = bitcast i8* %370 to %"class.WTF::HashTable"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %370, i8 0, i64 20, i1 false) #9
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %374, i32 2) #9
  %375 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %374, %"class.WTF::String"* nonnull dereferenceable(8) %372, %"class.WTF::String"* nonnull dereferenceable(8) %372) #9
  %376 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %374, %"class.WTF::String"* dereferenceable(8) %373, %"class.WTF::String"* dereferenceable(8) %373) #9
  %377 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %6, i64 0, i64 1, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %379, label %77, label %64

380:                                              ; preds = %43
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  br i1 %384, label %387, label %389

387:                                              ; preds = %380
  %388 = add i32 %386, -1
  store i32 %388, i32* %385, align 4
  br label %389

389:                                              ; preds = %387, %380
  %390 = phi i32 [ %388, %387 ], [ %386, %380 ]
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %393

392:                                              ; preds = %389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %393

393:                                              ; preds = %392, %389, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  %394 = getelementptr inbounds i8, i8* %15, i64 144
  %395 = bitcast [2 x %"class.WTF::String"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %395) #9
  %396 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %5, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %396, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #9
  %397 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %5, i64 0, i64 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %397, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #9
  %398 = bitcast i8* %394 to %"class.WTF::HashTable"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 20, i1 false) #9
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %398, i32 2) #9
  %399 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %398, %"class.WTF::String"* nonnull dereferenceable(8) %396, %"class.WTF::String"* nonnull dereferenceable(8) %396) #9
  %400 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %398, %"class.WTF::String"* dereferenceable(8) %397, %"class.WTF::String"* dereferenceable(8) %397) #9
  %401 = getelementptr inbounds [2 x %"class.WTF::String"], [2 x %"class.WTF::String"]* %5, i64 0, i64 1, i32 0, i32 0
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %403 = icmp eq %"class.WTF::StringImpl"* %402, null
  br i1 %403, label %60, label %47

404:                                              ; preds = %324, %123
  store i8* %15, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes) #9
  br label %405

405:                                              ; preds = %11, %404, %0
  %406 = load %"class.blink::(anonymous namespace)::URLSchemesRegistry"*, %"class.blink::(anonymous namespace)::URLSchemesRegistry"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118URLSchemesRegistry11GetInstanceEvE9s_schemes, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::(anonymous namespace)::URLSchemesRegistry"* %406
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN3url21GetCorsEnabledSchemesEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN3url22GetCSPBypassingSchemesEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN3url23GetEmptyDocumentSchemesEv() local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #9
  %30 = bitcast i8* %29 to %"class.WTF::String"*
  %31 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %30, i32 %17, %"class.WTF::String"* null) #9
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #9
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #9
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #9
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKPKcSC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"*, i8** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp eq %"class.WTF::String"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* null)
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::String"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = load i8*, i8** %1, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = tail call i64 @strlen(i8* nonnull %19) #10
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %22, %21 ], [ 0, %12 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %19, i64 %24) #9
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %26) #9
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi %"class.WTF::StringImpl"* [ %33, %31 ], [ %26, %23 ]
  %36 = phi i32 [ %32, %31 ], [ %29, %23 ]
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %51

51:                                               ; preds = %34, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %52 = and i32 %36, %16
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %53
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %129, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.WTF::String"* %4 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %61 = xor i32 %36, -1
  %62 = lshr i32 %36, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %58, %109
  %75 = phi %"class.WTF::StringImpl"** [ %55, %58 ], [ %116, %109 ]
  %76 = phi %"class.WTF::String"* [ %54, %58 ], [ %115, %109 ]
  %77 = phi %"class.WTF::String"* [ null, %58 ], [ %110, %109 ]
  %78 = phi i64 [ %53, %58 ], [ %114, %109 ]
  %79 = phi i64 [ 0, %58 ], [ %112, %109 ]
  %80 = bitcast %"class.WTF::String"* %76 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, inttoptr (i64 -1 to i8*)
  br i1 %82, label %109, label %83

83:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  %84 = load i8*, i8** %1, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = call i64 @strlen(i8* nonnull %84) #10
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi i64 [ %87, %86 ], [ 0, %83 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %84, i64 %89) #9
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %92 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"* %91) #9
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #9
  br label %108

108:                                              ; preds = %88, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  br i1 %92, label %142, label %109

109:                                              ; preds = %74, %108
  %110 = phi %"class.WTF::String"* [ %77, %108 ], [ %76, %74 ]
  %111 = icmp eq i64 %79, 0
  %112 = select i1 %111, i64 %73, i64 %79
  %113 = add i64 %112, %78
  %114 = and i64 %113, %17
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %114
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %74

119:                                              ; preds = %109
  %120 = icmp eq %"class.WTF::String"* %110, null
  br i1 %120, label %129, label %121

121:                                              ; preds = %119
  %122 = bitcast %"class.WTF::String"* %110 to i64*
  store i64 0, i64* %122, align 8
  %123 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, 2147483647
  %126 = and i32 %125, 2147483647
  %127 = and i32 %124, -2147483648
  %128 = or i32 %126, %127
  store i32 %128, i32* %123, align 8
  br label %129

129:                                              ; preds = %51, %119, %121
  %130 = phi %"class.WTF::String"* [ %110, %121 ], [ %115, %119 ], [ %54, %51 ]
  call void @_ZN3WTF22IdentityHashTranslatorINS_10StringHashENS_10HashTraitsINS_6StringEEENS_18PartitionAllocatorEE9TranslateIS3_RKPKcS9_EEvRT_OT0_OT1_(%"class.WTF::String"* dereferenceable(8) %130, i8** dereferenceable(8) %1, i8** dereferenceable(8) %2)
  %131 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = add i32 %135, %133
  %137 = shl i32 %136, 1
  %138 = load i32, i32* %14, align 8
  %139 = icmp ult i32 %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %129
  %141 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %130)
  br label %142

142:                                              ; preds = %108, %129, %140
  %143 = phi i8 [ 1, %129 ], [ 1, %140 ], [ 0, %108 ]
  %144 = phi %"class.WTF::String"* [ %130, %129 ], [ %141, %140 ], [ %76, %108 ]
  %145 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %144, 0
  %146 = insertvalue { %"class.WTF::String"*, i8 } %145, i8 %143, 1
  ret { %"class.WTF::String"*, i8 } %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #9
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22IdentityHashTranslatorINS_10StringHashENS_10HashTraitsINS_6StringEEENS_18PartitionAllocatorEE9TranslateIS3_RKPKcS9_EEvRT_OT0_OT1_(%"class.WTF::String"* dereferenceable(8), i8** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = load i8*, i8** %2, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %6) #10
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %6, i64 %11) #9
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"class.WTF::String"* %0 to i64*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %10, %28, %31
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1"* nocapture, %"struct.WTF::KeyValuePair"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.1"* %0, i32 %32, %"struct.WTF::KeyValuePair"* %1)
  ret %"struct.WTF::KeyValuePair"* %33
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink14SchemeRegistry11PolicyAreasEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS3_12_GLOBAL__N_121PolicyAreasHashTraitsEEESB_NS_18PartitionAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.1"* nocapture, i32, %"struct.WTF::KeyValuePair"* readnone) unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = shl nuw nsw i64 %4, 4
  %6 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %5, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink14SchemeRegistry11PolicyAreasEEEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 %5, i1 false) #9
  %7 = bitcast i8* %6 to %"struct.WTF::KeyValuePair"*
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  br i1 %11, label %13, label %16

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::HashTable.1"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  br label %23

16:                                               ; preds = %3
  %17 = add i32 %1, -1
  %18 = zext i32 %17 to i64
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %20 = ptrtoint %"struct.WTF::KeyValuePair"* %19 to i64
  br label %60

21:                                               ; preds = %165
  %22 = bitcast %"class.WTF::HashTable.1"* %0 to i64*
  br label %23

23:                                               ; preds = %21, %13
  %24 = phi i64* [ %14, %13 ], [ %22, %21 ]
  %25 = phi i64 [ %15, %13 ], [ %166, %21 ]
  %26 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %169, %21 ]
  %27 = phi i32 [ 0, %13 ], [ %167, %21 ]
  store atomic i64 %8, i64* %24 monotonic, align 8
  store i32 %1, i32* %9, align 8
  %28 = inttoptr i64 %25 to %"struct.WTF::KeyValuePair"*
  %29 = icmp eq i64 %25, 0
  br i1 %29, label %172, label %30

30:                                               ; preds = %23
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %30
  %33 = zext i32 %27 to i64
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi i64 [ 0, %32 ], [ %56, %55 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"*
  %40 = ptrtoint i8* %38 to i64
  switch i64 %40, label %41 [
    i64 -1, label %55
    i64 0, label %55
  ]

41:                                               ; preds = %34
  %42 = getelementptr inbounds i8, i8* %38, i64 8
  %43 = bitcast i8* %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = bitcast i8* %38 to i32*
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %41
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i32 [ %50, %49 ], [ %48, %41 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %55

55:                                               ; preds = %54, %51, %34, %34
  %56 = add nuw nsw i64 %35, 1
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %34

58:                                               ; preds = %55, %30
  %59 = inttoptr i64 %25 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #9
  br label %172

60:                                               ; preds = %165, %16
  %61 = phi i64 [ %20, %16 ], [ %166, %165 ]
  %62 = phi i32 [ %10, %16 ], [ %167, %165 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ %19, %16 ], [ %168, %165 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %169, %165 ]
  %65 = phi i32 [ 0, %16 ], [ %170, %165 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  switch i64 %70, label %71 [
    i64 -1, label %165
    i64 0, label %165
  ]

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = lshr i32 %73, 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  %77 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %69) #9
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i32 [ %77, %76 ], [ %74, %71 ]
  %80 = and i32 %79, %17
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %81
  %83 = ptrtoint %"struct.WTF::KeyValuePair"* %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %103, label %87

87:                                               ; preds = %78
  %88 = xor i32 %79, -1
  %89 = lshr i32 %79, 23
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 12
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 7
  %94 = xor i32 %93, %92
  %95 = shl i32 %94, 2
  %96 = xor i32 %95, %94
  %97 = lshr i32 %96, 20
  %98 = xor i32 %97, %96
  %99 = or i32 %98, 1
  %100 = zext i32 %99 to i64
  br label %109

101:                                              ; preds = %122
  %102 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  br label %103

103:                                              ; preds = %101, %78
  %104 = phi i64 [ %83, %78 ], [ %102, %101 ]
  %105 = phi %"struct.WTF::KeyValuePair"* [ null, %78 ], [ %123, %101 ]
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %105, null
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %108 = select i1 %106, i64 %104, i64 %107
  br label %133

109:                                              ; preds = %122, %87
  %110 = phi %"struct.WTF::KeyValuePair"* [ null, %87 ], [ %123, %122 ]
  %111 = phi i64 [ %83, %87 ], [ %129, %122 ]
  %112 = phi %"struct.WTF::KeyValuePair"* [ %82, %87 ], [ %128, %122 ]
  %113 = phi i64 [ %81, %87 ], [ %127, %122 ]
  %114 = phi i64 [ 0, %87 ], [ %125, %122 ]
  %115 = bitcast %"struct.WTF::KeyValuePair"* %112 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = icmp eq i8* %116, inttoptr (i64 -1 to i8*)
  br i1 %117, label %122, label %118

118:                                              ; preds = %109
  %119 = bitcast i8* %116 to %"class.WTF::StringImpl"*
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %121 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"* %120) #9
  br i1 %121, label %133, label %122

122:                                              ; preds = %118, %109
  %123 = phi %"struct.WTF::KeyValuePair"* [ %110, %118 ], [ %112, %109 ]
  %124 = icmp eq i64 %114, 0
  %125 = select i1 %124, i64 %100, i64 %114
  %126 = add i64 %125, %113
  %127 = and i64 %126, %18
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %127
  %129 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %101, label %109

133:                                              ; preds = %118, %103
  %134 = phi i64 [ %108, %103 ], [ %111, %118 ]
  %135 = inttoptr i64 %134 to %"struct.WTF::KeyValuePair"*
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #9
  br label %152

152:                                              ; preds = %151, %148, %133
  %153 = bitcast %"struct.WTF::KeyValuePair"* %67 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = inttoptr i64 %134 to i64*
  store i64 %154, i64* %155, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 %66, i32 1
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 %66
  %161 = icmp eq %"struct.WTF::KeyValuePair"* %160, %2
  %162 = select i1 %161, %"struct.WTF::KeyValuePair"* %135, %"struct.WTF::KeyValuePair"* %64
  %163 = load i32, i32* %9, align 8
  %164 = ptrtoint %"struct.WTF::KeyValuePair"* %159 to i64
  br label %165

165:                                              ; preds = %152, %60, %60
  %166 = phi i64 [ %61, %60 ], [ %164, %152 ], [ %61, %60 ]
  %167 = phi i32 [ %62, %60 ], [ %163, %152 ], [ %62, %60 ]
  %168 = phi %"struct.WTF::KeyValuePair"* [ %63, %60 ], [ %159, %152 ], [ %63, %60 ]
  %169 = phi %"struct.WTF::KeyValuePair"* [ %64, %60 ], [ %162, %152 ], [ %64, %60 ]
  %170 = add i32 %65, 1
  %171 = icmp eq i32 %170, %167
  br i1 %171, label %21, label %60

172:                                              ; preds = %23, %58
  %173 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %174 = load i32, i32* %173, align 8
  %175 = and i32 %174, -2147483648
  store i32 %175, i32* %173, align 8
  ret %"struct.WTF::KeyValuePair"* %26
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #9
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #9
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #9
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %22
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %59, %52 ]
  %43 = phi %"class.WTF::String"* [ %23, %27 ], [ %57, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %46 = bitcast %"class.WTF::String"* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %42, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %49, %41
  %53 = icmp eq i64 %45, 0
  %54 = select i1 %53, i64 %40, i64 %45
  %55 = add i64 %54, %44
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %56
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %49, %52, %2, %19
  %62 = phi %"class.WTF::String"* [ null, %2 ], [ null, %19 ], [ %43, %49 ], [ null, %52 ]
  %63 = icmp ne %"class.WTF::String"* %62, null
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE5eraseEPKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"class.WTF::String"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 3
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #9
  %41 = bitcast i8* %40 to %"class.WTF::String"*
  %42 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %41, i32 %37, %"class.WTF::String"* null) #9
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %22
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %59, %52 ]
  %43 = phi %"class.WTF::String"* [ %23, %27 ], [ %57, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %46 = bitcast %"class.WTF::String"* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %42, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %49, %41
  %53 = icmp eq i64 %45, 0
  %54 = select i1 %53, i64 %40, i64 %45
  %55 = add i64 %54, %44
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %56
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %49
  %62 = icmp eq %"class.WTF::String"* %43, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"class.WTF::String"* [ %43, %69 ], [ %68, %63 ]
  %76 = phi %"class.WTF::String"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"class.WTF::String"*, %"class.WTF::String"* } undef, %"class.WTF::String"* %75, 0
  %78 = insertvalue { %"class.WTF::String"*, %"class.WTF::String"* } %77, %"class.WTF::String"* %76, 1
  ret { %"class.WTF::String"*, %"class.WTF::String"* } %78
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
