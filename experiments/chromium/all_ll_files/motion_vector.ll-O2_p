; ModuleID = '../../third_party/libgav1/src/src/motion_vector.cc'
source_filename = "../../third_party/libgav1/src/src/motion_vector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::Tile::Block" = type { %"class.libgav1::Tile"*, i8, i8, [3 x i8], [3 x i8], [3 x i8], i32, i32, i32, i32, i32, i32, %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"*, %"struct.libgav1::TileScratchBuffer"*, i8** }
%"class.libgav1::Tile" = type { i32, i32, i32, i8*, i64, i32, i32, i32, i32, i32, i32, i8, [3 x i8], [3 x i8], [3 x i32], [3 x i32], [8 x [4 x [8 x [2 x i8]]]], i8, %"struct.std::__1::array", %"struct.std::__1::array.1", %"struct.libgav1::ObuSequenceHeader"*, %"struct.libgav1::ObuFrameHeader"*, %"struct.std::__1::array.14"*, %"struct.std::__1::array.15"*, %"struct.libgav1::TemporalMotionField"*, %"struct.std::__1::array.21"*, %"struct.std::__1::array.40"*, %"struct.std::__1::array.41"*, %"class.libgav1::DaalaBitReader", [8 x i8], %"struct.libgav1::SymbolDecoderContext", %"struct.libgav1::SymbolDecoderContext"*, %"class.libgav1::SegmentationMap"*, %"struct.libgav1::dsp::Dsp"*, %"class.libgav1::PostFilter"*, %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::Quantizer", %"class.std::__1::unique_ptr.95", %"class.libgav1::Array2D.98", i64, i32, [3 x %"class.libgav1::Array2DView"], %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::Array2D.43"*, %"class.libgav1::Array2D.51"*, [24 x i8], %"struct.std::__1::array.125", %"class.libgav1::ThreadPool"*, %"struct.libgav1::Tile::ThreadingParameters", %"class.libgav1::ResidualBufferPool"*, %"class.libgav1::TileScratchBufferPool"*, %"class.libgav1::BlockingCounterImpl"*, i8, %"class.std::__1::unique_ptr.78", [32 x [32 x i8]], [4 x i8], i8, i8, i8, %"struct.std::__1::array.141"*, %"struct.std::__1::array.142", [24 x i8] }
%"struct.std::__1::array" = type { [2 x %"class.libgav1::Array2D"] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"struct.std::__1::array.1" = type { [2 x %"class.libgav1::Array2D.2"] }
%"class.libgav1::Array2D.2" = type { %"class.std::__1::unique_ptr.3", i64, i64, %"class.libgav1::Array2DView.9" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.libgav1::Array2DView.9" = type { i32, i32, i8* }
%"struct.libgav1::ObuSequenceHeader" = type { i8, i8, i8, i32, [32 x i32], [32 x %"struct.libgav1::BitStreamLevel"], [32 x i8], i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.libgav1::ColorConfig", i8, %"struct.libgav1::TimingInfo", i8, %"struct.libgav1::DecoderModelInfo", [32 x i8], i8, [32 x i8], i8, %"struct.libgav1::OperatingParameters" }
%"struct.libgav1::BitStreamLevel" = type { i8, i8 }
%"struct.libgav1::ColorConfig" = type { i8, i8, i32, i32, i32, i32, i8, i8, i32, i8 }
%"struct.libgav1::TimingInfo" = type { i32, i32, i8, i32 }
%"struct.libgav1::DecoderModelInfo" = type { i8, i32, i8, i8 }
%"struct.libgav1::OperatingParameters" = type { [32 x i32], [32 x i32], [32 x i8] }
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array.10", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%"struct.std::__1::array.10" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.11", i8, i8, i8, %"struct.std::__1::array.12", %"struct.std::__1::array.13" }
%"struct.std::__1::array.11" = type { [4 x i8] }
%"struct.std::__1::array.12" = type { [8 x i8] }
%"struct.std::__1::array.13" = type { [2 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.std::__1::array.14" = type { [8 x i8] }
%"struct.std::__1::array.15" = type { [8 x %"class.std::__1::shared_ptr"] }
%"class.std::__1::shared_ptr" = type { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.31", %"class.libgav1::Array2D.2" }
%"class.libgav1::Array2D.31" = type { %"class.std::__1::unique_ptr.32", i64, i64, %"class.libgav1::Array2DView.39" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon.35 }
%union.anon.35 = type { i32 }
%"class.libgav1::Array2DView.39" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.std::__1::array.21" = type { [8 x i8] }
%"struct.std::__1::array.40" = type opaque
%"struct.std::__1::array.41" = type opaque
%"class.libgav1::DaalaBitReader" = type { %"class.libgav1::BitReader", i8*, i8*, i8*, i8, i32, i32, i64 }
%"class.libgav1::BitReader" = type { i32 (...)** }
%"struct.libgav1::SymbolDecoderContext" = type { [5 x [4 x [11 x i16]]], [8 x i8], [3 x [9 x i16]], [10 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [5 x i16], [22 x i8], [5 x i16], [22 x i8], [4 x [5 x i16]], [24 x i8], [3 x i16], [26 x i8], [5 x [5 x [14 x i16]]], [4 x i8], [4 x [14 x i16]], [16 x i8], [8 x [8 x i16]], [2 x [13 x [15 x i16]]], [20 x i8], [9 x i16], [14 x i8], [6 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [6 x i16], [20 x i8], [4 x [3 x [4 x i16]]], [21 x [3 x i16]], [2 x i8], [5 x [13 x [3 x i16]]], [26 x i8], [3 x [4 x [17 x i16]]], [8 x i8], [2 x [4 x [13 x [17 x i16]]]], [16 x i8], [2 x [2 x [6 x i16]]], [16 x i8], [2 x [2 x [7 x i16]]], [8 x i8], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [24 x i8], [2 x [2 x [10 x i16]]], [16 x i8], [2 x [11 x i16]], [20 x i8], [2 x [12 x i16]], [16 x i8], [5 x [2 x [9 x [3 x i16]]]], [4 x i8], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [24 x i8], [5 x [2 x [21 x [5 x i16]]]], [12 x i8], [2 x [3 x [3 x i16]]], [28 x i8], [4 x i16], [24 x i8], [3 x i16], [26 x i8], [3 x i16], [26 x i8], [7 x [3 x [3 x i16]]], [2 x i8], [7 x [8 x i16]], [16 x i8], [2 x [3 x i16]], [20 x i8], [7 x [8 x i16]], [16 x i8], [2 x [7 x [5 x [9 x i16]]]], [20 x i8], [4 x [3 x i16]], [8 x i8], [5 x [3 x i16]], [2 x i8], [5 x [3 x i16]], [2 x i8], [2 x [3 x [3 x [3 x i16]]]], [20 x i8], [3 x [2 x [3 x i16]]], [28 x i8], [3 x [6 x [3 x i16]]], [20 x i8], [8 x [9 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [2 x [3 x i16]], [20 x i8], [6 x [3 x i16]], [28 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [5 x i16]], [2 x i8], [22 x [3 x i16]], [28 x i8], [22 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [22 x [4 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [6 x [3 x i16]], [28 x i8], [22 x [3 x i16]], [28 x i8], [16 x [4 x i16]], [2 x [5 x i16]], [12 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [12 x i16]]], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [2 x [5 x i16]]]], [16 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [10 x [3 x i16]]]], [16 x i8], [2 x [2 x [5 x i16]]], [24 x i8], [2 x [2 x [3 x i16]]], [8 x i8] }
%"class.libgav1::SegmentationMap" = type { i32, i32, %"class.std::__1::unique_ptr.3", %"class.libgav1::Array2DView.9" }
%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array.21", %"struct.std::__1::array.12", %"struct.std::__1::array.12", %"struct.std::__1::array.14", %"struct.std::__1::array.22", %"class.libgav1::Array2D.23", %"class.libgav1::Array2D.31" }
%"struct.std::__1::array.22" = type { [8 x i16] }
%"class.libgav1::Array2D.23" = type { %"class.std::__1::unique_ptr.24", i64, i64, %"class.libgav1::Array2DView.30" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }
%"class.libgav1::Array2DView.30" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }
%"class.libgav1::PostFilter" = type <{ [2 x { i64, i64 }], %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::dsp::Dsp"*, i32, i32, i32, i32, i8, [3 x i8], [3 x i8], i8, i32, [4 x i8], i8*, i8*, i8, [8 x [4 x [8 x [2 x i8]]]], [3 x i8], [3 x %struct.anon.42], %"class.libgav1::Array2D.43"*, %"class.libgav1::Array2D.51"*, %"class.libgav1::LoopRestorationInfo"*, [2 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"*, [3 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"*, i8, [7 x i8], %"class.libgav1::ThreadPool"*, i32, [9248 x i16], [4 x i8] }>
%struct.anon.42 = type { i32, i32, i32 }
%"class.libgav1::LoopRestorationInfo" = type { [3 x %"struct.libgav1::RestorationUnitInfo"*], %"class.libgav1::DynamicBuffer", [3 x i8], %"struct.libgav1::LoopRestoration"*, i8, i8, [3 x i32], [3 x i32], [3 x i32] }
%"class.libgav1::DynamicBuffer" = type { %"class.std::__1::unique_ptr.59", i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.libgav1::RestorationUnitInfo"* }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr", i64, i8, i8, [6 x i8] }>
%"class.libgav1::BlockParametersHolder" = type { i32, i32, %"class.libgav1::DynamicBuffer.65", %"struct.std::__1::atomic", %"class.libgav1::Array2D.74" }
%"class.libgav1::DynamicBuffer.65" = type { %"class.std::__1::unique_ptr.66", i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.69"* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.libgav1::BlockParameters"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.libgav1::Array2D.74" = type { %"class.std::__1::unique_ptr.75", i64, i64, %"class.libgav1::Array2DView.88" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.libgav1::BlockParameters"** }
%"class.libgav1::Array2DView.88" = type { i32, i32, %"struct.libgav1::BlockParameters"** }
%"class.libgav1::Quantizer" = type { %"struct.libgav1::QuantizerParameters"*, i16*, i16* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.libgav1::Array2D.98" = type { %"class.std::__1::unique_ptr.99", i64, i64, %"class.libgav1::Array2DView.124" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::unique_ptr.102"* }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.libgav1::ResidualBuffer"* }
%"class.libgav1::ResidualBuffer" = type { %"class.std::__1::unique_ptr.95", %"class.libgav1::Queue", %"class.libgav1::Queue.111", %"class.libgav1::ResidualBuffer"* }
%"class.libgav1::Queue" = type { %"class.std::__1::unique_ptr.105", i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.libgav1::TransformParameters"* }
%"struct.libgav1::TransformParameters" = type { i8, i32 }
%"class.libgav1::Queue.111" = type { %"class.std::__1::unique_ptr.112", i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.libgav1::PartitionTreeNode"* }
%"struct.libgav1::PartitionTreeNode" = type <{ i32, i32, i8, [3 x i8] }>
%"class.libgav1::Array2DView.124" = type { i32, i32, %"class.std::__1::unique_ptr.102"* }
%"class.libgav1::RefCountedBuffer" = type { %"class.libgav1::BufferPool"*, i8, i8*, %"class.libgav1::YuvBuffer", i8, %"class.std::__1::mutex", i8, i32, %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.libgav1::SegmentationMap", %"struct.std::__1::array.10", [8 x i8], %"struct.libgav1::SymbolDecoderContext", %"struct.std::__1::array.12", %"struct.std::__1::array.13", %"struct.libgav1::Segmentation", %"struct.libgav1::FilmGrainParams", %"struct.libgav1::ReferenceInfo", [16 x i8] }
%"class.libgav1::BufferPool" = type { %"class.std::__1::mutex", %"class.libgav1::Vector", %"class.libgav1::InternalFrameBufferList", i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8* }
%"class.libgav1::Vector" = type { %"class.libgav1::internal::VectorBase" }
%"class.libgav1::internal::VectorBase" = type { %"class.libgav1::RefCountedBuffer"**, i64, i64 }
%"class.libgav1::InternalFrameBufferList" = type { %"class.libgav1::Vector.16" }
%"class.libgav1::Vector.16" = type { %"class.libgav1::internal::VectorBase.17" }
%"class.libgav1::internal::VectorBase.17" = type { %"class.std::__1::unique_ptr.18"*, i64, i64 }
%"class.std::__1::unique_ptr.18" = type opaque
%struct.Libgav1FrameBuffer = type { [3 x i8*], [3 x i32], i8* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.19, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.19 = type { i64 }
%"class.libgav1::Array2D.43" = type { %"class.std::__1::unique_ptr.44", i64, i64, %"class.libgav1::Array2DView.50" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i16* }
%"class.libgav1::Array2DView.50" = type { i32, i32, i16* }
%"class.libgav1::Array2D.51" = type { %"class.std::__1::unique_ptr.52", i64, i64, %"class.libgav1::Array2DView.58" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8* }
%"class.libgav1::Array2DView.58" = type { i32, i32, i8* }
%"struct.std::__1::array.125" = type { [3 x %"struct.libgav1::RestorationUnitInfo"] }
%"class.libgav1::ThreadPool" = type { %"class.libgav1::Executor", %"class.std::__1::condition_variable", %"class.std::__1::mutex", %"class.libgav1::UnboundedQueue", %"class.std::__1::unique_ptr.89", i8, i32, [16 x i8] }
%"class.libgav1::Executor" = type { i32 (...)** }
%"class.libgav1::UnboundedQueue" = type { %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64, %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64 }
%"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.libgav1::ThreadPool::WorkerThread"** }
%"class.libgav1::ThreadPool::WorkerThread" = type opaque
%"struct.libgav1::Tile::ThreadingParameters" = type { %"class.std::__1::mutex", %"class.libgav1::Array2D.126", i8, i32, %"class.std::__1::condition_variable" }
%"class.libgav1::Array2D.126" = type { %"class.std::__1::unique_ptr.127", i64, i64, %"class.libgav1::Array2DView.133" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i8* }
%"class.libgav1::Array2DView.133" = type { i32, i32, i8* }
%"class.libgav1::ResidualBufferPool" = type <{ %"class.std::__1::mutex", %"class.libgav1::ResidualBufferStack", i64, i32, [4 x i8] }>
%"class.libgav1::ResidualBufferStack" = type { %"class.libgav1::ResidualBuffer"*, i64 }
%"class.libgav1::TileScratchBufferPool" = type <{ %"class.std::__1::mutex", %"class.libgav1::Stack", i32, [4 x i8] }>
%"class.libgav1::Stack" = type <{ [128 x %"class.std::__1::unique_ptr.134"], i32, [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.libgav1::TileScratchBuffer"* }
%"class.libgav1::BlockingCounterImpl" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.libgav1::PredictionParameters"* }
%"struct.libgav1::PredictionParameters" = type { i8, i8, [2 x i32], i8, i8, i32, i32, [2 x %"class.libgav1::Array2D"], i8, i8, i8, i32, i32, i8, i8, i8, %union.anon.81, [8 x i16], i32, i32, i32, [2 x %"struct.libgav1::MotionVector"], i32, [8 x [4 x i32]] }
%union.anon.81 = type { [8 x %"union.libgav1::CompoundMotionVector"] }
%"struct.std::__1::array.141" = type { [3 x %"class.libgav1::AlignedDynamicBuffer"] }
%"class.libgav1::AlignedDynamicBuffer" = type { %"class.std::__1::unique_ptr.95", i64 }
%"struct.std::__1::array.142" = type { [8 x i32] }
%"struct.libgav1::BlockParameters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x i8], [4 x i8], %"union.libgav1::CompoundMotionVector", %"struct.libgav1::PaletteModeInfo", %"class.std::__1::unique_ptr.78" }
%"struct.libgav1::PaletteModeInfo" = type { [2 x i8], [3 x [8 x i16]] }
%"struct.libgav1::TileScratchBuffer" = type <{ [16384 x i8], %union.anon.137, %"class.std::__1::unique_ptr.95", i64, i8, [3 x [34 x [34 x i8]]], [3 x i8] }>
%union.anon.137 = type { [2 x [16384 x i16]] }
%"struct.libgav1::MvContexts" = type { i32, i32, i32 }

$_ZNSt3__114__partial_sortIRPFbRKsS2_EPsEEvT0_S7_S7_T_ = comdat any

@_ZZN7libgav111FindMvStackERKNS_4Tile5BlockEbPNS_10MvContextsEE6deltas = internal unnamed_addr constant [2 x i32] [i32 -3, i32 -5], align 4
@_ZN7libgav117kNum4x4BlocksWideE = external local_unnamed_addr constant [22 x i8], align 16
@_ZN7libgav117kNum4x4BlocksHighE = external local_unnamed_addr constant [22 x i8], align 16
@_ZN7libgav112_GLOBAL__N_119kWarpValidThresholdE = internal unnamed_addr constant [22 x i32] [i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 32, i32 16, i32 16, i32 16, i32 32, i32 64, i32 32, i32 32, i32 32, i32 64, i32 64, i32 64, i32 64, i32 112, i32 112, i32 112], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav111FindMvStackERKNS_4Tile5BlockEbPNS_10MvContextsE(%"struct.libgav1::Tile::Block"* readonly dereferenceable(88), i1 zeroext, %"struct.libgav1::MvContexts"* nocapture) local_unnamed_addr #0 {
  %4 = alloca [20 x %"union.libgav1::CompoundMotionVector"], align 16
  %5 = alloca [20 x %"struct.libgav1::MotionVector"], align 32
  %6 = alloca [20 x %"struct.libgav1::MotionVector"], align 32
  %7 = alloca [20 x i8], align 16
  %8 = alloca [2 x i32], align 4
  %9 = alloca [2 x [2 x %"struct.libgav1::MotionVector"]], align 16
  %10 = alloca [2 x [2 x %"struct.libgav1::MotionVector"]], align 16
  %11 = alloca [2 x %"union.libgav1::CompoundMotionVector"], align 16
  %12 = alloca i1 (i16*, i16*)*, align 8
  %13 = alloca i1 (i16*, i16*)*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 14
  %20 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %19, align 8
  %21 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %20, i64 0, i32 18, i32 0, i32 0, i32 0
  %22 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %21, align 8
  %23 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 21, i64 0
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_113SetupGlobalMvERKNS_4Tile5BlockEiPNS_12MotionVectorE(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 0, %"struct.libgav1::MotionVector"* %23)
  br i1 %1, label %24, label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 21, i64 1
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_113SetupGlobalMvERKNS_4Tile5BlockEiPNS_12MotionVectorE(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 1, %"struct.libgav1::MotionVector"* %25)
  br label %26

26:                                               ; preds = %24, %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #5
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #5
  store i8 0, i8* %15, align 1
  %27 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #5
  store i32 0, i32* %16, align 4
  %28 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 6
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 0
  %33 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %34 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %33, i64 0, i32 5
  %35 = load i32, i32* %34, align 32
  %36 = icmp slt i32 %35, %31
  br i1 %36, label %37, label %86

37:                                               ; preds = %26
  %38 = add nsw i32 %31, -1
  %39 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %33, i64 0, i32 35
  %42 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %41, align 32
  %43 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %42, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %43, align 8
  %45 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %42, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = mul nsw i32 %46, %38
  %48 = sext i32 %47 to i64
  %49 = sext i32 %29 to i64
  %50 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %33, i64 0, i32 21
  %51 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %50, align 8
  %52 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %51, i64 0, i32 6
  %53 = load i32, i32* %52, align 8
  %54 = sub nsw i32 %53, %29
  %55 = icmp slt i32 %54, %40
  %56 = select i1 %55, i32 %54, i32 %40
  %57 = icmp sgt i32 %40, 15
  %58 = select i1 %57, i32 4, i32 0
  %59 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %44, i64 %48
  %60 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %59, i64 %49
  %61 = icmp slt i32 %56, 16
  %62 = select i1 %61, i32 %56, i32 16
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %60, i64 %63
  br label %65

65:                                               ; preds = %65, %37
  %66 = phi %"struct.libgav1::BlockParameters"** [ %60, %37 ], [ %80, %65 ]
  %67 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %66, align 8
  %68 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %67, i64 0, i32 0
  %69 = load i8, i8* %68, align 8
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksWideE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp sgt i32 %40, %73
  %75 = select i1 %74, i32 %73, i32 %40
  %76 = icmp slt i32 %75, %58
  %77 = select i1 %76, i32 %58, i32 %75
  %78 = shl nuw i32 %77, 1
  call fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, %"struct.libgav1::BlockParameters"* dereferenceable(96) %67, i1 zeroext %1, i32 %78, i8* nonnull %14, i8* nonnull %15, i32* nonnull %16) #5
  %79 = zext i32 %77 to i64
  %80 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %66, i64 %79
  %81 = icmp ult %"struct.libgav1::BlockParameters"** %80, %64
  br i1 %81, label %65, label %82

82:                                               ; preds = %65
  %83 = load i32, i32* %30, align 4
  %84 = load i32, i32* %28, align 8
  %85 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  br label %86

86:                                               ; preds = %82, %26
  %87 = phi %"class.libgav1::Tile"* [ %85, %82 ], [ %33, %26 ]
  %88 = phi i32 [ %84, %82 ], [ %29, %26 ]
  %89 = phi i32 [ %83, %82 ], [ %31, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #5
  store i8 0, i8* %17, align 1
  %90 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %87, i64 0, i32 7
  %91 = load i32, i32* %90, align 8
  %92 = icmp slt i32 %91, %88
  br i1 %92, label %93, label %141

93:                                               ; preds = %86
  %94 = add nsw i32 %88, -1
  %95 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 11
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %87, i64 0, i32 35
  %98 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %97, align 32
  %99 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %98, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %98, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %101, align 8
  %103 = mul nsw i32 %100, %89
  %104 = sext i32 %103 to i64
  %105 = sext i32 %94 to i64
  %106 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %87, i64 0, i32 21
  %107 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %106, align 8
  %108 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %107, i64 0, i32 7
  %109 = load i32, i32* %108, align 4
  %110 = sub nsw i32 %109, %89
  %111 = icmp slt i32 %110, %96
  %112 = select i1 %111, i32 %110, i32 %96
  %113 = icmp sgt i32 %96, 15
  %114 = select i1 %113, i32 4, i32 0
  %115 = sext i32 %100 to i64
  %116 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %102, i64 %104
  %117 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %116, i64 %105
  %118 = icmp slt i32 %112, 16
  %119 = select i1 %118, i32 %112, i32 16
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %120, %115
  %122 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %117, i64 %121
  br label %123

123:                                              ; preds = %123, %93
  %124 = phi %"struct.libgav1::BlockParameters"** [ %117, %93 ], [ %139, %123 ]
  %125 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %124, align 8
  %126 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %125, i64 0, i32 0
  %127 = load i8, i8* %126, align 8
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksHighE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = icmp sgt i32 %96, %131
  %133 = select i1 %132, i32 %131, i32 %96
  %134 = icmp slt i32 %133, %114
  %135 = select i1 %134, i32 %114, i32 %133
  %136 = shl nuw i32 %135, 1
  call fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, %"struct.libgav1::BlockParameters"* dereferenceable(96) %125, i1 zeroext %1, i32 %136, i8* nonnull %14, i8* nonnull %17, i32* nonnull %16) #5
  %137 = zext i32 %135 to i64
  %138 = mul nsw i64 %137, %115
  %139 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %124, i64 %138
  %140 = icmp ult %"struct.libgav1::BlockParameters"** %139, %122
  br i1 %140, label %123, label %141

141:                                              ; preds = %123, %86
  %142 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 10
  %143 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 11
  %144 = load i32, i32* %142, align 4
  %145 = load i32, i32* %143, align 4
  %146 = icmp slt i32 %144, %145
  %147 = select i1 %146, i32 %145, i32 %144
  %148 = icmp slt i32 %147, 17
  br i1 %148, label %149, label %190

149:                                              ; preds = %141
  %150 = load i32, i32* %30, align 4
  %151 = add nsw i32 %150, -1
  %152 = load i32, i32* %28, align 8
  %153 = add nsw i32 %152, %144
  %154 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %155 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %154, i64 0, i32 5
  %156 = load i32, i32* %155, align 32
  %157 = icmp slt i32 %156, %150
  br i1 %157, label %158, label %190

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %154, i64 0, i32 6
  %160 = load i32, i32* %159, align 4
  %161 = icmp slt i32 %160, %150
  br i1 %161, label %190, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %154, i64 0, i32 7
  %164 = load i32, i32* %163, align 8
  %165 = icmp sgt i32 %164, %153
  br i1 %165, label %190, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %154, i64 0, i32 8
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, %153
  br i1 %169, label %170, label %190

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %154, i64 0, i32 35
  %172 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %171, align 32
  %173 = sext i32 %151 to i64
  %174 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %172, i64 0, i32 4, i32 3, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = mul nsw i64 %176, %173
  %178 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %172, i64 0, i32 4, i32 3, i32 2
  %179 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %178, align 8
  %180 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %179, i64 %177
  %181 = sext i32 %153 to i64
  %182 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %180, i64 %181
  %183 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %182, align 8
  %184 = icmp eq %"struct.libgav1::BlockParameters"* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %170
  %186 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %183, i64 0, i32 14, i64 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, -1
  br i1 %188, label %190, label %189

189:                                              ; preds = %185
  call fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, %"struct.libgav1::BlockParameters"* nonnull dereferenceable(96) %183, i1 zeroext %1, i32 4, i8* nonnull %14, i8* nonnull %15, i32* nonnull %16) #5
  br label %190

190:                                              ; preds = %189, %185, %170, %166, %162, %158, %149, %141
  %191 = load i8, i8* %15, align 1, !range !2
  %192 = load i8, i8* %17, align 1, !range !2
  %193 = add nuw nsw i8 %192, %191
  %194 = zext i8 %193 to i32
  %195 = load i32, i32* %16, align 4
  %196 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 18
  store i32 %195, i32* %196, align 8
  %197 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %198 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %197, i64 0, i32 21
  %199 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %198, align 8
  %200 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %199, i64 0, i32 40
  %201 = load i8, i8* %200, align 4, !range !2
  %202 = icmp eq i8 %201, 0
  %203 = getelementptr inbounds %"struct.libgav1::MvContexts", %"struct.libgav1::MvContexts"* %2, i64 0, i32 0
  br i1 %202, label %667, label %204

204:                                              ; preds = %190
  store i32 -1, i32* %203, align 4
  %205 = load i32, i32* %142, align 4
  %206 = icmp sgt i32 %205, 15
  %207 = select i1 %206, i32 4, i32 2
  %208 = load i32, i32* %143, align 8
  %209 = icmp sgt i32 %208, 15
  %210 = select i1 %209, i32 4, i32 2
  %211 = load i32, i32* %30, align 4
  %212 = or i32 %211, 1
  %213 = load i32, i32* %28, align 8
  %214 = or i32 %213, 1
  %215 = icmp slt i32 %208, 16
  %216 = select i1 %215, i32 %208, i32 16
  %217 = add nsw i32 %212, %216
  %218 = icmp slt i32 %205, 16
  %219 = select i1 %218, i32 %205, i32 16
  %220 = add nsw i32 %214, %219
  %221 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %222 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %221, i64 0, i32 24
  %223 = load %"struct.libgav1::TemporalMotionField"*, %"struct.libgav1::TemporalMotionField"** %222, align 32
  %224 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %223, i64 0, i32 0, i32 3, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %223, i64 0, i32 0, i32 3, i32 2
  %227 = load %"struct.libgav1::MotionVector"*, %"struct.libgav1::MotionVector"** %226, align 8
  %228 = getelementptr inbounds %"struct.libgav1::TemporalMotionField", %"struct.libgav1::TemporalMotionField"* %223, i64 0, i32 1, i32 3, i32 2
  %229 = load i8*, i8** %228, align 8
  %230 = bitcast [20 x %"struct.libgav1::MotionVector"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %230) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %230, i8 -86, i64 80, i1 false) #5
  %231 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %231) #5
  %232 = ashr i32 %211, 1
  %233 = mul nsw i32 %225, %232
  %234 = mul nsw i32 %225, %210
  %235 = ashr exact i32 %234, 1
  %236 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %221, i64 0, i32 6
  %237 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %221, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %231, i8 -86, i64 20, i1 false) #5
  br label %238

238:                                              ; preds = %277, %204
  %239 = phi i32 [ -1, %204 ], [ %273, %277 ]
  %240 = phi i32 [ 0, %204 ], [ %274, %277 ]
  %241 = phi i32 [ %233, %204 ], [ %278, %277 ]
  %242 = phi i32 [ %212, %204 ], [ %279, %277 ]
  %243 = icmp eq i32 %242, %212
  br label %244

244:                                              ; preds = %272, %238
  %245 = phi i32 [ %239, %238 ], [ %273, %272 ]
  %246 = phi i32 [ %240, %238 ], [ %274, %272 ]
  %247 = phi i32 [ %214, %238 ], [ %275, %272 ]
  %248 = load i32, i32* %236, align 4
  %249 = icmp sgt i32 %248, %242
  br i1 %249, label %250, label %272

250:                                              ; preds = %244
  %251 = load i32, i32* %237, align 4
  %252 = icmp sgt i32 %251, %247
  br i1 %252, label %253, label %272

253:                                              ; preds = %250
  %254 = ashr i32 %247, 1
  %255 = add nsw i32 %254, %241
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %227, i64 %256, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = trunc i32 %258 to i16
  %260 = icmp eq i16 %259, -32768
  br i1 %260, label %261, label %265

261:                                              ; preds = %253
  %262 = icmp eq i32 %247, %214
  %263 = and i1 %243, %262
  br i1 %263, label %264, label %272

264:                                              ; preds = %261
  store i32 1, i32* %203, align 4
  br label %272

265:                                              ; preds = %253
  %266 = sext i32 %246 to i64
  %267 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 %266, i32 0, i32 0
  store i32 %258, i32* %267, align 4
  %268 = getelementptr inbounds i8, i8* %229, i64 %256
  %269 = load i8, i8* %268, align 1
  %270 = add nsw i32 %246, 1
  %271 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %266
  store i8 %269, i8* %271, align 1
  br label %272

272:                                              ; preds = %265, %264, %261, %250, %244
  %273 = phi i32 [ %245, %250 ], [ 1, %264 ], [ %245, %261 ], [ %245, %265 ], [ %245, %244 ]
  %274 = phi i32 [ %246, %250 ], [ %246, %264 ], [ %246, %261 ], [ %270, %265 ], [ %246, %244 ]
  %275 = add nsw i32 %247, %207
  %276 = icmp slt i32 %275, %220
  br i1 %276, label %244, label %277

277:                                              ; preds = %272
  %278 = add nsw i32 %241, %235
  %279 = add nsw i32 %242, %210
  %280 = icmp slt i32 %279, %217
  br i1 %280, label %238, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 2
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = shl i32 1, %284
  %286 = and i32 %285, 30576
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %335, label %288

288:                                              ; preds = %281
  %289 = load i32, i32* %143, align 8
  %290 = load i32, i32* %142, align 4
  %291 = add nsw i32 %289, -2
  %292 = add nsw i32 %289, %212
  %293 = ashr i32 %292, 1
  %294 = mul nsw i32 %293, %225
  %295 = add nsw i32 %214, -2
  %296 = ashr i32 %295, 1
  %297 = add nsw i32 %294, %296
  %298 = add nsw i32 %290, 2
  %299 = ashr i32 %298, 1
  %300 = add nsw i32 %297, %299
  %301 = sub nsw i32 %300, %225
  %302 = load i32, i32* %30, align 4
  %303 = and i32 %302, 15
  %304 = add nsw i32 %303, %289
  %305 = load i32, i32* %28, align 8
  %306 = and i32 %305, 15
  %307 = add nsw i32 %306, -2
  %308 = icmp slt i32 %304, 16
  %309 = icmp ult i32 %307, 16
  %310 = and i1 %308, %309
  br i1 %310, label %311, label %330

311:                                              ; preds = %288
  %312 = load i32, i32* %236, align 4
  %313 = icmp sgt i32 %312, %292
  br i1 %313, label %314, label %330

314:                                              ; preds = %311
  %315 = load i32, i32* %237, align 4
  %316 = icmp sgt i32 %315, %295
  br i1 %316, label %317, label %330

317:                                              ; preds = %314
  %318 = sext i32 %297 to i64
  %319 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %227, i64 %318, i32 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = trunc i32 %320 to i16
  %322 = icmp eq i16 %321, -32768
  br i1 %322, label %330, label %323

323:                                              ; preds = %317
  %324 = sext i32 %274 to i64
  %325 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 %324, i32 0, i32 0
  store i32 %320, i32* %325, align 4
  %326 = getelementptr inbounds i8, i8* %229, i64 %318
  %327 = load i8, i8* %326, align 1
  %328 = add nsw i32 %274, 1
  %329 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %324
  store i8 %327, i8* %329, align 1
  br label %330

330:                                              ; preds = %323, %317, %314, %311, %288
  %331 = phi i32 [ %274, %288 ], [ %274, %314 ], [ %328, %323 ], [ %274, %317 ], [ %274, %311 ]
  %332 = add nsw i32 %306, %290
  %333 = icmp ult i32 %332, 16
  %334 = and i1 %308, %333
  br i1 %334, label %620, label %640

335:                                              ; preds = %659, %653, %649, %645, %640, %281
  %336 = phi i32 [ %274, %281 ], [ %641, %640 ], [ %641, %649 ], [ %664, %659 ], [ %641, %653 ], [ %641, %645 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %666, label %338

338:                                              ; preds = %335
  %339 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %19, align 8
  %340 = bitcast [2 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340) #5
  %341 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  store i32 -1431655766, i32* %341, align 4
  %342 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 1
  store i32 -1431655766, i32* %342, align 4
  %343 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %221, i64 0, i32 42
  %344 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %343, align 16
  %345 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %339, i64 0, i32 14, i64 0
  %346 = load i8, i8* %345, align 1
  %347 = sext i8 %346 to i64
  %348 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %344, i64 0, i32 32, i32 2, i32 0, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = sext i8 %349 to i32
  %351 = icmp slt i32 %350, 31
  %352 = select i1 %351, i32 %350, i32 31
  %353 = icmp sgt i32 %352, -31
  %354 = select i1 %353, i32 %352, i32 -31
  store i32 %354, i32* %341, align 4
  br i1 %1, label %370, label %355

355:                                              ; preds = %338
  %356 = add nsw i32 %336, 3
  %357 = and i32 %356, -4
  %358 = icmp slt i32 %336, %357
  br i1 %358, label %359, label %387

359:                                              ; preds = %355
  %360 = sext i32 %336 to i64
  %361 = getelementptr [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 %360
  %362 = bitcast %"struct.libgav1::MotionVector"* %361 to i8*
  %363 = xor i32 %336, -1
  %364 = add i32 %357, %363
  %365 = zext i32 %364 to i64
  %366 = shl nuw nsw i64 %365, 2
  %367 = add nuw nsw i64 %366, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %362, i8 0, i64 %367, i1 false) #5
  %368 = getelementptr [20 x i8], [20 x i8]* %7, i64 0, i64 %360
  %369 = add nuw nsw i64 %365, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %368, i8 0, i64 %369, i1 false) #5
  br label %387

370:                                              ; preds = %338
  %371 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %339, i64 0, i32 14, i64 1
  %372 = load i8, i8* %371, align 1
  %373 = sext i8 %372 to i64
  %374 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %344, i64 0, i32 32, i32 2, i32 0, i64 %373
  %375 = load i8, i8* %374, align 1
  %376 = sext i8 %375 to i32
  %377 = icmp slt i32 %376, 31
  %378 = select i1 %377, i32 %376, i32 31
  %379 = icmp sgt i32 %378, -31
  %380 = select i1 %379, i32 %378, i32 -31
  store i32 %380, i32* %342, align 4
  %381 = and i32 %336, 1
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %387, label %383

383:                                              ; preds = %370
  %384 = sext i32 %336 to i64
  %385 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 %384, i32 0, i32 0
  store i32 0, i32* %385, align 4
  %386 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %384
  store i8 0, i8* %386, align 1
  br label %387

387:                                              ; preds = %383, %370, %359, %355
  %388 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %221, i64 0, i32 21
  %389 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %388, align 8
  %390 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 0
  %391 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %339, i64 0, i32 18, i32 0, i32 0, i32 0
  %392 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %391, align 8
  %393 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %389, i64 0, i32 37
  %394 = load i8, i8* %393, align 1, !range !2
  %395 = icmp eq i8 %394, 0
  %396 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %389, i64 0, i32 36
  %397 = load i8, i8* %396, align 8
  %398 = select i1 %395, i8 %397, i8 2
  %399 = sext i8 %398 to i64
  %400 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 21, i64 0
  br i1 %1, label %401, label %477

401:                                              ; preds = %387
  %402 = bitcast [20 x %"union.libgav1::CompoundMotionVector"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %402) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %402, i8 -86, i64 160, i1 false) #5
  %403 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %404 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %403, i64 0, i32 22, i64 %399
  %405 = load void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %404, align 8
  %406 = getelementptr inbounds [20 x %"union.libgav1::CompoundMotionVector"], [20 x %"union.libgav1::CompoundMotionVector"]* %4, i64 0, i64 0
  call void %405(%"struct.libgav1::MotionVector"* nonnull %390, i8* nonnull %231, i32* nonnull %341, i32 %336, %"union.libgav1::CompoundMotionVector"* nonnull %406) #5
  %407 = load i32, i32* %203, align 4
  %408 = icmp eq i32 %407, -1
  br i1 %408, label %409, label %429

409:                                              ; preds = %401
  %410 = bitcast [20 x %"union.libgav1::CompoundMotionVector"]* %4 to <4 x i16>*
  %411 = load <4 x i16>, <4 x i16>* %410, align 16
  %412 = sext <4 x i16> %411 to <4 x i32>
  %413 = bitcast %"struct.libgav1::MotionVector"* %400 to <4 x i16>*
  %414 = load <4 x i16>, <4 x i16>* %413, align 4
  %415 = sext <4 x i16> %414 to <4 x i32>
  %416 = sub nsw <4 x i32> %412, %415
  %417 = icmp slt <4 x i32> %416, zeroinitializer
  %418 = sub nsw <4 x i32> zeroinitializer, %416
  %419 = select <4 x i1> %417, <4 x i32> %418, <4 x i32> %416
  %420 = shufflevector <4 x i32> %419, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %421 = icmp sgt <4 x i32> %419, %420
  %422 = select <4 x i1> %421, <4 x i32> %419, <4 x i32> %420
  %423 = shufflevector <4 x i32> %422, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %424 = icmp sgt <4 x i32> %422, %423
  %425 = select <4 x i1> %424, <4 x i32> %422, <4 x i32> %423
  %426 = extractelement <4 x i32> %425, i32 0
  %427 = icmp ugt i32 %426, 15
  %428 = zext i1 %427 to i32
  store i32 %428, i32* %203, align 4
  br label %429

429:                                              ; preds = %409, %401
  %430 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 16, i32 0, i64 0
  %431 = load i32, i32* %16, align 4
  %432 = ptrtoint %"union.libgav1::CompoundMotionVector"* %430 to i64
  %433 = sext i32 %336 to i64
  br label %434

434:                                              ; preds = %472, %429
  %435 = phi i64 [ %474, %472 ], [ 0, %429 ]
  %436 = phi i32 [ %473, %472 ], [ %431, %429 ]
  %437 = getelementptr inbounds [20 x %"union.libgav1::CompoundMotionVector"], [20 x %"union.libgav1::CompoundMotionVector"]* %4, i64 0, i64 %435
  %438 = sext i32 %436 to i64
  %439 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 16, i32 0, i64 %438
  %440 = icmp eq i32 %436, 0
  br i1 %440, label %452, label %441

441:                                              ; preds = %434
  %442 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %437, i64 0, i32 0
  %443 = load i64, i64* %442, align 8
  br label %444

444:                                              ; preds = %449, %441
  %445 = phi %"union.libgav1::CompoundMotionVector"* [ %430, %441 ], [ %450, %449 ]
  %446 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %445, i64 0, i32 0
  %447 = load i64, i64* %446, align 8
  %448 = icmp eq i64 %447, %443
  br i1 %448, label %452, label %449

449:                                              ; preds = %444
  %450 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %445, i64 1
  %451 = icmp eq %"union.libgav1::CompoundMotionVector"* %450, %439
  br i1 %451, label %462, label %444

452:                                              ; preds = %444, %434
  %453 = phi %"union.libgav1::CompoundMotionVector"* [ %430, %434 ], [ %445, %444 ]
  %454 = icmp eq %"union.libgav1::CompoundMotionVector"* %453, %439
  br i1 %454, label %462, label %455

455:                                              ; preds = %452
  %456 = ptrtoint %"union.libgav1::CompoundMotionVector"* %453 to i64
  %457 = sub i64 %456, %432
  %458 = ashr exact i64 %457, 3
  %459 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 17, i64 %458
  %460 = load i16, i16* %459, align 2
  %461 = add i16 %460, 16
  store i16 %461, i16* %459, align 2
  br label %472

462:                                              ; preds = %449, %452
  %463 = icmp sgt i32 %436, 7
  br i1 %463, label %472, label %464

464:                                              ; preds = %462
  %465 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %437, i64 0, i32 0
  %466 = load i64, i64* %465, align 8
  %467 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %439, i64 0, i32 0
  store i64 %466, i64* %467, align 8
  %468 = trunc i32 %436 to i16
  %469 = sub i16 23, %468
  %470 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 17, i64 %438
  store i16 %469, i16* %470, align 2
  %471 = add nsw i32 %436, 1
  br label %472

472:                                              ; preds = %464, %462, %455
  %473 = phi i32 [ %436, %455 ], [ %471, %464 ], [ %436, %462 ]
  %474 = add nuw nsw i64 %435, 1
  %475 = icmp slt i64 %474, %433
  br i1 %475, label %434, label %476

476:                                              ; preds = %472
  store i32 %473, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %402) #5
  br label %619

477:                                              ; preds = %387
  %478 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 16
  %479 = bitcast %union.anon.81* %478 to %"struct.libgav1::MotionVector"*
  %480 = icmp eq i32 %354, 0
  br i1 %480, label %481, label %537

481:                                              ; preds = %477
  %482 = icmp eq i32 %273, -1
  br i1 %482, label %483, label %501

483:                                              ; preds = %481
  %484 = bitcast %"struct.libgav1::MotionVector"* %400 to [2 x i16]*
  %485 = bitcast %"struct.libgav1::MotionVector"* %400 to i16*
  %486 = load i16, i16* %485, align 4
  %487 = sext i16 %486 to i32
  %488 = icmp slt i32 %487, 0
  %489 = sub nsw i32 0, %487
  %490 = select i1 %488, i32 %489, i32 %487
  %491 = getelementptr inbounds [2 x i16], [2 x i16]* %484, i64 0, i64 1
  %492 = load i16, i16* %491, align 2
  %493 = sext i16 %492 to i32
  %494 = icmp slt i32 %493, 0
  %495 = sub nsw i32 0, %493
  %496 = select i1 %494, i32 %495, i32 %493
  %497 = icmp slt i32 %490, %496
  %498 = select i1 %497, i32 %496, i32 %490
  %499 = icmp sgt i32 %498, 15
  %500 = zext i1 %499 to i32
  store i32 %500, i32* %203, align 4
  br label %501

501:                                              ; preds = %483, %481
  %502 = sext i32 %195 to i64
  %503 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %479, i64 %502
  %504 = icmp eq %"struct.libgav1::MotionVector"* %503, %479
  br i1 %504, label %513, label %505

505:                                              ; preds = %501, %510
  %506 = phi %"struct.libgav1::MotionVector"* [ %511, %510 ], [ %479, %501 ]
  %507 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %506, i64 0, i32 0, i32 0
  %508 = load i32, i32* %507, align 4
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %513, label %510

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %506, i64 1
  %512 = icmp eq %"struct.libgav1::MotionVector"* %511, %503
  br i1 %512, label %526, label %505

513:                                              ; preds = %505, %501
  %514 = phi %"struct.libgav1::MotionVector"* [ %479, %501 ], [ %506, %505 ]
  %515 = icmp eq %"struct.libgav1::MotionVector"* %514, %503
  br i1 %515, label %526, label %516

516:                                              ; preds = %513
  %517 = ptrtoint %"struct.libgav1::MotionVector"* %514 to i64
  %518 = ptrtoint %union.anon.81* %478 to i64
  %519 = sub i64 %517, %518
  %520 = ashr exact i64 %519, 2
  %521 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 17, i64 %520
  %522 = load i16, i16* %521, align 2
  %523 = trunc i32 %336 to i16
  %524 = shl i16 %523, 4
  %525 = add i16 %522, %524
  store i16 %525, i16* %521, align 2
  br label %619

526:                                              ; preds = %510, %513
  %527 = icmp sgt i32 %195, 7
  br i1 %527, label %619, label %528

528:                                              ; preds = %526
  %529 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %503, i64 0, i32 0, i32 0
  store i32 0, i32* %529, align 4
  %530 = shl i32 %336, 4
  %531 = or i32 %530, 7
  %532 = sub nsw i32 %531, %195
  %533 = trunc i32 %532 to i16
  %534 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 17, i64 %502
  store i16 %533, i16* %534, align 2
  %535 = load i32, i32* %16, align 4
  %536 = add nsw i32 %535, 1
  store i32 %536, i32* %16, align 4
  br label %619

537:                                              ; preds = %477
  %538 = bitcast [20 x %"struct.libgav1::MotionVector"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %538) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %538, i8 -86, i64 80, i1 false) #5
  %539 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %540 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %539, i64 0, i32 23, i64 %399
  %541 = load void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %540, align 8
  %542 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %5, i64 0, i64 0
  call void %541(%"struct.libgav1::MotionVector"* nonnull %390, i8* nonnull %231, i32 %354, i32 %336, %"struct.libgav1::MotionVector"* nonnull %542) #5
  %543 = load i32, i32* %203, align 4
  %544 = icmp eq i32 %543, -1
  br i1 %544, label %545, label %572

545:                                              ; preds = %537
  %546 = bitcast [20 x %"struct.libgav1::MotionVector"]* %5 to [2 x i16]*
  %547 = bitcast [20 x %"struct.libgav1::MotionVector"]* %5 to i16*
  %548 = load i16, i16* %547, align 32
  %549 = sext i16 %548 to i32
  %550 = bitcast %"struct.libgav1::MotionVector"* %400 to [2 x i16]*
  %551 = bitcast %"struct.libgav1::MotionVector"* %400 to i16*
  %552 = load i16, i16* %551, align 4
  %553 = sext i16 %552 to i32
  %554 = sub nsw i32 %549, %553
  %555 = icmp slt i32 %554, 0
  %556 = sub nsw i32 0, %554
  %557 = select i1 %555, i32 %556, i32 %554
  %558 = getelementptr inbounds [2 x i16], [2 x i16]* %546, i64 0, i64 1
  %559 = load i16, i16* %558, align 2
  %560 = sext i16 %559 to i32
  %561 = getelementptr inbounds [2 x i16], [2 x i16]* %550, i64 0, i64 1
  %562 = load i16, i16* %561, align 2
  %563 = sext i16 %562 to i32
  %564 = sub nsw i32 %560, %563
  %565 = icmp slt i32 %564, 0
  %566 = sub nsw i32 0, %564
  %567 = select i1 %565, i32 %566, i32 %564
  %568 = icmp slt i32 %557, %567
  %569 = select i1 %568, i32 %567, i32 %557
  %570 = icmp sgt i32 %569, 15
  %571 = zext i1 %570 to i32
  store i32 %571, i32* %203, align 4
  br label %572

572:                                              ; preds = %545, %537
  %573 = load i32, i32* %16, align 4
  %574 = ptrtoint %union.anon.81* %478 to i64
  %575 = sext i32 %336 to i64
  br label %576

576:                                              ; preds = %614, %572
  %577 = phi i64 [ %616, %614 ], [ 0, %572 ]
  %578 = phi i32 [ %615, %614 ], [ %573, %572 ]
  %579 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %5, i64 0, i64 %577
  %580 = sext i32 %578 to i64
  %581 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %479, i64 %580
  %582 = icmp eq %"struct.libgav1::MotionVector"* %581, %479
  br i1 %582, label %594, label %583

583:                                              ; preds = %576
  %584 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %579, i64 0, i32 0, i32 0
  %585 = load i32, i32* %584, align 4
  br label %586

586:                                              ; preds = %591, %583
  %587 = phi %"struct.libgav1::MotionVector"* [ %479, %583 ], [ %592, %591 ]
  %588 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %587, i64 0, i32 0, i32 0
  %589 = load i32, i32* %588, align 4
  %590 = icmp eq i32 %589, %585
  br i1 %590, label %594, label %591

591:                                              ; preds = %586
  %592 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %587, i64 1
  %593 = icmp eq %"struct.libgav1::MotionVector"* %592, %581
  br i1 %593, label %604, label %586

594:                                              ; preds = %586, %576
  %595 = phi %"struct.libgav1::MotionVector"* [ %479, %576 ], [ %587, %586 ]
  %596 = icmp eq %"struct.libgav1::MotionVector"* %595, %581
  br i1 %596, label %604, label %597

597:                                              ; preds = %594
  %598 = ptrtoint %"struct.libgav1::MotionVector"* %595 to i64
  %599 = sub i64 %598, %574
  %600 = ashr exact i64 %599, 2
  %601 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 17, i64 %600
  %602 = load i16, i16* %601, align 2
  %603 = add i16 %602, 16
  store i16 %603, i16* %601, align 2
  br label %614

604:                                              ; preds = %591, %594
  %605 = icmp sgt i32 %578, 7
  br i1 %605, label %614, label %606

606:                                              ; preds = %604
  %607 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %579, i64 0, i32 0, i32 0
  %608 = load i32, i32* %607, align 4
  %609 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %581, i64 0, i32 0, i32 0
  store i32 %608, i32* %609, align 4
  %610 = trunc i32 %578 to i16
  %611 = sub i16 23, %610
  %612 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %392, i64 0, i32 17, i64 %580
  store i16 %611, i16* %612, align 2
  %613 = add nsw i32 %578, 1
  br label %614

614:                                              ; preds = %606, %604, %597
  %615 = phi i32 [ %578, %597 ], [ %613, %606 ], [ %578, %604 ]
  %616 = add nuw nsw i64 %577, 1
  %617 = icmp slt i64 %616, %575
  br i1 %617, label %576, label %618

618:                                              ; preds = %614
  store i32 %615, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %538) #5
  br label %619

619:                                              ; preds = %618, %528, %526, %516, %476
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %340) #5
  br label %666

620:                                              ; preds = %330
  %621 = load i32, i32* %236, align 4
  %622 = icmp sgt i32 %621, %292
  br i1 %622, label %623, label %640

623:                                              ; preds = %620
  %624 = add nsw i32 %290, %214
  %625 = load i32, i32* %237, align 4
  %626 = icmp sgt i32 %625, %624
  br i1 %626, label %627, label %640

627:                                              ; preds = %623
  %628 = sext i32 %300 to i64
  %629 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %227, i64 %628, i32 0, i32 0
  %630 = load i32, i32* %629, align 4
  %631 = trunc i32 %630 to i16
  %632 = icmp eq i16 %631, -32768
  br i1 %632, label %640, label %633

633:                                              ; preds = %627
  %634 = sext i32 %331 to i64
  %635 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 %634, i32 0, i32 0
  store i32 %630, i32* %635, align 4
  %636 = getelementptr inbounds i8, i8* %229, i64 %628
  %637 = load i8, i8* %636, align 1
  %638 = add nsw i32 %331, 1
  %639 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %634
  store i8 %637, i8* %639, align 1
  br label %640

640:                                              ; preds = %633, %627, %623, %620, %330
  %641 = phi i32 [ %331, %330 ], [ %331, %623 ], [ %638, %633 ], [ %331, %627 ], [ %331, %620 ]
  %642 = add nsw i32 %303, %291
  %643 = icmp slt i32 %642, 16
  %644 = and i1 %643, %333
  br i1 %644, label %645, label %335

645:                                              ; preds = %640
  %646 = add nsw i32 %291, %212
  %647 = load i32, i32* %236, align 4
  %648 = icmp sgt i32 %647, %646
  br i1 %648, label %649, label %335

649:                                              ; preds = %645
  %650 = add nsw i32 %290, %214
  %651 = load i32, i32* %237, align 4
  %652 = icmp sgt i32 %651, %650
  br i1 %652, label %653, label %335

653:                                              ; preds = %649
  %654 = sext i32 %301 to i64
  %655 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %227, i64 %654, i32 0, i32 0
  %656 = load i32, i32* %655, align 4
  %657 = trunc i32 %656 to i16
  %658 = icmp eq i16 %657, -32768
  br i1 %658, label %335, label %659

659:                                              ; preds = %653
  %660 = sext i32 %641 to i64
  %661 = getelementptr inbounds [20 x %"struct.libgav1::MotionVector"], [20 x %"struct.libgav1::MotionVector"]* %6, i64 0, i64 %660, i32 0, i32 0
  store i32 %656, i32* %661, align 4
  %662 = getelementptr inbounds i8, i8* %229, i64 %654
  %663 = load i8, i8* %662, align 1
  %664 = add nsw i32 %641, 1
  %665 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %660
  store i8 %663, i8* %665, align 1
  br label %335

666:                                              ; preds = %335, %619
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %231) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %230) #5
  br label %668

667:                                              ; preds = %190
  store i32 0, i32* %203, align 4
  br label %668

668:                                              ; preds = %667, %666
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #5
  store i8 0, i8* %18, align 1
  %669 = load i32, i32* %30, align 4
  %670 = add nsw i32 %669, -1
  %671 = load i32, i32* %28, align 8
  %672 = add nsw i32 %671, -1
  %673 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %674 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %673, i64 0, i32 5
  %675 = load i32, i32* %674, align 32
  %676 = icmp slt i32 %675, %669
  br i1 %676, label %677, label %709

677:                                              ; preds = %668
  %678 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %673, i64 0, i32 6
  %679 = load i32, i32* %678, align 4
  %680 = icmp slt i32 %679, %669
  br i1 %680, label %709, label %681

681:                                              ; preds = %677
  %682 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %673, i64 0, i32 7
  %683 = load i32, i32* %682, align 8
  %684 = icmp slt i32 %683, %671
  br i1 %684, label %685, label %709

685:                                              ; preds = %681
  %686 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %673, i64 0, i32 8
  %687 = load i32, i32* %686, align 4
  %688 = icmp slt i32 %687, %671
  br i1 %688, label %709, label %689

689:                                              ; preds = %685
  %690 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %673, i64 0, i32 35
  %691 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %690, align 32
  %692 = sext i32 %670 to i64
  %693 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %691, i64 0, i32 4, i32 3, i32 1
  %694 = load i32, i32* %693, align 4
  %695 = sext i32 %694 to i64
  %696 = mul nsw i64 %695, %692
  %697 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %691, i64 0, i32 4, i32 3, i32 2
  %698 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %697, align 8
  %699 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %698, i64 %696
  %700 = sext i32 %672 to i64
  %701 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %699, i64 %700
  %702 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %701, align 8
  %703 = icmp eq %"struct.libgav1::BlockParameters"* %702, null
  br i1 %703, label %709, label %704

704:                                              ; preds = %689
  %705 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %702, i64 0, i32 14, i64 0
  %706 = load i8, i8* %705, align 1
  %707 = icmp eq i8 %706, -1
  br i1 %707, label %709, label %708

708:                                              ; preds = %704
  call fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, %"struct.libgav1::BlockParameters"* nonnull dereferenceable(96) %702, i1 zeroext %1, i32 4, i8* nonnull %18, i8* nonnull %15, i32* nonnull %16) #5
  br label %709

709:                                              ; preds = %685, %681, %668, %677, %689, %704, %708
  br label %713

710:                                              ; preds = %842
  %711 = load i32, i32* %16, align 4
  %712 = icmp slt i32 %711, 2
  br i1 %712, label %845, label %1626

713:                                              ; preds = %709, %842
  %714 = phi i64 [ %843, %842 ], [ 0, %709 ]
  %715 = icmp eq i64 %714, 0
  %716 = load i32, i32* %143, align 8
  %717 = icmp sgt i32 %716, 1
  %718 = or i1 %715, %717
  br i1 %718, label %719, label %777

719:                                              ; preds = %713
  %720 = load i32, i32* %28, align 8
  %721 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZN7libgav111FindMvStackERKNS_4Tile5BlockEbPNS_10MvContextsEE6deltas, i64 0, i64 %714
  %722 = load i32, i32* %721, align 4
  %723 = load i32, i32* %30, align 4
  %724 = and i32 %723, 1
  %725 = add nsw i32 %724, %722
  %726 = add nsw i32 %725, %723
  %727 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %728 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %727, i64 0, i32 5
  %729 = load i32, i32* %728, align 32
  %730 = icmp sgt i32 %729, %726
  br i1 %730, label %777, label %731

731:                                              ; preds = %719
  %732 = or i32 %720, 1
  %733 = load i32, i32* %142, align 4
  %734 = icmp slt i32 %725, -1
  %735 = select i1 %734, i32 2, i32 0
  %736 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %727, i64 0, i32 35
  %737 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %736, align 32
  %738 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %737, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %739 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %738, align 8
  %740 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %737, i64 0, i32 1
  %741 = load i32, i32* %740, align 4
  %742 = mul nsw i32 %741, %726
  %743 = sext i32 %742 to i64
  %744 = sext i32 %732 to i64
  %745 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %727, i64 0, i32 21
  %746 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %745, align 8
  %747 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %746, i64 0, i32 6
  %748 = load i32, i32* %747, align 8
  %749 = sub nsw i32 %748, %720
  %750 = icmp slt i32 %749, %733
  %751 = select i1 %750, i32 %749, i32 %733
  %752 = icmp sgt i32 %733, 15
  %753 = select i1 %752, i32 4, i32 %735
  %754 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %739, i64 %743
  %755 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %754, i64 %744
  %756 = icmp slt i32 %751, 16
  %757 = select i1 %756, i32 %751, i32 16
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %755, i64 %758
  br label %760

760:                                              ; preds = %760, %731
  %761 = phi %"struct.libgav1::BlockParameters"** [ %755, %731 ], [ %775, %760 ]
  %762 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %761, align 8
  %763 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %762, i64 0, i32 0
  %764 = load i8, i8* %763, align 8
  %765 = zext i8 %764 to i64
  %766 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksWideE, i64 0, i64 %765
  %767 = load i8, i8* %766, align 1
  %768 = zext i8 %767 to i32
  %769 = icmp sgt i32 %733, %768
  %770 = select i1 %769, i32 %768, i32 %733
  %771 = icmp slt i32 %770, %753
  %772 = select i1 %771, i32 %753, i32 %770
  %773 = shl nuw i32 %772, 1
  call fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, %"struct.libgav1::BlockParameters"* dereferenceable(96) %762, i1 zeroext %1, i32 %773, i8* nonnull %18, i8* nonnull %15, i32* nonnull %16) #5
  %774 = zext i32 %772 to i64
  %775 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %761, i64 %774
  %776 = icmp ult %"struct.libgav1::BlockParameters"** %775, %759
  br i1 %776, label %760, label %777

777:                                              ; preds = %760, %719, %713
  %778 = load i32, i32* %142, align 4
  %779 = icmp sgt i32 %778, 1
  %780 = or i1 %715, %779
  br i1 %780, label %781, label %842

781:                                              ; preds = %777
  %782 = load i32, i32* %30, align 4
  %783 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZN7libgav111FindMvStackERKNS_4Tile5BlockEbPNS_10MvContextsEE6deltas, i64 0, i64 %714
  %784 = load i32, i32* %783, align 4
  %785 = load i32, i32* %28, align 8
  %786 = and i32 %785, 1
  %787 = add nsw i32 %786, %784
  %788 = add nsw i32 %787, %785
  %789 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %790 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %789, i64 0, i32 7
  %791 = load i32, i32* %790, align 8
  %792 = icmp sgt i32 %791, %788
  br i1 %792, label %842, label %793

793:                                              ; preds = %781
  %794 = or i32 %782, 1
  %795 = load i32, i32* %143, align 8
  %796 = icmp slt i32 %787, -1
  %797 = select i1 %796, i32 2, i32 0
  %798 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %789, i64 0, i32 35
  %799 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %798, align 32
  %800 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %799, i64 0, i32 1
  %801 = load i32, i32* %800, align 4
  %802 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %799, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %803 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %802, align 8
  %804 = mul nsw i32 %801, %794
  %805 = sext i32 %804 to i64
  %806 = sext i32 %788 to i64
  %807 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %789, i64 0, i32 21
  %808 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %807, align 8
  %809 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %808, i64 0, i32 7
  %810 = load i32, i32* %809, align 4
  %811 = sub nsw i32 %810, %782
  %812 = icmp slt i32 %811, %795
  %813 = select i1 %812, i32 %811, i32 %795
  %814 = icmp sgt i32 %795, 15
  %815 = select i1 %814, i32 4, i32 %797
  %816 = sext i32 %801 to i64
  %817 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %803, i64 %805
  %818 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %817, i64 %806
  %819 = icmp slt i32 %813, 16
  %820 = select i1 %819, i32 %813, i32 16
  %821 = sext i32 %820 to i64
  %822 = mul nsw i64 %821, %816
  %823 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %818, i64 %822
  br label %824

824:                                              ; preds = %824, %793
  %825 = phi %"struct.libgav1::BlockParameters"** [ %818, %793 ], [ %840, %824 ]
  %826 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %825, align 8
  %827 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %826, i64 0, i32 0
  %828 = load i8, i8* %827, align 8
  %829 = zext i8 %828 to i64
  %830 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksHighE, i64 0, i64 %829
  %831 = load i8, i8* %830, align 1
  %832 = zext i8 %831 to i32
  %833 = icmp sgt i32 %795, %832
  %834 = select i1 %833, i32 %832, i32 %795
  %835 = icmp slt i32 %834, %815
  %836 = select i1 %835, i32 %815, i32 %834
  %837 = shl nuw i32 %836, 1
  call fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, %"struct.libgav1::BlockParameters"* dereferenceable(96) %826, i1 zeroext %1, i32 %837, i8* nonnull %18, i8* nonnull %17, i32* nonnull %16) #5
  %838 = zext i32 %836 to i64
  %839 = mul nsw i64 %838, %816
  %840 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %825, i64 %839
  %841 = icmp ult %"struct.libgav1::BlockParameters"** %840, %823
  br i1 %841, label %824, label %842

842:                                              ; preds = %824, %781, %777
  %843 = add nuw nsw i64 %714, 1
  %844 = icmp eq i64 %843, 2
  br i1 %844, label %710, label %713

845:                                              ; preds = %710
  %846 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %847 = load i32, i32* %142, align 4
  %848 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %846, i64 0, i32 21
  %849 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %848, align 8
  %850 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %849, i64 0, i32 6
  %851 = load i32, i32* %850, align 8
  %852 = load i32, i32* %28, align 8
  %853 = sub nsw i32 %851, %852
  %854 = load i32, i32* %143, align 8
  %855 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %849, i64 0, i32 7
  %856 = load i32, i32* %855, align 4
  %857 = load i32, i32* %30, align 4
  %858 = sub nsw i32 %856, %857
  %859 = icmp slt i32 %853, %847
  %860 = select i1 %859, i32 %853, i32 %847
  %861 = icmp slt i32 %854, %860
  %862 = select i1 %861, i32 %854, i32 %860
  %863 = icmp slt i32 %858, %862
  %864 = select i1 %863, i32 %858, i32 %862
  %865 = bitcast [2 x [2 x %"struct.libgav1::MotionVector"]]* %9 to i8*
  %866 = bitcast [2 x [2 x %"struct.libgav1::MotionVector"]]* %10 to i8*
  %867 = bitcast [2 x %"union.libgav1::CompoundMotionVector"]* %11 to i8*
  %868 = icmp slt i32 %864, 16
  %869 = select i1 %868, i32 %864, i32 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %865) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %865, i8 0, i64 16, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %866) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %866, i8 0, i64 16, i1 false) #5
  %870 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %19, align 8
  %871 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %870, i64 0, i32 18, i32 0, i32 0, i32 0
  %872 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %871, align 8
  %873 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 0
  %874 = icmp sgt i32 %864, 0
  %875 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %846, i64 0, i32 5
  %876 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %846, i64 0, i32 7
  %877 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %846, i64 0, i32 35
  br label %878

878:                                              ; preds = %1205, %845
  %879 = phi i32 [ %711, %845 ], [ %1206, %1205 ]
  %880 = phi i32 [ 0, %845 ], [ %1207, %1205 ]
  %881 = phi i32 [ 0, %845 ], [ %1208, %1205 ]
  %882 = phi i32 [ 0, %845 ], [ %1209, %1205 ]
  %883 = phi i32 [ 0, %845 ], [ %1210, %1205 ]
  %884 = phi i32 [ 0, %845 ], [ %1211, %1205 ]
  %885 = icmp slt i32 %879, 2
  br i1 %885, label %886, label %890

886:                                              ; preds = %878
  br i1 %874, label %887, label %1205

887:                                              ; preds = %886
  %888 = icmp eq i32 %884, 0
  %889 = select i1 %888, [22 x i8]* @_ZN7libgav117kNum4x4BlocksWideE, [22 x i8]* @_ZN7libgav117kNum4x4BlocksHighE
  br label %896

890:                                              ; preds = %1205, %878
  %891 = phi i32 [ %1206, %1205 ], [ %879, %878 ]
  %892 = phi i32 [ %1207, %1205 ], [ %880, %878 ]
  %893 = phi i32 [ %1208, %1205 ], [ %881, %878 ]
  %894 = phi i32 [ %1209, %1205 ], [ %882, %878 ]
  %895 = phi i32 [ %1210, %1205 ], [ %883, %878 ]
  br i1 %1, label %1213, label %1368

896:                                              ; preds = %1181, %887
  %897 = phi i32 [ %879, %887 ], [ %1182, %1181 ]
  %898 = phi i32 [ %880, %887 ], [ %1183, %1181 ]
  %899 = phi i32 [ %881, %887 ], [ %1184, %1181 ]
  %900 = phi i32 [ %882, %887 ], [ %1185, %1181 ]
  %901 = phi i32 [ %883, %887 ], [ %1186, %1181 ]
  %902 = phi i32 [ 0, %887 ], [ %1203, %1181 ]
  %903 = load i32, i32* %30, align 4
  %904 = select i1 %888, i32 -1, i32 %902
  %905 = add nsw i32 %903, %904
  %906 = load i32, i32* %28, align 8
  %907 = select i1 %888, i32 %902, i32 -1
  %908 = add nsw i32 %906, %907
  %909 = load i32, i32* %875, align 32
  %910 = icmp sgt i32 %909, %905
  br i1 %910, label %1205, label %911

911:                                              ; preds = %896
  %912 = load i32, i32* %876, align 8
  %913 = icmp sgt i32 %912, %908
  br i1 %913, label %1205, label %914

914:                                              ; preds = %911
  %915 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %32, align 8
  %916 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %915, i64 0, i32 35
  %917 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %916, align 32
  %918 = sext i32 %905 to i64
  %919 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %917, i64 0, i32 4, i32 3, i32 1
  %920 = load i32, i32* %919, align 4
  %921 = sext i32 %920 to i64
  %922 = mul nsw i64 %921, %918
  %923 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %917, i64 0, i32 4, i32 3, i32 2
  %924 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %923, align 8
  %925 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %924, i64 %922
  %926 = sext i32 %908 to i64
  %927 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %925, i64 %926
  %928 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %927, align 8
  %929 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %915, i64 0, i32 22
  %930 = load %"struct.std::__1::array.14"*, %"struct.std::__1::array.14"** %929, align 16
  br i1 %1, label %931, label %1073

931:                                              ; preds = %914
  %932 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %928, i64 0, i32 16
  %933 = bitcast %"union.libgav1::CompoundMotionVector"* %932 to [2 x %"struct.libgav1::MotionVector"]*
  %934 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %928, i64 0, i32 14, i64 0
  %935 = load i8, i8* %934, align 1
  %936 = icmp slt i8 %935, 1
  br i1 %936, label %979, label %937

937:                                              ; preds = %931
  %938 = bitcast %"union.libgav1::CompoundMotionVector"* %932 to i32*
  %939 = sext i8 %935 to i64
  %940 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %939
  %941 = load i32, i32* %938, align 4
  %942 = lshr i32 %941, 16
  %943 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %19, align 8
  %944 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %943, i64 0, i32 14, i64 0
  %945 = load i8, i8* %944, align 1
  %946 = icmp eq i8 %935, %945
  %947 = icmp slt i32 %901, 2
  %948 = and i1 %947, %946
  br i1 %948, label %949, label %953

949:                                              ; preds = %937
  %950 = sext i32 %901 to i64
  %951 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %950, i32 0, i32 0
  store i32 %941, i32* %951, align 4
  %952 = add nsw i32 %901, 1
  br label %971

953:                                              ; preds = %937
  %954 = icmp slt i32 %900, 2
  br i1 %954, label %955, label %971

955:                                              ; preds = %953
  %956 = load i8, i8* %940, align 1, !range !2
  %957 = sext i8 %945 to i64
  %958 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %957
  %959 = load i8, i8* %958, align 1, !range !2
  %960 = icmp eq i8 %956, %959
  %961 = sub i32 0, %941
  %962 = sub nsw i32 0, %942
  %963 = select i1 %960, i32 %942, i32 %962
  %964 = select i1 %960, i32 %941, i32 %961
  %965 = sext i32 %900 to i64
  %966 = shl i32 %963, 16
  %967 = and i32 %964, 65535
  %968 = or i32 %966, %967
  %969 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 0, i64 %965, i32 0, i32 0
  store i32 %968, i32* %969, align 4
  %970 = add nsw i32 %900, 1
  br label %971

971:                                              ; preds = %955, %953, %949
  %972 = phi i32 [ %970, %955 ], [ %900, %953 ], [ %900, %949 ]
  %973 = phi i32 [ %901, %955 ], [ %901, %953 ], [ %952, %949 ]
  %974 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %943, i64 0, i32 14, i64 1
  %975 = load i8, i8* %974, align 1
  %976 = icmp eq i8 %935, %975
  %977 = icmp slt i32 %899, 2
  %978 = and i1 %977, %976
  br i1 %978, label %1005, label %987

979:                                              ; preds = %1005, %989, %987, %931
  %980 = phi i32 [ %898, %1005 ], [ %1004, %989 ], [ %898, %987 ], [ %898, %931 ]
  %981 = phi i32 [ %1008, %1005 ], [ %899, %989 ], [ %899, %987 ], [ %899, %931 ]
  %982 = phi i32 [ %972, %1005 ], [ %972, %989 ], [ %972, %987 ], [ %900, %931 ]
  %983 = phi i32 [ %973, %1005 ], [ %973, %989 ], [ %973, %987 ], [ %901, %931 ]
  %984 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %928, i64 0, i32 14, i64 1
  %985 = load i8, i8* %984, align 1
  %986 = icmp slt i8 %985, 1
  br i1 %986, label %1181, label %1009

987:                                              ; preds = %971
  %988 = icmp slt i32 %898, 2
  br i1 %988, label %989, label %979

989:                                              ; preds = %987
  %990 = load i8, i8* %940, align 1, !range !2
  %991 = sext i8 %975 to i64
  %992 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %991
  %993 = load i8, i8* %992, align 1, !range !2
  %994 = icmp eq i8 %990, %993
  %995 = sub i32 0, %941
  %996 = sub nsw i32 0, %942
  %997 = select i1 %994, i32 %942, i32 %996
  %998 = select i1 %994, i32 %941, i32 %995
  %999 = sext i32 %898 to i64
  %1000 = shl i32 %997, 16
  %1001 = and i32 %998, 65535
  %1002 = or i32 %1000, %1001
  %1003 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 1, i64 %999, i32 0, i32 0
  store i32 %1002, i32* %1003, align 4
  %1004 = add nsw i32 %898, 1
  br label %979

1005:                                             ; preds = %971
  %1006 = sext i32 %899 to i64
  %1007 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1006, i32 0, i32 0
  store i32 %941, i32* %1007, align 4
  %1008 = add nsw i32 %899, 1
  br label %979

1009:                                             ; preds = %979
  %1010 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %933, i64 0, i64 1, i32 0, i32 0
  %1011 = sext i8 %985 to i64
  %1012 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %1011
  %1013 = load i32, i32* %1010, align 4
  %1014 = lshr i32 %1013, 16
  %1015 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %19, align 8
  %1016 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1015, i64 0, i32 14, i64 0
  %1017 = load i8, i8* %1016, align 1
  %1018 = icmp eq i8 %985, %1017
  %1019 = icmp slt i32 %983, 2
  %1020 = and i1 %1019, %1018
  br i1 %1020, label %1039, label %1021

1021:                                             ; preds = %1009
  %1022 = icmp slt i32 %982, 2
  br i1 %1022, label %1023, label %1043

1023:                                             ; preds = %1021
  %1024 = load i8, i8* %1012, align 1, !range !2
  %1025 = sext i8 %1017 to i64
  %1026 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %1025
  %1027 = load i8, i8* %1026, align 1, !range !2
  %1028 = icmp eq i8 %1024, %1027
  %1029 = sub i32 0, %1013
  %1030 = sub nsw i32 0, %1014
  %1031 = select i1 %1028, i32 %1014, i32 %1030
  %1032 = select i1 %1028, i32 %1013, i32 %1029
  %1033 = sext i32 %982 to i64
  %1034 = shl i32 %1031, 16
  %1035 = and i32 %1032, 65535
  %1036 = or i32 %1034, %1035
  %1037 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 0, i64 %1033, i32 0, i32 0
  store i32 %1036, i32* %1037, align 4
  %1038 = add nsw i32 %982, 1
  br label %1043

1039:                                             ; preds = %1009
  %1040 = sext i32 %983 to i64
  %1041 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1040, i32 0, i32 0
  store i32 %1013, i32* %1041, align 4
  %1042 = add nsw i32 %983, 1
  br label %1043

1043:                                             ; preds = %1039, %1023, %1021
  %1044 = phi i32 [ %982, %1039 ], [ %1038, %1023 ], [ %982, %1021 ]
  %1045 = phi i32 [ %1042, %1039 ], [ %983, %1023 ], [ %983, %1021 ]
  %1046 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1015, i64 0, i32 14, i64 1
  %1047 = load i8, i8* %1046, align 1
  %1048 = icmp eq i8 %985, %1047
  %1049 = icmp slt i32 %981, 2
  %1050 = and i1 %1049, %1048
  br i1 %1050, label %1069, label %1051

1051:                                             ; preds = %1043
  %1052 = icmp slt i32 %980, 2
  br i1 %1052, label %1053, label %1181

1053:                                             ; preds = %1051
  %1054 = load i8, i8* %1012, align 1, !range !2
  %1055 = sext i8 %1047 to i64
  %1056 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %1055
  %1057 = load i8, i8* %1056, align 1, !range !2
  %1058 = icmp eq i8 %1054, %1057
  %1059 = sub i32 0, %1013
  %1060 = sub nsw i32 0, %1014
  %1061 = select i1 %1058, i32 %1014, i32 %1060
  %1062 = select i1 %1058, i32 %1013, i32 %1059
  %1063 = sext i32 %980 to i64
  %1064 = shl i32 %1061, 16
  %1065 = and i32 %1062, 65535
  %1066 = or i32 %1064, %1065
  %1067 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 1, i64 %1063, i32 0, i32 0
  store i32 %1066, i32* %1067, align 4
  %1068 = add nsw i32 %980, 1
  br label %1181

1069:                                             ; preds = %1043
  %1070 = sext i32 %981 to i64
  %1071 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1070, i32 0, i32 0
  store i32 %1013, i32* %1071, align 4
  %1072 = add nsw i32 %981, 1
  br label %1181

1073:                                             ; preds = %914
  %1074 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %19, align 8
  %1075 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1074, i64 0, i32 14, i64 0
  %1076 = load i8, i8* %1075, align 1
  %1077 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1074, i64 0, i32 18, i32 0, i32 0, i32 0
  %1078 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %1077, align 8
  %1079 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %1078, i64 0, i32 16
  %1080 = bitcast %union.anon.81* %1079 to %"struct.libgav1::MotionVector"*
  %1081 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %928, i64 0, i32 16
  %1082 = bitcast %"union.libgav1::CompoundMotionVector"* %1081 to [2 x %"struct.libgav1::MotionVector"]*
  %1083 = sext i8 %1076 to i64
  %1084 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %1083
  %1085 = bitcast %union.anon.81* %1079 to i32*
  %1086 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1080, i64 1, i32 0, i32 0
  %1087 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %928, i64 0, i32 14, i64 0
  %1088 = load i8, i8* %1087, align 1
  %1089 = icmp slt i8 %1088, 1
  br i1 %1089, label %1131, label %1090

1090:                                             ; preds = %1073
  %1091 = bitcast %"union.libgav1::CompoundMotionVector"* %1081 to i32*
  %1092 = load i32, i32* %1091, align 4
  %1093 = trunc i32 %1092 to i16
  %1094 = lshr i32 %1092, 16
  %1095 = trunc i32 %1094 to i16
  %1096 = sext i8 %1088 to i64
  %1097 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %1096
  %1098 = load i8, i8* %1097, align 1, !range !2
  %1099 = load i8, i8* %1084, align 1, !range !2
  %1100 = icmp eq i8 %1098, %1099
  %1101 = sub i16 0, %1093
  %1102 = sub i16 0, %1095
  %1103 = select i1 %1100, i16 %1095, i16 %1102
  %1104 = select i1 %1100, i16 %1093, i16 %1101
  %1105 = icmp eq i32 %897, 0
  br i1 %1105, label %1106, label %1111

1106:                                             ; preds = %1090
  %1107 = zext i16 %1103 to i32
  %1108 = shl nuw i32 %1107, 16
  %1109 = zext i16 %1104 to i32
  %1110 = or i32 %1108, %1109
  br label %1123

1111:                                             ; preds = %1090
  %1112 = load i32, i32* %1085, align 4
  %1113 = zext i16 %1103 to i32
  %1114 = shl nuw i32 %1113, 16
  %1115 = zext i16 %1104 to i32
  %1116 = or i32 %1114, %1115
  %1117 = icmp eq i32 %1112, %1116
  br i1 %1117, label %1131, label %1118

1118:                                             ; preds = %1111
  %1119 = icmp eq i32 %897, 2
  br i1 %1119, label %1120, label %1123

1120:                                             ; preds = %1118
  %1121 = load i32, i32* %1086, align 4
  %1122 = icmp eq i32 %1121, %1116
  br i1 %1122, label %1131, label %1123

1123:                                             ; preds = %1120, %1118, %1106
  %1124 = phi i32 [ %1110, %1106 ], [ %1116, %1120 ], [ %1116, %1118 ]
  %1125 = sext i32 %897 to i64
  %1126 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1080, i64 %1125, i32 0, i32 0
  store i32 %1124, i32* %1126, align 4
  %1127 = trunc i32 %897 to i16
  %1128 = sub i16 7, %1127
  %1129 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %1078, i64 0, i32 17, i64 %1125
  store i16 %1128, i16* %1129, align 2
  %1130 = add nsw i32 %897, 1
  br label %1131

1131:                                             ; preds = %1123, %1120, %1111, %1073
  %1132 = phi i32 [ %897, %1073 ], [ %1130, %1123 ], [ 2, %1120 ], [ %897, %1111 ]
  %1133 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %928, i64 0, i32 14, i64 1
  %1134 = load i8, i8* %1133, align 1
  %1135 = icmp slt i8 %1134, 1
  br i1 %1135, label %1178, label %1136

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1082, i64 0, i64 1, i32 0, i32 0
  %1138 = load i32, i32* %1137, align 4
  %1139 = trunc i32 %1138 to i16
  %1140 = lshr i32 %1138, 16
  %1141 = trunc i32 %1140 to i16
  %1142 = sext i8 %1134 to i64
  %1143 = getelementptr inbounds %"struct.std::__1::array.14", %"struct.std::__1::array.14"* %930, i64 0, i32 0, i64 %1142
  %1144 = load i8, i8* %1143, align 1, !range !2
  %1145 = load i8, i8* %1084, align 1, !range !2
  %1146 = icmp eq i8 %1144, %1145
  %1147 = sub i16 0, %1139
  %1148 = sub i16 0, %1141
  %1149 = select i1 %1146, i16 %1141, i16 %1148
  %1150 = select i1 %1146, i16 %1139, i16 %1147
  %1151 = icmp eq i32 %1132, 0
  br i1 %1151, label %1152, label %1157

1152:                                             ; preds = %1136
  %1153 = zext i16 %1149 to i32
  %1154 = shl nuw i32 %1153, 16
  %1155 = zext i16 %1150 to i32
  %1156 = or i32 %1154, %1155
  br label %1170

1157:                                             ; preds = %1136
  %1158 = load i32, i32* %1085, align 4
  %1159 = zext i16 %1149 to i32
  %1160 = shl nuw i32 %1159, 16
  %1161 = zext i16 %1150 to i32
  %1162 = or i32 %1160, %1161
  %1163 = icmp eq i32 %1158, %1162
  br i1 %1163, label %1178, label %1164

1164:                                             ; preds = %1157
  %1165 = icmp eq i32 %1132, 2
  br i1 %1165, label %1166, label %1170

1166:                                             ; preds = %1164
  %1167 = load i32, i32* %1086, align 4
  %1168 = icmp eq i32 %1167, %1162
  br i1 %1168, label %1169, label %1170

1169:                                             ; preds = %1166
  store i32 2, i32* %16, align 4
  br label %1205

1170:                                             ; preds = %1166, %1164, %1152
  %1171 = phi i32 [ %1156, %1152 ], [ %1162, %1166 ], [ %1162, %1164 ]
  %1172 = sext i32 %1132 to i64
  %1173 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1080, i64 %1172, i32 0, i32 0
  store i32 %1171, i32* %1173, align 4
  %1174 = trunc i32 %1132 to i16
  %1175 = sub i16 7, %1174
  %1176 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %1078, i64 0, i32 17, i64 %1172
  store i16 %1175, i16* %1176, align 2
  %1177 = add nsw i32 %1132, 1
  br label %1178

1178:                                             ; preds = %1170, %1157, %1131
  %1179 = phi i32 [ %1132, %1131 ], [ %1177, %1170 ], [ %1132, %1157 ]
  store i32 %1179, i32* %16, align 4
  %1180 = icmp sgt i32 %1179, 1
  br i1 %1180, label %1205, label %1181

1181:                                             ; preds = %1178, %1069, %1053, %1051, %979
  %1182 = phi i32 [ %1179, %1178 ], [ %897, %979 ], [ %897, %1051 ], [ %897, %1053 ], [ %897, %1069 ]
  %1183 = phi i32 [ %898, %1178 ], [ %980, %979 ], [ %980, %1051 ], [ %1068, %1053 ], [ %980, %1069 ]
  %1184 = phi i32 [ %899, %1178 ], [ %981, %979 ], [ %981, %1051 ], [ %981, %1053 ], [ %1072, %1069 ]
  %1185 = phi i32 [ %900, %1178 ], [ %982, %979 ], [ %1044, %1051 ], [ %1044, %1053 ], [ %1044, %1069 ]
  %1186 = phi i32 [ %901, %1178 ], [ %983, %979 ], [ %1045, %1051 ], [ %1045, %1053 ], [ %1045, %1069 ]
  %1187 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %877, align 32
  %1188 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %1187, i64 0, i32 4, i32 3, i32 1
  %1189 = load i32, i32* %1188, align 4
  %1190 = sext i32 %1189 to i64
  %1191 = mul nsw i64 %1190, %918
  %1192 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %1187, i64 0, i32 4, i32 3, i32 2
  %1193 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %1192, align 8
  %1194 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %1193, i64 %1191
  %1195 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %1194, i64 %926
  %1196 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %1195, align 8
  %1197 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1196, i64 0, i32 0
  %1198 = load i8, i8* %1197, align 8
  %1199 = zext i8 %1198 to i64
  %1200 = getelementptr inbounds [22 x i8], [22 x i8]* %889, i64 0, i64 %1199
  %1201 = load i8, i8* %1200, align 1
  %1202 = zext i8 %1201 to i32
  %1203 = add nuw nsw i32 %902, %1202
  %1204 = icmp slt i32 %1203, %869
  br i1 %1204, label %896, label %1205

1205:                                             ; preds = %1181, %1178, %911, %896, %1169, %886
  %1206 = phi i32 [ 2, %1169 ], [ %879, %886 ], [ %897, %911 ], [ %897, %896 ], [ %1179, %1178 ], [ %1182, %1181 ]
  %1207 = phi i32 [ %898, %1169 ], [ %880, %886 ], [ %898, %911 ], [ %898, %896 ], [ %898, %1178 ], [ %1183, %1181 ]
  %1208 = phi i32 [ %899, %1169 ], [ %881, %886 ], [ %899, %911 ], [ %899, %896 ], [ %899, %1178 ], [ %1184, %1181 ]
  %1209 = phi i32 [ %900, %1169 ], [ %882, %886 ], [ %900, %911 ], [ %900, %896 ], [ %900, %1178 ], [ %1185, %1181 ]
  %1210 = phi i32 [ %901, %1169 ], [ %883, %886 ], [ %901, %911 ], [ %901, %896 ], [ %901, %1178 ], [ %1186, %1181 ]
  %1211 = add nuw nsw i32 %884, 1
  %1212 = icmp eq i32 %1211, 2
  br i1 %1212, label %890, label %878

1213:                                             ; preds = %890
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %867) #5
  %1214 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 0, i32 0
  %1215 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %867, i8 0, i64 16, i1 false) #5
  %1216 = icmp sgt i32 %895, 0
  br i1 %1216, label %1217, label %1240

1217:                                             ; preds = %1213
  %1218 = sext i32 %895 to i64
  %1219 = add nsw i64 %1218, -1
  %1220 = and i64 %1218, 7
  %1221 = icmp ult i64 %1219, 7
  br i1 %1221, label %1227, label %1222

1222:                                             ; preds = %1217
  %1223 = sub nsw i64 %1218, %1220
  br label %1261

1224:                                             ; preds = %1621
  store i64 %1623, i64* %1624, align 8
  %1225 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 0
  store i16 7, i16* %1225, align 2
  %1226 = load i64, i64* %1215, align 8
  br label %1364

1227:                                             ; preds = %1261, %1217
  %1228 = phi i64 [ 0, %1217 ], [ %1303, %1261 ]
  %1229 = icmp eq i64 %1220, 0
  br i1 %1229, label %1240, label %1230

1230:                                             ; preds = %1227, %1230
  %1231 = phi i64 [ %1237, %1230 ], [ %1228, %1227 ]
  %1232 = phi i64 [ %1238, %1230 ], [ %1220, %1227 ]
  %1233 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1231
  %1234 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1231, i32 0, i32 0
  %1235 = load i32, i32* %1234, align 4
  %1236 = bitcast %"union.libgav1::CompoundMotionVector"* %1233 to i32*
  store i32 %1235, i32* %1236, align 8
  %1237 = add nuw nsw i64 %1231, 1
  %1238 = add i64 %1232, -1
  %1239 = icmp eq i64 %1238, 0
  br i1 %1239, label %1240, label %1230, !llvm.loop !3

1240:                                             ; preds = %1227, %1230, %1213
  %1241 = phi i32 [ 0, %1213 ], [ %895, %1230 ], [ %895, %1227 ]
  %1242 = icmp sgt i32 %894, 0
  %1243 = icmp ult i32 %1241, 2
  %1244 = and i1 %1242, %1243
  br i1 %1244, label %1245, label %1309

1245:                                             ; preds = %1240
  %1246 = zext i32 %1241 to i64
  %1247 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1246
  %1248 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 0, i64 0, i32 0, i32 0
  %1249 = load i32, i32* %1248, align 16
  %1250 = bitcast %"union.libgav1::CompoundMotionVector"* %1247 to i32*
  store i32 %1249, i32* %1250, align 8
  %1251 = add nuw nsw i64 %1246, 1
  %1252 = icmp sgt i32 %894, 1
  %1253 = icmp ult i64 %1251, 2
  %1254 = and i1 %1253, %1252
  br i1 %1254, label %1255, label %1306

1255:                                             ; preds = %1245
  %1256 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 1
  %1257 = bitcast %"union.libgav1::CompoundMotionVector"* %1256 to i32*
  %1258 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 0, i64 1, i32 0, i32 0
  %1259 = load i32, i32* %1258, align 4
  %1260 = add nuw nsw i64 1, 1
  store i32 %1259, i32* %1257, align 8
  br label %1306

1261:                                             ; preds = %1261, %1222
  %1262 = phi i64 [ 0, %1222 ], [ %1303, %1261 ]
  %1263 = phi i64 [ %1223, %1222 ], [ %1304, %1261 ]
  %1264 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1262
  %1265 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1262, i32 0, i32 0
  %1266 = load i32, i32* %1265, align 16
  %1267 = bitcast %"union.libgav1::CompoundMotionVector"* %1264 to i32*
  store i32 %1266, i32* %1267, align 16
  %1268 = or i64 %1262, 1
  %1269 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1268
  %1270 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1268, i32 0, i32 0
  %1271 = load i32, i32* %1270, align 4
  %1272 = bitcast %"union.libgav1::CompoundMotionVector"* %1269 to i32*
  store i32 %1271, i32* %1272, align 8
  %1273 = or i64 %1262, 2
  %1274 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1273
  %1275 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1273, i32 0, i32 0
  %1276 = load i32, i32* %1275, align 8
  %1277 = bitcast %"union.libgav1::CompoundMotionVector"* %1274 to i32*
  store i32 %1276, i32* %1277, align 16
  %1278 = or i64 %1262, 3
  %1279 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1278
  %1280 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1278, i32 0, i32 0
  %1281 = load i32, i32* %1280, align 4
  %1282 = bitcast %"union.libgav1::CompoundMotionVector"* %1279 to i32*
  store i32 %1281, i32* %1282, align 8
  %1283 = or i64 %1262, 4
  %1284 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1283
  %1285 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1283, i32 0, i32 0
  %1286 = load i32, i32* %1285, align 16
  %1287 = bitcast %"union.libgav1::CompoundMotionVector"* %1284 to i32*
  store i32 %1286, i32* %1287, align 16
  %1288 = or i64 %1262, 5
  %1289 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1288
  %1290 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1288, i32 0, i32 0
  %1291 = load i32, i32* %1290, align 4
  %1292 = bitcast %"union.libgav1::CompoundMotionVector"* %1289 to i32*
  store i32 %1291, i32* %1292, align 8
  %1293 = or i64 %1262, 6
  %1294 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1293
  %1295 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1293, i32 0, i32 0
  %1296 = load i32, i32* %1295, align 8
  %1297 = bitcast %"union.libgav1::CompoundMotionVector"* %1294 to i32*
  store i32 %1296, i32* %1297, align 16
  %1298 = or i64 %1262, 7
  %1299 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1298
  %1300 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 0, i64 %1298, i32 0, i32 0
  %1301 = load i32, i32* %1300, align 4
  %1302 = bitcast %"union.libgav1::CompoundMotionVector"* %1299 to i32*
  store i32 %1301, i32* %1302, align 8
  %1303 = add nuw nsw i64 %1262, 8
  %1304 = add i64 %1263, -8
  %1305 = icmp eq i64 %1304, 0
  br i1 %1305, label %1227, label %1261

1306:                                             ; preds = %1255, %1245
  %1307 = phi i64 [ %1251, %1245 ], [ 2, %1255 ]
  %1308 = trunc i64 %1307 to i32
  br label %1309

1309:                                             ; preds = %1306, %1240
  %1310 = phi i32 [ %1241, %1240 ], [ %1308, %1306 ]
  %1311 = icmp ult i32 %1310, 2
  br i1 %1311, label %1312, label %1357

1312:                                             ; preds = %1309
  %1313 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 21, i64 0, i32 0, i32 0
  %1314 = zext i32 %1310 to i64
  %1315 = load i32, i32* %1313, align 4
  %1316 = sub nsw i64 2, %1314
  %1317 = sub nsw i64 1, %1314
  %1318 = and i64 %1316, 7
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1328, label %1320

1320:                                             ; preds = %1312, %1320
  %1321 = phi i64 [ %1325, %1320 ], [ %1314, %1312 ]
  %1322 = phi i64 [ %1326, %1320 ], [ %1318, %1312 ]
  %1323 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1321
  %1324 = bitcast %"union.libgav1::CompoundMotionVector"* %1323 to i32*
  store i32 %1315, i32* %1324, align 8
  %1325 = add nuw nsw i64 %1321, 1
  %1326 = add i64 %1322, -1
  %1327 = icmp eq i64 %1326, 0
  br i1 %1327, label %1328, label %1320, !llvm.loop !5

1328:                                             ; preds = %1320, %1312
  %1329 = phi i64 [ %1314, %1312 ], [ %1325, %1320 ]
  %1330 = icmp ult i64 %1317, 7
  br i1 %1330, label %1357, label %1331

1331:                                             ; preds = %1328, %1331
  %1332 = phi i64 [ %1356, %1331 ], [ %1329, %1328 ]
  %1333 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1332
  %1334 = bitcast %"union.libgav1::CompoundMotionVector"* %1333 to i32*
  store i32 %1315, i32* %1334, align 8
  %1335 = add nuw nsw i64 %1332, 1
  %1336 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1335
  %1337 = bitcast %"union.libgav1::CompoundMotionVector"* %1336 to i32*
  store i32 %1315, i32* %1337, align 8
  %1338 = add nuw nsw i64 %1332, 2
  %1339 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1338
  %1340 = bitcast %"union.libgav1::CompoundMotionVector"* %1339 to i32*
  store i32 %1315, i32* %1340, align 8
  %1341 = add nuw nsw i64 %1332, 3
  %1342 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1341
  %1343 = bitcast %"union.libgav1::CompoundMotionVector"* %1342 to i32*
  store i32 %1315, i32* %1343, align 8
  %1344 = add nuw nsw i64 %1332, 4
  %1345 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1344
  %1346 = bitcast %"union.libgav1::CompoundMotionVector"* %1345 to i32*
  store i32 %1315, i32* %1346, align 8
  %1347 = add nuw nsw i64 %1332, 5
  %1348 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1347
  %1349 = bitcast %"union.libgav1::CompoundMotionVector"* %1348 to i32*
  store i32 %1315, i32* %1349, align 8
  %1350 = add nuw nsw i64 %1332, 6
  %1351 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1350
  %1352 = bitcast %"union.libgav1::CompoundMotionVector"* %1351 to i32*
  store i32 %1315, i32* %1352, align 8
  %1353 = add nuw nsw i64 %1332, 7
  %1354 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1353
  %1355 = bitcast %"union.libgav1::CompoundMotionVector"* %1354 to i32*
  store i32 %1315, i32* %1355, align 8
  %1356 = add nuw nsw i64 %1332, 8
  br label %1331

1357:                                             ; preds = %1328, %1309
  %1358 = icmp sgt i32 %893, 0
  br i1 %1358, label %1464, label %1538

1359:                                             ; preds = %1621
  %1360 = load i64, i64* %1624, align 8
  %1361 = icmp eq i64 %1623, %1360
  %1362 = load i64, i64* %1215, align 8
  %1363 = select i1 %1361, i64 %1362, i64 %1623
  br label %1364

1364:                                             ; preds = %1359, %1224
  %1365 = phi i64 [ %1363, %1359 ], [ %1226, %1224 ]
  %1366 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 16, i32 0, i64 1, i32 0
  store i64 %1365, i64* %1366, align 8
  %1367 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 1
  store i16 6, i16* %1367, align 2
  store i32 2, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %867) #5
  br label %1625

1368:                                             ; preds = %890
  %1369 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 16
  %1370 = bitcast %union.anon.81* %1369 to %"struct.libgav1::MotionVector"*
  %1371 = icmp slt i32 %891, 2
  br i1 %1371, label %1372, label %1625

1372:                                             ; preds = %1368
  %1373 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 21, i64 0, i32 0, i32 0
  %1374 = sext i32 %891 to i64
  %1375 = sub nsw i64 2, %1374
  %1376 = icmp ult i64 %1375, 8
  br i1 %1376, label %1435, label %1377

1377:                                             ; preds = %1372
  %1378 = shl nsw i64 %1374, 2
  %1379 = add nsw i64 %1378, 120
  %1380 = getelementptr i8, i8* %873, i64 %1379
  %1381 = getelementptr %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 16, i32 0, i64 1
  %1382 = bitcast %"union.libgav1::CompoundMotionVector"* %1381 to i8*
  %1383 = shl nsw i64 %1374, 1
  %1384 = add nsw i64 %1383, 184
  %1385 = getelementptr i8, i8* %873, i64 %1384
  %1386 = getelementptr %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 2
  %1387 = bitcast i16* %1386 to i8*
  %1388 = getelementptr %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 21, i64 0, i32 0, i32 0
  %1389 = bitcast i32* %1388 to i8*
  %1390 = getelementptr i8, i8* %1389, i64 1
  %1391 = icmp ult i8* %1380, %1387
  %1392 = icmp ult i8* %1385, %1382
  %1393 = and i1 %1391, %1392
  %1394 = icmp ult i8* %1380, %1390
  %1395 = bitcast %"union.libgav1::CompoundMotionVector"* %1381 to i32*
  %1396 = icmp ult i32* %1373, %1395
  %1397 = and i1 %1394, %1396
  %1398 = or i1 %1393, %1397
  %1399 = icmp ult i8* %1385, %1390
  %1400 = bitcast i16* %1386 to i32*
  %1401 = icmp ult i32* %1373, %1400
  %1402 = and i1 %1399, %1401
  %1403 = or i1 %1398, %1402
  br i1 %1403, label %1435, label %1404

1404:                                             ; preds = %1377
  %1405 = and i64 %1375, -8
  %1406 = add nsw i64 %1405, %1374
  %1407 = trunc i32 %891 to i16
  %1408 = insertelement <4 x i16> undef, i16 %1407, i32 0
  %1409 = shufflevector <4 x i16> %1408, <4 x i16> undef, <4 x i32> zeroinitializer
  %1410 = add <4 x i16> %1409, <i16 0, i16 1, i16 2, i16 3>
  %1411 = load i32, i32* %1373, align 4, !alias.scope !6
  %1412 = insertelement <4 x i32> undef, i32 %1411, i32 0
  %1413 = shufflevector <4 x i32> %1412, <4 x i32> undef, <4 x i32> zeroinitializer
  %1414 = insertelement <4 x i32> undef, i32 %1411, i32 0
  %1415 = shufflevector <4 x i32> %1414, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %1416

1416:                                             ; preds = %1416, %1404
  %1417 = phi i64 [ 0, %1404 ], [ %1430, %1416 ]
  %1418 = phi <4 x i16> [ %1410, %1404 ], [ %1431, %1416 ]
  %1419 = add i64 %1417, %1374
  %1420 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1370, i64 %1419, i32 0, i32 0
  %1421 = bitcast i32* %1420 to <4 x i32>*
  store <4 x i32> %1413, <4 x i32>* %1421, align 4, !alias.scope !9, !noalias !11
  %1422 = getelementptr inbounds i32, i32* %1420, i64 4
  %1423 = bitcast i32* %1422 to <4 x i32>*
  store <4 x i32> %1415, <4 x i32>* %1423, align 4, !alias.scope !9, !noalias !11
  %1424 = sub <4 x i16> <i16 7, i16 7, i16 7, i16 7>, %1418
  %1425 = sub <4 x i16> <i16 3, i16 3, i16 3, i16 3>, %1418
  %1426 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 %1419
  %1427 = bitcast i16* %1426 to <4 x i16>*
  store <4 x i16> %1424, <4 x i16>* %1427, align 2, !alias.scope !13, !noalias !6
  %1428 = getelementptr inbounds i16, i16* %1426, i64 4
  %1429 = bitcast i16* %1428 to <4 x i16>*
  store <4 x i16> %1425, <4 x i16>* %1429, align 2, !alias.scope !13, !noalias !6
  %1430 = add i64 %1417, 8
  %1431 = add <4 x i16> %1418, <i16 8, i16 8, i16 8, i16 8>
  %1432 = icmp eq i64 %1430, %1405
  br i1 %1432, label %1433, label %1416, !llvm.loop !14

1433:                                             ; preds = %1416
  %1434 = icmp eq i64 %1375, %1405
  br i1 %1434, label %1625, label %1435

1435:                                             ; preds = %1433, %1377, %1372
  %1436 = phi i64 [ %1374, %1377 ], [ %1374, %1372 ], [ %1406, %1433 ]
  %1437 = and i64 %1436, 1
  %1438 = icmp eq i64 %1437, 0
  br i1 %1438, label %1446, label %1439

1439:                                             ; preds = %1435
  %1440 = load i32, i32* %1373, align 4
  %1441 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1370, i64 %1436, i32 0, i32 0
  store i32 %1440, i32* %1441, align 4
  %1442 = trunc i64 %1436 to i16
  %1443 = sub i16 7, %1442
  %1444 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 %1436
  store i16 %1443, i16* %1444, align 2
  %1445 = add nsw i64 %1436, 1
  br label %1446

1446:                                             ; preds = %1435, %1439
  %1447 = phi i64 [ %1436, %1435 ], [ %1445, %1439 ]
  %1448 = icmp eq i64 %1436, 1
  br i1 %1448, label %1625, label %1449

1449:                                             ; preds = %1446, %1449
  %1450 = phi i64 [ %1462, %1449 ], [ %1447, %1446 ]
  %1451 = load i32, i32* %1373, align 4
  %1452 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1370, i64 %1450, i32 0, i32 0
  store i32 %1451, i32* %1452, align 4
  %1453 = trunc i64 %1450 to i16
  %1454 = sub i16 7, %1453
  %1455 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 %1450
  store i16 %1454, i16* %1455, align 2
  %1456 = add nsw i64 %1450, 1
  %1457 = load i32, i32* %1373, align 4
  %1458 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %1370, i64 %1456, i32 0, i32 0
  store i32 %1457, i32* %1458, align 4
  %1459 = trunc i64 %1456 to i16
  %1460 = sub i16 7, %1459
  %1461 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 17, i64 %1456
  store i16 %1460, i16* %1461, align 2
  %1462 = add nsw i64 %1450, 2
  %1463 = icmp eq i64 %1450, 0
  br i1 %1463, label %1625, label %1449, !llvm.loop !16

1464:                                             ; preds = %1357
  %1465 = sext i32 %893 to i64
  %1466 = add nsw i64 %1465, -1
  %1467 = and i64 %1465, 7
  %1468 = icmp ult i64 %1466, 7
  br i1 %1468, label %1524, label %1469

1469:                                             ; preds = %1464
  %1470 = sub nsw i64 %1465, %1467
  br label %1471

1471:                                             ; preds = %1471, %1469
  %1472 = phi i64 [ 0, %1469 ], [ %1521, %1471 ]
  %1473 = phi i64 [ %1470, %1469 ], [ %1522, %1471 ]
  %1474 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1472
  %1475 = bitcast %"union.libgav1::CompoundMotionVector"* %1474 to [2 x %"struct.libgav1::MotionVector"]*
  %1476 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1472, i32 0, i32 0
  %1477 = load i32, i32* %1476, align 8
  %1478 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1475, i64 0, i64 1, i32 0, i32 0
  store i32 %1477, i32* %1478, align 4
  %1479 = or i64 %1472, 1
  %1480 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1479
  %1481 = bitcast %"union.libgav1::CompoundMotionVector"* %1480 to [2 x %"struct.libgav1::MotionVector"]*
  %1482 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1479, i32 0, i32 0
  %1483 = load i32, i32* %1482, align 4
  %1484 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1481, i64 0, i64 1, i32 0, i32 0
  store i32 %1483, i32* %1484, align 4
  %1485 = or i64 %1472, 2
  %1486 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1485
  %1487 = bitcast %"union.libgav1::CompoundMotionVector"* %1486 to [2 x %"struct.libgav1::MotionVector"]*
  %1488 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1485, i32 0, i32 0
  %1489 = load i32, i32* %1488, align 8
  %1490 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1487, i64 0, i64 1, i32 0, i32 0
  store i32 %1489, i32* %1490, align 4
  %1491 = or i64 %1472, 3
  %1492 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1491
  %1493 = bitcast %"union.libgav1::CompoundMotionVector"* %1492 to [2 x %"struct.libgav1::MotionVector"]*
  %1494 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1491, i32 0, i32 0
  %1495 = load i32, i32* %1494, align 4
  %1496 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1493, i64 0, i64 1, i32 0, i32 0
  store i32 %1495, i32* %1496, align 4
  %1497 = or i64 %1472, 4
  %1498 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1497
  %1499 = bitcast %"union.libgav1::CompoundMotionVector"* %1498 to [2 x %"struct.libgav1::MotionVector"]*
  %1500 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1497, i32 0, i32 0
  %1501 = load i32, i32* %1500, align 8
  %1502 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1499, i64 0, i64 1, i32 0, i32 0
  store i32 %1501, i32* %1502, align 4
  %1503 = or i64 %1472, 5
  %1504 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1503
  %1505 = bitcast %"union.libgav1::CompoundMotionVector"* %1504 to [2 x %"struct.libgav1::MotionVector"]*
  %1506 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1503, i32 0, i32 0
  %1507 = load i32, i32* %1506, align 4
  %1508 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1505, i64 0, i64 1, i32 0, i32 0
  store i32 %1507, i32* %1508, align 4
  %1509 = or i64 %1472, 6
  %1510 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1509
  %1511 = bitcast %"union.libgav1::CompoundMotionVector"* %1510 to [2 x %"struct.libgav1::MotionVector"]*
  %1512 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1509, i32 0, i32 0
  %1513 = load i32, i32* %1512, align 8
  %1514 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1511, i64 0, i64 1, i32 0, i32 0
  store i32 %1513, i32* %1514, align 4
  %1515 = or i64 %1472, 7
  %1516 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1515
  %1517 = bitcast %"union.libgav1::CompoundMotionVector"* %1516 to [2 x %"struct.libgav1::MotionVector"]*
  %1518 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1515, i32 0, i32 0
  %1519 = load i32, i32* %1518, align 4
  %1520 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1517, i64 0, i64 1, i32 0, i32 0
  store i32 %1519, i32* %1520, align 4
  %1521 = add nuw nsw i64 %1472, 8
  %1522 = add i64 %1473, -8
  %1523 = icmp eq i64 %1522, 0
  br i1 %1523, label %1524, label %1471

1524:                                             ; preds = %1471, %1464
  %1525 = phi i64 [ 0, %1464 ], [ %1521, %1471 ]
  %1526 = icmp eq i64 %1467, 0
  br i1 %1526, label %1538, label %1527

1527:                                             ; preds = %1524, %1527
  %1528 = phi i64 [ %1535, %1527 ], [ %1525, %1524 ]
  %1529 = phi i64 [ %1536, %1527 ], [ %1467, %1524 ]
  %1530 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1528
  %1531 = bitcast %"union.libgav1::CompoundMotionVector"* %1530 to [2 x %"struct.libgav1::MotionVector"]*
  %1532 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %9, i64 0, i64 1, i64 %1528, i32 0, i32 0
  %1533 = load i32, i32* %1532, align 4
  %1534 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1531, i64 0, i64 1, i32 0, i32 0
  store i32 %1533, i32* %1534, align 4
  %1535 = add nuw nsw i64 %1528, 1
  %1536 = add i64 %1529, -1
  %1537 = icmp eq i64 %1536, 0
  br i1 %1537, label %1538, label %1527, !llvm.loop !17

1538:                                             ; preds = %1524, %1527, %1357
  %1539 = phi i32 [ 0, %1357 ], [ %893, %1527 ], [ %893, %1524 ]
  %1540 = icmp sgt i32 %892, 0
  %1541 = icmp ult i32 %1539, 2
  %1542 = and i1 %1540, %1541
  br i1 %1542, label %1543, label %1564

1543:                                             ; preds = %1538
  %1544 = zext i32 %1539 to i64
  %1545 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1544
  %1546 = bitcast %"union.libgav1::CompoundMotionVector"* %1545 to [2 x %"struct.libgav1::MotionVector"]*
  %1547 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 1, i64 0, i32 0, i32 0
  %1548 = load i32, i32* %1547, align 8
  %1549 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1546, i64 0, i64 1, i32 0, i32 0
  store i32 %1548, i32* %1549, align 4
  %1550 = add nuw nsw i64 %1544, 1
  %1551 = icmp sgt i32 %892, 1
  %1552 = icmp ult i64 %1550, 2
  %1553 = and i1 %1552, %1551
  br i1 %1553, label %1554, label %1561

1554:                                             ; preds = %1543
  %1555 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 1
  %1556 = bitcast %"union.libgav1::CompoundMotionVector"* %1555 to [2 x %"struct.libgav1::MotionVector"]*
  %1557 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1556, i64 0, i64 1, i32 0, i32 0
  %1558 = getelementptr inbounds [2 x [2 x %"struct.libgav1::MotionVector"]], [2 x [2 x %"struct.libgav1::MotionVector"]]* %10, i64 0, i64 1, i64 1, i32 0, i32 0
  %1559 = load i32, i32* %1558, align 4
  %1560 = add nuw nsw i64 1, 1
  store i32 %1559, i32* %1557, align 4
  br label %1561

1561:                                             ; preds = %1554, %1543
  %1562 = phi i64 [ %1550, %1543 ], [ 2, %1554 ]
  %1563 = trunc i64 %1562 to i32
  br label %1564

1564:                                             ; preds = %1561, %1538
  %1565 = phi i32 [ %1539, %1538 ], [ %1563, %1561 ]
  %1566 = icmp ult i32 %1565, 2
  br i1 %1566, label %1567, label %1621

1567:                                             ; preds = %1564
  %1568 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 21, i64 1, i32 0, i32 0
  %1569 = zext i32 %1565 to i64
  %1570 = load i32, i32* %1568, align 4
  %1571 = sub nsw i64 2, %1569
  %1572 = sub nsw i64 1, %1569
  %1573 = and i64 %1571, 7
  %1574 = icmp eq i64 %1573, 0
  br i1 %1574, label %1584, label %1575

1575:                                             ; preds = %1567, %1575
  %1576 = phi i64 [ %1581, %1575 ], [ %1569, %1567 ]
  %1577 = phi i64 [ %1582, %1575 ], [ %1573, %1567 ]
  %1578 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1576
  %1579 = bitcast %"union.libgav1::CompoundMotionVector"* %1578 to [2 x %"struct.libgav1::MotionVector"]*
  %1580 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1579, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1580, align 4
  %1581 = add nuw nsw i64 %1576, 1
  %1582 = add i64 %1577, -1
  %1583 = icmp eq i64 %1582, 0
  br i1 %1583, label %1584, label %1575, !llvm.loop !18

1584:                                             ; preds = %1575, %1567
  %1585 = phi i64 [ %1569, %1567 ], [ %1581, %1575 ]
  %1586 = icmp ult i64 %1572, 7
  br i1 %1586, label %1621, label %1587

1587:                                             ; preds = %1584, %1587
  %1588 = phi i64 [ %1620, %1587 ], [ %1585, %1584 ]
  %1589 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1588
  %1590 = bitcast %"union.libgav1::CompoundMotionVector"* %1589 to [2 x %"struct.libgav1::MotionVector"]*
  %1591 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1590, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1591, align 4
  %1592 = add nuw nsw i64 %1588, 1
  %1593 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1592
  %1594 = bitcast %"union.libgav1::CompoundMotionVector"* %1593 to [2 x %"struct.libgav1::MotionVector"]*
  %1595 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1594, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1595, align 4
  %1596 = add nuw nsw i64 %1588, 2
  %1597 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1596
  %1598 = bitcast %"union.libgav1::CompoundMotionVector"* %1597 to [2 x %"struct.libgav1::MotionVector"]*
  %1599 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1598, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1599, align 4
  %1600 = add nuw nsw i64 %1588, 3
  %1601 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1600
  %1602 = bitcast %"union.libgav1::CompoundMotionVector"* %1601 to [2 x %"struct.libgav1::MotionVector"]*
  %1603 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1602, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1603, align 4
  %1604 = add nuw nsw i64 %1588, 4
  %1605 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1604
  %1606 = bitcast %"union.libgav1::CompoundMotionVector"* %1605 to [2 x %"struct.libgav1::MotionVector"]*
  %1607 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1606, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1607, align 4
  %1608 = add nuw nsw i64 %1588, 5
  %1609 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1608
  %1610 = bitcast %"union.libgav1::CompoundMotionVector"* %1609 to [2 x %"struct.libgav1::MotionVector"]*
  %1611 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1610, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1611, align 4
  %1612 = add nuw nsw i64 %1588, 6
  %1613 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1612
  %1614 = bitcast %"union.libgav1::CompoundMotionVector"* %1613 to [2 x %"struct.libgav1::MotionVector"]*
  %1615 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1614, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1615, align 4
  %1616 = add nuw nsw i64 %1588, 7
  %1617 = getelementptr inbounds [2 x %"union.libgav1::CompoundMotionVector"], [2 x %"union.libgav1::CompoundMotionVector"]* %11, i64 0, i64 %1616
  %1618 = bitcast %"union.libgav1::CompoundMotionVector"* %1617 to [2 x %"struct.libgav1::MotionVector"]*
  %1619 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %1618, i64 0, i64 1, i32 0, i32 0
  store i32 %1570, i32* %1619, align 4
  %1620 = add nuw nsw i64 %1588, 8
  br label %1587

1621:                                             ; preds = %1584, %1564
  %1622 = icmp eq i32 %891, 1
  %1623 = load i64, i64* %1214, align 16
  %1624 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %872, i64 0, i32 16, i32 0, i64 0, i32 0
  br i1 %1622, label %1359, label %1224

1625:                                             ; preds = %1446, %1449, %1433, %1364, %1368
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %866) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %865) #5
  br label %1803

1626:                                             ; preds = %710
  %1627 = load i32, i32* %196, align 8
  %1628 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 17, i64 0
  %1629 = icmp slt i32 %1627, 2
  br i1 %1629, label %1665, label %1630

1630:                                             ; preds = %1626
  %1631 = icmp slt i32 %1627, 4
  br i1 %1631, label %1632, label %1655

1632:                                             ; preds = %1630
  %1633 = load i16, i16* %1628, align 2
  %1634 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 17, i64 1
  %1635 = load i16, i16* %1634, align 2
  %1636 = icmp slt i16 %1633, %1635
  %1637 = icmp sgt i16 %1633, %1635
  %1638 = select i1 %1637, i16 %1633, i16 %1635
  %1639 = select i1 %1636, i16 %1633, i16 %1635
  %1640 = icmp eq i32 %1627, 3
  br i1 %1640, label %1641, label %1652

1641:                                             ; preds = %1632
  %1642 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 17, i64 2
  %1643 = load i16, i16* %1642, align 2
  %1644 = icmp sgt i16 %1639, %1643
  %1645 = select i1 %1644, i16 %1639, i16 %1643
  %1646 = icmp slt i16 %1639, %1643
  %1647 = select i1 %1646, i16 %1639, i16 %1643
  %1648 = icmp sgt i16 %1638, %1645
  %1649 = select i1 %1648, i16 %1638, i16 %1645
  %1650 = icmp slt i16 %1638, %1645
  %1651 = select i1 %1650, i16 %1638, i16 %1645
  store i16 %1647, i16* %1642, align 2
  br label %1652

1652:                                             ; preds = %1632, %1641
  %1653 = phi i16 [ %1649, %1641 ], [ %1638, %1632 ]
  %1654 = phi i16 [ %1651, %1641 ], [ %1639, %1632 ]
  store i16 %1653, i16* %1628, align 2
  store i16 %1654, i16* %1634, align 2
  br label %1662

1655:                                             ; preds = %1630
  %1656 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 17, i64 4
  %1657 = sext i32 %1627 to i64
  %1658 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 17, i64 %1657
  %1659 = bitcast i1 (i16*, i16*)** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1659) #5
  store i1 (i16*, i16*)* @_ZN7libgav112_GLOBAL__N_129CompareCandidateMotionVectorsERKsS2_, i1 (i16*, i16*)** %12, align 8
  call void @_ZNSt3__114__partial_sortIRPFbRKsS2_EPsEEvT0_S7_S7_T_(i16* %1628, i16* %1656, i16* %1658, i1 (i16*, i16*)** nonnull dereferenceable(8) %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1659) #5
  %1660 = load i32, i32* %196, align 8
  %1661 = icmp slt i32 %1660, 4
  br i1 %1661, label %1662, label %1803

1662:                                             ; preds = %1652, %1655
  %1663 = phi i32 [ %1627, %1652 ], [ %1660, %1655 ]
  %1664 = load i32, i32* %16, align 4
  br label %1665

1665:                                             ; preds = %1662, %1626
  %1666 = phi i32 [ %1664, %1662 ], [ %711, %1626 ]
  %1667 = phi i32 [ %1663, %1662 ], [ %1627, %1626 ]
  %1668 = sub nsw i32 %1666, %1667
  %1669 = sub nsw i32 4, %1667
  %1670 = sext i32 %1667 to i64
  %1671 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 17, i64 %1670
  %1672 = icmp slt i32 %1668, 2
  br i1 %1672, label %1803, label %1673

1673:                                             ; preds = %1665
  %1674 = icmp slt i32 %1668, 4
  br i1 %1674, label %1675, label %1698

1675:                                             ; preds = %1673
  %1676 = load i16, i16* %1671, align 2
  %1677 = getelementptr inbounds i16, i16* %1671, i64 1
  %1678 = load i16, i16* %1677, align 2
  %1679 = icmp slt i16 %1676, %1678
  %1680 = icmp sgt i16 %1676, %1678
  %1681 = select i1 %1680, i16 %1676, i16 %1678
  %1682 = select i1 %1679, i16 %1676, i16 %1678
  %1683 = icmp eq i32 %1668, 3
  br i1 %1683, label %1684, label %1695

1684:                                             ; preds = %1675
  %1685 = getelementptr inbounds i16, i16* %1671, i64 2
  %1686 = load i16, i16* %1685, align 2
  %1687 = icmp sgt i16 %1682, %1686
  %1688 = select i1 %1687, i16 %1682, i16 %1686
  %1689 = icmp slt i16 %1682, %1686
  %1690 = select i1 %1689, i16 %1682, i16 %1686
  %1691 = icmp sgt i16 %1681, %1688
  %1692 = select i1 %1691, i16 %1681, i16 %1688
  %1693 = icmp slt i16 %1681, %1688
  %1694 = select i1 %1693, i16 %1681, i16 %1688
  store i16 %1690, i16* %1685, align 2
  br label %1695

1695:                                             ; preds = %1684, %1675
  %1696 = phi i16 [ %1692, %1684 ], [ %1681, %1675 ]
  %1697 = phi i16 [ %1694, %1684 ], [ %1682, %1675 ]
  store i16 %1696, i16* %1671, align 2
  store i16 %1697, i16* %1677, align 2
  br label %1803

1698:                                             ; preds = %1673
  %1699 = icmp eq i32 %1669, 1
  br i1 %1699, label %1700, label %1797

1700:                                             ; preds = %1698
  %1701 = load i16, i16* %1671, align 2
  %1702 = zext i32 %1668 to i64
  %1703 = add nsw i64 %1702, -1
  %1704 = icmp ult i64 %1703, 16
  br i1 %1704, label %1783, label %1705

1705:                                             ; preds = %1700
  %1706 = and i64 %1703, -16
  %1707 = or i64 %1706, 1
  %1708 = insertelement <8 x i16> undef, i16 %1701, i32 0
  %1709 = shufflevector <8 x i16> %1708, <8 x i16> undef, <8 x i32> zeroinitializer
  %1710 = add nsw i64 %1706, -16
  %1711 = lshr exact i64 %1710, 4
  %1712 = add nuw nsw i64 %1711, 1
  %1713 = and i64 %1712, 1
  %1714 = icmp eq i64 %1710, 0
  br i1 %1714, label %1749, label %1715

1715:                                             ; preds = %1705
  %1716 = sub nuw nsw i64 %1712, %1713
  br label %1717

1717:                                             ; preds = %1717, %1715
  %1718 = phi i64 [ 0, %1715 ], [ %1744, %1717 ]
  %1719 = phi <8 x i16> [ %1709, %1715 ], [ %1742, %1717 ]
  %1720 = phi <8 x i16> [ %1709, %1715 ], [ %1743, %1717 ]
  %1721 = phi i64 [ %1716, %1715 ], [ %1745, %1717 ]
  %1722 = or i64 %1718, 1
  %1723 = getelementptr inbounds i16, i16* %1671, i64 %1722
  %1724 = bitcast i16* %1723 to <8 x i16>*
  %1725 = load <8 x i16>, <8 x i16>* %1724, align 2
  %1726 = getelementptr inbounds i16, i16* %1723, i64 8
  %1727 = bitcast i16* %1726 to <8 x i16>*
  %1728 = load <8 x i16>, <8 x i16>* %1727, align 2
  %1729 = icmp slt <8 x i16> %1719, %1725
  %1730 = icmp slt <8 x i16> %1720, %1728
  %1731 = select <8 x i1> %1729, <8 x i16> %1725, <8 x i16> %1719
  %1732 = select <8 x i1> %1730, <8 x i16> %1728, <8 x i16> %1720
  %1733 = or i64 %1718, 17
  %1734 = getelementptr inbounds i16, i16* %1671, i64 %1733
  %1735 = bitcast i16* %1734 to <8 x i16>*
  %1736 = load <8 x i16>, <8 x i16>* %1735, align 2
  %1737 = getelementptr inbounds i16, i16* %1734, i64 8
  %1738 = bitcast i16* %1737 to <8 x i16>*
  %1739 = load <8 x i16>, <8 x i16>* %1738, align 2
  %1740 = icmp slt <8 x i16> %1731, %1736
  %1741 = icmp slt <8 x i16> %1732, %1739
  %1742 = select <8 x i1> %1740, <8 x i16> %1736, <8 x i16> %1731
  %1743 = select <8 x i1> %1741, <8 x i16> %1739, <8 x i16> %1732
  %1744 = add i64 %1718, 32
  %1745 = add i64 %1721, -2
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1747, label %1717, !llvm.loop !19

1747:                                             ; preds = %1717
  %1748 = or i64 %1744, 1
  br label %1749

1749:                                             ; preds = %1747, %1705
  %1750 = phi <8 x i16> [ undef, %1705 ], [ %1742, %1747 ]
  %1751 = phi <8 x i16> [ undef, %1705 ], [ %1743, %1747 ]
  %1752 = phi i64 [ 1, %1705 ], [ %1748, %1747 ]
  %1753 = phi <8 x i16> [ %1709, %1705 ], [ %1742, %1747 ]
  %1754 = phi <8 x i16> [ %1709, %1705 ], [ %1743, %1747 ]
  %1755 = icmp eq i64 %1713, 0
  br i1 %1755, label %1767, label %1756

1756:                                             ; preds = %1749
  %1757 = getelementptr inbounds i16, i16* %1671, i64 %1752
  %1758 = bitcast i16* %1757 to <8 x i16>*
  %1759 = load <8 x i16>, <8 x i16>* %1758, align 2
  %1760 = getelementptr inbounds i16, i16* %1757, i64 8
  %1761 = bitcast i16* %1760 to <8 x i16>*
  %1762 = load <8 x i16>, <8 x i16>* %1761, align 2
  %1763 = icmp slt <8 x i16> %1754, %1762
  %1764 = select <8 x i1> %1763, <8 x i16> %1762, <8 x i16> %1754
  %1765 = icmp slt <8 x i16> %1753, %1759
  %1766 = select <8 x i1> %1765, <8 x i16> %1759, <8 x i16> %1753
  br label %1767

1767:                                             ; preds = %1749, %1756
  %1768 = phi <8 x i16> [ %1750, %1749 ], [ %1766, %1756 ]
  %1769 = phi <8 x i16> [ %1751, %1749 ], [ %1764, %1756 ]
  %1770 = icmp sgt <8 x i16> %1768, %1769
  %1771 = select <8 x i1> %1770, <8 x i16> %1768, <8 x i16> %1769
  %1772 = shufflevector <8 x i16> %1771, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %1773 = icmp sgt <8 x i16> %1771, %1772
  %1774 = select <8 x i1> %1773, <8 x i16> %1771, <8 x i16> %1772
  %1775 = shufflevector <8 x i16> %1774, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1776 = icmp sgt <8 x i16> %1774, %1775
  %1777 = select <8 x i1> %1776, <8 x i16> %1774, <8 x i16> %1775
  %1778 = shufflevector <8 x i16> %1777, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1779 = icmp sgt <8 x i16> %1777, %1778
  %1780 = select <8 x i1> %1779, <8 x i16> %1777, <8 x i16> %1778
  %1781 = extractelement <8 x i16> %1780, i32 0
  %1782 = icmp eq i64 %1703, %1706
  br i1 %1782, label %1795, label %1783

1783:                                             ; preds = %1767, %1700
  %1784 = phi i64 [ 1, %1700 ], [ %1707, %1767 ]
  %1785 = phi i16 [ %1701, %1700 ], [ %1781, %1767 ]
  br label %1786

1786:                                             ; preds = %1783, %1786
  %1787 = phi i64 [ %1793, %1786 ], [ %1784, %1783 ]
  %1788 = phi i16 [ %1792, %1786 ], [ %1785, %1783 ]
  %1789 = getelementptr inbounds i16, i16* %1671, i64 %1787
  %1790 = load i16, i16* %1789, align 2
  %1791 = icmp slt i16 %1788, %1790
  %1792 = select i1 %1791, i16 %1790, i16 %1788
  %1793 = add nuw nsw i64 %1787, 1
  %1794 = icmp eq i64 %1793, %1702
  br i1 %1794, label %1795, label %1786, !llvm.loop !20

1795:                                             ; preds = %1786, %1767
  %1796 = phi i16 [ %1781, %1767 ], [ %1792, %1786 ]
  store i16 %1796, i16* %1671, align 2
  br label %1803

1797:                                             ; preds = %1698
  %1798 = sext i32 %1669 to i64
  %1799 = getelementptr inbounds i16, i16* %1671, i64 %1798
  %1800 = sext i32 %1668 to i64
  %1801 = getelementptr inbounds i16, i16* %1671, i64 %1800
  %1802 = bitcast i1 (i16*, i16*)** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1802) #5
  store i1 (i16*, i16*)* @_ZN7libgav112_GLOBAL__N_129CompareCandidateMotionVectorsERKsS2_, i1 (i16*, i16*)** %13, align 8
  call void @_ZNSt3__114__partial_sortIRPFbRKsS2_EPsEEvT0_S7_S7_T_(i16* %1671, i16* %1799, i16* %1801, i1 (i16*, i16*)** nonnull dereferenceable(8) %13) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1802) #5
  br label %1803

1803:                                             ; preds = %1797, %1795, %1695, %1665, %1655, %1625
  %1804 = load i32, i32* %16, align 4
  %1805 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %22, i64 0, i32 19
  store i32 %1804, i32* %1805, align 4
  %1806 = load i8, i8* %15, align 1, !range !2
  %1807 = load i8, i8* %17, align 1, !range !2
  %1808 = add nuw nsw i8 %1807, %1806
  %1809 = zext i8 %1808 to i32
  %1810 = load i8, i8* %14, align 1, !range !2
  %1811 = icmp ne i8 %1810, 0
  %1812 = getelementptr inbounds %"struct.libgav1::MvContexts", %"struct.libgav1::MvContexts"* %2, i64 0, i32 2
  %1813 = getelementptr inbounds %"struct.libgav1::MvContexts", %"struct.libgav1::MvContexts"* %2, i64 0, i32 1
  switch i32 %194, label %1820 [
    i32 0, label %1814
    i32 1, label %1817
  ]

1814:                                             ; preds = %1803
  %1815 = icmp ne i8 %1808, 0
  %1816 = zext i1 %1815 to i32
  store i32 %1816, i32* %1812, align 4
  br label %1822

1817:                                             ; preds = %1803
  %1818 = select i1 %1811, i32 2, i32 3
  store i32 %1818, i32* %1812, align 4
  %1819 = add nuw nsw i32 %1809, 2
  br label %1822

1820:                                             ; preds = %1803
  %1821 = select i1 %1811, i32 4, i32 5
  store i32 %1821, i32* %1812, align 4
  br label %1822

1822:                                             ; preds = %1814, %1817, %1820
  %1823 = phi i32 [ %1809, %1814 ], [ %1819, %1817 ], [ 5, %1820 ]
  store i32 %1823, i32* %1813, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZN7libgav112_GLOBAL__N_113SetupGlobalMvERKNS_4Tile5BlockEiPNS_12MotionVectorE(%"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), i32, %"struct.libgav1::MotionVector"* nocapture) unnamed_addr #2 {
  %4 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 14
  %5 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %4, align 8
  %6 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 0
  %7 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %6, align 8
  %8 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %7, i64 0, i32 21
  %9 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %5, i64 0, i32 14, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i64
  %14 = icmp eq i8 %12, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 0
  %17 = load i8, i8* %16, align 4
  switch i8 %17, label %62 [
    i8 0, label %33
    i8 1, label %18
  ]

18:                                               ; preds = %15
  %19 = bitcast %"struct.libgav1::MotionVector"* %2 to [2 x i16]*
  %20 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 13
  %23 = trunc i32 %22 to i16
  %24 = bitcast %"struct.libgav1::MotionVector"* %2 to i16*
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 13
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 0, i64 1
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 37
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %160

33:                                               ; preds = %15, %3
  %34 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %34, align 4
  br label %160

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 36
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 0
  %39 = bitcast %"struct.libgav1::MotionVector"* %2 to i16*
  br i1 %38, label %54, label %40

40:                                               ; preds = %35
  %41 = add i16 %23, 3
  %42 = lshr i32 %21, 28
  %43 = trunc i32 %42 to i16
  %44 = and i16 %43, 1
  %45 = add i16 %41, %44
  %46 = and i16 %45, -8
  store i16 %46, i16* %39, align 2
  %47 = getelementptr inbounds i16, i16* %39, i64 1
  %48 = add i16 %28, 3
  %49 = lshr i32 %26, 28
  %50 = trunc i32 %49 to i16
  %51 = and i16 %50, 1
  %52 = add i16 %48, %51
  %53 = and i16 %52, -8
  store i16 %53, i16* %47, align 2
  br label %160

54:                                               ; preds = %35
  %55 = ashr i16 %23, 15
  %56 = sub i16 %23, %55
  %57 = and i16 %56, -2
  store i16 %57, i16* %39, align 2
  %58 = getelementptr inbounds i16, i16* %39, i64 1
  %59 = ashr i16 %28, 15
  %60 = sub i16 %28, %59
  %61 = and i16 %60, -2
  store i16 %61, i16* %58, align 2
  br label %160

62:                                               ; preds = %15
  %63 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 7
  %64 = load i32, i32* %63, align 8
  %65 = shl i32 %64, 2
  %66 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 8
  %67 = load i32, i32* %66, align 4
  %68 = ashr i32 %67, 1
  %69 = add i32 %65, -1
  %70 = add i32 %69, %68
  %71 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 6
  %72 = load i32, i32* %71, align 4
  %73 = shl i32 %72, 2
  %74 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 9
  %75 = load i32, i32* %74, align 8
  %76 = ashr i32 %75, 1
  %77 = add i32 %73, -1
  %78 = add i32 %77, %76
  %79 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 2
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, -65536
  %82 = mul nsw i32 %81, %70
  %83 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 3
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %78
  %86 = add nsw i32 %82, %85
  %87 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 0
  %88 = load i32, i32* %87, align 4
  %89 = add nsw i32 %86, %88
  %90 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %70
  %93 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 5
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %94, -65536
  %96 = mul nsw i32 %95, %78
  %97 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 14, i32 0, i64 %13, i32 1, i64 1
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, %92
  %100 = add i32 %99, %96
  %101 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 37
  %102 = load i8, i8* %101, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  %104 = ashr i32 %100, 31
  %105 = add nsw i32 %104, %100
  br i1 %103, label %118, label %106

106:                                              ; preds = %62
  %107 = add nsw i32 %105, 4096
  %108 = lshr i32 %107, 13
  %109 = trunc i32 %108 to i16
  %110 = bitcast %"struct.libgav1::MotionVector"* %2 to [2 x i16]*
  %111 = bitcast %"struct.libgav1::MotionVector"* %2 to i16*
  store i16 %109, i16* %111, align 4
  %112 = ashr i32 %89, 31
  %113 = add i32 %89, 4096
  %114 = add i32 %113, %112
  %115 = lshr i32 %114, 13
  %116 = trunc i32 %115 to i16
  %117 = getelementptr inbounds [2 x i16], [2 x i16]* %110, i64 0, i64 1
  store i16 %116, i16* %117, align 2
  br label %160

118:                                              ; preds = %62
  %119 = add nsw i32 %105, 8192
  %120 = ashr i32 %119, 14
  %121 = shl nsw i32 %120, 1
  %122 = trunc i32 %121 to i16
  %123 = bitcast %"struct.libgav1::MotionVector"* %2 to [2 x i16]*
  %124 = bitcast %"struct.libgav1::MotionVector"* %2 to i16*
  store i16 %122, i16* %124, align 4
  %125 = ashr i32 %89, 31
  %126 = add i32 %89, 8192
  %127 = add i32 %126, %125
  %128 = ashr i32 %127, 14
  %129 = shl nsw i32 %128, 1
  %130 = trunc i32 %129 to i16
  %131 = getelementptr inbounds [2 x i16], [2 x i16]* %123, i64 0, i64 1
  store i16 %130, i16* %131, align 2
  %132 = load i8, i8* %101, align 1, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %160

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 36
  %136 = load i8, i8* %135, align 8
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %152, label %138

138:                                              ; preds = %134
  %139 = add i16 %122, 3
  %140 = lshr i32 %120, 14
  %141 = trunc i32 %140 to i16
  %142 = and i16 %141, 1
  %143 = add i16 %139, %142
  %144 = and i16 %143, -8
  store i16 %144, i16* %124, align 2
  %145 = getelementptr inbounds i16, i16* %124, i64 1
  %146 = add i16 %130, 3
  %147 = lshr i32 %128, 14
  %148 = trunc i32 %147 to i16
  %149 = and i16 %148, 1
  %150 = add i16 %146, %149
  %151 = and i16 %150, -8
  store i16 %151, i16* %145, align 2
  br label %160

152:                                              ; preds = %134
  %153 = ashr i16 %122, 15
  %154 = sub nsw i16 %122, %153
  %155 = and i16 %154, -2
  store i16 %155, i16* %124, align 2
  %156 = getelementptr inbounds i16, i16* %124, i64 1
  %157 = ashr i16 %130, 15
  %158 = sub nsw i16 %130, %157
  %159 = and i16 %158, -2
  store i16 %159, i16* %156, align 2
  br label %160

160:                                              ; preds = %152, %138, %118, %54, %40, %18, %106, %33
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav115FindWarpSamplesERKNS_4Tile5BlockEPiS4_PA4_i(%"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), i32* nocapture, i32* nocapture, [4 x i32]* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 0
  %6 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %5, align 8
  %7 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 3, i64 0
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %95, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, -1
  %14 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %6, i64 0, i32 35
  %17 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %16, align 32
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %17, i64 0, i32 4, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, %18
  %23 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %17, i64 0, i32 4, i32 3, i32 2
  %24 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %23, align 8
  %25 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %24, i64 %22
  %26 = sext i32 %15 to i64
  %27 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %25, i64 %26
  %28 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %27, align 8
  %29 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksWideE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 10
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %34
  br i1 %37, label %38, label %47

38:                                               ; preds = %10
  %39 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %6, i64 0, i32 21
  %40 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %39, align 8
  %41 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %40, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = sub nsw i32 %42, %15
  %44 = icmp slt i32 %43, %36
  %45 = select i1 %44, i32 %43, i32 %36
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %54, label %95

47:                                               ; preds = %10
  %48 = add nsw i32 %34, -1
  %49 = and i32 %48, %15
  %50 = icmp slt i32 %49, 1
  %51 = zext i1 %50 to i8
  %52 = sub i32 %34, %49
  %53 = icmp sle i32 %52, %36
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 -1, i32 0, i32* %1, i32* %2, [4 x i32]* %3)
  br label %95

54:                                               ; preds = %38, %88
  %55 = phi %"struct.libgav1::BlockParameters"** [ %94, %88 ], [ %24, %38 ]
  %56 = phi i32 [ %92, %88 ], [ %20, %38 ]
  %57 = phi i32 [ %89, %88 ], [ %12, %38 ]
  %58 = phi i32 [ %83, %88 ], [ %15, %38 ]
  %59 = phi i32 [ %79, %88 ], [ %36, %38 ]
  %60 = phi i32 [ %78, %88 ], [ 0, %38 ]
  %61 = add nsw i32 %57, -1
  %62 = add nsw i32 %58, %60
  %63 = sext i32 %61 to i64
  %64 = sext i32 %56 to i64
  %65 = mul nsw i64 %64, %63
  %66 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %55, i64 %65
  %67 = sext i32 %62 to i64
  %68 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %66, i64 %67
  %69 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %68, align 8
  %70 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %69, i64 0, i32 0
  %71 = load i8, i8* %70, align 8
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksWideE, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = icmp sgt i32 %59, %75
  %77 = select i1 %76, i32 %75, i32 %59
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 -1, i32 %60, i32* %1, i32* %2, [4 x i32]* %3)
  %78 = add nsw i32 %77, %60
  %79 = load i32, i32* %35, align 4
  %80 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %39, align 8
  %81 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %80, i64 0, i32 6
  %82 = load i32, i32* %81, align 8
  %83 = load i32, i32* %14, align 8
  %84 = sub nsw i32 %82, %83
  %85 = icmp slt i32 %84, %79
  %86 = select i1 %85, i32 %84, i32 %79
  %87 = icmp slt i32 %78, %86
  br i1 %87, label %88, label %95

88:                                               ; preds = %54
  %89 = load i32, i32* %11, align 4
  %90 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %16, align 32
  %91 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %90, i64 0, i32 4, i32 3, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %90, i64 0, i32 4, i32 3, i32 2
  %94 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %93, align 8
  br label %54

95:                                               ; preds = %54, %38, %47, %4
  %96 = phi i8 [ 1, %4 ], [ %51, %47 ], [ 1, %38 ], [ 1, %54 ]
  %97 = phi i1 [ true, %4 ], [ %53, %47 ], [ true, %38 ], [ true, %54 ]
  %98 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 4, i64 0
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %184, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 6
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 7
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %105, -1
  %107 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %6, i64 0, i32 35
  %108 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %107, align 32
  %109 = sext i32 %103 to i64
  %110 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %108, i64 0, i32 4, i32 3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %112, %109
  %114 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %108, i64 0, i32 4, i32 3, i32 2
  %115 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %114, align 8
  %116 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %115, i64 %113
  %117 = sext i32 %106 to i64
  %118 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %116, i64 %117
  %119 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %118, align 8
  %120 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %119, i64 0, i32 0
  %121 = load i8, i8* %120, align 8
  %122 = zext i8 %121 to i64
  %123 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksHighE, i64 0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 11
  %127 = load i32, i32* %126, align 8
  %128 = icmp sgt i32 %127, %125
  br i1 %128, label %129, label %138

129:                                              ; preds = %101
  %130 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %6, i64 0, i32 21
  %131 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %130, align 8
  %132 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %131, i64 0, i32 7
  %133 = load i32, i32* %132, align 4
  %134 = sub nsw i32 %133, %103
  %135 = icmp slt i32 %134, %127
  %136 = select i1 %135, i32 %134, i32 %127
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %143, label %184

138:                                              ; preds = %101
  %139 = add nsw i32 %125, -1
  %140 = and i32 %139, %103
  %141 = icmp sgt i32 %140, 0
  %142 = select i1 %141, i8 0, i8 %96
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 0, i32 -1, i32* %1, i32* %2, [4 x i32]* %3)
  br label %184

143:                                              ; preds = %129, %177
  %144 = phi %"struct.libgav1::BlockParameters"** [ %183, %177 ], [ %115, %129 ]
  %145 = phi i32 [ %181, %177 ], [ %111, %129 ]
  %146 = phi i32 [ %178, %177 ], [ %105, %129 ]
  %147 = phi i32 [ %172, %177 ], [ %103, %129 ]
  %148 = phi i32 [ %168, %177 ], [ %127, %129 ]
  %149 = phi i32 [ %167, %177 ], [ 0, %129 ]
  %150 = add nsw i32 %147, %149
  %151 = add nsw i32 %146, -1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %145 to i64
  %154 = mul nsw i64 %153, %152
  %155 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %144, i64 %154
  %156 = sext i32 %151 to i64
  %157 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %155, i64 %156
  %158 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %157, align 8
  %159 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %158, i64 0, i32 0
  %160 = load i8, i8* %159, align 8
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksHighE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp sgt i32 %148, %164
  %166 = select i1 %165, i32 %164, i32 %148
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 %149, i32 -1, i32* %1, i32* %2, [4 x i32]* %3)
  %167 = add nsw i32 %166, %149
  %168 = load i32, i32* %126, align 8
  %169 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %130, align 8
  %170 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %169, i64 0, i32 7
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %102, align 4
  %173 = sub nsw i32 %171, %172
  %174 = icmp slt i32 %173, %168
  %175 = select i1 %174, i32 %173, i32 %168
  %176 = icmp slt i32 %167, %175
  br i1 %176, label %177, label %184

177:                                              ; preds = %143
  %178 = load i32, i32* %104, align 8
  %179 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %107, align 32
  %180 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %179, i64 0, i32 4, i32 3, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %179, i64 0, i32 4, i32 3, i32 2
  %183 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %182, align 8
  br label %143

184:                                              ; preds = %143, %129, %138, %95
  %185 = phi i8 [ %96, %95 ], [ %142, %138 ], [ %96, %129 ], [ %96, %143 ]
  %186 = and i8 %185, 1
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %189, label %188

188:                                              ; preds = %184
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 -1, i32 -1, i32* %1, i32* %2, [4 x i32]* %3)
  br label %189

189:                                              ; preds = %184, %188
  br i1 %97, label %190, label %197

190:                                              ; preds = %189
  %191 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 2
  %192 = load i8, i8* %191, align 1
  %193 = icmp ult i8 %192, 19
  br i1 %193, label %194, label %197

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 10
  %196 = load i32, i32* %195, align 4
  tail call fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* dereferenceable(88) %0, i32 -1, i32 %196, i32* %1, i32* %2, [4 x i32]* %3)
  br label %197

197:                                              ; preds = %194, %190, %189
  %198 = load i32, i32* %1, align 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %197
  %201 = load i32, i32* %2, align 4
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  store i32 1, i32* %1, align 4
  br label %204

204:                                              ; preds = %203, %200, %197
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZN7libgav112_GLOBAL__N_19AddSampleERKNS_4Tile5BlockEiiPiS5_PA4_i(%"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), i32, i32, i32* nocapture, i32* nocapture, [4 x i32]* nocapture) unnamed_addr #2 {
  %7 = load i32, i32* %4, align 4
  %8 = icmp sgt i32 %7, 7
  br i1 %8, label %153, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, %1
  %13 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, %2
  %16 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 0
  %17 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %16, align 8
  %18 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %17, i64 0, i32 5
  %19 = load i32, i32* %18, align 32
  %20 = icmp sgt i32 %19, %12
  br i1 %20, label %153, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %17, i64 0, i32 6
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %12
  br i1 %24, label %25, label %153

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %17, i64 0, i32 7
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, %15
  br i1 %28, label %153, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %17, i64 0, i32 8
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, %15
  br i1 %32, label %33, label %153

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %17, i64 0, i32 35
  %35 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %34, align 32
  %36 = sext i32 %12 to i64
  %37 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %35, i64 0, i32 4, i32 3, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = mul nsw i64 %39, %36
  %41 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %35, i64 0, i32 4, i32 3, i32 2
  %42 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %41, align 8
  %43 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %42, i64 %40
  %44 = sext i32 %15 to i64
  %45 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %43, i64 %44
  %46 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %45, align 8
  %47 = icmp eq %"struct.libgav1::BlockParameters"* %46, null
  br i1 %47, label %153, label %48

48:                                               ; preds = %33
  %49 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 14
  %50 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %49, align 8
  %51 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %46, i64 0, i32 14, i64 0
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %50, i64 0, i32 14, i64 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %52, %54
  br i1 %55, label %56, label %153

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %46, i64 0, i32 14, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, -1
  br i1 %59, label %60, label %153

60:                                               ; preds = %56
  %61 = add nsw i32 %7, 1
  store i32 %61, i32* %4, align 4
  %62 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %46, i64 0, i32 0
  %63 = load i8, i8* %62, align 8
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksHighE, i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = sub nsw i32 0, %67
  %69 = and i32 %12, %68
  %70 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kNum4x4BlocksWideE, i64 0, i64 %64
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = sub nsw i32 0, %72
  %74 = and i32 %15, %73
  %75 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %34, align 32
  %76 = sext i32 %69 to i64
  %77 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %75, i64 0, i32 4, i32 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %79, %76
  %81 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %75, i64 0, i32 4, i32 3, i32 2
  %82 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %81, align 8
  %83 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %82, i64 %80
  %84 = sext i32 %74 to i64
  %85 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %83, i64 %84
  %86 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %85, align 8
  %87 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %86, i64 0, i32 16
  %88 = bitcast %"union.libgav1::CompoundMotionVector"* %87 to [2 x i16]*
  %89 = bitcast %"union.libgav1::CompoundMotionVector"* %87 to i16*
  %90 = load i16, i16* %89, align 8
  %91 = sext i16 %90 to i32
  %92 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %50, i64 0, i32 16
  %93 = bitcast %"union.libgav1::CompoundMotionVector"* %92 to [2 x i16]*
  %94 = bitcast %"union.libgav1::CompoundMotionVector"* %92 to i16*
  %95 = load i16, i16* %94, align 8
  %96 = sext i16 %95 to i32
  %97 = sub nsw i32 %91, %96
  %98 = icmp slt i32 %97, 0
  %99 = sub nsw i32 0, %97
  %100 = select i1 %98, i32 %99, i32 %97
  %101 = getelementptr inbounds [2 x i16], [2 x i16]* %88, i64 0, i64 1
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i32
  %104 = getelementptr inbounds [2 x i16], [2 x i16]* %93, i64 0, i64 1
  %105 = load i16, i16* %104, align 2
  %106 = sext i16 %105 to i32
  %107 = sub nsw i32 %103, %106
  %108 = icmp slt i32 %107, 0
  %109 = sub nsw i32 0, %107
  %110 = select i1 %108, i32 %109, i32 %107
  %111 = add nuw nsw i32 %110, %100
  %112 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 2
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds [22 x i32], [22 x i32]* @_ZN7libgav112_GLOBAL__N_119kWarpValidThresholdE, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = icmp sle i32 %111, %116
  %118 = xor i1 %117, true
  %119 = icmp sgt i32 %7, 0
  %120 = and i1 %119, %118
  br i1 %120, label %153, label %121

121:                                              ; preds = %60
  %122 = shl i32 %69, 2
  %123 = shl nuw nsw i32 %67, 1
  %124 = add nsw i32 %122, %123
  %125 = shl i32 %74, 2
  %126 = shl nuw nsw i32 %72, 1
  %127 = add nsw i32 %125, %126
  %128 = shl i32 %124, 3
  %129 = add i32 %128, -8
  %130 = load i32, i32* %3, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 %131, i64 0
  store i32 %129, i32* %132, align 4
  %133 = shl i32 %127, 3
  %134 = add i32 %133, -8
  %135 = load i32, i32* %3, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 %136, i64 1
  store i32 %134, i32* %137, align 4
  %138 = load i16, i16* %89, align 8
  %139 = sext i16 %138 to i32
  %140 = add nsw i32 %129, %139
  %141 = load i32, i32* %3, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 %142, i64 2
  store i32 %140, i32* %143, align 4
  %144 = load i16, i16* %101, align 2
  %145 = sext i16 %144 to i32
  %146 = add nsw i32 %134, %145
  %147 = load i32, i32* %3, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 %148, i64 3
  store i32 %146, i32* %149, align 4
  br i1 %117, label %150, label %153

150:                                              ; preds = %121
  %151 = load i32, i32* %3, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %3, align 4
  br label %153

153:                                              ; preds = %33, %60, %9, %21, %25, %29, %150, %121, %48, %56, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116SetupMotionFieldERKNS_14ObuFrameHeaderERKNS_16RefCountedBufferERKNSt3__15arrayINS6_10shared_ptrIS3_EELm8EEEiiiiPNS_19TemporalMotionFieldE(%"struct.libgav1::ObuFrameHeader"* nocapture readonly dereferenceable(2080), %"class.libgav1::RefCountedBuffer"* nocapture readonly dereferenceable(21632), %"struct.std::__1::array.15"* nocapture readonly dereferenceable(128), i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*) local_unnamed_addr #0 {
  %9 = ashr i32 %3, 1
  %10 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %4
  %13 = select i1 %12, i32 %11, i32 %4
  %14 = ashr i32 %13, 1
  %15 = ashr i32 %5, 1
  %16 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %6
  %19 = select i1 %18, i32 %17, i32 %6
  %20 = ashr i32 %19, 1
  %21 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 52, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i64
  %24 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %2, i64 0, i32 0, i64 %23, i32 0
  %25 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %24, align 8
  %26 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %25, i64 0, i32 12
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, -3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %25, i64 0, i32 32, i32 0, i32 0, i64 7
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 32, i32 0, i32 0, i64 4
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %32, %34
  br i1 %35, label %59, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 32, i32 1, i32 0, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = sub nsw i32 0, %39
  %41 = icmp slt i32 %40, 0
  %42 = select i1 %41, i32 %39, i32 %40
  %43 = icmp slt i32 %42, 32
  br i1 %43, label %44, label %59

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %25, i64 0, i32 21
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %11
  br i1 %47, label %48, label %59

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %25, i64 0, i32 20
  %50 = load i32, i32* %49, align 8
  %51 = icmp ne i32 %50, %17
  %52 = icmp slt i8 %38, -31
  %53 = or i1 %51, %52
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %25, i64 0, i32 32
  %56 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %57 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %56, i64 0, i32 21
  %58 = load void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %57, align 8
  tail call void %58(%"struct.libgav1::ReferenceInfo"* dereferenceable(128) %55, i32 %40, i32 -1, i32 %9, i32 %14, i32 %15, i32 %20, %"struct.libgav1::TemporalMotionField"* %7) #5
  br label %59

59:                                               ; preds = %48, %54, %44, %30, %36, %8
  %60 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 32, i32 1, i32 0, i64 5
  %61 = load i8, i8* %60, align 1
  %62 = icmp sgt i8 %61, 0
  br i1 %62, label %63, label %91

63:                                               ; preds = %59
  %64 = sext i8 %61 to i32
  %65 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 52, i64 4
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i64
  %68 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %2, i64 0, i32 0, i64 %67, i32 0
  %69 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %68, align 8
  %70 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %69, i64 0, i32 21
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* %10, align 4
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %74, label %91

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %69, i64 0, i32 20
  %76 = load i32, i32* %75, align 8
  %77 = load i32, i32* %16, align 8
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %69, i64 0, i32 12
  %81 = load i8, i8* %80, align 1
  %82 = and i8 %81, -3
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %79
  %85 = icmp sgt i8 %61, 31
  br i1 %85, label %91, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %69, i64 0, i32 32
  %88 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %89 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %88, i64 0, i32 21
  %90 = load void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %89, align 8
  tail call void %90(%"struct.libgav1::ReferenceInfo"* dereferenceable(128) %87, i32 %64, i32 0, i32 %9, i32 %14, i32 %15, i32 %20, %"struct.libgav1::TemporalMotionField"* %7) #5
  br label %91

91:                                               ; preds = %79, %63, %74, %86, %84, %59
  %92 = phi i32 [ 1, %59 ], [ 0, %86 ], [ 0, %84 ], [ 1, %74 ], [ 1, %63 ], [ 1, %79 ]
  %93 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 32, i32 1, i32 0, i64 6
  %94 = load i8, i8* %93, align 1
  %95 = icmp sgt i8 %94, 0
  br i1 %95, label %96, label %126

96:                                               ; preds = %91
  %97 = sext i8 %94 to i32
  %98 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 52, i64 5
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i64
  %101 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %2, i64 0, i32 0, i64 %100, i32 0
  %102 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %101, align 8
  %103 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %102, i64 0, i32 21
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* %10, align 4
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %107, label %126

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %102, i64 0, i32 20
  %109 = load i32, i32* %108, align 8
  %110 = load i32, i32* %16, align 8
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %112, label %126

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %102, i64 0, i32 12
  %114 = load i8, i8* %113, align 1
  %115 = and i8 %114, -3
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %126, label %117

117:                                              ; preds = %112
  %118 = icmp sgt i8 %94, 31
  br i1 %118, label %124, label %119

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %102, i64 0, i32 32
  %121 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %122 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %121, i64 0, i32 21
  %123 = load void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %122, align 8
  tail call void %123(%"struct.libgav1::ReferenceInfo"* dereferenceable(128) %120, i32 %97, i32 0, i32 %9, i32 %14, i32 %15, i32 %20, %"struct.libgav1::TemporalMotionField"* %7) #5
  br label %124

124:                                              ; preds = %117, %119
  %125 = icmp eq i32 %92, 0
  br i1 %125, label %196, label %126

126:                                              ; preds = %124, %112, %96, %107, %91
  %127 = phi i32 [ 0, %124 ], [ %92, %91 ], [ %92, %107 ], [ %92, %96 ], [ %92, %112 ]
  %128 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 32, i32 1, i32 0, i64 7
  %129 = load i8, i8* %128, align 1
  %130 = icmp sgt i8 %129, 0
  br i1 %130, label %131, label %161

131:                                              ; preds = %126
  %132 = sext i8 %129 to i32
  %133 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 52, i64 6
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i64
  %136 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %2, i64 0, i32 0, i64 %135, i32 0
  %137 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %136, align 8
  %138 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %137, i64 0, i32 21
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* %10, align 4
  %141 = icmp eq i32 %139, %140
  br i1 %141, label %142, label %161

142:                                              ; preds = %131
  %143 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %137, i64 0, i32 20
  %144 = load i32, i32* %143, align 8
  %145 = load i32, i32* %16, align 8
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %147, label %161

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %137, i64 0, i32 12
  %149 = load i8, i8* %148, align 1
  %150 = and i8 %149, -3
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %161, label %152

152:                                              ; preds = %147
  %153 = icmp sgt i8 %129, 31
  br i1 %153, label %159, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %137, i64 0, i32 32
  %156 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %157 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %156, i64 0, i32 21
  %158 = load void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %157, align 8
  tail call void %158(%"struct.libgav1::ReferenceInfo"* dereferenceable(128) %155, i32 %132, i32 0, i32 %9, i32 %14, i32 %15, i32 %20, %"struct.libgav1::TemporalMotionField"* %7) #5
  br label %159

159:                                              ; preds = %152, %154
  %160 = icmp sgt i32 %127, 0
  br i1 %160, label %161, label %196

161:                                              ; preds = %147, %131, %142, %126, %159
  %162 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 32, i32 1, i32 0, i64 2
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = sub nsw i32 0, %164
  %166 = icmp slt i32 %165, 0
  %167 = select i1 %166, i32 %164, i32 %165
  %168 = icmp slt i32 %167, 32
  br i1 %168, label %169, label %196

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %0, i64 0, i32 52, i64 1
  %171 = load i8, i8* %170, align 1
  %172 = sext i8 %171 to i64
  %173 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %2, i64 0, i32 0, i64 %172, i32 0
  %174 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %173, align 8
  %175 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %174, i64 0, i32 21
  %176 = load i32, i32* %175, align 4
  %177 = load i32, i32* %10, align 4
  %178 = icmp eq i32 %176, %177
  br i1 %178, label %179, label %196

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %174, i64 0, i32 20
  %181 = load i32, i32* %180, align 8
  %182 = load i32, i32* %16, align 8
  %183 = icmp eq i32 %181, %182
  br i1 %183, label %184, label %196

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %174, i64 0, i32 12
  %186 = load i8, i8* %185, align 1
  %187 = and i8 %186, -3
  %188 = icmp eq i8 %187, 0
  %189 = icmp slt i8 %163, -31
  %190 = or i1 %189, %188
  br i1 %190, label %196, label %191

191:                                              ; preds = %184
  %192 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %174, i64 0, i32 32
  %193 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #5
  %194 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %193, i64 0, i32 21
  %195 = load void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)** %194, align 8
  tail call void %195(%"struct.libgav1::ReferenceInfo"* dereferenceable(128) %192, i32 %165, i32 -1, i32 %9, i32 %14, i32 %15, i32 %20, %"struct.libgav1::TemporalMotionField"* %7) #5
  br label %196

196:                                              ; preds = %124, %191, %184, %179, %169, %161, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7libgav112_GLOBAL__N_123AddReferenceMvCandidateERKNS_4Tile5BlockERKNS_15BlockParametersEbiPbS8_Pi(%"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), %"struct.libgav1::BlockParameters"* nocapture readonly dereferenceable(96), i1 zeroext, i32, i8* nocapture, i8* nocapture, i32* nocapture) unnamed_addr #0 {
  %8 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %195, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 14
  %13 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %12, align 8
  br i1 %2, label %29, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %13, i64 0, i32 14, i64 0
  %16 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 6
  %18 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 16
  %19 = bitcast %"union.libgav1::CompoundMotionVector"* %18 to [2 x %"struct.libgav1::MotionVector"]*
  %20 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 9
  %21 = trunc i32 %3 to i16
  %22 = shl i16 %21, 3
  %23 = shl i32 %3, 3
  %24 = or i32 %23, 7
  %25 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 14, i64 0
  %26 = load i8, i8* %25, align 1
  %27 = load i8, i8* %15, align 1
  %28 = icmp eq i8 %26, %27
  br i1 %28, label %131, label %190

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 14, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %13, i64 0, i32 14, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %31, %33
  br i1 %34, label %35, label %195

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 14, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %13, i64 0, i32 14, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %37, %39
  br i1 %40, label %41, label %195

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %0, i64 0, i32 0
  %43 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %42, align 8
  %44 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %43, i64 0, i32 21
  %45 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %44, align 8
  %46 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %13, i64 0, i32 18, i32 0, i32 0, i32 0
  %47 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %46, align 8
  %48 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 16, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = lshr i64 %49, 32
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 6
  %54 = load i8, i8* %53, align 2, !range !2
  %55 = icmp ne i8 %54, 0
  %56 = sext i8 %31 to i64
  %57 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %45, i64 0, i32 14, i32 0, i64 %56, i32 0
  %58 = load i8, i8* %57, align 4
  %59 = icmp ugt i8 %58, 1
  %60 = and i1 %55, %59
  br i1 %60, label %77, label %80

61:                                               ; preds = %115
  %62 = zext i32 %116 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %81 to i64
  %65 = or i64 %63, %64
  br label %66

66:                                               ; preds = %71, %61
  %67 = phi %"union.libgav1::CompoundMotionVector"* [ %126, %61 ], [ %72, %71 ]
  %68 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %67, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %65
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %67, i64 1
  %73 = icmp eq %"union.libgav1::CompoundMotionVector"* %72, %129
  br i1 %73, label %97, label %66

74:                                               ; preds = %66, %115
  %75 = phi %"union.libgav1::CompoundMotionVector"* [ %126, %115 ], [ %67, %66 ]
  %76 = icmp eq %"union.libgav1::CompoundMotionVector"* %75, %129
  br i1 %76, label %97, label %87

77:                                               ; preds = %41
  %78 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %47, i64 0, i32 21, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %77, %41
  %81 = phi i32 [ %79, %77 ], [ %50, %41 ]
  %82 = sext i8 %37 to i64
  %83 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %45, i64 0, i32 14, i32 0, i64 %82, i32 0
  %84 = load i8, i8* %83, align 4
  %85 = icmp ugt i8 %84, 1
  %86 = and i1 %55, %85
  br i1 %86, label %112, label %115

87:                                               ; preds = %74
  %88 = ptrtoint %"union.libgav1::CompoundMotionVector"* %75 to i64
  %89 = ptrtoint %"union.libgav1::CompoundMotionVector"* %126 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %47, i64 0, i32 17, i64 %91
  %93 = load i16, i16* %92, align 2
  %94 = trunc i32 %3 to i16
  %95 = shl i16 %94, 3
  %96 = add i16 %93, %95
  store i16 %96, i16* %92, align 2
  br label %195

97:                                               ; preds = %71, %74
  %98 = icmp sgt i32 %127, 7
  br i1 %98, label %195, label %99

99:                                               ; preds = %97
  %100 = zext i32 %116 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %81 to i64
  %103 = or i64 %101, %102
  %104 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %129, i64 0, i32 0
  store i64 %103, i64* %104, align 8
  %105 = shl i32 %3, 3
  %106 = or i32 %105, 7
  %107 = sub nsw i32 %106, %127
  %108 = trunc i32 %107 to i16
  %109 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %47, i64 0, i32 17, i64 %128
  store i16 %108, i16* %109, align 2
  %110 = load i32, i32* %6, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %6, align 4
  br label %195

112:                                              ; preds = %80
  %113 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %47, i64 0, i32 21, i64 1, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  br label %115

115:                                              ; preds = %112, %80
  %116 = phi i32 [ %114, %112 ], [ %52, %80 ]
  %117 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 9
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = shl i32 1, %119
  %121 = and i32 %120, 49414144
  %122 = icmp ne i32 %121, 0
  %123 = zext i1 %122 to i8
  %124 = load i8, i8* %4, align 1, !range !2
  %125 = or i8 %124, %123
  store i8 %125, i8* %4, align 1
  store i8 1, i8* %5, align 1
  %126 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %47, i64 0, i32 16, i32 0, i64 0
  %127 = load i32, i32* %6, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %47, i64 0, i32 16, i32 0, i64 %128
  %130 = icmp eq i32 %127, 0
  br i1 %130, label %74, label %61

131:                                              ; preds = %14
  %132 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %16, align 8
  %133 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %132, i64 0, i32 21
  %134 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %133, align 8
  %135 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %13, i64 0, i32 18, i32 0, i32 0, i32 0
  %136 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %135, align 8
  %137 = sext i8 %26 to i64
  %138 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %134, i64 0, i32 14, i32 0, i64 %137, i32 0
  %139 = load i8, i8* %138, align 4
  %140 = load i8, i8* %17, align 2, !range !2
  %141 = icmp ne i8 %140, 0
  %142 = icmp ugt i8 %139, 1
  %143 = and i1 %142, %141
  %144 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %136, i64 0, i32 21, i64 0, i32 0, i32 0
  %145 = bitcast %"union.libgav1::CompoundMotionVector"* %18 to i32*
  %146 = select i1 %143, i32* %144, i32* %145
  %147 = load i32, i32* %146, align 4
  %148 = load i8, i8* %20, align 1
  %149 = zext i8 %148 to i32
  %150 = shl i32 1, %149
  %151 = and i32 %150, 49414144
  %152 = icmp ne i32 %151, 0
  %153 = zext i1 %152 to i8
  %154 = load i8, i8* %4, align 1, !range !2
  %155 = or i8 %154, %153
  store i8 %155, i8* %4, align 1
  store i8 1, i8* %5, align 1
  %156 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %136, i64 0, i32 16
  %157 = bitcast %union.anon.81* %156 to %"struct.libgav1::MotionVector"*
  %158 = load i32, i32* %6, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %157, i64 %159
  %161 = icmp eq %"struct.libgav1::MotionVector"* %160, %157
  br i1 %161, label %170, label %162

162:                                              ; preds = %131, %167
  %163 = phi %"struct.libgav1::MotionVector"* [ %168, %167 ], [ %157, %131 ]
  %164 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %163, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, %147
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %163, i64 1
  %169 = icmp eq %"struct.libgav1::MotionVector"* %168, %160
  br i1 %169, label %181, label %162

170:                                              ; preds = %162, %131
  %171 = phi %"struct.libgav1::MotionVector"* [ %157, %131 ], [ %163, %162 ]
  %172 = icmp eq %"struct.libgav1::MotionVector"* %171, %160
  br i1 %172, label %181, label %173

173:                                              ; preds = %170
  %174 = ptrtoint %"struct.libgav1::MotionVector"* %171 to i64
  %175 = ptrtoint %union.anon.81* %156 to i64
  %176 = sub i64 %174, %175
  %177 = ashr exact i64 %176, 2
  %178 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %136, i64 0, i32 17, i64 %177
  %179 = load i16, i16* %178, align 2
  %180 = add i16 %179, %22
  store i16 %180, i16* %178, align 2
  br label %190

181:                                              ; preds = %167, %170
  %182 = icmp sgt i32 %158, 7
  br i1 %182, label %190, label %183

183:                                              ; preds = %181
  %184 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %160, i64 0, i32 0, i32 0
  store i32 %147, i32* %184, align 4
  %185 = sub nsw i32 %24, %158
  %186 = trunc i32 %185 to i16
  %187 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %136, i64 0, i32 17, i64 %159
  store i16 %186, i16* %187, align 2
  %188 = load i32, i32* %6, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %6, align 4
  br label %190

190:                                              ; preds = %183, %181, %173, %14
  %191 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %1, i64 0, i32 14, i64 1
  %192 = load i8, i8* %191, align 1
  %193 = load i8, i8* %15, align 1
  %194 = icmp eq i8 %192, %193
  br i1 %194, label %196, label %195

195:                                              ; preds = %190, %241, %249, %251, %99, %97, %87, %35, %29, %7
  ret void

196:                                              ; preds = %190
  %197 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %12, align 8
  %198 = load %"class.libgav1::Tile"*, %"class.libgav1::Tile"** %16, align 8
  %199 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %198, i64 0, i32 21
  %200 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %199, align 8
  %201 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %197, i64 0, i32 18, i32 0, i32 0, i32 0
  %202 = load %"struct.libgav1::PredictionParameters"*, %"struct.libgav1::PredictionParameters"** %201, align 8
  %203 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %197, i64 0, i32 14, i64 0
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i64
  %206 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %200, i64 0, i32 14, i32 0, i64 %205, i32 0
  %207 = load i8, i8* %206, align 4
  %208 = load i8, i8* %17, align 2, !range !2
  %209 = icmp ne i8 %208, 0
  %210 = icmp ugt i8 %207, 1
  %211 = and i1 %210, %209
  %212 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %202, i64 0, i32 21, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %19, i64 0, i64 1, i32 0, i32 0
  %214 = select i1 %211, i32* %212, i32* %213
  %215 = load i32, i32* %214, align 4
  %216 = load i8, i8* %20, align 1
  %217 = zext i8 %216 to i32
  %218 = shl i32 1, %217
  %219 = and i32 %218, 49414144
  %220 = icmp ne i32 %219, 0
  %221 = zext i1 %220 to i8
  %222 = load i8, i8* %4, align 1, !range !2
  %223 = or i8 %222, %221
  store i8 %223, i8* %4, align 1
  store i8 1, i8* %5, align 1
  %224 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %202, i64 0, i32 16
  %225 = bitcast %union.anon.81* %224 to %"struct.libgav1::MotionVector"*
  %226 = load i32, i32* %6, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %225, i64 %227
  %229 = icmp eq %"struct.libgav1::MotionVector"* %228, %225
  br i1 %229, label %238, label %230

230:                                              ; preds = %196, %235
  %231 = phi %"struct.libgav1::MotionVector"* [ %236, %235 ], [ %225, %196 ]
  %232 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %231, i64 0, i32 0, i32 0
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, %215
  br i1 %234, label %238, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %231, i64 1
  %237 = icmp eq %"struct.libgav1::MotionVector"* %236, %228
  br i1 %237, label %249, label %230

238:                                              ; preds = %230, %196
  %239 = phi %"struct.libgav1::MotionVector"* [ %225, %196 ], [ %231, %230 ]
  %240 = icmp eq %"struct.libgav1::MotionVector"* %239, %228
  br i1 %240, label %249, label %241

241:                                              ; preds = %238
  %242 = ptrtoint %"struct.libgav1::MotionVector"* %239 to i64
  %243 = ptrtoint %union.anon.81* %224 to i64
  %244 = sub i64 %242, %243
  %245 = ashr exact i64 %244, 2
  %246 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %202, i64 0, i32 17, i64 %245
  %247 = load i16, i16* %246, align 2
  %248 = add i16 %247, %22
  store i16 %248, i16* %246, align 2
  br label %195

249:                                              ; preds = %235, %238
  %250 = icmp sgt i32 %226, 7
  br i1 %250, label %195, label %251

251:                                              ; preds = %249
  %252 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %228, i64 0, i32 0, i32 0
  store i32 %215, i32* %252, align 4
  %253 = sub nsw i32 %24, %226
  %254 = trunc i32 %253 to i16
  %255 = getelementptr inbounds %"struct.libgav1::PredictionParameters", %"struct.libgav1::PredictionParameters"* %202, i64 0, i32 17, i64 %227
  store i16 %254, i16* %255, align 2
  %256 = load i32, i32* %6, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %6, align 4
  br label %195
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN7libgav112_GLOBAL__N_129CompareCandidateMotionVectorsERKsS2_(i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2)) #4 {
  %3 = load i16, i16* %0, align 2
  %4 = load i16, i16* %1, align 2
  %5 = icmp sgt i16 %3, %4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__partial_sortIRPFbRKsS2_EPsEEvT0_S7_S7_T_(i16*, i16*, i16*, i1 (i16*, i16*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = ptrtoint i16* %1 to i64
  %9 = ptrtoint i16* %0 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 1
  %12 = icmp sgt i64 %10, 2
  br i1 %12, label %13, label %71

13:                                               ; preds = %4
  %14 = add nsw i64 %11, -2
  %15 = sdiv i64 %14, 2
  %16 = icmp eq i64 %10, 3
  %17 = bitcast i16* %7 to i8*
  br label %18

18:                                               ; preds = %68, %13
  %19 = phi i64 [ %69, %68 ], [ %15, %13 ]
  %20 = getelementptr inbounds i16, i16* %0, i64 %19
  %21 = shl nuw i64 %19, 1
  %22 = ashr exact i64 %21, 1
  %23 = icmp slt i64 %15, %22
  %24 = or i1 %16, %23
  br i1 %24, label %68, label %25

25:                                               ; preds = %18
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds i16, i16* %0, i64 %26
  %28 = add nsw i64 %21, 2
  %29 = icmp slt i64 %28, %11
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %32 = getelementptr inbounds i16, i16* %27, i64 1
  %33 = call zeroext i1 %31(i16* dereferenceable(2) %27, i16* dereferenceable(2) %32) #5
  %34 = select i1 %33, i64 %28, i64 %26
  %35 = select i1 %33, i16* %32, i16* %27
  br label %36

36:                                               ; preds = %30, %25
  %37 = phi i64 [ %26, %25 ], [ %34, %30 ]
  %38 = phi i16* [ %27, %25 ], [ %35, %30 ]
  %39 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %40 = call zeroext i1 %39(i16* dereferenceable(2) %38, i16* dereferenceable(2) %20) #5
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17) #5
  %42 = load i16, i16* %20, align 2
  store i16 %42, i16* %7, align 2
  br label %43

43:                                               ; preds = %61, %41
  %44 = phi i16* [ %20, %41 ], [ %46, %61 ]
  %45 = phi i64 [ %37, %41 ], [ %62, %61 ]
  %46 = phi i16* [ %38, %41 ], [ %63, %61 ]
  %47 = load i16, i16* %46, align 2
  store i16 %47, i16* %44, align 2
  %48 = icmp slt i64 %15, %45
  br i1 %48, label %66, label %49

49:                                               ; preds = %43
  %50 = shl nsw i64 %45, 1
  %51 = or i64 %50, 1
  %52 = getelementptr inbounds i16, i16* %0, i64 %51
  %53 = add nsw i64 %51, 1
  %54 = icmp slt i64 %53, %11
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %57 = getelementptr inbounds i16, i16* %52, i64 1
  %58 = call zeroext i1 %56(i16* dereferenceable(2) %52, i16* dereferenceable(2) %57) #5
  %59 = select i1 %58, i64 %53, i64 %51
  %60 = select i1 %58, i16* %57, i16* %52
  br label %61

61:                                               ; preds = %55, %49
  %62 = phi i64 [ %51, %49 ], [ %59, %55 ]
  %63 = phi i16* [ %52, %49 ], [ %60, %55 ]
  %64 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %65 = call zeroext i1 %64(i16* dereferenceable(2) %63, i16* nonnull dereferenceable(2) %7) #5
  br i1 %65, label %66, label %43

66:                                               ; preds = %61, %43
  %67 = load i16, i16* %7, align 2
  store i16 %67, i16* %46, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #5
  br label %68

68:                                               ; preds = %18, %36, %66
  %69 = add nsw i64 %19, -1
  %70 = icmp sgt i64 %19, 0
  br i1 %70, label %18, label %71

71:                                               ; preds = %68, %4
  %72 = icmp eq i16* %1, %2
  br i1 %72, label %83, label %73

73:                                               ; preds = %71
  %74 = icmp slt i64 %10, 4
  %75 = add nsw i64 %11, -2
  %76 = sdiv i64 %75, 2
  %77 = icmp slt i64 %75, -1
  %78 = getelementptr inbounds i16, i16* %0, i64 1
  %79 = icmp sgt i64 %10, 4
  %80 = getelementptr inbounds i16, i16* %0, i64 2
  %81 = bitcast i16* %5 to i8*
  %82 = or i1 %74, %77
  br label %141

83:                                               ; preds = %186, %71
  br i1 %12, label %84, label %140

84:                                               ; preds = %83
  %85 = lshr exact i64 %10, 1
  %86 = getelementptr inbounds i16, i16* %0, i64 1
  %87 = getelementptr inbounds i16, i16* %0, i64 2
  %88 = bitcast i16* %6 to i8*
  br label %89

89:                                               ; preds = %138, %84
  %90 = phi i64 [ %85, %84 ], [ %95, %138 ]
  %91 = phi i16* [ %1, %84 ], [ %92, %138 ]
  %92 = getelementptr inbounds i16, i16* %91, i64 -1
  %93 = load i16, i16* %0, align 2
  %94 = load i16, i16* %92, align 2
  store i16 %94, i16* %0, align 2
  store i16 %93, i16* %92, align 2
  %95 = add nsw i64 %90, -1
  %96 = icmp eq i64 %90, 2
  br i1 %96, label %140, label %97

97:                                               ; preds = %89
  %98 = add nsw i64 %90, -3
  %99 = sdiv i64 %98, 2
  %100 = icmp sgt i64 %95, 2
  br i1 %100, label %101, label %106

101:                                              ; preds = %97
  %102 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %103 = call zeroext i1 %102(i16* dereferenceable(2) %86, i16* dereferenceable(2) %87) #5
  %104 = select i1 %103, i64 2, i64 1
  %105 = select i1 %103, i16* %87, i16* %86
  br label %106

106:                                              ; preds = %101, %97
  %107 = phi i64 [ 1, %97 ], [ %104, %101 ]
  %108 = phi i16* [ %86, %97 ], [ %105, %101 ]
  %109 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %110 = call zeroext i1 %109(i16* dereferenceable(2) %108, i16* dereferenceable(2) %0) #5
  br i1 %110, label %138, label %111

111:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %88) #5
  %112 = load i16, i16* %0, align 2
  store i16 %112, i16* %6, align 2
  br label %113

113:                                              ; preds = %131, %111
  %114 = phi i16* [ %0, %111 ], [ %116, %131 ]
  %115 = phi i64 [ %107, %111 ], [ %132, %131 ]
  %116 = phi i16* [ %108, %111 ], [ %133, %131 ]
  %117 = load i16, i16* %116, align 2
  store i16 %117, i16* %114, align 2
  %118 = icmp slt i64 %99, %115
  br i1 %118, label %136, label %119

119:                                              ; preds = %113
  %120 = shl nsw i64 %115, 1
  %121 = or i64 %120, 1
  %122 = getelementptr inbounds i16, i16* %0, i64 %121
  %123 = add nsw i64 %121, 1
  %124 = icmp slt i64 %123, %95
  br i1 %124, label %125, label %131

125:                                              ; preds = %119
  %126 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %127 = getelementptr inbounds i16, i16* %122, i64 1
  %128 = call zeroext i1 %126(i16* dereferenceable(2) %122, i16* dereferenceable(2) %127) #5
  %129 = select i1 %128, i64 %123, i64 %121
  %130 = select i1 %128, i16* %127, i16* %122
  br label %131

131:                                              ; preds = %125, %119
  %132 = phi i64 [ %121, %119 ], [ %129, %125 ]
  %133 = phi i16* [ %122, %119 ], [ %130, %125 ]
  %134 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %135 = call zeroext i1 %134(i16* dereferenceable(2) %133, i16* nonnull dereferenceable(2) %6) #5
  br i1 %135, label %136, label %113

136:                                              ; preds = %131, %113
  %137 = load i16, i16* %6, align 2
  store i16 %137, i16* %116, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %88) #5
  br label %138

138:                                              ; preds = %136, %106
  %139 = icmp sgt i64 %95, 1
  br i1 %139, label %89, label %140

140:                                              ; preds = %89, %138, %83
  ret void

141:                                              ; preds = %73, %186
  %142 = phi i16* [ %1, %73 ], [ %187, %186 ]
  %143 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %144 = call zeroext i1 %143(i16* dereferenceable(2) %142, i16* dereferenceable(2) %0) #5
  br i1 %144, label %145, label %186

145:                                              ; preds = %141
  %146 = load i16, i16* %142, align 2
  %147 = load i16, i16* %0, align 2
  store i16 %147, i16* %142, align 2
  store i16 %146, i16* %0, align 2
  br i1 %82, label %186, label %148

148:                                              ; preds = %145
  br i1 %79, label %149, label %154

149:                                              ; preds = %148
  %150 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %151 = call zeroext i1 %150(i16* dereferenceable(2) %78, i16* dereferenceable(2) %80) #5
  %152 = select i1 %151, i64 2, i64 1
  %153 = select i1 %151, i16* %80, i16* %78
  br label %154

154:                                              ; preds = %149, %148
  %155 = phi i64 [ 1, %148 ], [ %152, %149 ]
  %156 = phi i16* [ %78, %148 ], [ %153, %149 ]
  %157 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %158 = call zeroext i1 %157(i16* dereferenceable(2) %156, i16* dereferenceable(2) %0) #5
  br i1 %158, label %186, label %159

159:                                              ; preds = %154
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %81) #5
  %160 = load i16, i16* %0, align 2
  store i16 %160, i16* %5, align 2
  br label %161

161:                                              ; preds = %179, %159
  %162 = phi i16* [ %0, %159 ], [ %164, %179 ]
  %163 = phi i64 [ %155, %159 ], [ %180, %179 ]
  %164 = phi i16* [ %156, %159 ], [ %181, %179 ]
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %162, align 2
  %166 = icmp slt i64 %76, %163
  br i1 %166, label %184, label %167

167:                                              ; preds = %161
  %168 = shl nsw i64 %163, 1
  %169 = or i64 %168, 1
  %170 = getelementptr inbounds i16, i16* %0, i64 %169
  %171 = add nsw i64 %169, 1
  %172 = icmp slt i64 %171, %11
  br i1 %172, label %173, label %179

173:                                              ; preds = %167
  %174 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %175 = getelementptr inbounds i16, i16* %170, i64 1
  %176 = call zeroext i1 %174(i16* dereferenceable(2) %170, i16* dereferenceable(2) %175) #5
  %177 = select i1 %176, i64 %171, i64 %169
  %178 = select i1 %176, i16* %175, i16* %170
  br label %179

179:                                              ; preds = %173, %167
  %180 = phi i64 [ %169, %167 ], [ %177, %173 ]
  %181 = phi i16* [ %170, %167 ], [ %178, %173 ]
  %182 = load i1 (i16*, i16*)*, i1 (i16*, i16*)** %3, align 8
  %183 = call zeroext i1 %182(i16* dereferenceable(2) %181, i16* nonnull dereferenceable(2) %5) #5
  br i1 %183, label %184, label %161

184:                                              ; preds = %179, %161
  %185 = load i16, i16* %5, align 2
  store i16 %185, i16* %164, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %81) #5
  br label %186

186:                                              ; preds = %145, %184, %154, %141
  %187 = getelementptr inbounds i16, i16* %142, i64 1
  %188 = icmp eq i16* %187, %2
  br i1 %188, label %83, label %141
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = !{!12, !7}
!12 = distinct !{!12, !8}
!13 = !{!12}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !4}
!18 = distinct !{!18, !4}
!19 = distinct !{!19, !15}
!20 = distinct !{!20, !21, !15}
!21 = !{!"llvm.loop.unroll.runtime.disable"}
