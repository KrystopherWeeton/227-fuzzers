; ModuleID = '../../third_party/skia/modules/skottie/src/layers/SolidLayer.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/SolidLayer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.29 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.33 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp.34 = type { %"class.sksg::PaintNode"* }
%"class.sksg::PaintNode" = type { %"class.sksg::Node.base", float, float, float, i8, i32, i8, i8, i32 }
%class.sk_sp.31 = type { %"class.sksg::Color"* }
%"class.sksg::Color" = type { %"class.sksg::PaintNode", i32, [4 x i8] }
%"class.skjson::StringValue" = type { %"class.skjson::Value" }
%"class.sksg::Rect" = type <{ %"class.sksg::GeometryNode.base", [2 x i8], %struct.SkRect, %"struct.sksg::Rect::AttrContainer", [3 x i8] }>
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"struct.sksg::Rect::AttrContainer" = type { i8 }
%"class.sksg::Draw" = type { %"class.sksg::RenderNode.base", %class.sk_sp.33, %class.sk_sp.34 }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@.str = private unnamed_addr constant [3 x i8] c"sw\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"sc\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"Could not parse solid layer.\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal16AnimationBuilder16attachSolidLayerERKN6skjson11ObjectValueEPNS1_9LayerInfoE(%class.sk_sp.29* noalias nocapture sret, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"* dereferenceable(8), %"struct.skottie::internal::AnimationBuilder::LayerInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.33, align 8
  %6 = alloca %class.sk_sp.34, align 8
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca %class.sk_sp.31, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #4
  %14 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #4
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %15 = call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %13, float* nonnull %8) #4
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = load float, float* %8, align 4
  br label %20

18:                                               ; preds = %4
  %19 = bitcast float* %8 to i32*
  store i32 0, i32* %19, align 4
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi float [ %17, %16 ], [ 0.000000e+00, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  %22 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #4
  %23 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #4
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %24 = call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %22, float* nonnull %7) #4
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = load float, float* %7, align 4
  br label %29

27:                                               ; preds = %20
  %28 = bitcast float* %7 to i32*
  store i32 0, i32* %28, align 4
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi float [ %26, %25 ], [ 0.000000e+00, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #4
  %31 = insertelement <2 x float> undef, float %21, i32 0
  %32 = insertelement <2 x float> %31, float %30, i32 1
  %33 = bitcast %"struct.skottie::internal::AnimationBuilder::LayerInfo"* %3 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  %34 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #4
  %35 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %34, i64 0, i32 0, i64 0
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 7
  switch i8 %37, label %40 [
    i8 5, label %38
    i8 0, label %38
  ]

38:                                               ; preds = %29, %29
  %39 = bitcast %"class.skjson::Value"* %34 to %"class.skjson::StringValue"*
  br label %40

40:                                               ; preds = %29, %38
  %41 = phi %"class.skjson::StringValue"* [ %39, %38 ], [ null, %29 ]
  %42 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #4
  store i32 -1431655766, i32* %9, align 4
  %43 = getelementptr inbounds %"struct.skottie::internal::AnimationBuilder::LayerInfo", %"struct.skottie::internal::AnimationBuilder::LayerInfo"* %3, i64 0, i32 0, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp ugt float %44, 0.000000e+00
  br i1 %45, label %46, label %85

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.skottie::internal::AnimationBuilder::LayerInfo", %"struct.skottie::internal::AnimationBuilder::LayerInfo"* %3, i64 0, i32 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fcmp ugt float %48, 0.000000e+00
  %50 = icmp ne %"class.skjson::StringValue"* %41, null
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %85

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.skjson::StringValue", %"class.skjson::StringValue"* %41, i64 0, i32 0, i32 0, i64 0
  %54 = load i8, i8* %53, align 8
  %55 = and i8 %54, 7
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.skjson::StringValue", %"class.skjson::StringValue"* %41, i64 0, i32 0, i32 0, i64 1
  br label %66

59:                                               ; preds = %52
  %60 = bitcast %"class.skjson::StringValue"* %41 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, -8
  %63 = inttoptr i64 %62 to i64*
  %64 = getelementptr inbounds i64, i64* %63, i64 1
  %65 = bitcast i64* %64 to i8*
  br label %66

66:                                               ; preds = %57, %59
  %67 = phi i8* [ %58, %57 ], [ %65, %59 ]
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 35
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  br i1 %56, label %71, label %73

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.skjson::StringValue", %"class.skjson::StringValue"* %41, i64 0, i32 0, i32 0, i64 1
  br label %80

73:                                               ; preds = %70
  %74 = bitcast %"class.skjson::StringValue"* %41 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, -8
  %77 = inttoptr i64 %76 to i64*
  %78 = getelementptr inbounds i64, i64* %77, i64 1
  %79 = bitcast i64* %78 to i8*
  br label %80

80:                                               ; preds = %71, %73
  %81 = phi i8* [ %72, %71 ], [ %79, %73 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = call i8* @_ZN7SkParse7FindHexEPKcPj(i8* %82, i32* nonnull %9) #4
  %84 = icmp eq i8* %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %40, %80, %66, %46
  %86 = getelementptr inbounds %"class.skjson::ObjectValue", %"class.skjson::ObjectValue"* %2, i64 0, i32 0, i32 0
  call void (%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"* %1, i32 1, %"class.skjson::Value"* %86, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0)) #4
  %87 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %0, i64 0, i32 0
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %87, align 8
  br label %176

88:                                               ; preds = %80
  %89 = load i32, i32* %9, align 4
  %90 = or i32 %89, -16777216
  %91 = bitcast %class.sk_sp.31* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #4
  %92 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %10, i64 0, i32 0
  store %"class.sksg::Color"* inttoptr (i64 -6148914691236517206 to %"class.sksg::Color"*), %"class.sksg::Color"** %92, align 8
  call void @_ZN4sksg5Color4MakeEj(%class.sk_sp.31* nonnull sret %10, i32 %90) #4
  %93 = load %"class.sksg::Color"*, %"class.sksg::Color"** %92, align 8
  %94 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %93, i64 0, i32 0, i32 4
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 1
  br i1 %96, label %99, label %97

97:                                               ; preds = %88
  store i8 1, i8* %94, align 8
  %98 = bitcast %"class.sksg::Color"* %93 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %98, i1 zeroext true) #4
  br label %99

99:                                               ; preds = %97, %88
  %100 = call zeroext i1 @_ZNK7skottie8internal16AnimationBuilder21dispatchColorPropertyERK5sk_spIN4sksg5ColorEE(%"class.skottie::internal::AnimationBuilder"* %1, %class.sk_sp.31* nonnull dereferenceable(8) %10) #4
  %101 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #4
  %102 = bitcast %"struct.skottie::internal::AnimationBuilder::LayerInfo"* %3 to i64*
  %103 = load i64, i64* %102, align 4
  %104 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %104, align 8
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %106 = bitcast <2 x float>* %105 to i64*
  store i64 %103, i64* %106, align 8
  %107 = call i8* @_Znwm(i64 64) #5, !noalias !3
  %108 = bitcast i8* %107 to %"class.sksg::Rect"*
  call void @_ZN4sksg4RectC1ERK6SkRect(%"class.sksg::Rect"* nonnull %108, %struct.SkRect* nonnull dereferenceable(16) %12) #4, !noalias !3
  %109 = load %"class.sksg::Color"*, %"class.sksg::Color"** %92, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %92, align 8
  %110 = bitcast %class.sk_sp.33* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = bitcast %class.sk_sp.34* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  %112 = icmp eq %"class.sksg::Color"* %109, null
  br i1 %112, label %148, label %113

113:                                              ; preds = %99
  %114 = ptrtoint i8* %107 to i64
  %115 = ptrtoint %"class.sksg::Color"* %109 to i64
  %116 = call i8* @_Znwm(i64 64) #5, !noalias !6
  %117 = bitcast i8* %116 to %"class.sksg::Draw"*
  %118 = bitcast %class.sk_sp.33* %5 to i64*
  store i64 %114, i64* %118, align 8, !noalias !6
  %119 = bitcast %class.sk_sp.34* %6 to i64*
  store i64 %115, i64* %119, align 8, !noalias !6
  call void @_ZN4sksg4DrawC1E5sk_spINS_12GeometryNodeEES1_INS_9PaintNodeEE(%"class.sksg::Draw"* nonnull %117, %class.sk_sp.33* nonnull %5, %class.sk_sp.34* nonnull %6) #4, !noalias !6
  %120 = ptrtoint i8* %116 to i64
  %121 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %6, i64 0, i32 0
  %122 = load %"class.sksg::PaintNode"*, %"class.sksg::PaintNode"** %121, align 8, !noalias !6
  %123 = icmp eq %"class.sksg::PaintNode"* %122, null
  br i1 %123, label %134, label %124

124:                                              ; preds = %113
  %125 = getelementptr inbounds %"class.sksg::PaintNode", %"class.sksg::PaintNode"* %122, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel, !noalias !6
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = bitcast %"class.sksg::PaintNode"* %122 to %class.SkRefCntBase*
  %130 = bitcast %"class.sksg::PaintNode"* %122 to void (%class.SkRefCntBase*)***
  %131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %130, align 8, !noalias !6
  %132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, i64 2
  %133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, align 8, !noalias !6
  call void %133(%class.SkRefCntBase* nonnull %129) #4, !noalias !6
  br label %134

134:                                              ; preds = %128, %124, %113
  %135 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %5, i64 0, i32 0
  %136 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %135, align 8, !noalias !6
  %137 = icmp eq %"class.sksg::GeometryNode"* %136, null
  br i1 %137, label %154, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %136, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel, !noalias !6
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = bitcast %"class.sksg::GeometryNode"* %136 to %class.SkRefCntBase*
  %144 = bitcast %"class.sksg::GeometryNode"* %136 to void (%class.SkRefCntBase*)***
  %145 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %144, align 8, !noalias !6
  %146 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, i64 2
  %147 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, align 8, !noalias !6
  call void %147(%class.SkRefCntBase* nonnull %143) #4, !noalias !6
  br label %154

148:                                              ; preds = %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  %149 = bitcast %class.sk_sp.29* %0 to i64*
  store i64 0, i64* %149, align 8
  %150 = getelementptr inbounds i8, i8* %107, i64 8
  %151 = bitcast i8* %150 to i32*
  %152 = atomicrmw add i32* %151, i32 -1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %156, label %162

154:                                              ; preds = %134, %142, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  %155 = bitcast %class.sk_sp.29* %0 to i64*
  store i64 %120, i64* %155, align 8
  br label %162

156:                                              ; preds = %148
  %157 = bitcast i8* %107 to %class.SkRefCntBase*
  %158 = bitcast i8* %107 to void (%class.SkRefCntBase*)***
  %159 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %158, align 8
  %160 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %159, i64 2
  %161 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %160, align 8
  call void %161(%class.SkRefCntBase* nonnull %157) #4
  br label %162

162:                                              ; preds = %154, %156, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #4
  %163 = load %"class.sksg::Color"*, %"class.sksg::Color"** %92, align 8
  %164 = icmp eq %"class.sksg::Color"* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = bitcast %"class.sksg::Color"* %163 to %class.SkRefCntBase*
  %171 = bitcast %"class.sksg::Color"* %163 to void (%class.SkRefCntBase*)***
  %172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, i64 2
  %174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, align 8
  call void %174(%class.SkRefCntBase* nonnull %170) #4
  br label %175

175:                                              ; preds = %162, %165, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #4
  br label %176

176:                                              ; preds = %175, %85
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZN7SkParse7FindHexEPKcPj(i8*, i32*) local_unnamed_addr #2

declare void @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) local_unnamed_addr #2

declare void @_ZN4sksg5Color4MakeEj(%class.sk_sp.31* sret, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK7skottie8internal16AnimationBuilder21dispatchColorPropertyERK5sk_spIN4sksg5ColorEE(%"class.skottie::internal::AnimationBuilder"*, %class.sk_sp.31* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4sksg4DrawC1E5sk_spINS_12GeometryNodeEES1_INS_9PaintNodeEE(%"class.sksg::Draw"*, %class.sk_sp.33*, %class.sk_sp.34*) unnamed_addr #2

declare void @_ZN4sksg4RectC1ERK6SkRect(%"class.sksg::Rect"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), float*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4sksg4Rect4MakeERK6SkRect: argument 0"}
!5 = distinct !{!5, !"_ZN4sksg4Rect4MakeERK6SkRect"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4sksg4Draw4MakeE5sk_spINS_12GeometryNodeEES1_INS_9PaintNodeEE: argument 0"}
!8 = distinct !{!8, !"_ZN4sksg4Draw4MakeE5sk_spINS_12GeometryNodeEES1_INS_9PaintNodeEE"}
