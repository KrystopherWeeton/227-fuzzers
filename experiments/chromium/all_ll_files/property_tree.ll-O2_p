; ModuleID = '../../cc/trees/property_tree.cc'
source_filename = "../../cc/trees/property_tree.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%union.anon.1370 = type { %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair" }
%"struct.cc::TransformNode" = type { i32, i32, i32, %"struct.cc::ElementId", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.gfx::Vector2dF", %"class.gfx::Transform", i32, i32, i24, %"class.gfx::ScrollOffset", %"class.gfx::Vector2dF", float, %"struct.cc::ElementId" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::TransformNode"* }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map", %"class.base::flat_map", %"class.base::flat_map", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type <{ %"struct.cc::ElementId", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector.22" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.17" }
%"struct.cc::TransformCachedNodeData" = type { %"class.gfx::Transform", %"class.gfx::Transform", i8, [3 x i8] }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.24" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.29", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.84" }
%"class.cc::PropertyTree.29" = type { i32 (...)**, %"class.std::__1::vector.30", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.61" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.48", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.43" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.36", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.35, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.35 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.38" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.53" }
%"class.base::internal::flat_tree.53" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { i32*, i32*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i32* }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.89" }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.999", %class.scoped_refptr.1000, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.1006, %"class.std::__1::vector.1010", %"class.std::__1::unordered_map.1059", %"class.base::internal::flat_tree.1083", %"class.std::__1::unordered_map.1091", %"class.std::__1::unordered_map.1115", %"class.std::__1::unordered_map.1139", %"class.std::__1::unordered_map.1139", %"class.base::flat_map.1163", %"class.std::__1::vector.1173", %"class.base::internal::flat_tree.1262", %"class.base::internal::flat_tree.789", %"class.std::__1::vector.1263", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.307", %"class.std::__1::vector.307", %"class.std::__1::vector.1270", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1277, %class.scoped_refptr.1277, %"class.std::__1::unique_ptr.1282", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.824", %"class.std::__1::vector.947", %"class.std::__1::unique_ptr.1288", %"class.std::__1::vector.1294" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.250", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.295", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.301", %"class.gfx::Vector2dF", %"class.std::__1::vector.307", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.597", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.654", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", %"class.std::__1::set.672", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.682", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.723", %"class.base::RepeatingCallback.519", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.729", i8, i8, i8, i32, %"class.std::__1::unique_ptr.739", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.745", %"class.std::__1::vector.751", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.771", %"class.std::__1::unique_ptr.783", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.789", %"class.absl::optional.802", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.275", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.877", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.955", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.54", %"class.base::WeakPtrFactory.998" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.181, %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.182" }>
%"class.base::RefCountedThreadSafe.182" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.185 }
%union.anon.185 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map.201", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map.201" = type { %"class.base::internal::flat_tree.202" }
%"class.base::internal::flat_tree.202" = type { %"class.std::__1::vector.203" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.211" }
%"class.std::__1::__hash_table.211" = type <{ %"class.std::__1::unique_ptr.212", %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.230", [4 x i8] }>
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214", %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.215"** }
%"struct.std::__1::__hash_node_base.215" = type { %"struct.std::__1::__hash_node_base.215"* }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.std::__1::__bucket_list_deallocator.217" }
%"class.std::__1::__bucket_list_deallocator.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::__hash_node_base.215" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.241, %class.scoped_refptr.242, %class.scoped_refptr.181, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.243", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.241 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.242 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.161" }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i8 }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr.181, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.275", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.283" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.265"*, i64 }
%"class.std::__1::unique_ptr.265" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.266" }
%"class.std::__1::__tree.266" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.283" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.290" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.290" = type { %"class.base::internal::VectorBuffer.291", i64, i64 }
%"class.base::internal::VectorBuffer.291" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.315", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.321", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.546", %"class.std::__1::vector.408", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.584", %"class.base::WeakPtrFactory.584" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.321" = type { %"class.std::__1::__hash_table.322" }
%"class.std::__1::__hash_table.322" = type <{ %"class.std::__1::unique_ptr.323", %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.338", %"class.std::__1::__compressed_pair.343", [4 x i8] }>
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325", %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base.326"** }
%"struct.std::__1::__hash_node_base.326" = type { %"struct.std::__1::__hash_node_base.326"* }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::__bucket_list_deallocator.328" }
%"class.std::__1::__bucket_list_deallocator.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.326" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.348, %"class.base::WeakPtr.349", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.350", %"class.base::flat_map.385", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.395", %"class.std::__1::map.395", i8, %"class.std::__1::vector.404", %"class.base::WeakPtrFactory.420" }
%class.scoped_refptr.348 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr.349" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.380" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.370", %"class.absl::optional.375", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.352, %class.sk_sp.354, %"class.gfx::Rect", i32, %class.sk_sp.359, %class.sk_sp.367, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.352, %class.scoped_refptr.368 }
%class.sk_sp.354 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.355", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { i8* }
%class.sk_sp.359 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.360" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.353, i32, i32 }
%class.sk_sp.353 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.161" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.362" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.367 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.352 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.368 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.369", [4 x i8] }>
%"class.base::RefCountedThreadSafe.369" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.370" = type { %"class.absl::optional_internal::optional_data.371" }
%"class.absl::optional_internal::optional_data.371" = type { %"class.absl::optional_internal::optional_data_base.372" }
%"class.absl::optional_internal::optional_data_base.372" = type { %"class.absl::optional_internal::optional_data_dtor_base.373" }
%"class.absl::optional_internal::optional_data_dtor_base.373" = type { i8, %union.anon.374 }
%union.anon.374 = type { i64 }
%"class.absl::optional.375" = type { %"class.absl::optional_internal::optional_data.376" }
%"class.absl::optional_internal::optional_data.376" = type { %"class.absl::optional_internal::optional_data_base.377" }
%"class.absl::optional_internal::optional_data_base.377" = type { %"class.absl::optional_internal::optional_data_dtor_base.378" }
%"class.absl::optional_internal::optional_data_dtor_base.378" = type { i8, %union.anon.379 }
%union.anon.379 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.385" = type { %"class.base::internal::flat_tree.386" }
%"class.base::internal::flat_tree.386" = type { %"class.std::__1::vector.387" }
%"class.std::__1::vector.387" = type { %"class.std::__1::__vector_base.388" }
%"class.std::__1::__vector_base.388" = type { %"struct.std::__1::pair.389"*, %"struct.std::__1::pair.389"*, %"class.std::__1::__compressed_pair.390" }
%"struct.std::__1::pair.389" = type opaque
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::pair.389"* }
%"class.std::__1::map.395" = type { %"class.std::__1::__tree.396" }
%"class.std::__1::__tree.396" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.415" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.406, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.278 }
%class.scoped_refptr.278 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.279", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.279" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.406 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.408", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.407", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.407" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.420" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.421", i8, %class.scoped_refptr.348, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.431" }
%"class.base::flat_map.421" = type { %"class.base::internal::flat_tree.422" }
%"class.base::internal::flat_tree.422" = type { %"class.std::__1::vector.423" }
%"class.std::__1::vector.423" = type { %"class.std::__1::__vector_base.424" }
%"class.std::__1::__vector_base.424" = type { %"struct.std::__1::pair.425"*, %"struct.std::__1::pair.425"*, %"class.std::__1::__compressed_pair.426" }
%"struct.std::__1::pair.425" = type { i32, %"class.std::__1::unique_ptr.1431" }
%"class.std::__1::unique_ptr.1431" = type { %"class.std::__1::__compressed_pair.1432" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.1433" }
%"struct.std::__1::__compressed_pair_elem.1433" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::pair.425"* }
%"class.base::WeakPtrFactory.431" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.432", %"class.base::internal::flat_tree.432", %"class.std::__1::vector.433", i32, %"class.absl::optional.440", %"class.std::__1::unordered_map.445", %"class.std::__1::unordered_map.469", %"class.base::flat_map.493", %"class.base::WeakPtrFactory.503" }
%"class.base::internal::flat_tree.432" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.433" = type { %"class.std::__1::__vector_base.434" }
%"class.std::__1::__vector_base.434" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.435" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.440" = type { %"class.absl::optional_internal::optional_data.441" }
%"class.absl::optional_internal::optional_data.441" = type { %"class.absl::optional_internal::optional_data_base.442" }
%"class.absl::optional_internal::optional_data_base.442" = type { %"class.absl::optional_internal::optional_data_dtor_base.443" }
%"class.absl::optional_internal::optional_data_dtor_base.443" = type { i8, %union.anon.444 }
%union.anon.444 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.445" = type { %"class.std::__1::__hash_table.446" }
%"class.std::__1::__hash_table.446" = type <{ %"class.std::__1::unique_ptr.447", %"class.std::__1::__compressed_pair.457", %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.465", [4 x i8] }>
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449", %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.450"** }
%"struct.std::__1::__hash_node_base.450" = type { %"struct.std::__1::__hash_node_base.450"* }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.std::__1::__bucket_list_deallocator.452" }
%"class.std::__1::__bucket_list_deallocator.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::__hash_node_base.450" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.469" = type { %"class.std::__1::__hash_table.470" }
%"class.std::__1::__hash_table.470" = type <{ %"class.std::__1::unique_ptr.471", %"class.std::__1::__compressed_pair.481", %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.489", [4 x i8] }>
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473", %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"struct.std::__1::__hash_node_base.474"** }
%"struct.std::__1::__hash_node_base.474" = type { %"struct.std::__1::__hash_node_base.474"* }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.std::__1::__bucket_list_deallocator.476" }
%"class.std::__1::__bucket_list_deallocator.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.std::__1::__hash_node_base.474" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.base::flat_map.493" = type { %"class.base::internal::flat_tree.494" }
%"class.base::internal::flat_tree.494" = type { %"class.std::__1::vector.495" }
%"class.std::__1::vector.495" = type { %"class.std::__1::__vector_base.496" }
%"class.std::__1::__vector_base.496" = type { %"struct.std::__1::pair.497"*, %"struct.std::__1::pair.497"*, %"class.std::__1::__compressed_pair.498" }
%"struct.std::__1::pair.497" = type { i32, i32 }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::pair.497"* }
%"class.base::WeakPtrFactory.503" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.504", %"class.std::__1::vector.512" }
%"class.std::__1::vector.504" = type { %"class.std::__1::__vector_base.505" }
%"class.std::__1::__vector_base.505" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.507" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.506, i16, i16, i32 }
%class.scoped_refptr.506 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.514" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.519", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.520" }
%"class.base::WeakPtrFactory.520" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.521" }
%"class.std::__1::__hash_table.521" = type <{ %"class.std::__1::unique_ptr.522", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.541", [4 x i8] }>
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524", %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.std::__1::__hash_node_base.525"** }
%"struct.std::__1::__hash_node_base.525" = type { %"struct.std::__1::__hash_node_base.525"* }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.std::__1::__bucket_list_deallocator.527" }
%"class.std::__1::__bucket_list_deallocator.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.std::__1::__hash_node_base.525" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.546" = type { %"class.std::__1::__hash_table.547" }
%"class.std::__1::__hash_table.547" = type <{ %"class.std::__1::unique_ptr.548", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.566", [4 x i8] }>
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550", %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::__hash_node_base.551"** }
%"struct.std::__1::__hash_node_base.551" = type { %"struct.std::__1::__hash_node_base.551"* }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.std::__1::__bucket_list_deallocator.553" }
%"class.std::__1::__bucket_list_deallocator.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.551" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %class.scoped_refptr.406*, %class.scoped_refptr.406*, %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %class.scoped_refptr.406* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.570" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.576", %"class.base::WeakPtrFactory.577" }
%"class.base::OnceCallback.576" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.577" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.578, i8, [7 x i8] }>
%class.scoped_refptr.578 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.579", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.579" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.580" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.base::WeakPtrFactory.584" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.588", %"class.absl::optional.588", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.588" = type { %"class.absl::optional_internal::optional_data.589" }
%"class.absl::optional_internal::optional_data.589" = type { %"class.absl::optional_internal::optional_data_base.590" }
%"class.absl::optional_internal::optional_data_base.590" = type { %"class.absl::optional_internal::optional_data_dtor_base.591" }
%"class.absl::optional_internal::optional_data_dtor_base.591" = type { i8, %union.anon.592 }
%union.anon.592 = type { %"struct.std::__1::pair.593" }
%"struct.std::__1::pair.593" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.613", %"class.absl::optional.613", %"class.absl::optional.613", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.632, %"class.absl::optional.633", %"class.std::__1::map.638" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.609" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.603"**, %"struct.std::__1::pair.603"**, %"struct.std::__1::pair.603"**, %"class.std::__1::__compressed_pair.604" }
%"struct.std::__1::pair.603" = type opaque
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.std::__1::pair.603"** }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.613" = type { %"class.absl::optional_internal::optional_data.614" }
%"class.absl::optional_internal::optional_data.614" = type { %"class.absl::optional_internal::optional_data_base.615" }
%"class.absl::optional_internal::optional_data_base.615" = type { %"class.absl::optional_internal::optional_data_dtor_base.616" }
%"class.absl::optional_internal::optional_data_dtor_base.616" = type { i8, %union.anon.617 }
%union.anon.617 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.618", %"class.base::circular_deque.619", %"class.std::__1::map.621", %"class.absl::optional.370" }
%"class.base::RepeatingCallback.618" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.619" = type { %"class.base::internal::VectorBuffer.620", i64, i64 }
%"class.base::internal::VectorBuffer.620" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.621" = type { %"class.std::__1::__tree.622" }
%"class.std::__1::__tree.622" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%struct.anon.632 = type { double, double }
%"class.absl::optional.633" = type { %"class.absl::optional_internal::optional_data.634" }
%"class.absl::optional_internal::optional_data.634" = type { %"class.absl::optional_internal::optional_data_base.635" }
%"class.absl::optional_internal::optional_data_base.635" = type { %"class.absl::optional_internal::optional_data_dtor_base.636" }
%"class.absl::optional_internal::optional_data_dtor_base.636" = type { i8, %union.anon.637 }
%union.anon.637 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.638" = type { %"class.std::__1::__tree.639" }
%"class.std::__1::__tree.639" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.640", %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.650" }
%"class.base::RingBuffer.650" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.672" = type { %"class.std::__1::__tree.673" }
%"class.std::__1::__tree.673" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.674", %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.682" = type { %"class.std::__1::__hash_table.683" }
%"class.std::__1::__hash_table.683" = type <{ %"class.std::__1::unique_ptr.684", %"class.std::__1::__compressed_pair.694", %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.702", [4 x i8] }>
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686", %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"struct.std::__1::__hash_node_base.687"** }
%"struct.std::__1::__hash_node_base.687" = type { %"struct.std::__1::__hash_node_base.687"* }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.std::__1::__bucket_list_deallocator.689" }
%"class.std::__1::__bucket_list_deallocator.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"struct.std::__1::__hash_node_base.687" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.708" }
%"class.std::__1::vector.708" = type { %"class.std::__1::__vector_base.709" }
%"class.std::__1::__vector_base.709" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.715" }
%"class.std::__1::vector.715" = type { %"class.std::__1::__vector_base.716" }
%"class.std::__1::__vector_base.716" = type { %"class.std::__1::unique_ptr.717"*, %"class.std::__1::unique_ptr.717"*, %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::unique_ptr.717" = type opaque
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.std::__1::unique_ptr.717"* }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.519" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.751" = type { %"class.std::__1::__vector_base.752" }
%"class.std::__1::__vector_base.752" = type { %"struct.std::__1::pair.753"*, %"struct.std::__1::pair.753"*, %"class.std::__1::__compressed_pair.754" }
%"struct.std::__1::pair.753" = type opaque
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.std::__1::pair.753"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.759", %"class.base::internal::flat_tree.432", %"class.base::internal::flat_tree.432", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.759" = type { %"class.base::internal::flat_tree.760" }
%"class.base::internal::flat_tree.760" = type { %"class.std::__1::vector.761" }
%"class.std::__1::vector.761" = type { %"class.std::__1::__vector_base.762" }
%"class.std::__1::__vector_base.762" = type { %"struct.std::__1::pair.763"*, %"struct.std::__1::pair.763"*, %"class.std::__1::__compressed_pair.764" }
%"struct.std::__1::pair.763" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.360", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1437", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1437" = type { %"class.std::__1::vector.1438" }
%"class.std::__1::vector.1438" = type { %"class.std::__1::__vector_base.1439" }
%"class.std::__1::__vector_base.1439" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1440" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.std::__1::pair.763"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.769", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.770" }
%"class.base::RepeatingCallback.769" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.774" }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.802" = type { %"class.absl::optional_internal::optional_data.803" }
%"class.absl::optional_internal::optional_data.803" = type { %"class.absl::optional_internal::optional_data_base.804" }
%"class.absl::optional_internal::optional_data_base.804" = type { %"class.absl::optional_internal::optional_data_dtor_base.805" }
%"class.absl::optional_internal::optional_data_dtor_base.805" = type { i8, [7 x i8], %union.anon.806 }
%union.anon.806 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.807", %"struct.viz::Selection", i8, %"class.absl::optional.812", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.817", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.807" = type { %"class.absl::optional_internal::optional_data.808" }
%"class.absl::optional_internal::optional_data.808" = type { %"class.absl::optional_internal::optional_data_base.809" }
%"class.absl::optional_internal::optional_data_base.809" = type { %"class.absl::optional_internal::optional_data_dtor_base.810" }
%"class.absl::optional_internal::optional_data_dtor_base.810" = type { i8, %union.anon.811 }
%union.anon.811 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.812" = type { %"class.absl::optional_internal::optional_data.813" }
%"class.absl::optional_internal::optional_data.813" = type { %"class.absl::optional_internal::optional_data_base.814" }
%"class.absl::optional_internal::optional_data_base.814" = type { %"class.absl::optional_internal::optional_data_dtor_base.815" }
%"class.absl::optional_internal::optional_data_dtor_base.815" = type { i8, %union.anon.816 }
%union.anon.816 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.817" = type { %"class.absl::optional_internal::optional_data.818" }
%"class.absl::optional_internal::optional_data.818" = type { %"class.absl::optional_internal::optional_data_base.819" }
%"class.absl::optional_internal::optional_data_base.819" = type { %"class.absl::optional_internal::optional_data_dtor_base.820" }
%"class.absl::optional_internal::optional_data_dtor_base.820" = type { i8, %union.anon.821 }
%union.anon.821 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.822" }
%"class.base::circular_deque.822" = type { %"class.base::internal::VectorBuffer.823", i64, i64 }
%"class.base::internal::VectorBuffer.823" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.824", %"class.std::__1::vector.824" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.832", %"class.base::flat_map.838", %"class.base::flat_map.848", %"class.base::RepeatingCallback.858", %"class.std::__1::vector.859", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.867", i64, i64 }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.838" = type { %"class.base::internal::flat_tree.839" }
%"class.base::internal::flat_tree.839" = type { %"class.std::__1::vector.840" }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { %"struct.std::__1::pair.842"*, %"struct.std::__1::pair.842"*, %"class.std::__1::__compressed_pair.843" }
%"struct.std::__1::pair.842" = type opaque
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::pair.842"* }
%"class.base::flat_map.848" = type { %"class.base::internal::flat_tree.849" }
%"class.base::internal::flat_tree.849" = type { %"class.std::__1::vector.850" }
%"class.std::__1::vector.850" = type { %"class.std::__1::__vector_base.851" }
%"class.std::__1::__vector_base.851" = type { %"struct.std::__1::pair.852"*, %"struct.std::__1::pair.852"*, %"class.std::__1::__compressed_pair.853" }
%"struct.std::__1::pair.852" = type opaque
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::pair.852"* }
%"class.base::RepeatingCallback.858" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { %"class.std::__1::unique_ptr.861"*, %"class.std::__1::unique_ptr.861"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::unique_ptr.861" = type opaque
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::unique_ptr.861"* }
%"class.base::flat_map.867" = type { %"class.base::internal::flat_tree.868" }
%"class.base::internal::flat_tree.868" = type { %"class.std::__1::vector.869" }
%"class.std::__1::vector.869" = type { %"class.std::__1::__vector_base.870" }
%"class.std::__1::__vector_base.870" = type { %"struct.std::__1::pair.871"*, %"struct.std::__1::pair.871"*, %"class.std::__1::__compressed_pair.872" }
%"struct.std::__1::pair.871" = type opaque
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::pair.871"* }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.883", %"class.base::internal::flat_tree.893" }
%"class.base::flat_map.883" = type { %"class.base::internal::flat_tree.884" }
%"class.base::internal::flat_tree.884" = type { %"class.std::__1::vector.885" }
%"class.std::__1::vector.885" = type { %"class.std::__1::__vector_base.886" }
%"class.std::__1::__vector_base.886" = type { %"struct.std::__1::pair.887"*, %"struct.std::__1::pair.887"*, %"class.std::__1::__compressed_pair.888" }
%"struct.std::__1::pair.887" = type opaque
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::pair.887"* }
%"class.base::internal::flat_tree.893" = type { %"class.std::__1::vector.894" }
%"class.std::__1::vector.894" = type { %"class.std::__1::__vector_base.895" }
%"class.std::__1::__vector_base.895" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.906" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.896", %"class.absl::optional.901", %"struct.cc::ElementId" }
%"class.absl::optional.896" = type { %"class.absl::optional_internal::optional_data.897" }
%"class.absl::optional_internal::optional_data.897" = type { %"class.absl::optional_internal::optional_data_base.898" }
%"class.absl::optional_internal::optional_data_base.898" = type { %"class.absl::optional_internal::optional_data_dtor_base.899" }
%"class.absl::optional_internal::optional_data_dtor_base.899" = type { i8, %union.anon.900 }
%union.anon.900 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.901" = type { %"class.absl::optional_internal::optional_data.902" }
%"class.absl::optional_internal::optional_data.902" = type { %"class.absl::optional_internal::optional_data_base.903" }
%"class.absl::optional_internal::optional_data_base.903" = type { %"class.absl::optional_internal::optional_data_dtor_base.904" }
%"class.absl::optional_internal::optional_data_dtor_base.904" = type { i8, %union.anon.905 }
%union.anon.905 = type { i32 }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.923" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.911", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.911" = type { %"class.std::__1::__deque_base.912" }
%"class.std::__1::__deque_base.912" = type { %"struct.std::__1::__split_buffer.913", i64, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::__split_buffer.913" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.914" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.base::circular_deque.923" = type { %"class.base::internal::VectorBuffer.924", i64, i64 }
%"class.base::internal::VectorBuffer.924" = type { %"struct.std::__1::pair.925"*, i64 }
%"struct.std::__1::pair.925" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.926", %"class.std::__1::map.931", %"class.std::__1::map.931" }
%"class.absl::optional.926" = type { %"class.absl::optional_internal::optional_data.927" }
%"class.absl::optional_internal::optional_data.927" = type { %"class.absl::optional_internal::optional_data_base.928" }
%"class.absl::optional_internal::optional_data_base.928" = type { %"class.absl::optional_internal::optional_data_dtor_base.929" }
%"class.absl::optional_internal::optional_data_dtor_base.929" = type { i8, [3 x i8], %union.anon.930 }
%union.anon.930 = type { %"class.gfx::Transform" }
%"class.std::__1::map.931" = type { %"class.std::__1::__tree.932" }
%"class.std::__1::__tree.932" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.933", %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.940", %"class.std::__1::vector.947" }
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.942" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.519", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.961" }
%"class.base::WeakPtrFactory.961" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.962", %"class.std::__1::map.969", i64 }
%"class.std::__1::list.962" = type { %"class.std::__1::__list_imp.963" }
%"class.std::__1::__list_imp.963" = type { %"struct.std::__1::__list_node_base.964", %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::__list_node_base.964" = type { %"struct.std::__1::__list_node_base.964"*, %"struct.std::__1::__list_node_base.964"* }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.969" = type { %"class.std::__1::__tree.970" }
%"class.std::__1::__tree.970" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.971", %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.980", %"class.base::internal::flat_tree.990", %"class.base::internal::flat_tree.990" }
%"class.base::flat_map.980" = type { %"class.base::internal::flat_tree.981" }
%"class.base::internal::flat_tree.981" = type { %"class.std::__1::vector.982" }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"*, %"class.std::__1::__compressed_pair.985" }
%"struct.std::__1::pair.984" = type opaque
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::pair.984"* }
%"class.base::internal::flat_tree.990" = type { %"class.std::__1::vector.991" }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.993" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.viz::FrameSinkId"* }
%"class.base::WeakPtrFactory.998" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.999" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.1000 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1001" }
%"class.absl::optional.1001" = type { %"class.absl::optional_internal::optional_data.1002" }
%"class.absl::optional_internal::optional_data.1002" = type { %"class.absl::optional_internal::optional_data_base.1003" }
%"class.absl::optional_internal::optional_data_base.1003" = type { %"class.absl::optional_internal::optional_data_dtor_base.1004" }
%"class.absl::optional_internal::optional_data_dtor_base.1004" = type { i8, %union.anon.1005 }
%union.anon.1005 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.1006 = type { %"class.cc::SyncedProperty.1007"* }
%"class.cc::SyncedProperty.1007" = type <{ %"class.base::RefCounted.1008", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.1008" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1025", %"class.std::__1::unique_ptr.1045", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1015" }
%"class.base::flat_map.1015" = type { %"class.base::internal::flat_tree.1016" }
%"class.base::internal::flat_tree.1016" = type { %"class.std::__1::vector.1017" }
%"class.std::__1::vector.1017" = type { %"class.std::__1::__vector_base.1018" }
%"class.std::__1::__vector_base.1018" = type { %"struct.std::__1::pair.1019"*, %"struct.std::__1::pair.1019"*, %"class.std::__1::__compressed_pair.1020" }
%"struct.std::__1::pair.1019" = type opaque
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::pair.1019"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1028", %"class.std::__1::vector.1028", %"class.std::__1::vector.1035" }
%"class.std::__1::vector.1028" = type { %"class.std::__1::__vector_base.1029" }
%"class.std::__1::__vector_base.1029" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { i8** }
%"class.std::__1::vector.1035" = type { %"class.std::__1::__vector_base.1036" }
%"class.std::__1::__vector_base.1036" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1037" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.std::__1::unique_ptr.1012"* }
%"class.std::__1::unordered_map.1059" = type { %"class.std::__1::__hash_table.1060" }
%"class.std::__1::__hash_table.1060" = type <{ %"class.std::__1::unique_ptr.1061", %"class.std::__1::__compressed_pair.1071", %"class.std::__1::__compressed_pair.1076", %"class.std::__1::__compressed_pair.1079", [4 x i8] }>
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063", %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"struct.std::__1::__hash_node_base.1064"** }
%"struct.std::__1::__hash_node_base.1064" = type { %"struct.std::__1::__hash_node_base.1064"* }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.std::__1::__bucket_list_deallocator.1066" }
%"class.std::__1::__bucket_list_deallocator.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.std::__1::__hash_node_base.1064" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.base::internal::flat_tree.1083" = type { %"class.std::__1::vector.1084" }
%"class.std::__1::vector.1084" = type { %"class.std::__1::__vector_base.1085" }
%"class.std::__1::__vector_base.1085" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.1115" = type { %"class.std::__1::__hash_table.1116" }
%"class.std::__1::__hash_table.1116" = type <{ %"class.std::__1::unique_ptr.1117", %"class.std::__1::__compressed_pair.1127", %"class.std::__1::__compressed_pair.1132", %"class.std::__1::__compressed_pair.1135", [4 x i8] }>
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119", %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"struct.std::__1::__hash_node_base.1120"** }
%"struct.std::__1::__hash_node_base.1120" = type { %"struct.std::__1::__hash_node_base.1120"* }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.std::__1::__bucket_list_deallocator.1122" }
%"class.std::__1::__bucket_list_deallocator.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.std::__1::__hash_node_base.1120" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.1139" = type { %"class.std::__1::__hash_table.1140" }
%"class.std::__1::__hash_table.1140" = type <{ %"class.std::__1::unique_ptr.1141", %"class.std::__1::__compressed_pair.1151", %"class.std::__1::__compressed_pair.1156", %"class.std::__1::__compressed_pair.1159", [4 x i8] }>
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143", %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"struct.std::__1::__hash_node_base.1144"** }
%"struct.std::__1::__hash_node_base.1144" = type { %"struct.std::__1::__hash_node_base.1144"* }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.std::__1::__bucket_list_deallocator.1146" }
%"class.std::__1::__bucket_list_deallocator.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::__hash_node_base.1144" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.base::flat_map.1163" = type { %"class.base::internal::flat_tree.1164" }
%"class.base::internal::flat_tree.1164" = type { %"class.std::__1::vector.1165" }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"struct.std::__1::pair.1167"*, %"struct.std::__1::pair.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"struct.std::__1::pair.1167" = type opaque
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"struct.std::__1::pair.1167"* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1257" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1175", %class.scoped_refptr.1183, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1235", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1240", %"class.base::flat_map.1247", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1025", %"class.std::__1::unique_ptr.1045", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1178", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1220", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1183, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1178" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { %"class.std::__1::unique_ptr.1180"*, %"class.std::__1::unique_ptr.1180"*, %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1183, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1186", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1186" = type { %"class.std::__1::__hash_table.1187" }
%"class.std::__1::__hash_table.1187" = type <{ %"class.std::__1::unique_ptr.1188", %"class.std::__1::__compressed_pair.1198", %"class.std::__1::__compressed_pair.1203", %"class.std::__1::__compressed_pair.1206", [4 x i8] }>
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190", %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"struct.std::__1::__hash_node_base.1191"** }
%"struct.std::__1::__hash_node_base.1191" = type { %"struct.std::__1::__hash_node_base.1191"* }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.std::__1::__bucket_list_deallocator.1193" }
%"class.std::__1::__bucket_list_deallocator.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"struct.std::__1::__hash_node_base.1191" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.std::__1::unique_ptr.1180"* }
%"class.std::__1::deque.1220" = type { %"class.std::__1::__deque_base.1221" }
%"class.std::__1::__deque_base.1221" = type { %"struct.std::__1::__split_buffer.1222", i64, %"class.std::__1::__compressed_pair.1228" }
%"struct.std::__1::__split_buffer.1222" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1223" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1183 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1184", [4 x i8], i64, %class.scoped_refptr.1185, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1185 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1235" = type { %"class.absl::optional_internal::optional_data.1236" }
%"class.absl::optional_internal::optional_data.1236" = type { %"class.absl::optional_internal::optional_data_base.1237" }
%"class.absl::optional_internal::optional_data_base.1237" = type { %"class.absl::optional_internal::optional_data_dtor_base.1238" }
%"class.absl::optional_internal::optional_data_dtor_base.1238" = type { i8, %union.anon.1239 }
%union.anon.1239 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1240" = type { %"class.std::__1::__vector_base.1241" }
%"class.std::__1::__vector_base.1241" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1247" = type { %"class.base::internal::flat_tree.1248" }
%"class.base::internal::flat_tree.1248" = type { %"class.std::__1::vector.1249" }
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { %"struct.std::__1::pair.1251"*, %"struct.std::__1::pair.1251"*, %"class.std::__1::__compressed_pair.1252" }
%"struct.std::__1::pair.1251" = type opaque
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"struct.std::__1::pair.1251"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1262" = type { %"class.std::__1::vector.1173" }
%"class.base::internal::flat_tree.789" = type { %"class.std::__1::vector.790" }
%"class.std::__1::vector.790" = type { %"class.std::__1::__vector_base.791" }
%"class.std::__1::__vector_base.791" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.797" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.792", %"class.viz::SurfaceId" }
%"class.absl::optional.792" = type { %"class.absl::optional_internal::optional_data.793" }
%"class.absl::optional_internal::optional_data.793" = type { %"class.absl::optional_internal::optional_data_base.794" }
%"class.absl::optional_internal::optional_data_base.794" = type { %"class.absl::optional_internal::optional_data_dtor_base.795" }
%"class.absl::optional_internal::optional_data_dtor_base.795" = type { i8, %union.anon.796 }
%union.anon.796 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1263" = type { %"class.std::__1::__vector_base.1264" }
%"class.std::__1::__vector_base.1264" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.std::__1::unique_ptr.309"*, %"class.std::__1::unique_ptr.309"*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.1426" }
%"class.std::__1::__compressed_pair.1426" = type { %"struct.std::__1::__compressed_pair_elem.1427" }
%"struct.std::__1::__compressed_pair_elem.1427" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::unique_ptr.309"* }
%"class.std::__1::vector.1270" = type { %"class.std::__1::__vector_base.1271" }
%"class.std::__1::__vector_base.1271" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1272" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1277 = type { %"class.cc::SyncedProperty.1278"* }
%"class.cc::SyncedProperty.1278" = type <{ %"class.base::RefCounted.1279", %"class.cc::AdditionGroup.1280", %"class.cc::AdditionGroup.1280", %"class.cc::AdditionGroup.1280", %"class.cc::AdditionGroup.1280", %"class.cc::AdditionGroup.1280", i8, [3 x i8] }>
%"class.base::RefCounted.1279" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1280" = type { float }
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.base::OnceCallback.826"*, %"class.base::OnceCallback.826"*, %"class.std::__1::__compressed_pair.827" }
%"class.base::OnceCallback.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.base::OnceCallback.826"* }
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"class.std::__1::unique_ptr.949"*, %"class.std::__1::unique_ptr.949"*, %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.1416" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1418", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1418" = type { %"class.absl::optional_internal::optional_data.1419" }
%"class.absl::optional_internal::optional_data.1419" = type { %"class.absl::optional_internal::optional_data_base.1420" }
%"class.absl::optional_internal::optional_data_base.1420" = type { %"class.absl::optional_internal::optional_data_dtor_base.1421" }
%"class.absl::optional_internal::optional_data_dtor_base.1421" = type { i8, %union.anon.1422 }
%union.anon.1422 = type { i32 }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.std::__1::unique_ptr.949"* }
%"class.std::__1::unique_ptr.1288" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1294" = type { %"class.std::__1::__vector_base.1295" }
%"class.std::__1::__vector_base.1295" = type { %"class.std::__1::unique_ptr.1296"*, %"class.std::__1::unique_ptr.1296"*, %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::unique_ptr.1296" = type opaque
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.std::__1::unique_ptr.1296"* }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::unique_ptr.86"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.101" }
%"class.cc::PropertyTree.101" = type { i32 (...)**, %"class.std::__1::vector.102", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.116" }
%"struct.cc::ClipNode" = type <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], %"class.base::StackVector", %"class.gfx::RectF", %"class.absl::optional.111", i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.106" }
%"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" = type { [72 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*, %"class.std::__1::__compressed_pair.108" }
%"struct.cc::ClipRectData" = type { i32, %"struct.cc::ConditionalClip" }
%"struct.cc::ConditionalClip" = type { i8, %"class.gfx::RectF" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.cc::ClipRectData"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.base::StackAllocator" }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.cc::ClipExpander" }
%"class.cc::ClipExpander" = type { i32 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.121", i32, %"class.base::flat_map.141", %"class.base::flat_map.151", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.121" = type { i32 (...)**, %"class.std::__1::vector.122", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.136" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.124", i8, [7 x i8] }>
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.129", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.131" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.cc::SnapAreaData"* }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.141" = type { %"class.base::internal::flat_tree.142" }
%"class.base::internal::flat_tree.142" = type { %"class.std::__1::vector.143" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"*, %"class.std::__1::__compressed_pair.146" }
%"struct.std::__1::pair.145" = type { %"struct.cc::ElementId", %"class.gfx::ScrollOffset" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::pair.145"* }
%"class.base::flat_map.151" = type { %"class.base::internal::flat_tree.152" }
%"class.base::internal::flat_tree.152" = type { %"class.std::__1::vector.153" }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair.155" = type { %"struct.cc::ElementId", %class.scoped_refptr.1311 }
%class.scoped_refptr.1311 = type { %"class.cc::SyncedProperty.1312"* }
%"class.cc::SyncedProperty.1312" = type <{ %"class.base::RefCounted.1313", %"class.cc::AdditionGroup.1314", %"class.cc::AdditionGroup.1314", %"class.cc::AdditionGroup.1314", %"class.cc::AdditionGroup.1314", %"class.cc::AdditionGroup.1314", i8, [3 x i8] }>
%"class.base::RefCounted.1313" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1314" = type { %"class.gfx::ScrollOffset" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair.155"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.166", %"class.std::__1::vector.173" }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.168" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"*, %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.1316" }
%"class.std::__1::__vector_base.1316" = type { %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"*, %"class.std::__1::__compressed_pair.1317" }
%"struct.cc::DrawTransformData" = type { i32, i32, %"struct.cc::DrawTransforms" }
%"struct.cc::DrawTransforms" = type { i8, i8, i8, i8, %"class.gfx::Transform", %"class.gfx::Transform" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.cc::DrawTransformData"* }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::vector.175"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.1302" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback.1327", %class.scoped_refptr.348, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.1328", %"class.absl::optional.1333", %"class.absl::optional.1333" }
%"class.base::OnceCallback.1327" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.1328" = type { %"class.absl::optional_internal::optional_data.1329" }
%"class.absl::optional_internal::optional_data.1329" = type { %"class.absl::optional_internal::optional_data_base.1330" }
%"class.absl::optional_internal::optional_data_base.1330" = type { %"class.absl::optional_internal::optional_data_dtor_base.1331" }
%"class.absl::optional_internal::optional_data_dtor_base.1331" = type { i8, %union.anon.1332 }
%union.anon.1332 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1333" = type { %"class.absl::optional_internal::optional_data.1334" }
%"class.absl::optional_internal::optional_data.1334" = type { %"class.absl::optional_internal::optional_data_base.1335" }
%"class.absl::optional_internal::optional_data_base.1335" = type { %"class.absl::optional_internal::optional_data_dtor_base.1336" }
%"class.absl::optional_internal::optional_data_dtor_base.1336" = type { i8, %union.anon.1337 }
%union.anon.1337 = type { %"class.gfx::Rect" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1342" }
%"struct.std::__1::pair.1342" = type { i32, %"class.std::__1::unique_ptr.1324" }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.viz::CopyOutputRequest"* }
%"class.std::__1::vector.1343" = type { %"class.std::__1::__vector_base.1344" }
%"class.std::__1::__vector_base.1344" = type { %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.std::__1::unique_ptr.1324"* }
%"class.std::__1::unique_ptr.1499" = type { %"class.std::__1::__compressed_pair.1500" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.1501", %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.77"*, i8, [7 x i8] }>
%"class.std::__1::allocator.77" = type { i8 }
%"struct.std::__1::__less.1510" = type { i8 }
%"class.std::__1::vector.1352" = type { %"class.std::__1::__vector_base.1353" }
%"class.std::__1::__vector_base.1353" = type { %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"class.std::__1::__compressed_pair.1356" }
%"struct.std::__1::pair.1354" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"struct.std::__1::pair.1354"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1450", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1450" = type { %"class.std::__1::__vector_base.1451" }
%"class.std::__1::__vector_base.1451" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1452", i64, i64 }
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.1463" }
%"class.std::__1::list.1463" = type { %"class.std::__1::__list_imp.1464" }
%"class.std::__1::__list_imp.1464" = type { %"struct.std::__1::__list_node_base.1465", %"class.std::__1::__compressed_pair.1466" }
%"struct.std::__1::__list_node_base.1465" = type { %"struct.std::__1::__list_node_base.1465"*, %"struct.std::__1::__list_node_base.1465"* }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.cc::CompositorCommitData" = type <{ %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"class.std::__1::vector.1371", float, i8, i8, [2 x i8], %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::ElementId", float, float, %"class.std::__1::vector.1378", %"class.std::__1::vector.307", i32, i8, i8, i8, i8, i32, [4 x i8] }>
%"struct.cc::CompositorCommitData::ScrollUpdateInfo" = type { %"struct.cc::ElementId", %"class.gfx::ScrollOffset", %"class.absl::optional.1366" }
%"class.absl::optional.1366" = type { %"class.absl::optional_internal::optional_data.1367" }
%"class.absl::optional_internal::optional_data.1367" = type { %"class.absl::optional_internal::optional_data_base.1368" }
%"class.absl::optional_internal::optional_data_base.1368" = type { %"class.absl::optional_internal::optional_data_dtor_base.1369" }
%"class.absl::optional_internal::optional_data_dtor_base.1369" = type { i8, %union.anon.1370 }
%"class.std::__1::vector.1371" = type { %"class.std::__1::__vector_base.1372" }
%"class.std::__1::__vector_base.1372" = type { %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* }
%"class.std::__1::vector.1378" = type { %"class.std::__1::__vector_base.1379" }
%"class.std::__1::__vector_base.1379" = type { %"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo"*, %"class.std::__1::__compressed_pair.1380" }
%"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo" = type <{ %"struct.cc::ElementId", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo"* }
%"class.base::internal::flat_tree.1385" = type { %"class.std::__1::vector.1386" }
%"class.std::__1::vector.1386" = type { %"class.std::__1::__vector_base.1387" }
%"class.std::__1::__vector_base.1387" = type { %"struct.cc::ElementId"*, %"struct.cc::ElementId"*, %"class.std::__1::__compressed_pair.1388" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"struct.cc::ElementId"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.cc::ScrollCallbacks" = type { i32 (...)** }
%"class.base::flat_map.1394" = type { %"class.base::internal::flat_tree.1395" }
%"class.base::internal::flat_tree.1395" = type { %"class.std::__1::vector.1396" }
%"class.std::__1::vector.1396" = type { %"class.std::__1::__vector_base.1397" }
%"class.std::__1::__vector_base.1397" = type { %"struct.std::__1::pair.1398"*, %"struct.std::__1::pair.1398"*, %"class.std::__1::__compressed_pair.1399" }
%"struct.std::__1::pair.1398" = type { i32, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"struct.std::__1::pair.1398"* }
%"struct.cc::PropertyAnimationState" = type { %"class.std::__1::bitset.1404", %"class.std::__1::bitset.1404" }
%"class.std::__1::bitset.1404" = type { %"class.std::__1::__bitset.1405" }
%"class.std::__1::__bitset.1405" = type { i64 }
%"class.base::trace_event::TracedValueJSON" = type { %"class.base::trace_event::TracedValue" }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%"struct.std::__1::__split_buffer.1512" = type { %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"*, %"class.std::__1::__compressed_pair.1513" }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"class.std::__1::allocator.159"* }
%"class.std::__1::allocator.159" = type { i8 }
%"struct.std::__1::__split_buffer.1525" = type { %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"*, %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.147", %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.std::__1::allocator.149"* }
%"class.std::__1::allocator.149" = type { i8 }

$_ZN2cc12PropertyTreeINS_13TransformNodeEEC5Ev = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEED5Ev = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEEaSERKS2_ = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE6InsertERKS1_i = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE4NodeEi = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE4NodeEi = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE4sizeEv = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE5clearEv = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE16set_needs_updateEb = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE12needs_updateEv = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE17next_available_idEv = comdat any

$_ZN2cc12PropertyTreeINS_13TransformNodeEE16SetPropertyTreesEPNS_13PropertyTreesE = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE14property_treesEv = comdat any

$_ZNK2cc12PropertyTreeINS_13TransformNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEEC5Ev = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEED5Ev = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEEaSERKS2_ = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE4NodeEi = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE4NodeEi = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE4sizeEv = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE5clearEv = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE16set_needs_updateEb = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE12needs_updateEv = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE17next_available_idEv = comdat any

$_ZN2cc12PropertyTreeINS_8ClipNodeEE16SetPropertyTreesEPNS_13PropertyTreesE = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE14property_treesEv = comdat any

$_ZNK2cc12PropertyTreeINS_8ClipNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEEC5Ev = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEED5Ev = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEEaSERKS2_ = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE6InsertERKS1_i = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE4NodeEi = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE4NodeEi = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE4sizeEv = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE5clearEv = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE16set_needs_updateEb = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE12needs_updateEv = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE17next_available_idEv = comdat any

$_ZN2cc12PropertyTreeINS_10EffectNodeEE16SetPropertyTreesEPNS_13PropertyTreesE = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE14property_treesEv = comdat any

$_ZNK2cc12PropertyTreeINS_10EffectNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEEC5Ev = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEED5Ev = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEEaSERKS2_ = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE4NodeEi = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE4NodeEi = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE6parentEPKS1_ = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE4sizeEv = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE4backEv = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE5clearEv = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE16set_needs_updateEb = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE12needs_updateEv = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE5nodesEv = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE17next_available_idEv = comdat any

$_ZN2cc12PropertyTreeINS_10ScrollNodeEE16SetPropertyTreesEPNS_13PropertyTreesE = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE14property_treesEv = comdat any

$_ZNK2cc12PropertyTreeINS_10ScrollNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE = comdat any

$_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN4base8flat_mapIN2cc9ElementIdE13scoped_refptrINS1_14SyncedPropertyINS1_13AdditionGroupIN3gfx12ScrollOffsetEEEEEENSt3__14lessIvEENSB_6vectorINSB_4pairIS2_SA_EENSB_9allocatorISG_EEEEEixERKS2_ = comdat any

$_ZN4base8internal9flat_treeIN2cc9ElementIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEENS5_9allocatorISI_EEEEE5eraseENS5_11__wrap_iterIPSI_EE = comdat any

$_ZN2cc8ClipTreeD0Ev = comdat any

$_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZN4base11trace_event15TracedValueJSOND0Ev = comdat any

$_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc13TransformNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE19__node_insert_multiEPNS_11__hash_nodeIS8_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE27__node_insert_multi_prepareEmRS8_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE = comdat any

$_ZNSt3__16__sortIRNS_6__lessINS_4pairImiEES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairImiEES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_4pairIN2cc9ElementIdE13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEENS_9allocatorISC_EEE7emplaceIJRKS3_SB_EEENS_11__wrap_iterIPSC_EENSJ_IPKSC_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdE13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEERNS_9allocatorISC_EEE12emplace_backIJRKS3_SB_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEERNS_9allocatorIS6_EEE12emplace_backIJRKS3_S5_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2cc18AnimationScaleDataENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS0_IN2cc17DrawTransformDataENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEmRKS5_ = comdat any

$_ZNSt3__16vectorIN2cc17DrawTransformDataENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZTVN2cc12PropertyTreeINS_13TransformNodeEEE = comdat any

$_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE = comdat any

$_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE = comdat any

$_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE = comdat any

$_ZTVN2cc8ClipTreeE = comdat any

$_ZTVN4base11trace_event15TracedValueJSONE = comdat any

@_ZTVN2cc12PropertyTreeINS_13TransformNodeEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PropertyTree"*)* @_ZN2cc12PropertyTreeINS_13TransformNodeEED2Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree"*)* @_ZN2cc12PropertyTreeINS_13TransformNodeEED0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree"*, i1)* @_ZN2cc12PropertyTreeINS_13TransformNodeEE16set_needs_updateEb to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PropertyTree.101"*)* @_ZN2cc12PropertyTreeINS_8ClipNodeEED2Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.101"*)* @_ZN2cc12PropertyTreeINS_8ClipNodeEED0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.101"*, i1)* @_ZN2cc12PropertyTreeINS_8ClipNodeEE16set_needs_updateEb to i8*)] }, comdat, align 8
@_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PropertyTree.29"*)* @_ZN2cc12PropertyTreeINS_10EffectNodeEED2Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.29"*)* @_ZN2cc12PropertyTreeINS_10EffectNodeEED0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.29"*, i1)* @_ZN2cc12PropertyTreeINS_10EffectNodeEE16set_needs_updateEb to i8*)] }, comdat, align 8
@_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE = weak_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PropertyTree.121"*)* @_ZN2cc12PropertyTreeINS_10ScrollNodeEED2Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.121"*)* @_ZN2cc12PropertyTreeINS_10ScrollNodeEED0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.121"*, i1)* @_ZN2cc12PropertyTreeINS_10ScrollNodeEE16set_needs_updateEb to i8*)] }, comdat, align 8
@_ZTVN2cc13TransformTreeE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::TransformTree"*)* @_ZN2cc13TransformTreeD2Ev to i8*), i8* bitcast (void (%"class.cc::TransformTree"*)* @_ZN2cc13TransformTreeD0Ev to i8*), i8* bitcast (void (%"class.cc::TransformTree"*, i1)* @_ZN2cc13TransformTree16set_needs_updateEb to i8*)] }, align 8
@_ZTVN2cc10EffectTreeE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::EffectTree"*)* @_ZN2cc10EffectTreeD2Ev to i8*), i8* bitcast (void (%"class.cc::EffectTree"*)* @_ZN2cc10EffectTreeD0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.29"*, i1)* @_ZN2cc12PropertyTreeINS_10EffectNodeEE16set_needs_updateEb to i8*)] }, align 8
@_ZTVN2cc10ScrollTreeE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ScrollTree"*)* @_ZN2cc10ScrollTreeD2Ev to i8*), i8* bitcast (void (%"class.cc::ScrollTree"*)* @_ZN2cc10ScrollTreeD0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.121"*, i1)* @_ZN2cc12PropertyTreeINS_10ScrollNodeEE16set_needs_updateEb to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [35 x i8] c"ScrollTree::OnScrollOffsetAnimated\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"ScrollTree::CollectScrollDeltas\00", align 1
@__const._ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE.snap_target_ids = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1370 } } } } { { { { i8, [7 x i8], %union.anon.1370 } } } { { { i8, [7 x i8], %union.anon.1370 } } { { i8, [7 x i8], %union.anon.1370 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1370 { %"struct.cc::TargetSnapAreaElementIds" { %"struct.cc::ElementId" { i64 -6148914691236517206 }, %"struct.cc::ElementId" { i64 -6148914691236517206 } } } } } } }, align 8
@.str.5 = private unnamed_addr constant [20 x i8] c"CollectScrollDeltas\00", align 1
@__const._ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE.update = private unnamed_addr constant { %"struct.cc::ElementId", %"class.gfx::ScrollOffset", { { { { i8, [7 x i8], %union.anon.1370 } } } } } { %"struct.cc::ElementId" { i64 -6148914691236517206 }, %"class.gfx::ScrollOffset" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { { { i8, [7 x i8], %union.anon.1370 } } } } { { { { i8, [7 x i8], %union.anon.1370 } } } { { { i8, [7 x i8], %union.anon.1370 } } { { i8, [7 x i8], %union.anon.1370 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1370 { %"struct.cc::TargetSnapAreaElementIds" { %"struct.cc::ElementId" { i64 -6148914691236517206 }, %"struct.cc::ElementId" { i64 -6148914691236517206 } } } } } } } }, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"ScrollTree::SetScrollOffset\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"sequence_number\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"transform_tree\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"effect_tree\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"clip_tree\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"scroll_tree\00", align 1
@__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZTVN2cc8ClipTreeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PropertyTree.101"*)* @_ZN2cc12PropertyTreeINS_8ClipNodeEED2Ev to i8*), i8* bitcast (void (%"class.cc::ClipTree"*)* @_ZN2cc8ClipTreeD0Ev to i8*), i8* bitcast (void (%"class.cc::PropertyTree.101"*, i1)* @_ZN2cc12PropertyTreeINS_8ClipNodeEE16set_needs_updateEb to i8*)] }, comdat, align 8
@_ZTVN4base11trace_event15TracedValueJSONE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event11TracedValueD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValueJSON"*)* @_ZN4base11trace_event15TracedValueJSOND0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*)* @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN2cc12PropertyTreeINS_13TransformNodeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree"*), void (%"class.cc::PropertyTree"*)* @_ZN2cc12PropertyTreeINS_13TransformNodeEEC2Ev
@_ZN2cc12PropertyTreeINS_13TransformNodeEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree"*), void (%"class.cc::PropertyTree"*)* @_ZN2cc12PropertyTreeINS_13TransformNodeEED2Ev
@_ZN2cc12PropertyTreeINS_8ClipNodeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree.101"*), void (%"class.cc::PropertyTree.101"*)* @_ZN2cc12PropertyTreeINS_8ClipNodeEEC2Ev
@_ZN2cc12PropertyTreeINS_8ClipNodeEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree.101"*), void (%"class.cc::PropertyTree.101"*)* @_ZN2cc12PropertyTreeINS_8ClipNodeEED2Ev
@_ZN2cc12PropertyTreeINS_10EffectNodeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree.29"*), void (%"class.cc::PropertyTree.29"*)* @_ZN2cc12PropertyTreeINS_10EffectNodeEEC2Ev
@_ZN2cc12PropertyTreeINS_10EffectNodeEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree.29"*), void (%"class.cc::PropertyTree.29"*)* @_ZN2cc12PropertyTreeINS_10EffectNodeEED2Ev
@_ZN2cc12PropertyTreeINS_10ScrollNodeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree.121"*), void (%"class.cc::PropertyTree.121"*)* @_ZN2cc12PropertyTreeINS_10ScrollNodeEEC2Ev
@_ZN2cc12PropertyTreeINS_10ScrollNodeEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.cc::PropertyTree.121"*), void (%"class.cc::PropertyTree.121"*)* @_ZN2cc12PropertyTreeINS_10ScrollNodeEED2Ev
@_ZN2cc13TransformTreeC1Ev = hidden unnamed_addr alias void (%"class.cc::TransformTree"*), void (%"class.cc::TransformTree"*)* @_ZN2cc13TransformTreeC2Ev
@_ZN2cc13TransformTreeD1Ev = hidden unnamed_addr alias void (%"class.cc::TransformTree"*), void (%"class.cc::TransformTree"*)* @_ZN2cc13TransformTreeD2Ev
@_ZN2cc10EffectTreeC1Ev = hidden unnamed_addr alias void (%"class.cc::EffectTree"*), void (%"class.cc::EffectTree"*)* @_ZN2cc10EffectTreeC2Ev
@_ZN2cc10EffectTreeD1Ev = hidden unnamed_addr alias void (%"class.cc::EffectTree"*), void (%"class.cc::EffectTree"*)* @_ZN2cc10EffectTreeD2Ev
@_ZN2cc10ScrollTreeC1Ev = hidden unnamed_addr alias void (%"class.cc::ScrollTree"*), void (%"class.cc::ScrollTree"*)* @_ZN2cc10ScrollTreeC2Ev
@_ZN2cc10ScrollTreeD1Ev = hidden unnamed_addr alias void (%"class.cc::ScrollTree"*), void (%"class.cc::ScrollTree"*)* @_ZN2cc10ScrollTreeD2Ev
@_ZN2cc23PropertyTreesCachedDataC1Ev = hidden unnamed_addr alias void (%"struct.cc::PropertyTreesCachedData"*), void (%"struct.cc::PropertyTreesCachedData"*)* @_ZN2cc23PropertyTreesCachedDataC2Ev
@_ZN2cc23PropertyTreesCachedDataD1Ev = hidden unnamed_addr alias void (%"struct.cc::PropertyTreesCachedData"*), void (%"struct.cc::PropertyTreesCachedData"*)* @_ZN2cc23PropertyTreesCachedDataD2Ev
@_ZN2cc13PropertyTreesC1Ev = hidden unnamed_addr alias void (%"class.cc::PropertyTrees"*), void (%"class.cc::PropertyTrees"*)* @_ZN2cc13PropertyTreesC2Ev
@_ZN2cc13PropertyTreesD1Ev = hidden unnamed_addr alias void (%"class.cc::PropertyTrees"*), void (%"class.cc::PropertyTrees"*)* @_ZN2cc13PropertyTreesD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_13TransformNodeEEC2Ev(%"class.cc::PropertyTree"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_13TransformNodeEEC5Ev) align 2 {
  %2 = alloca %"struct.cc::TransformNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_13TransformNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %5 = bitcast %"struct.cc::TransformNode"* %2 to i8*
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %5) #18
  call void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"* nonnull %2) #18
  %7 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %9, align 8
  %11 = icmp ult %"struct.cc::TransformNode"* %8, %10
  %12 = ptrtoint %"struct.cc::TransformNode"* %10 to i64
  br i1 %11, label %13, label %18

13:                                               ; preds = %1
  call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %8, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %2) #18
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %8, i64 1
  %15 = ptrtoint %"struct.cc::TransformNode"* %14 to i64
  %16 = bitcast %"struct.cc::TransformNode"** %7 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector"* %4 to i64*
  br label %74

18:                                               ; preds = %1
  %19 = ptrtoint %"struct.cc::TransformNode"* %8 to i64
  %20 = bitcast %"struct.cc::TransformNode"** %7 to i64*
  %21 = bitcast %"class.std::__1::vector"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = sdiv exact i64 %23, 224
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 82351536043346212
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #19
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"struct.cc::TransformNode"** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = sdiv exact i64 %31, 224
  %33 = icmp ult i64 %32, 41175768021673106
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = shl nsw i64 %32, 1
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 82351536043346212, %29 ]
  %41 = mul i64 %40, 224
  %42 = call i8* @_Znwm(i64 %41) #20
  %43 = bitcast i8* %42 to %"struct.cc::TransformNode"*
  br label %44

44:                                               ; preds = %39, %34
  %45 = phi i64 [ %40, %39 ], [ 0, %34 ]
  %46 = phi %"struct.cc::TransformNode"* [ %43, %39 ], [ null, %34 ]
  %47 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %46, i64 %24
  %48 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %46, i64 %45
  %49 = ptrtoint %"struct.cc::TransformNode"* %48 to i64
  call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %47, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %2) #18
  %50 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %47, i64 1
  %51 = ptrtoint %"struct.cc::TransformNode"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %53 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %52, align 8
  %54 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %55 = icmp eq %"struct.cc::TransformNode"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = ptrtoint %"struct.cc::TransformNode"* %53 to i64
  br label %66

58:                                               ; preds = %44, %58
  %59 = phi %"struct.cc::TransformNode"* [ %61, %58 ], [ %47, %44 ]
  %60 = phi %"struct.cc::TransformNode"* [ %62, %58 ], [ %54, %44 ]
  %61 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %59, i64 -1
  %62 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %60, i64 -1
  call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %61, %"struct.cc::TransformNode"* dereferenceable(224) %62) #18
  %63 = icmp eq %"struct.cc::TransformNode"* %62, %53
  br i1 %63, label %64, label %58

64:                                               ; preds = %58
  %65 = load i64, i64* %21, align 8
  br label %66

66:                                               ; preds = %64, %56
  %67 = phi %"struct.cc::TransformNode"* [ %47, %56 ], [ %61, %64 ]
  %68 = phi i64 [ %57, %56 ], [ %65, %64 ]
  %69 = ptrtoint %"struct.cc::TransformNode"* %67 to i64
  store i64 %69, i64* %21, align 8
  store i64 %51, i64* %20, align 8
  store i64 %49, i64* %30, align 8
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %68 to i8*
  call void @_ZdlPv(i8* %72) #20
  %73 = load i64, i64* %20, align 8
  br label %74

74:                                               ; preds = %71, %66, %13
  %75 = phi i64* [ %21, %71 ], [ %21, %66 ], [ %17, %13 ]
  %76 = phi i64* [ %20, %71 ], [ %20, %66 ], [ %16, %13 ]
  %77 = phi i64 [ %73, %71 ], [ %51, %66 ], [ %15, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %5) #18
  %78 = load i64, i64* %75, align 8
  %79 = icmp eq i64 %77, %78
  %80 = inttoptr i64 %77 to %"struct.cc::TransformNode"*
  %81 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %80, i64 -1
  %82 = select i1 %79, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %81
  %83 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %82, i64 0, i32 0
  store i32 0, i32* %83, align 8
  %84 = load i64, i64* %76, align 8
  %85 = load i64, i64* %75, align 8
  %86 = icmp eq i64 %84, %85
  %87 = inttoptr i64 %84 to %"struct.cc::TransformNode"*
  %88 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %87, i64 -1
  %89 = select i1 %86, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %88
  %90 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %89, i64 0, i32 1
  store i32 -1, i32* %90, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::TransformNode"* @_ZN2cc12PropertyTreeINS_13TransformNodeEE4backEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::TransformNode"*
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %10
  ret %"struct.cc::TransformNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_13TransformNodeEED2Ev(%"class.cc::PropertyTree"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_13TransformNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_13TransformNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %3, align 8
  %5 = icmp eq %"struct.cc::TransformNode"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.cc::TransformNode"* %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.cc::TransformNode"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.cc::TransformNode"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_13TransformNodeEED0Ev(%"class.cc::PropertyTree"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_13TransformNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_13TransformNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %3, align 8
  %5 = icmp eq %"struct.cc::TransformNode"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.cc::TransformNode"* %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.cc::TransformNode"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.cc::TransformNode"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.cc::PropertyTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #20
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(48) %"class.cc::PropertyTree"* @_ZN2cc12PropertyTreeINS_13TransformNodeEEaSERKS2_(%"class.cc::PropertyTree"*, %"class.cc::PropertyTree"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.cc::PropertyTree"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc13TransformNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"struct.cc::TransformNode"* %7, %"struct.cc::TransformNode"* %9) #18
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  ret %"class.cc::PropertyTree"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2cc12PropertyTreeINS_13TransformNodeEE6InsertERKS1_i(%"class.cc::PropertyTree"*, %"struct.cc::TransformNode"* dereferenceable(224), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %9 = icmp eq %"struct.cc::TransformNode"* %6, %8
  %10 = ptrtoint %"struct.cc::TransformNode"* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %3
  tail call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %6, %"struct.cc::TransformNode"* dereferenceable(224) %1) #18
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %6, i64 1
  %13 = ptrtoint %"struct.cc::TransformNode"* %12 to i64
  %14 = bitcast %"struct.cc::TransformNode"** %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector"* %4 to i64*
  br label %72

16:                                               ; preds = %3
  %17 = ptrtoint %"struct.cc::TransformNode"* %6 to i64
  %18 = bitcast %"struct.cc::TransformNode"** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = sdiv exact i64 %21, 224
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 82351536043346212
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #19
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"struct.cc::TransformNode"** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = sdiv exact i64 %29, 224
  %31 = icmp ult i64 %30, 41175768021673106
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = shl nsw i64 %30, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 82351536043346212, %27 ]
  %39 = mul i64 %38, 224
  %40 = tail call i8* @_Znwm(i64 %39) #20
  %41 = bitcast i8* %40 to %"struct.cc::TransformNode"*
  br label %42

42:                                               ; preds = %37, %32
  %43 = phi i64 [ %38, %37 ], [ 0, %32 ]
  %44 = phi %"struct.cc::TransformNode"* [ %41, %37 ], [ null, %32 ]
  %45 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 %22
  %46 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 %43
  %47 = ptrtoint %"struct.cc::TransformNode"* %46 to i64
  tail call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %45, %"struct.cc::TransformNode"* dereferenceable(224) %1) #18
  %48 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %45, i64 1
  %49 = ptrtoint %"struct.cc::TransformNode"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %51 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %50, align 8
  %52 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %5, align 8
  %53 = icmp eq %"struct.cc::TransformNode"* %52, %51
  br i1 %53, label %54, label %56

54:                                               ; preds = %42
  %55 = ptrtoint %"struct.cc::TransformNode"* %51 to i64
  br label %64

56:                                               ; preds = %42, %56
  %57 = phi %"struct.cc::TransformNode"* [ %59, %56 ], [ %45, %42 ]
  %58 = phi %"struct.cc::TransformNode"* [ %60, %56 ], [ %52, %42 ]
  %59 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 -1
  %60 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %58, i64 -1
  tail call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %59, %"struct.cc::TransformNode"* dereferenceable(224) %60) #18
  %61 = icmp eq %"struct.cc::TransformNode"* %60, %51
  br i1 %61, label %62, label %56

62:                                               ; preds = %56
  %63 = load i64, i64* %19, align 8
  br label %64

64:                                               ; preds = %62, %54
  %65 = phi %"struct.cc::TransformNode"* [ %45, %54 ], [ %59, %62 ]
  %66 = phi i64 [ %55, %54 ], [ %63, %62 ]
  %67 = ptrtoint %"struct.cc::TransformNode"* %65 to i64
  store i64 %67, i64* %19, align 8
  store i64 %49, i64* %18, align 8
  store i64 %47, i64* %28, align 8
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %70) #20
  %71 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %5, align 8
  br label %72

72:                                               ; preds = %69, %64, %11
  %73 = phi i64* [ %19, %69 ], [ %19, %64 ], [ %15, %11 ]
  %74 = phi i64* [ %18, %69 ], [ %18, %64 ], [ %14, %11 ]
  %75 = phi %"struct.cc::TransformNode"* [ %71, %69 ], [ %48, %64 ], [ %12, %11 ]
  %76 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %75, i64 -1, i32 1
  store i32 %2, i32* %76, align 4
  %77 = load i64, i64* %74, align 8
  %78 = load i64, i64* %73, align 8
  %79 = sub i64 %77, %78
  %80 = sdiv exact i64 %79, 224
  %81 = trunc i64 %80 to i32
  %82 = add nsw i32 %81, -1
  %83 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %75, i64 -1, i32 0
  store i32 %82, i32* %83, align 8
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::TransformNode"* @_ZN2cc12PropertyTreeINS_13TransformNodeEE4NodeEi(%"class.cc::PropertyTree"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::TransformNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::TransformNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::TransformNode"* @_ZNK2cc12PropertyTreeINS_13TransformNodeEE4NodeEi(%"class.cc::PropertyTree"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::TransformNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::TransformNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::TransformNode"* @_ZN2cc12PropertyTreeINS_13TransformNodeEE6parentEPKS1_(%"class.cc::PropertyTree"*, %"struct.cc::TransformNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::TransformNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::TransformNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::TransformNode"* @_ZNK2cc12PropertyTreeINS_13TransformNodeEE6parentEPKS1_(%"class.cc::PropertyTree"*, %"struct.cc::TransformNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::TransformNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::TransformNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK2cc12PropertyTreeINS_13TransformNodeEE4sizeEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 224
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::TransformNode"* @_ZNK2cc12PropertyTreeINS_13TransformNodeEE4backEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::TransformNode"*
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %10
  ret %"struct.cc::TransformNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_13TransformNodeEE5clearEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.cc::TransformNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.cc::TransformNode"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.cc::TransformNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %9) #18
  call void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"* nonnull %2) #18
  %10 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %11 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %11, align 8
  %13 = icmp ult %"struct.cc::TransformNode"* %10, %12
  %14 = ptrtoint %"struct.cc::TransformNode"* %12 to i64
  br i1 %13, label %15, label %18

15:                                               ; preds = %1
  call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %10, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %2) #18
  %16 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 1
  %17 = ptrtoint %"struct.cc::TransformNode"* %16 to i64
  store i64 %17, i64* %8, align 8
  br label %72

18:                                               ; preds = %1
  %19 = ptrtoint %"struct.cc::TransformNode"* %10 to i64
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 224
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 82351536043346212
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #19
  unreachable

27:                                               ; preds = %18
  %28 = bitcast %"struct.cc::TransformNode"** %11 to i64*
  %29 = sub i64 %14, %20
  %30 = sdiv exact i64 %29, 224
  %31 = icmp ult i64 %30, 41175768021673106
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = shl nsw i64 %30, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 82351536043346212, %27 ]
  %39 = mul i64 %38, 224
  %40 = call i8* @_Znwm(i64 %39) #20
  %41 = bitcast i8* %40 to %"struct.cc::TransformNode"*
  br label %42

42:                                               ; preds = %37, %32
  %43 = phi i64 [ %38, %37 ], [ 0, %32 ]
  %44 = phi %"struct.cc::TransformNode"* [ %41, %37 ], [ null, %32 ]
  %45 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 %22
  %46 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 %43
  %47 = ptrtoint %"struct.cc::TransformNode"* %46 to i64
  call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %45, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %2) #18
  %48 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %45, i64 1
  %49 = ptrtoint %"struct.cc::TransformNode"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %51 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %50, align 8
  %52 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %53 = icmp eq %"struct.cc::TransformNode"* %52, %51
  br i1 %53, label %54, label %56

54:                                               ; preds = %42
  %55 = ptrtoint %"struct.cc::TransformNode"* %51 to i64
  br label %64

56:                                               ; preds = %42, %56
  %57 = phi %"struct.cc::TransformNode"* [ %59, %56 ], [ %45, %42 ]
  %58 = phi %"struct.cc::TransformNode"* [ %60, %56 ], [ %52, %42 ]
  %59 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 -1
  %60 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %58, i64 -1
  call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %59, %"struct.cc::TransformNode"* dereferenceable(224) %60) #18
  %61 = icmp eq %"struct.cc::TransformNode"* %60, %51
  br i1 %61, label %62, label %56

62:                                               ; preds = %56
  %63 = load i64, i64* %5, align 8
  br label %64

64:                                               ; preds = %62, %54
  %65 = phi %"struct.cc::TransformNode"* [ %45, %54 ], [ %59, %62 ]
  %66 = phi i64 [ %55, %54 ], [ %63, %62 ]
  %67 = ptrtoint %"struct.cc::TransformNode"* %65 to i64
  store i64 %67, i64* %5, align 8
  store i64 %49, i64* %8, align 8
  store i64 %47, i64* %28, align 8
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = inttoptr i64 %66 to i8*
  call void @_ZdlPv(i8* %70) #20
  %71 = load i64, i64* %8, align 8
  br label %72

72:                                               ; preds = %69, %64, %15
  %73 = phi i64 [ %71, %69 ], [ %49, %64 ], [ %17, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %9) #18
  %74 = load i64, i64* %5, align 8
  %75 = icmp eq i64 %73, %74
  %76 = inttoptr i64 %73 to %"struct.cc::TransformNode"*
  %77 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %76, i64 -1
  %78 = select i1 %75, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %77
  %79 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %78, i64 0, i32 0
  store i32 0, i32* %79, align 8
  %80 = load i64, i64* %8, align 8
  %81 = load i64, i64* %5, align 8
  %82 = icmp eq i64 %80, %81
  %83 = inttoptr i64 %80 to %"struct.cc::TransformNode"*
  %84 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %83, i64 -1
  %85 = select i1 %82, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %84
  %86 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %85, i64 0, i32 1
  store i32 -1, i32* %86, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_13TransformNodeEE16set_needs_updateEb(%"class.cc::PropertyTree"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2cc12PropertyTreeINS_13TransformNodeEE12needs_updateEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN2cc12PropertyTreeINS_13TransformNodeEE5nodesEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK2cc12PropertyTreeINS_13TransformNodeEE5nodesEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2cc12PropertyTreeINS_13TransformNodeEE17next_available_idEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 224
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_13TransformNodeEE16SetPropertyTreesEPNS_13PropertyTreesE(%"class.cc::PropertyTree"*, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 3
  store %"class.cc::PropertyTrees"* %1, %"class.cc::PropertyTrees"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.cc::PropertyTrees"* @_ZNK2cc12PropertyTreeINS_13TransformNodeEE14property_treesEv(%"class.cc::PropertyTree"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 3
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  ret %"class.cc::PropertyTrees"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2cc12PropertyTreeINS_13TransformNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTree"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %3 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %5, align 8
  %7 = icmp eq %"struct.cc::TransformNode"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"struct.cc::TransformNode"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc13TransformNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::TransformNode"* %10, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 1
  %12 = icmp eq %"struct.cc::TransformNode"* %11, %6
  br i1 %12, label %8, label %9
}

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZNK2cc13TransformNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::TransformNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_8ClipNodeEEC2Ev(%"class.cc::PropertyTree.101"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_8ClipNodeEEC5Ev) align 2 {
  %2 = alloca %"struct.cc::ClipNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %5 = bitcast %"struct.cc::ClipNode"* %2 to i8*
  %6 = bitcast %"class.std::__1::vector.102"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %5) #18
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %2) #18
  %7 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %9, align 8
  %11 = icmp ult %"struct.cc::ClipNode"* %8, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %8, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %2) #18
  %13 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %8, i64 1
  %14 = ptrtoint %"struct.cc::ClipNode"* %13 to i64
  %15 = bitcast %"struct.cc::ClipNode"** %7 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.102"* %4, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %2) #18
  %17 = bitcast %"struct.cc::ClipNode"** %7 to i64*
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i64* [ %15, %12 ], [ %17, %16 ]
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %5) #18
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.102"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  %24 = inttoptr i64 %20 to %"struct.cc::ClipNode"*
  %25 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 -1
  %26 = select i1 %23, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %25
  %27 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %26, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = load i64, i64* %19, align 8
  %29 = load i64, i64* %21, align 8
  %30 = icmp eq i64 %28, %29
  %31 = inttoptr i64 %28 to %"struct.cc::ClipNode"*
  %32 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %31, i64 -1
  %33 = select i1 %30, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %32
  %34 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %33, i64 0, i32 1
  store i32 -1, i32* %34, align 4
  ret void
}

declare void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ClipNode"* @_ZN2cc12PropertyTreeINS_8ClipNodeEE4backEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::ClipNode"*
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %10
  ret %"struct.cc::ClipNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_8ClipNodeEED0Ev(%"class.cc::PropertyTree.101"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_8ClipNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %4, align 8
  %6 = icmp eq %"struct.cc::ClipNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::ClipNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %9, align 8
  %11 = icmp eq %"struct.cc::ClipNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::ClipNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %14) #18
  %15 = icmp eq %"struct.cc::ClipNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.102"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::ClipNode"* %5, %"struct.cc::ClipNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %"class.cc::PropertyTree.101"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(48) %"class.cc::PropertyTree.101"* @_ZN2cc12PropertyTreeINS_8ClipNodeEEaSERKS2_(%"class.cc::PropertyTree.101"*, %"class.cc::PropertyTree.101"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.cc::PropertyTree.101"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.102"* %5, %"struct.cc::ClipNode"* %7, %"struct.cc::ClipNode"* %9) #18
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  ret %"class.cc::PropertyTree.101"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.101"*, %"struct.cc::ClipNode"* dereferenceable(184), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %7, align 8
  %9 = icmp eq %"struct.cc::ClipNode"* %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %6, %"struct.cc::ClipNode"* dereferenceable(184) %1) #18
  %11 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %6, i64 1
  %12 = ptrtoint %"struct.cc::ClipNode"* %11 to i64
  %13 = bitcast %"struct.cc::ClipNode"** %5 to i64*
  store i64 %12, i64* %13, align 8
  br label %17

14:                                               ; preds = %3
  tail call void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.102"* %4, %"struct.cc::ClipNode"* dereferenceable(184) %1) #18
  %15 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %5, align 8
  %16 = bitcast %"struct.cc::ClipNode"** %5 to i64*
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi i64* [ %13, %10 ], [ %16, %14 ]
  %19 = phi %"struct.cc::ClipNode"* [ %11, %10 ], [ %15, %14 ]
  %20 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %19, i64 -1, i32 1
  store i32 %2, i32* %20, align 4
  %21 = load i64, i64* %18, align 8
  %22 = bitcast %"class.std::__1::vector.102"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 184
  %26 = trunc i64 %25 to i32
  %27 = add nsw i32 %26, -1
  %28 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %19, i64 -1, i32 0
  store i32 %27, i32* %28, align 8
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ClipNode"* @_ZN2cc12PropertyTreeINS_8ClipNodeEE4NodeEi(%"class.cc::PropertyTree.101"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::ClipNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::ClipNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ClipNode"* @_ZNK2cc12PropertyTreeINS_8ClipNodeEE4NodeEi(%"class.cc::PropertyTree.101"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::ClipNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::ClipNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ClipNode"* @_ZN2cc12PropertyTreeINS_8ClipNodeEE6parentEPKS1_(%"class.cc::PropertyTree.101"*, %"struct.cc::ClipNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::ClipNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::ClipNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ClipNode"* @_ZNK2cc12PropertyTreeINS_8ClipNodeEE6parentEPKS1_(%"class.cc::PropertyTree.101"*, %"struct.cc::ClipNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::ClipNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::ClipNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK2cc12PropertyTreeINS_8ClipNodeEE4sizeEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ClipNode"* @_ZNK2cc12PropertyTreeINS_8ClipNodeEE4backEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::ClipNode"*
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %10
  ret %"struct.cc::ClipNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_8ClipNodeEE5clearEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.cc::ClipNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %7, align 8
  %9 = icmp eq %"struct.cc::ClipNode"* %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"struct.cc::ClipNode"* [ %12, %10 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %11, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %12) #18
  %13 = icmp eq %"struct.cc::ClipNode"* %12, %6
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %1
  store %"struct.cc::ClipNode"* %6, %"struct.cc::ClipNode"** %7, align 8
  %15 = bitcast %"struct.cc::ClipNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %15) #18
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %2) #18
  %16 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %7, align 8
  %17 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %17, align 8
  %19 = icmp ult %"struct.cc::ClipNode"* %16, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %16, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %2) #18
  %21 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %16, i64 1
  %22 = ptrtoint %"struct.cc::ClipNode"* %21 to i64
  %23 = bitcast %"struct.cc::ClipNode"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %26

24:                                               ; preds = %14
  call void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.102"* %4, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %2) #18
  %25 = bitcast %"struct.cc::ClipNode"** %7 to i64*
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi i64* [ %23, %20 ], [ %25, %24 ]
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %15) #18
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.102"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  %32 = inttoptr i64 %28 to %"struct.cc::ClipNode"*
  %33 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %32, i64 -1
  %34 = select i1 %31, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %33
  %35 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %34, i64 0, i32 0
  store i32 0, i32* %35, align 8
  %36 = load i64, i64* %27, align 8
  %37 = load i64, i64* %29, align 8
  %38 = icmp eq i64 %36, %37
  %39 = inttoptr i64 %36 to %"struct.cc::ClipNode"*
  %40 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %39, i64 -1
  %41 = select i1 %38, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %40
  %42 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %41, i64 0, i32 1
  store i32 -1, i32* %42, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_8ClipNodeEE16set_needs_updateEb(%"class.cc::PropertyTree.101"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2cc12PropertyTreeINS_8ClipNodeEE12needs_updateEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector.102"* @_ZN2cc12PropertyTreeINS_8ClipNodeEE5nodesEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.102"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector.102"* @_ZNK2cc12PropertyTreeINS_8ClipNodeEE5nodesEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.102"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2cc12PropertyTreeINS_8ClipNodeEE17next_available_idEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_8ClipNodeEE16SetPropertyTreesEPNS_13PropertyTreesE(%"class.cc::PropertyTree.101"*, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 3
  store %"class.cc::PropertyTrees"* %1, %"class.cc::PropertyTrees"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.cc::PropertyTrees"* @_ZNK2cc12PropertyTreeINS_8ClipNodeEE14property_treesEv(%"class.cc::PropertyTree.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 3
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  ret %"class.cc::PropertyTrees"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2cc12PropertyTreeINS_8ClipNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTree.101"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %5, align 8
  %7 = icmp eq %"struct.cc::ClipNode"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"struct.cc::ClipNode"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc8ClipNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ClipNode"* %10, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %11 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %10, i64 1
  %12 = icmp eq %"struct.cc::ClipNode"* %11, %6
  br i1 %12, label %8, label %9
}

declare void @_ZNK2cc8ClipNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ClipNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10EffectNodeEEC2Ev(%"class.cc::PropertyTree.29"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_10EffectNodeEEC5Ev) align 2 {
  %2 = alloca %"struct.cc::EffectNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %5 = bitcast %"struct.cc::EffectNode"* %2 to i8*
  %6 = bitcast %"class.std::__1::vector.30"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %5) #18
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %2) #18
  %7 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = icmp ult %"struct.cc::EffectNode"* %8, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %8, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2) #18
  %13 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %8, i64 1
  %14 = ptrtoint %"struct.cc::EffectNode"* %13 to i64
  %15 = bitcast %"struct.cc::EffectNode"** %7 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.30"* %4, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2) #18
  %17 = bitcast %"struct.cc::EffectNode"** %7 to i64*
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i64* [ %15, %12 ], [ %17, %16 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %5) #18
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.30"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  %24 = inttoptr i64 %20 to %"struct.cc::EffectNode"*
  %25 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %24, i64 -1
  %26 = select i1 %23, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %25
  %27 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %26, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = load i64, i64* %19, align 8
  %29 = load i64, i64* %21, align 8
  %30 = icmp eq i64 %28, %29
  %31 = inttoptr i64 %28 to %"struct.cc::EffectNode"*
  %32 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %31, i64 -1
  %33 = select i1 %30, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %32
  %34 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 0, i32 1
  store i32 -1, i32* %34, align 4
  ret void
}

declare void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::EffectNode"* @_ZN2cc12PropertyTreeINS_10EffectNodeEE4backEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::EffectNode"*
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %10
  ret %"struct.cc::EffectNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10EffectNodeEED2Ev(%"class.cc::PropertyTree.29"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_10EffectNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %4, align 8
  %6 = icmp eq %"struct.cc::EffectNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::EffectNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = icmp eq %"struct.cc::EffectNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::EffectNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %14) #18
  %15 = icmp eq %"struct.cc::EffectNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.30"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::EffectNode"* %5, %"struct.cc::EffectNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10EffectNodeEED0Ev(%"class.cc::PropertyTree.29"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_10EffectNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %4, align 8
  %6 = icmp eq %"struct.cc::EffectNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::EffectNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = icmp eq %"struct.cc::EffectNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::EffectNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %14) #18
  %15 = icmp eq %"struct.cc::EffectNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.30"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::EffectNode"* %5, %"struct.cc::EffectNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %"class.cc::PropertyTree.29"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(48) %"class.cc::PropertyTree.29"* @_ZN2cc12PropertyTreeINS_10EffectNodeEEaSERKS2_(%"class.cc::PropertyTree.29"*, %"class.cc::PropertyTree.29"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.cc::PropertyTree.29"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.30"* %5, %"struct.cc::EffectNode"* %7, %"struct.cc::EffectNode"* %9) #18
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  ret %"class.cc::PropertyTree.29"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2cc12PropertyTreeINS_10EffectNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.29"*, %"struct.cc::EffectNode"* dereferenceable(288), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %7, align 8
  %9 = icmp eq %"struct.cc::EffectNode"* %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %6, %"struct.cc::EffectNode"* dereferenceable(288) %1) #18
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %6, i64 1
  %12 = ptrtoint %"struct.cc::EffectNode"* %11 to i64
  %13 = bitcast %"struct.cc::EffectNode"** %5 to i64*
  store i64 %12, i64* %13, align 8
  br label %17

14:                                               ; preds = %3
  tail call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"* %4, %"struct.cc::EffectNode"* dereferenceable(288) %1) #18
  %15 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %5, align 8
  %16 = bitcast %"struct.cc::EffectNode"** %5 to i64*
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi i64* [ %13, %10 ], [ %16, %14 ]
  %19 = phi %"struct.cc::EffectNode"* [ %11, %10 ], [ %15, %14 ]
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %19, i64 -1, i32 1
  store i32 %2, i32* %20, align 4
  %21 = load i64, i64* %18, align 8
  %22 = bitcast %"class.std::__1::vector.30"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 288
  %26 = trunc i64 %25 to i32
  %27 = add nsw i32 %26, -1
  %28 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %19, i64 -1, i32 0
  store i32 %27, i32* %28, align 8
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::EffectNode"* @_ZN2cc12PropertyTreeINS_10EffectNodeEE4NodeEi(%"class.cc::PropertyTree.29"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::EffectNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::EffectNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::EffectNode"* @_ZNK2cc12PropertyTreeINS_10EffectNodeEE4NodeEi(%"class.cc::PropertyTree.29"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::EffectNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::EffectNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::EffectNode"* @_ZN2cc12PropertyTreeINS_10EffectNodeEE6parentEPKS1_(%"class.cc::PropertyTree.29"*, %"struct.cc::EffectNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::EffectNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::EffectNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::EffectNode"* @_ZNK2cc12PropertyTreeINS_10EffectNodeEE6parentEPKS1_(%"class.cc::PropertyTree.29"*, %"struct.cc::EffectNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::EffectNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::EffectNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK2cc12PropertyTreeINS_10EffectNodeEE4sizeEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 288
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::EffectNode"* @_ZNK2cc12PropertyTreeINS_10EffectNodeEE4backEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::EffectNode"*
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %10
  ret %"struct.cc::EffectNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10EffectNodeEE5clearEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.cc::EffectNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %7, align 8
  %9 = icmp eq %"struct.cc::EffectNode"* %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"struct.cc::EffectNode"* [ %12, %10 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %11, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %12) #18
  %13 = icmp eq %"struct.cc::EffectNode"* %12, %6
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %1
  store %"struct.cc::EffectNode"* %6, %"struct.cc::EffectNode"** %7, align 8
  %15 = bitcast %"struct.cc::EffectNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %15) #18
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %2) #18
  %16 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %7, align 8
  %17 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %17, align 8
  %19 = icmp ult %"struct.cc::EffectNode"* %16, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %16, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2) #18
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %16, i64 1
  %22 = ptrtoint %"struct.cc::EffectNode"* %21 to i64
  %23 = bitcast %"struct.cc::EffectNode"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %26

24:                                               ; preds = %14
  call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.30"* %4, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2) #18
  %25 = bitcast %"struct.cc::EffectNode"** %7 to i64*
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi i64* [ %23, %20 ], [ %25, %24 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %15) #18
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.30"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  %32 = inttoptr i64 %28 to %"struct.cc::EffectNode"*
  %33 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %32, i64 -1
  %34 = select i1 %31, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %33
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %34, i64 0, i32 0
  store i32 0, i32* %35, align 8
  %36 = load i64, i64* %27, align 8
  %37 = load i64, i64* %29, align 8
  %38 = icmp eq i64 %36, %37
  %39 = inttoptr i64 %36 to %"struct.cc::EffectNode"*
  %40 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %39, i64 -1
  %41 = select i1 %38, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %40
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %41, i64 0, i32 1
  store i32 -1, i32* %42, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10EffectNodeEE16set_needs_updateEb(%"class.cc::PropertyTree.29"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2cc12PropertyTreeINS_10EffectNodeEE12needs_updateEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector.30"* @_ZN2cc12PropertyTreeINS_10EffectNodeEE5nodesEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.30"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector.30"* @_ZNK2cc12PropertyTreeINS_10EffectNodeEE5nodesEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.30"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2cc12PropertyTreeINS_10EffectNodeEE17next_available_idEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 288
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10EffectNodeEE16SetPropertyTreesEPNS_13PropertyTreesE(%"class.cc::PropertyTree.29"*, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 3
  store %"class.cc::PropertyTrees"* %1, %"class.cc::PropertyTrees"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.cc::PropertyTrees"* @_ZNK2cc12PropertyTreeINS_10EffectNodeEE14property_treesEv(%"class.cc::PropertyTree.29"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 3
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  ret %"class.cc::PropertyTrees"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2cc12PropertyTreeINS_10EffectNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTree.29"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %3 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTree.29", %"class.cc::PropertyTree.29"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %5, align 8
  %7 = icmp eq %"struct.cc::EffectNode"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"struct.cc::EffectNode"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::EffectNode"* %10, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 1
  %12 = icmp eq %"struct.cc::EffectNode"* %11, %6
  br i1 %12, label %8, label %9
}

declare void @_ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::EffectNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10ScrollNodeEEC2Ev(%"class.cc::PropertyTree.121"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_10ScrollNodeEEC5Ev) align 2 {
  %2 = alloca %"struct.cc::ScrollNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %5 = bitcast %"struct.cc::ScrollNode"* %2 to i8*
  %6 = bitcast %"class.std::__1::vector.122"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %5) #18
  call void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"* nonnull %2) #18
  %7 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %9, align 8
  %11 = icmp ult %"struct.cc::ScrollNode"* %8, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %8, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2) #18
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %8, i64 1
  %14 = ptrtoint %"struct.cc::ScrollNode"* %13 to i64
  %15 = bitcast %"struct.cc::ScrollNode"** %7 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.122"* %4, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2) #18
  %17 = bitcast %"struct.cc::ScrollNode"** %7 to i64*
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i64* [ %15, %12 ], [ %17, %16 ]
  call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %5) #18
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.122"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  %24 = inttoptr i64 %20 to %"struct.cc::ScrollNode"*
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 -1
  %26 = select i1 %23, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %25
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %26, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = load i64, i64* %19, align 8
  %29 = load i64, i64* %21, align 8
  %30 = icmp eq i64 %28, %29
  %31 = inttoptr i64 %28 to %"struct.cc::ScrollNode"*
  %32 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %31, i64 -1
  %33 = select i1 %30, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %32
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 1
  store i32 -1, i32* %34, align 4
  ret void
}

declare void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ScrollNode"* @_ZN2cc12PropertyTreeINS_10ScrollNodeEE4backEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ScrollNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.122"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::ScrollNode"*
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %10
  ret %"struct.cc::ScrollNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10ScrollNodeEED2Ev(%"class.cc::PropertyTree.121"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_10ScrollNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %4, align 8
  %6 = icmp eq %"struct.cc::ScrollNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::ScrollNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %9, align 8
  %11 = icmp eq %"struct.cc::ScrollNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::ScrollNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %14) #18
  %15 = icmp eq %"struct.cc::ScrollNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.122"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::ScrollNode"* %5, %"struct.cc::ScrollNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10ScrollNodeEED0Ev(%"class.cc::PropertyTree.121"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_10ScrollNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %4, align 8
  %6 = icmp eq %"struct.cc::ScrollNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::ScrollNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %9, align 8
  %11 = icmp eq %"struct.cc::ScrollNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::ScrollNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %14) #18
  %15 = icmp eq %"struct.cc::ScrollNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.122"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::ScrollNode"* %5, %"struct.cc::ScrollNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %"class.cc::PropertyTree.121"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(48) %"class.cc::PropertyTree.121"* @_ZN2cc12PropertyTreeINS_10ScrollNodeEEaSERKS2_(%"class.cc::PropertyTree.121"*, %"class.cc::PropertyTree.121"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.cc::PropertyTree.121"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %5, %"struct.cc::ScrollNode"* %7, %"struct.cc::ScrollNode"* %9) #18
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  ret %"class.cc::PropertyTree.121"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.121"*, %"struct.cc::ScrollNode"* dereferenceable(168), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = icmp eq %"struct.cc::ScrollNode"* %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %6, %"struct.cc::ScrollNode"* dereferenceable(168) %1) #18
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %6, i64 1
  %12 = ptrtoint %"struct.cc::ScrollNode"* %11 to i64
  %13 = bitcast %"struct.cc::ScrollNode"** %5 to i64*
  store i64 %12, i64* %13, align 8
  br label %17

14:                                               ; preds = %3
  tail call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.122"* %4, %"struct.cc::ScrollNode"* dereferenceable(168) %1) #18
  %15 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %5, align 8
  %16 = bitcast %"struct.cc::ScrollNode"** %5 to i64*
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi i64* [ %13, %10 ], [ %16, %14 ]
  %19 = phi %"struct.cc::ScrollNode"* [ %11, %10 ], [ %15, %14 ]
  %20 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %19, i64 -1, i32 1
  store i32 %2, i32* %20, align 4
  %21 = load i64, i64* %18, align 8
  %22 = bitcast %"class.std::__1::vector.122"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 168
  %26 = trunc i64 %25 to i32
  %27 = add nsw i32 %26, -1
  %28 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %19, i64 -1, i32 0
  store i32 %27, i32* %28, align 8
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ScrollNode"* @_ZN2cc12PropertyTreeINS_10ScrollNodeEE4NodeEi(%"class.cc::PropertyTree.121"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::ScrollNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::ScrollNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ScrollNode"* @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE4NodeEi(%"class.cc::PropertyTree.121"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::ScrollNode"* [ %8, %4 ], [ null, %2 ]
  ret %"struct.cc::ScrollNode"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ScrollNode"* @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6parentEPKS1_(%"class.cc::PropertyTree.121"*, %"struct.cc::ScrollNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::ScrollNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::ScrollNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ScrollNode"* @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE6parentEPKS1_(%"class.cc::PropertyTree.121"*, %"struct.cc::ScrollNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::ScrollNode"* [ %10, %6 ], [ null, %2 ]
  ret %"struct.cc::ScrollNode"* %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE4sizeEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ScrollNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.122"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"struct.cc::ScrollNode"* @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE4backEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ScrollNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.122"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.cc::ScrollNode"*
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 -1
  %11 = select i1 %8, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %10
  ret %"struct.cc::ScrollNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10ScrollNodeEE5clearEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.cc::ScrollNode", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = icmp eq %"struct.cc::ScrollNode"* %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"struct.cc::ScrollNode"* [ %12, %10 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %11, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %12) #18
  %13 = icmp eq %"struct.cc::ScrollNode"* %12, %6
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %1
  store %"struct.cc::ScrollNode"* %6, %"struct.cc::ScrollNode"** %7, align 8
  %15 = bitcast %"struct.cc::ScrollNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %15) #18
  call void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"* nonnull %2) #18
  %16 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %17 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %17, align 8
  %19 = icmp ult %"struct.cc::ScrollNode"* %16, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %16, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2) #18
  %21 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 1
  %22 = ptrtoint %"struct.cc::ScrollNode"* %21 to i64
  %23 = bitcast %"struct.cc::ScrollNode"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %26

24:                                               ; preds = %14
  call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.122"* %4, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2) #18
  %25 = bitcast %"struct.cc::ScrollNode"** %7 to i64*
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi i64* [ %23, %20 ], [ %25, %24 ]
  call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %15) #18
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.122"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  %32 = inttoptr i64 %28 to %"struct.cc::ScrollNode"*
  %33 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %32, i64 -1
  %34 = select i1 %31, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %33
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 0, i32 0
  store i32 0, i32* %35, align 8
  %36 = load i64, i64* %27, align 8
  %37 = load i64, i64* %29, align 8
  %38 = icmp eq i64 %36, %37
  %39 = inttoptr i64 %36 to %"struct.cc::ScrollNode"*
  %40 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %39, i64 -1
  %41 = select i1 %38, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %40
  %42 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %41, i64 0, i32 1
  store i32 -1, i32* %42, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10ScrollNodeEE16set_needs_updateEb(%"class.cc::PropertyTree.121"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE12needs_updateEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector.122"* @_ZN2cc12PropertyTreeINS_10ScrollNodeEE5nodesEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.122"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::vector.122"* @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE5nodesEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.122"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE17next_available_idEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::ScrollNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.122"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_10ScrollNodeEE16SetPropertyTreesEPNS_13PropertyTreesE(%"class.cc::PropertyTree.121"*, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 3
  store %"class.cc::PropertyTrees"* %1, %"class.cc::PropertyTrees"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.cc::PropertyTrees"* @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE14property_treesEv(%"class.cc::PropertyTree.121"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 3
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  ret %"class.cc::PropertyTrees"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK2cc12PropertyTreeINS_10ScrollNodeEE11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTree.121"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %3 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTree.121", %"class.cc::PropertyTree.121"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %5, align 8
  %7 = icmp eq %"struct.cc::ScrollNode"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"struct.cc::ScrollNode"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc10ScrollNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ScrollNode"* %10, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 1
  %12 = icmp eq %"struct.cc::ScrollNode"* %11, %6
  br i1 %12, label %8, label %9
}

declare void @_ZNK2cc10ScrollNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ScrollNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTreeC2Ev(%"class.cc::TransformTree"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::TransformCachedNodeData", align 4
  %3 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_13TransformNodeEEC2Ev(%"class.cc::PropertyTree"* %3)
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc13TransformTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 3
  store float 1.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4
  %9 = bitcast %"struct.cc::TransformCachedNodeData"* %2 to i8*
  %10 = bitcast %"class.std::__1::vector.8"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 72, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %9) #18
  call void @_ZN2cc23TransformCachedNodeDataC1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %2) #18
  %11 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 1
  %12 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %13, align 8
  %15 = icmp ult %"struct.cc::TransformCachedNodeData"* %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %1
  call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %12, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %2) #18
  %17 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %12, i64 1
  %18 = ptrtoint %"struct.cc::TransformCachedNodeData"* %17 to i64
  %19 = bitcast %"struct.cc::TransformCachedNodeData"** %11 to i64*
  store i64 %18, i64* %19, align 8
  br label %22

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.15"* %21, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %2) #18
  br label %22

22:                                               ; preds = %16, %20
  call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %9) #18
  ret void
}

declare void @_ZN2cc23TransformCachedNodeDataC1Ev(%"struct.cc::TransformCachedNodeData"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTreeD2Ev(%"class.cc::TransformTree"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc13TransformTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %3, align 8
  %5 = icmp eq %"struct.cc::StickyPositionNodeData"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.cc::StickyPositionNodeData"* %4 to i64
  %8 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast %"struct.cc::StickyPositionNodeData"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.cc::StickyPositionNodeData"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %13, align 8
  %15 = icmp eq %"struct.cc::TransformCachedNodeData"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = bitcast %"struct.cc::TransformCachedNodeData"* %14 to i8*
  %18 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 1
  %19 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %18, align 8
  %20 = icmp eq %"struct.cc::TransformCachedNodeData"* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"struct.cc::TransformCachedNodeData"* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %22, i64 -1
  tail call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* %23) #18
  %24 = icmp eq %"struct.cc::TransformCachedNodeData"* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector.15"* %12 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %"struct.cc::TransformCachedNodeData"* %14, %"struct.cc::TransformCachedNodeData"** %18, align 8
  tail call void @_ZdlPv(i8* %29) #20
  br label %30

30:                                               ; preds = %11, %28
  %31 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint i32* %32 to i64
  %36 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast i32* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #20
  br label %39

39:                                               ; preds = %30, %34
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_13TransformNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %40 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %40, align 8
  %42 = icmp eq %"struct.cc::TransformNode"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"struct.cc::TransformNode"* %41 to i64
  %45 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %46 = bitcast %"struct.cc::TransformNode"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"struct.cc::TransformNode"* %41 to i8*
  tail call void @_ZdlPv(i8* %47) #20
  br label %48

48:                                               ; preds = %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTreeD0Ev(%"class.cc::TransformTree"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc13TransformTreeD2Ev(%"class.cc::TransformTree"* %0) #18
  %2 = bitcast %"class.cc::TransformTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.cc::TransformTree"* @_ZN2cc13TransformTreeaSERKS0_(%"class.cc::TransformTree"* returned, %"class.cc::TransformTree"* readonly dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.cc::TransformTree"* %0, %1
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc13TransformNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"struct.cc::TransformNode"* %7, %"struct.cc::TransformNode"* %9) #18
  %10 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false) #18
  %12 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 1
  %14 = bitcast float* %12 to i8*
  %15 = bitcast float* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 12, i1 false)
  %16 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 4, i32 0, i32 1
  %20 = load i32*, i32** %19, align 8
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.8"* %16, i32* %18, i32* %20) #18
  %21 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 5, i32 0, i32 0
  %23 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 5, i32 0, i32 1
  %25 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %24, align 8
  tail call void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.15"* %21, %"struct.cc::TransformCachedNodeData"* %23, %"struct.cc::TransformCachedNodeData"* %25) #18
  %26 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 6, i32 0, i32 0
  %28 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 6, i32 0, i32 1
  %30 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %29, align 8
  tail call void @_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"* %26, %"struct.cc::StickyPositionNodeData"* %28, %"struct.cc::StickyPositionNodeData"* %30) #18
  br label %38

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #18
  %34 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1, i64 0, i32 1
  %36 = bitcast float* %34 to i8*
  %37 = bitcast float* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 12, i1 false)
  br label %38

38:                                               ; preds = %31, %4
  ret %"class.cc::TransformTree"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc13TransformTree6InsertERKNS_13TransformNodeEi(%"class.cc::TransformTree"*, %"struct.cc::TransformNode"* dereferenceable(224), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cc::TransformCachedNodeData", align 4
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0
  %6 = tail call i32 @_ZN2cc12PropertyTreeINS_13TransformNodeEE6InsertERKS1_i(%"class.cc::PropertyTree"* %5, %"struct.cc::TransformNode"* dereferenceable(224) %1, i32 %2)
  %7 = bitcast %"struct.cc::TransformCachedNodeData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %7) #18
  call void @_ZN2cc23TransformCachedNodeDataC1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %4) #18
  %8 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %10, align 8
  %12 = icmp ult %"struct.cc::TransformCachedNodeData"* %9, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %9, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %4) #18
  %14 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %9, i64 1
  %15 = ptrtoint %"struct.cc::TransformCachedNodeData"* %14 to i64
  %16 = bitcast %"struct.cc::TransformCachedNodeData"** %8 to i64*
  store i64 %15, i64* %16, align 8
  br label %19

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.15"* %18, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %4) #18
  br label %19

19:                                               ; preds = %13, %17
  call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %7) #18
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree5clearEv(%"class.cc::TransformTree"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::TransformCachedNodeData", align 4
  %3 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_13TransformNodeEE5clearEv(%"class.cc::PropertyTree"* %3)
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 3
  store float 1.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::vector.8"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 1
  %16 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %15, align 8
  %17 = icmp eq %"struct.cc::TransformCachedNodeData"* %16, %14
  br i1 %17, label %22, label %18

18:                                               ; preds = %1, %18
  %19 = phi %"struct.cc::TransformCachedNodeData"* [ %20, %18 ], [ %16, %1 ]
  %20 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %19, i64 -1
  tail call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* %20) #18
  %21 = icmp eq %"struct.cc::TransformCachedNodeData"* %20, %14
  br i1 %21, label %22, label %18

22:                                               ; preds = %18, %1
  store %"struct.cc::TransformCachedNodeData"* %14, %"struct.cc::TransformCachedNodeData"** %15, align 8
  %23 = bitcast %"struct.cc::TransformCachedNodeData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %23) #18
  call void @_ZN2cc23TransformCachedNodeDataC1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %2) #18
  %24 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %15, align 8
  %25 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %26 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %25, align 8
  %27 = icmp ult %"struct.cc::TransformCachedNodeData"* %24, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %24, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %2) #18
  %29 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %24, i64 1
  %30 = ptrtoint %"struct.cc::TransformCachedNodeData"* %29 to i64
  %31 = bitcast %"struct.cc::TransformCachedNodeData"** %15 to i64*
  store i64 %30, i64* %31, align 8
  br label %33

32:                                               ; preds = %22
  call void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.15"* %12, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %2) #18
  br label %33

33:                                               ; preds = %28, %32
  call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %23) #18
  %34 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6
  %35 = bitcast %"class.std::__1::vector.22"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 1
  %38 = bitcast %"struct.cc::StickyPositionNodeData"** %37 to i64*
  store i64 %36, i64* %38, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* nocapture, i1 zeroext) unnamed_addr #5 align 2 {
  br i1 %1, label %3, label %13

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %9 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %9, i64 0, i32 15, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  br label %13

13:                                               ; preds = %3, %7, %2
  %14 = zext i1 %1 to i8
  %15 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  store i8 %14, i8* %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees31UpdateTransformTreeUpdateNumberEv(%"class.cc::PropertyTrees"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.cc::TransformNode"* @_ZN2cc13TransformTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::TransformTree"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair"*
  br i1 %12, label %32, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 4
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair"* [ %6, %14 ], [ %28, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair"* %28 to i64
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi i64 [ %31, %30 ], [ %10, %2 ]
  %34 = phi %"struct.std::__1::pair"* [ %28, %30 ], [ %6, %2 ]
  %35 = icmp eq %"struct.std::__1::pair"* %34, %13
  br i1 %35, label %43, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %1
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %42 = ptrtoint %"struct.std::__1::pair"* %41 to i64
  br label %43

43:                                               ; preds = %32, %36, %40
  %44 = phi i64 [ %42, %40 ], [ %33, %32 ], [ %33, %36 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::pair"*
  %46 = icmp eq %"struct.std::__1::pair"* %34, %45
  %47 = select i1 %46, %"struct.std::__1::pair"* %13, %"struct.std::__1::pair"* %34
  %48 = icmp eq %"struct.std::__1::pair"* %47, %13
  br i1 %48, label %58, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %55, align 8
  %57 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %56, i64 %54
  br label %58

58:                                               ; preds = %53, %49, %43
  %59 = phi %"struct.cc::TransformNode"* [ null, %43 ], [ %57, %53 ], [ null, %49 ]
  ret %"struct.cc::TransformNode"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc13TransformTree19OnTransformAnimatedENS_9ElementIdERKN3gfx9TransformE(%"class.cc::TransformTree"* nocapture, i64, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %3
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  br label %33

33:                                               ; preds = %31, %3
  %34 = phi i64 [ %32, %31 ], [ %11, %3 ]
  %35 = phi %"struct.std::__1::pair"* [ %29, %31 ], [ %7, %3 ]
  %36 = icmp eq %"struct.std::__1::pair"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair"*
  %47 = icmp eq %"struct.std::__1::pair"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"* %35
  %49 = icmp eq %"struct.std::__1::pair"* %48, %14
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 %55
  br label %59

59:                                               ; preds = %44, %50, %54
  %60 = phi %"struct.cc::TransformNode"* [ null, %44 ], [ %58, %54 ], [ null, %50 ]
  %61 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %60, i64 0, i32 4
  %62 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %2, i64 0, i32 0
  %64 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %62, %class.SkMatrix44* dereferenceable(68) %63) #18
  br i1 %64, label %83, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.gfx::Transform"* %61 to i8*
  %67 = bitcast %"class.gfx::Transform"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 4 %67, i64 68, i1 false)
  %68 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %60, i64 0, i32 10
  %69 = bitcast i24* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %70, 8193
  store i32 %71, i32* %69, align 4
  %72 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %73 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %72, i64 0, i32 8
  store i8 1, i8* %73, align 1
  %74 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %65
  %78 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %79 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %78, i64 0, i32 15, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 8
  br label %82

82:                                               ; preds = %65, %77
  store i8 1, i8* %74, align 8
  br label %83

83:                                               ; preds = %59, %82
  %84 = phi i1 [ true, %82 ], [ false, %59 ]
  ret i1 %84
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree19ResetChangeTrackingEv(%"class.cc::TransformTree"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 224
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %13, %1
  ret void

13:                                               ; preds = %1, %13
  %14 = phi i64 [ %23, %13 ], [ %7, %1 ]
  %15 = phi i64 [ %21, %13 ], [ 1, %1 ]
  %16 = inttoptr i64 %14 to %"struct.cc::TransformNode"*
  %17 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %16, i64 %15, i32 10
  %18 = bitcast i24* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, -8193
  store i32 %20, i32* %18, align 4
  %21 = add nuw nsw i64 %15, 1
  %22 = load i64, i64* %4, align 8
  %23 = load i64, i64* %6, align 8
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 224
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp slt i64 %21, %27
  br i1 %28, label %13, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::TransformNode"* [ %8, %4 ], [ null, %2 ]
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %16, align 8
  %18 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15
  br label %19

19:                                               ; preds = %9, %14
  %20 = phi %"struct.cc::TransformNode"* [ %18, %14 ], [ null, %9 ]
  %21 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, -1
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 10
  %26 = bitcast i24* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %24, %19
  tail call void @_ZN2cc13TransformTree20UpdateLocalTransformEPNS_13TransformNodeE(%"class.cc::TransformTree"* %0, %"struct.cc::TransformNode"* %10)
  br label %39

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 7
  %33 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 12, i32 0
  %34 = load float, float* %33, align 4
  %35 = fsub float -0.000000e+00, %34
  %36 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 12, i32 1
  %37 = load float, float* %36, align 4
  %38 = fsub float -0.000000e+00, %37
  tail call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* %32, float %35, float %38) #18
  br label %39

39:                                               ; preds = %31, %30
  tail call void @_ZN2cc13TransformTree26UpdateScreenSpaceTransformEPNS_13TransformNodeES2_(%"class.cc::TransformTree"* %0, %"struct.cc::TransformNode"* %10, %"struct.cc::TransformNode"* %20)
  %40 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %20, i64 0, i32 10
  %41 = bitcast i24* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 64
  %44 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 10
  %45 = bitcast i24* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 16
  %48 = or i32 %47, %43
  %49 = icmp ne i32 %48, 0
  %50 = zext i1 %49 to i32
  %51 = shl nuw nsw i32 %50, 6
  %52 = and i32 %46, -65
  %53 = or i32 %51, %52
  store i32 %53, i32* %45, align 4
  tail call void @_ZN2cc13TransformTree14UpdateSnappingEPNS_13TransformNodeE(%"class.cc::TransformTree"* %0, %"struct.cc::TransformNode"* %10)
  %54 = load i32, i32* %41, align 4
  %55 = and i32 %54, 8192
  %56 = icmp eq i32 %55, 0
  %57 = load i32, i32* %45, align 4
  br i1 %56, label %61, label %58

58:                                               ; preds = %39
  %59 = or i32 %57, 8192
  store i32 %59, i32* %45, align 4
  %60 = load i32, i32* %41, align 4
  br label %61

61:                                               ; preds = %39, %58
  %62 = phi i32 [ %59, %58 ], [ %57, %39 ]
  %63 = phi i32 [ %60, %58 ], [ %54, %39 ]
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = and i32 %62, -3
  br label %83

68:                                               ; preds = %61
  %69 = lshr i32 %62, 2
  %70 = and i32 %69, 1
  %71 = and i32 %62, 8
  %72 = icmp ne i32 %71, 0
  %73 = and i32 %63, 8
  %74 = icmp eq i32 %73, 0
  %75 = or i1 %74, %72
  %76 = select i1 %75, i32 %70, i32 0
  %77 = lshr i32 %62, 4
  %78 = and i32 %77, 1
  %79 = or i32 %76, %78
  %80 = shl nuw nsw i32 %79, 1
  %81 = and i32 %62, -3
  %82 = or i32 %80, %81
  br label %83

83:                                               ; preds = %66, %68
  %84 = phi i32 [ %82, %68 ], [ %67, %66 ]
  %85 = shl i32 %84, 1
  %86 = and i32 %85, 65536
  %87 = and i32 %84, -65537
  %88 = or i32 %86, %87
  store i32 %88, i32* %45, align 4
  %89 = icmp eq %"struct.cc::TransformNode"* %20, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = load i32, i32* %41, align 4
  %92 = or i32 %91, %85
  %93 = and i32 %92, 65536
  %94 = or i32 %93, %87
  store i32 %94, i32* %45, align 4
  br label %95

95:                                               ; preds = %83, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree20UpdateLocalTransformEPNS_13TransformNodeE(%"class.cc::TransformTree"* nocapture readonly, %"struct.cc::TransformNode"*) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::Vector2dF"*
  %6 = alloca %"class.gfx::Vector3dF", align 8
  %7 = alloca %"class.gfx::Point3F", align 4
  %8 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %8) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %9 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 6, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 5
  %13 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %12, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = fadd float %11, %14
  %16 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 6, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 5, i32 1
  %19 = load float, float* %18, align 4
  %20 = fadd float %17, %19
  %21 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 5, i32 2
  %22 = load float, float* %21, align 4
  call void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"* nonnull %3, float %15, float %20, float %22) #18
  %23 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %24 = bitcast i24* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 2048
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %30 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %29, align 8
  %31 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %30, i64 0, i32 14
  %32 = bitcast %"class.gfx::Vector2dF"* %31 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  %34 = extractelement <2 x float> %33, i32 1
  br label %35

35:                                               ; preds = %2, %28
  %36 = phi float [ %34, %28 ], [ 0.000000e+00, %2 ]
  %37 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 11, i32 0
  %38 = load float, float* %37, align 4
  %39 = fsub float -0.000000e+00, %38
  %40 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 11, i32 1
  %41 = load float, float* %40, align 4
  %42 = fsub float %36, %41
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %3, float %39, float %42) #18
  %43 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #18
  %44 = call <2 x float> @_ZN2cc13TransformTree20StickyPositionOffsetEPNS_13TransformNodeE(%"class.cc::TransformTree"* %0, %"struct.cc::TransformNode"* %1)
  store <2 x float> %44, <2 x float>* %4, align 8
  call void @_ZN3gfx9Transform9TranslateERKNS_9Vector2dFE(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #18
  %45 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 4
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Transform"* dereferenceable(68) %45) #18
  %46 = bitcast %"class.gfx::Vector3dF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #18
  %47 = bitcast %"class.gfx::Point3F"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %47) #18
  %48 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %7, i64 0, i32 0
  store float 0.000000e+00, float* %48, align 4
  %49 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %7, i64 0, i32 1
  store float 0.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %7, i64 0, i32 2
  store float 0.000000e+00, float* %50, align 4
  %51 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* nonnull dereferenceable(12) %7, %"class.gfx::Point3F"* dereferenceable(12) %12) #18
  %52 = extractvalue { <2 x float>, float } %51, 0
  %53 = extractvalue { <2 x float>, float } %51, 1
  %54 = bitcast %"class.gfx::Vector3dF"* %6 to <2 x float>*
  store <2 x float> %52, <2 x float>* %54, align 8
  %55 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %6, i64 0, i32 2
  store float %53, float* %55, align 8
  call void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %47) #18
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #18
  %56 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 7
  %57 = bitcast %"class.gfx::Transform"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 4 %8, i64 68, i1 false) #18
  %58 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %56, i64 0, i32 0
  %59 = call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* %58, %class.SkMatrix44* null) #18
  %60 = zext i1 %59 to i32
  %61 = load i32, i32* %24, align 4
  %62 = shl nuw nsw i32 %60, 2
  %63 = and i32 %61, -6
  %64 = or i32 %63, %62
  store i32 %64, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %8) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree12UndoSnappingEPNS_13TransformNodeE(%"class.cc::TransformTree"* nocapture readnone, %"struct.cc::TransformNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 7
  %4 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 12, i32 0
  %5 = load float, float* %4, align 4
  %6 = fsub float -0.000000e+00, %5
  %7 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 12, i32 1
  %8 = load float, float* %7, align 4
  %9 = fsub float -0.000000e+00, %8
  tail call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* %3, float %6, float %9) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree26UpdateScreenSpaceTransformEPNS_13TransformNodeES2_(%"class.cc::TransformTree"* nocapture readonly, %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %6) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  %7 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %10, align 8
  %12 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %11, i64 %9, i32 1
  %13 = bitcast %"class.gfx::Transform"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %13, i64 68, i1 false) #18
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %15 = bitcast i24* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = trunc i32 %16 to i8
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  call void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"* nonnull %4) #18
  br label %20

20:                                               ; preds = %19, %3
  %21 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 7
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* dereferenceable(68) %21) #18
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 10
  %23 = bitcast i24* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 8
  %26 = load i32, i32* %15, align 4
  %27 = and i32 %26, -9
  %28 = or i32 %27, %25
  store i32 %28, i32* %15, align 4
  %29 = load i32, i32* %23, align 4
  %30 = and i32 %29, 256
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %20
  %33 = call zeroext i1 @_ZNK3gfx9Transform6IsFlatEv(%"class.gfx::Transform"* %21) #18
  %34 = zext i1 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = load i32, i32* %15, align 4
  br label %37

37:                                               ; preds = %20, %32
  %38 = phi i32 [ %28, %20 ], [ %36, %32 ]
  %39 = phi i32 [ 0, %20 ], [ %35, %32 ]
  %40 = and i32 %38, -257
  %41 = or i32 %40, %39
  store i32 %41, i32* %15, align 4
  %42 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %10, align 8
  %46 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %45, i64 %44, i32 1
  %47 = bitcast %"class.gfx::Transform"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %6, i64 68, i1 false) #18
  %48 = call zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"* nonnull %4) #18
  %49 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %10, align 8
  %50 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %49, i64 %44, i32 2
  %51 = zext i1 %48 to i8
  %52 = load i8, i8* %50, align 4
  %53 = and i8 %52, -2
  %54 = or i8 %53, %51
  store i8 %54, i8* %50, align 4
  %55 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %55) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %56 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %56, align 4
  %57 = load i32, i32* %42, align 8
  %58 = sext i32 %57 to i64
  %59 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %10, align 8
  %60 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %59, i64 %58, i32 1
  %61 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %60, %"class.gfx::Transform"* nonnull %5) #18
  br i1 %61, label %65, label %62

62:                                               ; preds = %37
  %63 = load i32, i32* %15, align 4
  %64 = and i32 %63, -9
  store i32 %64, i32* %15, align 4
  br label %65

65:                                               ; preds = %62, %37
  %66 = load i32, i32* %42, align 8
  %67 = sext i32 %66 to i64
  %68 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %10, align 8
  %69 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %68, i64 %67
  %70 = bitcast %"struct.cc::TransformCachedNodeData"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 4 %55, i64 68, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %55) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree25UpdateAnimationPropertiesEPNS_13TransformNodeES2_(%"class.cc::TransformTree"* nocapture readnone, %"struct.cc::TransformNode"* nocapture, %"struct.cc::TransformNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 10
  %5 = bitcast i24* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 64
  %8 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %9 = bitcast i24* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 16
  %12 = or i32 %11, %7
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  %15 = shl nuw nsw i32 %14, 6
  %16 = and i32 %10, -65
  %17 = or i32 %15, %16
  store i32 %17, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree14UpdateSnappingEPNS_13TransformNodeE(%"class.cc::TransformTree"* nocapture readonly, %"struct.cc::TransformNode"*) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::Vector2dF"*
  %6 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %7 = bitcast i24* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1088
  %10 = icmp eq i32 %9, 1024
  br i1 %10, label %11, label %51

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %15, align 8
  %17 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %16, i64 %14, i32 1, i32 0, i32 1
  %18 = load i8, i8* %17, align 4
  %19 = icmp ugt i8 %18, 3
  %20 = and i32 %8, 8
  %21 = icmp eq i32 %20, 0
  %22 = or i1 %21, %19
  br i1 %22, label %51, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %16, i64 %14, i32 1
  tail call void @_ZN3gfx9Transform26RoundTranslationComponentsEv(%"class.gfx::Transform"* %24) #18
  %25 = load i32, i32* %12, align 8
  %26 = sext i32 %25 to i64
  %27 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %15, align 8
  %28 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %27, i64 %26, i32 0
  %29 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %29) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  %30 = bitcast %"class.gfx::Transform"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 %30, i64 68, i1 false) #18
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Transform"* dereferenceable(68) %24) #18
  %31 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  %32 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  %33 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 1
  %34 = call <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"* nonnull %3) #18
  store <2 x float> %34, <2 x float>* %4, align 8
  %35 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 12
  %36 = bitcast %"class.gfx::Vector2dF"* %35 to <2 x float>*
  store <2 x float> %34, <2 x float>* %36, align 8
  %37 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %5) #18
  br i1 %37, label %50, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %28, i64 0, i32 0
  %40 = load float, float* %32, align 8
  %41 = fsub float -0.000000e+00, %40
  %42 = load float, float* %33, align 4
  %43 = fsub float -0.000000e+00, %42
  %44 = call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4413postTranslateEfff(%class.SkMatrix44* %39, float %41, float %43, float 0.000000e+00) #18
  %45 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 7
  %46 = load float, float* %32, align 8
  %47 = load float, float* %33, align 4
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* %45, float %46, float %47) #18
  %48 = call zeroext i1 @_ZNK3gfx9Transform43IsApproximatelyIdentityOrIntegerTranslationEf(%"class.gfx::Transform"* %45, float 0x3F1A36E2E0000000) #18
  br i1 %48, label %49, label %50

49:                                               ; preds = %38
  call void @_ZN3gfx9Transform26RoundTranslationComponentsEv(%"class.gfx::Transform"* %45) #18
  br label %50

50:                                               ; preds = %38, %49, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %29) #18
  br label %51

51:                                               ; preds = %11, %2, %50
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree22UpdateTransformChangedEPNS_13TransformNodeES2_(%"class.cc::TransformTree"* nocapture readnone, %"struct.cc::TransformNode"* nocapture, %"struct.cc::TransformNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 10
  %5 = bitcast i24* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8192
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %11 = bitcast i24* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 8192
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree45UpdateNodeAndAncestorsAreAnimatedOrInvertibleEPNS_13TransformNodeES2_(%"class.cc::TransformTree"* nocapture readnone, %"struct.cc::TransformNode"* nocapture, %"struct.cc::TransformNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 10
  %5 = bitcast i24* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %10 = bitcast i24* %9 to i32*
  %11 = load i32, i32* %10, align 4
  br i1 %8, label %12, label %14

12:                                               ; preds = %3
  %13 = and i32 %11, -3
  br label %29

14:                                               ; preds = %3
  %15 = lshr i32 %11, 2
  %16 = and i32 %15, 1
  %17 = and i32 %11, 8
  %18 = icmp ne i32 %17, 0
  %19 = and i32 %6, 8
  %20 = icmp eq i32 %19, 0
  %21 = or i1 %20, %18
  %22 = select i1 %21, i32 %16, i32 0
  %23 = lshr i32 %11, 4
  %24 = and i32 %23, 1
  %25 = or i32 %22, %24
  %26 = shl nuw nsw i32 %25, 1
  %27 = and i32 %11, -3
  %28 = or i32 %26, %27
  br label %29

29:                                               ; preds = %14, %12
  %30 = phi i32 [ %28, %14 ], [ %13, %12 ]
  store i32 %30, i32* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree40UpdateNodeOrAncestorsWillChangeTransformEPNS_13TransformNodeES2_(%"class.cc::TransformTree"* nocapture readnone, %"struct.cc::TransformNode"* nocapture, %"struct.cc::TransformNode"* readonly) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %5 = bitcast i24* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 1
  %8 = and i32 %7, 65536
  %9 = and i32 %6, -65537
  %10 = or i32 %8, %9
  store i32 %10, i32* %5, align 4
  %11 = icmp eq %"struct.cc::TransformNode"* %2, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 10
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, %7
  %17 = and i32 %16, 65536
  %18 = or i32 %17, %9
  store i32 %18, i32* %5, align 4
  br label %19

19:                                               ; preds = %3, %12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc13TransformTree12IsDescendantEii(%"class.cc::TransformTree"* nocapture readonly, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = icmp eq i32 %1, %2
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %16
  %8 = phi i32 [ %1, %5 ], [ %19, %16 ]
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = icmp sgt i32 %8, -1
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = sext i32 %8 to i64
  %14 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %15 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 %13
  br label %16

16:                                               ; preds = %10, %12
  %17 = phi %"struct.cc::TransformNode"* [ %15, %12 ], [ null, %10 ]
  %18 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %2
  br i1 %20, label %21, label %7

21:                                               ; preds = %7, %16, %3
  %22 = phi i1 [ true, %3 ], [ true, %16 ], [ false, %7 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc13TransformTree24CombineTransformsBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* nocapture readonly, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.8", align 8
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = icmp sgt i32 %1, -1
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %11, i64 %9
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"struct.cc::TransformNode"* [ %12, %8 ], [ null, %4 ]
  %15 = icmp sgt i32 %2, -1
  br i1 %15, label %16, label %40

16:                                               ; preds = %13
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %18, align 8
  %20 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %19, i64 %17
  %21 = icmp eq %"struct.cc::TransformNode"* %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %19, i64 %17, i32 10
  %24 = bitcast i24* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 264
  %27 = icmp eq i32 %26, 264
  br i1 %27, label %28, label %47

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %32, align 8
  %34 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %33, i64 %31, i32 1
  tail call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* dereferenceable(68) %34) #18
  %35 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %20, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %32, align 8
  %39 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %38, i64 %37, i32 0
  tail call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* dereferenceable(68) %39) #18
  br label %202

40:                                               ; preds = %16, %13
  %41 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %45 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %44, align 8
  %46 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %45, i64 %43, i32 1
  tail call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* dereferenceable(68) %46) #18
  br label %202

47:                                               ; preds = %22
  %48 = bitcast %"class.std::__1::vector.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #18
  %49 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #18
  %52 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 0, i32 0
  %53 = bitcast i32** %50 to i64*
  %54 = bitcast %"class.std::__1::vector.8"* %5 to i64*
  %55 = bitcast i32** %51 to i64*
  %56 = tail call i8* @_Znwm(i64 4) #20
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds i8, i8* %56, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = ptrtoint i8* %58 to i64
  %61 = load i32, i32* %52, align 4
  store i32 %61, i32* %57, align 4
  %62 = ptrtoint i8* %56 to i64
  store i64 %62, i64* %54, align 8
  store i64 %60, i64* %53, align 8
  store i64 %60, i64* %55, align 8
  %63 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, -1
  br i1 %65, label %66, label %145

66:                                               ; preds = %47
  %67 = sext i32 %64 to i64
  %68 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %19, i64 %67
  %69 = icmp eq %"struct.cc::TransformNode"* %68, null
  br i1 %69, label %145, label %70

70:                                               ; preds = %66
  %71 = bitcast i32** %50 to i64*
  %72 = bitcast %"class.std::__1::vector.8"* %5 to i64*
  %73 = bitcast i32** %51 to i64*
  br label %74

74:                                               ; preds = %70, %140
  %75 = phi i64 [ %60, %70 ], [ %135, %140 ]
  %76 = phi i32* [ %59, %70 ], [ %136, %140 ]
  %77 = phi %"struct.cc::TransformNode"* [ %68, %70 ], [ %143, %140 ]
  %78 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, %2
  br i1 %80, label %81, label %145

81:                                               ; preds = %74
  %82 = load i32*, i32** %51, align 8
  %83 = icmp eq i32* %76, %82
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  store i32 %79, i32* %76, align 4
  %85 = getelementptr inbounds i32, i32* %76, i64 1
  %86 = ptrtoint i32* %85 to i64
  store i64 %86, i64* %71, align 8
  br label %134

87:                                               ; preds = %81
  %88 = ptrtoint i32* %82 to i64
  %89 = load i64, i64* %72, align 8
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 2
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 4611686018427387903
  br i1 %93, label %94, label %96

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::vector.8"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %95) #19
  unreachable

96:                                               ; preds = %87
  %97 = icmp ult i64 %91, 2305843009213693951
  br i1 %97, label %98, label %106

98:                                               ; preds = %96
  %99 = ashr exact i64 %90, 1
  %100 = icmp ult i64 %99, %92
  %101 = select i1 %100, i64 %92, i64 %99
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %98
  %104 = icmp ugt i64 %101, 4611686018427387903
  br i1 %104, label %105, label %106

105:                                              ; preds = %103
  tail call void @abort() #19
  unreachable

106:                                              ; preds = %103, %96
  %107 = phi i64 [ %101, %103 ], [ 4611686018427387903, %96 ]
  %108 = shl i64 %107, 2
  %109 = tail call i8* @_Znwm(i64 %108) #20
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %78, align 4
  br label %112

112:                                              ; preds = %106, %98
  %113 = phi i32 [ %111, %106 ], [ %79, %98 ]
  %114 = phi i64 [ %107, %106 ], [ 0, %98 ]
  %115 = phi i32* [ %110, %106 ], [ null, %98 ]
  %116 = getelementptr inbounds i32, i32* %115, i64 %91
  %117 = getelementptr inbounds i32, i32* %115, i64 %114
  %118 = ptrtoint i32* %117 to i64
  store i32 %113, i32* %116, align 4
  %119 = getelementptr inbounds i32, i32* %116, i64 1
  %120 = ptrtoint i32* %119 to i64
  %121 = sub i64 %75, %89
  %122 = ashr exact i64 %121, 2
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds i32, i32* %116, i64 %123
  %125 = ptrtoint i32* %124 to i64
  %126 = icmp sgt i64 %121, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %112
  %128 = bitcast i32* %124 to i8*
  %129 = inttoptr i64 %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %129, i64 %121, i1 false) #18
  br label %130

130:                                              ; preds = %127, %112
  store i64 %125, i64* %72, align 8
  store i64 %120, i64* %71, align 8
  store i64 %118, i64* %73, align 8
  %131 = icmp eq i64 %89, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = inttoptr i64 %89 to i8*
  tail call void @_ZdlPv(i8* %133) #20
  br label %134

134:                                              ; preds = %84, %130, %132
  %135 = phi i64 [ %86, %84 ], [ %120, %130 ], [ %120, %132 ]
  %136 = phi i32* [ %85, %84 ], [ %119, %130 ], [ %119, %132 ]
  %137 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %77, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %140, label %145

140:                                              ; preds = %134
  %141 = sext i32 %138 to i64
  %142 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %18, align 8
  %143 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %142, i64 %141
  %144 = icmp eq %"struct.cc::TransformNode"* %143, null
  br i1 %144, label %145, label %74

145:                                              ; preds = %134, %74, %140, %47, %66
  %146 = phi i64 [ %60, %66 ], [ %60, %47 ], [ %135, %134 ], [ %135, %140 ], [ %75, %74 ]
  %147 = phi %"struct.cc::TransformNode"* [ null, %66 ], [ null, %47 ], [ null, %134 ], [ null, %140 ], [ %77, %74 ]
  %148 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %148) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %148, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %148, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %149 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %6, i64 0, i32 0, i32 1
  store i8 0, i8* %149, align 4
  %150 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %147, i64 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp slt i32 %151, %2
  br i1 %152, label %155, label %153

153:                                              ; preds = %145
  %154 = bitcast i32** %50 to i64*
  br label %159

155:                                              ; preds = %145
  %156 = call zeroext i1 @_ZNK2cc13TransformTree22CombineInversesBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* %0, i32 %151, i32 %2, %"class.gfx::Transform"* nonnull %6)
  %157 = bitcast i32** %50 to i64*
  %158 = load i64, i64* %157, align 8
  br label %159

159:                                              ; preds = %153, %155
  %160 = phi i64* [ %154, %153 ], [ %157, %155 ]
  %161 = phi i64 [ %146, %153 ], [ %158, %155 ]
  %162 = bitcast %"class.std::__1::vector.8"* %5 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = sub i64 %161, %163
  %165 = ashr exact i64 %164, 2
  %166 = icmp eq i64 %164, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %159
  %168 = inttoptr i64 %163 to i32*
  br label %176

169:                                              ; preds = %196, %159
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %148) #18
  %170 = load i32*, i32** %49, align 8
  %171 = icmp eq i32* %170, null
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = ptrtoint i32* %170 to i64
  store i64 %173, i64* %160, align 8
  %174 = bitcast i32* %170 to i8*
  call void @_ZdlPv(i8* %174) #20
  br label %175

175:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #18
  br label %202

176:                                              ; preds = %200, %167
  %177 = phi i32* [ %168, %167 ], [ %201, %200 ]
  %178 = phi i64 [ 0, %167 ], [ %198, %200 ]
  %179 = xor i64 %178, -1
  %180 = add i64 %165, %179
  %181 = getelementptr inbounds i32, i32* %177, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = icmp sgt i32 %182, -1
  br i1 %183, label %184, label %188

184:                                              ; preds = %176
  %185 = sext i32 %182 to i64
  %186 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %18, align 8
  %187 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %186, i64 %185
  br label %188

188:                                              ; preds = %176, %184
  %189 = phi %"struct.cc::TransformNode"* [ %187, %184 ], [ null, %176 ]
  %190 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %189, i64 0, i32 10
  %191 = bitcast i24* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = trunc i32 %192 to i8
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  call void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"* nonnull %6) #18
  br label %196

196:                                              ; preds = %195, %188
  %197 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %189, i64 0, i32 7
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %6, %"class.gfx::Transform"* dereferenceable(68) %197) #18
  %198 = add nuw i64 %178, 1
  %199 = icmp ult i64 %198, %165
  br i1 %199, label %200, label %169

200:                                              ; preds = %196
  %201 = load i32*, i32** %49, align 8
  br label %176

202:                                              ; preds = %28, %40, %175
  ret void
}

declare void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %4, align 8
  %6 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %5, i64 %3, i32 1
  ret %"class.gfx::Transform"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree10FromScreenEi(%"class.cc::TransformTree"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %4, align 8
  %6 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %5, i64 %3, i32 0
  ret %"class.gfx::Transform"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc13TransformTree22CombineInversesBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* nocapture readonly, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = icmp sgt i32 %2, -1
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %11, i64 %9
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"struct.cc::TransformNode"* [ %12, %8 ], [ null, %4 ]
  %15 = icmp sgt i32 %1, -1
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = sext i32 %1 to i64
  %18 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %18, align 8
  %20 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %19, i64 %17
  br label %21

21:                                               ; preds = %13, %16
  %22 = phi %"struct.cc::TransformNode"* [ %20, %16 ], [ null, %13 ]
  %23 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 0, i32 10
  %24 = bitcast i24* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 264
  %27 = icmp eq i32 %26, 264
  br i1 %27, label %28, label %42

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %14, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %32, align 8
  %34 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %33, i64 %31, i32 0
  tail call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* dereferenceable(68) %34) #18
  %35 = icmp eq %"struct.cc::TransformNode"* %22, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %22, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %32, align 8
  %41 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %40, i64 %39, i32 1
  tail call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* dereferenceable(68) %41) #18
  br label %48

42:                                               ; preds = %21
  %43 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %43) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %44 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %44, align 4
  call void @_ZNK2cc13TransformTree24CombineTransformsBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* %0, i32 %2, i32 %1, %"class.gfx::Transform"* nonnull %5)
  %45 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %45) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %46 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %6, i64 0, i32 0, i32 1
  store i8 0, i8* %46, align 4
  %47 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %5, %"class.gfx::Transform"* nonnull %6) #18
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %45) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %43) #18
  br label %48

48:                                               ; preds = %36, %28, %42
  %49 = phi i1 [ %47, %42 ], [ true, %28 ], [ true, %36 ]
  ret i1 %49
}

declare void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc13TransformTree20StickyPositionOffsetEPNS_13TransformNodeE(%"class.cc::TransformTree"* nocapture readonly, %"struct.cc::TransformNode"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.gfx::RectF", align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Vector2dF"*
  %9 = alloca %"class.gfx::Vector2dF", align 4
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %15, align 8
  %17 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %16, i64 %14
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi %"struct.cc::TransformNode"* [ %17, %13 ], [ null, %2 ]
  %20 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %19, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %333, label %23

23:                                               ; preds = %18
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 0
  %26 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %25, align 8
  %27 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24
  %28 = icmp eq %"struct.cc::StickyPositionNodeData"* %27, null
  br i1 %28, label %333, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %31 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %27, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %30, align 8
  %36 = sext i32 %32 to i64
  %37 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %35, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %38 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %37, align 8
  %39 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %38, i64 %36
  br label %40

40:                                               ; preds = %29, %34
  %41 = phi %"struct.cc::ScrollNode"* [ %39, %34 ], [ null, %29 ]
  %42 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %41, i64 0, i32 9
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %48 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %47, align 8
  %49 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %48, i64 %46
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi %"struct.cc::TransformNode"* [ %49, %45 ], [ null, %40 ]
  %52 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %51, i64 0, i32 11, i32 0
  %53 = bitcast float* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %51, i64 0, i32 10
  %56 = bitcast i24* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 512
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %51, i64 0, i32 12, i32 0
  %62 = bitcast float* %61 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 4
  %64 = fsub <2 x float> %54, %63
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi <2 x float> [ %54, %50 ], [ %64, %60 ]
  %67 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #18
  %68 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 1
  %72 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 5
  %73 = bitcast %"class.gfx::RectF"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %73, i64 16, i1 false)
  %74 = extractelement <2 x float> %66, i32 0
  %75 = extractelement <2 x float> %66, i32 1
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nonnull %6, float %74, float %75) #18
  %76 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %41, i64 0, i32 5
  %77 = load i8, i8* %76, align 4
  %78 = and i8 %77, 8
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %95, label %80

80:                                               ; preds = %65
  %81 = load float, float* %70, align 4
  %82 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %30, align 8
  %83 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %82, i64 0, i32 14
  %84 = bitcast %"class.gfx::Vector2dF"* %83 to <2 x float>*
  %85 = load <2 x float>, <2 x float>* %84, align 4
  %86 = extractelement <2 x float> %85, i32 0
  %87 = fadd float %81, %86
  %88 = fcmp ogt float %87, 0x3EB0000000000000
  %89 = select i1 %88, float %87, float 0.000000e+00
  store float %89, float* %70, align 4
  %90 = load float, float* %71, align 4
  %91 = extractelement <2 x float> %85, i32 1
  %92 = fadd float %91, %90
  %93 = fcmp ogt float %92, 0x3EB0000000000000
  %94 = select i1 %93, float %92, float 0.000000e+00
  store float %94, float* %71, align 4
  br label %95

95:                                               ; preds = %65, %80
  %96 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %137, label %99

99:                                               ; preds = %95
  %100 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %30, align 8
  %101 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %100, i64 0, i32 3, i32 0, i32 1
  %102 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %100, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %103 = bitcast %"struct.cc::TransformNode"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector"* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = sdiv exact i64 %107, 224
  %109 = trunc i64 %108 to i32
  %110 = icmp slt i32 %97, %109
  br i1 %110, label %111, label %331

111:                                              ; preds = %99
  %112 = icmp sgt i32 %97, -1
  br i1 %112, label %113, label %118

113:                                              ; preds = %111
  %114 = sext i32 %97 to i64
  %115 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %116 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %115, align 8
  %117 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %116, i64 %114
  br label %118

118:                                              ; preds = %113, %111
  %119 = phi %"struct.cc::TransformNode"* [ %117, %113 ], [ null, %111 ]
  %120 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %119, i64 0, i32 8
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = sext i32 %121 to i64
  %125 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %25, align 8
  %126 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %125, i64 %124
  br label %127

127:                                              ; preds = %118, %123
  %128 = phi %"struct.cc::StickyPositionNodeData"* [ %126, %123 ], [ null, %118 ]
  %129 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %128, i64 0, i32 4
  %130 = bitcast %"class.gfx::Vector2dF"* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = bitcast i32 %131 to float
  %133 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %128, i64 0, i32 4, i32 1
  %134 = bitcast float* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = bitcast i32 %135 to float
  br label %137

137:                                              ; preds = %95, %127
  %138 = phi float [ 0.000000e+00, %95 ], [ %132, %127 ]
  %139 = phi i32 [ 0, %95 ], [ %131, %127 ]
  %140 = phi float [ 0.000000e+00, %95 ], [ %136, %127 ]
  %141 = phi i32 [ 0, %95 ], [ %135, %127 ]
  %142 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #18
  %143 = bitcast i64* %7 to float*
  %144 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 1
  store float 0.000000e+00, float* %143, align 8
  store float 0.000000e+00, float* %144, align 4
  %145 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, -1
  br i1 %147, label %186, label %148

148:                                              ; preds = %137
  %149 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %30, align 8
  %150 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %149, i64 0, i32 3, i32 0, i32 1
  %151 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %149, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %152 = bitcast %"struct.cc::TransformNode"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.std::__1::vector"* %150 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %153, %155
  %157 = sdiv exact i64 %156, 224
  %158 = trunc i64 %157 to i32
  %159 = icmp slt i32 %146, %158
  br i1 %159, label %160, label %329

160:                                              ; preds = %148
  %161 = icmp sgt i32 %146, -1
  br i1 %161, label %162, label %167

162:                                              ; preds = %160
  %163 = sext i32 %146 to i64
  %164 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %165 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %164, align 8
  %166 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %165, i64 %163
  br label %167

167:                                              ; preds = %162, %160
  %168 = phi %"struct.cc::TransformNode"* [ %166, %162 ], [ null, %160 ]
  %169 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %168, i64 0, i32 8
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, -1
  br i1 %171, label %176, label %172

172:                                              ; preds = %167
  %173 = sext i32 %170 to i64
  %174 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %25, align 8
  %175 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %174, i64 %173
  br label %176

176:                                              ; preds = %167, %172
  %177 = phi %"struct.cc::StickyPositionNodeData"* [ %175, %172 ], [ null, %167 ]
  %178 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %177, i64 0, i32 5
  %179 = bitcast %"class.gfx::Vector2dF"* %178 to i64*
  %180 = load i64, i64* %179, align 4
  store i64 %180, i64* %7, align 8
  %181 = trunc i64 %180 to i32
  %182 = bitcast i32 %181 to float
  %183 = lshr i64 %180, 32
  %184 = trunc i64 %183 to i32
  %185 = bitcast i32 %184 to float
  br label %186

186:                                              ; preds = %137, %176
  %187 = phi float [ 0.000000e+00, %137 ], [ %185, %176 ]
  %188 = phi float [ 0.000000e+00, %137 ], [ %182, %176 ]
  %189 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 6, i32 0, i32 0
  %190 = load float, float* %189, align 4
  %191 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 6, i32 0, i32 1
  %192 = load float, float* %191, align 4
  %193 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 6, i32 1, i32 0
  %194 = load float, float* %193, align 4
  %195 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 6, i32 1, i32 1
  %196 = load float, float* %195, align 4
  %197 = fadd float %138, %190
  %198 = fadd float %140, %192
  %199 = fcmp ogt float %194, 0x3EB0000000000000
  %200 = fcmp ogt float %196, 0x3EB0000000000000
  %201 = fadd float %197, %188
  %202 = fadd float %198, %187
  %203 = select i1 %199, float %194, float 0.000000e+00
  %204 = select i1 %200, float %196, float 0.000000e+00
  %205 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 7, i32 0, i32 0
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 7, i32 0, i32 1
  %208 = load float, float* %207, align 4
  %209 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 7, i32 1, i32 0
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 7, i32 1, i32 1
  %212 = load float, float* %211, align 4
  %213 = fadd float %188, %206
  %214 = fadd float %187, %208
  %215 = fcmp ogt float %210, 0x3EB0000000000000
  %216 = select i1 %215, float %210, float 0.000000e+00
  %217 = fcmp ogt float %212, 0x3EB0000000000000
  %218 = select i1 %217, float %212, float 0.000000e+00
  %219 = bitcast %"class.gfx::Vector2dF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #18
  %220 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %9, i64 0, i32 0
  %221 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %9, i64 0, i32 1
  store float 0.000000e+00, float* %220, align 4
  store float 0.000000e+00, float* %221, align 4
  %222 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 0
  %223 = load i8, i8* %222, align 8
  %224 = and i8 %223, 2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %243, label %226

226:                                              ; preds = %186
  %227 = load float, float* %68, align 4
  %228 = load float, float* %70, align 4
  %229 = fadd float %227, %228
  %230 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 2
  %231 = load float, float* %230, align 8
  %232 = fsub float %229, %231
  %233 = fadd float %203, %201
  %234 = fsub float %232, %233
  %235 = fcmp olt float %234, 0.000000e+00
  %236 = select i1 %235, float %234, float 0.000000e+00
  %237 = fsub float %213, %201
  %238 = fcmp olt float %237, 0.000000e+00
  %239 = select i1 %238, float %237, float 0.000000e+00
  %240 = fcmp olt float %236, %239
  %241 = select i1 %240, float %239, float %236
  %242 = fadd float %241, 0.000000e+00
  store float %242, float* %220, align 4
  br label %243

243:                                              ; preds = %186, %226
  %244 = phi float [ 0.000000e+00, %186 ], [ %242, %226 ]
  %245 = and i8 %223, 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %263, label %247

247:                                              ; preds = %243
  %248 = load float, float* %68, align 4
  %249 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 1
  %250 = load float, float* %249, align 4
  %251 = fadd float %248, %250
  %252 = fsub float %251, %201
  %253 = fcmp ogt float %252, 0.000000e+00
  %254 = select i1 %253, float %252, float 0.000000e+00
  %255 = fadd float %213, %216
  %256 = fadd float %203, %201
  %257 = fsub float %255, %256
  %258 = fcmp ogt float %257, 0.000000e+00
  %259 = select i1 %258, float %257, float 0.000000e+00
  %260 = fcmp ogt float %254, %259
  %261 = select i1 %260, float %259, float %254
  %262 = fadd float %244, %261
  store float %262, float* %220, align 4
  br label %263

263:                                              ; preds = %243, %247
  %264 = and i8 %223, 8
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %283, label %266

266:                                              ; preds = %263
  %267 = load float, float* %69, align 4
  %268 = load float, float* %71, align 4
  %269 = fadd float %267, %268
  %270 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 4
  %271 = load float, float* %270, align 8
  %272 = fsub float %269, %271
  %273 = fadd float %204, %202
  %274 = fsub float %272, %273
  %275 = fcmp olt float %274, 0.000000e+00
  %276 = select i1 %275, float %274, float 0.000000e+00
  %277 = fsub float %214, %202
  %278 = fcmp olt float %277, 0.000000e+00
  %279 = select i1 %278, float %277, float 0.000000e+00
  %280 = fcmp olt float %276, %279
  %281 = select i1 %280, float %279, float %276
  %282 = fadd float %281, 0.000000e+00
  store float %282, float* %221, align 4
  br label %283

283:                                              ; preds = %263, %266
  %284 = phi float [ 0.000000e+00, %263 ], [ %282, %266 ]
  %285 = and i8 %223, 4
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %303, label %287

287:                                              ; preds = %283
  %288 = load float, float* %69, align 4
  %289 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 1, i32 3
  %290 = load float, float* %289, align 4
  %291 = fadd float %288, %290
  %292 = fsub float %291, %202
  %293 = fcmp ogt float %292, 0.000000e+00
  %294 = select i1 %293, float %292, float 0.000000e+00
  %295 = fadd float %214, %218
  %296 = fadd float %204, %202
  %297 = fsub float %295, %296
  %298 = fcmp ogt float %297, 0.000000e+00
  %299 = select i1 %298, float %297, float 0.000000e+00
  %300 = fcmp ogt float %294, %299
  %301 = select i1 %300, float %299, float %294
  %302 = fadd float %284, %301
  store float %302, float* %221, align 4
  br label %303

303:                                              ; preds = %283, %287
  %304 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304)
  %305 = bitcast i64* %3 to %"class.gfx::Vector2dF"*
  %306 = bitcast i64* %3 to float*
  store float %138, float* %306, align 8
  %307 = getelementptr inbounds i8, i8* %304, i64 4
  %308 = bitcast i8* %307 to float*
  store float %140, float* %308, align 4
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %305, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9) #18
  %309 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304)
  %310 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 4
  %311 = bitcast %"class.gfx::Vector2dF"* %310 to i64*
  store i64 %309, i64* %311, align 8
  %312 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %312)
  %313 = bitcast i64* %4 to %"class.gfx::Vector2dF"*
  %314 = bitcast i64* %4 to i32*
  store i32 %139, i32* %314, align 8
  %315 = getelementptr inbounds i8, i8* %312, i64 4
  %316 = bitcast i8* %315 to i32*
  store i32 %141, i32* %316, align 4
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %313, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %8) #18
  %317 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312)
  %318 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318)
  %319 = bitcast i64* %5 to %"class.gfx::Vector2dF"*
  store i64 %317, i64* %5, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %319, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9) #18
  %320 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318)
  %321 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %26, i64 %24, i32 5
  %322 = bitcast %"class.gfx::Vector2dF"* %321 to i64*
  store i64 %320, i64* %322, align 8
  %323 = load float, float* %220, align 4
  %324 = call float @llvm.round.f32(float %323)
  %325 = load float, float* %221, align 4
  %326 = call float @llvm.round.f32(float %325)
  %327 = insertelement <2 x float> undef, float %324, i32 0
  %328 = insertelement <2 x float> %327, float %326, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #18
  br label %329

329:                                              ; preds = %148, %303
  %330 = phi <2 x float> [ %328, %303 ], [ zeroinitializer, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #18
  br label %331

331:                                              ; preds = %99, %329
  %332 = phi <2 x float> [ %330, %329 ], [ zeroinitializer, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #18
  br label %333

333:                                              ; preds = %18, %23, %331
  %334 = phi <2 x float> [ %332, %331 ], [ zeroinitializer, %23 ], [ zeroinitializer, %18 ]
  ret <2 x float> %334
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.cc::StickyPositionNodeData"* @_ZN2cc13TransformTree25MutableStickyPositionDataEi(%"class.cc::TransformTree"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::TransformNode"* [ %8, %4 ], [ null, %2 ]
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 0
  %17 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %16, align 8
  %18 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %17, i64 %15
  br label %19

19:                                               ; preds = %9, %14
  %20 = phi %"struct.cc::StickyPositionNodeData"* [ %18, %14 ], [ null, %9 ]
  ret %"struct.cc::StickyPositionNodeData"* %20
}

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

declare void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #2

declare void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #2

declare void @_ZN3gfx9Transform9TranslateERKNS_9Vector2dFE(%"class.gfx::Transform"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

declare { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12), %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform6IsFlatEv(%"class.gfx::Transform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree11SetToScreenEiRKN3gfx9TransformE(%"class.cc::TransformTree"* nocapture readonly, i32, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %5, align 8
  %7 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %6, i64 %4, i32 1
  %8 = bitcast %"class.gfx::Transform"* %7 to i8*
  %9 = bitcast %"class.gfx::Transform"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 68, i1 false)
  %10 = tail call zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"* %2) #18
  %11 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %5, align 8
  %12 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %11, i64 %4, i32 2
  %13 = zext i1 %10 to i8
  %14 = load i8, i8* %12, align 4
  %15 = and i8 %14, -2
  %16 = or i8 %15, %13
  store i8 %16, i8* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree13SetFromScreenEiRKN3gfx9TransformE(%"class.cc::TransformTree"* nocapture readonly, i32, %"class.gfx::Transform"* nocapture readonly dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %5, align 8
  %7 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %6, i64 %4
  %8 = bitcast %"struct.cc::TransformCachedNodeData"* %7 to i8*
  %9 = bitcast %"class.gfx::Transform"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 68, i1 false)
  ret void
}

declare void @_ZN3gfx9Transform26RoundTranslationComponentsEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #2

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4413postTranslateEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform43IsApproximatelyIdentityOrIntegerTranslationEf(%"class.gfx::Transform"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree24SetRootScaleAndTransformEfRKN3gfx9TransformE(%"class.cc::TransformTree"* nocapture, float, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #7 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 2
  store float %1, float* %9, align 4
  %10 = tail call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68) %2, float 1.000000e+00) #18
  %11 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  %12 = extractelement <2 x float> %10, i32 0
  store float %12, float* %4, align 4
  %13 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  %14 = extractelement <2 x float> %10, i32 1
  store float %14, float* %5, align 4
  %15 = fcmp olt float %12, %14
  %16 = select i1 %15, float* %5, float* %4
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 3
  %20 = bitcast float* %19 to i32*
  store i32 %18, i32* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  %21 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %21) #18
  %22 = bitcast %"class.gfx::Transform"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %22, i64 68, i1 false) #18
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %6, float %1, float %1) #18
  %23 = call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* nonnull dereferenceable(68) %6, float %1) #18
  %24 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %24) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %25, align 4
  %26 = extractelement <2 x float> %23, i32 0
  %27 = extractelement <2 x float> %23, i32 1
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %7, float %26, float %27) #18
  %28 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %28) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %29 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %8, i64 0, i32 0, i32 1
  store i8 0, i8* %29, align 4
  %30 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Transform"* nonnull %8) #18
  %31 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 5, i32 0, i32 0
  %32 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %31, align 8
  %33 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %32, i64 0, i32 1, i32 0
  %35 = call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %34, %class.SkMatrix44* nonnull dereferenceable(68) %33) #18
  br i1 %35, label %59, label %36

36:                                               ; preds = %3
  %37 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %31, align 8
  %38 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %37, i64 0, i32 1
  %39 = bitcast %"class.gfx::Transform"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* nonnull align 4 %24, i64 68, i1 false) #18
  %40 = call zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"* nonnull %7) #18
  %41 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %31, align 8
  %42 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %41, i64 0, i32 2
  %43 = zext i1 %40 to i8
  %44 = load i8, i8* %42, align 4
  %45 = and i8 %44, -2
  %46 = or i8 %45, %43
  store i8 %46, i8* %42, align 4
  %47 = bitcast %"struct.cc::TransformCachedNodeData"** %31 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* nonnull align 4 %28, i64 68, i1 false) #18
  %49 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %54 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %53, align 8
  %55 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %54, i64 0, i32 15, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %55, align 8
  br label %58

58:                                               ; preds = %36, %52
  store i8 1, i8* %49, align 8
  br label %59

59:                                               ; preds = %3, %58
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %6, %"class.gfx::Transform"* nonnull dereferenceable(68) %8) #18
  %60 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %61 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %60, align 8
  %62 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %61, i64 1, i32 4
  %63 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %62, i64 0, i32 0
  %64 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %6, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* nonnull %64, %class.SkMatrix44* dereferenceable(68) %63) #18
  br i1 %65, label %82, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.gfx::Transform"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 4 %21, i64 68, i1 false)
  %68 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %61, i64 1, i32 10
  %69 = bitcast i24* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %70, 1
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %77 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %76, align 8
  %78 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %77, i64 0, i32 15, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 8
  br label %81

81:                                               ; preds = %66, %75
  store i8 1, i8* %72, align 8
  br label %82

82:                                               ; preds = %59, %81
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %28) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %21) #18
  ret void
}

declare <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68), float) local_unnamed_addr #2

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree39UpdateOuterViewportContainerBoundsDeltaEv(%"class.cc::TransformTree"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %3, %5
  br i1 %6, label %65, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 3
  %13 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %12, align 8
  %14 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 15, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i32*, i32** %2, align 8
  %18 = load i32*, i32** %4, align 8
  br label %19

19:                                               ; preds = %7, %11
  %20 = phi i32* [ %5, %7 ], [ %18, %11 ]
  %21 = phi i32* [ %3, %7 ], [ %17, %11 ]
  store i8 1, i8* %8, align 8
  %22 = icmp eq i32* %21, %20
  br i1 %22, label %65, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = getelementptr i32, i32* %20, i64 -1
  %27 = ptrtoint i32* %26 to i64
  %28 = sub i64 %27, %24
  %29 = and i64 %28, 4
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %23
  %32 = load i32, i32* %21, align 4
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = sext i32 %32 to i64
  %36 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %25, align 8
  %37 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %35
  br label %38

38:                                               ; preds = %34, %31
  %39 = phi %"struct.cc::TransformNode"* [ %37, %34 ], [ null, %31 ]
  %40 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %39, i64 0, i32 10
  %41 = bitcast i24* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 1
  store i32 %43, i32* %41, align 4
  %44 = getelementptr inbounds i32, i32* %21, i64 1
  br label %45

45:                                               ; preds = %38, %23
  %46 = phi i32* [ %21, %23 ], [ %44, %38 ]
  %47 = icmp ult i64 %28, 4
  br i1 %47, label %65, label %48

48:                                               ; preds = %45, %70
  %49 = phi i32* [ %76, %70 ], [ %46, %45 ]
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %25, align 8
  %55 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %54, i64 %53
  br label %56

56:                                               ; preds = %48, %52
  %57 = phi %"struct.cc::TransformNode"* [ %55, %52 ], [ null, %48 ]
  %58 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 0, i32 10
  %59 = bitcast i24* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = or i32 %60, 1
  store i32 %61, i32* %59, align 4
  %62 = getelementptr inbounds i32, i32* %49, i64 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %66, label %70

65:                                               ; preds = %45, %70, %19, %1
  ret void

66:                                               ; preds = %56
  %67 = sext i32 %63 to i64
  %68 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %25, align 8
  %69 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %68, i64 %67
  br label %70

70:                                               ; preds = %66, %56
  %71 = phi %"struct.cc::TransformNode"* [ %69, %66 ], [ null, %56 ]
  %72 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %71, i64 0, i32 10
  %73 = bitcast i24* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = or i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds i32, i32* %49, i64 2
  %77 = icmp eq i32* %76, %20
  br i1 %77, label %65, label %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformTree41AddNodeAffectedByOuterViewportBoundsDeltaEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i32 %1, i32* %5, align 4
  %11 = getelementptr inbounds i32, i32* %5, i64 1
  %12 = ptrtoint i32* %11 to i64
  %13 = bitcast i32** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %70

14:                                               ; preds = %2
  %15 = ptrtoint i32* %5 to i64
  %16 = bitcast i32** %4 to i64*
  %17 = bitcast %"class.std::__1::vector.8"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::vector.8"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #19
  unreachable

25:                                               ; preds = %14
  %26 = bitcast i32** %6 to i64*
  %27 = sub i64 %9, %18
  %28 = ashr exact i64 %27, 2
  %29 = icmp ult i64 %28, 2305843009213693951
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 1
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 4611686018427387903
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #19
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 4611686018427387903, %25 ]
  %40 = shl i64 %39, 2
  %41 = tail call i8* @_Znwm(i64 %40) #20
  %42 = bitcast i8* %41 to i32*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi i32* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds i32, i32* %45, i64 %20
  %47 = getelementptr inbounds i32, i32* %45, i64 %44
  %48 = ptrtoint i32* %47 to i64
  store i32 %1, i32* %46, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i64, i64* %16, align 8
  %54 = ptrtoint i32* %52 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 2
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds i32, i32* %46, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = icmp sgt i64 %55, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %43
  %62 = bitcast i32* %58 to i8*
  %63 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 %55, i1 false) #18
  %64 = load i32*, i32** %51, align 8
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi i32* [ %52, %43 ], [ %64, %61 ]
  store i64 %59, i64* %17, align 8
  store i64 %50, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = bitcast i32* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #20
  br label %70

70:                                               ; preds = %10, %65, %68
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc13TransformTree42HasNodesAffectedByOuterViewportBoundsDeltaEv(%"class.cc::TransformTree"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ne i32* %3, %5
  ret i1 %6
}

declare zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"struct.cc::StickyPositionNodeData"* @_ZN2cc13TransformTree24EnsureStickyPositionDataEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.cc::StickyPositionNodeData", align 8
  %4 = icmp sgt i32 %1, -1
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %8, i64 %6
  br label %10

10:                                               ; preds = %2, %5
  %11 = phi %"struct.cc::TransformNode"* [ %9, %5 ], [ null, %2 ]
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %11, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %48

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 1
  %18 = bitcast %"struct.cc::StickyPositionNodeData"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.22"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 120
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %12, align 4
  %25 = bitcast %"struct.cc::StickyPositionNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %25) #18
  %26 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %3, i64 0, i32 0
  store i32 -1, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %3, i64 0, i32 1
  call void @_ZN2cc24StickyPositionConstraintC1Ev(%"struct.cc::StickyPositionConstraint"* %27) #18
  %28 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %3, i64 0, i32 2
  store i32 -1, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %3, i64 0, i32 3
  store i32 -1, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %3, i64 0, i32 4, i32 0
  %31 = bitcast float* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #18
  %32 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %17, align 8
  %33 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %34 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %33, align 8
  %35 = icmp ult %"struct.cc::StickyPositionNodeData"* %32, %34
  br i1 %35, label %36, label %45

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %32, i64 0, i32 0
  %38 = load i32, i32* %26, align 8
  store i32 %38, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %32, i64 0, i32 1
  call void @_ZN2cc24StickyPositionConstraintC1ERKS0_(%"struct.cc::StickyPositionConstraint"* %39, %"struct.cc::StickyPositionConstraint"* dereferenceable(88) %27) #18
  %40 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %32, i64 0, i32 2
  %41 = bitcast i32* %40 to i8*
  %42 = bitcast i32* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #18
  %43 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %32, i64 1
  %44 = ptrtoint %"struct.cc::StickyPositionNodeData"* %43 to i64
  store i64 %44, i64* %18, align 8
  br label %46

45:                                               ; preds = %15
  call void @_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.22"* %16, %"struct.cc::StickyPositionNodeData"* nonnull dereferenceable(120) %3) #18
  br label %46

46:                                               ; preds = %36, %45
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %25) #18
  %47 = load i32, i32* %12, align 4
  br label %48

48:                                               ; preds = %46, %10
  %49 = phi i32 [ %47, %46 ], [ %13, %10 ]
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 6, i32 0, i32 0
  %52 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %51, align 8
  %53 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %52, i64 %50
  ret %"struct.cc::StickyPositionNodeData"* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTreeC2Ev(%"class.cc::EffectTree"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::EffectNode", align 8
  %3 = alloca %"class.std::__1::unique_ptr.86", align 8
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.cc::EffectNode"* %2 to i8*
  %7 = bitcast %"class.std::__1::vector.30"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 25, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %6) #18
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %2) #18
  %8 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %10, align 8
  %12 = icmp ult %"struct.cc::EffectNode"* %9, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %9, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2) #18
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %9, i64 1
  %15 = ptrtoint %"struct.cc::EffectNode"* %14 to i64
  %16 = bitcast %"struct.cc::EffectNode"** %8 to i64*
  store i64 %15, i64* %16, align 8
  br label %19

17:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.30"* %5, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2) #18
  %18 = bitcast %"struct.cc::EffectNode"** %8 to i64*
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi i64* [ %16, %13 ], [ %18, %17 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %6) #18
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.30"* %5 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  %25 = inttoptr i64 %21 to %"struct.cc::EffectNode"*
  %26 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %25, i64 -1
  %27 = select i1 %24, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %26
  %28 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %27, i64 0, i32 0
  store i32 0, i32* %28, align 8
  %29 = load i64, i64* %20, align 8
  %30 = load i64, i64* %22, align 8
  %31 = icmp eq i64 %29, %30
  %32 = inttoptr i64 %29 to %"struct.cc::EffectNode"*
  %33 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %32, i64 -1
  %34 = select i1 %31, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %33
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %34, i64 0, i32 1
  store i32 -1, i32* %35, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc10EffectTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %36 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 3
  %38 = bitcast %"class.std::__1::__compressed_pair.81"* %37 to i32*
  %39 = bitcast %"class.std::__1::unordered_multimap"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #18
  store i32 1065353216, i32* %38, align 4
  %40 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2
  %41 = bitcast %"class.std::__1::vector.84"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #18
  %42 = bitcast %"class.std::__1::unique_ptr.86"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #18
  %43 = bitcast %"class.std::__1::unique_ptr.86"* %3 to i64*
  store i64 0, i64* %43, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"* %40, %"class.std::__1::unique_ptr.86"* nonnull dereferenceable(8) %3) #18
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %46, align 8
  %47 = icmp eq %"class.cc::RenderSurfaceImpl"* %45, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %19
  %49 = bitcast %"class.cc::RenderSurfaceImpl"* %45 to void (%"class.cc::RenderSurfaceImpl"*)***
  %50 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %50, i64 1
  %52 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %51, align 8
  call void %52(%"class.cc::RenderSurfaceImpl"* nonnull %45) #18
  br label %53

53:                                               ; preds = %19, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTreeD2Ev(%"class.cc::EffectTree"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc10EffectTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.86"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.86"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.86"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.86"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %15, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %15, align 8
  %17 = icmp eq %"class.cc::RenderSurfaceImpl"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.cc::RenderSurfaceImpl"* %16 to void (%"class.cc::RenderSurfaceImpl"*)***
  %20 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %20, i64 1
  %22 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %21, align 8
  tail call void %22(%"class.cc::RenderSurfaceImpl"* nonnull %16) #18
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.86"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.84"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.86"* %5, %"class.std::__1::unique_ptr.86"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #20
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30, %44
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %37, %44 ], [ %32, %30 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 3
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to %"class.viz::CopyOutputRequest"**
  %40 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %39, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %39, align 8
  %41 = icmp eq %"class.viz::CopyOutputRequest"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %40) #18
  %43 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %40, i64 0, i32 0
  tail call void @_ZdlPv(i8* %43) #20
  br label %44

44:                                               ; preds = %42, %34
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i8*
  tail call void @_ZdlPv(i8* %45) #20
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %46, label %47, label %34

47:                                               ; preds = %44, %30
  %48 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %48, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"** %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.std::__1::__hash_node_base"** %49 to i8*
  tail call void @_ZdlPv(i8* %52) #20
  br label %53

53:                                               ; preds = %47, %51
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10EffectNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %54 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %54, i64 0, i32 0, i32 0
  %56 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %55, align 8
  %57 = icmp eq %"struct.cc::EffectNode"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.cc::EffectNode"* %56 to i8*
  %60 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %61 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %60, align 8
  %62 = icmp eq %"struct.cc::EffectNode"* %61, %56
  br i1 %62, label %70, label %63

63:                                               ; preds = %58, %63
  %64 = phi %"struct.cc::EffectNode"* [ %65, %63 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %64, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %65) #18
  %66 = icmp eq %"struct.cc::EffectNode"* %65, %56
  br i1 %66, label %67, label %63

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::vector.30"* %54 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %58
  %71 = phi i8* [ %69, %67 ], [ %59, %58 ]
  store %"struct.cc::EffectNode"* %56, %"struct.cc::EffectNode"** %60, align 8
  tail call void @_ZdlPv(i8* %71) #20
  br label %72

72:                                               ; preds = %53, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTreeD0Ev(%"class.cc::EffectTree"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc10EffectTreeD2Ev(%"class.cc::EffectTree"* %0) #18
  %2 = bitcast %"class.cc::EffectTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"*, %"struct.cc::EffectNode"* dereferenceable(288), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.86", align 8
  %5 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  %10 = icmp eq %"struct.cc::EffectNode"* %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %7, %"struct.cc::EffectNode"* dereferenceable(288) %1) #18
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %7, i64 1
  %13 = ptrtoint %"struct.cc::EffectNode"* %12 to i64
  %14 = bitcast %"struct.cc::EffectNode"** %6 to i64*
  store i64 %13, i64* %14, align 8
  br label %18

15:                                               ; preds = %3
  tail call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"* %5, %"struct.cc::EffectNode"* dereferenceable(288) %1) #18
  %16 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %17 = bitcast %"struct.cc::EffectNode"** %6 to i64*
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi i64* [ %14, %11 ], [ %17, %15 ]
  %20 = phi %"struct.cc::EffectNode"* [ %12, %11 ], [ %16, %15 ]
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 -1, i32 1
  store i32 %2, i32* %21, align 4
  %22 = load i64, i64* %19, align 8
  %23 = bitcast %"class.std::__1::vector.30"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 288
  %27 = trunc i64 %26 to i32
  %28 = add nsw i32 %27, -1
  %29 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 -1, i32 0
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.86"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  %31 = bitcast %"class.std::__1::unique_ptr.86"* %4 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %32, align 8
  %34 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %34, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.86"* %33, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %38, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.86"* %33 to i64*
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %33, i64 1
  %41 = ptrtoint %"class.std::__1::unique_ptr.86"* %40 to i64
  %42 = bitcast %"class.std::__1::unique_ptr.86"** %32 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %18
  %44 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"* %44, %"class.std::__1::unique_ptr.86"* nonnull dereferenceable(8) %4) #18
  br label %45

45:                                               ; preds = %37, %43
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %46, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %46, align 8
  %48 = icmp eq %"class.cc::RenderSurfaceImpl"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.cc::RenderSurfaceImpl"* %47 to void (%"class.cc::RenderSurfaceImpl"*)***
  %51 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %51, i64 1
  %53 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %52, align 8
  call void %53(%"class.cc::RenderSurfaceImpl"* nonnull %47) #18
  br label %54

54:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree5clearEv(%"class.cc::EffectTree"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.86", align 8
  %3 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_10EffectNodeEE5clearEv(%"class.cc::PropertyTree.29"* %3)
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.86"* %8, %6
  br i1 %9, label %23, label %10

10:                                               ; preds = %1, %21
  %11 = phi %"class.std::__1::unique_ptr.86"* [ %12, %21 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %13, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %13, align 8
  %15 = icmp eq %"class.cc::RenderSurfaceImpl"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.cc::RenderSurfaceImpl"* %14 to void (%"class.cc::RenderSurfaceImpl"*)***
  %18 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %18, i64 1
  %20 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %19, align 8
  tail call void %20(%"class.cc::RenderSurfaceImpl"* nonnull %14) #18
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"class.std::__1::unique_ptr.86"* %12, %6
  br i1 %22, label %23, label %10

23:                                               ; preds = %21, %1
  store %"class.std::__1::unique_ptr.86"* %6, %"class.std::__1::unique_ptr.86"** %7, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  %25 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %26, align 8
  %28 = icmp ult %"class.std::__1::unique_ptr.86"* %6, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %30, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.86"* %6 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %6, i64 1
  %33 = ptrtoint %"class.std::__1::unique_ptr.86"* %32 to i64
  %34 = bitcast %"class.std::__1::unique_ptr.86"** %7 to i64*
  store i64 %33, i64* %34, align 8
  br label %36

35:                                               ; preds = %23
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"* %4, %"class.std::__1::unique_ptr.86"* nonnull dereferenceable(8) %2) #18
  br label %36

36:                                               ; preds = %29, %35
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %2, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %37, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %37, align 8
  %39 = icmp eq %"class.cc::RenderSurfaceImpl"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.cc::RenderSurfaceImpl"* %38 to void (%"class.cc::RenderSurfaceImpl"*)***
  %42 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %42, i64 1
  %44 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %43, align 8
  call void %44(%"class.cc::RenderSurfaceImpl"* nonnull %38) #18
  br label %45

45:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2cc10EffectTree16EffectiveOpacityEPKNS_10EffectNodeE(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %4 = bitcast [3 x i8]* %3 to i24*
  %5 = load i24, i24* %4, align 4
  %6 = trunc i24 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 3
  %10 = load float, float* %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi float [ %10, %8 ], [ 0.000000e+00, %2 ]
  ret float %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree15UpdateOpacitiesEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"* nocapture, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %5 = bitcast [3 x i8]* %4 to i24*
  %6 = load i24, i24* %5, align 4
  %7 = trunc i24 %6 to i8
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 3
  %11 = load float, float* %10, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi float [ %11, %9 ], [ 0.000000e+00, %3 ]
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 4
  store float %13, float* %14, align 4
  %15 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 4
  %18 = load float, float* %17, align 4
  %19 = fmul float %13, %18
  store float %19, float* %14, align 4
  br label %20

20:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree19UpdateSubtreeHiddenEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"* nocapture, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #5 align 2 {
  %4 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %7 = bitcast [3 x i8]* %6 to i24*
  %8 = load i24, i24* %7, align 4
  %9 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %10 = bitcast [3 x i8]* %9 to i24*
  %11 = load i24, i24* %10, align 4
  %12 = and i24 %8, 128
  %13 = or i24 %12, %11
  store i24 %13, i24* %10, align 4
  br label %14

14:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree13UpdateIsDrawnEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readonly, %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %5 = bitcast [3 x i8]* %4 to i24*
  %6 = load i24, i24* %5, align 4
  %7 = and i24 %6, 3
  %8 = icmp eq i24 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 14, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %3
  %14 = or i24 %6, 32
  br label %50

15:                                               ; preds = %9
  %16 = trunc i24 %6 to i8
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 3
  %20 = load float, float* %19, align 8
  %21 = fcmp oeq float %20, 0.000000e+00
  br i1 %21, label %22, label %37

22:                                               ; preds = %15, %18
  %23 = and i24 %6, 1024
  %24 = icmp eq i24 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %26, align 8
  %28 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %27, i64 0, i32 12
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %25, %22
  %32 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 6
  %33 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %32) #18
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = load i24, i24* %5, align 4
  %36 = and i24 %35, -33
  br label %50

37:                                               ; preds = %25, %31, %18
  %38 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %41 = bitcast [3 x i8]* %40 to i24*
  %42 = load i24, i24* %41, align 4
  %43 = and i24 %42, 32
  %44 = load i24, i24* %5, align 4
  %45 = and i24 %44, -33
  %46 = or i24 %45, %43
  br label %50

47:                                               ; preds = %37
  %48 = load i24, i24* %5, align 4
  %49 = or i24 %48, 32
  br label %50

50:                                               ; preds = %34, %47, %39, %13
  %51 = phi i24 [ %36, %34 ], [ %49, %47 ], [ %46, %39 ], [ %14, %13 ]
  store i24 %51, i24* %5, align 4
  ret void
}

declare zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree19UpdateEffectChangedEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"* nocapture, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #5 align 2 {
  %4 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %7 = bitcast [3 x i8]* %6 to i24*
  %8 = load i24, i24* %7, align 4
  %9 = trunc i24 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %13 = bitcast [3 x i8]* %12 to i24*
  %14 = load i24, i24* %13, align 4
  %15 = or i24 %14, 32768
  store i24 %15, i24* %13, align 4
  br label %16

16:                                               ; preds = %3, %11, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree16UpdateHasFiltersEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 5
  %5 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %4) #18
  %6 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %7 = bitcast [3 x i8]* %6 to i24*
  %8 = load i24, i24* %7, align 4
  %9 = shl i24 %8, 10
  %10 = and i24 %9, 262144
  %11 = select i1 %5, i24 %10, i24 262144
  %12 = and i24 %8, -262145
  %13 = or i24 %12, %11
  store i24 %13, i24* %7, align 4
  %14 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %17 = bitcast [3 x i8]* %16 to i24*
  %18 = load i24, i24* %17, align 4
  %19 = and i24 %18, 262144
  %20 = or i24 %13, %19
  store i24 %20, i24* %7, align 4
  br label %21

21:                                               ; preds = %3, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree24UpdateBackfaceVisibilityEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readonly, %"struct.cc::EffectNode"* nocapture, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #5 align 2 {
  %4 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %7 = bitcast [3 x i8]* %6 to i24*
  %8 = load i24, i24* %7, align 4
  %9 = and i24 %8, 4
  %10 = icmp eq i24 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %13 = bitcast [3 x i8]* %12 to i24*
  %14 = load i24, i24* %13, align 4
  %15 = or i24 %14, 4
  store i24 %15, i24* %13, align 4
  br label %39

16:                                               ; preds = %5, %3
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %18 = bitcast [3 x i8]* %17 to i24*
  %19 = load i24, i24* %18, align 4
  %20 = and i24 %19, 8
  %21 = icmp eq i24 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = and i24 %19, -5
  store i24 %23, i24* %18, align 4
  br label %39

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %25, align 8
  %27 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 18
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %26, i64 0, i32 3, i32 5, i32 0, i32 0
  %31 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %30, align 8
  %32 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %31, i64 %29, i32 2
  %33 = load i8, i8* %32, align 4
  %34 = shl i8 %33, 2
  %35 = and i8 %34, 4
  %36 = zext i8 %35 to i24
  %37 = and i24 %19, -5
  %38 = or i24 %37, %36
  store i24 %38, i24* %18, align 4
  br label %39

39:                                               ; preds = %24, %22, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree21UpdateHasMaskingChildEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"* nocapture, %"struct.cc::EffectNode"* nocapture) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %5 = bitcast [3 x i8]* %4 to i24*
  %6 = load i24, i24* %5, align 4
  %7 = and i24 %6, -16385
  store i24 %7, i24* %5, align 4
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 12
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %13 = bitcast [3 x i8]* %12 to i24*
  %14 = load i24, i24* %13, align 4
  %15 = or i24 %14, 16384
  store i24 %15, i24* %13, align 4
  br label %16

16:                                               ; preds = %11, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree29UpdateOnlyDrawsVisibleContentEPNS_10EffectNodeES2_(%"class.cc::EffectTree"* nocapture readnone, %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %5 = bitcast [3 x i8]* %4 to i24*
  %6 = load i24, i24* %5, align 4
  %7 = and i24 %6, 2
  %8 = icmp eq i24 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 14, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i24
  %14 = shl nuw nsw i24 %13, 6
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i24 [ 0, %3 ], [ %14, %9 ]
  %17 = and i24 %6, -65
  %18 = or i24 %16, %17
  store i24 %18, i24* %5, align 4
  %19 = icmp eq %"struct.cc::EffectNode"* %2, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %2, i64 0, i32 16
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 4
  %24 = and i24 %16, 64
  %25 = and i24 %24, %23
  %26 = and i24 %18, -65
  %27 = or i24 %25, %26
  store i24 %27, i24* %5, align 4
  br label %28

28:                                               ; preds = %15, %20
  %29 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 6
  %30 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %29) #18
  br i1 %30, label %43, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"* %29, i32 11) #18
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = load i24, i24* %5, align 4
  %36 = lshr i24 %35, 6
  %37 = zext i24 %36 to i32
  %38 = and i32 %37, %34
  %39 = trunc i32 %38 to i24
  %40 = shl nuw nsw i24 %39, 6
  %41 = and i24 %35, -65
  %42 = or i24 %40, %41
  store i24 %42, i24* %5, align 4
  br label %43

43:                                               ; preds = %31, %28
  ret void
}

declare zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree26UpdateSurfaceContentsScaleEPNS_10EffectNodeE(%"class.cc::EffectTree"* nocapture readonly, %"struct.cc::EffectNode"* nocapture) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 17
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 13
  %8 = bitcast %"class.gfx::Vector2dF"* %7 to i32*
  store i32 1065353216, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 13, i32 1
  %10 = bitcast float* %9 to i32*
  store i32 1065353216, i32* %10, align 4
  br label %65

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %13 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %12, align 8
  %14 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 2
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 3
  %17 = load float, float* %16, align 8
  %18 = fmul float %15, %17
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 18
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %27

22:                                               ; preds = %11
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %25 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %24, align 8
  %26 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %25, i64 %23
  br label %27

27:                                               ; preds = %11, %22
  %28 = phi %"struct.cc::TransformNode"* [ %26, %22 ], [ null, %11 ]
  %29 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %28, i64 0, i32 10
  %30 = bitcast i24* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 4096
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 1
  %36 = load float, float* %35, align 8
  %37 = fmul float %18, %36
  br label %38

38:                                               ; preds = %27, %34
  %39 = phi float [ %37, %34 ], [ %18, %27 ]
  %40 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 13
  %41 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %40, i64 0, i32 0
  %42 = load float, float* %41, align 8
  %43 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 13, i32 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %28, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 5, i32 0, i32 0
  %49 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %48, align 8
  %50 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %49, i64 %47, i32 1
  %51 = tail call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68) %50, float %39) #18
  %52 = bitcast %"class.gfx::Vector2dF"* %40 to <2 x float>*
  store <2 x float> %51, <2 x float>* %52, align 8
  %53 = extractelement <2 x float> %51, i32 0
  %54 = fcmp une float %42, %53
  %55 = extractelement <2 x float> %51, i32 1
  %56 = fcmp une float %44, %55
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %38
  %59 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %12, align 8
  %60 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %59, i64 0, i32 5, i32 0, i32 2
  store i8 1, i8* %60, align 8
  %61 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %12, align 8
  %62 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %61, i64 0, i32 15, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %62, align 8
  br label %65

65:                                               ; preds = %38, %58, %6
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.cc::EffectNode"* @_ZN2cc10EffectTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::EffectTree"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair"*
  br i1 %12, label %32, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 4
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair"* [ %6, %14 ], [ %28, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair"* %28 to i64
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi i64 [ %31, %30 ], [ %10, %2 ]
  %34 = phi %"struct.std::__1::pair"* [ %28, %30 ], [ %6, %2 ]
  %35 = icmp eq %"struct.std::__1::pair"* %34, %13
  br i1 %35, label %43, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %1
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %42 = ptrtoint %"struct.std::__1::pair"* %41 to i64
  br label %43

43:                                               ; preds = %32, %36, %40
  %44 = phi i64 [ %42, %40 ], [ %33, %32 ], [ %33, %36 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::pair"*
  %46 = icmp eq %"struct.std::__1::pair"* %34, %45
  %47 = select i1 %46, %"struct.std::__1::pair"* %13, %"struct.std::__1::pair"* %34
  %48 = icmp eq %"struct.std::__1::pair"* %47, %13
  br i1 %48, label %58, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %55, align 8
  %57 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %56, i64 %54
  br label %58

58:                                               ; preds = %53, %49, %43
  %59 = phi %"struct.cc::EffectNode"* [ null, %43 ], [ %57, %53 ], [ null, %49 ]
  ret %"struct.cc::EffectNode"* %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10EffectTree17OnOpacityAnimatedENS_9ElementIdEf(%"class.cc::EffectTree"* nocapture readonly, i64, float) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %3
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  br label %33

33:                                               ; preds = %31, %3
  %34 = phi i64 [ %32, %31 ], [ %11, %3 ]
  %35 = phi %"struct.std::__1::pair"* [ %29, %31 ], [ %7, %3 ]
  %36 = icmp eq %"struct.std::__1::pair"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair"*
  %47 = icmp eq %"struct.std::__1::pair"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"* %35
  %49 = icmp eq %"struct.std::__1::pair"* %48, %14
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %57, i64 %55
  br label %59

59:                                               ; preds = %44, %50, %54
  %60 = phi %"struct.cc::EffectNode"* [ null, %44 ], [ %58, %54 ], [ null, %50 ]
  %61 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %60, i64 0, i32 3
  %62 = load float, float* %61, align 8
  %63 = fcmp oeq float %62, %2
  br i1 %63, label %73, label %64

64:                                               ; preds = %59
  store float %2, float* %61, align 8
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %60, i64 0, i32 16
  %66 = bitcast [3 x i8]* %65 to i24*
  %67 = load i24, i24* %66, align 4
  %68 = or i24 %67, 32768
  store i24 %68, i24* %66, align 4
  %69 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %70 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %69, i64 0, i32 8
  store i8 1, i8* %70, align 1
  %71 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %72 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %71, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %72, align 8
  br label %73

73:                                               ; preds = %59, %64
  %74 = phi i1 [ true, %64 ], [ false, %59 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10EffectTree16OnFilterAnimatedENS_9ElementIdERKNS_16FilterOperationsE(%"class.cc::EffectTree"* nocapture readonly, i64, %"class.cc::FilterOperations"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %3
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  br label %33

33:                                               ; preds = %31, %3
  %34 = phi i64 [ %32, %31 ], [ %11, %3 ]
  %35 = phi %"struct.std::__1::pair"* [ %29, %31 ], [ %7, %3 ]
  %36 = icmp eq %"struct.std::__1::pair"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair"*
  %47 = icmp eq %"struct.std::__1::pair"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"* %35
  %49 = icmp eq %"struct.std::__1::pair"* %48, %14
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %57, i64 %55
  br label %59

59:                                               ; preds = %44, %50, %54
  %60 = phi %"struct.cc::EffectNode"* [ null, %44 ], [ %58, %54 ], [ null, %50 ]
  %61 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %60, i64 0, i32 5
  %62 = tail call zeroext i1 @_ZNK2cc16FilterOperationseqERKS0_(%"class.cc::FilterOperations"* %61, %"class.cc::FilterOperations"* dereferenceable(24) %2) #18
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* %61, %"class.cc::FilterOperations"* dereferenceable(24) %2) #18
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %60, i64 0, i32 16
  %66 = bitcast [3 x i8]* %65 to i24*
  %67 = load i24, i24* %66, align 4
  %68 = or i24 %67, 32768
  store i24 %68, i24* %66, align 4
  %69 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %70 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %69, i64 0, i32 8
  store i8 1, i8* %70, align 1
  %71 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %72 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %71, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %72, align 8
  br label %73

73:                                               ; preds = %59, %63
  %74 = phi i1 [ true, %63 ], [ false, %59 ]
  ret i1 %74
}

declare zeroext i1 @_ZNK2cc16FilterOperationseqERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10EffectTree24OnBackdropFilterAnimatedENS_9ElementIdERKNS_16FilterOperationsE(%"class.cc::EffectTree"* nocapture readonly, i64, %"class.cc::FilterOperations"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %3
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  br label %33

33:                                               ; preds = %31, %3
  %34 = phi i64 [ %32, %31 ], [ %11, %3 ]
  %35 = phi %"struct.std::__1::pair"* [ %29, %31 ], [ %7, %3 ]
  %36 = icmp eq %"struct.std::__1::pair"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair"*
  %47 = icmp eq %"struct.std::__1::pair"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"* %35
  %49 = icmp eq %"struct.std::__1::pair"* %48, %14
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %57, i64 %55
  br label %59

59:                                               ; preds = %44, %50, %54
  %60 = phi %"struct.cc::EffectNode"* [ null, %44 ], [ %58, %54 ], [ null, %50 ]
  %61 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %60, i64 0, i32 6
  %62 = tail call zeroext i1 @_ZNK2cc16FilterOperationseqERKS0_(%"class.cc::FilterOperations"* %61, %"class.cc::FilterOperations"* dereferenceable(24) %2) #18
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* %61, %"class.cc::FilterOperations"* dereferenceable(24) %2) #18
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %60, i64 0, i32 16
  %66 = bitcast [3 x i8]* %65 to i24*
  %67 = load i24, i24* %66, align 4
  %68 = or i24 %67, 32768
  store i24 %68, i24* %66, align 4
  %69 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %70 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %69, i64 0, i32 8
  store i8 1, i8* %70, align 1
  %71 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %72 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %71, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %72, align 8
  br label %73

73:                                               ; preds = %59, %63
  %74 = phi i1 [ true, %63 ], [ false, %59 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree13UpdateEffectsEi(%"class.cc::EffectTree"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::EffectNode"* [ %8, %4 ], [ null, %2 ]
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %16, align 8
  %18 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 %15
  br label %19

19:                                               ; preds = %9, %14
  %20 = phi %"struct.cc::EffectNode"* [ %18, %14 ], [ null, %9 ]
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 16
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 4
  %24 = trunc i24 %23 to i8
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 3
  %28 = load float, float* %27, align 8
  br label %29

29:                                               ; preds = %26, %19
  %30 = phi float [ %28, %26 ], [ 0.000000e+00, %19 ]
  %31 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 4
  store float %30, float* %31, align 4
  %32 = icmp eq %"struct.cc::EffectNode"* %20, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 4
  %35 = load float, float* %34, align 4
  %36 = fmul float %30, %35
  store float %36, float* %31, align 4
  %37 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %38 = bitcast [3 x i8]* %37 to i24*
  %39 = load i24, i24* %38, align 4
  %40 = and i24 %39, 128
  %41 = or i24 %40, %23
  store i24 %41, i24* %22, align 4
  br label %42

42:                                               ; preds = %29, %33
  %43 = phi i24 [ %23, %29 ], [ %41, %33 ]
  %44 = and i24 %43, 3
  %45 = icmp eq i24 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 14, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46, %42
  %51 = or i24 %43, 32
  br label %86

52:                                               ; preds = %46
  %53 = trunc i24 %43 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 3
  %57 = load float, float* %56, align 8
  %58 = fcmp oeq float %57, 0.000000e+00
  br i1 %58, label %59, label %74

59:                                               ; preds = %55, %52
  %60 = and i24 %43, 1024
  %61 = icmp eq i24 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %64 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %63, align 8
  %65 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %64, i64 0, i32 12
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %62, %59
  %69 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 6
  %70 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %69) #18
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i24, i24* %22, align 4
  %73 = and i24 %72, -33
  br label %86

74:                                               ; preds = %68, %62, %55
  br i1 %32, label %83, label %75

75:                                               ; preds = %74
  %76 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %77 = bitcast [3 x i8]* %76 to i24*
  %78 = load i24, i24* %77, align 4
  %79 = and i24 %78, 32
  %80 = load i24, i24* %22, align 4
  %81 = and i24 %80, -33
  %82 = or i24 %81, %79
  store i24 %82, i24* %22, align 4
  br label %88

83:                                               ; preds = %74
  %84 = load i24, i24* %22, align 4
  %85 = or i24 %84, 32
  store i24 %85, i24* %22, align 4
  br label %97

86:                                               ; preds = %50, %71
  %87 = phi i24 [ %51, %50 ], [ %73, %71 ]
  store i24 %87, i24* %22, align 4
  br i1 %32, label %97, label %88

88:                                               ; preds = %86, %75
  %89 = phi i24 [ %82, %75 ], [ %87, %86 ]
  %90 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %91 = bitcast [3 x i8]* %90 to i24*
  %92 = load i24, i24* %91, align 4
  %93 = trunc i24 %92 to i16
  %94 = icmp slt i16 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = or i24 %89, 32768
  store i24 %96, i24* %22, align 4
  br label %97

97:                                               ; preds = %83, %86, %88, %95
  %98 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 5
  %99 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %98) #18
  %100 = load i24, i24* %22, align 4
  %101 = shl i24 %100, 10
  %102 = and i24 %101, 262144
  %103 = select i1 %99, i24 %102, i24 262144
  %104 = and i24 %100, -262145
  %105 = or i24 %103, %104
  store i24 %105, i24* %22, align 4
  br i1 %32, label %117, label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %108 = bitcast [3 x i8]* %107 to i24*
  %109 = load i24, i24* %108, align 4
  %110 = and i24 %109, 262144
  %111 = or i24 %110, %105
  store i24 %111, i24* %22, align 4
  %112 = load i24, i24* %108, align 4
  %113 = and i24 %112, 4
  %114 = icmp eq i24 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %106
  %116 = or i24 %111, 4
  br label %138

117:                                              ; preds = %97, %106
  %118 = phi i24 [ %105, %97 ], [ %111, %106 ]
  %119 = and i24 %118, 8
  %120 = icmp eq i24 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = and i24 %118, -5
  br label %138

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %125 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %124, align 8
  %126 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 18
  %127 = load i32, i32* %126, align 8
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %125, i64 0, i32 3, i32 5, i32 0, i32 0
  %130 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %129, align 8
  %131 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %130, i64 %128, i32 2
  %132 = load i8, i8* %131, align 4
  %133 = shl i8 %132, 2
  %134 = and i8 %133, 4
  %135 = zext i8 %134 to i24
  %136 = and i24 %118, -5
  %137 = or i24 %136, %135
  br label %138

138:                                              ; preds = %115, %121, %123
  %139 = phi i24 [ %116, %115 ], [ %122, %121 ], [ %137, %123 ]
  %140 = and i24 %139, -16385
  store i24 %140, i24* %22, align 4
  %141 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 12
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 6
  br i1 %143, label %144, label %150

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %146 = bitcast [3 x i8]* %145 to i24*
  %147 = load i24, i24* %146, align 4
  %148 = or i24 %147, 16384
  store i24 %148, i24* %146, align 4
  %149 = load i24, i24* %22, align 4
  br label %150

150:                                              ; preds = %138, %144
  %151 = phi i24 [ %140, %138 ], [ %149, %144 ]
  %152 = and i24 %151, 2
  %153 = icmp eq i24 %152, 0
  br i1 %153, label %154, label %160

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 14, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  %158 = zext i1 %157 to i24
  %159 = shl nuw nsw i24 %158, 6
  br label %160

160:                                              ; preds = %154, %150
  %161 = phi i24 [ 0, %150 ], [ %159, %154 ]
  %162 = and i24 %151, -65
  %163 = or i24 %161, %162
  store i24 %163, i24* %22, align 4
  br i1 %32, label %172, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %166 = bitcast [3 x i8]* %165 to i24*
  %167 = load i24, i24* %166, align 4
  %168 = and i24 %161, 64
  %169 = and i24 %168, %167
  %170 = and i24 %163, -65
  %171 = or i24 %169, %170
  store i24 %171, i24* %22, align 4
  br label %172

172:                                              ; preds = %164, %160
  %173 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 6
  %174 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %173) #18
  br i1 %174, label %187, label %175

175:                                              ; preds = %172
  %176 = tail call zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"* %173, i32 11) #18
  %177 = xor i1 %176, true
  %178 = zext i1 %177 to i32
  %179 = load i24, i24* %22, align 4
  %180 = lshr i24 %179, 6
  %181 = zext i24 %180 to i32
  %182 = and i32 %181, %178
  %183 = trunc i32 %182 to i24
  %184 = shl nuw nsw i24 %183, 6
  %185 = and i24 %179, -65
  %186 = or i24 %184, %185
  store i24 %186, i24* %22, align 4
  br label %187

187:                                              ; preds = %172, %175
  %188 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 17
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %196

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 13
  %193 = bitcast %"class.gfx::Vector2dF"* %192 to i32*
  store i32 1065353216, i32* %193, align 8
  %194 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 13, i32 1
  %195 = bitcast float* %194 to i32*
  store i32 1065353216, i32* %195, align 4
  br label %250

196:                                              ; preds = %187
  %197 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %198 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %197, align 8
  %199 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %198, i64 0, i32 3, i32 2
  %200 = load float, float* %199, align 4
  %201 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %198, i64 0, i32 3, i32 3
  %202 = load float, float* %201, align 8
  %203 = fmul float %200, %202
  %204 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 18
  %205 = load i32, i32* %204, align 8
  %206 = icmp sgt i32 %205, -1
  br i1 %206, label %207, label %212

207:                                              ; preds = %196
  %208 = sext i32 %205 to i64
  %209 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %198, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %210 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %209, align 8
  %211 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %210, i64 %208
  br label %212

212:                                              ; preds = %207, %196
  %213 = phi %"struct.cc::TransformNode"* [ %211, %207 ], [ null, %196 ]
  %214 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %213, i64 0, i32 10
  %215 = bitcast i24* %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = and i32 %216, 4096
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %212
  %220 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %198, i64 0, i32 3, i32 1
  %221 = load float, float* %220, align 8
  %222 = fmul float %203, %221
  br label %223

223:                                              ; preds = %219, %212
  %224 = phi float [ %222, %219 ], [ %203, %212 ]
  %225 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 13
  %226 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %225, i64 0, i32 0
  %227 = load float, float* %226, align 8
  %228 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 13, i32 1
  %229 = load float, float* %228, align 4
  %230 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %213, i64 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %198, i64 0, i32 3, i32 5, i32 0, i32 0
  %234 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %233, align 8
  %235 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %234, i64 %232, i32 1
  %236 = tail call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68) %235, float %224) #18
  %237 = bitcast %"class.gfx::Vector2dF"* %225 to <2 x float>*
  store <2 x float> %236, <2 x float>* %237, align 8
  %238 = extractelement <2 x float> %236, i32 0
  %239 = fcmp une float %227, %238
  %240 = extractelement <2 x float> %236, i32 1
  %241 = fcmp une float %229, %240
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %250

243:                                              ; preds = %223
  %244 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %197, align 8
  %245 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %244, i64 0, i32 5, i32 0, i32 2
  store i8 1, i8* %245, align 8
  %246 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %197, align 8
  %247 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %246, i64 0, i32 15, i32 0
  %248 = load i32, i32* %247, align 8
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %247, align 8
  br label %250

250:                                              ; preds = %191, %223, %243
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree14AddCopyRequestEiNSt3__110unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS4_EEEE(%"class.cc::EffectTree"*, i32, %"class.viz::CopyOutputRequest"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.viz::CopyOutputRequest"* %2 to i64
  %5 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0
  %6 = tail call i8* @_Znwm(i64 32) #20, !noalias !3
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to i32*
  store i32 %1, i32* %8, align 8, !noalias !3
  %9 = getelementptr inbounds i8, i8* %6, i64 24
  %10 = bitcast i8* %9 to i64*
  store i64 %4, i64* %10, align 8, !noalias !3
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %11, i64* %13, align 8, !noalias !3
  %14 = bitcast i8* %6 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %14, align 8, !noalias !3
  %15 = bitcast i8* %6 to %"struct.std::__1::__hash_node"*
  %16 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE19__node_insert_multiEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table"* %5, %"struct.std::__1::__hash_node"* nonnull %15) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree18PushCopyRequestsToEPS0_(%"class.cc::EffectTree"* nocapture, %"class.cc::EffectTree"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7, %21
  %12 = phi %"struct.std::__1::__hash_node_base"* [ %14, %21 ], [ %9, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 3
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.viz::CopyOutputRequest"**
  %17 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %16, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %16, align 8
  %18 = icmp eq %"class.viz::CopyOutputRequest"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %17) #18
  %20 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %17, i64 0, i32 0
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %19, %11
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %12 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %14, null
  br i1 %23, label %24, label %11

24:                                               ; preds = %21, %7
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %8, align 8
  %25 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %63, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::unordered_multimap", %"class.std::__1::unordered_multimap"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = add i64 %26, -1
  %31 = and i64 %26, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %52, label %33

33:                                               ; preds = %28
  %34 = sub i64 %26, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %49, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %50, %35 ]
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %39, align 8
  %40 = or i64 %36, 1
  %41 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, i64 %40
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %42, align 8
  %43 = or i64 %36, 2
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %43
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %46 = or i64 %36, 3
  %47 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %48, align 8
  %49 = add nuw i64 %36, 4
  %50 = add i64 %37, -4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %35

52:                                               ; preds = %35, %28
  %53 = phi i64 [ 0, %28 ], [ %49, %35 ]
  %54 = icmp eq i64 %31, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %52, %55
  %56 = phi i64 [ %60, %55 ], [ %53, %52 ]
  %57 = phi i64 [ %61, %55 ], [ %31, %52 ]
  %58 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, i64 %56
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %59, align 8
  %60 = add nuw i64 %56, 1
  %61 = add i64 %57, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %55, !llvm.loop !6

63:                                               ; preds = %52, %55, %24
  store i64 0, i64* %4, align 8
  br label %64

64:                                               ; preds = %63, %2
  %65 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %168, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.std::__1::__hash_node_base"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = inttoptr i64 %71 to %"struct.std::__1::__hash_node_base"*
  br label %82

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.std::__1::unordered_multimap", %"class.std::__1::unordered_multimap"* %3, i64 0, i32 0
  br label %144

77:                                               ; preds = %144
  %78 = load i64, i64* %65, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %138, label %80

80:                                               ; preds = %77
  %81 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, align 8
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi %"struct.std::__1::__hash_node_base"* [ %81, %80 ], [ %74, %73 ]
  %84 = icmp eq %"struct.std::__1::__hash_node_base"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82, %95
  %86 = phi %"struct.std::__1::__hash_node_base"* [ %88, %95 ], [ %83, %82 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 3
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %89 to %"class.viz::CopyOutputRequest"**
  %91 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %90, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %90, align 8
  %92 = icmp eq %"class.viz::CopyOutputRequest"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %85
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %91) #18
  %94 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %91, i64 0, i32 0
  tail call void @_ZdlPv(i8* %94) #20
  br label %95

95:                                               ; preds = %93, %85
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i8*
  tail call void @_ZdlPv(i8* %96) #20
  %97 = icmp eq %"struct.std::__1::__hash_node_base"* %88, null
  br i1 %97, label %98, label %85

98:                                               ; preds = %95, %82
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %69, align 8
  %99 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %120, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = add i64 %100, -1
  %105 = and i64 %100, 3
  %106 = icmp ult i64 %104, 3
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = sub i64 %100, %105
  br label %121

109:                                              ; preds = %121, %102
  %110 = phi i64 [ 0, %102 ], [ %135, %121 ]
  %111 = icmp eq i64 %105, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %117, %112 ], [ %110, %109 ]
  %114 = phi i64 [ %118, %112 ], [ %105, %109 ]
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, i64 %113
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %116, align 8
  %117 = add nuw i64 %113, 1
  %118 = add i64 %114, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %112, !llvm.loop !8

120:                                              ; preds = %109, %112, %98
  store i64 0, i64* %65, align 8
  br label %138

121:                                              ; preds = %121, %107
  %122 = phi i64 [ 0, %107 ], [ %135, %121 ]
  %123 = phi i64 [ %108, %107 ], [ %136, %121 ]
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %122
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %125, align 8
  %126 = or i64 %122, 1
  %127 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %127, i64 %126
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %128, align 8
  %129 = or i64 %122, 2
  %130 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, i64 %129
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %131, align 8
  %132 = or i64 %122, 3
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %134, align 8
  %135 = add nuw i64 %122, 4
  %136 = add i64 %123, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %109, label %121

138:                                              ; preds = %77, %120
  %139 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %140 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %139, align 8
  %141 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %140, i64 0, i32 11
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %168, label %166

144:                                              ; preds = %75, %144
  %145 = phi i64 [ %71, %75 ], [ %164, %144 ]
  %146 = inttoptr i64 %145 to %"struct.std::__1::__hash_node"*
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %146, i64 0, i32 2, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %146, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %150 = bitcast %"class.viz::CopyOutputRequest"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %149, align 8
  %152 = tail call i8* @_Znwm(i64 32) #20, !noalias !9
  %153 = getelementptr inbounds i8, i8* %152, i64 16
  %154 = bitcast i8* %153 to i32*
  store i32 %148, i32* %154, align 8, !noalias !9
  %155 = getelementptr inbounds i8, i8* %152, i64 24
  %156 = bitcast i8* %155 to i64*
  store i64 %151, i64* %156, align 8, !noalias !9
  %157 = sext i32 %148 to i64
  %158 = getelementptr inbounds i8, i8* %152, i64 8
  %159 = bitcast i8* %158 to i64*
  store i64 %157, i64* %159, align 8, !noalias !9
  %160 = bitcast i8* %152 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %160, align 8, !noalias !9
  %161 = bitcast i8* %152 to %"struct.std::__1::__hash_node"*
  %162 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE19__node_insert_multiEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table"* %76, %"struct.std::__1::__hash_node"* nonnull %161) #18
  %163 = inttoptr i64 %145 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %77, label %144

166:                                              ; preds = %138
  %167 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %140, i64 0, i32 7
  store i8 1, i8* %167, align 8
  br label %168

168:                                              ; preds = %138, %64, %166
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree37TakeCopyRequestsAndTransformToSurfaceEiPNSt3__16vectorINS1_10unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEE(%"class.cc::EffectTree"*, i32, %"class.std::__1::vector.1343"*) local_unnamed_addr #7 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.1499", align 8
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %"class.gfx::RectF"*
  %8 = alloca %"class.gfx::Vector2d", align 4
  %9 = alloca %"class.gfx::Vector2d", align 4
  %10 = icmp sgt i32 %1, -1
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %13, align 8
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %14, i64 %12
  br label %16

16:                                               ; preds = %3, %11
  %17 = phi %"struct.cc::EffectNode"* [ %15, %11 ], [ null, %3 ]
  %18 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 0, i32 18
  %23 = load i32, i32* %22, align 8
  br label %24

24:                                               ; preds = %16, %21
  %25 = phi i32 [ %23, %21 ], [ 1, %16 ]
  %26 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %26) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %27 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %28, align 8
  %30 = icmp eq i32 %1, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %24
  %32 = sext i32 %25 to i64
  %33 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %29, i64 0, i32 3, i32 5, i32 0, i32 0
  %34 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %33, align 8
  %35 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %34, i64 %32, i32 1
  %36 = bitcast %"class.gfx::Transform"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %36, i64 68, i1 false) #18
  br label %55

37:                                               ; preds = %24
  %38 = tail call dereferenceable(140) %"struct.cc::DrawTransforms"* @_ZNK2cc13PropertyTrees17GetDrawTransformsEii(%"class.cc::PropertyTrees"* %29, i32 %25, i32 %1) #18
  %39 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 2, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %38, i64 0, i32 5
  %44 = bitcast %"class.gfx::Transform"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %44, i64 68, i1 false) #18
  br label %55

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %38, i64 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %38, i64 0, i32 4
  %51 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %50, %"class.gfx::Transform"* nonnull %5) #18
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %46, align 4
  store i8 %52, i8* %39, align 2
  %53 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %38, i64 0, i32 5
  %54 = bitcast %"class.gfx::Transform"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 4 %26, i64 68, i1 false) #18
  br label %55

55:                                               ; preds = %31, %42, %45, %49
  %56 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1
  %57 = sext i32 %1 to i64
  %58 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %121, label %61

61:                                               ; preds = %55
  %62 = call i64 @llvm.ctpop.i64(i64 %59) #18, !range !12
  %63 = icmp ugt i64 %62, 1
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = add i64 %59, -1
  %66 = and i64 %65, %57
  br label %71

67:                                               ; preds = %61
  %68 = icmp ugt i64 %59, %57
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %57, %59
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %57, %67 ]
  %73 = getelementptr inbounds %"class.std::__1::unordered_multimap", %"class.std::__1::unordered_multimap"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, i64 %72
  %76 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base"* %76, null
  br i1 %77, label %121, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base"* %80, null
  br i1 %81, label %121, label %82

82:                                               ; preds = %78
  %83 = add i64 %59, -1
  br label %84

84:                                               ; preds = %105, %82
  %85 = phi %"struct.std::__1::__hash_node_base"* [ %80, %82 ], [ %107, %105 ]
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 1
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %57
  br i1 %89, label %100, label %90

90:                                               ; preds = %84
  br i1 %63, label %93, label %91

91:                                               ; preds = %90
  %92 = and i64 %88, %83
  br label %97

93:                                               ; preds = %90
  %94 = icmp ult i64 %88, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = urem i64 %88, %59
  br label %97

97:                                               ; preds = %95, %93, %91
  %98 = phi i64 [ %92, %91 ], [ %96, %95 ], [ %88, %93 ]
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %105, label %121

100:                                              ; preds = %84
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, %1
  br i1 %104, label %109, label %105

105:                                              ; preds = %100, %97
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %121, label %84

109:                                              ; preds = %100
  %110 = ptrtoint %"struct.std::__1::__hash_node_base"* %85 to i64
  br label %111

111:                                              ; preds = %116, %109
  %112 = phi i64 [ %110, %109 ], [ %114, %116 ]
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to %"struct.std::__1::__hash_node"*
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %117, i64 0, i32 2, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %1
  br i1 %120, label %111, label %121

121:                                              ; preds = %97, %105, %111, %116, %55, %71, %78
  %122 = phi %"struct.std::__1::__hash_node_base"* [ null, %71 ], [ null, %55 ], [ null, %78 ], [ %85, %116 ], [ %85, %111 ], [ null, %105 ], [ null, %97 ]
  %123 = phi i64 [ 0, %71 ], [ 0, %55 ], [ 0, %78 ], [ 0, %111 ], [ %114, %116 ], [ 0, %105 ], [ 0, %97 ]
  %124 = inttoptr i64 %123 to %"struct.std::__1::__hash_node_base"*
  %125 = ptrtoint %"struct.std::__1::__hash_node_base"* %122 to i64
  %126 = load i8, i8* %27, align 4
  %127 = icmp ult i8 %126, 4
  br i1 %127, label %128, label %272

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 0, i64 0, i64 0
  %130 = load float, float* %129, align 4
  %131 = fcmp ogt float %130, 0.000000e+00
  br i1 %131, label %132, label %272

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 0, i64 1, i64 1
  %134 = load float, float* %133, align 4
  %135 = fcmp ogt float %134, 0.000000e+00
  br i1 %135, label %136, label %272

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 0, i64 2, i64 2
  %138 = load float, float* %137, align 4
  %139 = fcmp ogt float %138, 0.000000e+00
  br i1 %139, label %140, label %272

140:                                              ; preds = %136
  %141 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #18
  %142 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 1
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.024000e+03, float 1.024000e+03>, <4 x float>* %6, align 16
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* nonnull %5, %"class.gfx::RectF"* nonnull %7) #18
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %122, %124
  br i1 %144, label %155, label %145

145:                                              ; preds = %140
  %146 = bitcast %"class.gfx::Vector2d"* %8 to i8*
  %147 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %8, i64 0, i32 0
  %148 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %8, i64 0, i32 1
  %149 = bitcast %"class.gfx::Vector2d"* %9 to i8*
  %150 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %9, i64 0, i32 0
  %151 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %9, i64 0, i32 1
  %152 = getelementptr inbounds %"class.std::__1::vector.1343", %"class.std::__1::vector.1343"* %2, i64 0, i32 0, i32 1
  %153 = getelementptr inbounds %"class.std::__1::vector.1343", %"class.std::__1::vector.1343"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %154 = bitcast %"class.std::__1::unique_ptr.1324"** %152 to i64*
  br label %156

155:                                              ; preds = %267, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #18
  br label %272

156:                                              ; preds = %145, %267
  %157 = phi i64 [ %125, %145 ], [ %269, %267 ]
  %158 = inttoptr i64 %157 to %"struct.std::__1::__hash_node"*
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %158, i64 0, i32 2, i32 0, i32 1
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %160, align 8
  %162 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %163 = load i8, i8* %162, align 4, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %177, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = call { i64, i64 } @_ZN2cc8MathUtil36MapEnclosingClippedRectIgnoringErrorERKN3gfx9TransformERKNS1_4RectEf(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::Rect"* dereferenceable(16) %166, float 0x3F50624DE0000000) #18
  %168 = extractvalue { i64, i64 } %167, 0
  %169 = extractvalue { i64, i64 } %167, 1
  %170 = load i8, i8* %162, align 4, !range !2
  %171 = icmp eq i8 %170, 0
  %172 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %173 = bitcast %union.anon.1337* %172 to i64*
  store i64 %168, i64* %173, align 4
  %174 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %175 = bitcast %"class.gfx::Size"* %174 to i64*
  store i64 %169, i64* %175, align 4
  br i1 %171, label %176, label %177

176:                                              ; preds = %165
  store i8 1, i8* %162, align 4
  br label %177

177:                                              ; preds = %156, %165, %176
  %178 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 3, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = sitofp i32 %179 to float
  %181 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 3, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = sitofp i32 %182 to float
  %184 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 4, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = sitofp i32 %185 to float
  %187 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 4, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = sitofp i32 %188 to float
  %190 = fcmp une float %180, %186
  %191 = fcmp une float %183, %189
  %192 = or i1 %190, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %177
  %194 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %161, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %195 = load i8, i8* %194, align 4, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %256, label %197

197:                                              ; preds = %193, %177
  %198 = load float, float* %142, align 8
  %199 = fmul float %198, %180
  %200 = load float, float* %143, align 4
  %201 = fmul float %200, %183
  %202 = fcmp uno float %199, 0.000000e+00
  br i1 %202, label %267, label %203

203:                                              ; preds = %197
  %204 = fcmp ult float %199, 0xC1E0000000000000
  %205 = fcmp ugt float %199, 0x41DFFFFFE0000000
  %206 = or i1 %204, %205
  %207 = fcmp uno float %201, 0.000000e+00
  %208 = or i1 %206, %207
  br i1 %208, label %267, label %209

209:                                              ; preds = %203
  %210 = fcmp oge float %201, 0xC1E0000000000000
  %211 = fcmp ole float %201, 0x41DFFFFFE0000000
  %212 = and i1 %211, %210
  br i1 %212, label %213, label %267

213:                                              ; preds = %209
  %214 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %185, i32 1024) #18
  %215 = extractvalue { i32, i1 } %214, 1
  %216 = extractvalue { i32, i1 } %214, 0
  br i1 %215, label %267, label %217, !prof !13

217:                                              ; preds = %213
  %218 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %188, i32 1024) #18
  %219 = extractvalue { i32, i1 } %218, 1
  %220 = extractvalue { i32, i1 } %218, 0
  br i1 %219, label %267, label %221, !prof !13

221:                                              ; preds = %217
  %222 = fcmp ult float %199, 0.000000e+00
  %223 = fadd float %199, 5.000000e-01
  %224 = call float @llvm.floor.f32(float %223) #18
  %225 = fadd float %199, -5.000000e-01
  %226 = call float @llvm.ceil.f32(float %225) #18
  %227 = select i1 %222, float %226, float %224
  %228 = fcmp ult float %227, 0xC1E0000000000000
  %229 = fcmp ugt float %227, 0x41DFFFFFE0000000
  %230 = fcmp ogt float %227, 0xC1E0000000000000
  %231 = select i1 %230, float %227, float 0xC1E0000000000000
  %232 = fptosi float %231 to i32
  %233 = select i1 %228, i32 0, i32 2147483647
  %234 = select i1 %229, i32 %233, i32 %232
  %235 = fcmp ult float %201, 0.000000e+00
  %236 = fadd float %201, 5.000000e-01
  %237 = call float @llvm.floor.f32(float %236) #18
  %238 = fadd float %201, -5.000000e-01
  %239 = call float @llvm.ceil.f32(float %238) #18
  %240 = select i1 %235, float %239, float %237
  %241 = fcmp ult float %240, 0xC1E0000000000000
  %242 = fcmp ugt float %240, 0x41DFFFFFE0000000
  %243 = fcmp ogt float %240, 0xC1E0000000000000
  %244 = select i1 %243, float %240, float 0xC1E0000000000000
  %245 = fptosi float %244 to i32
  %246 = select i1 %241, i32 0, i32 2147483647
  %247 = select i1 %242, i32 %246, i32 %245
  %248 = icmp slt i32 %234, 1
  %249 = icmp slt i32 %247, 1
  %250 = or i1 %248, %249
  %251 = icmp slt i32 %216, 1
  %252 = or i1 %250, %251
  %253 = icmp slt i32 %220, 1
  %254 = or i1 %252, %253
  br i1 %254, label %267, label %255

255:                                              ; preds = %221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #18
  store i32 %234, i32* %147, align 4
  store i32 %247, i32* %148, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #18
  store i32 %216, i32* %150, align 4
  store i32 %220, i32* %151, align 4
  call void @_ZN3viz17CopyOutputRequest13SetScaleRatioERKN3gfx8Vector2dES4_(%"class.viz::CopyOutputRequest"* %161, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %8, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #18
  br label %256

256:                                              ; preds = %193, %255
  %257 = load %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"** %152, align 8
  %258 = load %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"** %153, align 8
  %259 = icmp ult %"class.std::__1::unique_ptr.1324"* %257, %258
  br i1 %259, label %260, label %266

260:                                              ; preds = %256
  %261 = bitcast %"class.std::__1::unique_ptr.1324"* %159 to i64*
  %262 = load i64, i64* %261, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %160, align 8
  %263 = bitcast %"class.std::__1::unique_ptr.1324"* %257 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %257, i64 1
  %265 = ptrtoint %"class.std::__1::unique_ptr.1324"* %264 to i64
  store i64 %265, i64* %154, align 8
  br label %267

266:                                              ; preds = %256
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1343"* %2, %"class.std::__1::unique_ptr.1324"* dereferenceable(8) %159) #18
  br label %267

267:                                              ; preds = %203, %213, %217, %221, %197, %209, %266, %260
  %268 = inttoptr i64 %157 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = inttoptr i64 %269 to %"struct.std::__1::__hash_node_base"*
  %271 = icmp eq %"struct.std::__1::__hash_node_base"* %270, %124
  br i1 %271, label %155, label %156

272:                                              ; preds = %128, %132, %121, %155, %136
  %273 = getelementptr inbounds %"class.std::__1::unordered_multimap", %"class.std::__1::unordered_multimap"* %56, i64 0, i32 0
  %274 = icmp eq %"struct.std::__1::__hash_node_base"* %122, %124
  br i1 %274, label %300, label %275

275:                                              ; preds = %272
  %276 = bitcast %"class.std::__1::unique_ptr.1499"* %4 to i8*
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.1499", %"class.std::__1::unique_ptr.1499"* %4, i64 0, i32 0, i32 0, i32 0
  %278 = getelementptr inbounds %"class.std::__1::unique_ptr.1499", %"class.std::__1::unique_ptr.1499"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  br label %279

279:                                              ; preds = %297, %275
  %280 = phi %"struct.std::__1::__hash_node_base"* [ %298, %297 ], [ %122, %275 ]
  %281 = phi i64 [ %283, %297 ], [ %125, %275 ]
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #18
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.1499"* nonnull sret %4, %"class.std::__1::__hash_table"* %273, %"struct.std::__1::__hash_node_base"* %280) #18
  %284 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %277, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %277, align 8
  %285 = icmp eq %"struct.std::__1::__hash_node"* %284, null
  br i1 %285, label %297, label %286

286:                                              ; preds = %279
  %287 = load i8, i8* %278, align 8, !range !2
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %295, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %284, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %291 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %290, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %290, align 8
  %292 = icmp eq %"class.viz::CopyOutputRequest"* %291, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %289
  call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %291) #18
  %294 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %291, i64 0, i32 0
  call void @_ZdlPv(i8* %294) #20
  br label %295

295:                                              ; preds = %293, %289, %286
  %296 = bitcast %"struct.std::__1::__hash_node"* %284 to i8*
  call void @_ZdlPv(i8* %296) #20
  br label %297

297:                                              ; preds = %295, %279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #18
  %298 = inttoptr i64 %283 to %"struct.std::__1::__hash_node_base"*
  %299 = icmp eq %"struct.std::__1::__hash_node_base"* %298, %124
  br i1 %299, label %300, label %279

300:                                              ; preds = %297, %272
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %26) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* nocapture readonly, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %9 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %9, i64 %7, i32 1
  br label %27

11:                                               ; preds = %4
  %12 = tail call dereferenceable(140) %"struct.cc::DrawTransforms"* @_ZNK2cc13PropertyTrees17GetDrawTransformsEii(%"class.cc::PropertyTrees"* %0, i32 %1, i32 %2)
  %13 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %12, i64 0, i32 2
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %12, i64 0, i32 5
  br label %27

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %12, i64 0, i32 0
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %12, i64 0, i32 4
  %24 = tail call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %23, %"class.gfx::Transform"* %3) #18
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %19, align 4
  store i8 %25, i8* %13, align 2
  %26 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %12, i64 0, i32 5
  br label %27

27:                                               ; preds = %6, %22, %16
  %28 = phi %"class.gfx::Transform"* [ %3, %16 ], [ %26, %22 ], [ %3, %6 ]
  %29 = phi %"class.gfx::Transform"* [ %17, %16 ], [ %3, %22 ], [ %10, %6 ]
  %30 = phi i1 [ true, %16 ], [ %24, %22 ], [ true, %6 ]
  %31 = bitcast %"class.gfx::Transform"* %28 to i8*
  %32 = bitcast %"class.gfx::Transform"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 68, i1 false)
  br label %33

33:                                               ; preds = %27, %18
  %34 = phi i1 [ false, %18 ], [ %30, %27 ]
  ret i1 %34
}

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN2cc8MathUtil36MapEnclosingClippedRectIgnoringErrorERKN3gfx9TransformERKNS1_4RectEf(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16), float) local_unnamed_addr #2

declare void @_ZN3viz17CopyOutputRequest13SetScaleRatioERKN3gfx8Vector2dES4_(%"class.viz::CopyOutputRequest"*, %"class.gfx::Vector2d"* dereferenceable(8), %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10EffectTree15HasCopyRequestsEv(%"class.cc::EffectTree"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree17ClearCopyRequestsEv(%"class.cc::EffectTree"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %5 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %4, align 8
  %6 = icmp eq %"struct.cc::EffectNode"* %3, %5
  br i1 %6, label %7, label %70

7:                                                ; preds = %70, %1
  %8 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %68, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11, %25
  %16 = phi %"struct.std::__1::__hash_node_base"* [ %18, %25 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 3
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %19 to %"class.viz::CopyOutputRequest"**
  %21 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %20, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %20, align 8
  %22 = icmp eq %"class.viz::CopyOutputRequest"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %15
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %21) #18
  %24 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %24) #20
  br label %25

25:                                               ; preds = %23, %15
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %16 to i8*
  tail call void @_ZdlPv(i8* %26) #20
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %18, null
  br i1 %27, label %28, label %15

28:                                               ; preds = %25, %11
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %12, align 8
  %29 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = add i64 %30, -1
  %35 = and i64 %30, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = sub i64 %30, %35
  br label %51

39:                                               ; preds = %51, %32
  %40 = phi i64 [ 0, %32 ], [ %65, %51 ]
  %41 = icmp eq i64 %35, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %47, %42 ], [ %40, %39 ]
  %44 = phi i64 [ %48, %42 ], [ %35, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %43
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %46, align 8
  %47 = add nuw i64 %43, 1
  %48 = add i64 %44, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %42, !llvm.loop !14

50:                                               ; preds = %39, %42, %28
  store i64 0, i64* %8, align 8
  br label %68

51:                                               ; preds = %51, %37
  %52 = phi i64 [ 0, %37 ], [ %65, %51 ]
  %53 = phi i64 [ %38, %37 ], [ %66, %51 ]
  %54 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, i64 %52
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %55, align 8
  %56 = or i64 %52, 1
  %57 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %58, align 8
  %59 = or i64 %52, 2
  %60 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, i64 %59
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %61, align 8
  %62 = or i64 %52, 3
  %63 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %64, align 8
  %65 = add nuw i64 %52, 4
  %66 = add i64 %53, -4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %39, label %51

68:                                               ; preds = %7, %50
  %69 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %69, align 8
  ret void

70:                                               ; preds = %1, %70
  %71 = phi %"struct.cc::EffectNode"* [ %77, %70 ], [ %3, %1 ]
  %72 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %71, i64 0, i32 16
  %73 = bitcast [3 x i8]* %72 to i24*
  %74 = load i24, i24* %73, align 4
  %75 = and i24 %74, -65539
  store i24 %75, i24* %73, align 4
  %76 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %71, i64 0, i32 22
  store i32 -1, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %71, i64 1
  %78 = icmp eq %"struct.cc::EffectNode"* %77, %5
  br i1 %78, label %7, label %70
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10EffectTree37LowestCommonAncestorWithRenderSurfaceEii(%"class.cc::EffectTree"* nocapture readonly, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = icmp eq i32 %1, %2
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %31
  %8 = phi i32 [ %2, %5 ], [ %33, %31 ]
  %9 = phi i32 [ %1, %5 ], [ %32, %31 ]
  %10 = icmp slt i32 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  %12 = icmp sgt i32 %8, -1
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = sext i32 %8 to i64
  %15 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 %14
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi %"struct.cc::EffectNode"* [ %16, %13 ], [ null, %11 ]
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %18, i64 0, i32 20
  %20 = load i32, i32* %19, align 8
  br label %31

21:                                               ; preds = %7
  %22 = icmp sgt i32 %9, -1
  br i1 %22, label %23, label %27

23:                                               ; preds = %21
  %24 = sext i32 %9 to i64
  %25 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %26 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %25, i64 %24
  br label %27

27:                                               ; preds = %21, %23
  %28 = phi %"struct.cc::EffectNode"* [ %26, %23 ], [ null, %21 ]
  %29 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 20
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %27, %17
  %32 = phi i32 [ %9, %17 ], [ %30, %27 ]
  %33 = phi i32 [ %20, %17 ], [ %8, %27 ]
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %7

35:                                               ; preds = %31, %3
  %36 = phi i32 [ %1, %3 ], [ %32, %31 ]
  ret i32 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2cc10EffectTree25ContributesToDrawnSurfaceEi(%"class.cc::EffectTree"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::EffectNode"* [ %8, %4 ], [ null, %2 ]
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %16, align 8
  %18 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 %15
  br label %19

19:                                               ; preds = %9, %14
  %20 = phi %"struct.cc::EffectNode"* [ %18, %14 ], [ null, %9 ]
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 16
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 4
  %24 = and i24 %23, 32
  %25 = icmp eq i24 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %19
  %27 = icmp eq %"struct.cc::EffectNode"* %20, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %20, i64 0, i32 16
  %30 = bitcast [3 x i8]* %29 to i24*
  %31 = load i24, i24* %30, align 4
  %32 = and i24 %31, 32
  %33 = icmp ne i24 %32, 0
  br label %34

34:                                               ; preds = %26, %19, %28
  %35 = phi i1 [ false, %19 ], [ true, %26 ], [ %33, %28 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree19ResetChangeTrackingEv(%"class.cc::EffectTree"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 288
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %28, %1
  ret void

15:                                               ; preds = %12, %28
  %16 = phi i64 [ %7, %12 ], [ %31, %28 ]
  %17 = phi i64 [ 1, %12 ], [ %29, %28 ]
  %18 = inttoptr i64 %16 to %"struct.cc::EffectNode"*
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %18, i64 %17, i32 16
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 4
  %22 = and i24 %21, -32769
  store i24 %22, i24* %20, align 4
  %23 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %13, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %23, i64 %17, i32 0, i32 0, i32 0
  %25 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %24, align 8
  %26 = icmp eq %"class.cc::RenderSurfaceImpl"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %15
  tail call void @_ZN2cc17RenderSurfaceImpl25ResetPropertyChangedFlagsEv(%"class.cc::RenderSurfaceImpl"* nonnull %25) #18
  br label %28

28:                                               ; preds = %15, %27
  %29 = add nuw nsw i64 %17, 1
  %30 = load i64, i64* %4, align 8
  %31 = load i64, i64* %6, align 8
  %32 = sub i64 %30, %31
  %33 = sdiv exact i64 %32, 288
  %34 = shl i64 %33, 32
  %35 = ashr exact i64 %34, 32
  %36 = icmp slt i64 %29, %35
  br i1 %36, label %15, label %14
}

declare void @_ZN2cc17RenderSurfaceImpl25ResetPropertyChangedFlagsEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10EffectTree18TakeRenderSurfacesEPNSt3__16vectorINS1_10unique_ptrINS_17RenderSurfaceImplENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.cc::EffectTree"* nocapture readonly, %"class.std::__1::vector.84"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %5 = bitcast %"struct.cc::EffectNode"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.30"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 288
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %1, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr.86"** %15 to i64*
  br label %19

18:                                               ; preds = %36, %2
  ret void

19:                                               ; preds = %13, %36
  %20 = phi i64 [ 1, %13 ], [ %37, %36 ]
  %21 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %14, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %21, i64 %20
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %23, align 8
  %25 = icmp eq %"class.cc::RenderSurfaceImpl"* %24, null
  %26 = ptrtoint %"class.cc::RenderSurfaceImpl"* %24 to i64
  br i1 %25, label %36, label %27

27:                                               ; preds = %19
  %28 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %15, align 8
  %29 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %16, align 8
  %30 = icmp ult %"class.std::__1::unique_ptr.86"* %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %23, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.86"* %28 to i64*
  store i64 %26, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %28, i64 1
  %34 = ptrtoint %"class.std::__1::unique_ptr.86"* %33 to i64
  store i64 %34, i64* %17, align 8
  br label %36

35:                                               ; preds = %27
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"* %1, %"class.std::__1::unique_ptr.86"* dereferenceable(8) %22) #18
  br label %36

36:                                               ; preds = %19, %35, %31
  %37 = add nuw nsw i64 %20, 1
  %38 = load i64, i64* %5, align 8
  %39 = load i64, i64* %7, align 8
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 288
  %42 = shl i64 %41, 32
  %43 = ashr exact i64 %42, 32
  %44 = icmp slt i64 %37, %43
  br i1 %44, label %19, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNSt3__16vectorINS1_10unique_ptrINS_17RenderSurfaceImplENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEPNS_13LayerTreeImplE(%"class.cc::EffectTree"* nocapture readonly, %"class.std::__1::vector.84"* nocapture readonly, %"class.cc::LayerTreeImpl"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less.1510", align 1
  %5 = alloca %"class.std::__1::vector.1352", align 8
  %6 = bitcast %"class.std::__1::vector.1352"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.std::__1::vector.1352", %"class.std::__1::vector.1352"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.1352", %"class.std::__1::vector.1352"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.1352", %"class.std::__1::vector.1352"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #18
  %10 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.cc::EffectNode"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.30"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 288
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %3
  %21 = bitcast %"struct.std::__1::pair.1354"** %8 to i64*
  %22 = bitcast %"class.std::__1::vector.1352"* %5 to i64*
  %23 = bitcast %"struct.std::__1::pair.1354"** %9 to i64*
  br label %47

24:                                               ; preds = %120, %3
  %25 = phi %"struct.std::__1::pair.1354"* [ null, %3 ], [ %121, %120 ]
  %26 = phi %"struct.std::__1::pair.1354"* [ null, %3 ], [ %122, %120 ]
  %27 = getelementptr inbounds %"struct.std::__1::__less.1510", %"struct.std::__1::__less.1510"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #18
  call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairImiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair.1354"* %26, %"struct.std::__1::pair.1354"* %25, %"struct.std::__1::__less.1510"* nonnull dereferenceable(1) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %1, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %1, i64 0, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %30, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEvT0_SI_T_"(%"class.std::__1::unique_ptr.86"* %29, %"class.std::__1::unique_ptr.86"* %31) #18
  %32 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %28, align 8
  %33 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %7, align 8
  %34 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %30, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.86"* %32, %34
  %36 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %8, align 8
  %37 = icmp ne %"struct.std::__1::pair.1354"* %33, %36
  br i1 %35, label %213, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 0
  br label %40

40:                                               ; preds = %38, %206
  %41 = phi %"struct.std::__1::pair.1354"* [ %36, %38 ], [ %207, %206 ]
  %42 = phi %"class.std::__1::unique_ptr.86"* [ %34, %38 ], [ %208, %206 ]
  %43 = phi i1 [ %37, %38 ], [ %212, %206 ]
  %44 = phi i8 [ 0, %38 ], [ 1, %206 ]
  %45 = phi %"class.std::__1::unique_ptr.86"* [ %32, %38 ], [ %210, %206 ]
  %46 = phi %"struct.std::__1::pair.1354"* [ %33, %38 ], [ %209, %206 ]
  br label %133

47:                                               ; preds = %20, %120
  %48 = phi %"struct.std::__1::pair.1354"* [ null, %20 ], [ %121, %120 ]
  %49 = phi %"struct.std::__1::pair.1354"* [ null, %20 ], [ %122, %120 ]
  %50 = phi i64 [ 0, %20 ], [ %123, %120 ]
  %51 = phi %"struct.std::__1::pair.1354"* [ null, %20 ], [ %124, %120 ]
  %52 = phi i64 [ %15, %20 ], [ %127, %120 ]
  %53 = phi i64 [ 1, %20 ], [ %125, %120 ]
  %54 = inttoptr i64 %52 to %"struct.cc::EffectNode"*
  %55 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %54, i64 %53, i32 17
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %120, label %58

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %54, i64 %53, i32 2
  %60 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %54, i64 %53, i32 0
  %61 = load i64, i64* %59, align 8
  %62 = load i32, i32* %60, align 4
  %63 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %9, align 8
  %64 = icmp ult %"struct.std::__1::pair.1354"* %51, %63
  %65 = ptrtoint %"struct.std::__1::pair.1354"* %63 to i64
  br i1 %64, label %66, label %71

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %51, i64 0, i32 0
  store i64 %61, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %51, i64 0, i32 1
  store i32 %62, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %51, i64 1
  %70 = ptrtoint %"struct.std::__1::pair.1354"* %69 to i64
  store i64 %70, i64* %21, align 8
  br label %120

71:                                               ; preds = %58
  %72 = ptrtoint %"struct.std::__1::pair.1354"* %51 to i64
  %73 = load i64, i64* %22, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 4
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 1152921504606846975
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::vector.1352"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %79) #19
  unreachable

80:                                               ; preds = %71
  %81 = sub i64 %65, %73
  %82 = ashr exact i64 %81, 4
  %83 = icmp ult i64 %82, 576460752303423487
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = ashr exact i64 %81, 3
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 1152921504606846975
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void @abort() #19
  unreachable

92:                                               ; preds = %89, %80
  %93 = phi i64 [ %87, %89 ], [ 1152921504606846975, %80 ]
  %94 = shl i64 %93, 4
  %95 = tail call i8* @_Znwm(i64 %94) #20
  %96 = bitcast i8* %95 to %"struct.std::__1::pair.1354"*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi %"struct.std::__1::pair.1354"* [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %99, i64 %75
  %101 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %99, i64 %98
  %102 = ptrtoint %"struct.std::__1::pair.1354"* %101 to i64
  %103 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %100, i64 0, i32 0
  store i64 %61, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %99, i64 %75, i32 1
  store i32 %62, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %100, i64 1
  %106 = ptrtoint %"struct.std::__1::pair.1354"* %105 to i64
  %107 = sub i64 %50, %73
  %108 = ashr exact i64 %107, 4
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %100, i64 %109
  %111 = ptrtoint %"struct.std::__1::pair.1354"* %110 to i64
  %112 = icmp sgt i64 %107, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %97
  %114 = bitcast %"struct.std::__1::pair.1354"* %110 to i8*
  %115 = inttoptr i64 %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 %107, i1 false) #18
  br label %116

116:                                              ; preds = %113, %97
  store i64 %111, i64* %22, align 8
  store i64 %106, i64* %21, align 8
  store i64 %102, i64* %23, align 8
  %117 = icmp eq i64 %73, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %119) #20
  br label %120

120:                                              ; preds = %47, %118, %116, %66
  %121 = phi %"struct.std::__1::pair.1354"* [ %48, %47 ], [ %105, %118 ], [ %105, %116 ], [ %69, %66 ]
  %122 = phi %"struct.std::__1::pair.1354"* [ %49, %47 ], [ %110, %118 ], [ %110, %116 ], [ %49, %66 ]
  %123 = phi i64 [ %50, %47 ], [ %106, %118 ], [ %106, %116 ], [ %70, %66 ]
  %124 = phi %"struct.std::__1::pair.1354"* [ %51, %47 ], [ %105, %118 ], [ %105, %116 ], [ %69, %66 ]
  %125 = add nuw nsw i64 %53, 1
  %126 = load i64, i64* %12, align 8
  %127 = load i64, i64* %14, align 8
  %128 = sub i64 %126, %127
  %129 = sdiv exact i64 %128, 288
  %130 = shl i64 %129, 32
  %131 = ashr exact i64 %130, 32
  %132 = icmp slt i64 %125, %131
  br i1 %132, label %47, label %24

133:                                              ; preds = %40, %163
  %134 = phi %"struct.std::__1::pair.1354"* [ %41, %40 ], [ %172, %163 ]
  %135 = phi %"class.std::__1::unique_ptr.86"* [ %42, %40 ], [ %170, %163 ]
  %136 = phi i1 [ %43, %40 ], [ %173, %163 ]
  %137 = phi %"class.std::__1::unique_ptr.86"* [ %45, %40 ], [ %168, %163 ]
  %138 = phi %"struct.std::__1::pair.1354"* [ %46, %40 ], [ %169, %163 ]
  br i1 %136, label %139, label %218

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %137, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %141, i64 0, i32 2
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %138, i64 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %143, %145
  br i1 %146, label %147, label %174

147:                                              ; preds = %139
  %148 = ptrtoint %"class.cc::RenderSurfaceImpl"* %141 to i64
  %149 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %138, i64 0, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = sext i32 %150 to i64
  %152 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %39, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %152, i64 %151
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %140, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %154, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.86"* %153 to i64*
  store i64 %148, i64* %156, align 8
  %157 = icmp eq %"class.cc::RenderSurfaceImpl"* %155, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %147
  %159 = bitcast %"class.cc::RenderSurfaceImpl"* %155 to void (%"class.cc::RenderSurfaceImpl"*)***
  %160 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %160, i64 1
  %162 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %161, align 8
  call void %162(%"class.cc::RenderSurfaceImpl"* nonnull %155) #18
  br label %163

163:                                              ; preds = %147, %158
  %164 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %39, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %164, i64 %151, i32 0, i32 0, i32 0
  %166 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %165, align 8
  %167 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %166, i64 0, i32 3
  store i32 %150, i32* %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %137, i64 1
  %169 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %138, i64 1
  %170 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %30, align 8
  %171 = icmp eq %"class.std::__1::unique_ptr.86"* %168, %170
  %172 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %8, align 8
  %173 = icmp ne %"struct.std::__1::pair.1354"* %169, %172
  br i1 %171, label %213, label %133

174:                                              ; preds = %139
  %175 = icmp ugt i64 %143, %145
  br i1 %175, label %176, label %204

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %138, i64 0, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %138, i64 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = call i8* @_Znwm(i64 400) #20
  %181 = bitcast i8* %180 to %"class.cc::RenderSurfaceImpl"*
  %182 = load i64, i64* %177, align 8
  call void @_ZN2cc17RenderSurfaceImplC1EPNS_13LayerTreeImplEm(%"class.cc::RenderSurfaceImpl"* nonnull %181, %"class.cc::LayerTreeImpl"* %2, i64 %182) #18
  %183 = ptrtoint i8* %180 to i64
  %184 = sext i32 %179 to i64
  %185 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %39, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %185, i64 %184
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %186, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %187, align 8
  %189 = bitcast %"class.std::__1::unique_ptr.86"* %186 to i64*
  store i64 %183, i64* %189, align 8
  %190 = icmp eq %"class.cc::RenderSurfaceImpl"* %188, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %176
  %192 = bitcast %"class.cc::RenderSurfaceImpl"* %188 to void (%"class.cc::RenderSurfaceImpl"*)***
  %193 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %193, i64 1
  %195 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %194, align 8
  call void %195(%"class.cc::RenderSurfaceImpl"* nonnull %188) #18
  br label %196

196:                                              ; preds = %191, %176
  %197 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %39, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %197, i64 %184, i32 0, i32 0, i32 0
  %199 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %198, align 8
  %200 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %199, i64 0, i32 3
  store i32 %179, i32* %200, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %138, i64 1
  %202 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %30, align 8
  %203 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %8, align 8
  br label %206

204:                                              ; preds = %174
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %137, i64 1
  br label %206

206:                                              ; preds = %204, %196
  %207 = phi %"struct.std::__1::pair.1354"* [ %203, %196 ], [ %134, %204 ]
  %208 = phi %"class.std::__1::unique_ptr.86"* [ %202, %196 ], [ %135, %204 ]
  %209 = phi %"struct.std::__1::pair.1354"* [ %201, %196 ], [ %138, %204 ]
  %210 = phi %"class.std::__1::unique_ptr.86"* [ %137, %196 ], [ %205, %204 ]
  %211 = icmp eq %"class.std::__1::unique_ptr.86"* %210, %208
  %212 = icmp ne %"struct.std::__1::pair.1354"* %209, %207
  br i1 %211, label %213, label %40

213:                                              ; preds = %206, %163, %24
  %214 = phi %"struct.std::__1::pair.1354"* [ %36, %24 ], [ %172, %163 ], [ %207, %206 ]
  %215 = phi i8 [ 0, %24 ], [ %44, %163 ], [ 1, %206 ]
  %216 = phi %"struct.std::__1::pair.1354"* [ %33, %24 ], [ %169, %163 ], [ %209, %206 ]
  %217 = phi i1 [ %37, %24 ], [ %173, %163 ], [ %212, %206 ]
  br i1 %217, label %218, label %221

218:                                              ; preds = %133, %213
  %219 = phi %"struct.std::__1::pair.1354"* [ %214, %213 ], [ %134, %133 ]
  %220 = phi %"struct.std::__1::pair.1354"* [ %216, %213 ], [ %138, %133 ]
  br label %221

221:                                              ; preds = %218, %213
  %222 = phi %"struct.std::__1::pair.1354"* [ %219, %218 ], [ %214, %213 ]
  %223 = phi %"struct.std::__1::pair.1354"* [ %220, %218 ], [ %216, %213 ]
  %224 = phi i8 [ 1, %218 ], [ %215, %213 ]
  %225 = icmp eq %"struct.std::__1::pair.1354"* %223, %222
  br i1 %225, label %257, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 0
  br label %228

228:                                              ; preds = %226, %249
  %229 = phi %"struct.std::__1::pair.1354"* [ %223, %226 ], [ %254, %249 ]
  %230 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %229, i64 0, i32 1
  %231 = load i32, i32* %230, align 8
  %232 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %229, i64 0, i32 0
  %233 = call i8* @_Znwm(i64 400) #20
  %234 = bitcast i8* %233 to %"class.cc::RenderSurfaceImpl"*
  %235 = load i64, i64* %232, align 8
  call void @_ZN2cc17RenderSurfaceImplC1EPNS_13LayerTreeImplEm(%"class.cc::RenderSurfaceImpl"* nonnull %234, %"class.cc::LayerTreeImpl"* %2, i64 %235) #18
  %236 = ptrtoint i8* %233 to i64
  %237 = sext i32 %231 to i64
  %238 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %227, align 8
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %238, i64 %237
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %239, i64 0, i32 0, i32 0, i32 0
  %241 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %240, align 8
  %242 = bitcast %"class.std::__1::unique_ptr.86"* %239 to i64*
  store i64 %236, i64* %242, align 8
  %243 = icmp eq %"class.cc::RenderSurfaceImpl"* %241, null
  br i1 %243, label %249, label %244

244:                                              ; preds = %228
  %245 = bitcast %"class.cc::RenderSurfaceImpl"* %241 to void (%"class.cc::RenderSurfaceImpl"*)***
  %246 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %246, i64 1
  %248 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %247, align 8
  call void %248(%"class.cc::RenderSurfaceImpl"* nonnull %241) #18
  br label %249

249:                                              ; preds = %244, %228
  %250 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %227, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %250, i64 %237, i32 0, i32 0, i32 0
  %252 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %251, align 8
  %253 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %252, i64 0, i32 3
  store i32 %231, i32* %253, align 8
  %254 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %229, i64 1
  %255 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %8, align 8
  %256 = icmp eq %"struct.std::__1::pair.1354"* %254, %255
  br i1 %256, label %257, label %228

257:                                              ; preds = %249, %221
  %258 = and i8 %224, 1
  %259 = icmp ne i8 %258, 0
  %260 = load %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"** %7, align 8
  %261 = icmp eq %"struct.std::__1::pair.1354"* %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %257
  %263 = ptrtoint %"struct.std::__1::pair.1354"* %260 to i64
  %264 = bitcast %"struct.std::__1::pair.1354"** %8 to i64*
  store i64 %263, i64* %264, align 8
  %265 = bitcast %"struct.std::__1::pair.1354"* %260 to i8*
  call void @_ZdlPv(i8* %265) #20
  br label %266

266:                                              ; preds = %257, %262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  ret i1 %259
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10EffectTree31ClippedHitTestRegionIsRectangleEi(%"class.cc::EffectTree"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = icmp sgt i32 %1, -1
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %8, i64 %6
  br label %10

10:                                               ; preds = %2, %5
  %11 = phi %"struct.cc::EffectNode"* [ %9, %5 ], [ null, %2 ]
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %68, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.gfx::Transform"* %3 to i8*
  %17 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %20

20:                                               ; preds = %15, %63
  %21 = phi %"struct.cc::EffectNode"* [ %11, %15 ], [ %64, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %16) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  store i8 0, i8* %17, align 4
  %22 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %18, align 8
  %23 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 18
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 20
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %33

28:                                               ; preds = %20
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %22, i64 0, i32 3, i32 5, i32 0, i32 0
  %31 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %30, align 8
  %32 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %31, i64 %29, i32 1
  br label %50

33:                                               ; preds = %20
  %34 = call dereferenceable(140) %"struct.cc::DrawTransforms"* @_ZNK2cc13PropertyTrees17GetDrawTransformsEii(%"class.cc::PropertyTrees"* %22, i32 %24, i32 %26) #18
  %35 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %34, i64 0, i32 2
  %36 = load i8, i8* %35, align 2, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %34, i64 0, i32 5
  br label %50

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %34, i64 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %34, i64 0, i32 4
  %46 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %45, %"class.gfx::Transform"* nonnull %3) #18
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %41, align 4
  store i8 %47, i8* %35, align 2
  %48 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %34, i64 0, i32 5
  %49 = bitcast %"class.gfx::Transform"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* nonnull align 4 %16, i64 68, i1 false) #18
  br i1 %46, label %53, label %55

50:                                               ; preds = %28, %38
  %51 = phi %"class.gfx::Transform"* [ %39, %38 ], [ %32, %28 ]
  %52 = bitcast %"class.gfx::Transform"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 %52, i64 68, i1 false) #18
  br label %53

53:                                               ; preds = %50, %44
  %54 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* nonnull %3) #18
  br i1 %54, label %56, label %55

55:                                               ; preds = %40, %44, %53
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %16) #18
  br label %68

56:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %16) #18
  %57 = load i32, i32* %25, align 8
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %63

59:                                               ; preds = %56
  %60 = sext i32 %57 to i64
  %61 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %19, align 8
  %62 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %61, i64 %60
  br label %63

63:                                               ; preds = %56, %59
  %64 = phi %"struct.cc::EffectNode"* [ %62, %59 ], [ null, %56 ]
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %20

68:                                               ; preds = %63, %10, %55
  %69 = phi i1 [ false, %55 ], [ true, %10 ], [ true, %63 ]
  ret i1 %69
}

declare zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10EffectTree26HitTestMayBeAffectedByMaskEi(%"class.cc::EffectTree"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::EffectNode"* [ %8, %4 ], [ null, %2 ]
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %40, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %16

16:                                               ; preds = %14, %35
  %17 = phi %"struct.cc::EffectNode"* [ %10, %14 ], [ %36, %35 ]
  %18 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 0, i32 11, i32 0
  %19 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %18) #18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %40

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 0, i32 16
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 4
  %25 = and i24 %24, 16384
  %26 = icmp eq i24 %25, 0
  br i1 %26, label %27, label %40

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %17, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = sext i32 %29 to i64
  %33 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %15, align 8
  %34 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %32
  br label %35

35:                                               ; preds = %27, %31
  %36 = phi %"struct.cc::EffectNode"* [ %34, %31 ], [ null, %27 ]
  %37 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %16

40:                                               ; preds = %21, %16, %35, %9
  %41 = phi i1 [ false, %9 ], [ false, %35 ], [ true, %16 ], [ true, %21 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8ClipTree15SetViewportClipEN3gfx5RectFE(%"class.cc::ClipTree"* nocapture, <2 x float>, <2 x float>) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %6 = bitcast %"struct.cc::ClipNode"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.102"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 184
  %12 = icmp ult i64 %11, 2
  %13 = inttoptr i64 %9 to %"struct.cc::ClipNode"*
  br i1 %12, label %40, label %14

14:                                               ; preds = %3
  %15 = extractelement <2 x float> %1, i32 0
  %16 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 1, i32 3, i32 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %15, %17
  br i1 %18, label %19, label %34

19:                                               ; preds = %14
  %20 = extractelement <2 x float> %1, i32 1
  %21 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 1, i32 3, i32 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = extractelement <2 x float> %2, i32 0
  %26 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 1, i32 3, i32 1, i32 0
  %27 = load float, float* %26, align 4
  %28 = fcmp oeq float %25, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = extractelement <2 x float> %2, i32 1
  %31 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 1, i32 3, i32 1, i32 1
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %40, label %34

34:                                               ; preds = %14, %24, %19, %29
  %35 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 1, i32 3
  %36 = bitcast %"class.gfx::RectF"* %35 to <2 x float>*
  store <2 x float> %1, <2 x float>* %36, align 4
  %37 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 1, i32 3, i32 1
  %38 = bitcast %"class.gfx::SizeF"* %37 to <2 x float>*
  store <2 x float> %2, <2 x float>* %38, align 4
  %39 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %39, align 8
  br label %40

40:                                               ; preds = %34, %29, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK2cc8ClipTree12ViewportClipEv(%"class.cc::ClipTree"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %2, align 8
  %4 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %3, i64 1, i32 3
  %5 = bitcast %"class.gfx::RectF"* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %3, i64 1, i32 3, i32 1
  %8 = bitcast %"class.gfx::SizeF"* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %6, 0
  %11 = insertvalue { <2 x float>, <2 x float> } %10, <2 x float> %9, 1
  ret { <2 x float>, <2 x float> } %11
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.cc::EffectTree"* @_ZN2cc10EffectTreeaSERKS0_(%"class.cc::EffectTree"* returned, %"class.cc::EffectTree"* readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.cc::EffectTree"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.30"* %5, %"struct.cc::EffectNode"* %7, %"struct.cc::EffectNode"* %9) #18
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %1, i64 0, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false) #18
  %13 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.cc::EffectNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.30"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 288
  %22 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr.86"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.84"* %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ugt i64 %21, %28
  %30 = inttoptr i64 %26 to %"class.std::__1::unique_ptr.86"*
  %31 = inttoptr i64 %24 to %"class.std::__1::unique_ptr.86"*
  br i1 %29, label %32, label %34

32:                                               ; preds = %10
  %33 = sub nsw i64 %21, %28
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.84"* %13, i64 %33) #18
  br label %53

34:                                               ; preds = %10
  %35 = icmp ult i64 %21, %28
  br i1 %35, label %36, label %53

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %30, i64 %21
  %38 = icmp eq %"class.std::__1::unique_ptr.86"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %36, %50
  %40 = phi %"class.std::__1::unique_ptr.86"* [ %41, %50 ], [ %31, %36 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %42, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %42, align 8
  %44 = icmp eq %"class.cc::RenderSurfaceImpl"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.cc::RenderSurfaceImpl"* %43 to void (%"class.cc::RenderSurfaceImpl"*)***
  %47 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %47, i64 1
  %49 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %48, align 8
  tail call void %49(%"class.cc::RenderSurfaceImpl"* nonnull %43) #18
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::unique_ptr.86"* %41, %37
  br i1 %51, label %52, label %39

52:                                               ; preds = %50, %36
  store %"class.std::__1::unique_ptr.86"* %37, %"class.std::__1::unique_ptr.86"** %22, align 8
  br label %53

53:                                               ; preds = %32, %34, %52
  ret %"class.cc::EffectTree"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTreeC2Ev(%"class.cc::ScrollTree"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::ScrollNode", align 8
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.cc::ScrollNode"* %2 to i8*
  %6 = bitcast %"class.std::__1::vector.122"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %5) #18
  call void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"* nonnull %2) #18
  %7 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %9, align 8
  %11 = icmp ult %"struct.cc::ScrollNode"* %8, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %8, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2) #18
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %8, i64 1
  %14 = ptrtoint %"struct.cc::ScrollNode"* %13 to i64
  %15 = bitcast %"struct.cc::ScrollNode"** %7 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.122"* %4, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2) #18
  %17 = bitcast %"struct.cc::ScrollNode"** %7 to i64*
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i64* [ %15, %12 ], [ %17, %16 ]
  call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %5) #18
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.122"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  %24 = inttoptr i64 %20 to %"struct.cc::ScrollNode"*
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 -1
  %26 = select i1 %23, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %25
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %26, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = load i64, i64* %19, align 8
  %29 = load i64, i64* %21, align 8
  %30 = icmp eq i64 %28, %29
  %31 = inttoptr i64 %28 to %"struct.cc::ScrollNode"*
  %32 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %31, i64 -1
  %33 = select i1 %30, %"struct.cc::ScrollNode"* null, %"struct.cc::ScrollNode"* %32
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 1
  store i32 -1, i32* %34, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc10ScrollTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %35 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 1
  store i32 -1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0
  %38 = bitcast %"class.base::flat_map.141"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 48, i1 false)
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %37) #18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTreeD2Ev(%"class.cc::ScrollTree"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc10ScrollTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #18
  %4 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.152", %"class.base::internal::flat_tree.152"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.155"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.std::__1::pair.155"* %6 to i8*
  %10 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair.155"* %11, %6
  br i1 %12, label %31, label %13

13:                                               ; preds = %8, %26
  %14 = phi %"struct.std::__1::pair.155"* [ %15, %26 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %14, i64 -1
  %16 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %14, i64 -1, i32 1, i32 0
  %17 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %16, align 8
  %18 = icmp eq %"class.cc::SyncedProperty.1312"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %17, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #18
  %21 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %17, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = bitcast %"class.cc::SyncedProperty.1312"* %17 to i8*
  tail call void @_ZdlPv(i8* %25) #20
  br label %26

26:                                               ; preds = %24, %19, %13
  %27 = icmp eq %"struct.std::__1::pair.155"* %15, %6
  br i1 %27, label %28, label %13

28:                                               ; preds = %26
  %29 = bitcast %"class.base::internal::flat_tree.152"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %8
  %32 = phi i8* [ %30, %28 ], [ %9, %8 ]
  store %"struct.std::__1::pair.155"* %6, %"struct.std::__1::pair.155"** %10, align 8
  tail call void @_ZdlPv(i8* %32) #20
  br label %33

33:                                               ; preds = %1, %31
  %34 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %34, align 8
  %36 = icmp eq %"struct.std::__1::pair.145"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.std::__1::pair.145"* %35 to i64
  %39 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::pair.145"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"struct.std::__1::pair.145"* %35 to i8*
  tail call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %33, %37
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_10ScrollNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %43 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %43, i64 0, i32 0, i32 0
  %45 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %44, align 8
  %46 = icmp eq %"struct.cc::ScrollNode"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %42
  %48 = bitcast %"struct.cc::ScrollNode"* %45 to i8*
  %49 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %50 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %49, align 8
  %51 = icmp eq %"struct.cc::ScrollNode"* %50, %45
  br i1 %51, label %59, label %52

52:                                               ; preds = %47, %52
  %53 = phi %"struct.cc::ScrollNode"* [ %54, %52 ], [ %50, %47 ]
  %54 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %53, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %54) #18
  %55 = icmp eq %"struct.cc::ScrollNode"* %54, %45
  br i1 %55, label %56, label %52

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::vector.122"* %43 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %47
  %60 = phi i8* [ %58, %56 ], [ %48, %47 ]
  store %"struct.cc::ScrollNode"* %45, %"struct.cc::ScrollNode"** %49, align 8
  tail call void @_ZdlPv(i8* %60) #20
  br label %61

61:                                               ; preds = %42, %59
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTreeD0Ev(%"class.cc::ScrollTree"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc10ScrollTreeD2Ev(%"class.cc::ScrollTree"* %0) #18
  %2 = bitcast %"class.cc::ScrollTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.cc::ScrollTree"* @_ZN2cc10ScrollTreeaSERKS0_(%"class.cc::ScrollTree"* returned, %"class.cc::ScrollTree"* readonly dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.cc::ScrollTree"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %5, %"struct.cc::ScrollNode"* %7, %"struct.cc::ScrollNode"* %9) #18
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %1, i64 0, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false) #18
  %13 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 1
  store i32 -1, i32* %13, align 8
  ret %"class.cc::ScrollTree"* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %6 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %13 = sub i64 %11, %12
  %14 = icmp eq i64 %13, 0
  %15 = inttoptr i64 %11 to %"struct.std::__1::pair"*
  br i1 %14, label %34, label %16

16:                                               ; preds = %4
  %17 = ashr exact i64 %13, 4
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi %"struct.std::__1::pair"* [ %8, %16 ], [ %30, %18 ]
  %20 = phi i64 [ %17, %16 ], [ %29, %18 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %27 = xor i64 %21, -1
  %28 = add i64 %20, %27
  %29 = select i1 %25, i64 %28, i64 %21
  %30 = select i1 %25, %"struct.std::__1::pair"* %26, %"struct.std::__1::pair"* %19
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %18

32:                                               ; preds = %18
  %33 = ptrtoint %"struct.std::__1::pair"* %30 to i64
  br label %34

34:                                               ; preds = %32, %4
  %35 = phi i64 [ %33, %32 ], [ %12, %4 ]
  %36 = phi %"struct.std::__1::pair"* [ %30, %32 ], [ %8, %4 ]
  %37 = icmp eq %"struct.std::__1::pair"* %36, %15
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %40, %1
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %44 = ptrtoint %"struct.std::__1::pair"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38, %42
  %46 = phi i64 [ %44, %42 ], [ %35, %34 ], [ %35, %38 ]
  %47 = inttoptr i64 %46 to %"struct.std::__1::pair"*
  %48 = icmp eq %"struct.std::__1::pair"* %36, %47
  %49 = select i1 %48, %"struct.std::__1::pair"* %15, %"struct.std::__1::pair"* %36
  %50 = icmp eq %"struct.std::__1::pair"* %49, %15
  br i1 %50, label %60, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %57, align 8
  %59 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %58, i64 %56
  br label %60

60:                                               ; preds = %2, %45, %51, %55
  %61 = phi %"struct.cc::ScrollNode"* [ null, %2 ], [ null, %45 ], [ %59, %55 ], [ null, %51 ]
  ret %"struct.cc::ScrollNode"* %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %6 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %13 = sub i64 %11, %12
  %14 = icmp eq i64 %13, 0
  %15 = inttoptr i64 %11 to %"struct.std::__1::pair"*
  br i1 %14, label %34, label %16

16:                                               ; preds = %4
  %17 = ashr exact i64 %13, 4
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi %"struct.std::__1::pair"* [ %8, %16 ], [ %30, %18 ]
  %20 = phi i64 [ %17, %16 ], [ %29, %18 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %27 = xor i64 %21, -1
  %28 = add i64 %20, %27
  %29 = select i1 %25, i64 %28, i64 %21
  %30 = select i1 %25, %"struct.std::__1::pair"* %26, %"struct.std::__1::pair"* %19
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %18

32:                                               ; preds = %18
  %33 = ptrtoint %"struct.std::__1::pair"* %30 to i64
  br label %34

34:                                               ; preds = %32, %4
  %35 = phi i64 [ %33, %32 ], [ %12, %4 ]
  %36 = phi %"struct.std::__1::pair"* [ %30, %32 ], [ %8, %4 ]
  %37 = icmp eq %"struct.std::__1::pair"* %36, %15
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %40, %1
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %44 = ptrtoint %"struct.std::__1::pair"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38, %42
  %46 = phi i64 [ %44, %42 ], [ %35, %34 ], [ %35, %38 ]
  %47 = inttoptr i64 %46 to %"struct.std::__1::pair"*
  %48 = icmp eq %"struct.std::__1::pair"* %36, %47
  %49 = select i1 %48, %"struct.std::__1::pair"* %15, %"struct.std::__1::pair"* %36
  %50 = icmp eq %"struct.std::__1::pair"* %49, %15
  br i1 %50, label %60, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %57, align 8
  %59 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %58, i64 %56
  br label %60

60:                                               ; preds = %2, %45, %51, %55
  %61 = phi %"struct.cc::ScrollNode"* [ null, %2 ], [ null, %45 ], [ %59, %55 ], [ null, %51 ]
  ret %"struct.cc::ScrollNode"* %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10ScrollTree12IsCompositedERKNS_10ScrollNodeE(%"class.cc::ScrollTree"* nocapture readnone, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 13
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 1
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree5clearEv(%"class.cc::ScrollTree"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_10ScrollNodeEE5clearEv(%"class.cc::PropertyTree.121"* %2)
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 11
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 1
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0
  %11 = bitcast %"class.base::internal::flat_tree.142"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair.145"** %13 to i64*
  store i64 %12, i64* %14, align 8
  br label %15

15:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::SizeF"*
  %6 = icmp sgt i32 %1, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 %8
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi %"struct.cc::ScrollNode"* [ %11, %7 ], [ null, %2 ]
  %14 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  %15 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %15, align 8
  %16 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  %17 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast <2 x float>* %3 to %"class.gfx::SizeF"*
  br i1 %6, label %19, label %24

19:                                               ; preds = %12
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %21, align 8
  %23 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 %20
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"struct.cc::ScrollNode"* [ %23, %19 ], [ null, %12 ]
  %26 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  %27 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %18, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 4, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 4, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %29, 0
  %33 = select i1 %32, i32 %29, i32 0
  %34 = sitofp i32 %33 to float
  store float %34, float* %26, align 8
  %35 = icmp sgt i32 %31, 0
  %36 = select i1 %35, i32 %31, i32 0
  %37 = sitofp i32 %36 to float
  store float %37, float* %27, align 4
  %38 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 5
  %39 = load i8, i8* %38, align 4
  %40 = and i8 %39, 4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %24
  %43 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %44 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %43, align 8
  %45 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %44, i64 0, i32 14
  %46 = bitcast %"class.gfx::Vector2dF"* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = extractelement <2 x float> %47, i32 0
  %49 = extractelement <2 x float> %47, i32 1
  call void @_ZN3gfx5SizeF7EnlargeEff(%"class.gfx::SizeF"* nonnull %18, float %48, float %49) #18
  br label %50

50:                                               ; preds = %24, %42
  %51 = bitcast <2 x float>* %3 to i64*
  %52 = load i64, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %53 = bitcast <2 x float>* %4 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 5
  %55 = load i8, i8* %54, align 4
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %105, label %58

58:                                               ; preds = %50
  %59 = lshr i64 %52, 32
  %60 = trunc i64 %59 to i32
  %61 = bitcast i32 %60 to float
  %62 = trunc i64 %52 to i32
  %63 = bitcast i32 %62 to float
  %64 = fcmp oeq float %63, 0.000000e+00
  %65 = fcmp oeq float %61, 0.000000e+00
  %66 = or i1 %64, %65
  br i1 %66, label %105, label %67

67:                                               ; preds = %58
  %68 = and i8 %55, 2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %72 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %71, align 8
  %73 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %72, i64 0, i32 3, i32 1
  %74 = load float, float* %73, align 8
  br label %75

75:                                               ; preds = %67, %70
  %76 = phi float [ %74, %70 ], [ 1.000000e+00, %67 ]
  %77 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %5, float %76, float %76) #18
  %78 = extractelement <2 x float> %77, i32 0
  %79 = call float @llvm.floor.f32(float %78) #18
  %80 = extractelement <2 x float> %77, i32 1
  %81 = call float @llvm.floor.f32(float %80) #18
  %82 = fcmp ogt float %79, 0x3EB0000000000000
  %83 = select i1 %82, float %79, float 0.000000e+00
  %84 = fcmp ogt float %81, 0x3EB0000000000000
  %85 = select i1 %84, float %81, float 0.000000e+00
  %86 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = call i64 @_ZNK2cc10ScrollTree16container_boundsEi(%"class.cc::ScrollTree"* %0, i32 %87)
  %89 = trunc i64 %88 to i32
  %90 = lshr i64 %88, 32
  %91 = trunc i64 %90 to i32
  %92 = sitofp i32 %89 to float
  %93 = fsub float %83, %92
  %94 = sitofp i32 %91 to float
  %95 = fsub float %85, %94
  %96 = fdiv float 1.000000e+00, %76
  %97 = fmul float %96, %93
  %98 = fmul float %96, %95
  %99 = fcmp oge float %97, 0.000000e+00
  %100 = select i1 %99, float %97, float 0.000000e+00
  %101 = fcmp oge float %98, 0.000000e+00
  %102 = select i1 %101, float %98, float 0.000000e+00
  %103 = insertelement <2 x float> undef, float %100, i32 0
  %104 = insertelement <2 x float> %103, float %102, i32 1
  br label %105

105:                                              ; preds = %58, %50, %75
  %106 = phi <2 x float> [ %104, %75 ], [ zeroinitializer, %50 ], [ zeroinitializer, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #18
  ret <2 x float> %106
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree13scroll_boundsEi(%"class.cc::ScrollTree"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.gfx::SizeF"*
  %5 = icmp sgt i32 %1, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::ScrollNode"* [ %10, %6 ], [ null, %2 ]
  %13 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  %14 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %12, i64 0, i32 4, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %12, i64 0, i32 4, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %16, 0
  %20 = select i1 %19, i32 %16, i32 0
  %21 = sitofp i32 %20 to float
  store float %21, float* %13, align 8
  %22 = icmp sgt i32 %18, 0
  %23 = select i1 %22, i32 %18, i32 0
  %24 = sitofp i32 %23 to float
  store float %24, float* %14, align 4
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %12, i64 0, i32 5
  %26 = load i8, i8* %25, align 4
  %27 = and i8 %26, 4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %31 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %30, align 8
  %32 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %31, i64 0, i32 14
  %33 = bitcast %"class.gfx::Vector2dF"* %32 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  %35 = extractelement <2 x float> %34, i32 0
  %36 = extractelement <2 x float> %34, i32 1
  call void @_ZN3gfx5SizeF7EnlargeEff(%"class.gfx::SizeF"* nonnull %4, float %35, float %36) #18
  br label %37

37:                                               ; preds = %11, %29
  %38 = load <2 x float>, <2 x float>* %3, align 8
  ret <2 x float> %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc10ScrollTree16container_boundsEi(%"class.cc::ScrollTree"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = alloca %"class.gfx::Vector2dF", align 4
  %6 = alloca <2 x float>, align 8
  %7 = alloca <2 x float>, align 8
  %8 = icmp sgt i32 %1, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %12, i64 %10
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi %"struct.cc::ScrollNode"* [ %13, %9 ], [ null, %2 ]
  %16 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %15, i64 0, i32 3
  %17 = bitcast %"class.gfx::Size"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %3, align 8
  %19 = bitcast %"class.gfx::Vector2dF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %20, align 4
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %15, i64 0, i32 5
  %23 = load i8, i8* %22, align 4
  %24 = and i8 %23, 4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14
  %27 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %28, align 8
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %29, i64 0, i32 13
  br label %39

31:                                               ; preds = %14
  %32 = and i8 %23, 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %37 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %36, align 8
  %38 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %37, i64 0, i32 14
  br label %39

39:                                               ; preds = %26, %34
  %40 = phi %"class.gfx::Vector2dF"* [ %38, %34 ], [ %30, %26 ]
  %41 = phi <2 x float>* [ %7, %34 ], [ %6, %26 ]
  %42 = phi i8* [ %35, %34 ], [ %27, %26 ]
  %43 = bitcast <2 x float>* %41 to %"class.gfx::Vector2dF"*
  %44 = bitcast %"class.gfx::Vector2dF"* %40 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = bitcast <2 x float>* %41 to i64*
  store i64 %45, i64* %46, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %5, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %43) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #18
  br label %47

47:                                               ; preds = %39, %31
  %48 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %5) #18
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = trunc i64 %50 to i32
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %4, i32 %49, i32 %51) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  %52 = load i64, i64* %3, align 8
  ret i64 %52
}

declare void @_ZN3gfx5SizeF7EnlargeEff(%"class.gfx::SizeF"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree22OnScrollOffsetAnimatedENS_9ElementIdEiRKN3gfx12ScrollOffsetEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, i64, i32, %"class.gfx::ScrollOffset"* nocapture readonly dereferenceable(8), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #7 align 2 {
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.gfx::ScrollOffset"*
  %10 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %11, i64 0, i32 12
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %70, label %15

15:                                               ; preds = %5
  %16 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %17 = and i8 %16, 25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %30, label %19, !prof !15

19:                                               ; preds = %15
  %20 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #18
  %21 = bitcast %"class.gfx::ScrollOffset"* %3 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast float* %6 to i32*
  store i32 %22, i32* %23, align 4
  %24 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %3, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %7 to i32*
  store i32 %27, i32* %28, align 4
  %29 = call i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), float* nonnull dereferenceable(4) %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), float* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #18
  br label %30

30:                                               ; preds = %15, %19
  %31 = phi i64 [ -6148914691236517206, %15 ], [ %29, %19 ]
  %32 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %15 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), %19 ]
  %33 = phi i8* [ null, %15 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %19 ]
  %34 = icmp sgt i32 %2, -1
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = sext i32 %2 to i64
  %37 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %37, align 8
  %39 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %38, i64 %36
  br label %40

40:                                               ; preds = %30, %35
  %41 = phi %"struct.cc::ScrollNode"* [ %39, %35 ], [ null, %30 ]
  %42 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #18
  %43 = bitcast %"class.gfx::ScrollOffset"* %3 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %41, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %0, i32 %46) #18
  %48 = extractelement <2 x float> %44, i32 0
  %49 = extractelement <2 x float> %47, i32 0
  %50 = fcmp ole float %48, %49
  %51 = select i1 %50, float %48, float %49
  %52 = extractelement <2 x float> %44, i32 1
  %53 = extractelement <2 x float> %47, i32 1
  %54 = fcmp ole float %52, %53
  %55 = select i1 %54, float %52, float %53
  %56 = fcmp oge float %51, 0.000000e+00
  %57 = select i1 %56, float %51, float 0.000000e+00
  %58 = insertelement <2 x float> undef, float %57, i32 0
  %59 = fcmp oge float %55, 0.000000e+00
  %60 = select i1 %59, float %55, float 0.000000e+00
  %61 = insertelement <2 x float> %58, float %60, i32 1
  store <2 x float> %61, <2 x float>* %8, align 8
  %62 = call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %0, i64 %1, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #18
  br i1 %62, label %63, label %64

63:                                               ; preds = %40
  call void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %4, i64 %1) #18
  br label %64

64:                                               ; preds = %63, %40
  call void @_ZN2cc13LayerTreeImpl22DidAnimateScrollOffsetEv(%"class.cc::LayerTreeImpl"* %4) #18
  %65 = icmp eq i8* %33, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = load i8, i8* %33, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %33, i8* %32, i64 %31) #18
  br label %70

70:                                               ; preds = %69, %66, %64, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, float* dereferenceable(4), i8*, float* dereferenceable(4)) local_unnamed_addr #10 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #18
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247438846, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = load float, float* %8, align 4
  %24 = load float, float* %10, align 4
  %25 = insertelement <2 x float> undef, float %23, i32 0
  %26 = insertelement <2 x float> %25, float %24, i32 1
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = bitcast %"union.base::trace_event::TraceValue"* %22 to <2 x double>*
  store <2 x double> %27, <2 x double>* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #18
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #18
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #18
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #18
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #18
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #20
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %4 = alloca %"class.gfx::ScrollOffset", align 4
  %5 = alloca %"class.gfx::ScrollOffset", align 4
  %6 = alloca %"struct.cc::ElementId", align 8
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %6, i64 0, i32 0
  store i64 %1, i64* %9, align 8
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %24, label %13, !prof !15

13:                                               ; preds = %3
  %14 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #18
  %15 = bitcast %"class.gfx::ScrollOffset"* %2 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast float* %7 to i32*
  store i32 %16, i32* %17, align 4
  %18 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %2, i64 0, i32 1
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast float* %8 to i32*
  store i32 %21, i32* %22, align 4
  %23 = call i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), float* nonnull dereferenceable(4) %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), float* nonnull dereferenceable(4) %8)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #18
  br label %24

24:                                               ; preds = %3, %13
  %25 = phi i64 [ -6148914691236517206, %3 ], [ %23, %13 ]
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), %13 ]
  %27 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %13 ]
  %28 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %28, align 8
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %29, i64 0, i32 11
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %132, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2
  %35 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"struct.std::__1::pair.145"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint %"struct.std::__1::pair.145"* %36 to i64
  %41 = sub i64 %39, %40
  %42 = icmp eq i64 %41, 0
  %43 = inttoptr i64 %39 to %"struct.std::__1::pair.145"*
  br i1 %42, label %61, label %44

44:                                               ; preds = %33
  %45 = ashr exact i64 %41, 4
  %46 = load i64, i64* %9, align 8
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi %"struct.std::__1::pair.145"* [ %36, %44 ], [ %59, %47 ]
  %49 = phi i64 [ %45, %44 ], [ %58, %47 ]
  %50 = lshr i64 %49, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %48, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %51, i64 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %46
  %55 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %51, i64 1
  %56 = xor i64 %50, -1
  %57 = add i64 %49, %56
  %58 = select i1 %54, i64 %57, i64 %50
  %59 = select i1 %54, %"struct.std::__1::pair.145"* %55, %"struct.std::__1::pair.145"* %48
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %47

61:                                               ; preds = %47, %33
  %62 = phi %"struct.std::__1::pair.145"* [ %36, %33 ], [ %59, %47 ]
  %63 = icmp eq %"struct.std::__1::pair.145"* %62, %43
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %62, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %65, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %64, %61
  %70 = bitcast %"class.gfx::ScrollOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #18
  %71 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 0
  store float 0.000000e+00, float* %71, align 4
  %72 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %72, align 4
  %73 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %34, i64 0, i32 0, i32 0
  %74 = call %"struct.std::__1::pair.145"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_(%"class.std::__1::vector.143"* %73, %"struct.std::__1::pair.145"* %62, %"struct.cc::ElementId"* nonnull dereferenceable(8) %6, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #18
  br label %75

75:                                               ; preds = %64, %69
  %76 = phi %"struct.std::__1::pair.145"* [ %74, %69 ], [ %62, %64 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %76, i64 0, i32 1, i32 0
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %2, i64 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fcmp oeq float %78, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %76, i64 0, i32 1, i32 1
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %2, i64 0, i32 1
  %86 = load float, float* %85, align 4
  %87 = fcmp oeq float %84, %86
  br i1 %87, label %157, label %88

88:                                               ; preds = %75, %82
  %89 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %35, align 8
  %90 = load i64, i64* %38, align 8
  %91 = ptrtoint %"struct.std::__1::pair.145"* %89 to i64
  %92 = sub i64 %90, %91
  %93 = icmp eq i64 %92, 0
  %94 = inttoptr i64 %90 to %"struct.std::__1::pair.145"*
  br i1 %93, label %112, label %95

95:                                               ; preds = %88
  %96 = ashr exact i64 %92, 4
  %97 = load i64, i64* %9, align 8
  br label %98

98:                                               ; preds = %98, %95
  %99 = phi %"struct.std::__1::pair.145"* [ %89, %95 ], [ %110, %98 ]
  %100 = phi i64 [ %96, %95 ], [ %109, %98 ]
  %101 = lshr i64 %100, 1
  %102 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 %101
  %103 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %102, i64 0, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp ult i64 %104, %97
  %106 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %102, i64 1
  %107 = xor i64 %101, -1
  %108 = add i64 %100, %107
  %109 = select i1 %105, i64 %108, i64 %101
  %110 = select i1 %105, %"struct.std::__1::pair.145"* %106, %"struct.std::__1::pair.145"* %99
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %112, label %98

112:                                              ; preds = %98, %88
  %113 = phi %"struct.std::__1::pair.145"* [ %89, %88 ], [ %110, %98 ]
  %114 = icmp eq %"struct.std::__1::pair.145"* %113, %94
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = load i64, i64* %9, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %113, i64 0, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = icmp ult i64 %116, %118
  br i1 %119, label %120, label %126

120:                                              ; preds = %115, %112
  %121 = bitcast %"class.gfx::ScrollOffset"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #18
  %122 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %5, i64 0, i32 0
  store float 0.000000e+00, float* %122, align 4
  %123 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %123, align 4
  %124 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %34, i64 0, i32 0, i32 0
  %125 = call %"struct.std::__1::pair.145"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_(%"class.std::__1::vector.143"* %124, %"struct.std::__1::pair.145"* %113, %"struct.cc::ElementId"* nonnull dereferenceable(8) %6, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #18
  br label %126

126:                                              ; preds = %115, %120
  %127 = phi %"struct.std::__1::pair.145"* [ %125, %120 ], [ %113, %115 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %127, i64 0, i32 1
  %129 = bitcast %"class.gfx::ScrollOffset"* %2 to i64*
  %130 = bitcast %"class.gfx::ScrollOffset"* %128 to i64*
  %131 = load i64, i64* %129, align 4
  store i64 %131, i64* %130, align 4
  br label %157

132:                                              ; preds = %24
  %133 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %29, i64 0, i32 12
  %134 = load i8, i8* %133, align 1, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %157, label %136

136:                                              ; preds = %132
  %137 = load i64, i64* %9, align 8
  %138 = call %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %137)
  %139 = bitcast %"class.gfx::ScrollOffset"* %2 to <2 x float>*
  %140 = load <2 x float>, <2 x float>* %139, align 4
  %141 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %138, i64 0, i32 2
  %142 = bitcast %"class.cc::AdditionGroup.1314"* %141 to <2 x float>*
  %143 = load <2 x float>, <2 x float>* %142, align 4
  %144 = fsub <2 x float> %140, %143
  %145 = extractelement <2 x float> %144, i32 0
  %146 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %138, i64 0, i32 3
  %147 = getelementptr inbounds %"class.cc::AdditionGroup.1314", %"class.cc::AdditionGroup.1314"* %146, i64 0, i32 0, i32 0
  %148 = load float, float* %147, align 4
  %149 = fcmp oeq float %148, %145
  br i1 %149, label %150, label %155

150:                                              ; preds = %136
  %151 = extractelement <2 x float> %144, i32 1
  %152 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %138, i64 0, i32 3, i32 0, i32 1
  %153 = load float, float* %152, align 4
  %154 = fcmp oeq float %153, %151
  br i1 %154, label %157, label %155

155:                                              ; preds = %150, %136
  %156 = bitcast %"class.cc::AdditionGroup.1314"* %146 to <2 x float>*
  store <2 x float> %144, <2 x float>* %156, align 4
  br label %157

157:                                              ; preds = %155, %150, %132, %82, %126
  %158 = phi i1 [ true, %126 ], [ false, %82 ], [ false, %132 ], [ true, %155 ], [ false, %150 ]
  %159 = icmp eq i8* %27, null
  br i1 %159, label %164, label %160

160:                                              ; preds = %157
  %161 = load i8, i8* %27, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %26, i64 %25) #18
  br label %164

164:                                              ; preds = %157, %160, %163
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree25ClampScrollOffsetToLimitsEN3gfx12ScrollOffsetERKNS_10ScrollNodeE(%"class.cc::ScrollTree"* nocapture readonly, <2 x float>, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168)) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %0, i32 %5)
  %7 = extractelement <2 x float> %1, i32 0
  %8 = extractelement <2 x float> %6, i32 0
  %9 = fcmp ole float %7, %8
  %10 = select i1 %9, float %7, float %8
  %11 = extractelement <2 x float> %1, i32 1
  %12 = extractelement <2 x float> %6, i32 1
  %13 = fcmp ole float %11, %12
  %14 = select i1 %13, float %11, float %12
  %15 = fcmp oge float %10, 0.000000e+00
  %16 = select i1 %15, float %10, float 0.000000e+00
  %17 = insertelement <2 x float> undef, float %16, i32 0
  %18 = fcmp oge float %14, 0.000000e+00
  %19 = select i1 %18, float %14, float 0.000000e+00
  %20 = insertelement <2 x float> %17, float %19, i32 1
  ret <2 x float> %20
}

declare void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"*, i64) local_unnamed_addr #2

declare void @_ZN2cc13LayerTreeImpl22DidAnimateScrollOffsetEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"*, i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %8, i64 %6
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"struct.cc::ScrollNode"* [ %9, %5 ], [ null, %1 ]
  ret %"struct.cc::ScrollNode"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %8, i64 %6
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"struct.cc::ScrollNode"* [ %9, %5 ], [ null, %1 ]
  ret %"struct.cc::ScrollNode"* %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc10ScrollTree28set_currently_scrolling_nodeEi(%"class.cc::ScrollTree"* nocapture, i32) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* noalias sret, %"class.cc::ScrollTree"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %2, -1
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %8, i64 %6
  br label %10

10:                                               ; preds = %3, %5
  %11 = phi %"struct.cc::ScrollNode"* [ %9, %5 ], [ null, %3 ]
  %12 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %1, i64 0, i32 0, i32 3
  %13 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %12, align 8
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %11, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, -1
  br i1 %16, label %17, label %22

17:                                               ; preds = %10
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %20 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %19, align 8
  %21 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %20, i64 %18
  br label %22

22:                                               ; preds = %10, %17
  %23 = phi %"struct.cc::TransformNode"* [ %21, %17 ], [ null, %10 ]
  %24 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %11, i64 0, i32 7, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %11, i64 0, i32 7, i32 1
  %28 = load float, float* %27, align 4
  tail call void @_ZN3gfx9TransformC1Effffff(%"class.gfx::Transform"* %0, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float %26, float %28) #18
  %29 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %23, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 3, i32 5, i32 0, i32 0
  %33 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %32, align 8
  %34 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %33, i64 %31, i32 1
  tail call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* dereferenceable(68) %34) #18
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %11, i64 0, i32 5
  %36 = load i8, i8* %35, align 4
  %37 = and i8 %36, 32
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %22
  tail call void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"* %0) #18
  br label %40

40:                                               ; preds = %22, %39
  ret void
}

declare void @_ZN3gfx9TransformC1Effffff(%"class.gfx::Transform"*, float, float, float, float, float, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #7 align 2 {
  %3 = alloca %"struct.cc::ElementId", align 8
  %4 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %3, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.base::flat_map.151", %"class.base::flat_map.151"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.155"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.155"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.155"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %2
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.155"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.155"* %25, %"struct.std::__1::pair.155"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.155"* %29 to i64
  br label %33

33:                                               ; preds = %31, %2
  %34 = phi i64 [ %32, %31 ], [ %11, %2 ]
  %35 = phi %"struct.std::__1::pair.155"* [ %29, %31 ], [ %7, %2 ]
  %36 = icmp eq %"struct.std::__1::pair.155"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %35, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair.155"* %42 to i64
  br label %44

44:                                               ; preds = %33, %37, %41
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair.155"*
  %47 = icmp eq %"struct.std::__1::pair.155"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair.155"* %14, %"struct.std::__1::pair.155"* %35
  %49 = icmp eq %"struct.std::__1::pair.155"* %48, %14
  br i1 %49, label %50, label %66

50:                                               ; preds = %44
  %51 = tail call i8* @_Znwm(i64 48) #20
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 0, i64 45, i1 false) #18
  %52 = call dereferenceable(8) %class.scoped_refptr.1311* @_ZN4base8flat_mapIN2cc9ElementIdE13scoped_refptrINS1_14SyncedPropertyINS1_13AdditionGroupIN3gfx12ScrollOffsetEEEEEENSt3__14lessIvEENSB_6vectorINSB_4pairIS2_SA_EENSB_9allocatorISG_EEEEEixERKS2_(%"class.base::flat_map.151"* %5, %"struct.cc::ElementId"* nonnull dereferenceable(8) %3)
  %53 = bitcast i8* %51 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %53) #18
  %54 = ptrtoint i8* %51 to i64
  %55 = bitcast %class.scoped_refptr.1311* %52 to i64*
  %56 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %52, i64 0, i32 0
  %57 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %56, align 8
  store i64 %54, i64* %55, align 8
  %58 = icmp eq %"class.cc::SyncedProperty.1312"* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %57, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #18
  %61 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %57, i64 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = bitcast %"class.cc::SyncedProperty.1312"* %57 to i8*
  call void @_ZdlPv(i8* %65) #20
  br label %66

66:                                               ; preds = %64, %59, %50, %44
  %67 = call dereferenceable(8) %class.scoped_refptr.1311* @_ZN4base8flat_mapIN2cc9ElementIdE13scoped_refptrINS1_14SyncedPropertyINS1_13AdditionGroupIN3gfx12ScrollOffsetEEEEEENSt3__14lessIvEENSB_6vectorINSB_4pairIS2_SA_EENSB_9allocatorISG_EEEEEixERKS2_(%"class.base::flat_map.151"* %5, %"struct.cc::ElementId"* nonnull dereferenceable(8) %3)
  %68 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %67, i64 0, i32 0
  %69 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %68, align 8
  ret %"class.cc::SyncedProperty.1312"* %69
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.1311* @_ZN4base8flat_mapIN2cc9ElementIdE13scoped_refptrINS1_14SyncedPropertyINS1_13AdditionGroupIN3gfx12ScrollOffsetEEEEEENSt3__14lessIvEENSB_6vectorINSB_4pairIS2_SA_EENSB_9allocatorISG_EEEEEixERKS2_(%"class.base::flat_map.151"*, %"struct.cc::ElementId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.scoped_refptr.1311, align 8
  %4 = getelementptr inbounds %"class.base::flat_map.151", %"class.base::flat_map.151"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.151", %"class.base::flat_map.151"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.155"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.155"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.155"*
  br i1 %11, label %31, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 4
  %15 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi %"struct.std::__1::pair.155"* [ %5, %13 ], [ %29, %17 ]
  %19 = phi i64 [ %14, %13 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %16
  %25 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.155"* %25, %"struct.std::__1::pair.155"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17, %2
  %32 = phi %"struct.std::__1::pair.155"* [ %5, %2 ], [ %29, %17 ]
  %33 = icmp eq %"struct.std::__1::pair.155"* %32, %12
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %36, %38
  br i1 %39, label %40, label %55

40:                                               ; preds = %31, %34
  %41 = bitcast %class.scoped_refptr.1311* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #18
  %42 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %3, i64 0, i32 0
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %42, align 8
  %43 = getelementptr inbounds %"class.base::flat_map.151", %"class.base::flat_map.151"* %0, i64 0, i32 0, i32 0
  %44 = call %"struct.std::__1::pair.155"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdE13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEENS_9allocatorISC_EEE7emplaceIJRKS3_SB_EEENS_11__wrap_iterIPSC_EENSJ_IPKSC_EEDpOT_(%"class.std::__1::vector.153"* %43, %"struct.std::__1::pair.155"* %32, %"struct.cc::ElementId"* dereferenceable(8) %1, %class.scoped_refptr.1311* nonnull dereferenceable(8) %3) #18
  %45 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %42, align 8
  %46 = icmp eq %"class.cc::SyncedProperty.1312"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %45, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #18
  %49 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %45, i64 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = bitcast %"class.cc::SyncedProperty.1312"* %45 to i8*
  call void @_ZdlPv(i8* %53) #20
  br label %54

54:                                               ; preds = %40, %47, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #18
  br label %55

55:                                               ; preds = %54, %34
  %56 = phi %"struct.std::__1::pair.155"* [ %44, %54 ], [ %32, %34 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %56, i64 0, i32 1
  ret %class.scoped_refptr.1311* %57
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.cc::SyncedProperty.1312"* @_ZNK2cc10ScrollTree21GetSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.155"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.155"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.155"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.155"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.155"* %22, %"struct.std::__1::pair.155"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair.155"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair.155"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair.155"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.155"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair.155"*
  %44 = icmp eq %"struct.std::__1::pair.155"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair.155"* %11, %"struct.std::__1::pair.155"* %32
  %46 = icmp eq %"struct.std::__1::pair.155"* %45, %11
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %45, i64 0, i32 1, i32 0
  %49 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %48, align 8
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi %"class.cc::SyncedProperty.1312"* [ %49, %47 ], [ null, %41 ]
  ret %"class.cc::SyncedProperty.1312"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc10ScrollTree28ClampScrollToMaxScrollOffsetERKNS_10ScrollNodeEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #7 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %7 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 8, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %8)
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %0, i32 %11) #18
  %13 = fcmp ole <2 x float> %9, %12
  %14 = select <2 x i1> %13, <2 x float> %9, <2 x float> %12
  %15 = fcmp oge <2 x float> %14, zeroinitializer
  %16 = select <2 x i1> %15, <2 x float> %14, <2 x float> zeroinitializer
  %17 = fsub <2 x float> %16, %9
  store <2 x float> %17, <2 x float>* %5, align 8
  %18 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %6) #18
  br i1 %18, label %58, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %6, i64 0, i32 1
  %21 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %22 = bitcast <2 x float>* %4 to %"class.gfx::ScrollOffset"*
  %23 = load float, float* %21, align 8
  %24 = load float, float* %20, align 4
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 4
  %27 = and i8 %26, 64
  %28 = icmp eq i8 %27, 0
  %29 = icmp sgt i8 %26, -1
  %30 = load i64, i64* %7, align 8
  %31 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %30) #18
  %32 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  %33 = select i1 %28, float 0.000000e+00, float %23
  %34 = extractelement <2 x float> %31, i32 0
  %35 = fadd float %33, %34
  %36 = select i1 %29, float 0.000000e+00, float %24
  %37 = extractelement <2 x float> %31, i32 1
  %38 = fadd float %36, %37
  %39 = load i32, i32* %10, align 8
  %40 = call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %0, i32 %39) #18
  %41 = extractelement <2 x float> %40, i32 0
  %42 = fcmp ole float %35, %41
  %43 = select i1 %42, float %35, float %41
  %44 = extractelement <2 x float> %40, i32 1
  %45 = fcmp ole float %38, %44
  %46 = select i1 %45, float %38, float %44
  %47 = fcmp oge float %43, 0.000000e+00
  %48 = select i1 %47, float %43, float 0.000000e+00
  %49 = insertelement <2 x float> undef, float %48, i32 0
  %50 = fcmp oge float %46, 0.000000e+00
  %51 = select i1 %50, float %46, float 0.000000e+00
  %52 = insertelement <2 x float> %49, float %51, i32 1
  store <2 x float> %52, <2 x float>* %4, align 8
  %53 = load i64, i64* %7, align 8
  %54 = call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %0, i64 %53, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %22) #18
  br i1 %54, label %55, label %57

55:                                               ; preds = %19
  %56 = load i64, i64* %7, align 8
  call void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %2, i64 %56) #18
  br label %57

57:                                               ; preds = %19, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %58

58:                                               ; preds = %57, %3
  %59 = load <2 x float>, <2 x float>* %5, align 8
  ret <2 x float> %59
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* nocapture readonly, i64) local_unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 11
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %57, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair.145"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint %"struct.std::__1::pair.145"* %10 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, 0
  %17 = inttoptr i64 %13 to %"struct.std::__1::pair.145"*
  br i1 %16, label %36, label %18

18:                                               ; preds = %8
  %19 = ashr exact i64 %15, 4
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"struct.std::__1::pair.145"* [ %10, %18 ], [ %32, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %31, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %21, i64 %23
  %25 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %24, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, %1
  %28 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %24, i64 1
  %29 = xor i64 %23, -1
  %30 = add i64 %22, %29
  %31 = select i1 %27, i64 %30, i64 %23
  %32 = select i1 %27, %"struct.std::__1::pair.145"* %28, %"struct.std::__1::pair.145"* %21
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %20

34:                                               ; preds = %20
  %35 = ptrtoint %"struct.std::__1::pair.145"* %32 to i64
  br label %36

36:                                               ; preds = %34, %8
  %37 = phi i64 [ %35, %34 ], [ %14, %8 ]
  %38 = phi %"struct.std::__1::pair.145"* [ %32, %34 ], [ %10, %8 ]
  %39 = icmp eq %"struct.std::__1::pair.145"* %38, %17
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %38, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, %1
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %38, i64 1
  %46 = ptrtoint %"struct.std::__1::pair.145"* %45 to i64
  br label %47

47:                                               ; preds = %36, %40, %44
  %48 = phi i64 [ %46, %44 ], [ %37, %36 ], [ %37, %40 ]
  %49 = inttoptr i64 %48 to %"struct.std::__1::pair.145"*
  %50 = icmp eq %"struct.std::__1::pair.145"* %38, %49
  %51 = select i1 %50, %"struct.std::__1::pair.145"* %17, %"struct.std::__1::pair.145"* %38
  %52 = icmp eq %"struct.std::__1::pair.145"* %51, %17
  br i1 %52, label %176, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %51, i64 0, i32 1
  %55 = bitcast %"class.gfx::ScrollOffset"* %54 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 8
  br label %176

57:                                               ; preds = %2
  %58 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %58, align 8
  %60 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"struct.std::__1::pair.155"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = ptrtoint %"struct.std::__1::pair.155"* %59 to i64
  %64 = sub i64 %62, %63
  %65 = icmp eq i64 %64, 0
  %66 = inttoptr i64 %62 to %"struct.std::__1::pair.155"*
  br i1 %65, label %85, label %67

67:                                               ; preds = %57
  %68 = ashr exact i64 %64, 4
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi %"struct.std::__1::pair.155"* [ %59, %67 ], [ %81, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %80, %69 ]
  %72 = lshr i64 %71, 1
  %73 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %70, i64 %72
  %74 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %73, i64 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %75, %1
  %77 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %73, i64 1
  %78 = xor i64 %72, -1
  %79 = add i64 %71, %78
  %80 = select i1 %76, i64 %79, i64 %72
  %81 = select i1 %76, %"struct.std::__1::pair.155"* %77, %"struct.std::__1::pair.155"* %70
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %69

83:                                               ; preds = %69
  %84 = ptrtoint %"struct.std::__1::pair.155"* %81 to i64
  br label %85

85:                                               ; preds = %83, %57
  %86 = phi i64 [ %84, %83 ], [ %63, %57 ]
  %87 = phi %"struct.std::__1::pair.155"* [ %81, %83 ], [ %59, %57 ]
  %88 = icmp eq %"struct.std::__1::pair.155"* %87, %66
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %87, i64 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp ugt i64 %91, %1
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %87, i64 1
  %95 = ptrtoint %"struct.std::__1::pair.155"* %94 to i64
  br label %96

96:                                               ; preds = %93, %89, %85
  %97 = phi i64 [ %95, %93 ], [ %86, %85 ], [ %86, %89 ]
  %98 = inttoptr i64 %97 to %"struct.std::__1::pair.155"*
  %99 = icmp eq %"struct.std::__1::pair.155"* %87, %98
  %100 = select i1 %99, %"struct.std::__1::pair.155"* %66, %"struct.std::__1::pair.155"* %87
  %101 = icmp eq %"struct.std::__1::pair.155"* %100, %66
  br i1 %101, label %176, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %100, i64 0, i32 1, i32 0
  %104 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %103, align 8
  %105 = icmp eq %"class.cc::SyncedProperty.1312"* %104, null
  br i1 %105, label %176, label %106

106:                                              ; preds = %102
  br i1 %65, label %125, label %107

107:                                              ; preds = %106
  %108 = ashr exact i64 %64, 4
  br label %109

109:                                              ; preds = %109, %107
  %110 = phi %"struct.std::__1::pair.155"* [ %59, %107 ], [ %121, %109 ]
  %111 = phi i64 [ %108, %107 ], [ %120, %109 ]
  %112 = lshr i64 %111, 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 %112
  %114 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %113, i64 0, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %115, %1
  %117 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %113, i64 1
  %118 = xor i64 %112, -1
  %119 = add i64 %111, %118
  %120 = select i1 %116, i64 %119, i64 %112
  %121 = select i1 %116, %"struct.std::__1::pair.155"* %117, %"struct.std::__1::pair.155"* %110
  %122 = icmp eq i64 %120, 0
  br i1 %122, label %123, label %109

123:                                              ; preds = %109
  %124 = ptrtoint %"struct.std::__1::pair.155"* %121 to i64
  br label %125

125:                                              ; preds = %123, %106
  %126 = phi i64 [ %124, %123 ], [ %63, %106 ]
  %127 = phi %"struct.std::__1::pair.155"* [ %121, %123 ], [ %59, %106 ]
  %128 = icmp eq %"struct.std::__1::pair.155"* %127, %66
  br i1 %128, label %136, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %127, i64 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp ugt i64 %131, %1
  br i1 %132, label %136, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %127, i64 1
  %135 = ptrtoint %"struct.std::__1::pair.155"* %134 to i64
  br label %136

136:                                              ; preds = %133, %129, %125
  %137 = phi i64 [ %135, %133 ], [ %126, %125 ], [ %126, %129 ]
  %138 = inttoptr i64 %137 to %"struct.std::__1::pair.155"*
  %139 = icmp eq %"struct.std::__1::pair.155"* %127, %138
  %140 = select i1 %139, %"struct.std::__1::pair.155"* %66, %"struct.std::__1::pair.155"* %127
  %141 = icmp eq %"struct.std::__1::pair.155"* %140, %66
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %140, i64 0, i32 1, i32 0
  %144 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %143, align 8
  br label %145

145:                                              ; preds = %136, %142
  %146 = phi %"class.cc::SyncedProperty.1312"* [ %144, %142 ], [ null, %136 ]
  %147 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 12
  %148 = load i8, i8* %147, align 1, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %146, i64 0, i32 2
  %152 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %146, i64 0, i32 3
  %153 = bitcast %"class.cc::AdditionGroup.1314"* %152 to <2 x float>*
  %154 = load <2 x float>, <2 x float>* %153, align 4
  %155 = bitcast %"class.cc::AdditionGroup.1314"* %151 to <2 x float>*
  %156 = load <2 x float>, <2 x float>* %155, align 4
  %157 = fadd <2 x float> %154, %156
  br label %176

158:                                              ; preds = %145
  %159 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %146, i64 0, i32 1
  %160 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %146, i64 0, i32 6
  %161 = load i8, i8* %160, align 4, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %171

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %146, i64 0, i32 3
  %165 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %146, i64 0, i32 5
  %166 = bitcast %"class.cc::AdditionGroup.1314"* %165 to <2 x float>*
  %167 = load <2 x float>, <2 x float>* %166, align 4
  %168 = bitcast %"class.cc::AdditionGroup.1314"* %164 to <2 x float>*
  %169 = load <2 x float>, <2 x float>* %168, align 4
  %170 = fsub <2 x float> %169, %167
  br label %171

171:                                              ; preds = %163, %158
  %172 = phi <2 x float> [ %170, %163 ], [ zeroinitializer, %158 ]
  %173 = bitcast %"class.cc::AdditionGroup.1314"* %159 to <2 x float>*
  %174 = load <2 x float>, <2 x float>* %173, align 4
  %175 = fadd <2 x float> %172, %174
  br label %176

176:                                              ; preds = %47, %96, %102, %171, %150, %53
  %177 = phi <2 x float> [ %56, %53 ], [ zeroinitializer, %47 ], [ %157, %150 ], [ %175, %171 ], [ zeroinitializer, %102 ], [ zeroinitializer, %96 ]
  ret <2 x float> %177
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #7 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::ScrollOffset"*
  %7 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 64
  %12 = icmp eq i8 %11, 0
  %13 = icmp sgt i8 %10, -1
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 8, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %15)
  %17 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  %18 = insertelement <2 x i1> undef, i1 %12, i32 0
  %19 = insertelement <2 x i1> %18, i1 %13, i32 1
  %20 = select <2 x i1> %19, <2 x float> zeroinitializer, <2 x float> %8
  %21 = fadd <2 x float> %20, %16
  %22 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %0, i32 %23) #18
  %25 = fcmp ole <2 x float> %21, %24
  %26 = select <2 x i1> %25, <2 x float> %21, <2 x float> %24
  %27 = fcmp oge <2 x float> %26, zeroinitializer
  %28 = select <2 x i1> %27, <2 x float> %26, <2 x float> zeroinitializer
  store <2 x float> %28, <2 x float>* %5, align 8
  %29 = load i64, i64* %14, align 8
  %30 = call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %0, i64 %29, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %6)
  br i1 %30, label %31, label %33

31:                                               ; preds = %4
  %32 = load i64, i64* %14, align 8
  tail call void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %3, i64 %32) #18
  br label %33

33:                                               ; preds = %31, %4
  %34 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = fadd <2 x float> %16, %35
  %37 = fsub <2 x float> %36, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  ret <2 x float> %37
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree27GetPixelSnappedScrollOffsetEi(%"class.cc::ScrollTree"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %7, i64 %5
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi %"struct.cc::ScrollNode"* [ %8, %4 ], [ null, %2 ]
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 0, i32 8, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %12)
  %14 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %15 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %14, align 8
  %16 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %15, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %22 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %21, align 8
  %23 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %22, i64 %20
  br label %24

24:                                               ; preds = %9, %19
  %25 = phi %"struct.cc::TransformNode"* [ %23, %19 ], [ null, %9 ]
  %26 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %25, i64 0, i32 10
  %27 = bitcast i24* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 512
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %50, label %31

31:                                               ; preds = %24
  %32 = and i32 %28, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %15, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %25, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  tail call void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"* %35, i32 %37)
  br label %38

38:                                               ; preds = %31, %34
  %39 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %25, i64 0, i32 12, i32 0
  %40 = bitcast float* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  %42 = fsub <2 x float> %13, %41
  %43 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %0, i32 %44) #18
  %46 = fcmp ole <2 x float> %42, %45
  %47 = select <2 x i1> %46, <2 x float> %42, <2 x float> %45
  %48 = fcmp oge <2 x float> %47, zeroinitializer
  %49 = select <2 x i1> %48, <2 x float> %47, <2 x float> zeroinitializer
  br label %50

50:                                               ; preds = %24, %38
  %51 = phi <2 x float> [ %13, %24 ], [ %49, %38 ]
  ret <2 x float> %51
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc10ScrollTree22PullDeltaForMainThreadEPNS_14SyncedPropertyINS_13AdditionGroupIN3gfx12ScrollOffsetEEEEEb(%"class.cc::ScrollTree"* nocapture readnone, %"class.cc::SyncedProperty.1312"* nocapture, i1 zeroext) local_unnamed_addr #7 align 2 {
  br i1 %2, label %4, label %20

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 6
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 5
  %11 = bitcast %"class.cc::AdditionGroup.1314"* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = bitcast %"class.cc::AdditionGroup.1314"* %9 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fsub <2 x float> %14, %12
  br label %16

16:                                               ; preds = %4, %8
  %17 = phi <2 x float> [ %15, %8 ], [ zeroinitializer, %4 ]
  %18 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 4
  %19 = bitcast %"class.cc::AdditionGroup.1314"* %18 to <2 x float>*
  store <2 x float> %17, <2 x float>* %19, align 4
  br label %65

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 2
  %22 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 3
  %23 = bitcast %"class.cc::AdditionGroup.1314"* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = bitcast %"class.cc::AdditionGroup.1314"* %21 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fadd <2 x float> %24, %26
  %28 = call <2 x float> @llvm.round.v2f32(<2 x float> %27)
  %29 = call <2 x float> @llvm.round.v2f32(<2 x float> %26)
  %30 = fsub <2 x float> %26, %29
  %31 = fadd <2 x float> %28, %30
  %32 = fsub <2 x float> %31, %26
  %33 = extractelement <2 x float> %32, i32 0
  %34 = extractelement <2 x float> %24, i32 0
  %35 = fcmp oeq float %34, %33
  br i1 %35, label %36, label %43

36:                                               ; preds = %20
  %37 = extractelement <2 x float> %32, i32 1
  %38 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 3, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp oeq float %39, %37
  %41 = insertelement <2 x float> undef, float %34, i32 0
  %42 = insertelement <2 x float> %41, float %39, i32 1
  br i1 %40, label %44, label %43

43:                                               ; preds = %36, %20
  store <2 x float> %32, <2 x float>* %23, align 4
  br label %44

44:                                               ; preds = %36, %43
  %45 = phi <2 x float> [ %24, %36 ], [ %32, %43 ]
  %46 = phi <2 x float> [ %42, %36 ], [ %32, %43 ]
  %47 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 6
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 5
  %52 = bitcast %"class.cc::AdditionGroup.1314"* %51 to <2 x float>*
  %53 = load <2 x float>, <2 x float>* %52, align 4
  %54 = fsub <2 x float> %45, %53
  br label %55

55:                                               ; preds = %44, %50
  %56 = phi <2 x float> [ %54, %50 ], [ zeroinitializer, %44 ]
  %57 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %1, i64 0, i32 4
  %58 = bitcast %"class.cc::AdditionGroup.1314"* %57 to <2 x float>*
  store <2 x float> %56, <2 x float>* %58, align 4
  %59 = fsub <2 x float> %27, %26
  %60 = fcmp oeq <2 x float> %46, %59
  %61 = extractelement <2 x i1> %60, i32 0
  %62 = extractelement <2 x i1> %60, i32 1
  %63 = and i1 %61, %62
  br i1 %63, label %65, label %64

64:                                               ; preds = %55
  store <2 x float> %59, <2 x float>* %23, align 4
  br label %65

65:                                               ; preds = %55, %64, %16
  %66 = phi <2 x float> [ %17, %16 ], [ %56, %64 ], [ %56, %55 ]
  ret <2 x float> %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE(%"class.cc::ScrollTree"* nocapture readonly, %"struct.cc::CompositorCommitData"*, i64, i1 zeroext, %"class.base::internal::flat_tree.1385"* nocapture readonly dereferenceable(24)) local_unnamed_addr #7 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca [23 x i8], align 1
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca %"struct.cc::CompositorCommitData::ScrollUpdateInfo", align 8
  %11 = alloca %"class.absl::optional.1366", align 8
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15, !prof !15

15:                                               ; preds = %5
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %17 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %19, i64* %18, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %15 ]
  %23 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), %15 ]
  %24 = phi i64 [ -6148914691236517206, %5 ], [ %20, %15 ]
  %25 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %25, align 8
  %27 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %28 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %27, align 8
  %29 = icmp eq %"struct.std::__1::pair.155"* %26, %28
  br i1 %29, label %51, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds [23 x i8], [23 x i8]* %7, i64 0, i64 0
  %32 = getelementptr inbounds %"class.base::internal::flat_tree.1385", %"class.base::internal::flat_tree.1385"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.1385", %"class.base::internal::flat_tree.1385"* %4, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.cc::ElementId"** %33 to i64*
  %35 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %36 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds [23 x i8], [23 x i8]* %7, i64 0, i64 7
  %38 = bitcast float* %8 to i8*
  %39 = bitcast float* %9 to i8*
  %40 = bitcast %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %10 to i8*
  %41 = getelementptr inbounds %"class.absl::optional.1366", %"class.absl::optional.1366"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  %43 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 1, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"struct.cc::CompositorCommitData::ScrollUpdateInfo"** %44 to i64*
  %47 = bitcast %"class.std::__1::vector.1371"* %43 to i64*
  %48 = bitcast %"struct.cc::CompositorCommitData::ScrollUpdateInfo"** %45 to i64*
  %49 = getelementptr inbounds %"class.std::__1::vector.1371", %"class.std::__1::vector.1371"* %43, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 0
  br label %58

51:                                               ; preds = %324, %21
  %52 = icmp eq i8* %22, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  %54 = load i8, i8* %22, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %23, i64 %24) #18
  br label %57

57:                                               ; preds = %51, %53, %56
  ret void

58:                                               ; preds = %30, %324
  %59 = phi %"struct.std::__1::pair.155"* [ %26, %30 ], [ %325, %324 ]
  %60 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %59, i64 0, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %59, i64 0, i32 1, i32 0
  %63 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %62, align 8
  %64 = icmp eq %"class.cc::SyncedProperty.1312"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %66) #18
  br label %67

67:                                               ; preds = %58, %65
  br i1 %3, label %68, label %84

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 6
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 3
  %74 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 5
  %75 = bitcast %"class.cc::AdditionGroup.1314"* %74 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 4
  %77 = bitcast %"class.cc::AdditionGroup.1314"* %73 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 4
  %79 = fsub <2 x float> %78, %76
  br label %80

80:                                               ; preds = %72, %68
  %81 = phi <2 x float> [ %79, %72 ], [ zeroinitializer, %68 ]
  %82 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 4
  %83 = bitcast %"class.cc::AdditionGroup.1314"* %82 to <2 x float>*
  store <2 x float> %81, <2 x float>* %83, align 4
  br label %129

84:                                               ; preds = %67
  %85 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 2
  %86 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 3
  %87 = bitcast %"class.cc::AdditionGroup.1314"* %86 to <2 x float>*
  %88 = load <2 x float>, <2 x float>* %87, align 4
  %89 = bitcast %"class.cc::AdditionGroup.1314"* %85 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 4
  %91 = fadd <2 x float> %88, %90
  %92 = call <2 x float> @llvm.round.v2f32(<2 x float> %91)
  %93 = call <2 x float> @llvm.round.v2f32(<2 x float> %90)
  %94 = fsub <2 x float> %90, %93
  %95 = fadd <2 x float> %92, %94
  %96 = fsub <2 x float> %95, %90
  %97 = extractelement <2 x float> %96, i32 0
  %98 = extractelement <2 x float> %88, i32 0
  %99 = fcmp oeq float %98, %97
  br i1 %99, label %100, label %107

100:                                              ; preds = %84
  %101 = extractelement <2 x float> %96, i32 1
  %102 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 3, i32 0, i32 1
  %103 = load float, float* %102, align 4
  %104 = fcmp oeq float %103, %101
  %105 = insertelement <2 x float> undef, float %98, i32 0
  %106 = insertelement <2 x float> %105, float %103, i32 1
  br i1 %104, label %108, label %107

107:                                              ; preds = %100, %84
  store <2 x float> %96, <2 x float>* %87, align 4
  br label %108

108:                                              ; preds = %107, %100
  %109 = phi <2 x float> [ %88, %100 ], [ %96, %107 ]
  %110 = phi <2 x float> [ %106, %100 ], [ %96, %107 ]
  %111 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 6
  %112 = load i8, i8* %111, align 4, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %119

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 5
  %116 = bitcast %"class.cc::AdditionGroup.1314"* %115 to <2 x float>*
  %117 = load <2 x float>, <2 x float>* %116, align 4
  %118 = fsub <2 x float> %109, %117
  br label %119

119:                                              ; preds = %114, %108
  %120 = phi <2 x float> [ %118, %114 ], [ zeroinitializer, %108 ]
  %121 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 4
  %122 = bitcast %"class.cc::AdditionGroup.1314"* %121 to <2 x float>*
  store <2 x float> %120, <2 x float>* %122, align 4
  %123 = fsub <2 x float> %91, %90
  %124 = fcmp oeq <2 x float> %110, %123
  %125 = extractelement <2 x i1> %124, i32 0
  %126 = extractelement <2 x i1> %124, i32 1
  %127 = and i1 %126, %125
  br i1 %127, label %129, label %128

128:                                              ; preds = %119
  store <2 x float> %123, <2 x float>* %87, align 4
  br label %129

129:                                              ; preds = %80, %119, %128
  %130 = phi <2 x float> [ %81, %80 ], [ %120, %128 ], [ %120, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %31)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1370 } } } }, { { { { i8, [7 x i8], %union.anon.1370 } } } }* @__const._ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE.snap_target_ids, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 23, i1 false)
  %131 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %32, align 8
  %132 = load i64, i64* %34, align 8
  %133 = ptrtoint %"struct.cc::ElementId"* %131 to i64
  %134 = sub i64 %132, %133
  %135 = icmp eq i64 %134, 0
  %136 = inttoptr i64 %132 to %"struct.cc::ElementId"*
  br i1 %135, label %155, label %137

137:                                              ; preds = %129
  %138 = ashr exact i64 %134, 3
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi %"struct.cc::ElementId"* [ %131, %137 ], [ %151, %139 ]
  %141 = phi i64 [ %138, %137 ], [ %150, %139 ]
  %142 = lshr i64 %141, 1
  %143 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %140, i64 %142
  %144 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %143, i64 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = icmp ult i64 %145, %61
  %147 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %143, i64 1
  %148 = xor i64 %142, -1
  %149 = add i64 %141, %148
  %150 = select i1 %146, i64 %149, i64 %142
  %151 = select i1 %146, %"struct.cc::ElementId"* %147, %"struct.cc::ElementId"* %140
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %153, label %139

153:                                              ; preds = %139
  %154 = ptrtoint %"struct.cc::ElementId"* %151 to i64
  br label %155

155:                                              ; preds = %153, %129
  %156 = phi i64 [ %154, %153 ], [ %133, %129 ]
  %157 = phi %"struct.cc::ElementId"* [ %151, %153 ], [ %131, %129 ]
  %158 = icmp eq %"struct.cc::ElementId"* %157, %136
  br i1 %158, label %166, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %157, i64 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %61, %161
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %157, i64 1
  %165 = ptrtoint %"struct.cc::ElementId"* %164 to i64
  br label %166

166:                                              ; preds = %155, %159, %163
  %167 = phi i64 [ %165, %163 ], [ %156, %155 ], [ %156, %159 ]
  %168 = inttoptr i64 %167 to %"struct.cc::ElementId"*
  %169 = icmp eq %"struct.cc::ElementId"* %157, %168
  %170 = select i1 %169, %"struct.cc::ElementId"* %136, %"struct.cc::ElementId"* %157
  %171 = icmp eq %"struct.cc::ElementId"* %170, %136
  %172 = icmp eq i64 %61, 0
  %173 = or i1 %172, %171
  br i1 %173, label %237, label %174

174:                                              ; preds = %166
  %175 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %35, align 8
  %176 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %175, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %177 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %176, align 8
  %178 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %175, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %179 = bitcast %"struct.std::__1::pair"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = ptrtoint %"struct.std::__1::pair"* %177 to i64
  %182 = sub i64 %180, %181
  %183 = icmp eq i64 %182, 0
  %184 = inttoptr i64 %180 to %"struct.std::__1::pair"*
  br i1 %183, label %203, label %185

185:                                              ; preds = %174
  %186 = ashr exact i64 %182, 4
  br label %187

187:                                              ; preds = %187, %185
  %188 = phi %"struct.std::__1::pair"* [ %177, %185 ], [ %199, %187 ]
  %189 = phi i64 [ %186, %185 ], [ %198, %187 ]
  %190 = lshr i64 %189, 1
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 %190
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 0, i32 0, i32 0
  %193 = load i64, i64* %192, align 8
  %194 = icmp ult i64 %193, %61
  %195 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 1
  %196 = xor i64 %190, -1
  %197 = add i64 %189, %196
  %198 = select i1 %194, i64 %197, i64 %190
  %199 = select i1 %194, %"struct.std::__1::pair"* %195, %"struct.std::__1::pair"* %188
  %200 = icmp eq i64 %198, 0
  br i1 %200, label %201, label %187

201:                                              ; preds = %187
  %202 = ptrtoint %"struct.std::__1::pair"* %199 to i64
  br label %203

203:                                              ; preds = %201, %174
  %204 = phi i64 [ %202, %201 ], [ %181, %174 ]
  %205 = phi %"struct.std::__1::pair"* [ %199, %201 ], [ %177, %174 ]
  %206 = icmp eq %"struct.std::__1::pair"* %205, %184
  br i1 %206, label %214, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = icmp ugt i64 %209, %61
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 1
  %213 = ptrtoint %"struct.std::__1::pair"* %212 to i64
  br label %214

214:                                              ; preds = %211, %207, %203
  %215 = phi i64 [ %213, %211 ], [ %204, %203 ], [ %204, %207 ]
  %216 = inttoptr i64 %215 to %"struct.std::__1::pair"*
  %217 = icmp eq %"struct.std::__1::pair"* %205, %216
  %218 = select i1 %217, %"struct.std::__1::pair"* %184, %"struct.std::__1::pair"* %205
  %219 = icmp eq %"struct.std::__1::pair"* %218, %184
  br i1 %219, label %237, label %220

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = icmp sgt i32 %222, -1
  br i1 %223, label %224, label %237

224:                                              ; preds = %220
  %225 = sext i32 %222 to i64
  %226 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %36, align 8
  %227 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %226, i64 %225
  %228 = icmp eq %"struct.cc::ScrollNode"* %227, null
  br i1 %228, label %237, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %226, i64 %225, i32 12, i32 0, i32 0, i32 0, i32 0
  %231 = load i8, i8* %230, align 8, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %237, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %226, i64 %225, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %235 = call dereferenceable(16) %"struct.cc::TargetSnapAreaElementIds"* @_ZNK2cc17SnapContainerData27GetTargetSnapAreaElementIdsEv(%"class.cc::SnapContainerData"* %234) #18
  %236 = bitcast %"struct.cc::TargetSnapAreaElementIds"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 8 %236, i64 16, i1 false)
  br label %237

237:                                              ; preds = %229, %166, %220, %214, %233, %224
  %238 = phi i8 [ 0, %224 ], [ 1, %233 ], [ 0, %229 ], [ 0, %166 ], [ 0, %214 ], [ 0, %220 ]
  %239 = extractelement <2 x float> %130, i32 0
  %240 = fcmp une float %239, 0.000000e+00
  %241 = extractelement <2 x float> %130, i32 1
  %242 = fcmp une float %241, 0.000000e+00
  %243 = or i1 %242, %240
  %244 = icmp ne i8 %238, 0
  %245 = or i1 %243, %244
  br i1 %245, label %246, label %316

246:                                              ; preds = %237
  %247 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %248 = and i8 %247, 25
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %252, label %250, !prof !15

250:                                              ; preds = %246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #18
  store float %239, float* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #18
  store float %241, float* %9, align 4
  %251 = call i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), float* nonnull dereferenceable(4) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), float* nonnull dereferenceable(4) %9)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #18
  br label %252

252:                                              ; preds = %246, %250
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 bitcast ({ %"struct.cc::ElementId", %"class.gfx::ScrollOffset", { { { { i8, [7 x i8], %union.anon.1370 } } } } }* @__const._ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE.update to i8*), i64 40, i1 false)
  store i8 %238, i8* %41, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* nonnull align 1 %31, i64 23, i1 false)
  call void @_ZN2cc20CompositorCommitData16ScrollUpdateInfoC1ENS_9ElementIdEN3gfx12ScrollOffsetEN4absl8optionalINS_24TargetSnapAreaElementIdsEEE(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"* nonnull %10, i64 %61, <2 x float> %130, %"class.absl::optional.1366"* nonnull byval(%"class.absl::optional.1366") align 8 %11) #18
  %253 = icmp eq i64 %61, %2
  br i1 %253, label %254, label %256

254:                                              ; preds = %252
  %255 = call dereferenceable(40) %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* @_ZN2cc20CompositorCommitData16ScrollUpdateInfoaSERKS1_(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %50, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* nonnull dereferenceable(40) %10) #18
  br label %315

256:                                              ; preds = %252
  %257 = load %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"** %44, align 8
  %258 = load %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"** %45, align 8
  %259 = icmp ult %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %257, %258
  %260 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %258 to i64
  br i1 %259, label %261, label %264

261:                                              ; preds = %256
  call void @_ZN2cc20CompositorCommitData16ScrollUpdateInfoC1ERKS1_(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %257, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* nonnull dereferenceable(40) %10) #18
  %262 = getelementptr inbounds %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %257, i64 1
  %263 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %262 to i64
  store i64 %263, i64* %46, align 8
  br label %315

264:                                              ; preds = %256
  %265 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %257 to i64
  %266 = load i64, i64* %47, align 8
  %267 = sub i64 %265, %266
  %268 = sdiv exact i64 %267, 40
  %269 = add nsw i64 %268, 1
  %270 = icmp ugt i64 %269, 461168601842738790
  br i1 %270, label %271, label %273

271:                                              ; preds = %264
  %272 = bitcast %"class.std::__1::vector.1371"* %43 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %272) #19
  unreachable

273:                                              ; preds = %264
  %274 = sub i64 %260, %266
  %275 = sdiv exact i64 %274, 40
  %276 = icmp ult i64 %275, 230584300921369395
  br i1 %276, label %277, label %282

277:                                              ; preds = %273
  %278 = shl nsw i64 %275, 1
  %279 = icmp ult i64 %278, %269
  %280 = select i1 %279, i64 %269, i64 %278
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %287, label %282

282:                                              ; preds = %277, %273
  %283 = phi i64 [ %280, %277 ], [ 461168601842738790, %273 ]
  %284 = mul i64 %283, 40
  %285 = call i8* @_Znwm(i64 %284) #20
  %286 = bitcast i8* %285 to %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*
  br label %287

287:                                              ; preds = %282, %277
  %288 = phi i64 [ %283, %282 ], [ 0, %277 ]
  %289 = phi %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* [ %286, %282 ], [ null, %277 ]
  %290 = getelementptr inbounds %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %289, i64 %268
  %291 = getelementptr inbounds %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %289, i64 %288
  %292 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %291 to i64
  call void @_ZN2cc20CompositorCommitData16ScrollUpdateInfoC1ERKS1_(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %290, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* nonnull dereferenceable(40) %10) #18
  %293 = getelementptr inbounds %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %290, i64 1
  %294 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %293 to i64
  %295 = load %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"** %49, align 8
  %296 = load %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"** %44, align 8
  %297 = icmp eq %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %296, %295
  br i1 %297, label %298, label %300

298:                                              ; preds = %287
  %299 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %295 to i64
  br label %308

300:                                              ; preds = %287, %300
  %301 = phi %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* [ %303, %300 ], [ %290, %287 ]
  %302 = phi %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* [ %304, %300 ], [ %296, %287 ]
  %303 = getelementptr inbounds %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %301, i64 -1
  %304 = getelementptr inbounds %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %302, i64 -1
  call void @_ZN2cc20CompositorCommitData16ScrollUpdateInfoC1ERKS1_(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %303, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* dereferenceable(40) %304) #18
  %305 = icmp eq %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %304, %295
  br i1 %305, label %306, label %300

306:                                              ; preds = %300
  %307 = load i64, i64* %47, align 8
  br label %308

308:                                              ; preds = %306, %298
  %309 = phi %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* [ %290, %298 ], [ %303, %306 ]
  %310 = phi i64 [ %299, %298 ], [ %307, %306 ]
  %311 = ptrtoint %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* %309 to i64
  store i64 %311, i64* %47, align 8
  store i64 %294, i64* %46, align 8
  store i64 %292, i64* %48, align 8
  %312 = icmp eq i64 %310, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %308
  %314 = inttoptr i64 %310 to i8*
  call void @_ZdlPv(i8* %314) #20
  br label %315

315:                                              ; preds = %261, %308, %313, %254
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #18
  br label %316

316:                                              ; preds = %237, %315
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %31)
  br i1 %64, label %324, label %317

317:                                              ; preds = %316
  %318 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %318) #18
  %319 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %63, i64 0, i32 0, i32 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %324

322:                                              ; preds = %317
  %323 = bitcast %"class.cc::SyncedProperty.1312"* %63 to i8*
  call void @_ZdlPv(i8* %323) #20
  br label %324

324:                                              ; preds = %316, %317, %322
  %325 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %59, i64 1
  %326 = icmp eq %"struct.std::__1::pair.155"* %325, %28
  br i1 %326, label %51, label %58
}

declare dereferenceable(16) %"struct.cc::TargetSnapAreaElementIds"* @_ZNK2cc17SnapContainerData27GetTargetSnapAreaElementIdsEv(%"class.cc::SnapContainerData"*) local_unnamed_addr #2

declare void @_ZN2cc20CompositorCommitData16ScrollUpdateInfoC1ENS_9ElementIdEN3gfx12ScrollOffsetEN4absl8optionalINS_24TargetSnapAreaElementIdsEEE(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, i64, <2 x float>, %"class.absl::optional.1366"* byval(%"class.absl::optional.1366") align 8) unnamed_addr #2

declare dereferenceable(40) %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* @_ZN2cc20CompositorCommitData16ScrollUpdateInfoaSERKS1_(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree29CollectScrollDeltasForTestingEb(%"class.cc::ScrollTree"* nocapture readonly, i1 zeroext) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.155"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %86, %2
  ret void

9:                                                ; preds = %2, %86
  %10 = phi %"struct.std::__1::pair.155"* [ %87, %86 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %10, i64 0, i32 1, i32 0
  %12 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %11, align 8
  %13 = icmp eq %"class.cc::SyncedProperty.1312"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #18
  br label %16

16:                                               ; preds = %9, %14
  br i1 %1, label %17, label %33

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 6
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 3
  %23 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 5
  %24 = bitcast %"class.cc::AdditionGroup.1314"* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = bitcast %"class.cc::AdditionGroup.1314"* %22 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = fsub <2 x float> %27, %25
  br label %29

29:                                               ; preds = %21, %17
  %30 = phi <2 x float> [ %28, %21 ], [ zeroinitializer, %17 ]
  %31 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 4
  %32 = bitcast %"class.cc::AdditionGroup.1314"* %31 to <2 x float>*
  store <2 x float> %30, <2 x float>* %32, align 4
  br label %78

33:                                               ; preds = %16
  %34 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 2
  %35 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 3
  %36 = bitcast %"class.cc::AdditionGroup.1314"* %35 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  %38 = bitcast %"class.cc::AdditionGroup.1314"* %34 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  %40 = fadd <2 x float> %37, %39
  %41 = call <2 x float> @llvm.round.v2f32(<2 x float> %40)
  %42 = call <2 x float> @llvm.round.v2f32(<2 x float> %39)
  %43 = fsub <2 x float> %39, %42
  %44 = fadd <2 x float> %41, %43
  %45 = fsub <2 x float> %44, %39
  %46 = extractelement <2 x float> %45, i32 0
  %47 = extractelement <2 x float> %37, i32 0
  %48 = fcmp oeq float %47, %46
  br i1 %48, label %49, label %56

49:                                               ; preds = %33
  %50 = extractelement <2 x float> %45, i32 1
  %51 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 3, i32 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp oeq float %52, %50
  %54 = insertelement <2 x float> undef, float %47, i32 0
  %55 = insertelement <2 x float> %54, float %52, i32 1
  br i1 %53, label %57, label %56

56:                                               ; preds = %49, %33
  store <2 x float> %45, <2 x float>* %36, align 4
  br label %57

57:                                               ; preds = %56, %49
  %58 = phi <2 x float> [ %37, %49 ], [ %45, %56 ]
  %59 = phi <2 x float> [ %55, %49 ], [ %45, %56 ]
  %60 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 6
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 5
  %65 = bitcast %"class.cc::AdditionGroup.1314"* %64 to <2 x float>*
  %66 = load <2 x float>, <2 x float>* %65, align 4
  %67 = fsub <2 x float> %58, %66
  br label %68

68:                                               ; preds = %63, %57
  %69 = phi <2 x float> [ %67, %63 ], [ zeroinitializer, %57 ]
  %70 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 4
  %71 = bitcast %"class.cc::AdditionGroup.1314"* %70 to <2 x float>*
  store <2 x float> %69, <2 x float>* %71, align 4
  %72 = fsub <2 x float> %40, %39
  %73 = fcmp oeq <2 x float> %59, %72
  %74 = extractelement <2 x i1> %73, i32 0
  %75 = extractelement <2 x i1> %73, i32 1
  %76 = and i1 %75, %74
  br i1 %76, label %78, label %77

77:                                               ; preds = %68
  store <2 x float> %72, <2 x float>* %36, align 4
  br label %78

78:                                               ; preds = %29, %68, %77
  br i1 %13, label %86, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #18
  %81 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %12, i64 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = bitcast %"class.cc::SyncedProperty.1312"* %12 to i8*
  tail call void @_ZdlPv(i8* %85) #20
  br label %86

86:                                               ; preds = %78, %79, %84
  %87 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %10, i64 1
  %88 = icmp eq %"struct.std::__1::pair.155"* %87, %6
  br i1 %88, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree31PushScrollUpdatesFromMainThreadEPNS_13PropertyTreesEPNS_13LayerTreeImplEb(%"class.cc::ScrollTree"*, %"class.cc::PropertyTrees"* nocapture readonly, %"class.cc::LayerTreeImpl"*, i1 zeroext) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 2
  %6 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0
  %7 = getelementptr inbounds %"class.base::internal::flat_tree.152", %"class.base::internal::flat_tree.152"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.155"* %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.145"** %14 to i64*
  br label %24

16:                                               ; preds = %75, %4
  %17 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0, i32 1
  %20 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.145"* %18, %20
  br i1 %21, label %79, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  br label %80

24:                                               ; preds = %12, %75
  %25 = phi %"struct.std::__1::pair.155"* [ %10, %12 ], [ %76, %75 ]
  %26 = phi %"struct.std::__1::pair.155"* [ %8, %12 ], [ %77, %75 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %26, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %13, align 8
  %30 = load i64, i64* %15, align 8
  %31 = ptrtoint %"struct.std::__1::pair.145"* %29 to i64
  %32 = sub i64 %30, %31
  %33 = icmp eq i64 %32, 0
  %34 = inttoptr i64 %30 to %"struct.std::__1::pair.145"*
  br i1 %33, label %53, label %35

35:                                               ; preds = %24
  %36 = ashr exact i64 %32, 4
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi %"struct.std::__1::pair.145"* [ %29, %35 ], [ %49, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %48, %37 ]
  %40 = lshr i64 %39, 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %38, i64 %40
  %42 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %41, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp ult i64 %43, %28
  %45 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %41, i64 1
  %46 = xor i64 %40, -1
  %47 = add i64 %39, %46
  %48 = select i1 %44, i64 %47, i64 %40
  %49 = select i1 %44, %"struct.std::__1::pair.145"* %45, %"struct.std::__1::pair.145"* %38
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %51, label %37

51:                                               ; preds = %37
  %52 = ptrtoint %"struct.std::__1::pair.145"* %49 to i64
  br label %53

53:                                               ; preds = %51, %24
  %54 = phi i64 [ %52, %51 ], [ %31, %24 ]
  %55 = phi %"struct.std::__1::pair.145"* [ %49, %51 ], [ %29, %24 ]
  %56 = icmp eq %"struct.std::__1::pair.145"* %55, %34
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %55, i64 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %28, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %55, i64 1
  %63 = ptrtoint %"struct.std::__1::pair.145"* %62 to i64
  br label %64

64:                                               ; preds = %53, %57, %61
  %65 = phi i64 [ %63, %61 ], [ %54, %53 ], [ %54, %57 ]
  %66 = inttoptr i64 %65 to %"struct.std::__1::pair.145"*
  %67 = icmp eq %"struct.std::__1::pair.145"* %55, %66
  %68 = select i1 %67, %"struct.std::__1::pair.145"* %34, %"struct.std::__1::pair.145"* %55
  %69 = icmp eq %"struct.std::__1::pair.145"* %68, %34
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = tail call %"struct.std::__1::pair.155"* @_ZN4base8internal9flat_treeIN2cc9ElementIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEENS5_9allocatorISI_EEEEE5eraseENS5_11__wrap_iterIPSI_EE(%"class.base::internal::flat_tree.152"* %6, %"struct.std::__1::pair.155"* %26)
  %72 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %9, align 8
  br label %75

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %26, i64 1
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi %"struct.std::__1::pair.155"* [ %72, %70 ], [ %25, %73 ]
  %77 = phi %"struct.std::__1::pair.155"* [ %71, %70 ], [ %74, %73 ]
  %78 = icmp eq %"struct.std::__1::pair.155"* %77, %76
  br i1 %78, label %16, label %24

79:                                               ; preds = %166, %16
  ret void

80:                                               ; preds = %22, %166
  %81 = phi %"struct.std::__1::pair.145"* [ %18, %22 ], [ %167, %166 ]
  %82 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %81, i64 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %81, i64 0, i32 1
  %85 = bitcast %"class.gfx::ScrollOffset"* %84 to <2 x float>*
  %86 = load <2 x float>, <2 x float>* %85, align 8
  %87 = tail call %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %83)
  %88 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 4
  %89 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 5
  %90 = bitcast %"class.cc::AdditionGroup.1314"* %88 to i64*
  %91 = bitcast %"class.cc::AdditionGroup.1314"* %89 to i64*
  %92 = load i64, i64* %90, align 4
  store i64 %92, i64* %91, align 4
  %93 = bitcast %"class.cc::AdditionGroup.1314"* %88 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %93, align 4
  %94 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 1
  %95 = bitcast %"class.cc::AdditionGroup.1314"* %94 to <2 x float>*
  store <2 x float> %86, <2 x float>* %95, align 4
  %96 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 6
  %97 = load i8, i8* %96, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  %99 = bitcast i64 %92 to <2 x float>
  br i1 %98, label %100, label %105

100:                                              ; preds = %80
  %101 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 3
  %102 = bitcast %"class.cc::AdditionGroup.1314"* %101 to <2 x float>*
  %103 = load <2 x float>, <2 x float>* %102, align 4
  %104 = fsub <2 x float> %103, %99
  br label %105

105:                                              ; preds = %80, %100
  %106 = phi <2 x float> [ %104, %100 ], [ zeroinitializer, %80 ]
  %107 = extractelement <2 x float> %106, i32 0
  %108 = extractelement <2 x float> %86, i32 0
  %109 = fadd float %108, %107
  %110 = extractelement <2 x float> %106, i32 1
  %111 = extractelement <2 x float> %86, i32 1
  %112 = fadd float %111, %110
  %113 = fcmp une float %109, %108
  %114 = fcmp une float %112, %111
  %115 = or i1 %113, %114
  br i1 %3, label %133, label %116

116:                                              ; preds = %105
  br i1 %98, label %117, label %122

117:                                              ; preds = %116
  %118 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 3
  %119 = bitcast %"class.cc::AdditionGroup.1314"* %118 to <2 x float>*
  %120 = load <2 x float>, <2 x float>* %119, align 4
  %121 = fsub <2 x float> %120, %99
  br label %122

122:                                              ; preds = %116, %117
  %123 = phi <2 x float> [ %121, %117 ], [ zeroinitializer, %116 ]
  %124 = extractelement <2 x float> %123, i32 0
  %125 = fadd float %108, %124
  %126 = tail call float @llvm.round.f32(float %125)
  %127 = fcmp une float %108, %126
  br i1 %127, label %133, label %128

128:                                              ; preds = %122
  %129 = extractelement <2 x float> %123, i32 1
  %130 = fadd float %111, %129
  %131 = tail call float @llvm.round.f32(float %130)
  %132 = fcmp une float %111, %131
  br label %133

133:                                              ; preds = %128, %122, %105
  %134 = phi i1 [ %115, %105 ], [ true, %122 ], [ %132, %128 ]
  %135 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %23, align 8
  %136 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %135, i64 0, i32 12
  %137 = load i8, i8* %136, align 1, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %164, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 3
  %141 = bitcast %"class.cc::AdditionGroup.1314"* %140 to <2 x float>*
  %142 = load <2 x float>, <2 x float>* %141, align 4
  %143 = fsub <2 x float> %142, %99
  %144 = select i1 %98, <2 x float> %143, <2 x float> zeroinitializer
  %145 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %87, i64 0, i32 2
  %146 = bitcast %"class.cc::AdditionGroup.1314"* %145 to <2 x float>*
  %147 = load <2 x float>, <2 x float>* %146, align 4
  %148 = shufflevector <2 x float> %142, <2 x float> %86, <4 x i32> <i32 1, i32 0, i32 2, i32 3>
  %149 = shufflevector <2 x float> %147, <2 x float> %144, <4 x i32> <i32 1, i32 0, i32 2, i32 3>
  %150 = fadd <4 x float> %148, %149
  store <2 x float> %86, <2 x float>* %146, align 4
  %151 = fsub <2 x float> %142, %99
  %152 = select i1 %98, <2 x float> %151, <2 x float> zeroinitializer
  %153 = bitcast %"class.cc::AdditionGroup.1314"* %89 to <2 x float>*
  store <2 x float> %152, <2 x float>* %141, align 4
  store <2 x float> zeroinitializer, <2 x float>* %153, align 4
  store i8 0, i8* %96, align 4
  %154 = fadd <2 x float> %86, %152
  %155 = shufflevector <2 x float> %154, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %156 = shufflevector <2 x float> %155, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %157 = fcmp une <4 x float> %150, %156
  %158 = shufflevector <4 x i1> %157, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %159 = or <4 x i1> %157, %158
  %160 = shufflevector <4 x i1> %159, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %161 = or <4 x i1> %159, %160
  %162 = extractelement <4 x i1> %161, i32 0
  %163 = or i1 %162, %134
  br i1 %163, label %165, label %166

164:                                              ; preds = %133
  br i1 %134, label %165, label %166

165:                                              ; preds = %139, %164
  tail call void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %2, i64 %83) #18
  br label %166

166:                                              ; preds = %139, %165, %164
  %167 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %81, i64 1
  %168 = icmp eq %"struct.std::__1::pair.145"* %167, %20
  br i1 %168, label %79, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.155"* @_ZN4base8internal9flat_treeIN2cc9ElementIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEENS5_9allocatorISI_EEEEE5eraseENS5_11__wrap_iterIPSI_EE(%"class.base::internal::flat_tree.152"*, %"struct.std::__1::pair.155"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.152", %"class.base::internal::flat_tree.152"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.155"* %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #18
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  %10 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"struct.std::__1::pair.155"* [ %5, %2 ], [ %10, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 1
  %14 = icmp eq %"struct.std::__1::pair.155"* %13, %12
  br i1 %14, label %44, label %15

15:                                               ; preds = %11, %37
  %16 = phi %"struct.std::__1::pair.155"* [ %39, %37 ], [ %1, %11 ]
  %17 = phi %"struct.std::__1::pair.155"* [ %38, %37 ], [ %13, %11 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %17, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %16, i64 0, i32 0, i32 0
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %17, i64 0, i32 1
  %22 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %21, i64 0, i32 0
  %23 = bitcast %class.scoped_refptr.1311* %21 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %22, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %16, i64 0, i32 1
  %26 = bitcast %class.scoped_refptr.1311* %25 to i64*
  %27 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %25, i64 0, i32 0
  %28 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %27, align 8
  store i64 %24, i64* %26, align 8
  %29 = icmp eq %"class.cc::SyncedProperty.1312"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %28, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #18
  %32 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %28, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = bitcast %"class.cc::SyncedProperty.1312"* %28 to i8*
  call void @_ZdlPv(i8* %36) #20
  br label %37

37:                                               ; preds = %35, %30, %15
  %38 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %17, i64 1
  %39 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %16, i64 1
  %40 = icmp eq %"struct.std::__1::pair.155"* %38, %12
  br i1 %40, label %41, label %15

41:                                               ; preds = %37
  %42 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %43 = icmp eq %"struct.std::__1::pair.155"* %42, %39
  br i1 %43, label %62, label %44

44:                                               ; preds = %41, %11
  %45 = phi %"struct.std::__1::pair.155"* [ %39, %41 ], [ %1, %11 ]
  %46 = phi %"struct.std::__1::pair.155"* [ %42, %41 ], [ %12, %11 ]
  br label %47

47:                                               ; preds = %60, %44
  %48 = phi %"struct.std::__1::pair.155"* [ %49, %60 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %48, i64 -1
  %50 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %48, i64 -1, i32 1, i32 0
  %51 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %50, align 8
  %52 = icmp eq %"class.cc::SyncedProperty.1312"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %51, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #18
  %55 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %51, i64 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = bitcast %"class.cc::SyncedProperty.1312"* %51 to i8*
  call void @_ZdlPv(i8* %59) #20
  br label %60

60:                                               ; preds = %58, %53, %47
  %61 = icmp eq %"struct.std::__1::pair.155"* %49, %45
  br i1 %61, label %62, label %47

62:                                               ; preds = %60, %41
  %63 = phi %"struct.std::__1::pair.155"* [ %39, %41 ], [ %45, %60 ]
  store %"struct.std::__1::pair.155"* %63, %"struct.std::__1::pair.155"** %4, align 8
  ret %"struct.std::__1::pair.155"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree32PushScrollUpdatesFromPendingTreeEPNS_13PropertyTreesEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"class.cc::PropertyTrees"* nocapture readonly, %"class.cc::LayerTreeImpl"*) local_unnamed_addr #7 align 2 {
  %4 = alloca %"struct.std::__1::pair.155", align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.base::flat_map.151", %"class.base::flat_map.151"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.155"* %9, %7
  br i1 %10, label %26, label %11

11:                                               ; preds = %3, %24
  %12 = phi %"struct.std::__1::pair.155"* [ %13, %24 ], [ %9, %3 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %12, i64 -1, i32 1, i32 0
  %15 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %14, align 8
  %16 = icmp eq %"class.cc::SyncedProperty.1312"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %15, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #18
  %19 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = bitcast %"class.cc::SyncedProperty.1312"* %15 to i8*
  tail call void @_ZdlPv(i8* %23) #20
  br label %24

24:                                               ; preds = %22, %17, %11
  %25 = icmp eq %"struct.std::__1::pair.155"* %13, %7
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %3
  store %"struct.std::__1::pair.155"* %7, %"struct.std::__1::pair.155"** %8, align 8
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0, i32 1
  %30 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %29, align 8
  %31 = icmp eq %"struct.std::__1::pair.155"* %28, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %26
  %33 = bitcast %"struct.std::__1::pair.155"* %4 to i8*
  %34 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %4, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %4, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %4, i64 0, i32 1, i32 0
  %37 = bitcast %"struct.std::__1::pair.155"* %4 to i8*
  br label %39

38:                                               ; preds = %126, %26
  ret void

39:                                               ; preds = %32, %126
  %40 = phi %"struct.std::__1::pair.155"* [ %28, %32 ], [ %127, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #18
  %41 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %40, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %35, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %40, i64 0, i32 1, i32 0
  %44 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %43, align 8
  store %"class.cc::SyncedProperty.1312"* %44, %"class.cc::SyncedProperty.1312"** %36, align 8
  %45 = icmp eq %"class.cc::SyncedProperty.1312"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %44, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %47) #18
  %48 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %36, align 8
  %49 = icmp eq %"class.cc::SyncedProperty.1312"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %48, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %51) #18
  br label %52

52:                                               ; preds = %39, %46, %50
  %53 = phi %"class.cc::SyncedProperty.1312"* [ null, %46 ], [ %48, %50 ], [ null, %39 ]
  %54 = call dereferenceable(8) %class.scoped_refptr.1311* @_ZN4base8flat_mapIN2cc9ElementIdE13scoped_refptrINS1_14SyncedPropertyINS1_13AdditionGroupIN3gfx12ScrollOffsetEEEEEENSt3__14lessIvEENSB_6vectorINSB_4pairIS2_SA_EENSB_9allocatorISG_EEEEEixERKS2_(%"class.base::flat_map.151"* %5, %"struct.cc::ElementId"* nonnull dereferenceable(8) %34)
  %55 = ptrtoint %"class.cc::SyncedProperty.1312"* %53 to i64
  %56 = bitcast %class.scoped_refptr.1311* %54 to i64*
  %57 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %54, i64 0, i32 0
  %58 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.cc::SyncedProperty.1312"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %58, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #18
  %62 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %58, i64 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = bitcast %"class.cc::SyncedProperty.1312"* %58 to i8*
  call void @_ZdlPv(i8* %66) #20
  br label %67

67:                                               ; preds = %52, %60, %65
  %68 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %36, align 8
  %69 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 1
  %70 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 6
  %71 = load i8, i8* %70, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 3
  br i1 %72, label %77, label %74

74:                                               ; preds = %67
  %75 = bitcast %"class.cc::AdditionGroup.1314"* %73 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 4
  br label %84

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 5
  %79 = bitcast %"class.cc::AdditionGroup.1314"* %78 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  %81 = bitcast %"class.cc::AdditionGroup.1314"* %73 to <2 x float>*
  %82 = load <2 x float>, <2 x float>* %81, align 4
  %83 = fsub <2 x float> %82, %80
  br label %84

84:                                               ; preds = %77, %74
  %85 = phi <2 x float>* [ %75, %74 ], [ %81, %77 ]
  %86 = phi <2 x float> [ zeroinitializer, %74 ], [ %83, %77 ]
  %87 = phi <2 x float> [ %76, %74 ], [ %82, %77 ]
  %88 = bitcast %"class.cc::AdditionGroup.1314"* %69 to <2 x float>*
  %89 = load <2 x float>, <2 x float>* %88, align 4
  %90 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 2
  %91 = bitcast %"class.cc::AdditionGroup.1314"* %90 to <2 x float>*
  %92 = load <2 x float>, <2 x float>* %91, align 4
  %93 = shufflevector <2 x float> %87, <2 x float> %86, <4 x i32> <i32 1, i32 0, i32 2, i32 3>
  %94 = shufflevector <2 x float> %92, <2 x float> %89, <4 x i32> <i32 1, i32 0, i32 2, i32 3>
  %95 = fadd <4 x float> %93, %94
  store <2 x float> %89, <2 x float>* %91, align 4
  br i1 %72, label %96, label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 5
  %98 = bitcast %"class.cc::AdditionGroup.1314"* %97 to <2 x float>*
  %99 = load <2 x float>, <2 x float>* %98, align 4
  %100 = fsub <2 x float> %87, %99
  br label %101

101:                                              ; preds = %84, %96
  %102 = phi <2 x float> [ %100, %96 ], [ zeroinitializer, %84 ]
  store <2 x float> %102, <2 x float>* %85, align 4
  %103 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %68, i64 0, i32 5
  %104 = bitcast %"class.cc::AdditionGroup.1314"* %103 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %104, align 4
  store i8 0, i8* %70, align 4
  %105 = fadd <2 x float> %89, %102
  %106 = shufflevector <2 x float> %105, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %107 = shufflevector <2 x float> %106, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %108 = fcmp une <4 x float> %95, %107
  %109 = shufflevector <4 x i1> %108, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %110 = or <4 x i1> %108, %109
  %111 = shufflevector <4 x i1> %110, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %112 = or <4 x i1> %110, %111
  %113 = extractelement <4 x i1> %112, i32 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %101
  %115 = load i64, i64* %35, align 8
  call void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %2, i64 %115) #18
  br label %116

116:                                              ; preds = %114, %101
  %117 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %36, align 8
  %118 = icmp eq %"class.cc::SyncedProperty.1312"* %117, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %117, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #18
  %121 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %117, i64 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = bitcast %"class.cc::SyncedProperty.1312"* %117 to i8*
  call void @_ZdlPv(i8* %125) #20
  br label %126

126:                                              ; preds = %116, %119, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #18
  %127 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %40, i64 1
  %128 = icmp eq %"struct.std::__1::pair.155"* %127, %30
  br i1 %128, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree38ApplySentScrollDeltasFromAbortedCommitEv(%"class.cc::ScrollTree"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.155"* %3, %5
  br i1 %6, label %36, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.std::__1::pair.155"* %3 to i64
  %9 = getelementptr %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %5, i64 -1, i32 0, i32 0
  %10 = ptrtoint i64* %9 to i64
  %11 = sub i64 %10, %8
  %12 = and i64 %11, 16
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %33

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %3, i64 0, i32 1, i32 0
  %16 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %15, align 8
  %17 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %16, i64 0, i32 1
  %18 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %16, i64 0, i32 4
  %19 = bitcast %"class.cc::AdditionGroup.1314"* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = bitcast %"class.cc::AdditionGroup.1314"* %17 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fadd <2 x float> %20, %22
  store <2 x float> %23, <2 x float>* %21, align 4
  %24 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %16, i64 0, i32 2
  %25 = bitcast %"class.cc::AdditionGroup.1314"* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fadd <2 x float> %20, %26
  store <2 x float> %27, <2 x float>* %25, align 4
  %28 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %16, i64 0, i32 3
  %29 = bitcast %"class.cc::AdditionGroup.1314"* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = fsub <2 x float> %30, %20
  store <2 x float> %31, <2 x float>* %29, align 4
  store <2 x float> zeroinitializer, <2 x float>* %19, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %3, i64 1
  br label %33

33:                                               ; preds = %14, %7
  %34 = phi %"struct.std::__1::pair.155"* [ %3, %7 ], [ %32, %14 ]
  %35 = icmp ult i64 %11, 16
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %37, %1
  ret void

37:                                               ; preds = %33, %37
  %38 = phi %"struct.std::__1::pair.155"* [ %73, %37 ], [ %34, %33 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %38, i64 0, i32 1, i32 0
  %40 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %39, align 8
  %41 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %40, i64 0, i32 1
  %42 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %40, i64 0, i32 4
  %43 = bitcast %"class.cc::AdditionGroup.1314"* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = bitcast %"class.cc::AdditionGroup.1314"* %41 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  %47 = fadd <2 x float> %44, %46
  store <2 x float> %47, <2 x float>* %45, align 4
  %48 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %40, i64 0, i32 2
  %49 = bitcast %"class.cc::AdditionGroup.1314"* %48 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = fadd <2 x float> %44, %50
  store <2 x float> %51, <2 x float>* %49, align 4
  %52 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %40, i64 0, i32 3
  %53 = bitcast %"class.cc::AdditionGroup.1314"* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = fsub <2 x float> %54, %44
  store <2 x float> %55, <2 x float>* %53, align 4
  store <2 x float> zeroinitializer, <2 x float>* %43, align 4
  %56 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %38, i64 1, i32 1, i32 0
  %57 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %56, align 8
  %58 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %57, i64 0, i32 1
  %59 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %57, i64 0, i32 4
  %60 = bitcast %"class.cc::AdditionGroup.1314"* %59 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 4
  %62 = bitcast %"class.cc::AdditionGroup.1314"* %58 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 4
  %64 = fadd <2 x float> %61, %63
  store <2 x float> %64, <2 x float>* %62, align 4
  %65 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %57, i64 0, i32 2
  %66 = bitcast %"class.cc::AdditionGroup.1314"* %65 to <2 x float>*
  %67 = load <2 x float>, <2 x float>* %66, align 4
  %68 = fadd <2 x float> %61, %67
  store <2 x float> %68, <2 x float>* %66, align 4
  %69 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %57, i64 0, i32 3
  %70 = bitcast %"class.cc::AdditionGroup.1314"* %69 to <2 x float>*
  %71 = load <2 x float>, <2 x float>* %70, align 4
  %72 = fsub <2 x float> %71, %61
  store <2 x float> %72, <2 x float>* %70, align 4
  store <2 x float> zeroinitializer, <2 x float>* %60, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %38, i64 2
  %74 = icmp eq %"struct.std::__1::pair.155"* %73, %5
  br i1 %74, label %36, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree19SetBaseScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %4 = alloca %"class.gfx::ScrollOffset", align 4
  %5 = alloca %"struct.cc::ElementId", align 8
  %6 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %5, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %8 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %8, i64 0, i32 11
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %14, align 8
  %16 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.145"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint %"struct.std::__1::pair.145"* %15 to i64
  %20 = sub i64 %18, %19
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %18 to %"struct.std::__1::pair.145"*
  br i1 %21, label %39, label %23

23:                                               ; preds = %12
  %24 = ashr exact i64 %20, 4
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi %"struct.std::__1::pair.145"* [ %15, %23 ], [ %37, %25 ]
  %27 = phi i64 [ %24, %23 ], [ %36, %25 ]
  %28 = lshr i64 %27, 1
  %29 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %26, i64 %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %29, i64 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, %1
  %33 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %29, i64 1
  %34 = xor i64 %28, -1
  %35 = add i64 %27, %34
  %36 = select i1 %32, i64 %35, i64 %28
  %37 = select i1 %32, %"struct.std::__1::pair.145"* %33, %"struct.std::__1::pair.145"* %26
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %39, label %25

39:                                               ; preds = %25, %12
  %40 = phi %"struct.std::__1::pair.145"* [ %15, %12 ], [ %37, %25 ]
  %41 = icmp eq %"struct.std::__1::pair.145"* %40, %22
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %40, i64 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp ugt i64 %44, %1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42, %39
  %47 = bitcast %"class.gfx::ScrollOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  %48 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 0
  store float 0.000000e+00, float* %48, align 4
  %49 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %"class.base::flat_map.141", %"class.base::flat_map.141"* %13, i64 0, i32 0, i32 0
  %51 = call %"struct.std::__1::pair.145"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_(%"class.std::__1::vector.143"* %50, %"struct.std::__1::pair.145"* %40, %"struct.cc::ElementId"* nonnull dereferenceable(8) %5, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %52

52:                                               ; preds = %42, %46
  %53 = phi %"struct.std::__1::pair.145"* [ %51, %46 ], [ %40, %42 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %53, i64 0, i32 1
  %55 = bitcast %"class.gfx::ScrollOffset"* %2 to i64*
  %56 = bitcast %"class.gfx::ScrollOffset"* %54 to i64*
  %57 = load i64, i64* %55, align 4
  store i64 %57, i64* %56, align 4
  br label %70

58:                                               ; preds = %3
  %59 = tail call %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %1)
  %60 = bitcast %"class.gfx::ScrollOffset"* %2 to i64*
  %61 = load i64, i64* %60, align 4
  %62 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %59, i64 0, i32 4
  %63 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %59, i64 0, i32 5
  %64 = bitcast %"class.cc::AdditionGroup.1314"* %62 to i64*
  %65 = bitcast %"class.cc::AdditionGroup.1314"* %63 to i64*
  %66 = load i64, i64* %64, align 4
  store i64 %66, i64* %65, align 4
  %67 = bitcast %"class.cc::AdditionGroup.1314"* %62 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %67, align 4
  %68 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %59, i64 0, i32 1
  %69 = bitcast %"class.cc::AdditionGroup.1314"* %68 to i64*
  store i64 %61, i64* %69, align 4
  br label %70

70:                                               ; preds = %58, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10ScrollTree32UpdateScrollOffsetBaseForTestingENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %4 = tail call %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %1)
  %5 = bitcast %"class.gfx::ScrollOffset"* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 5
  %9 = bitcast %"class.cc::AdditionGroup.1314"* %7 to i64*
  %10 = bitcast %"class.cc::AdditionGroup.1314"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = bitcast %"class.cc::AdditionGroup.1314"* %7 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %12, align 4
  %13 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 1
  %14 = bitcast %"class.cc::AdditionGroup.1314"* %13 to <2 x float>*
  store <2 x float> %6, <2 x float>* %14, align 4
  %15 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 6
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = bitcast i64 %11 to <2 x float>
  br i1 %17, label %19, label %24

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 3
  %21 = bitcast %"class.cc::AdditionGroup.1314"* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fsub <2 x float> %22, %18
  br label %24

24:                                               ; preds = %3, %19
  %25 = phi <2 x float> [ %23, %19 ], [ zeroinitializer, %3 ]
  %26 = extractelement <2 x float> %25, i32 0
  %27 = extractelement <2 x float> %6, i32 0
  %28 = fadd float %27, %26
  %29 = extractelement <2 x float> %25, i32 1
  %30 = extractelement <2 x float> %6, i32 1
  %31 = fadd float %30, %29
  %32 = fcmp une float %28, %27
  %33 = fcmp une float %31, %30
  %34 = or i1 %32, %33
  %35 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %36 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %36, i64 0, i32 12
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %74, label %40

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 3
  %42 = bitcast %"class.cc::AdditionGroup.1314"* %41 to <2 x float>*
  %43 = load <2 x float>, <2 x float>* %42, align 4
  %44 = fsub <2 x float> %43, %18
  %45 = select i1 %17, <2 x float> %44, <2 x float> zeroinitializer
  %46 = extractelement <2 x float> %45, i32 0
  %47 = fadd float %27, %46
  %48 = extractelement <2 x float> %45, i32 1
  %49 = fadd float %30, %48
  %50 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 2
  %51 = bitcast %"class.cc::AdditionGroup.1314"* %50 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = extractelement <2 x float> %52, i32 0
  %54 = extractelement <2 x float> %43, i32 0
  %55 = fadd float %54, %53
  %56 = extractelement <2 x float> %52, i32 1
  %57 = extractelement <2 x float> %43, i32 1
  %58 = fadd float %57, %56
  store <2 x float> %6, <2 x float>* %51, align 4
  %59 = fsub <2 x float> %43, %18
  %60 = select i1 %17, <2 x float> %59, <2 x float> zeroinitializer
  %61 = bitcast %"class.cc::AdditionGroup.1314"* %8 to <2 x float>*
  store <2 x float> %60, <2 x float>* %42, align 4
  store <2 x float> zeroinitializer, <2 x float>* %61, align 4
  store i8 0, i8* %15, align 4
  %62 = extractelement <2 x float> %60, i32 0
  %63 = fadd float %27, %62
  %64 = extractelement <2 x float> %60, i32 1
  %65 = fadd float %30, %64
  %66 = fcmp une float %47, %63
  %67 = fcmp une float %49, %65
  %68 = or i1 %66, %67
  %69 = fcmp une float %55, %63
  %70 = or i1 %69, %68
  %71 = fcmp une float %58, %65
  %72 = or i1 %71, %70
  %73 = or i1 %34, %72
  br label %74

74:                                               ; preds = %24, %40
  %75 = phi i1 [ %73, %40 ], [ %34, %24 ]
  ret i1 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10ScrollTree30SetScrollOffsetDeltaForTestingENS_9ElementIdERKN3gfx9Vector2dFE(%"class.cc::ScrollTree"*, i64, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %4 = tail call %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %1)
  %5 = tail call %"class.cc::SyncedProperty.1312"* @_ZN2cc10ScrollTree29GetOrCreateSyncedScrollOffsetENS_9ElementIdE(%"class.cc::ScrollTree"* %0, i64 %1)
  %6 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %5, i64 0, i32 2, i32 0
  %7 = bitcast %"class.gfx::ScrollOffset"* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fadd <2 x float> %10, %8
  %12 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 2
  %13 = bitcast %"class.cc::AdditionGroup.1314"* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fsub <2 x float> %11, %14
  %16 = extractelement <2 x float> %15, i32 0
  %17 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 3
  %18 = getelementptr inbounds %"class.cc::AdditionGroup.1314", %"class.cc::AdditionGroup.1314"* %17, i64 0, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, %16
  br i1 %20, label %21, label %26

21:                                               ; preds = %3
  %22 = extractelement <2 x float> %15, i32 1
  %23 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %4, i64 0, i32 3, i32 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %24, %22
  br i1 %25, label %28, label %26

26:                                               ; preds = %21, %3
  %27 = bitcast %"class.cc::AdditionGroup.1314"* %17 to <2 x float>*
  store <2 x float> %15, <2 x float>* %27, align 4
  br label %28

28:                                               ; preds = %21, %26
  %29 = phi i1 [ true, %26 ], [ false, %21 ]
  ret i1 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree29GetScrollOffsetBaseForTestingENS_9ElementIdE(%"class.cc::ScrollTree"* nocapture readonly, i64) local_unnamed_addr #14 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.155"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.155"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.155"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.155"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.155"* %22, %"struct.std::__1::pair.155"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair.155"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair.155"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair.155"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.155"* %39 to i64
  br label %41

41:                                               ; preds = %38, %34, %30
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair.155"*
  %44 = icmp eq %"struct.std::__1::pair.155"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair.155"* %11, %"struct.std::__1::pair.155"* %32
  %46 = icmp eq %"struct.std::__1::pair.155"* %45, %11
  br i1 %46, label %105, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %45, i64 0, i32 1, i32 0
  %49 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %48, align 8
  %50 = icmp eq %"class.cc::SyncedProperty.1312"* %49, null
  br i1 %50, label %105, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %53 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %52, align 8
  %54 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %53, i64 0, i32 12
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %10, label %75, label %57

57:                                               ; preds = %51
  %58 = ashr exact i64 %9, 4
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi %"struct.std::__1::pair.155"* [ %4, %57 ], [ %71, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %70, %59 ]
  %62 = lshr i64 %61, 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %60, i64 %62
  %64 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %63, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %65, %1
  %67 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %63, i64 1
  %68 = xor i64 %62, -1
  %69 = add i64 %61, %68
  %70 = select i1 %66, i64 %69, i64 %62
  %71 = select i1 %66, %"struct.std::__1::pair.155"* %67, %"struct.std::__1::pair.155"* %60
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %59

73:                                               ; preds = %59
  %74 = ptrtoint %"struct.std::__1::pair.155"* %71 to i64
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi i64 [ %74, %73 ], [ %8, %51 ]
  %77 = phi %"struct.std::__1::pair.155"* [ %71, %73 ], [ %4, %51 ]
  %78 = icmp eq %"struct.std::__1::pair.155"* %77, %11
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %77, i64 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %81, %1
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %77, i64 1
  %85 = ptrtoint %"struct.std::__1::pair.155"* %84 to i64
  br label %86

86:                                               ; preds = %83, %79, %75
  %87 = phi i64 [ %85, %83 ], [ %76, %75 ], [ %76, %79 ]
  %88 = inttoptr i64 %87 to %"struct.std::__1::pair.155"*
  %89 = icmp eq %"struct.std::__1::pair.155"* %77, %88
  %90 = select i1 %89, %"struct.std::__1::pair.155"* %11, %"struct.std::__1::pair.155"* %77
  %91 = icmp eq %"struct.std::__1::pair.155"* %90, %11
  br i1 %91, label %95, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %90, i64 0, i32 1, i32 0
  %94 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %93, align 8
  br label %95

95:                                               ; preds = %86, %92
  %96 = phi %"class.cc::SyncedProperty.1312"* [ %94, %92 ], [ null, %86 ]
  br i1 %56, label %101, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 2, i32 0
  %99 = bitcast %"class.gfx::ScrollOffset"* %98 to <2 x float>*
  %100 = load <2 x float>, <2 x float>* %99, align 4
  br label %105

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 1, i32 0
  %103 = bitcast %"class.gfx::ScrollOffset"* %102 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  br label %105

105:                                              ; preds = %41, %47, %97, %101
  %106 = phi <2 x float> [ %104, %101 ], [ %100, %97 ], [ zeroinitializer, %47 ], [ zeroinitializer, %41 ]
  ret <2 x float> %106
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK2cc10ScrollTree30GetScrollOffsetDeltaForTestingENS_9ElementIdE(%"class.cc::ScrollTree"* nocapture readonly, i64) local_unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.155"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.155"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.155"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.155"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.155"* %22, %"struct.std::__1::pair.155"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair.155"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair.155"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair.155"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.155"* %39 to i64
  br label %41

41:                                               ; preds = %38, %34, %30
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair.155"*
  %44 = icmp eq %"struct.std::__1::pair.155"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair.155"* %11, %"struct.std::__1::pair.155"* %32
  %46 = icmp eq %"struct.std::__1::pair.155"* %45, %11
  br i1 %46, label %113, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %45, i64 0, i32 1, i32 0
  %49 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %48, align 8
  %50 = icmp eq %"class.cc::SyncedProperty.1312"* %49, null
  br i1 %50, label %113, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 0, i32 3
  %53 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %52, align 8
  %54 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %53, i64 0, i32 12
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %10, label %75, label %57

57:                                               ; preds = %51
  %58 = ashr exact i64 %9, 4
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi %"struct.std::__1::pair.155"* [ %4, %57 ], [ %71, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %70, %59 ]
  %62 = lshr i64 %61, 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %60, i64 %62
  %64 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %63, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %65, %1
  %67 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %63, i64 1
  %68 = xor i64 %62, -1
  %69 = add i64 %61, %68
  %70 = select i1 %66, i64 %69, i64 %62
  %71 = select i1 %66, %"struct.std::__1::pair.155"* %67, %"struct.std::__1::pair.155"* %60
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %59

73:                                               ; preds = %59
  %74 = ptrtoint %"struct.std::__1::pair.155"* %71 to i64
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi i64 [ %74, %73 ], [ %8, %51 ]
  %77 = phi %"struct.std::__1::pair.155"* [ %71, %73 ], [ %4, %51 ]
  %78 = icmp eq %"struct.std::__1::pair.155"* %77, %11
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %77, i64 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %81, %1
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %77, i64 1
  %85 = ptrtoint %"struct.std::__1::pair.155"* %84 to i64
  br label %86

86:                                               ; preds = %83, %79, %75
  %87 = phi i64 [ %85, %83 ], [ %76, %75 ], [ %76, %79 ]
  %88 = inttoptr i64 %87 to %"struct.std::__1::pair.155"*
  %89 = icmp eq %"struct.std::__1::pair.155"* %77, %88
  %90 = select i1 %89, %"struct.std::__1::pair.155"* %11, %"struct.std::__1::pair.155"* %77
  %91 = icmp eq %"struct.std::__1::pair.155"* %90, %11
  br i1 %91, label %95, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %90, i64 0, i32 1, i32 0
  %94 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %93, align 8
  br label %95

95:                                               ; preds = %86, %92
  %96 = phi %"class.cc::SyncedProperty.1312"* [ %94, %92 ], [ null, %86 ]
  br i1 %56, label %101, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 3, i32 0
  %99 = bitcast %"class.gfx::ScrollOffset"* %98 to <2 x float>*
  %100 = load <2 x float>, <2 x float>* %99, align 4
  br label %113

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 6
  %103 = load i8, i8* %102, align 4, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %113

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 3
  %107 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 5
  %108 = bitcast %"class.cc::AdditionGroup.1314"* %107 to <2 x float>*
  %109 = load <2 x float>, <2 x float>* %108, align 4
  %110 = bitcast %"class.cc::AdditionGroup.1314"* %106 to <2 x float>*
  %111 = load <2 x float>, <2 x float>* %110, align 4
  %112 = fsub <2 x float> %111, %109
  br label %113

113:                                              ; preds = %105, %101, %41, %47, %97
  %114 = phi <2 x float> [ %100, %97 ], [ zeroinitializer, %47 ], [ zeroinitializer, %41 ], [ %112, %105 ], [ zeroinitializer, %101 ]
  ret <2 x float> %114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree18SetScrollCallbacksEN4base7WeakPtrINS_15ScrollCallbacksEEE(%"class.cc::ScrollTree"* nocapture, %"class.base::WeakPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::WeakPtr"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %4, align 8
  %7 = bitcast %"class.base::WeakPtr"* %3 to i64*
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %8, align 8
  store i64 %6, i64* %7, align 8
  %10 = icmp eq %"class.base::internal::WeakReference::Flag"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %9) #18
  %16 = bitcast %"class.base::internal::WeakReference::Flag"* %9 to i8*
  tail call void @_ZdlPv(i8* %16) #20
  br label %17

17:                                               ; preds = %2, %11, %15
  %18 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0, i32 1
  store i64 %19, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree15NotifyDidScrollENS_9ElementIdERKN3gfx12ScrollOffsetERKN4absl8optionalINS_24TargetSnapAreaElementIdsEEE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* dereferenceable(8), %"class.absl::optional.1366"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = bitcast i64* %9 to %"class.cc::ScrollCallbacks"**
  %11 = load %"class.cc::ScrollCallbacks"*, %"class.cc::ScrollCallbacks"** %10, align 8
  %12 = icmp eq %"class.cc::ScrollCallbacks"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %8
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)) #18
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %18

18:                                               ; preds = %15, %13
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = load %"class.cc::ScrollCallbacks"*, %"class.cc::ScrollCallbacks"** %10, align 8
  %22 = bitcast %"class.cc::ScrollCallbacks"* %21 to void (%"class.cc::ScrollCallbacks"*, i64, %"class.gfx::ScrollOffset"*, %"class.absl::optional.1366"*)***
  br label %23

23:                                               ; preds = %18, %20
  %24 = phi void (%"class.cc::ScrollCallbacks"*, i64, %"class.gfx::ScrollOffset"*, %"class.absl::optional.1366"*)*** [ %22, %20 ], [ null, %18 ]
  %25 = phi %"class.cc::ScrollCallbacks"* [ %21, %20 ], [ null, %18 ]
  %26 = load void (%"class.cc::ScrollCallbacks"*, i64, %"class.gfx::ScrollOffset"*, %"class.absl::optional.1366"*)**, void (%"class.cc::ScrollCallbacks"*, i64, %"class.gfx::ScrollOffset"*, %"class.absl::optional.1366"*)*** %24, align 8
  %27 = load void (%"class.cc::ScrollCallbacks"*, i64, %"class.gfx::ScrollOffset"*, %"class.absl::optional.1366"*)*, void (%"class.cc::ScrollCallbacks"*, i64, %"class.gfx::ScrollOffset"*, %"class.absl::optional.1366"*)** %26, align 8
  call void %27(%"class.cc::ScrollCallbacks"* %25, i64 %1, %"class.gfx::ScrollOffset"* dereferenceable(8) %2, %"class.absl::optional.1366"* dereferenceable(24) %3) #18
  br label %28

28:                                               ; preds = %8, %4, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10ScrollTree31NotifyDidChangeScrollbarsHiddenENS_9ElementIdEb(%"class.cc::ScrollTree"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %6, label %7, label %28

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i64* %8 to %"class.cc::ScrollCallbacks"**
  %10 = load %"class.cc::ScrollCallbacks"*, %"class.cc::ScrollCallbacks"** %9, align 8
  %11 = icmp eq %"class.cc::ScrollCallbacks"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)) #18
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  br label %17

17:                                               ; preds = %14, %12
  %18 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %"class.cc::ScrollCallbacks"*, %"class.cc::ScrollCallbacks"** %9, align 8
  %21 = bitcast %"class.cc::ScrollCallbacks"* %20 to void (%"class.cc::ScrollCallbacks"*, i64, i1)***
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi void (%"class.cc::ScrollCallbacks"*, i64, i1)*** [ %21, %19 ], [ null, %17 ]
  %24 = phi %"class.cc::ScrollCallbacks"* [ %20, %19 ], [ null, %17 ]
  %25 = load void (%"class.cc::ScrollCallbacks"*, i64, i1)**, void (%"class.cc::ScrollCallbacks"*, i64, i1)*** %23, align 8
  %26 = getelementptr inbounds void (%"class.cc::ScrollCallbacks"*, i64, i1)*, void (%"class.cc::ScrollCallbacks"*, i64, i1)** %25, i64 1
  %27 = load void (%"class.cc::ScrollCallbacks"*, i64, i1)*, void (%"class.cc::ScrollCallbacks"*, i64, i1)** %26, align 8
  call void %27(%"class.cc::ScrollCallbacks"* %24, i64 %1, i1 zeroext %2) #18
  br label %28

28:                                               ; preds = %7, %3, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23PropertyTreesCachedDataC2Ev(%"struct.cc::PropertyTreesCachedData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::PropertyTreesCachedData", %"struct.cc::PropertyTreesCachedData"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::PropertyTreesCachedData", %"struct.cc::PropertyTreesCachedData"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector.166"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23PropertyTreesCachedDataD2Ev(%"struct.cc::PropertyTreesCachedData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::PropertyTreesCachedData", %"struct.cc::PropertyTreesCachedData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.175"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.175"* %4 to i8*
  %8 = getelementptr inbounds %"struct.cc::PropertyTreesCachedData", %"struct.cc::PropertyTreesCachedData"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.175"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::vector.175"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %14, align 8
  %16 = icmp eq %"struct.cc::DrawTransformData"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %"struct.cc::DrawTransformData"* %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %12, i64 -1, i32 0, i32 1
  %20 = bitcast %"struct.cc::DrawTransformData"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.cc::DrawTransformData"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #20
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::vector.175"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.173"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::vector.175"* %4, %"class.std::__1::vector.175"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"struct.cc::PropertyTreesCachedData", %"struct.cc::PropertyTreesCachedData"* %0, i64 0, i32 1, i32 0, i32 0
  %31 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %30, align 8
  %32 = icmp eq %"struct.cc::AnimationScaleData"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.cc::AnimationScaleData"* %31 to i64
  %35 = getelementptr inbounds %"struct.cc::PropertyTreesCachedData", %"struct.cc::PropertyTreesCachedData"* %0, i64 0, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.cc::AnimationScaleData"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.cc::AnimationScaleData"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTreesC2Ev(%"class.cc::PropertyTrees"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::TransformCachedNodeData", align 4
  %3 = alloca %"struct.cc::ClipNode", align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %4, i64 0, i32 0
  %6 = bitcast %"class.cc::PropertyTrees"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false)
  tail call void @_ZN2cc12PropertyTreeINS_13TransformNodeEEC2Ev(%"class.cc::PropertyTree"* %5) #18
  %7 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc13TransformTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 1
  store float 1.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 2
  store float 1.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 3
  store float 1.000000e+00, float* %10, align 8
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 4
  %12 = bitcast %"struct.cc::TransformCachedNodeData"* %2 to i8*
  %13 = bitcast %"class.std::__1::vector.8"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 72, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %12) #18
  call void @_ZN2cc23TransformCachedNodeDataC1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %2) #18
  %14 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5, i32 0, i32 1
  %15 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %14, align 8
  %16 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %16, align 8
  %18 = icmp ult %"struct.cc::TransformCachedNodeData"* %15, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %1
  call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %15, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %2) #18
  %20 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %15, i64 1
  %21 = ptrtoint %"struct.cc::TransformCachedNodeData"* %20 to i64
  %22 = bitcast %"struct.cc::TransformCachedNodeData"** %14 to i64*
  store i64 %21, i64* %22, align 8
  br label %25

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5
  call void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.15"* %24, %"struct.cc::TransformCachedNodeData"* nonnull dereferenceable(140) %2) #18
  br label %25

25:                                               ; preds = %19, %23
  call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %12) #18
  %26 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4
  call void @_ZN2cc10EffectTreeC2Ev(%"class.cc::EffectTree"* %26)
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1
  %29 = bitcast %"struct.cc::ClipNode"* %3 to i8*
  %30 = bitcast %"class.std::__1::vector.102"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 25, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %29) #18
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %3) #18
  %31 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %32 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %33, align 8
  %35 = icmp ult %"struct.cc::ClipNode"* %32, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %25
  call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %32, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %3) #18
  %37 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %32, i64 1
  %38 = ptrtoint %"struct.cc::ClipNode"* %37 to i64
  %39 = bitcast %"struct.cc::ClipNode"** %31 to i64*
  store i64 %38, i64* %39, align 8
  br label %42

40:                                               ; preds = %25
  call void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.102"* %28, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %3) #18
  %41 = bitcast %"struct.cc::ClipNode"** %31 to i64*
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i64* [ %39, %36 ], [ %41, %40 ]
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %29) #18
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.102"* %28 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %44, %46
  %48 = inttoptr i64 %44 to %"struct.cc::ClipNode"*
  %49 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %48, i64 -1
  %50 = select i1 %47, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %49
  %51 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %50, i64 0, i32 0
  store i32 0, i32* %51, align 8
  %52 = load i64, i64* %43, align 8
  %53 = load i64, i64* %45, align 8
  %54 = icmp eq i64 %52, %53
  %55 = inttoptr i64 %52 to %"struct.cc::ClipNode"*
  %56 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %55, i64 -1
  %57 = select i1 %54, %"struct.cc::ClipNode"* null, %"struct.cc::ClipNode"* %56
  %58 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %57, i64 0, i32 1
  store i32 -1, i32* %58, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc8ClipTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %59 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6
  call void @_ZN2cc10ScrollTreeC2Ev(%"class.cc::ScrollTree"* %59)
  %60 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 7
  store i8 1, i8* %60, align 8
  %61 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 8
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 9
  store i8 0, i8* %62, align 2
  %63 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 10
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 11
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 12
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 13, i32 0
  %67 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1
  %69 = bitcast %"class.std::__1::vector.166"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 48, i1 false) #18
  %70 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 3
  %71 = bitcast float* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %71, i8 0, i64 16, i1 false)
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %70, align 8
  %72 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %72, align 8
  %73 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %73, align 8
  %74 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %74, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTreesD2Ev(%"class.cc::PropertyTrees"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.175"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.175"* %4 to i8*
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.175"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::vector.175"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %14, align 8
  %16 = icmp eq %"struct.cc::DrawTransformData"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %"struct.cc::DrawTransformData"* %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %12, i64 -1, i32 0, i32 1
  %20 = bitcast %"struct.cc::DrawTransformData"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.cc::DrawTransformData"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #20
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::vector.175"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.173"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::vector.175"* %4, %"class.std::__1::vector.175"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %27, %1
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %31 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %30, align 8
  %32 = icmp eq %"struct.cc::AnimationScaleData"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.cc::AnimationScaleData"* %31 to i64
  %35 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.cc::AnimationScaleData"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.cc::AnimationScaleData"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6
  tail call void @_ZN2cc10ScrollTreeD2Ev(%"class.cc::ScrollTree"* %39) #18
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %41, i64 0, i32 0, i32 0
  %43 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %42, align 8
  %44 = icmp eq %"struct.cc::ClipNode"* %43, null
  br i1 %44, label %59, label %45

45:                                               ; preds = %38
  %46 = bitcast %"struct.cc::ClipNode"* %43 to i8*
  %47 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %48 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %47, align 8
  %49 = icmp eq %"struct.cc::ClipNode"* %48, %43
  br i1 %49, label %57, label %50

50:                                               ; preds = %45, %50
  %51 = phi %"struct.cc::ClipNode"* [ %52, %50 ], [ %48, %45 ]
  %52 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %51, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %52) #18
  %53 = icmp eq %"struct.cc::ClipNode"* %52, %43
  br i1 %53, label %54, label %50

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::vector.102"* %41 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi i8* [ %56, %54 ], [ %46, %45 ]
  store %"struct.cc::ClipNode"* %43, %"struct.cc::ClipNode"** %47, align 8
  tail call void @_ZdlPv(i8* %58) #20
  br label %59

59:                                               ; preds = %38, %57
  %60 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4
  tail call void @_ZN2cc10EffectTreeD2Ev(%"class.cc::EffectTree"* %60) #18
  %61 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3
  tail call void @_ZN2cc13TransformTreeD2Ev(%"class.cc::TransformTree"* %61) #18
  %62 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %62, align 8
  %64 = icmp eq %"struct.std::__1::pair"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = ptrtoint %"struct.std::__1::pair"* %63 to i64
  %67 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"struct.std::__1::pair"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"struct.std::__1::pair"* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #20
  br label %70

70:                                               ; preds = %59, %65
  %71 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %71, align 8
  %73 = icmp eq %"struct.std::__1::pair"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  %76 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast %"struct.std::__1::pair"** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast %"struct.std::__1::pair"* %72 to i8*
  tail call void @_ZdlPv(i8* %78) #20
  br label %79

79:                                               ; preds = %70, %74
  %80 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %80, align 8
  %82 = icmp eq %"struct.std::__1::pair"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = ptrtoint %"struct.std::__1::pair"* %81 to i64
  %85 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"struct.std::__1::pair"** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = bitcast %"struct.std::__1::pair"* %81 to i8*
  tail call void @_ZdlPv(i8* %87) #20
  br label %88

88:                                               ; preds = %79, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2cc12PropertyTreeINS_8ClipNodeEED2Ev(%"class.cc::PropertyTree.101"*) unnamed_addr #0 comdat($_ZN2cc12PropertyTreeINS_8ClipNodeEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %4, align 8
  %6 = icmp eq %"struct.cc::ClipNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::ClipNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::PropertyTree.101", %"class.cc::PropertyTree.101"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %9, align 8
  %11 = icmp eq %"struct.cc::ClipNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::ClipNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %14) #18
  %15 = icmp eq %"struct.cc::ClipNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.102"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::ClipNode"* %5, %"struct.cc::ClipNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(576) %"class.cc::PropertyTrees"* @_ZN2cc13PropertyTreesaSERKS0_(%"class.cc::PropertyTrees"* returned, %"class.cc::PropertyTrees"* readonly dereferenceable(576)) local_unnamed_addr #7 align 2 {
  %3 = icmp eq %"class.cc::PropertyTrees"* %0, %1
  br i1 %3, label %36, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %9 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc13TransformNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"struct.cc::TransformNode"* %7, %"struct.cc::TransformNode"* %9) #18
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 2
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false) #18
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 1
  %14 = bitcast float* %12 to i8*
  %15 = bitcast float* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 12, i1 false) #18
  %16 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 4
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 4, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 4, i32 0, i32 1
  %20 = load i32*, i32** %19, align 8
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.8"* %16, i32* %18, i32* %20) #18
  %21 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5
  %22 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 5, i32 0, i32 0
  %23 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 5, i32 0, i32 1
  %25 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %24, align 8
  tail call void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.15"* %21, %"struct.cc::TransformCachedNodeData"* %23, %"struct.cc::TransformCachedNodeData"* %25) #18
  %26 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 6
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 6, i32 0, i32 0
  %28 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 6, i32 0, i32 1
  %30 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %29, align 8
  tail call void @_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"* %26, %"struct.cc::StickyPositionNodeData"* %28, %"struct.cc::StickyPositionNodeData"* %30) #18
  %31 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1
  %32 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %33 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %32, align 8
  %34 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %35 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %34, align 8
  tail call void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.30"* %31, %"struct.cc::EffectNode"* %33, %"struct.cc::EffectNode"* %35) #18
  br label %36

36:                                               ; preds = %2, %4
  %37 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 2
  %38 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #18
  %39 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 2
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1
  %41 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %42 = bitcast %"struct.cc::EffectNode"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.30"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = sdiv exact i64 %46, 288
  %48 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr.86"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.84"* %39 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 3
  %55 = icmp ugt i64 %47, %54
  %56 = inttoptr i64 %52 to %"class.std::__1::unique_ptr.86"*
  %57 = inttoptr i64 %50 to %"class.std::__1::unique_ptr.86"*
  br i1 %55, label %58, label %60

58:                                               ; preds = %36
  %59 = sub nsw i64 %47, %54
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.84"* %39, i64 %59) #18
  br label %79

60:                                               ; preds = %36
  %61 = icmp ult i64 %47, %54
  br i1 %61, label %62, label %79

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %56, i64 %47
  %64 = icmp eq %"class.std::__1::unique_ptr.86"* %63, %57
  br i1 %64, label %78, label %65

65:                                               ; preds = %62, %76
  %66 = phi %"class.std::__1::unique_ptr.86"* [ %67, %76 ], [ %57, %62 ]
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %66, i64 -1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %68, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %68, align 8
  %70 = icmp eq %"class.cc::RenderSurfaceImpl"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.cc::RenderSurfaceImpl"* %69 to void (%"class.cc::RenderSurfaceImpl"*)***
  %73 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %73, i64 1
  %75 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %74, align 8
  tail call void %75(%"class.cc::RenderSurfaceImpl"* nonnull %69) #18
  br label %76

76:                                               ; preds = %71, %65
  %77 = icmp eq %"class.std::__1::unique_ptr.86"* %67, %63
  br i1 %77, label %78, label %65

78:                                               ; preds = %76, %62
  store %"class.std::__1::unique_ptr.86"* %63, %"class.std::__1::unique_ptr.86"** %48, align 8
  br label %79

79:                                               ; preds = %58, %60, %78
  br i1 %3, label %80, label %86

80:                                               ; preds = %79
  %81 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 2
  %82 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #18
  %83 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 2
  %84 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 16, i1 false) #18
  %85 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 1
  store i32 -1, i32* %85, align 8
  br label %117

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1
  %88 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %89 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %88, align 8
  %90 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %91 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %90, align 8
  tail call void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.102"* %87, %"struct.cc::ClipNode"* %89, %"struct.cc::ClipNode"* %91) #18
  %92 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #18
  %94 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 1
  %95 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %96 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %95, align 8
  %97 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 0, i32 1, i32 0, i32 1
  %98 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %97, align 8
  tail call void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"* %94, %"struct.cc::ScrollNode"* %96, %"struct.cc::ScrollNode"* %98) #18
  %99 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 2
  %100 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 6, i32 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #18
  %101 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 1
  store i32 -1, i32* %101, align 8
  %102 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %103, align 8
  %105 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %105, align 8
  tail call void @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.1"* %102, %"struct.std::__1::pair"* %104, %"struct.std::__1::pair"* %106) #18
  %107 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0, i32 0
  %108 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %108, align 8
  %110 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %111 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %110, align 8
  tail call void @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.1"* %107, %"struct.std::__1::pair"* %109, %"struct.std::__1::pair"* %111) #18
  %112 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0, i32 0
  %113 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %113, align 8
  %115 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %115, align 8
  tail call void @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.1"* %112, %"struct.std::__1::pair"* %114, %"struct.std::__1::pair"* %116) #18
  br label %117

117:                                              ; preds = %80, %86
  %118 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 7
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 7
  store i8 %119, i8* %120, align 8
  %121 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 8
  %122 = load i8, i8* %121, align 1, !range !2
  %123 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 8
  store i8 %122, i8* %123, align 1
  %124 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 9
  %125 = load i8, i8* %124, align 2, !range !2
  %126 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 9
  store i8 %125, i8* %126, align 2
  %127 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 10
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 10
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 11
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 11
  store i8 %131, i8* %132, align 8
  %133 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 12
  %134 = load i8, i8* %133, align 1, !range !2
  %135 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 12
  store i8 %134, i8* %135, align 1
  %136 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 13
  %137 = bitcast %"class.gfx::Vector2dF"* %136 to i64*
  %138 = load i64, i64* %137, align 4
  %139 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 13
  %140 = bitcast %"class.gfx::Vector2dF"* %139 to i64*
  store i64 %138, i64* %140, align 4
  %141 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 14
  %142 = bitcast %"class.gfx::Vector2dF"* %141 to i64*
  %143 = load i64, i64* %142, align 4
  %144 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 14
  %145 = bitcast %"class.gfx::Vector2dF"* %144 to i64*
  store i64 %143, i64* %145, align 4
  %146 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %146, align 8
  %147 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %147, align 8
  %148 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %148, align 8
  %149 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 3
  store %"class.cc::PropertyTrees"* %0, %"class.cc::PropertyTrees"** %149, align 8
  tail call void @_ZN2cc13PropertyTrees15ResetCachedDataEv(%"class.cc::PropertyTrees"* %0)
  ret %"class.cc::PropertyTrees"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees15ResetCachedDataEv(%"class.cc::PropertyTrees"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.175", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %6 = bitcast %"struct.cc::TransformNode"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 224
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1
  %13 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.cc::AnimationScaleData"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.166"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 12
  %20 = icmp ugt i64 %11, %19
  %21 = inttoptr i64 %17 to %"struct.cc::AnimationScaleData"*
  br i1 %20, label %22, label %27

22:                                               ; preds = %1
  %23 = sub nsw i64 %11, %19
  tail call void @_ZNSt3__16vectorIN2cc18AnimationScaleDataENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.166"* %12, i64 %23) #18
  %24 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %12, i64 0, i32 0, i32 0
  %25 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %24, align 8
  %26 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %13, align 8
  br label %32

27:                                               ; preds = %1
  %28 = inttoptr i64 %15 to %"struct.cc::AnimationScaleData"*
  %29 = icmp ult i64 %11, %19
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %21, i64 %11
  store %"struct.cc::AnimationScaleData"* %31, %"struct.cc::AnimationScaleData"** %13, align 8
  br label %32

32:                                               ; preds = %22, %27, %30
  %33 = phi %"struct.cc::AnimationScaleData"* [ %26, %22 ], [ %28, %27 ], [ %31, %30 ]
  %34 = phi %"struct.cc::AnimationScaleData"* [ %25, %22 ], [ %21, %27 ], [ %21, %30 ]
  %35 = icmp eq %"struct.cc::AnimationScaleData"* %34, %33
  br i1 %35, label %36, label %100

36:                                               ; preds = %100, %32
  %37 = bitcast %"class.std::__1::vector.175"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #18
  %38 = tail call i8* @_Znwm(i64 148) #20
  %39 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::vector.175"* %2 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 148
  %42 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"struct.cc::DrawTransformData"** %42 to i8**
  store i8* %41, i8** %43, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 0, i64 148, i1 false) #18
  %44 = bitcast i8* %38 to i32*
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %38, i64 4
  %46 = bitcast i8* %45 to i32*
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %38, i64 8
  store i8 1, i8* %47, align 4
  %48 = getelementptr inbounds i8, i8* %38, i64 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds i8, i8* %38, i64 10
  store i8 0, i8* %49, align 2
  %50 = getelementptr inbounds i8, i8* %38, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %51 = getelementptr inbounds i8, i8* %38, i64 76
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds i8, i8* %38, i64 80
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %53 = getelementptr inbounds i8, i8* %38, i64 144
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 2
  %55 = bitcast %"struct.cc::DrawTransformData"** %39 to i64*
  %56 = ptrtoint i8* %41 to i64
  store i64 %56, i64* %55, align 8
  %57 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 2, i32 0, i32 1
  %58 = bitcast %"class.std::__1::vector.175"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.173"* %54 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = sdiv exact i64 %62, 24
  %64 = icmp ugt i64 %11, %63
  %65 = inttoptr i64 %61 to %"class.std::__1::vector.175"*
  %66 = inttoptr i64 %59 to %"class.std::__1::vector.175"*
  br i1 %64, label %67, label %69

67:                                               ; preds = %36
  %68 = sub nsw i64 %11, %63
  call void @_ZNSt3__16vectorINS0_IN2cc17DrawTransformDataENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.173"* %54, i64 %68, %"class.std::__1::vector.175"* nonnull dereferenceable(24) %2) #18
  br label %88

69:                                               ; preds = %36
  %70 = icmp ult i64 %11, %63
  br i1 %70, label %71, label %88

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %65, i64 %11
  %73 = icmp eq %"class.std::__1::vector.175"* %72, %66
  br i1 %73, label %87, label %74

74:                                               ; preds = %71, %85
  %75 = phi %"class.std::__1::vector.175"* [ %76, %85 ], [ %66, %71 ]
  %76 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %75, i64 -1
  %77 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %76, i64 0, i32 0, i32 0
  %78 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %77, align 8
  %79 = icmp eq %"struct.cc::DrawTransformData"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %74
  %81 = ptrtoint %"struct.cc::DrawTransformData"* %78 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %75, i64 -1, i32 0, i32 1
  %83 = bitcast %"struct.cc::DrawTransformData"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"struct.cc::DrawTransformData"* %78 to i8*
  tail call void @_ZdlPv(i8* %84) #20
  br label %85

85:                                               ; preds = %80, %74
  %86 = icmp eq %"class.std::__1::vector.175"* %76, %72
  br i1 %86, label %87, label %74

87:                                               ; preds = %85, %71
  store %"class.std::__1::vector.175"* %72, %"class.std::__1::vector.175"** %57, align 8
  br label %88

88:                                               ; preds = %67, %69, %87
  %89 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 0
  %90 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %89, align 8
  %91 = icmp eq %"struct.cc::DrawTransformData"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = ptrtoint %"struct.cc::DrawTransformData"* %90 to i64
  store i64 %93, i64* %55, align 8
  %94 = bitcast %"struct.cc::DrawTransformData"* %90 to i8*
  call void @_ZdlPv(i8* %94) #20
  br label %95

95:                                               ; preds = %88, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #18
  %96 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %54, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %96, align 8
  %98 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %57, align 8
  %99 = icmp eq %"class.std::__1::vector.175"* %97, %98
  br i1 %99, label %105, label %106

100:                                              ; preds = %32, %100
  %101 = phi %"struct.cc::AnimationScaleData"* [ %103, %100 ], [ %34, %32 ]
  %102 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %101, i64 0, i32 0
  store i32 -1, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %101, i64 1
  %104 = icmp eq %"struct.cc::AnimationScaleData"* %103, %33
  br i1 %104, label %36, label %100

105:                                              ; preds = %125, %95
  ret void

106:                                              ; preds = %95, %125
  %107 = phi %"class.std::__1::vector.175"* [ %131, %125 ], [ %97, %95 ]
  %108 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %107, i64 0, i32 0, i32 1
  %109 = bitcast %"struct.cc::DrawTransformData"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::vector.175"* %107 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = sdiv exact i64 %113, 148
  %115 = icmp eq i64 %113, 0
  %116 = inttoptr i64 %112 to %"struct.cc::DrawTransformData"*
  br i1 %115, label %117, label %121

117:                                              ; preds = %106
  %118 = sub nuw nsw i64 1, %114
  call void @_ZNSt3__16vectorIN2cc17DrawTransformDataENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.175"* %107, i64 %118) #18
  %119 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %107, i64 0, i32 0, i32 0
  %120 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %119, align 8
  br label %125

121:                                              ; preds = %106
  %122 = icmp ugt i64 %114, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %116, i64 1
  store %"struct.cc::DrawTransformData"* %124, %"struct.cc::DrawTransformData"** %108, align 8
  br label %125

125:                                              ; preds = %117, %121, %123
  %126 = phi %"struct.cc::DrawTransformData"* [ %120, %117 ], [ %116, %121 ], [ %116, %123 ]
  %127 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %107, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %126, i64 0, i32 0
  store i32 -1, i32* %128, align 4
  %129 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %127, align 8
  %130 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %129, i64 0, i32 1
  store i32 -1, i32* %130, align 4
  %131 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %107, i64 1
  %132 = icmp eq %"class.std::__1::vector.175"* %131, %98
  br i1 %132, label %105, label %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees5clearEv(%"class.cc::PropertyTrees"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.86", align 8
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3
  tail call void @_ZN2cc13TransformTree5clearEv(%"class.cc::TransformTree"* %3)
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_8ClipNodeEE5clearEv(%"class.cc::PropertyTree.101"* %4)
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_10EffectNodeEE5clearEv(%"class.cc::PropertyTree.29"* %5) #18
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 2
  %7 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.86"* %10, %8
  br i1 %11, label %25, label %12

12:                                               ; preds = %1, %23
  %13 = phi %"class.std::__1::unique_ptr.86"* [ %14, %23 ], [ %10, %1 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %15, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %15, align 8
  %17 = icmp eq %"class.cc::RenderSurfaceImpl"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.cc::RenderSurfaceImpl"* %16 to void (%"class.cc::RenderSurfaceImpl"*)***
  %20 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %20, i64 1
  %22 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %21, align 8
  tail call void %22(%"class.cc::RenderSurfaceImpl"* nonnull %16) #18
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.86"* %14, %8
  br i1 %24, label %25, label %12

25:                                               ; preds = %23, %1
  store %"class.std::__1::unique_ptr.86"* %8, %"class.std::__1::unique_ptr.86"** %9, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #18
  %27 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %28, align 8
  %30 = icmp ult %"class.std::__1::unique_ptr.86"* %8, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %32, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.86"* %8 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %8, i64 1
  %35 = ptrtoint %"class.std::__1::unique_ptr.86"* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.86"** %9 to i64*
  store i64 %35, i64* %36, align 8
  br label %38

37:                                               ; preds = %25
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"* %6, %"class.std::__1::unique_ptr.86"* nonnull dereferenceable(8) %2) #18
  br label %38

38:                                               ; preds = %37, %31
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %39, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %39, align 8
  %41 = icmp eq %"class.cc::RenderSurfaceImpl"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.cc::RenderSurfaceImpl"* %40 to void (%"class.cc::RenderSurfaceImpl"*)***
  %44 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %44, i64 1
  %46 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %45, align 8
  call void %46(%"class.cc::RenderSurfaceImpl"* nonnull %40) #18
  br label %47

47:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #18
  %48 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0
  call void @_ZN2cc12PropertyTreeINS_10ScrollNodeEE5clearEv(%"class.cc::PropertyTree.121"* %48) #18
  %49 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 3
  %50 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %49, align 8
  %51 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %50, i64 0, i32 11
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 1
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 2, i32 0
  %57 = bitcast %"class.base::internal::flat_tree.142"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.std::__1::pair.145"** %59 to i64*
  store i64 %58, i64* %60, align 8
  br label %61

61:                                               ; preds = %47, %54
  %62 = bitcast %"class.cc::PropertyTrees"* %0 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0
  %67 = bitcast %"class.base::internal::flat_tree"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast %"struct.std::__1::pair"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0
  %72 = bitcast %"class.base::internal::flat_tree"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"struct.std::__1::pair"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 7
  store i8 1, i8* %76, align 8
  %77 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 9
  store i8 0, i8* %77, align 2
  %78 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 8
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 10
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees36SetInnerViewportContainerBoundsDeltaEN3gfx9Vector2dFE(%"class.cc::PropertyTrees"* nocapture, <2 x float>) local_unnamed_addr #15 align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 13
  %4 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = extractelement <2 x float> %1, i32 0
  %7 = fcmp oeq float %5, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 13, i32 1
  %10 = load float, float* %9, align 4
  %11 = extractelement <2 x float> %1, i32 1
  %12 = fcmp oeq float %10, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2, %8
  %14 = bitcast %"class.gfx::Vector2dF"* %3 to <2 x float>*
  store <2 x float> %1, <2 x float>* %14, align 4
  br label %15

15:                                               ; preds = %8, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees36SetOuterViewportContainerBoundsDeltaEN3gfx9Vector2dFE(%"class.cc::PropertyTrees"* nocapture, <2 x float>) local_unnamed_addr #15 align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = extractelement <2 x float> %1, i32 0
  %7 = fcmp oeq float %5, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 14, i32 1
  %10 = load float, float* %9, align 4
  %11 = extractelement <2 x float> %1, i32 1
  %12 = fcmp oeq float %10, %11
  br i1 %12, label %78, label %13

13:                                               ; preds = %2, %8
  %14 = bitcast %"class.gfx::Vector2dF"* %3 to <2 x float>*
  store <2 x float> %1, <2 x float>* %14, align 4
  %15 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 4, i32 0, i32 1
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %78, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 2
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 3
  %26 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %25, align 8
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %26, i64 0, i32 15, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = load i32*, i32** %15, align 8
  %31 = load i32*, i32** %17, align 8
  br label %32

32:                                               ; preds = %24, %20
  %33 = phi i32* [ %18, %20 ], [ %31, %24 ]
  %34 = phi i32* [ %16, %20 ], [ %30, %24 ]
  store i8 1, i8* %21, align 8
  %35 = icmp eq i32* %34, %33
  br i1 %35, label %78, label %36

36:                                               ; preds = %32
  %37 = ptrtoint i32* %34 to i64
  %38 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %39 = getelementptr i32, i32* %33, i64 -1
  %40 = ptrtoint i32* %39 to i64
  %41 = sub i64 %40, %37
  %42 = and i64 %41, 4
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %36
  %45 = load i32, i32* %34, align 4
  %46 = icmp sgt i32 %45, -1
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = sext i32 %45 to i64
  %49 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %38, align 8
  %50 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %49, i64 %48
  br label %51

51:                                               ; preds = %47, %44
  %52 = phi %"struct.cc::TransformNode"* [ %50, %47 ], [ null, %44 ]
  %53 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %52, i64 0, i32 10
  %54 = bitcast i24* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = or i32 %55, 1
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds i32, i32* %34, i64 1
  br label %58

58:                                               ; preds = %51, %36
  %59 = phi i32* [ %34, %36 ], [ %57, %51 ]
  %60 = icmp ult i64 %41, 4
  br i1 %60, label %78, label %61

61:                                               ; preds = %58, %83
  %62 = phi i32* [ %89, %83 ], [ %59, %58 ]
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = sext i32 %63 to i64
  %67 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %38, align 8
  %68 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %67, i64 %66
  br label %69

69:                                               ; preds = %65, %61
  %70 = phi %"struct.cc::TransformNode"* [ %68, %65 ], [ null, %61 ]
  %71 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %70, i64 0, i32 10
  %72 = bitcast i24* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = or i32 %73, 1
  store i32 %74, i32* %72, align 4
  %75 = getelementptr inbounds i32, i32* %62, i64 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %79, label %83

78:                                               ; preds = %58, %83, %32, %13, %8
  ret void

79:                                               ; preds = %69
  %80 = sext i32 %76 to i64
  %81 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %38, align 8
  %82 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %81, i64 %80
  br label %83

83:                                               ; preds = %79, %69
  %84 = phi %"struct.cc::TransformNode"* [ %82, %79 ], [ null, %69 ]
  %85 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %84, i64 0, i32 10
  %86 = bitcast i24* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = or i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %62, i64 2
  %90 = icmp eq i32* %89, %33
  br i1 %90, label %78, label %61
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc13PropertyTrees25ElementIsAnimatingChangedERKN4base8flat_mapINS_14TargetProperty4TypeENS_9ElementIdENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_S5_EENS6_9allocatorISB_EEEEEERKNS_22PropertyAnimationStateESK_b(%"class.cc::PropertyTrees"* nocapture, %"class.base::flat_map.1394"* nocapture readonly dereferenceable(24), %"struct.cc::PropertyAnimationState"* dereferenceable(16), %"struct.cc::PropertyAnimationState"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.cc::PropertyAnimationState", %"struct.cc::PropertyAnimationState"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.cc::PropertyAnimationState", %"struct.cc::PropertyAnimationState"* %2, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::flat_map.1394", %"class.base::flat_map.1394"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::flat_map.1394", %"class.base::flat_map.1394"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair.1398"** %9 to i64*
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 3
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.cc::PropertyAnimationState", %"struct.cc::PropertyAnimationState"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.cc::PropertyAnimationState", %"struct.cc::PropertyAnimationState"* %3, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 2
  %16 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 3
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 2
  br label %22

19:                                               ; preds = %417
  %20 = and i8 %418, 1
  %21 = icmp ne i8 %20, 0
  ret i1 %21

22:                                               ; preds = %417, %5
  %23 = phi i64 [ 0, %5 ], [ %419, %417 ]
  %24 = phi i8 [ 0, %5 ], [ %418, %417 ]
  %25 = shl i64 1, %23
  %26 = load i64, i64* %6, align 8
  %27 = and i64 %26, %25
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = load i64, i64* %7, align 8
  %31 = and i64 %30, %25
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %417, label %33

33:                                               ; preds = %29, %22
  %34 = load %"struct.std::__1::pair.1398"*, %"struct.std::__1::pair.1398"** %8, align 8
  %35 = load i64, i64* %10, align 8
  %36 = ptrtoint %"struct.std::__1::pair.1398"* %34 to i64
  %37 = sub i64 %35, %36
  %38 = icmp eq i64 %37, 0
  %39 = inttoptr i64 %35 to %"struct.std::__1::pair.1398"*
  br i1 %38, label %59, label %40

40:                                               ; preds = %33
  %41 = ashr exact i64 %37, 4
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi %"struct.std::__1::pair.1398"* [ %34, %40 ], [ %55, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %54, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.1398", %"struct.std::__1::pair.1398"* %43, i64 %45
  %47 = getelementptr inbounds %"struct.std::__1::pair.1398", %"struct.std::__1::pair.1398"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = icmp sgt i64 %23, %49
  %51 = getelementptr inbounds %"struct.std::__1::pair.1398", %"struct.std::__1::pair.1398"* %46, i64 1
  %52 = xor i64 %45, -1
  %53 = add i64 %44, %52
  %54 = select i1 %50, i64 %53, i64 %45
  %55 = select i1 %50, %"struct.std::__1::pair.1398"* %51, %"struct.std::__1::pair.1398"* %43
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %42

57:                                               ; preds = %42
  %58 = ptrtoint %"struct.std::__1::pair.1398"* %55 to i64
  br label %59

59:                                               ; preds = %57, %33
  %60 = phi i64 [ %58, %57 ], [ %36, %33 ]
  %61 = phi %"struct.std::__1::pair.1398"* [ %55, %57 ], [ %34, %33 ]
  %62 = icmp eq %"struct.std::__1::pair.1398"* %61, %39
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.std::__1::pair.1398", %"struct.std::__1::pair.1398"* %61, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = icmp slt i64 %23, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::pair.1398", %"struct.std::__1::pair.1398"* %61, i64 1
  %70 = ptrtoint %"struct.std::__1::pair.1398"* %69 to i64
  br label %71

71:                                               ; preds = %59, %63, %68
  %72 = phi i64 [ %70, %68 ], [ %60, %59 ], [ %60, %63 ]
  %73 = inttoptr i64 %72 to %"struct.std::__1::pair.1398"*
  %74 = icmp eq %"struct.std::__1::pair.1398"* %61, %73
  %75 = select i1 %74, %"struct.std::__1::pair.1398"* %39, %"struct.std::__1::pair.1398"* %61
  %76 = icmp eq %"struct.std::__1::pair.1398"* %75, %39
  br i1 %76, label %417, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"struct.std::__1::pair.1398", %"struct.std::__1::pair.1398"* %75, i64 0, i32 1, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %23 to i32
  switch i32 %80, label %417 [
    i32 0, label %81
    i32 1, label %171
    i32 2, label %253
    i32 8, label %335
  ]

81:                                               ; preds = %77
  %82 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %16, align 8
  %83 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %84 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %83, align 8
  %85 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"struct.std::__1::pair"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %84 to i64
  %89 = sub i64 %87, %88
  %90 = icmp eq i64 %89, 0
  %91 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  br i1 %90, label %110, label %92

92:                                               ; preds = %81
  %93 = ashr exact i64 %89, 4
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi %"struct.std::__1::pair"* [ %84, %92 ], [ %106, %94 ]
  %96 = phi i64 [ %93, %92 ], [ %105, %94 ]
  %97 = lshr i64 %96, 1
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %97
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp ult i64 %100, %79
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 1
  %103 = xor i64 %97, -1
  %104 = add i64 %96, %103
  %105 = select i1 %101, i64 %104, i64 %97
  %106 = select i1 %101, %"struct.std::__1::pair"* %102, %"struct.std::__1::pair"* %95
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %108, label %94

108:                                              ; preds = %94
  %109 = ptrtoint %"struct.std::__1::pair"* %106 to i64
  br label %110

110:                                              ; preds = %108, %81
  %111 = phi i64 [ %109, %108 ], [ %88, %81 ]
  %112 = phi %"struct.std::__1::pair"* [ %106, %108 ], [ %84, %81 ]
  %113 = icmp eq %"struct.std::__1::pair"* %112, %91
  br i1 %113, label %121, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 0, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp ugt i64 %116, %79
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 1
  %120 = ptrtoint %"struct.std::__1::pair"* %119 to i64
  br label %121

121:                                              ; preds = %118, %114, %110
  %122 = phi i64 [ %120, %118 ], [ %111, %110 ], [ %111, %114 ]
  %123 = inttoptr i64 %122 to %"struct.std::__1::pair"*
  %124 = icmp eq %"struct.std::__1::pair"* %112, %123
  %125 = select i1 %124, %"struct.std::__1::pair"* %91, %"struct.std::__1::pair"* %112
  %126 = icmp eq %"struct.std::__1::pair"* %125, %91
  br i1 %126, label %417, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, -1
  br i1 %130, label %131, label %417

131:                                              ; preds = %127
  %132 = sext i32 %129 to i64
  %133 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %17, align 8
  %134 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %133, i64 %132
  %135 = icmp eq %"struct.cc::TransformNode"* %134, null
  br i1 %135, label %417, label %136

136:                                              ; preds = %131
  br i1 %28, label %137, label %148

137:                                              ; preds = %136
  %138 = load i64, i64* %13, align 8
  %139 = and i64 %138, %25
  %140 = icmp ne i64 %139, 0
  %141 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %133, i64 %132, i32 10
  %142 = bitcast i24* %141 to i32*
  %143 = zext i1 %140 to i32
  %144 = load i32, i32* %142, align 4
  %145 = shl nuw nsw i32 %143, 5
  %146 = and i32 %144, -33
  %147 = or i32 %145, %146
  store i32 %147, i32* %142, align 4
  br label %148

148:                                              ; preds = %137, %136
  %149 = load i64, i64* %7, align 8
  %150 = and i64 %149, %25
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %417, label %152

152:                                              ; preds = %148
  %153 = load i64, i64* %14, align 8
  %154 = and i64 %153, %25
  %155 = icmp ne i64 %154, 0
  %156 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %133, i64 %132, i32 10
  %157 = bitcast i24* %156 to i32*
  %158 = zext i1 %155 to i32
  %159 = load i32, i32* %157, align 4
  %160 = shl nuw nsw i32 %158, 4
  %161 = and i32 %159, -17
  %162 = or i32 %160, %161
  store i32 %162, i32* %157, align 4
  %163 = load i8, i8* %18, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %170

165:                                              ; preds = %152
  %166 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %16, align 8
  %167 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %166, i64 0, i32 15, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %167, align 8
  br label %170

170:                                              ; preds = %152, %165
  store i8 1, i8* %18, align 8
  br label %417

171:                                              ; preds = %77
  %172 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %11, align 8
  %173 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %173, align 8
  %175 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %176 = bitcast %"struct.std::__1::pair"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = ptrtoint %"struct.std::__1::pair"* %174 to i64
  %179 = sub i64 %177, %178
  %180 = icmp eq i64 %179, 0
  %181 = inttoptr i64 %177 to %"struct.std::__1::pair"*
  br i1 %180, label %200, label %182

182:                                              ; preds = %171
  %183 = ashr exact i64 %179, 4
  br label %184

184:                                              ; preds = %184, %182
  %185 = phi %"struct.std::__1::pair"* [ %174, %182 ], [ %196, %184 ]
  %186 = phi i64 [ %183, %182 ], [ %195, %184 ]
  %187 = lshr i64 %186, 1
  %188 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %185, i64 %187
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 0, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = icmp ult i64 %190, %79
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 1
  %193 = xor i64 %187, -1
  %194 = add i64 %186, %193
  %195 = select i1 %191, i64 %194, i64 %187
  %196 = select i1 %191, %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"* %185
  %197 = icmp eq i64 %195, 0
  br i1 %197, label %198, label %184

198:                                              ; preds = %184
  %199 = ptrtoint %"struct.std::__1::pair"* %196 to i64
  br label %200

200:                                              ; preds = %198, %171
  %201 = phi i64 [ %199, %198 ], [ %178, %171 ]
  %202 = phi %"struct.std::__1::pair"* [ %196, %198 ], [ %174, %171 ]
  %203 = icmp eq %"struct.std::__1::pair"* %202, %181
  br i1 %203, label %211, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 0, i32 0, i32 0
  %206 = load i64, i64* %205, align 8
  %207 = icmp ugt i64 %206, %79
  br i1 %207, label %211, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 1
  %210 = ptrtoint %"struct.std::__1::pair"* %209 to i64
  br label %211

211:                                              ; preds = %208, %204, %200
  %212 = phi i64 [ %210, %208 ], [ %201, %200 ], [ %201, %204 ]
  %213 = inttoptr i64 %212 to %"struct.std::__1::pair"*
  %214 = icmp eq %"struct.std::__1::pair"* %202, %213
  %215 = select i1 %214, %"struct.std::__1::pair"* %181, %"struct.std::__1::pair"* %202
  %216 = icmp eq %"struct.std::__1::pair"* %215, %181
  br i1 %216, label %417, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %215, i64 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = icmp sgt i32 %219, -1
  br i1 %220, label %221, label %417

221:                                              ; preds = %217
  %222 = sext i32 %219 to i64
  %223 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %12, align 8
  %224 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %223, i64 %222
  %225 = icmp eq %"struct.cc::EffectNode"* %224, null
  br i1 %225, label %417, label %226

226:                                              ; preds = %221
  br i1 %28, label %227, label %238

227:                                              ; preds = %226
  %228 = load i64, i64* %13, align 8
  %229 = and i64 %228, %25
  %230 = icmp ne i64 %229, 0
  %231 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %223, i64 %222, i32 16
  %232 = bitcast [3 x i8]* %231 to i24*
  %233 = zext i1 %230 to i24
  %234 = load i24, i24* %232, align 4
  %235 = shl nuw nsw i24 %233, 13
  %236 = and i24 %234, -8193
  %237 = or i24 %235, %236
  store i24 %237, i24* %232, align 4
  br label %238

238:                                              ; preds = %227, %226
  %239 = load i64, i64* %7, align 8
  %240 = and i64 %239, %25
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %417, label %242

242:                                              ; preds = %238
  %243 = load i64, i64* %14, align 8
  %244 = and i64 %243, %25
  %245 = icmp ne i64 %244, 0
  %246 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %223, i64 %222, i32 16
  %247 = bitcast [3 x i8]* %246 to i24*
  %248 = zext i1 %245 to i24
  %249 = load i24, i24* %247, align 4
  %250 = shl nuw nsw i24 %248, 10
  %251 = and i24 %249, -1025
  %252 = or i24 %250, %251
  store i24 %252, i24* %247, align 4
  store i8 1, i8* %15, align 8
  br label %417

253:                                              ; preds = %77
  %254 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %11, align 8
  %255 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %255, align 8
  %257 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = bitcast %"struct.std::__1::pair"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = ptrtoint %"struct.std::__1::pair"* %256 to i64
  %261 = sub i64 %259, %260
  %262 = icmp eq i64 %261, 0
  %263 = inttoptr i64 %259 to %"struct.std::__1::pair"*
  br i1 %262, label %282, label %264

264:                                              ; preds = %253
  %265 = ashr exact i64 %261, 4
  br label %266

266:                                              ; preds = %266, %264
  %267 = phi %"struct.std::__1::pair"* [ %256, %264 ], [ %278, %266 ]
  %268 = phi i64 [ %265, %264 ], [ %277, %266 ]
  %269 = lshr i64 %268, 1
  %270 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %267, i64 %269
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 0, i32 0, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = icmp ult i64 %272, %79
  %274 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 1
  %275 = xor i64 %269, -1
  %276 = add i64 %268, %275
  %277 = select i1 %273, i64 %276, i64 %269
  %278 = select i1 %273, %"struct.std::__1::pair"* %274, %"struct.std::__1::pair"* %267
  %279 = icmp eq i64 %277, 0
  br i1 %279, label %280, label %266

280:                                              ; preds = %266
  %281 = ptrtoint %"struct.std::__1::pair"* %278 to i64
  br label %282

282:                                              ; preds = %280, %253
  %283 = phi i64 [ %281, %280 ], [ %260, %253 ]
  %284 = phi %"struct.std::__1::pair"* [ %278, %280 ], [ %256, %253 ]
  %285 = icmp eq %"struct.std::__1::pair"* %284, %263
  br i1 %285, label %293, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %284, i64 0, i32 0, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = icmp ugt i64 %288, %79
  br i1 %289, label %293, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %284, i64 1
  %292 = ptrtoint %"struct.std::__1::pair"* %291 to i64
  br label %293

293:                                              ; preds = %290, %286, %282
  %294 = phi i64 [ %292, %290 ], [ %283, %282 ], [ %283, %286 ]
  %295 = inttoptr i64 %294 to %"struct.std::__1::pair"*
  %296 = icmp eq %"struct.std::__1::pair"* %284, %295
  %297 = select i1 %296, %"struct.std::__1::pair"* %263, %"struct.std::__1::pair"* %284
  %298 = icmp eq %"struct.std::__1::pair"* %297, %263
  br i1 %298, label %417, label %299

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %297, i64 0, i32 1
  %301 = load i32, i32* %300, align 8
  %302 = icmp sgt i32 %301, -1
  br i1 %302, label %303, label %417

303:                                              ; preds = %299
  %304 = sext i32 %301 to i64
  %305 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %12, align 8
  %306 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %305, i64 %304
  %307 = icmp eq %"struct.cc::EffectNode"* %306, null
  br i1 %307, label %417, label %308

308:                                              ; preds = %303
  br i1 %28, label %309, label %320

309:                                              ; preds = %308
  %310 = load i64, i64* %13, align 8
  %311 = and i64 %310, %25
  %312 = icmp ne i64 %311, 0
  %313 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %305, i64 %304, i32 16
  %314 = bitcast [3 x i8]* %313 to i24*
  %315 = zext i1 %312 to i24
  %316 = load i24, i24* %314, align 4
  %317 = shl nuw nsw i24 %315, 11
  %318 = and i24 %316, -2049
  %319 = or i24 %317, %318
  store i24 %319, i24* %314, align 4
  br label %320

320:                                              ; preds = %309, %308
  %321 = load i64, i64* %7, align 8
  %322 = and i64 %321, %25
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %417, label %324

324:                                              ; preds = %320
  %325 = load i64, i64* %14, align 8
  %326 = and i64 %325, %25
  %327 = icmp ne i64 %326, 0
  %328 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %305, i64 %304, i32 16
  %329 = bitcast [3 x i8]* %328 to i24*
  %330 = zext i1 %327 to i24
  %331 = load i24, i24* %329, align 4
  %332 = shl nuw nsw i24 %330, 8
  %333 = and i24 %331, -257
  %334 = or i24 %332, %333
  store i24 %334, i24* %329, align 4
  br label %417

335:                                              ; preds = %77
  %336 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %11, align 8
  %337 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %336, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %337, align 8
  %339 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %336, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = bitcast %"struct.std::__1::pair"** %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = ptrtoint %"struct.std::__1::pair"* %338 to i64
  %343 = sub i64 %341, %342
  %344 = icmp eq i64 %343, 0
  %345 = inttoptr i64 %341 to %"struct.std::__1::pair"*
  br i1 %344, label %364, label %346

346:                                              ; preds = %335
  %347 = ashr exact i64 %343, 4
  br label %348

348:                                              ; preds = %348, %346
  %349 = phi %"struct.std::__1::pair"* [ %338, %346 ], [ %360, %348 ]
  %350 = phi i64 [ %347, %346 ], [ %359, %348 ]
  %351 = lshr i64 %350, 1
  %352 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %349, i64 %351
  %353 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %352, i64 0, i32 0, i32 0
  %354 = load i64, i64* %353, align 8
  %355 = icmp ult i64 %354, %79
  %356 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %352, i64 1
  %357 = xor i64 %351, -1
  %358 = add i64 %350, %357
  %359 = select i1 %355, i64 %358, i64 %351
  %360 = select i1 %355, %"struct.std::__1::pair"* %356, %"struct.std::__1::pair"* %349
  %361 = icmp eq i64 %359, 0
  br i1 %361, label %362, label %348

362:                                              ; preds = %348
  %363 = ptrtoint %"struct.std::__1::pair"* %360 to i64
  br label %364

364:                                              ; preds = %362, %335
  %365 = phi i64 [ %363, %362 ], [ %342, %335 ]
  %366 = phi %"struct.std::__1::pair"* [ %360, %362 ], [ %338, %335 ]
  %367 = icmp eq %"struct.std::__1::pair"* %366, %345
  br i1 %367, label %375, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %366, i64 0, i32 0, i32 0
  %370 = load i64, i64* %369, align 8
  %371 = icmp ugt i64 %370, %79
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %366, i64 1
  %374 = ptrtoint %"struct.std::__1::pair"* %373 to i64
  br label %375

375:                                              ; preds = %372, %368, %364
  %376 = phi i64 [ %374, %372 ], [ %365, %364 ], [ %365, %368 ]
  %377 = inttoptr i64 %376 to %"struct.std::__1::pair"*
  %378 = icmp eq %"struct.std::__1::pair"* %366, %377
  %379 = select i1 %378, %"struct.std::__1::pair"* %345, %"struct.std::__1::pair"* %366
  %380 = icmp eq %"struct.std::__1::pair"* %379, %345
  br i1 %380, label %417, label %381

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %379, i64 0, i32 1
  %383 = load i32, i32* %382, align 8
  %384 = icmp sgt i32 %383, -1
  br i1 %384, label %385, label %417

385:                                              ; preds = %381
  %386 = sext i32 %383 to i64
  %387 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %12, align 8
  %388 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %387, i64 %386
  %389 = icmp eq %"struct.cc::EffectNode"* %388, null
  br i1 %389, label %417, label %390

390:                                              ; preds = %385
  br i1 %28, label %391, label %402

391:                                              ; preds = %390
  %392 = load i64, i64* %13, align 8
  %393 = and i64 %392, %25
  %394 = icmp ne i64 %393, 0
  %395 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %387, i64 %386, i32 16
  %396 = bitcast [3 x i8]* %395 to i24*
  %397 = zext i1 %394 to i24
  %398 = load i24, i24* %396, align 4
  %399 = shl nuw nsw i24 %397, 12
  %400 = and i24 %398, -4097
  %401 = or i24 %399, %400
  store i24 %401, i24* %396, align 4
  br label %402

402:                                              ; preds = %391, %390
  %403 = load i64, i64* %7, align 8
  %404 = and i64 %403, %25
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %417, label %406

406:                                              ; preds = %402
  %407 = load i64, i64* %14, align 8
  %408 = and i64 %407, %25
  %409 = icmp ne i64 %408, 0
  %410 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %387, i64 %386, i32 16
  %411 = bitcast [3 x i8]* %410 to i24*
  %412 = zext i1 %409 to i24
  %413 = load i24, i24* %411, align 4
  %414 = shl nuw nsw i24 %412, 9
  %415 = and i24 %413, -513
  %416 = or i24 %414, %415
  store i24 %416, i24* %411, align 4
  br label %417

417:                                              ; preds = %148, %238, %320, %402, %29, %381, %375, %299, %293, %217, %211, %127, %121, %71, %406, %385, %324, %303, %242, %221, %170, %131, %77
  %418 = phi i8 [ %24, %29 ], [ %24, %71 ], [ %24, %77 ], [ 1, %170 ], [ %24, %148 ], [ %24, %131 ], [ %24, %221 ], [ %24, %238 ], [ %24, %242 ], [ %24, %303 ], [ %24, %320 ], [ %24, %324 ], [ %24, %385 ], [ %24, %402 ], [ %24, %406 ], [ %24, %121 ], [ %24, %127 ], [ %24, %211 ], [ %24, %217 ], [ %24, %293 ], [ %24, %299 ], [ %24, %375 ], [ %24, %381 ]
  %419 = add nuw nsw i64 %23, 1
  %420 = icmp eq i64 %419, 9
  br i1 %420, label %19, label %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees28MaximumAnimationScaleChangedENS_9ElementIdEf(%"class.cc::PropertyTrees"* nocapture, i64, float) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 3
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %3
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  br label %33

33:                                               ; preds = %31, %3
  %34 = phi i64 [ %32, %31 ], [ %11, %3 ]
  %35 = phi %"struct.std::__1::pair"* [ %29, %31 ], [ %7, %3 ]
  %36 = icmp eq %"struct.std::__1::pair"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair"*
  %47 = icmp eq %"struct.std::__1::pair"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"* %35
  %49 = icmp eq %"struct.std::__1::pair"* %48, %14
  br i1 %49, label %65, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %57 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 %55
  %59 = icmp eq %"struct.cc::TransformNode"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 %55, i32 13
  store float %2, float* %61, align 8
  %62 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %62, align 8
  br label %65

65:                                               ; preds = %50, %44, %54, %60
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees20UpdateChangeTrackingEv(%"class.cc::PropertyTrees"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 288
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %23, label %12

12:                                               ; preds = %48, %1
  %13 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.cc::TransformNode"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 224
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %58, label %57

23:                                               ; preds = %1, %48
  %24 = phi i64 [ %49, %48 ], [ %7, %1 ]
  %25 = phi i64 [ %50, %48 ], [ %5, %1 ]
  %26 = phi i64 [ %51, %48 ], [ 1, %1 ]
  %27 = inttoptr i64 %24 to %"struct.cc::EffectNode"*
  %28 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %27, i64 %26, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %31, label %48

31:                                               ; preds = %23
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %27, i64 %32
  %34 = icmp eq %"struct.cc::EffectNode"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %27, i64 %32, i32 16
  %37 = bitcast [3 x i8]* %36 to i24*
  %38 = load i24, i24* %37, align 4
  %39 = trunc i24 %38 to i16
  %40 = icmp slt i16 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %27, i64 %26, i32 16
  %43 = bitcast [3 x i8]* %42 to i24*
  %44 = load i24, i24* %43, align 4
  %45 = or i24 %44, 32768
  store i24 %45, i24* %43, align 4
  %46 = load i64, i64* %4, align 8
  %47 = load i64, i64* %6, align 8
  br label %48

48:                                               ; preds = %23, %31, %35, %41
  %49 = phi i64 [ %24, %23 ], [ %24, %31 ], [ %24, %35 ], [ %47, %41 ]
  %50 = phi i64 [ %25, %23 ], [ %25, %31 ], [ %25, %35 ], [ %46, %41 ]
  %51 = add nuw nsw i64 %26, 1
  %52 = sub i64 %50, %49
  %53 = sdiv exact i64 %52, 288
  %54 = shl i64 %53, 32
  %55 = ashr exact i64 %54, 32
  %56 = icmp slt i64 %51, %55
  br i1 %56, label %23, label %12

57:                                               ; preds = %81, %12
  ret void

58:                                               ; preds = %12, %81
  %59 = phi i64 [ %82, %81 ], [ %18, %12 ]
  %60 = phi i64 [ %83, %81 ], [ %16, %12 ]
  %61 = phi i64 [ %84, %81 ], [ 1, %12 ]
  %62 = inttoptr i64 %59 to %"struct.cc::TransformNode"*
  %63 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %62, i64 %61, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, -1
  %66 = sext i32 %64 to i64
  %67 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %62, i64 %66
  %68 = select i1 %65, %"struct.cc::TransformNode"* %67, %"struct.cc::TransformNode"* null
  %69 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %68, i64 0, i32 10
  %70 = bitcast i24* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 8192
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %62, i64 %61, i32 10
  %76 = bitcast i24* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, 8192
  store i32 %78, i32* %76, align 4
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %17, align 8
  br label %81

81:                                               ; preds = %58, %74
  %82 = phi i64 [ %59, %58 ], [ %80, %74 ]
  %83 = phi i64 [ %60, %58 ], [ %79, %74 ]
  %84 = add nuw nsw i64 %61, 1
  %85 = sub i64 %83, %82
  %86 = sdiv exact i64 %85, 224
  %87 = shl i64 %86, 32
  %88 = ashr exact i64 %87, 32
  %89 = icmp slt i64 %84, %88
  br i1 %89, label %58, label %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees20PushChangeTrackingToEPS0_(%"class.cc::PropertyTrees"* nocapture readonly, %"class.cc::PropertyTrees"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %5 = bitcast %"struct.cc::EffectNode"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.30"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 288
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br label %28

15:                                               ; preds = %54, %2
  %16 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.cc::TransformNode"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 224
  %24 = trunc i64 %23 to i32
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %63

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br label %67

28:                                               ; preds = %13, %54
  %29 = phi i64 [ %8, %13 ], [ %55, %54 ]
  %30 = phi i64 [ %6, %13 ], [ %56, %54 ]
  %31 = phi i64 [ 1, %13 ], [ %57, %54 ]
  %32 = inttoptr i64 %29 to %"struct.cc::EffectNode"*
  %33 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %32, i64 %31, i32 16
  %34 = bitcast [3 x i8]* %33 to i24*
  %35 = load i24, i24* %34, align 4
  %36 = trunc i24 %35 to i16
  %37 = icmp slt i16 %36, 0
  br i1 %37, label %38, label %54

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %32, i64 %31, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = sext i32 %40 to i64
  %44 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %14, align 8
  %45 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %44, i64 %43
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi %"struct.cc::EffectNode"* [ %45, %42 ], [ null, %38 ]
  %48 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %47, i64 0, i32 16
  %49 = bitcast [3 x i8]* %48 to i24*
  %50 = load i24, i24* %49, align 4
  %51 = or i24 %50, 32768
  store i24 %51, i24* %49, align 4
  %52 = load i64, i64* %5, align 8
  %53 = load i64, i64* %7, align 8
  br label %54

54:                                               ; preds = %46, %28
  %55 = phi i64 [ %53, %46 ], [ %29, %28 ]
  %56 = phi i64 [ %52, %46 ], [ %30, %28 ]
  %57 = add nuw nsw i64 %31, 1
  %58 = sub i64 %56, %55
  %59 = sdiv exact i64 %58, 288
  %60 = shl i64 %59, 32
  %61 = ashr exact i64 %60, 32
  %62 = icmp slt i64 %57, %61
  br i1 %62, label %28, label %15

63:                                               ; preds = %93, %15
  tail call void @_ZN2cc13PropertyTrees20UpdateChangeTrackingEv(%"class.cc::PropertyTrees"* %1)
  %64 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 9
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 9
  store i8 %65, i8* %66, align 2
  ret void

67:                                               ; preds = %26, %93
  %68 = phi i64 [ %21, %26 ], [ %94, %93 ]
  %69 = phi i64 [ %19, %26 ], [ %95, %93 ]
  %70 = phi i64 [ 1, %26 ], [ %96, %93 ]
  %71 = inttoptr i64 %68 to %"struct.cc::TransformNode"*
  %72 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %71, i64 %70, i32 10
  %73 = bitcast i24* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 8192
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %71, i64 %70, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = sext i32 %79 to i64
  %83 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %27, align 8
  %84 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %83, i64 %82
  br label %85

85:                                               ; preds = %77, %81
  %86 = phi %"struct.cc::TransformNode"* [ %84, %81 ], [ null, %77 ]
  %87 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %86, i64 0, i32 10
  %88 = bitcast i24* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = or i32 %89, 8192
  store i32 %90, i32* %88, align 4
  %91 = load i64, i64* %18, align 8
  %92 = load i64, i64* %20, align 8
  br label %93

93:                                               ; preds = %67, %85
  %94 = phi i64 [ %68, %67 ], [ %92, %85 ]
  %95 = phi i64 [ %69, %67 ], [ %91, %85 ]
  %96 = add nuw nsw i64 %70, 1
  %97 = sub i64 %95, %94
  %98 = sdiv exact i64 %97, 224
  %99 = shl i64 %98, 32
  %100 = ashr exact i64 %99, 32
  %101 = icmp slt i64 %96, %100
  br i1 %101, label %67, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees22ResetAllChangeTrackingEv(%"class.cc::PropertyTrees"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 224
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %1, %12
  %13 = phi i64 [ %22, %12 ], [ %7, %1 ]
  %14 = phi i64 [ %20, %12 ], [ 1, %1 ]
  %15 = inttoptr i64 %13 to %"struct.cc::TransformNode"*
  %16 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %15, i64 %14, i32 10
  %17 = bitcast i24* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -8193
  store i32 %19, i32* %17, align 4
  %20 = add nuw nsw i64 %14, 1
  %21 = load i64, i64* %4, align 8
  %22 = load i64, i64* %6, align 8
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 224
  %25 = shl i64 %24, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp slt i64 %20, %26
  br i1 %27, label %12, label %28

28:                                               ; preds = %12, %1
  %29 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %31 = bitcast %"struct.cc::EffectNode"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.30"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = sdiv exact i64 %35, 288
  %37 = trunc i64 %36 to i32
  %38 = icmp sgt i32 %37, 1
  br i1 %38, label %39, label %63

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  br label %41

41:                                               ; preds = %54, %39
  %42 = phi i64 [ %34, %39 ], [ %57, %54 ]
  %43 = phi i64 [ 1, %39 ], [ %55, %54 ]
  %44 = inttoptr i64 %42 to %"struct.cc::EffectNode"*
  %45 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %44, i64 %43, i32 16
  %46 = bitcast [3 x i8]* %45 to i24*
  %47 = load i24, i24* %46, align 4
  %48 = and i24 %47, -32769
  store i24 %48, i24* %46, align 4
  %49 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %40, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %49, i64 %43, i32 0, i32 0, i32 0
  %51 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %50, align 8
  %52 = icmp eq %"class.cc::RenderSurfaceImpl"* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %41
  tail call void @_ZN2cc17RenderSurfaceImpl25ResetPropertyChangedFlagsEv(%"class.cc::RenderSurfaceImpl"* nonnull %51) #18
  br label %54

54:                                               ; preds = %53, %41
  %55 = add nuw nsw i64 %43, 1
  %56 = load i64, i64* %31, align 8
  %57 = load i64, i64* %33, align 8
  %58 = sub i64 %56, %57
  %59 = sdiv exact i64 %58, 288
  %60 = shl i64 %59, 32
  %61 = ashr exact i64 %60, 32
  %62 = icmp slt i64 %55, %61
  br i1 %62, label %41, label %63

63:                                               ; preds = %54, %28
  %64 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 8
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 9
  store i8 0, i8* %65, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::trace_event::TracedValue"* @_ZNK2cc13PropertyTrees13AsTracedValueEv(%"class.cc::PropertyTrees"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #20
  %3 = bitcast i8* %2 to %"class.base::trace_event::TracedValue"*
  tail call void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"* nonnull %3, i64 0) #18
  tail call void @_ZNK2cc13PropertyTrees11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTrees"* %0, %"class.base::trace_event::TracedValue"* nonnull %3)
  ret %"class.base::trace_event::TracedValue"* %3
}

declare void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc13PropertyTrees11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTrees"* nocapture readonly, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 %4) #18
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #18
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %7, align 8
  %9 = icmp eq %"struct.cc::TransformNode"* %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"struct.cc::TransformNode"* [ %12, %10 ], [ %6, %2 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc13TransformNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::TransformNode"* %11, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %12 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %11, i64 1
  %13 = icmp eq %"struct.cc::TransformNode"* %12, %8
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %2
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0)) #18
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %15 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %16 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %15, align 8
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %18 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %17, align 8
  %19 = icmp eq %"struct.cc::EffectNode"* %16, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %14, %20
  %21 = phi %"struct.cc::EffectNode"* [ %22, %20 ], [ %16, %14 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc10EffectNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::EffectNode"* %21, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %22 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 1
  %23 = icmp eq %"struct.cc::EffectNode"* %22, %18
  br i1 %23, label %24, label %20

24:                                               ; preds = %20, %14
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #18
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %25 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %26 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %25, align 8
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %28 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %27, align 8
  %29 = icmp eq %"struct.cc::ClipNode"* %26, %28
  br i1 %29, label %34, label %30

30:                                               ; preds = %24, %30
  %31 = phi %"struct.cc::ClipNode"* [ %32, %30 ], [ %26, %24 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc8ClipNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ClipNode"* %31, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %32 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %31, i64 1
  %33 = icmp eq %"struct.cc::ClipNode"* %32, %28
  br i1 %33, label %34, label %30

34:                                               ; preds = %30, %24
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #18
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #18
  %35 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %36 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 1
  %38 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %37, align 8
  %39 = icmp eq %"struct.cc::ScrollNode"* %36, %38
  br i1 %39, label %44, label %40

40:                                               ; preds = %34, %40
  %41 = phi %"struct.cc::ScrollNode"* [ %42, %40 ], [ %36, %34 ]
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZNK2cc10ScrollNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ScrollNode"* %41, %"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  %42 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %41, i64 1
  %43 = icmp eq %"struct.cc::ScrollNode"* %42, %38
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %34
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #18
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #18
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc13PropertyTrees8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::PropertyTrees"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::TracedValueJSON", align 8
  %4 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0
  %7 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"* nonnull %6, i64 0, i1 zeroext true) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event15TracedValueJSONE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  call void @_ZNK2cc13PropertyTrees11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PropertyTrees"* %1, %"class.base::trace_event::TracedValue"* nonnull %6)
  call void @_ZNK4base11trace_event15TracedValueJSON15ToFormattedJSONEv(%"class.std::__1::basic_string"* sret %0, %"class.base::trace_event::TracedValueJSON"* nonnull %3) #18
  call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  ret void
}

declare void @_ZNK4base11trace_event15TracedValueJSON15ToFormattedJSONEv(%"class.std::__1::basic_string"* sret, %"class.base::trace_event::TracedValueJSON"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc13PropertyTrees28AnimationScaleCacheIsInvalidEi(%"class.cc::PropertyTrees"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %5 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %4, align 8
  %6 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %5, i64 %3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN2cc13PropertyTrees29MaximumAnimationToScreenScaleEi(%"class.cc::PropertyTrees"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(12) %"struct.cc::AnimationScaleData"* @_ZN2cc13PropertyTrees21GetAnimationScaleDataEi(%"class.cc::PropertyTrees"* %0, i32 %1)
  %4 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %3, i64 0, i32 1
  %5 = load float, float* %4, align 4
  ret float %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(12) %"struct.cc::AnimationScaleData"* @_ZN2cc13PropertyTrees21GetAnimationScaleDataEi(%"class.cc::PropertyTrees"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %7 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %7, i64 %5
  %9 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %120, label %14

14:                                               ; preds = %2
  store i32 %12, i32* %9, align 4
  %15 = icmp sgt i32 %1, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %18 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %17, align 8
  %19 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %18, i64 %5
  br label %20

20:                                               ; preds = %14, %16
  %21 = phi %"struct.cc::TransformNode"* [ %19, %16 ], [ null, %14 ]
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %25, label %38

25:                                               ; preds = %20
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %28 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %27, align 8
  %29 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %28, i64 %26
  %30 = icmp eq %"struct.cc::TransformNode"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %29, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = tail call dereferenceable(12) %"struct.cc::AnimationScaleData"* @_ZN2cc13PropertyTrees21GetAnimationScaleDataEi(%"class.cc::PropertyTrees"* %0, i32 %33)
  %35 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %34, i64 0, i32 2
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp ne i8 %36, 0
  br label %38

38:                                               ; preds = %25, %20, %31
  %39 = phi %"struct.cc::AnimationScaleData"* [ %34, %31 ], [ null, %25 ], [ null, %20 ]
  %40 = phi i1 [ true, %31 ], [ false, %25 ], [ false, %20 ]
  %41 = phi i1 [ %37, %31 ], [ false, %25 ], [ false, %20 ]
  %42 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 10
  %43 = bitcast i24* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 13
  %49 = load float, float* %48, align 8
  %50 = fcmp une float %49, 1.000000e+00
  br label %51

51:                                               ; preds = %38, %47
  %52 = phi i1 [ false, %38 ], [ %50, %47 ]
  %53 = or i1 %41, %52
  %54 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %7, i64 %5, i32 2
  %55 = zext i1 %53 to i8
  store i8 %55, i8* %54, align 4
  br i1 %40, label %56, label %60

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %39, i64 0, i32 3
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %73

60:                                               ; preds = %56, %51
  %61 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 7, i32 0, i32 1
  %62 = load i8, i8* %61, align 4
  %63 = and i8 %62, 8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = load i32, i32* %43, align 4
  %67 = and i32 %66, 16
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 13
  %71 = load float, float* %70, align 8
  %72 = fcmp oeq float %71, 0.000000e+00
  br label %75

73:                                               ; preds = %60, %56
  %74 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %7, i64 %5, i32 3
  store i8 1, i8* %74, align 1
  br label %113

75:                                               ; preds = %65, %69
  %76 = phi i1 [ false, %65 ], [ %72, %69 ]
  %77 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %7, i64 %5, i32 3
  %78 = zext i1 %76 to i8
  store i8 %78, i8* %77, align 1
  %79 = and i1 %41, %52
  %80 = or i1 %79, %76
  br i1 %80, label %113, label %81

81:                                               ; preds = %75
  %82 = load i32, i32* %43, align 4
  %83 = and i32 %82, 64
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %100

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %87 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %86, align 8
  %88 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %87, i64 %5, i32 1
  %89 = tail call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68) %88, float 0.000000e+00) #18
  %90 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90)
  %91 = extractelement <2 x float> %89, i32 0
  store float %91, float* %3, align 4
  %92 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92)
  %93 = extractelement <2 x float> %89, i32 1
  store float %93, float* %4, align 4
  %94 = fcmp olt float %91, %93
  %95 = select i1 %94, float* %4, float* %3
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %7, i64 %5, i32 1
  %99 = bitcast float* %98 to i32*
  store i32 %97, i32* %99, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90)
  br label %120

100:                                              ; preds = %81
  %101 = and i32 %82, 16
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 4
  %105 = tail call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68) %104, float 1.000000e+00) #18
  %106 = extractelement <2 x float> %105, i32 0
  %107 = extractelement <2 x float> %105, i32 1
  %108 = fcmp olt float %106, %107
  %109 = select i1 %108, float %107, float %106
  br label %113

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 13
  %112 = load float, float* %111, align 8
  br label %113

113:                                              ; preds = %73, %110, %103, %75
  %114 = phi float [ 1.000000e+00, %75 ], [ %112, %110 ], [ %109, %103 ], [ 1.000000e+00, %73 ]
  %115 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %7, i64 %5, i32 1
  store float %114, float* %115, align 4
  br i1 %40, label %116, label %120

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %39, i64 0, i32 1
  %118 = load float, float* %117, align 4
  %119 = fmul float %114, %118
  store float %119, float* %115, align 4
  br label %120

120:                                              ; preds = %85, %116, %113, %2
  ret %"struct.cc::AnimationScaleData"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc13PropertyTrees31AnimationAffectedByInvalidScaleEi(%"class.cc::PropertyTrees"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(12) %"struct.cc::AnimationScaleData"* @_ZN2cc13PropertyTrees21GetAnimationScaleDataEi(%"class.cc::PropertyTrees"* %0, i32 %1)
  %4 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %3, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc13PropertyTrees42SetMaximumAnimationToScreenScaleForTestingEifb(%"class.cc::PropertyTrees"* nocapture readonly, i32, float, i1 zeroext) local_unnamed_addr #5 align 2 {
  %5 = zext i1 %3 to i8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %8, i64 %6, i32 1
  store float %2, float* %9, align 4
  %10 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %8, i64 %6, i32 3
  store i8 %5, i8* %10, align 1
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %8, i64 %6, i32 0
  store i32 %12, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(140) %"struct.cc::DrawTransforms"* @_ZNK2cc13PropertyTrees17GetDrawTransformsEii(%"class.cc::PropertyTrees"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca [4 x [4 x float]], align 4
  %6 = alloca [3 x i8], align 1
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = icmp sgt i32 %2, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %12 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %12, i64 %10
  br label %14

14:                                               ; preds = %3, %9
  %15 = phi %"struct.cc::EffectNode"* [ %13, %9 ], [ null, %3 ]
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 18
  %17 = load i32, i32* %16, align 8
  %18 = tail call dereferenceable(148) %"struct.cc::DrawTransformData"* @_ZNK2cc13PropertyTrees32FetchDrawTransformsDataFromCacheEii(%"class.cc::PropertyTrees"* %0, i32 %1, i32 %17)
  %19 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %84, label %24

24:                                               ; preds = %14
  %25 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %25) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %26 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %26, align 4
  %27 = bitcast [4 x [4 x float]]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27)
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %28)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds (%"class.gfx::Transform", %"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform, i64 0, i32 0, i32 2, i64 0), i64 3, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  %29 = icmp eq i32 %17, %1
  br i1 %29, label %30, label %37

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 13, i32 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 13, i32 1
  %34 = load float, float* %33, align 4
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %4, float %32, float %34) #18
  %35 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 2
  store i8 1, i8* %35, align 2
  %36 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 1
  store i8 0, i8* %36, align 1
  br label %72

37:                                               ; preds = %24
  %38 = icmp slt i32 %17, %1
  br i1 %38, label %39, label %50

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3
  call void @_ZNK2cc13TransformTree24CombineTransformsBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* %40, i32 %1, i32 %17, %"class.gfx::Transform"* nonnull %4)
  %41 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 13, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 13, i32 1
  %45 = load float, float* %44, align 4
  %46 = call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix449postScaleEfff(%class.SkMatrix44* nonnull %41, float %43, float %45, float 1.000000e+00) #18
  %47 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 2
  store i8 1, i8* %47, align 2
  %48 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 1
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 0
  store i8 1, i8* %49, align 4
  br label %72

50:                                               ; preds = %37
  %51 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %51) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %52 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3
  call void @_ZNK2cc13TransformTree24CombineTransformsBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* %53, i32 %17, i32 %1, %"class.gfx::Transform"* nonnull %7)
  %54 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 13, i32 0
  %55 = load float, float* %54, align 4
  %56 = fcmp une float %55, 0.000000e+00
  br i1 %56, label %57, label %64

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 0, i32 13, i32 1
  %59 = load float, float* %58, align 4
  %60 = fcmp une float %59, 0.000000e+00
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = fdiv float 1.000000e+00, %55
  %63 = fdiv float 1.000000e+00, %59
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %7, float %62, float %63) #18
  br label %64

64:                                               ; preds = %61, %57, %50
  %65 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Transform"* nonnull %4) #18
  %66 = zext i1 %65 to i8
  %67 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 0
  store i8 %66, i8* %67, align 4
  %68 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 2
  store i8 %66, i8* %68, align 2
  %69 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 1
  store i8 1, i8* %69, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* nonnull align 4 %51, i64 64, i1 false)
  %70 = load i8, i8* %52, align 4
  %71 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %71, i64 3, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %51) #18
  br label %74

72:                                               ; preds = %39, %30
  %73 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 2
  store i8 1, i8* %73, align 2
  br label %74

74:                                               ; preds = %64, %72
  %75 = phi i8 [ 0, %72 ], [ %70, %64 ]
  %76 = load i32, i32* %21, align 8
  store i32 %76, i32* %19, align 4
  %77 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 1
  store i32 %17, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 4
  %79 = bitcast %"class.gfx::Transform"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 4 %27, i64 64, i1 false)
  %80 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 4, i32 0, i32 1
  store i8 %75, i8* %80, align 4
  %81 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 4, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* nonnull align 1 %28, i64 3, i1 false)
  %82 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2, i32 5
  %83 = bitcast %"class.gfx::Transform"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* nonnull align 4 %25, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %25) #18
  br label %84

84:                                               ; preds = %14, %74
  %85 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %18, i64 0, i32 2
  ret %"struct.cc::DrawTransforms"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc13PropertyTrees13GetFromTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* nocapture readonly, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %1, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %4, %6
  %12 = phi %"struct.cc::TransformNode"* [ %10, %6 ], [ null, %4 ]
  %13 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %12, i64 0, i32 10
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 8
  %17 = icmp ne i32 %16, 0
  %18 = icmp eq i32 %2, 1
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %25

20:                                               ; preds = %11
  %21 = sext i32 %1 to i64
  %22 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %23 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %22, align 8
  %24 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %23, i64 %21, i32 0
  br label %41

25:                                               ; preds = %11
  %26 = tail call dereferenceable(140) %"struct.cc::DrawTransforms"* @_ZNK2cc13PropertyTrees17GetDrawTransformsEii(%"class.cc::PropertyTrees"* %0, i32 %1, i32 %2)
  %27 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %26, i64 0, i32 1
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %26, i64 0, i32 4
  br label %41

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %26, i64 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %26, i64 0, i32 5
  %38 = tail call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %37, %"class.gfx::Transform"* %3) #18
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %33, align 4
  store i8 %39, i8* %27, align 1
  %40 = getelementptr inbounds %"struct.cc::DrawTransforms", %"struct.cc::DrawTransforms"* %26, i64 0, i32 4
  br label %41

41:                                               ; preds = %20, %36, %30
  %42 = phi %"class.gfx::Transform"* [ %3, %30 ], [ %40, %36 ], [ %3, %20 ]
  %43 = phi %"class.gfx::Transform"* [ %31, %30 ], [ %3, %36 ], [ %24, %20 ]
  %44 = phi i1 [ true, %30 ], [ %38, %36 ], [ true, %20 ]
  %45 = bitcast %"class.gfx::Transform"* %42 to i8*
  %46 = bitcast %"class.gfx::Transform"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 68, i1 false)
  br label %47

47:                                               ; preds = %41, %32
  %48 = phi i1 [ false, %32 ], [ %44, %41 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(148) %"struct.cc::DrawTransformData"* @_ZNK2cc13PropertyTrees32FetchDrawTransformsDataFromCacheEii(%"class.cc::PropertyTrees"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [65 x i8], align 1
  %5 = alloca [67 x i8], align 1
  %6 = alloca [3 x i8], align 1
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 15, i32 2, i32 0, i32 0
  %9 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %9, i64 %7
  %11 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %9, i64 %7, i32 0, i32 1
  %14 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %13, align 8
  %15 = icmp eq %"struct.cc::DrawTransformData"* %12, %14
  %16 = ptrtoint %"struct.cc::DrawTransformData"* %14 to i64
  %17 = ptrtoint %"struct.cc::DrawTransformData"* %12 to i64
  br i1 %15, label %28, label %20

18:                                               ; preds = %20
  %19 = icmp eq %"struct.cc::DrawTransformData"* %27, %14
  br i1 %19, label %28, label %20

20:                                               ; preds = %3, %18
  %21 = phi %"struct.cc::DrawTransformData"* [ %27, %18 ], [ %12, %3 ]
  %22 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %2
  %25 = icmp eq i32 %23, -1
  %26 = or i1 %24, %25
  %27 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %21, i64 1
  br i1 %26, label %139, label %18

28:                                               ; preds = %18, %3
  %29 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %29)
  %30 = getelementptr inbounds [67 x i8], [67 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 67, i8* nonnull %30)
  %31 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %31)
  %32 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 0
  store i8 0, i8* %32, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %30, i8 0, i64 3, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %31, i8 0, i64 3, i1 false)
  %33 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i64 0, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  %34 = getelementptr inbounds [67 x i8], [67 x i8]* %5, i64 0, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  %35 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %9, i64 %7, i32 0, i32 2, i32 0, i32 0
  %36 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %35, align 8
  %37 = icmp ult %"struct.cc::DrawTransformData"* %14, %36
  %38 = ptrtoint %"struct.cc::DrawTransformData"* %36 to i64
  br i1 %37, label %39, label %55

39:                                               ; preds = %28
  %40 = bitcast %"struct.cc::DrawTransformData"* %14 to i64*
  store i64 -1, i64* %40, align 4
  %41 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 0
  store i8 1, i8* %41, align 4
  %42 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 4
  %45 = bitcast %"class.gfx::Transform"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 1 %33, i64 64, i1 false)
  %46 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 4, i32 0, i32 1
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 4, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* nonnull align 1 %30, i64 3, i1 false)
  %48 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 5
  %49 = bitcast %"class.gfx::Transform"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 1 %34, i64 64, i1 false)
  %50 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 5, i32 0, i32 1
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 0, i32 2, i32 5, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* nonnull align 1 %31, i64 3, i1 false)
  %52 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %14, i64 1
  %53 = ptrtoint %"struct.cc::DrawTransformData"* %52 to i64
  %54 = bitcast %"struct.cc::DrawTransformData"** %13 to i64*
  store i64 %53, i64* %54, align 8
  br label %132

55:                                               ; preds = %28
  %56 = bitcast %"struct.cc::DrawTransformData"** %13 to i64*
  %57 = bitcast %"class.std::__1::vector.175"* %10 to i64*
  %58 = sub i64 %16, %17
  %59 = sdiv exact i64 %58, 148
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 124640162660199673
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::vector.175"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #19
  unreachable

64:                                               ; preds = %55
  %65 = bitcast %"struct.cc::DrawTransformData"** %35 to i64*
  %66 = sub i64 %38, %17
  %67 = sdiv exact i64 %66, 148
  %68 = icmp ult i64 %67, 62320081330099836
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = shl nsw i64 %67, 1
  %71 = icmp ult i64 %70, %60
  %72 = select i1 %71, i64 %60, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %64
  %75 = phi i64 [ %72, %69 ], [ 124640162660199673, %64 ]
  %76 = mul i64 %75, 148
  %77 = tail call i8* @_Znwm(i64 %76) #20
  %78 = bitcast i8* %77 to %"struct.cc::DrawTransformData"*
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i64 [ %75, %74 ], [ 0, %69 ]
  %81 = phi %"struct.cc::DrawTransformData"* [ %78, %74 ], [ null, %69 ]
  %82 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59
  %83 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %80
  %84 = ptrtoint %"struct.cc::DrawTransformData"* %83 to i64
  %85 = bitcast %"struct.cc::DrawTransformData"* %82 to i64*
  store i64 -1, i64* %85, align 4
  %86 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 0
  store i8 1, i8* %86, align 4
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %86, i64 2
  store i8 0, i8* %88, align 2
  %89 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 4
  %90 = bitcast %"class.gfx::Transform"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 1 %33, i64 64, i1 false)
  %91 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 4, i32 0, i32 1
  store i8 0, i8* %91, align 4
  %92 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 4, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* nonnull align 1 %30, i64 3, i1 false)
  %93 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 5
  %94 = bitcast %"class.gfx::Transform"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 1 %34, i64 64, i1 false)
  %95 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 5, i32 0, i32 1
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %81, i64 %59, i32 2, i32 5, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* nonnull align 1 %31, i64 3, i1 false)
  %97 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %82, i64 1
  %98 = ptrtoint %"struct.cc::DrawTransformData"* %97 to i64
  %99 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %11, align 8
  %100 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %13, align 8
  %101 = icmp eq %"struct.cc::DrawTransformData"* %100, %99
  br i1 %101, label %102, label %104

102:                                              ; preds = %79
  %103 = ptrtoint %"struct.cc::DrawTransformData"* %99 to i64
  br label %125

104:                                              ; preds = %79, %104
  %105 = phi %"struct.cc::DrawTransformData"* [ %107, %104 ], [ %82, %79 ]
  %106 = phi %"struct.cc::DrawTransformData"* [ %108, %104 ], [ %100, %79 ]
  %107 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %105, i64 -1
  %108 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %106, i64 -1
  %109 = bitcast %"struct.cc::DrawTransformData"* %108 to i64*
  %110 = bitcast %"struct.cc::DrawTransformData"* %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %105, i64 -1, i32 2, i32 0
  %113 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %106, i64 -1, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 3, i1 false) #18
  %114 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %105, i64 -1, i32 2, i32 4
  %115 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %106, i64 -1, i32 2, i32 4
  %116 = bitcast %"class.gfx::Transform"* %114 to i8*
  %117 = bitcast %"class.gfx::Transform"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 68, i1 false) #18
  %118 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %105, i64 -1, i32 2, i32 5
  %119 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %106, i64 -1, i32 2, i32 5
  %120 = bitcast %"class.gfx::Transform"* %118 to i8*
  %121 = bitcast %"class.gfx::Transform"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 68, i1 false) #18
  %122 = icmp eq %"struct.cc::DrawTransformData"* %108, %99
  br i1 %122, label %123, label %104

123:                                              ; preds = %104
  %124 = load i64, i64* %57, align 8
  br label %125

125:                                              ; preds = %123, %102
  %126 = phi %"struct.cc::DrawTransformData"* [ %82, %102 ], [ %107, %123 ]
  %127 = phi i64 [ %103, %102 ], [ %124, %123 ]
  %128 = ptrtoint %"struct.cc::DrawTransformData"* %126 to i64
  store i64 %128, i64* %57, align 8
  store i64 %98, i64* %56, align 8
  store i64 %84, i64* %65, align 8
  %129 = icmp eq i64 %127, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %125
  %131 = inttoptr i64 %127 to i8*
  tail call void @_ZdlPv(i8* %131) #20
  br label %132

132:                                              ; preds = %130, %125, %39
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 67, i8* nonnull %30)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %31)
  %133 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %8, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %133, i64 %7, i32 0, i32 1
  %135 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %134, align 8
  %136 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %135, i64 -1
  %137 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %136, i64 0, i32 0
  store i32 -1, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %135, i64 -1, i32 1
  store i32 %2, i32* %138, align 4
  br label %139

139:                                              ; preds = %20, %132
  %140 = phi %"struct.cc::DrawTransformData"* [ %136, %132 ], [ %21, %20 ]
  ret %"struct.cc::DrawTransformData"* %140
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ClipRectData"* @_ZN2cc13PropertyTrees22FetchClipRectFromCacheEii(%"class.cc::PropertyTrees"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %1, -1
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %8, i64 %6
  br label %10

10:                                               ; preds = %3, %5
  %11 = phi %"struct.cc::ClipNode"* [ %9, %5 ], [ null, %3 ]
  %12 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %11, i64 0, i32 5, i32 0, i32 2
  %13 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %11, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %14 = bitcast %"struct.cc::ClipRectData"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.106"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  %19 = inttoptr i64 %17 to %"struct.cc::ClipRectData"*
  %20 = inttoptr i64 %15 to %"struct.cc::ClipRectData"*
  br i1 %18, label %35, label %21

21:                                               ; preds = %10
  %22 = sub i64 %15, %17
  %23 = sdiv exact i64 %22, 24
  br label %26

24:                                               ; preds = %26
  %25 = icmp ult i64 %34, %23
  br i1 %25, label %26, label %35

26:                                               ; preds = %21, %24
  %27 = phi i64 [ 0, %21 ], [ %34, %24 ]
  %28 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %19, i64 %27
  %29 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %2
  %32 = icmp eq i32 %30, -1
  %33 = or i1 %31, %32
  %34 = add nuw i64 %27, 1
  br i1 %33, label %52, label %24

35:                                               ; preds = %24, %10
  %36 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %11, i64 0, i32 5, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %37 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %36, align 8
  %38 = icmp ugt %"struct.cc::ClipRectData"* %37, %20
  br i1 %38, label %39, label %47

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %20, i64 0, i32 1, i32 0
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %20, i64 0, i32 0
  store i32 -1, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %20, i64 0, i32 1, i32 1
  %44 = bitcast %"class.gfx::RectF"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 16, i1 false) #18
  %45 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %20, i64 1
  %46 = ptrtoint %"struct.cc::ClipRectData"* %45 to i64
  store i64 %46, i64* %14, align 8
  br label %49

47:                                               ; preds = %35
  tail call void @_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.106"* %12) #18
  %48 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %13, align 8
  br label %49

49:                                               ; preds = %39, %47
  %50 = phi %"struct.cc::ClipRectData"* [ %45, %39 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %50, i64 -1
  br label %52

52:                                               ; preds = %26, %49
  %53 = phi %"struct.cc::ClipRectData"* [ %51, %49 ], [ %28, %26 ]
  ret %"struct.cc::ClipRectData"* %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc13PropertyTrees10HasElementENS_9ElementIdE(%"class.cc::PropertyTrees"* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %103, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair"*
  br i1 %12, label %30, label %14

14:                                               ; preds = %4
  %15 = ashr exact i64 %11, 4
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair"* [ %6, %14 ], [ %28, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16, %4
  %31 = phi %"struct.std::__1::pair"* [ %6, %4 ], [ %28, %16 ]
  %32 = icmp eq %"struct.std::__1::pair"* %31, %13
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %35, %1
  br i1 %36, label %37, label %103

37:                                               ; preds = %33, %30
  %38 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %38, align 8
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"struct.std::__1::pair"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, 0
  %46 = inttoptr i64 %42 to %"struct.std::__1::pair"*
  br i1 %45, label %63, label %47

47:                                               ; preds = %37
  %48 = ashr exact i64 %44, 4
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi %"struct.std::__1::pair"* [ %39, %47 ], [ %61, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %60, %49 ]
  %52 = lshr i64 %51, 1
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 %52
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, %1
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 1
  %58 = xor i64 %52, -1
  %59 = add i64 %51, %58
  %60 = select i1 %56, i64 %59, i64 %52
  %61 = select i1 %56, %"struct.std::__1::pair"* %57, %"struct.std::__1::pair"* %50
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %49

63:                                               ; preds = %49, %37
  %64 = phi %"struct.std::__1::pair"* [ %39, %37 ], [ %61, %49 ]
  %65 = icmp eq %"struct.std::__1::pair"* %64, %46
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ugt i64 %68, %1
  br i1 %69, label %70, label %103

70:                                               ; preds = %66, %63
  %71 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %71, align 8
  %73 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"struct.std::__1::pair"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  %77 = sub i64 %75, %76
  %78 = icmp eq i64 %77, 0
  %79 = inttoptr i64 %75 to %"struct.std::__1::pair"*
  br i1 %78, label %96, label %80

80:                                               ; preds = %70
  %81 = ashr exact i64 %77, 4
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi %"struct.std::__1::pair"* [ %72, %80 ], [ %94, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %93, %82 ]
  %85 = lshr i64 %84, 1
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %83, i64 %85
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 0, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %88, %1
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 1
  %91 = xor i64 %85, -1
  %92 = add i64 %84, %91
  %93 = select i1 %89, i64 %92, i64 %85
  %94 = select i1 %89, %"struct.std::__1::pair"* %90, %"struct.std::__1::pair"* %83
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %82

96:                                               ; preds = %82, %70
  %97 = phi %"struct.std::__1::pair"* [ %72, %70 ], [ %94, %82 ]
  %98 = icmp eq %"struct.std::__1::pair"* %97, %79
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = icmp ule i64 %101, %1
  br label %103

103:                                              ; preds = %66, %33, %2, %99, %96
  %104 = phi i1 [ false, %2 ], [ true, %66 ], [ true, %33 ], [ false, %96 ], [ %102, %99 ]
  ret i1 %104
}

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix449postScaleEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii(%"class.gfx::Transform"* noalias nocapture sret, %"class.cc::PropertyTrees"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %9 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %9, align 4
  br label %37

10:                                               ; preds = %4
  %11 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii.screen_space_transform to i8*), i64 68, i1 false)
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 5, i32 0, i32 0
  %14 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %13, align 8
  %15 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %14, i64 %12, i32 1
  %16 = bitcast %"class.gfx::Transform"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %16, i64 68, i1 false) #18
  %17 = icmp sgt i32 %3, -1
  br i1 %17, label %18, label %23

18:                                               ; preds = %10
  %19 = sext i32 %3 to i64
  %20 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %21 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %20, align 8
  %22 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 %19
  br label %23

23:                                               ; preds = %10, %18
  %24 = phi %"struct.cc::EffectNode"* [ %22, %18 ], [ null, %10 ]
  %25 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %24, i64 0, i32 13, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp une float %26, 0.000000e+00
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %24, i64 0, i32 13, i32 1
  %30 = load float, float* %29, align 4
  %31 = fcmp une float %30, 0.000000e+00
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = fdiv float 1.000000e+00, %26
  %34 = fdiv float 1.000000e+00, %30
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %5, float %33, float %34) #18
  br label %35

35:                                               ; preds = %32, %28, %23
  %36 = bitcast %"class.gfx::Transform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* nonnull align 4 %11, i64 68, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11) #18
  br label %37

37:                                               ; preds = %35, %7
  ret void
}

declare zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #2

declare zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44*, %class.SkMatrix44*) local_unnamed_addr #2

declare void @_ZN2cc24StickyPositionConstraintC1Ev(%"struct.cc::StickyPositionConstraint"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #9

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc8ClipTreeD0Ev(%"class.cc::ClipTree"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12PropertyTreeINS_8ClipNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %4, align 8
  %6 = icmp eq %"struct.cc::ClipNode"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.cc::ClipNode"* %5 to i8*
  %9 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %9, align 8
  %11 = icmp eq %"struct.cc::ClipNode"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.cc::ClipNode"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %13, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %14) #18
  %15 = icmp eq %"struct.cc::ClipNode"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.102"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.cc::ClipNode"* %5, %"struct.cc::ClipNode"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %"class.cc::ClipTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.1"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %2
  %26 = icmp eq %"struct.std::__1::pair"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 -1, i32 0, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !16

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0, i32 0
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0, i32 0
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0, i32 0
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0, i32 0
  %77 = load i64, i64* %75, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #18
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #20
  %107 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #18
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #19
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #19
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #20
  %127 = bitcast i8* %126 to %"struct.std::__1::pair"*
  %128 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %124
  store %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #18
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #16

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #17

declare void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"*, i64, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event15TracedValueJSOND0Ev(%"class.base::trace_event::TracedValueJSON"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* %2) #18
  %3 = bitcast %"class.base::trace_event::TracedValueJSON"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

declare void @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.15"*, %"struct.cc::TransformCachedNodeData"* dereferenceable(140)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::TransformCachedNodeData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 140
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 131762457669353940
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::TransformCachedNodeData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 140
  %20 = icmp ult i64 %19, 65881228834676970
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 131762457669353940, %14 ]
  %28 = mul i64 %27, 140
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::TransformCachedNodeData"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::TransformCachedNodeData"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::TransformCachedNodeData"* %35 to i64
  tail call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %34, %"struct.cc::TransformCachedNodeData"* dereferenceable(140) %1) #18
  %37 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %34, i64 1
  %38 = ptrtoint %"struct.cc::TransformCachedNodeData"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %39, align 8
  %41 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %3, align 8
  %42 = icmp eq %"struct.cc::TransformCachedNodeData"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::TransformCachedNodeData"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::TransformCachedNodeData"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::TransformCachedNodeData"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %47, i64 -1
  tail call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %48, %"struct.cc::TransformCachedNodeData"* dereferenceable(140) %49) #18
  %50 = icmp eq %"struct.cc::TransformCachedNodeData"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::TransformCachedNodeData"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::TransformCachedNodeData"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::TransformCachedNodeData"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::TransformCachedNodeData"*
  %60 = icmp eq %"struct.cc::TransformCachedNodeData"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::TransformCachedNodeData"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %62, i64 -1
  tail call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* %63) #18
  %64 = icmp eq %"struct.cc::TransformCachedNodeData"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"* dereferenceable(140)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.8"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #18
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector.8"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #18
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.8"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #18
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc23TransformCachedNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.15"*, %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::TransformCachedNodeData"* %2 to i64
  %5 = ptrtoint %"struct.cc::TransformCachedNodeData"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 140
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::TransformCachedNodeData"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 140
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::TransformCachedNodeData"*
  br i1 %15, label %58, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::TransformCachedNodeData"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 140
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::TransformCachedNodeData"* %24, %"struct.cc::TransformCachedNodeData"* %2
  %26 = ptrtoint %"struct.cc::TransformCachedNodeData"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 140
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.cc::TransformCachedNodeData"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %17, %30
  %34 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %16, i64 %28
  br i1 %23, label %35, label %50

35:                                               ; preds = %33
  %36 = load i64, i64* %19, align 8
  %37 = icmp eq %"struct.cc::TransformCachedNodeData"* %25, %2
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"struct.cc::TransformCachedNodeData"*
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"struct.cc::TransformCachedNodeData"* [ %44, %40 ], [ %39, %38 ]
  %42 = phi %"struct.cc::TransformCachedNodeData"* [ %43, %40 ], [ %24, %38 ]
  tail call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %41, %"struct.cc::TransformCachedNodeData"* dereferenceable(140) %42) #18
  %43 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %42, i64 1
  %44 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %41, i64 1
  %45 = icmp eq %"struct.cc::TransformCachedNodeData"* %43, %2
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %"struct.cc::TransformCachedNodeData"* %44 to i64
  br label %48

48:                                               ; preds = %35, %46
  %49 = phi i64 [ %36, %35 ], [ %47, %46 ]
  store i64 %49, i64* %19, align 8
  br label %109

50:                                               ; preds = %33
  %51 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %18, align 8
  %52 = icmp eq %"struct.cc::TransformCachedNodeData"* %51, %34
  br i1 %52, label %57, label %53

53:                                               ; preds = %50, %53
  %54 = phi %"struct.cc::TransformCachedNodeData"* [ %55, %53 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %54, i64 -1
  tail call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* %55) #18
  %56 = icmp eq %"struct.cc::TransformCachedNodeData"* %55, %34
  br i1 %56, label %57, label %53

57:                                               ; preds = %53, %50
  store %"struct.cc::TransformCachedNodeData"* %34, %"struct.cc::TransformCachedNodeData"** %18, align 8
  br label %109

58:                                               ; preds = %3
  %59 = icmp eq i64 %12, 0
  br i1 %59, label %75, label %60

60:                                               ; preds = %58
  %61 = inttoptr i64 %12 to i8*
  %62 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %63 = load %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"** %62, align 8
  %64 = icmp eq %"struct.cc::TransformCachedNodeData"* %63, %16
  br i1 %64, label %72, label %65

65:                                               ; preds = %60, %65
  %66 = phi %"struct.cc::TransformCachedNodeData"* [ %67, %65 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %66, i64 -1
  tail call void @_ZN2cc23TransformCachedNodeDataD1Ev(%"struct.cc::TransformCachedNodeData"* %67) #18
  %68 = icmp eq %"struct.cc::TransformCachedNodeData"* %67, %16
  br i1 %68, label %69, label %65

69:                                               ; preds = %65
  %70 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %60
  %73 = phi i8* [ %71, %69 ], [ %61, %60 ]
  store %"struct.cc::TransformCachedNodeData"* %16, %"struct.cc::TransformCachedNodeData"** %62, align 8
  tail call void @_ZdlPv(i8* %73) #20
  %74 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #18
  br label %75

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %10, %58 ], [ 0, %72 ]
  %77 = icmp ugt i64 %7, 131762457669353940
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #19
  unreachable

80:                                               ; preds = %75
  %81 = sdiv exact i64 %76, 140
  %82 = icmp ult i64 %81, 65881228834676970
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = shl nsw i64 %81, 1
  %85 = icmp ult i64 %84, %7
  %86 = select i1 %85, i64 %7, i64 %84
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64 [ %86, %83 ], [ 131762457669353940, %80 ]
  %89 = mul i64 %88, 140
  %90 = tail call i8* @_Znwm(i64 %89) #20
  %91 = bitcast i8* %90 to %"struct.cc::TransformCachedNodeData"*
  %92 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %93 = bitcast %"struct.cc::TransformCachedNodeData"** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %91, i64 %88
  store %"struct.cc::TransformCachedNodeData"* %95, %"struct.cc::TransformCachedNodeData"** %8, align 8
  %96 = bitcast %"struct.cc::TransformCachedNodeData"** %92 to i64*
  %97 = ptrtoint i8* %90 to i64
  %98 = icmp eq %"struct.cc::TransformCachedNodeData"* %1, %2
  br i1 %98, label %107, label %99

99:                                               ; preds = %87, %99
  %100 = phi %"struct.cc::TransformCachedNodeData"* [ %103, %99 ], [ %91, %87 ]
  %101 = phi %"struct.cc::TransformCachedNodeData"* [ %102, %99 ], [ %1, %87 ]
  tail call void @_ZN2cc23TransformCachedNodeDataC1ERKS0_(%"struct.cc::TransformCachedNodeData"* %100, %"struct.cc::TransformCachedNodeData"* dereferenceable(140) %101) #18
  %102 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %101, i64 1
  %103 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %100, i64 1
  %104 = icmp eq %"struct.cc::TransformCachedNodeData"* %102, %2
  br i1 %104, label %105, label %99

105:                                              ; preds = %99
  %106 = ptrtoint %"struct.cc::TransformCachedNodeData"* %103 to i64
  br label %107

107:                                              ; preds = %87, %105
  %108 = phi i64 [ %97, %87 ], [ %106, %105 ]
  store i64 %108, i64* %96, align 8
  br label %109

109:                                              ; preds = %48, %57, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"*, %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::StickyPositionNodeData"* %2 to i64
  %5 = ptrtoint %"struct.cc::StickyPositionNodeData"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 120
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::StickyPositionNodeData"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 120
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::StickyPositionNodeData"*
  br i1 %15, label %60, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::StickyPositionNodeData"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 120
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::StickyPositionNodeData"* %24, %"struct.cc::StickyPositionNodeData"* %2
  %26 = ptrtoint %"struct.cc::StickyPositionNodeData"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 120
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.cc::StickyPositionNodeData"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %58

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.cc::StickyPositionNodeData"* %25, %2
  br i1 %36, label %56, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to %"struct.cc::StickyPositionNodeData"*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.cc::StickyPositionNodeData"* [ %52, %39 ], [ %38, %37 ]
  %41 = phi %"struct.cc::StickyPositionNodeData"* [ %51, %39 ], [ %24, %37 ]
  %42 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %41, i64 0, i32 1
  tail call void @_ZN2cc24StickyPositionConstraintC1ERKS0_(%"struct.cc::StickyPositionConstraint"* %45, %"struct.cc::StickyPositionConstraint"* dereferenceable(88) %46) #18
  %47 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %40, i64 0, i32 2
  %48 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %41, i64 0, i32 2
  %49 = bitcast i32* %47 to i8*
  %50 = bitcast i32* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #18
  %51 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %41, i64 1
  %52 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %40, i64 1
  %53 = icmp eq %"struct.cc::StickyPositionNodeData"* %51, %2
  br i1 %53, label %54, label %39

54:                                               ; preds = %39
  %55 = ptrtoint %"struct.cc::StickyPositionNodeData"* %52 to i64
  br label %56

56:                                               ; preds = %34, %54
  %57 = phi i64 [ %35, %34 ], [ %55, %54 ]
  store i64 %57, i64* %19, align 8
  br label %110

58:                                               ; preds = %33
  %59 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %16, i64 %28
  store %"struct.cc::StickyPositionNodeData"* %59, %"struct.cc::StickyPositionNodeData"** %18, align 8
  br label %110

60:                                               ; preds = %3
  %61 = icmp eq i64 %12, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %64 = bitcast %"struct.cc::StickyPositionNodeData"** %63 to i64*
  store i64 %12, i64* %64, align 8
  %65 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %65) #20
  %66 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #18
  br label %67

67:                                               ; preds = %60, %62
  %68 = phi i64 [ %10, %60 ], [ 0, %62 ]
  %69 = icmp ugt i64 %7, 153722867280912930
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #19
  unreachable

72:                                               ; preds = %67
  %73 = sdiv exact i64 %68, 120
  %74 = icmp ult i64 %73, 76861433640456465
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = shl nsw i64 %73, 1
  %77 = icmp ult i64 %76, %7
  %78 = select i1 %77, i64 %7, i64 %76
  br label %79

79:                                               ; preds = %75, %72
  %80 = phi i64 [ %78, %75 ], [ 153722867280912930, %72 ]
  %81 = mul i64 %80, 120
  %82 = tail call i8* @_Znwm(i64 %81) #20
  %83 = bitcast i8* %82 to %"struct.cc::StickyPositionNodeData"*
  %84 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %85 = bitcast %"struct.cc::StickyPositionNodeData"** %84 to i8**
  store i8* %82, i8** %85, align 8
  %86 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  store i8* %82, i8** %86, align 8
  %87 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %83, i64 %80
  store %"struct.cc::StickyPositionNodeData"* %87, %"struct.cc::StickyPositionNodeData"** %8, align 8
  %88 = bitcast %"struct.cc::StickyPositionNodeData"** %84 to i64*
  %89 = ptrtoint i8* %82 to i64
  %90 = icmp eq %"struct.cc::StickyPositionNodeData"* %1, %2
  br i1 %90, label %108, label %91

91:                                               ; preds = %79, %91
  %92 = phi %"struct.cc::StickyPositionNodeData"* [ %104, %91 ], [ %83, %79 ]
  %93 = phi %"struct.cc::StickyPositionNodeData"* [ %103, %91 ], [ %1, %79 ]
  %94 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %92, i64 0, i32 0
  %95 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %93, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  store i32 %96, i32* %94, align 8
  %97 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %92, i64 0, i32 1
  %98 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %93, i64 0, i32 1
  tail call void @_ZN2cc24StickyPositionConstraintC1ERKS0_(%"struct.cc::StickyPositionConstraint"* %97, %"struct.cc::StickyPositionConstraint"* dereferenceable(88) %98) #18
  %99 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %92, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %93, i64 0, i32 2
  %101 = bitcast i32* %99 to i8*
  %102 = bitcast i32* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #18
  %103 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %93, i64 1
  %104 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %92, i64 1
  %105 = icmp eq %"struct.cc::StickyPositionNodeData"* %103, %2
  br i1 %105, label %106, label %91

106:                                              ; preds = %91
  %107 = ptrtoint %"struct.cc::StickyPositionNodeData"* %104 to i64
  br label %108

108:                                              ; preds = %79, %106
  %109 = phi i64 [ %89, %79 ], [ %107, %106 ]
  store i64 %109, i64* %88, align 8
  br label %110

110:                                              ; preds = %56, %58, %108
  ret void
}

declare void @_ZN2cc24StickyPositionConstraintC1ERKS0_(%"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"* dereferenceable(88)) unnamed_addr #2

declare void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"*, %"struct.cc::TransformNode"* dereferenceable(224)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc13TransformNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::TransformNode"* %2 to i64
  %5 = ptrtoint %"struct.cc::TransformNode"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 224
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::TransformNode"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 224
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::TransformNode"*
  br i1 %15, label %51, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::TransformNode"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 224
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::TransformNode"* %24, %"struct.cc::TransformNode"* %2
  %26 = ptrtoint %"struct.cc::TransformNode"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 224
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.cc::TransformNode"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %49

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.cc::TransformNode"* %25, %2
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to %"struct.cc::TransformNode"*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.cc::TransformNode"* [ %43, %39 ], [ %38, %37 ]
  %41 = phi %"struct.cc::TransformNode"* [ %42, %39 ], [ %24, %37 ]
  tail call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %40, %"struct.cc::TransformNode"* dereferenceable(224) %41) #18
  %42 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %41, i64 1
  %43 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %40, i64 1
  %44 = icmp eq %"struct.cc::TransformNode"* %42, %2
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = ptrtoint %"struct.cc::TransformNode"* %43 to i64
  br label %47

47:                                               ; preds = %34, %45
  %48 = phi i64 [ %35, %34 ], [ %46, %45 ]
  store i64 %48, i64* %19, align 8
  br label %92

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %16, i64 %28
  store %"struct.cc::TransformNode"* %50, %"struct.cc::TransformNode"** %18, align 8
  br label %92

51:                                               ; preds = %3
  %52 = icmp eq i64 %12, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %55 = bitcast %"struct.cc::TransformNode"** %54 to i64*
  store i64 %12, i64* %55, align 8
  %56 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %56) #20
  %57 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #18
  br label %58

58:                                               ; preds = %51, %53
  %59 = phi i64 [ %10, %51 ], [ 0, %53 ]
  %60 = icmp ugt i64 %7, 82351536043346212
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #19
  unreachable

63:                                               ; preds = %58
  %64 = sdiv exact i64 %59, 224
  %65 = icmp ult i64 %64, 41175768021673106
  br i1 %65, label %66, label %70

66:                                               ; preds = %63
  %67 = shl nsw i64 %64, 1
  %68 = icmp ult i64 %67, %7
  %69 = select i1 %68, i64 %7, i64 %67
  br label %70

70:                                               ; preds = %66, %63
  %71 = phi i64 [ %69, %66 ], [ 82351536043346212, %63 ]
  %72 = mul i64 %71, 224
  %73 = tail call i8* @_Znwm(i64 %72) #20
  %74 = bitcast i8* %73 to %"struct.cc::TransformNode"*
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %76 = bitcast %"struct.cc::TransformNode"** %75 to i8**
  store i8* %73, i8** %76, align 8
  %77 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %73, i8** %77, align 8
  %78 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %74, i64 %71
  store %"struct.cc::TransformNode"* %78, %"struct.cc::TransformNode"** %8, align 8
  %79 = bitcast %"struct.cc::TransformNode"** %75 to i64*
  %80 = ptrtoint i8* %73 to i64
  %81 = icmp eq %"struct.cc::TransformNode"* %1, %2
  br i1 %81, label %90, label %82

82:                                               ; preds = %70, %82
  %83 = phi %"struct.cc::TransformNode"* [ %86, %82 ], [ %74, %70 ]
  %84 = phi %"struct.cc::TransformNode"* [ %85, %82 ], [ %1, %70 ]
  tail call void @_ZN2cc13TransformNodeC1ERKS0_(%"struct.cc::TransformNode"* %83, %"struct.cc::TransformNode"* dereferenceable(224) %84) #18
  %85 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %84, i64 1
  %86 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %83, i64 1
  %87 = icmp eq %"struct.cc::TransformNode"* %85, %2
  br i1 %87, label %88, label %82

88:                                               ; preds = %82
  %89 = ptrtoint %"struct.cc::TransformNode"* %86 to i64
  br label %90

90:                                               ; preds = %70, %88
  %91 = phi i64 [ %80, %70 ], [ %89, %88 ]
  store i64 %91, i64* %79, align 8
  br label %92

92:                                               ; preds = %47, %49, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.102"*, %"struct.cc::ClipNode"* dereferenceable(184)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 100254043878856258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::ClipNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 184
  %20 = icmp ult i64 %19, 50127021939428129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 100254043878856258, %14 ]
  %28 = mul i64 %27, 184
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::ClipNode"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::ClipNode"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::ClipNode"* %35 to i64
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %34, %"struct.cc::ClipNode"* dereferenceable(184) %1) #18
  %37 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %34, i64 1
  %38 = ptrtoint %"struct.cc::ClipNode"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %39, align 8
  %41 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %3, align 8
  %42 = icmp eq %"struct.cc::ClipNode"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::ClipNode"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::ClipNode"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::ClipNode"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %47, i64 -1
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %48, %"struct.cc::ClipNode"* dereferenceable(184) %49) #18
  %50 = icmp eq %"struct.cc::ClipNode"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::ClipNode"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::ClipNode"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::ClipNode"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::ClipNode"*
  %60 = icmp eq %"struct.cc::ClipNode"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::ClipNode"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %62, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %63) #18
  %64 = icmp eq %"struct.cc::ClipNode"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"*, %"struct.cc::ClipNode"* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.102"*, %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::ClipNode"* %2 to i64
  %5 = ptrtoint %"struct.cc::ClipNode"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 184
  %8 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::ClipNode"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 184
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::ClipNode"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::ClipNode"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 184
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::ClipNode"* %24, %"struct.cc::ClipNode"* %2
  %26 = icmp eq %"struct.cc::ClipNode"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.cc::ClipNode"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.cc::ClipNode"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(184) %"struct.cc::ClipNode"* @_ZN2cc8ClipNodeaSERKS0_(%"struct.cc::ClipNode"* %28, %"struct.cc::ClipNode"* dereferenceable(184) %29) #18
  %31 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %29, i64 1
  %32 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %28, i64 1
  %33 = icmp eq %"struct.cc::ClipNode"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.cc::ClipNode"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.cc::ClipNode"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.cc::ClipNode"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.cc::ClipNode"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.cc::ClipNode"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %42, %"struct.cc::ClipNode"* dereferenceable(184) %43) #18
  %44 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %43, i64 1
  %45 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %42, i64 1
  %46 = icmp eq %"struct.cc::ClipNode"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.cc::ClipNode"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %18, align 8
  %53 = icmp eq %"struct.cc::ClipNode"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"struct.cc::ClipNode"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %55, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %56) #18
  %57 = icmp eq %"struct.cc::ClipNode"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"struct.cc::ClipNode"* %35, %"struct.cc::ClipNode"** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %64 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %63, align 8
  %65 = icmp eq %"struct.cc::ClipNode"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.cc::ClipNode"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %67, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %68) #18
  %69 = icmp eq %"struct.cc::ClipNode"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.102"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"struct.cc::ClipNode"* %16, %"struct.cc::ClipNode"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #20
  %75 = bitcast %"class.std::__1::vector.102"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #18
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 100254043878856258
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #19
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 184
  %83 = icmp ult i64 %82, 50127021939428129
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 100254043878856258, %81 ]
  %90 = mul i64 %89, 184
  %91 = tail call i8* @_Znwm(i64 %90) #20
  %92 = bitcast i8* %91 to %"struct.cc::ClipNode"*
  %93 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %"struct.cc::ClipNode"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector.102"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %92, i64 %89
  store %"struct.cc::ClipNode"* %96, %"struct.cc::ClipNode"** %8, align 8
  %97 = bitcast %"struct.cc::ClipNode"** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %"struct.cc::ClipNode"* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"struct.cc::ClipNode"* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %"struct.cc::ClipNode"* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %101, %"struct.cc::ClipNode"* dereferenceable(184) %102) #18
  %103 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %102, i64 1
  %104 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %101, i64 1
  %105 = icmp eq %"struct.cc::ClipNode"* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %"struct.cc::ClipNode"* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(184) %"struct.cc::ClipNode"* @_ZN2cc8ClipNodeaSERKS0_(%"struct.cc::ClipNode"*, %"struct.cc::ClipNode"* dereferenceable(184)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc8ClipNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.102"*, %"struct.cc::ClipNode"* dereferenceable(184)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 100254043878856258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::ClipNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 184
  %20 = icmp ult i64 %19, 50127021939428129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 100254043878856258, %14 ]
  %28 = mul i64 %27, 184
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::ClipNode"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::ClipNode"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::ClipNode"* %35 to i64
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %34, %"struct.cc::ClipNode"* dereferenceable(184) %1) #18
  %37 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %34, i64 1
  %38 = ptrtoint %"struct.cc::ClipNode"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %39, align 8
  %41 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %3, align 8
  %42 = icmp eq %"struct.cc::ClipNode"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::ClipNode"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::ClipNode"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::ClipNode"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %47, i64 -1
  tail call void @_ZN2cc8ClipNodeC1ERKS0_(%"struct.cc::ClipNode"* %48, %"struct.cc::ClipNode"* dereferenceable(184) %49) #18
  %50 = icmp eq %"struct.cc::ClipNode"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::ClipNode"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::ClipNode"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::ClipNode"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::ClipNode"*
  %60 = icmp eq %"struct.cc::ClipNode"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::ClipNode"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %62, i64 -1
  tail call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* %63) #18
  %64 = icmp eq %"struct.cc::ClipNode"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.30"*, %"struct.cc::EffectNode"* dereferenceable(288)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 288
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 64051194700380387
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::EffectNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 288
  %20 = icmp ult i64 %19, 32025597350190193
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 64051194700380387, %14 ]
  %28 = mul i64 %27, 288
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::EffectNode"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::EffectNode"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::EffectNode"* %35 to i64
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %34, %"struct.cc::EffectNode"* dereferenceable(288) %1) #18
  %37 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %34, i64 1
  %38 = ptrtoint %"struct.cc::EffectNode"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %39, align 8
  %41 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %3, align 8
  %42 = icmp eq %"struct.cc::EffectNode"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::EffectNode"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::EffectNode"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::EffectNode"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %47, i64 -1
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %48, %"struct.cc::EffectNode"* dereferenceable(288) %49) #18
  %50 = icmp eq %"struct.cc::EffectNode"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::EffectNode"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::EffectNode"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::EffectNode"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::EffectNode"*
  %60 = icmp eq %"struct.cc::EffectNode"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::EffectNode"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %62, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %63) #18
  %64 = icmp eq %"struct.cc::EffectNode"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"*, %"struct.cc::EffectNode"* dereferenceable(288)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.30"*, %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::EffectNode"* %2 to i64
  %5 = ptrtoint %"struct.cc::EffectNode"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 288
  %8 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::EffectNode"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 288
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::EffectNode"*
  br i1 %15, label %79, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::EffectNode"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 288
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::EffectNode"* %24, %"struct.cc::EffectNode"* %2
  %26 = icmp eq %"struct.cc::EffectNode"* %25, %1
  br i1 %26, label %54, label %27

27:                                               ; preds = %17, %50
  %28 = phi %"struct.cc::EffectNode"* [ %52, %50 ], [ %16, %17 ]
  %29 = phi %"struct.cc::EffectNode"* [ %51, %50 ], [ %1, %17 ]
  %30 = bitcast %"struct.cc::EffectNode"* %28 to i8*
  %31 = bitcast %"struct.cc::EffectNode"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #18
  %32 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 5
  %33 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 5
  %34 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* %32, %"class.cc::FilterOperations"* dereferenceable(24) %33) #18
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 6
  %36 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 6
  %37 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* %35, %"class.cc::FilterOperations"* dereferenceable(24) %36) #18
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 184, i1 false) #18
  %40 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 24, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 24, i32 0
  store i32 %41, i32* %42, align 8
  %43 = icmp eq %"struct.cc::EffectNode"* %28, %29
  br i1 %43, label %50, label %44

44:                                               ; preds = %27
  %45 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 24, i32 1, i32 0
  %46 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 24, i32 1, i32 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 24, i32 1, i32 0, i32 0, i32 1
  %49 = load i32*, i32** %48, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"* %45, i32* %47, i32* %49) #18
  br label %50

50:                                               ; preds = %44, %27
  %51 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 1
  %52 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 1
  %53 = icmp eq %"struct.cc::EffectNode"* %51, %25
  br i1 %53, label %54, label %27

54:                                               ; preds = %50, %17
  %55 = phi %"struct.cc::EffectNode"* [ %16, %17 ], [ %52, %50 ]
  br i1 %23, label %56, label %71

56:                                               ; preds = %54
  %57 = load i64, i64* %19, align 8
  %58 = icmp eq %"struct.cc::EffectNode"* %25, %2
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  %60 = inttoptr i64 %57 to %"struct.cc::EffectNode"*
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi %"struct.cc::EffectNode"* [ %65, %61 ], [ %60, %59 ]
  %63 = phi %"struct.cc::EffectNode"* [ %64, %61 ], [ %24, %59 ]
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %62, %"struct.cc::EffectNode"* dereferenceable(288) %63) #18
  %64 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %63, i64 1
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %62, i64 1
  %66 = icmp eq %"struct.cc::EffectNode"* %64, %2
  br i1 %66, label %67, label %61

67:                                               ; preds = %61
  %68 = ptrtoint %"struct.cc::EffectNode"* %65 to i64
  br label %69

69:                                               ; preds = %56, %67
  %70 = phi i64 [ %57, %56 ], [ %68, %67 ]
  store i64 %70, i64* %19, align 8
  br label %130

71:                                               ; preds = %54
  %72 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %18, align 8
  %73 = icmp eq %"struct.cc::EffectNode"* %72, %55
  br i1 %73, label %78, label %74

74:                                               ; preds = %71, %74
  %75 = phi %"struct.cc::EffectNode"* [ %76, %74 ], [ %72, %71 ]
  %76 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %75, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %76) #18
  %77 = icmp eq %"struct.cc::EffectNode"* %76, %55
  br i1 %77, label %78, label %74

78:                                               ; preds = %74, %71
  store %"struct.cc::EffectNode"* %55, %"struct.cc::EffectNode"** %18, align 8
  br label %130

79:                                               ; preds = %3
  %80 = icmp eq i64 %12, 0
  br i1 %80, label %96, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %12 to i8*
  %83 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %84 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %83, align 8
  %85 = icmp eq %"struct.cc::EffectNode"* %84, %16
  br i1 %85, label %93, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.cc::EffectNode"* [ %88, %86 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %87, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %88) #18
  %89 = icmp eq %"struct.cc::EffectNode"* %88, %16
  br i1 %89, label %90, label %86

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::vector.30"* %0 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %81
  %94 = phi i8* [ %92, %90 ], [ %82, %81 ]
  store %"struct.cc::EffectNode"* %16, %"struct.cc::EffectNode"** %83, align 8
  tail call void @_ZdlPv(i8* %94) #20
  %95 = bitcast %"class.std::__1::vector.30"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #18
  br label %96

96:                                               ; preds = %79, %93
  %97 = phi i64 [ %10, %79 ], [ 0, %93 ]
  %98 = icmp ugt i64 %7, 64051194700380387
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #19
  unreachable

101:                                              ; preds = %96
  %102 = sdiv exact i64 %97, 288
  %103 = icmp ult i64 %102, 32025597350190193
  br i1 %103, label %104, label %108

104:                                              ; preds = %101
  %105 = shl nsw i64 %102, 1
  %106 = icmp ult i64 %105, %7
  %107 = select i1 %106, i64 %7, i64 %105
  br label %108

108:                                              ; preds = %104, %101
  %109 = phi i64 [ %107, %104 ], [ 64051194700380387, %101 ]
  %110 = mul i64 %109, 288
  %111 = tail call i8* @_Znwm(i64 %110) #20
  %112 = bitcast i8* %111 to %"struct.cc::EffectNode"*
  %113 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %114 = bitcast %"struct.cc::EffectNode"** %113 to i8**
  store i8* %111, i8** %114, align 8
  %115 = bitcast %"class.std::__1::vector.30"* %0 to i8**
  store i8* %111, i8** %115, align 8
  %116 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %112, i64 %109
  store %"struct.cc::EffectNode"* %116, %"struct.cc::EffectNode"** %8, align 8
  %117 = bitcast %"struct.cc::EffectNode"** %113 to i64*
  %118 = ptrtoint i8* %111 to i64
  %119 = icmp eq %"struct.cc::EffectNode"* %1, %2
  br i1 %119, label %128, label %120

120:                                              ; preds = %108, %120
  %121 = phi %"struct.cc::EffectNode"* [ %124, %120 ], [ %112, %108 ]
  %122 = phi %"struct.cc::EffectNode"* [ %123, %120 ], [ %1, %108 ]
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %121, %"struct.cc::EffectNode"* dereferenceable(288) %122) #18
  %123 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %122, i64 1
  %124 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %121, i64 1
  %125 = icmp eq %"struct.cc::EffectNode"* %123, %2
  br i1 %125, label %126, label %120

126:                                              ; preds = %120
  %127 = ptrtoint %"struct.cc::EffectNode"* %124 to i64
  br label %128

128:                                              ; preds = %108, %126
  %129 = phi i64 [ %118, %108 ], [ %127, %126 ]
  store i64 %129, i64* %117, align 8
  br label %130

130:                                              ; preds = %69, %78, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #18
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #18
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.54"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #18
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10EffectNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.30"*, %"struct.cc::EffectNode"* dereferenceable(288)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::EffectNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 288
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 64051194700380387
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::EffectNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 288
  %20 = icmp ult i64 %19, 32025597350190193
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 64051194700380387, %14 ]
  %28 = mul i64 %27, 288
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::EffectNode"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::EffectNode"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::EffectNode"* %35 to i64
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %34, %"struct.cc::EffectNode"* dereferenceable(288) %1) #18
  %37 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %34, i64 1
  %38 = ptrtoint %"struct.cc::EffectNode"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %39, align 8
  %41 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %3, align 8
  %42 = icmp eq %"struct.cc::EffectNode"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::EffectNode"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::EffectNode"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::EffectNode"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %47, i64 -1
  tail call void @_ZN2cc10EffectNodeC1ERKS0_(%"struct.cc::EffectNode"* %48, %"struct.cc::EffectNode"* dereferenceable(288) %49) #18
  %50 = icmp eq %"struct.cc::EffectNode"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::EffectNode"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::EffectNode"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::EffectNode"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::EffectNode"*
  %60 = icmp eq %"struct.cc::EffectNode"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::EffectNode"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %62, i64 -1
  tail call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* %63) #18
  %64 = icmp eq %"struct.cc::EffectNode"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.122"*, %"struct.cc::ScrollNode"* dereferenceable(168)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::ScrollNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.122"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 109802048057794950
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::ScrollNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 168
  %20 = icmp ult i64 %19, 54901024028897475
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 109802048057794950, %14 ]
  %28 = mul i64 %27, 168
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::ScrollNode"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::ScrollNode"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::ScrollNode"* %35 to i64
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %34, %"struct.cc::ScrollNode"* dereferenceable(168) %1) #18
  %37 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 1
  %38 = ptrtoint %"struct.cc::ScrollNode"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %39, align 8
  %41 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %3, align 8
  %42 = icmp eq %"struct.cc::ScrollNode"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::ScrollNode"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::ScrollNode"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::ScrollNode"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %47, i64 -1
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %48, %"struct.cc::ScrollNode"* dereferenceable(168) %49) #18
  %50 = icmp eq %"struct.cc::ScrollNode"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::ScrollNode"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::ScrollNode"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::ScrollNode"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::ScrollNode"*
  %60 = icmp eq %"struct.cc::ScrollNode"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::ScrollNode"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %62, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %63) #18
  %64 = icmp eq %"struct.cc::ScrollNode"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"* dereferenceable(168)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.122"*, %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::ScrollNode"* %2 to i64
  %5 = ptrtoint %"struct.cc::ScrollNode"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 168
  %8 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::ScrollNode"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.122"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 168
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::ScrollNode"*
  br i1 %15, label %89, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::ScrollNode"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 168
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::ScrollNode"* %24, %"struct.cc::ScrollNode"* %2
  %26 = icmp eq %"struct.cc::ScrollNode"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %53
  %28 = phi %"struct.cc::ScrollNode"* [ %62, %53 ], [ %16, %17 ]
  %29 = phi %"struct.cc::ScrollNode"* [ %61, %53 ], [ %1, %17 ]
  %30 = bitcast %"struct.cc::ScrollNode"* %28 to i8*
  %31 = bitcast %"struct.cc::ScrollNode"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 60, i1 false) #18
  %32 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 0, i32 12
  %33 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %29, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %29, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.absl::optional.124", %"class.absl::optional.124"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = tail call dereferenceable(88) %"class.cc::SnapContainerData"* @_ZN2cc17SnapContainerDataaSERKS0_(%"class.cc::SnapContainerData"* %42, %"class.cc::SnapContainerData"* dereferenceable(88) %37) #18
  br label %53

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = bitcast i8* %45 to %"class.cc::SnapContainerData"*
  tail call void @_ZN2cc17SnapContainerDataC1ERKS0_(%"class.cc::SnapContainerData"* %46, %"class.cc::SnapContainerData"* dereferenceable(88) %37) #18
  store i8 1, i8* %38, align 8
  br label %53

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.absl::optional.124", %"class.absl::optional.124"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %52) #18
  store i8 0, i8* %48, align 8
  br label %53

53:                                               ; preds = %51, %47, %44, %41
  %54 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %29, i64 0, i32 13
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 0, i32 13
  %58 = load i8, i8* %57, align 8
  %59 = and i8 %58, -2
  %60 = or i8 %59, %56
  store i8 %60, i8* %57, align 8
  %61 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %29, i64 1
  %62 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 1
  %63 = icmp eq %"struct.cc::ScrollNode"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %53, %17
  %65 = phi %"struct.cc::ScrollNode"* [ %16, %17 ], [ %62, %53 ]
  br i1 %23, label %66, label %81

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"struct.cc::ScrollNode"* %25, %2
  br i1 %68, label %79, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"struct.cc::ScrollNode"*
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi %"struct.cc::ScrollNode"* [ %75, %71 ], [ %70, %69 ]
  %73 = phi %"struct.cc::ScrollNode"* [ %74, %71 ], [ %24, %69 ]
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %72, %"struct.cc::ScrollNode"* dereferenceable(168) %73) #18
  %74 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %73, i64 1
  %75 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %72, i64 1
  %76 = icmp eq %"struct.cc::ScrollNode"* %74, %2
  br i1 %76, label %77, label %71

77:                                               ; preds = %71
  %78 = ptrtoint %"struct.cc::ScrollNode"* %75 to i64
  br label %79

79:                                               ; preds = %66, %77
  %80 = phi i64 [ %67, %66 ], [ %78, %77 ]
  store i64 %80, i64* %19, align 8
  br label %140

81:                                               ; preds = %64
  %82 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %18, align 8
  %83 = icmp eq %"struct.cc::ScrollNode"* %82, %65
  br i1 %83, label %88, label %84

84:                                               ; preds = %81, %84
  %85 = phi %"struct.cc::ScrollNode"* [ %86, %84 ], [ %82, %81 ]
  %86 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %85, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %86) #18
  %87 = icmp eq %"struct.cc::ScrollNode"* %86, %65
  br i1 %87, label %88, label %84

88:                                               ; preds = %84, %81
  store %"struct.cc::ScrollNode"* %65, %"struct.cc::ScrollNode"** %18, align 8
  br label %140

89:                                               ; preds = %3
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %106, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %12 to i8*
  %93 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %94 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %93, align 8
  %95 = icmp eq %"struct.cc::ScrollNode"* %94, %16
  br i1 %95, label %103, label %96

96:                                               ; preds = %91, %96
  %97 = phi %"struct.cc::ScrollNode"* [ %98, %96 ], [ %94, %91 ]
  %98 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %97, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %98) #18
  %99 = icmp eq %"struct.cc::ScrollNode"* %98, %16
  br i1 %99, label %100, label %96

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::vector.122"* %0 to i8**
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %100, %91
  %104 = phi i8* [ %102, %100 ], [ %92, %91 ]
  store %"struct.cc::ScrollNode"* %16, %"struct.cc::ScrollNode"** %93, align 8
  tail call void @_ZdlPv(i8* %104) #20
  %105 = bitcast %"class.std::__1::vector.122"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #18
  br label %106

106:                                              ; preds = %89, %103
  %107 = phi i64 [ %10, %89 ], [ 0, %103 ]
  %108 = icmp ugt i64 %7, 109802048057794950
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #19
  unreachable

111:                                              ; preds = %106
  %112 = sdiv exact i64 %107, 168
  %113 = icmp ult i64 %112, 54901024028897475
  br i1 %113, label %114, label %118

114:                                              ; preds = %111
  %115 = shl nsw i64 %112, 1
  %116 = icmp ult i64 %115, %7
  %117 = select i1 %116, i64 %7, i64 %115
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi i64 [ %117, %114 ], [ 109802048057794950, %111 ]
  %120 = mul i64 %119, 168
  %121 = tail call i8* @_Znwm(i64 %120) #20
  %122 = bitcast i8* %121 to %"struct.cc::ScrollNode"*
  %123 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %124 = bitcast %"struct.cc::ScrollNode"** %123 to i8**
  store i8* %121, i8** %124, align 8
  %125 = bitcast %"class.std::__1::vector.122"* %0 to i8**
  store i8* %121, i8** %125, align 8
  %126 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %122, i64 %119
  store %"struct.cc::ScrollNode"* %126, %"struct.cc::ScrollNode"** %8, align 8
  %127 = bitcast %"struct.cc::ScrollNode"** %123 to i64*
  %128 = ptrtoint i8* %121 to i64
  %129 = icmp eq %"struct.cc::ScrollNode"* %1, %2
  br i1 %129, label %138, label %130

130:                                              ; preds = %118, %130
  %131 = phi %"struct.cc::ScrollNode"* [ %134, %130 ], [ %122, %118 ]
  %132 = phi %"struct.cc::ScrollNode"* [ %133, %130 ], [ %1, %118 ]
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %131, %"struct.cc::ScrollNode"* dereferenceable(168) %132) #18
  %133 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %132, i64 1
  %134 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %131, i64 1
  %135 = icmp eq %"struct.cc::ScrollNode"* %133, %2
  br i1 %135, label %136, label %130

136:                                              ; preds = %130
  %137 = ptrtoint %"struct.cc::ScrollNode"* %134 to i64
  br label %138

138:                                              ; preds = %118, %136
  %139 = phi i64 [ %128, %118 ], [ %137, %136 ]
  store i64 %139, i64* %127, align 8
  br label %140

140:                                              ; preds = %79, %88, %138
  ret void
}

declare dereferenceable(88) %"class.cc::SnapContainerData"* @_ZN2cc17SnapContainerDataaSERKS0_(%"class.cc::SnapContainerData"*, %"class.cc::SnapContainerData"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN2cc17SnapContainerDataC1ERKS0_(%"class.cc::SnapContainerData"*, %"class.cc::SnapContainerData"* dereferenceable(88)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10ScrollNodeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.122"*, %"struct.cc::ScrollNode"* dereferenceable(168)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::ScrollNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.122"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 109802048057794950
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.122"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::ScrollNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 168
  %20 = icmp ult i64 %19, 54901024028897475
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 109802048057794950, %14 ]
  %28 = mul i64 %27, 168
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::ScrollNode"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::ScrollNode"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::ScrollNode"* %35 to i64
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %34, %"struct.cc::ScrollNode"* dereferenceable(168) %1) #18
  %37 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 1
  %38 = ptrtoint %"struct.cc::ScrollNode"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %39, align 8
  %41 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %3, align 8
  %42 = icmp eq %"struct.cc::ScrollNode"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::ScrollNode"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::ScrollNode"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::ScrollNode"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %47, i64 -1
  tail call void @_ZN2cc10ScrollNodeC1ERKS0_(%"struct.cc::ScrollNode"* %48, %"struct.cc::ScrollNode"* dereferenceable(168) %49) #18
  %50 = icmp eq %"struct.cc::ScrollNode"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::ScrollNode"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::ScrollNode"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::ScrollNode"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::ScrollNode"*
  %60 = icmp eq %"struct.cc::ScrollNode"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::ScrollNode"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %62, i64 -1
  tail call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* %63) #18
  %64 = icmp eq %"struct.cc::ScrollNode"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc22StickyPositionNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.22"*, %"struct.cc::StickyPositionNodeData"* dereferenceable(120)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::StickyPositionNodeData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::StickyPositionNodeData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"struct.cc::StickyPositionNodeData"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::StickyPositionNodeData"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::StickyPositionNodeData"* %35 to i64
  %37 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %1, i64 0, i32 1
  tail call void @_ZN2cc24StickyPositionConstraintC1ERKS0_(%"struct.cc::StickyPositionConstraint"* %40, %"struct.cc::StickyPositionConstraint"* dereferenceable(88) %41) #18
  %42 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %33, i64 %9, i32 2
  %43 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %1, i64 0, i32 2
  %44 = bitcast i32* %42 to i8*
  %45 = bitcast i32* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #18
  %46 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %34, i64 1
  %47 = ptrtoint %"struct.cc::StickyPositionNodeData"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 0
  %49 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %48, align 8
  %50 = load %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"** %3, align 8
  %51 = icmp eq %"struct.cc::StickyPositionNodeData"* %50, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %31
  %53 = ptrtoint %"struct.cc::StickyPositionNodeData"* %49 to i64
  br label %71

54:                                               ; preds = %31, %54
  %55 = phi %"struct.cc::StickyPositionNodeData"* [ %67, %54 ], [ %34, %31 ]
  %56 = phi %"struct.cc::StickyPositionNodeData"* [ %57, %54 ], [ %50, %31 ]
  %57 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %55, i64 -1, i32 0
  %59 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %57, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %58, align 8
  %61 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %55, i64 -1, i32 1
  %62 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %56, i64 -1, i32 1
  tail call void @_ZN2cc24StickyPositionConstraintC1ERKS0_(%"struct.cc::StickyPositionConstraint"* %61, %"struct.cc::StickyPositionConstraint"* dereferenceable(88) %62) #18
  %63 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %55, i64 -1, i32 2
  %64 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %56, i64 -1, i32 2
  %65 = bitcast i32* %63 to i8*
  %66 = bitcast i32* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #18
  %67 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %55, i64 -1
  %68 = icmp eq %"struct.cc::StickyPositionNodeData"* %57, %49
  br i1 %68, label %69, label %54

69:                                               ; preds = %54
  %70 = load i64, i64* %6, align 8
  br label %71

71:                                               ; preds = %52, %69
  %72 = phi %"struct.cc::StickyPositionNodeData"* [ %34, %52 ], [ %67, %69 ]
  %73 = phi i64 [ %53, %52 ], [ %70, %69 ]
  %74 = ptrtoint %"struct.cc::StickyPositionNodeData"* %72 to i64
  store i64 %74, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %75 = icmp eq i64 %73, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %77) #20
  br label %78

78:                                               ; preds = %71, %76
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"*, %"class.std::__1::unique_ptr.86"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.86"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.86"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #20
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.86"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.86"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.86"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.86"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.86"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.86"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.86"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.86"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.cc::RenderSurfaceImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.86"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.86"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.86"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.86"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !17

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.86"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.86"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.86"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.86"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.86"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.86"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.86"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.86"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.86"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.86"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.86"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.86"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.86"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.86"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.86"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.86"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.86"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.86"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.86"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.86"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.86"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.86"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.86"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.86"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.86"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.86"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.86"*
  %138 = icmp eq %"class.std::__1::unique_ptr.86"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.86"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %142, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %142, align 8
  %144 = icmp eq %"class.cc::RenderSurfaceImpl"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.cc::RenderSurfaceImpl"* %143 to void (%"class.cc::RenderSurfaceImpl"*)***
  %147 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %147, i64 1
  %149 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %148, align 8
  tail call void %149(%"class.cc::RenderSurfaceImpl"* nonnull %143) #18
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.86"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #20
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE19__node_insert_multiEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %3, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0
  %9 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE27__node_insert_multi_prepareEmRS8_(%"class.std::__1::__hash_table"* %0, i64 %6, %"struct.std::__1::__hash_value_type"* dereferenceable(16) %3)
  %10 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %7, align 8
  %13 = tail call i64 @llvm.ctpop.i64(i64 %11) #18, !range !12
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = add i64 %11, -1
  %17 = and i64 %16, %12
  br label %22

18:                                               ; preds = %2
  %19 = icmp ult i64 %12, %11
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %12, %11
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %12, %18 ]
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %29, i64* %31, align 8
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %27, align 8
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %23
  store %"struct.std::__1::__hash_node_base"* %26, %"struct.std::__1::__hash_node_base"** %34, align 8
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %14, label %44, label %41

41:                                               ; preds = %37
  %42 = add i64 %11, -1
  %43 = and i64 %40, %42
  br label %48

44:                                               ; preds = %37
  %45 = icmp ult i64 %40, %11
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %40, %11
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %40, %44 ]
  %50 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %51, align 8
  br label %78

52:                                               ; preds = %22
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %9, i64 0, i32 0
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %55, i64* %57, align 8
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %53, align 8
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  br i1 %14, label %67, label %64

64:                                               ; preds = %60
  %65 = add i64 %11, -1
  %66 = and i64 %63, %65
  br label %71

67:                                               ; preds = %60
  %68 = icmp ult i64 %63, %11
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %63, %11
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %63, %67 ]
  %73 = icmp eq i64 %72, %23
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, i64 %72
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %77, align 8
  br label %78

78:                                               ; preds = %25, %48, %52, %71, %74
  %79 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  ret %"struct.std::__1::__hash_node_base"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE27__node_insert_multi_prepareEmRS8_(%"class.std::__1::__hash_table"*, i64, %"struct.std::__1::__hash_value_type"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !12
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #18
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #18, !range !12
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #18
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #18, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #18
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #18, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #18
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #20
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #20
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !18

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #18, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #20
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1343"*, %"class.std::__1::unique_ptr.1324"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1343", %"class.std::__1::vector.1343"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1324"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1343"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1343"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1343", %"class.std::__1::vector.1343"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1324"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #20
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1324"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1324"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1324"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.1324"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1324"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.1324"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1343", %"class.std::__1::vector.1343"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.1324"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.1324"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.viz::CopyOutputRequest"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.1324"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.1324"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.1324"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.1324"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !19

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.1324"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.1324"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.1324"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.1324"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.1324"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.1324"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.1324"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.1324"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.1324"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.1324"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.1324"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.1324"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.1324"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1324"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1324"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.1324"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.1324"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.1324"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.1324"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.1324"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.1324"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.1324"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.1324"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.1324"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.1324"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.1324"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.1324"*
  %138 = icmp eq %"class.std::__1::unique_ptr.1324"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.1324"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1324"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %142, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %142, align 8
  %144 = icmp eq %"class.viz::CopyOutputRequest"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %143) #18
  %146 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %143, i64 0, i32 0
  tail call void @_ZdlPv(i8* %146) #20
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.1324"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #20
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.1499"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !12
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.74"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1499"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1499", %"class.std::__1::unique_ptr.1499"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.77"** %98 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %30, %"class.std::__1::__compressed_pair.74"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1499", %"class.std::__1::unique_ptr.1499"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessINS_4pairImiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::__less.1510"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %366, %3
  %5 = phi %"struct.std::__1::pair.1354"* [ %1, %3 ], [ %336, %366 ]
  %6 = phi %"struct.std::__1::pair.1354"* [ %0, %3 ], [ %17, %366 ]
  %7 = ptrtoint %"struct.std::__1::pair.1354"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -2
  %10 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1, i32 1
  %13 = ptrtoint %"struct.std::__1::pair.1354"* %5 to i64
  br label %14

14:                                               ; preds = %375, %4
  %15 = phi %"struct.std::__1::pair.1354"* [ %6, %4 ], [ %376, %375 ]
  br label %16

16:                                               ; preds = %232, %14
  %17 = phi %"struct.std::__1::pair.1354"* [ %15, %14 ], [ %201, %232 ]
  %18 = ptrtoint %"struct.std::__1::pair.1354"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 4
  switch i64 %20, label %55 [
    i64 0, label %379
    i64 1, label %379
    i64 2, label %21
    i64 3, label %40
    i64 4, label %44
    i64 5, label %49
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = icmp ult i64 %25, %23
  br i1 %28, label %379, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %379

35:                                               ; preds = %21, %29
  store i64 %23, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1, i32 1
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %37, align 4
  store i32 %39, i32* %36, align 4
  store i32 %38, i32* %37, align 4
  br label %379

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 1
  %42 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1
  %43 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %41, %"struct.std::__1::pair.1354"* %42, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %379

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 2
  %47 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %45, %"struct.std::__1::pair.1354"* %46, %"struct.std::__1::pair.1354"* %47, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %379

49:                                               ; preds = %16
  %50 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 2
  %52 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 3
  %53 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %5, i64 -1
  %54 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %50, %"struct.std::__1::pair.1354"* %51, %"struct.std::__1::pair.1354"* %52, %"struct.std::__1::pair.1354"* %53, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %379

55:                                               ; preds = %16
  %56 = icmp slt i64 %19, 112
  br i1 %56, label %57, label %118

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 2
  %59 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 1
  %60 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %59, %"struct.std::__1::pair.1354"* %58, %"struct.std::__1::__less.1510"* dereferenceable(1) %2) #18
  %61 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 3
  %62 = icmp eq %"struct.std::__1::pair.1354"* %61, %5
  br i1 %62, label %379, label %63

63:                                               ; preds = %57, %115
  %64 = phi %"struct.std::__1::pair.1354"* [ %116, %115 ], [ %61, %57 ]
  %65 = phi %"struct.std::__1::pair.1354"* [ %64, %115 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %64, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %65, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  br label %82

74:                                               ; preds = %63
  %75 = icmp ult i64 %69, %67
  br i1 %75, label %115, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %64, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %65, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp slt i32 %78, %80
  br i1 %81, label %82, label %115

82:                                               ; preds = %76, %71
  %83 = phi i32 [ %73, %71 ], [ %78, %76 ]
  %84 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %64, i64 0, i32 1
  store i64 %69, i64* %66, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %65, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %84, align 8
  %87 = icmp eq %"struct.std::__1::pair.1354"* %65, %17
  br i1 %87, label %112, label %88

88:                                               ; preds = %82, %106
  %89 = phi i32* [ %107, %106 ], [ %85, %82 ]
  %90 = phi i64* [ %91, %106 ], [ %68, %82 ]
  %91 = getelementptr inbounds i64, i64* %90, i64 -2
  %92 = bitcast i64* %91 to %"struct.std::__1::pair.1354"*
  %93 = load i64, i64* %91, align 8
  %94 = icmp ult i64 %67, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %88
  %96 = getelementptr inbounds i64, i64* %90, i64 -1
  %97 = bitcast i64* %96 to i32*
  %98 = load i32, i32* %97, align 4
  br label %106

99:                                               ; preds = %88
  %100 = icmp ult i64 %93, %67
  br i1 %100, label %112, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds i64, i64* %90, i64 -1
  %103 = bitcast i64* %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = icmp slt i32 %83, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %101, %95
  %107 = phi i32* [ %103, %101 ], [ %97, %95 ]
  %108 = phi i32 [ %104, %101 ], [ %98, %95 ]
  store i64 %93, i64* %90, align 8
  %109 = getelementptr inbounds i64, i64* %90, i64 1
  %110 = bitcast i64* %109 to i32*
  store i32 %108, i32* %110, align 8
  %111 = icmp eq %"struct.std::__1::pair.1354"* %17, %92
  br i1 %111, label %112, label %88

112:                                              ; preds = %99, %101, %106, %82
  %113 = phi i64* [ %68, %82 ], [ %90, %99 ], [ %90, %101 ], [ %91, %106 ]
  %114 = phi i32* [ %85, %82 ], [ %89, %99 ], [ %89, %101 ], [ %107, %106 ]
  store i64 %67, i64* %113, align 8
  store i32 %83, i32* %114, align 8
  br label %115

115:                                              ; preds = %112, %76, %74
  %116 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %64, i64 1
  %117 = icmp eq %"struct.std::__1::pair.1354"* %116, %5
  br i1 %117, label %379, label %63

118:                                              ; preds = %55
  %119 = icmp sgt i64 %19, 15984
  %120 = sdiv i64 %20, 2
  %121 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 %120
  br i1 %119, label %122, label %127

122:                                              ; preds = %118
  %123 = sdiv i64 %20, 4
  %124 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 %123
  %125 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %121, i64 %123
  %126 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %124, %"struct.std::__1::pair.1354"* %121, %"struct.std::__1::pair.1354"* %125, %"struct.std::__1::pair.1354"* %8, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %129

127:                                              ; preds = %118
  %128 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %121, %"struct.std::__1::pair.1354"* %8, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %129

129:                                              ; preds = %127, %122
  %130 = phi i32 [ %126, %122 ], [ %128, %127 ]
  %131 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %121, i64 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = icmp ult i64 %132, %134
  br i1 %135, label %264, label %136

136:                                              ; preds = %129
  %137 = icmp ult i64 %134, %132
  br i1 %137, label %144, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 %120, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %140, %142
  br i1 %143, label %264, label %144

144:                                              ; preds = %138, %136
  %145 = icmp eq %"struct.std::__1::pair.1354"* %17, %9
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 %120, i32 1
  br label %241

148:                                              ; preds = %254, %144
  %149 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 1
  %150 = load i64, i64* %10, align 8
  %151 = icmp ult i64 %132, %150
  br i1 %151, label %184, label %152

152:                                              ; preds = %148
  %153 = icmp ult i64 %150, %132
  br i1 %153, label %159, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = load i32, i32* %11, align 8
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %184, label %159

159:                                              ; preds = %154, %152
  %160 = icmp eq %"struct.std::__1::pair.1354"* %149, %8
  br i1 %160, label %379, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  br label %163

163:                                              ; preds = %161, %181
  %164 = phi %"struct.std::__1::pair.1354"* [ %149, %161 ], [ %182, %181 ]
  %165 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %164, i64 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = icmp ult i64 %132, %166
  br i1 %167, label %175, label %168

168:                                              ; preds = %163
  %169 = icmp ult i64 %166, %132
  br i1 %169, label %181, label %170

170:                                              ; preds = %168
  %171 = load i32, i32* %162, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %164, i64 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp slt i32 %171, %173
  br i1 %174, label %175, label %181

175:                                              ; preds = %163, %170
  %176 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %164, i64 0, i32 0
  store i64 %150, i64* %176, align 8
  store i64 %166, i64* %10, align 8
  %177 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %164, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = load i32, i32* %12, align 4
  store i32 %179, i32* %177, align 4
  store i32 %178, i32* %12, align 4
  %180 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %164, i64 1
  br label %184

181:                                              ; preds = %168, %170
  %182 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %164, i64 1
  %183 = icmp eq %"struct.std::__1::pair.1354"* %182, %8
  br i1 %183, label %379, label %163

184:                                              ; preds = %148, %154, %175
  %185 = phi %"struct.std::__1::pair.1354"* [ %180, %175 ], [ %149, %154 ], [ %149, %148 ]
  %186 = icmp eq %"struct.std::__1::pair.1354"* %185, %8
  br i1 %186, label %379, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  br label %189

189:                                              ; preds = %187, %234
  %190 = phi %"struct.std::__1::pair.1354"* [ %240, %234 ], [ %185, %187 ]
  %191 = phi %"struct.std::__1::pair.1354"* [ %220, %234 ], [ %8, %187 ]
  %192 = load i64, i64* %131, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %190, i64 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp ult i64 %192, %194
  br i1 %195, label %200, label %204

196:                                              ; preds = %208, %214
  %197 = phi i64* [ %215, %214 ], [ %206, %208 ]
  %198 = phi i64 [ %216, %214 ], [ %205, %208 ]
  %199 = bitcast i64* %197 to %"struct.std::__1::pair.1354"*
  br label %200

200:                                              ; preds = %196, %189
  %201 = phi %"struct.std::__1::pair.1354"* [ %190, %189 ], [ %199, %196 ]
  %202 = phi i64* [ %193, %189 ], [ %197, %196 ]
  %203 = phi i64 [ %194, %189 ], [ %198, %196 ]
  br label %218

204:                                              ; preds = %189, %214
  %205 = phi i64 [ %216, %214 ], [ %194, %189 ]
  %206 = phi i64* [ %215, %214 ], [ %193, %189 ]
  %207 = icmp ult i64 %205, %192
  br i1 %207, label %214, label %208

208:                                              ; preds = %204
  %209 = load i32, i32* %188, align 8
  %210 = getelementptr inbounds i64, i64* %206, i64 1
  %211 = bitcast i64* %210 to i32*
  %212 = load i32, i32* %211, align 8
  %213 = icmp slt i32 %209, %212
  br i1 %213, label %196, label %214

214:                                              ; preds = %204, %208
  %215 = getelementptr inbounds i64, i64* %206, i64 2
  %216 = load i64, i64* %215, align 8
  %217 = icmp ult i64 %192, %216
  br i1 %217, label %196, label %204

218:                                              ; preds = %231, %200
  %219 = phi %"struct.std::__1::pair.1354"* [ %191, %200 ], [ %220, %231 ]
  %220 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %219, i64 -1
  %221 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %220, i64 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = icmp ult i64 %192, %222
  br i1 %223, label %231, label %224

224:                                              ; preds = %218
  %225 = icmp ult i64 %222, %192
  br i1 %225, label %232, label %226

226:                                              ; preds = %224
  %227 = load i32, i32* %188, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %219, i64 -1, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = icmp slt i32 %227, %229
  br i1 %230, label %231, label %232

231:                                              ; preds = %226, %218
  br label %218

232:                                              ; preds = %224, %226
  %233 = icmp ult %"struct.std::__1::pair.1354"* %201, %220
  br i1 %233, label %234, label %16

234:                                              ; preds = %232
  %235 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %220, i64 0, i32 0
  store i64 %222, i64* %202, align 8
  store i64 %203, i64* %235, align 8
  %236 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %201, i64 0, i32 1
  %237 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %219, i64 -1, i32 1
  %238 = load i32, i32* %236, align 4
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  store i32 %238, i32* %237, align 4
  %240 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %201, i64 1
  br label %189

241:                                              ; preds = %146, %254
  %242 = phi %"struct.std::__1::pair.1354"* [ %9, %146 ], [ %255, %254 ]
  %243 = phi %"struct.std::__1::pair.1354"* [ %8, %146 ], [ %242, %254 ]
  %244 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %242, i64 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = icmp ult i64 %245, %134
  br i1 %246, label %257, label %247

247:                                              ; preds = %241
  %248 = icmp ult i64 %134, %245
  br i1 %248, label %254, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %243, i64 -1, i32 1
  %251 = load i32, i32* %250, align 8
  %252 = load i32, i32* %147, align 8
  %253 = icmp slt i32 %251, %252
  br i1 %253, label %257, label %254

254:                                              ; preds = %249, %247
  %255 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %242, i64 -1
  %256 = icmp eq %"struct.std::__1::pair.1354"* %17, %255
  br i1 %256, label %148, label %241

257:                                              ; preds = %241, %249
  %258 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %242, i64 0, i32 0
  store i64 %245, i64* %131, align 8
  store i64 %132, i64* %258, align 8
  %259 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 0, i32 1
  %260 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %243, i64 -1, i32 1
  %261 = load i32, i32* %259, align 4
  %262 = load i32, i32* %260, align 4
  store i32 %262, i32* %259, align 4
  store i32 %261, i32* %260, align 4
  %263 = add i32 %130, 1
  br label %264

264:                                              ; preds = %129, %138, %257
  %265 = phi i32 [ %263, %257 ], [ %130, %138 ], [ %130, %129 ]
  %266 = phi %"struct.std::__1::pair.1354"* [ %242, %257 ], [ %8, %138 ], [ %8, %129 ]
  %267 = ptrtoint %"struct.std::__1::pair.1354"* %17 to i64
  %268 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %17, i64 1
  %269 = icmp ult %"struct.std::__1::pair.1354"* %268, %266
  br i1 %269, label %270, label %333

270:                                              ; preds = %264, %324
  %271 = phi %"struct.std::__1::pair.1354"* [ %331, %324 ], [ %121, %264 ]
  %272 = phi i32 [ %329, %324 ], [ %265, %264 ]
  %273 = phi %"struct.std::__1::pair.1354"* [ %332, %324 ], [ %268, %264 ]
  %274 = phi %"struct.std::__1::pair.1354"* [ %320, %324 ], [ %266, %264 ]
  %275 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %271, i64 0, i32 0
  %276 = load i64, i64* %275, align 8
  %277 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %271, i64 0, i32 1
  br label %278

278:                                              ; preds = %296, %270
  %279 = phi %"struct.std::__1::pair.1354"* [ %273, %270 ], [ %297, %296 ]
  %280 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %279, i64 0, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = icmp ult i64 %281, %276
  br i1 %282, label %296, label %283

283:                                              ; preds = %278
  %284 = icmp ult i64 %276, %281
  br i1 %284, label %285, label %291

285:                                              ; preds = %291, %283
  %286 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %279, i64 0, i32 0
  %287 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %274, i64 -1
  %288 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %287, i64 0, i32 0
  %289 = load i64, i64* %288, align 8
  %290 = icmp ult i64 %289, %276
  br i1 %290, label %318, label %298

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %279, i64 0, i32 1
  %293 = load i32, i32* %292, align 8
  %294 = load i32, i32* %277, align 8
  %295 = icmp slt i32 %293, %294
  br i1 %295, label %296, label %285

296:                                              ; preds = %278, %291
  %297 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %279, i64 1
  br label %278

298:                                              ; preds = %285, %309
  %299 = phi i64 [ %311, %309 ], [ %289, %285 ]
  %300 = phi i64* [ %310, %309 ], [ %288, %285 ]
  %301 = phi %"struct.std::__1::pair.1354"* [ %302, %309 ], [ %274, %285 ]
  %302 = bitcast i64* %300 to %"struct.std::__1::pair.1354"*
  %303 = icmp ult i64 %276, %299
  br i1 %303, label %309, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %301, i64 -1, i32 1
  %306 = load i32, i32* %305, align 8
  %307 = load i32, i32* %277, align 8
  %308 = icmp slt i32 %306, %307
  br i1 %308, label %316, label %309

309:                                              ; preds = %304, %298
  %310 = getelementptr inbounds i64, i64* %300, i64 -2
  %311 = load i64, i64* %310, align 8
  %312 = icmp ult i64 %311, %276
  br i1 %312, label %313, label %298

313:                                              ; preds = %309
  %314 = bitcast i64* %300 to %"struct.std::__1::pair.1354"*
  %315 = bitcast i64* %310 to %"struct.std::__1::pair.1354"*
  br label %318

316:                                              ; preds = %304
  %317 = bitcast i64* %300 to %"struct.std::__1::pair.1354"*
  br label %318

318:                                              ; preds = %313, %316, %285
  %319 = phi %"struct.std::__1::pair.1354"* [ %274, %285 ], [ %314, %313 ], [ %301, %316 ]
  %320 = phi %"struct.std::__1::pair.1354"* [ %287, %285 ], [ %315, %313 ], [ %317, %316 ]
  %321 = phi i64* [ %288, %285 ], [ %310, %313 ], [ %300, %316 ]
  %322 = phi i64 [ %289, %285 ], [ %311, %313 ], [ %299, %316 ]
  %323 = icmp ugt %"struct.std::__1::pair.1354"* %279, %320
  br i1 %323, label %333, label %324

324:                                              ; preds = %318
  store i64 %322, i64* %286, align 8
  store i64 %281, i64* %321, align 8
  %325 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %279, i64 0, i32 1
  %326 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %319, i64 -1, i32 1
  %327 = load i32, i32* %325, align 4
  %328 = load i32, i32* %326, align 4
  store i32 %328, i32* %325, align 4
  store i32 %327, i32* %326, align 4
  %329 = add i32 %272, 1
  %330 = icmp eq %"struct.std::__1::pair.1354"* %271, %279
  %331 = select i1 %330, %"struct.std::__1::pair.1354"* %320, %"struct.std::__1::pair.1354"* %271
  %332 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %279, i64 1
  br label %270

333:                                              ; preds = %318, %264
  %334 = phi %"struct.std::__1::pair.1354"* [ %121, %264 ], [ %271, %318 ]
  %335 = phi i32 [ %265, %264 ], [ %272, %318 ]
  %336 = phi %"struct.std::__1::pair.1354"* [ %268, %264 ], [ %279, %318 ]
  %337 = icmp eq %"struct.std::__1::pair.1354"* %336, %334
  br i1 %337, label %358, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %334, i64 0, i32 0
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %336, i64 0, i32 0
  %342 = load i64, i64* %341, align 8
  %343 = icmp ult i64 %340, %342
  br i1 %343, label %352, label %344

344:                                              ; preds = %338
  %345 = icmp ult i64 %342, %340
  br i1 %345, label %358, label %346

346:                                              ; preds = %344
  %347 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %334, i64 0, i32 1
  %348 = load i32, i32* %347, align 8
  %349 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %336, i64 0, i32 1
  %350 = load i32, i32* %349, align 8
  %351 = icmp slt i32 %348, %350
  br i1 %351, label %352, label %358

352:                                              ; preds = %338, %346
  store i64 %340, i64* %341, align 8
  store i64 %342, i64* %339, align 8
  %353 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %336, i64 0, i32 1
  %354 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %334, i64 0, i32 1
  %355 = load i32, i32* %353, align 4
  %356 = load i32, i32* %354, align 4
  store i32 %356, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %357 = add i32 %335, 1
  br label %358

358:                                              ; preds = %344, %333, %352, %346
  %359 = phi i32 [ %357, %352 ], [ %335, %346 ], [ %335, %333 ], [ %335, %344 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %368

361:                                              ; preds = %358
  %362 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairImiEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %336, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  %363 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %336, i64 1
  %364 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairImiEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair.1354"* %363, %"struct.std::__1::pair.1354"* %5, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br i1 %364, label %365, label %367

365:                                              ; preds = %361
  br i1 %362, label %379, label %366

366:                                              ; preds = %365, %377
  br label %4

367:                                              ; preds = %361
  br i1 %362, label %375, label %368

368:                                              ; preds = %367, %358
  %369 = ptrtoint %"struct.std::__1::pair.1354"* %336 to i64
  %370 = sub i64 %369, %267
  %371 = sub i64 %13, %369
  %372 = icmp slt i64 %370, %371
  br i1 %372, label %373, label %377

373:                                              ; preds = %368
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairImiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair.1354"* %17, %"struct.std::__1::pair.1354"* %336, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  %374 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %336, i64 1
  br label %375

375:                                              ; preds = %373, %367
  %376 = phi %"struct.std::__1::pair.1354"* [ %363, %367 ], [ %374, %373 ]
  br label %14

377:                                              ; preds = %368
  %378 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %336, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairImiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair.1354"* %378, %"struct.std::__1::pair.1354"* %5, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %366

379:                                              ; preds = %365, %184, %16, %16, %159, %181, %115, %27, %57, %29, %35, %40, %44, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::__less.1510"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = icmp ult i64 %8, %6
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %14, %16
  br label %18

18:                                               ; preds = %4, %10, %12
  %19 = phi i1 [ true, %4 ], [ false, %10 ], [ %17, %12 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %6
  br i1 %22, label %31, label %23

23:                                               ; preds = %18
  %24 = icmp ult i64 %6, %21
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %27, %29
  br label %31

31:                                               ; preds = %18, %23, %25
  %32 = phi i1 [ true, %18 ], [ false, %23 ], [ %30, %25 ]
  br i1 %19, label %53, label %33

33:                                               ; preds = %31
  br i1 %32, label %34, label %77

34:                                               ; preds = %33
  store i64 %21, i64* %5, align 8
  store i64 %6, i64* %20, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %36, align 4
  store i32 %38, i32* %35, align 4
  store i32 %37, i32* %36, align 4
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %7, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %34
  %43 = icmp ult i64 %40, %39
  br i1 %43, label %77, label %44

44:                                               ; preds = %42
  %45 = load i32, i32* %35, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %77

49:                                               ; preds = %34, %44
  store i64 %39, i64* %7, align 8
  store i64 %40, i64* %5, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %35, align 4
  store i32 %52, i32* %50, align 4
  store i32 %51, i32* %35, align 4
  br label %77

53:                                               ; preds = %31
  br i1 %32, label %54, label %59

54:                                               ; preds = %53
  store i64 %21, i64* %7, align 8
  store i64 %8, i64* %20, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %55, align 4
  store i32 %57, i32* %56, align 4
  br label %77

59:                                               ; preds = %53
  store i64 %6, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %60, align 4
  store i32 %62, i32* %61, align 4
  %64 = load i64, i64* %20, align 8
  %65 = load i64, i64* %5, align 8
  %66 = icmp ult i64 %64, %65
  br i1 %66, label %73, label %67

67:                                               ; preds = %59
  %68 = icmp ult i64 %65, %64
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %71, %62
  br i1 %72, label %73, label %77

73:                                               ; preds = %59, %69
  store i64 %64, i64* %5, align 8
  store i64 %65, i64* %20, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %75 = load i32, i32* %61, align 4
  %76 = load i32, i32* %74, align 4
  store i32 %76, i32* %61, align 4
  store i32 %75, i32* %74, align 4
  br label %77

77:                                               ; preds = %67, %42, %69, %73, %44, %49, %33, %54
  %78 = phi i32 [ 1, %54 ], [ 0, %33 ], [ 2, %49 ], [ 1, %44 ], [ 2, %73 ], [ 1, %69 ], [ 1, %42 ], [ 1, %67 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::__less.1510"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"* %0, %"struct.std::__1::pair.1354"* %1, %"struct.std::__1::pair.1354"* %2, %"struct.std::__1::__less.1510"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %5
  %13 = icmp ult i64 %10, %8
  br i1 %13, label %58, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %3, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %5, %14
  store i64 %8, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %3, i64 0, i32 1
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  %25 = add i32 %6, 1
  %26 = load i64, i64* %9, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = icmp ult i64 %28, %26
  br i1 %31, label %58, label %32

32:                                               ; preds = %30
  %33 = load i32, i32* %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %20, %32
  store i64 %26, i64* %27, align 8
  store i64 %28, i64* %9, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %21, align 4
  store i32 %40, i32* %38, align 4
  store i32 %39, i32* %21, align 4
  %41 = add i32 %6, 2
  %42 = load i64, i64* %27, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %37
  %47 = icmp ult i64 %44, %42
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %38, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %37, %48
  store i64 %42, i64* %43, align 8
  store i64 %44, i64* %27, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %38, align 4
  store i32 %56, i32* %54, align 4
  store i32 %55, i32* %38, align 4
  %57 = add i32 %6, 3
  br label %58

58:                                               ; preds = %46, %30, %12, %32, %53, %48, %14
  %59 = phi i32 [ %57, %53 ], [ %41, %48 ], [ %25, %32 ], [ %6, %14 ], [ %6, %12 ], [ %25, %30 ], [ %41, %46 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::__less.1510"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair.1354"* %0, %"struct.std::__1::pair.1354"* %1, %"struct.std::__1::pair.1354"* %2, %"struct.std::__1::pair.1354"* %3, %"struct.std::__1::__less.1510"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %4, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %3, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %6
  %14 = icmp ult i64 %11, %9
  br i1 %14, label %75, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %4, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %3, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %75

21:                                               ; preds = %6, %15
  store i64 %9, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %4, i64 0, i32 1
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %22, align 4
  store i32 %24, i32* %23, align 4
  %26 = add i32 %7, 1
  %27 = load i64, i64* %10, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %21
  %32 = icmp ult i64 %29, %27
  br i1 %32, label %75, label %33

33:                                               ; preds = %31
  %34 = load i32, i32* %22, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %34, %36
  br i1 %37, label %38, label %75

38:                                               ; preds = %21, %33
  store i64 %27, i64* %28, align 8
  store i64 %29, i64* %10, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %22, align 4
  store i32 %41, i32* %39, align 4
  store i32 %40, i32* %22, align 4
  %42 = add i32 %7, 2
  %43 = load i64, i64* %28, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %38
  %48 = icmp ult i64 %45, %43
  br i1 %48, label %75, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %39, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp slt i32 %50, %52
  br i1 %53, label %54, label %75

54:                                               ; preds = %38, %49
  store i64 %43, i64* %44, align 8
  store i64 %45, i64* %28, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %39, align 4
  store i32 %57, i32* %55, align 4
  store i32 %56, i32* %39, align 4
  %58 = add i32 %7, 3
  %59 = load i64, i64* %44, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %70, label %63

63:                                               ; preds = %54
  %64 = icmp ult i64 %61, %59
  br i1 %64, label %75, label %65

65:                                               ; preds = %63
  %66 = load i32, i32* %55, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %54, %65
  store i64 %59, i64* %60, align 8
  store i64 %61, i64* %44, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %55, align 4
  store i32 %73, i32* %71, align 4
  store i32 %72, i32* %55, align 4
  %74 = add i32 %7, 4
  br label %75

75:                                               ; preds = %63, %47, %31, %13, %33, %65, %70, %49, %15
  %76 = phi i32 [ %74, %70 ], [ %58, %65 ], [ %42, %49 ], [ %26, %33 ], [ %7, %15 ], [ %7, %13 ], [ %26, %31 ], [ %42, %47 ], [ %58, %63 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairImiEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"struct.std::__1::__less.1510"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.std::__1::pair.1354"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.1354"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  switch i64 %7, label %42 [
    i64 0, label %113
    i64 1, label %113
    i64 2, label %8
    i64 3, label %27
    i64 4, label %31
    i64 5, label %36
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 -1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = icmp ult i64 %12, %10
  br i1 %15, label %113, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 -1, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %22, label %113

22:                                               ; preds = %8, %16
  store i64 %10, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 -1, i32 1
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %23, align 4
  store i32 %25, i32* %24, align 4
  br label %113

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 -1
  %30 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"* %0, %"struct.std::__1::pair.1354"* %28, %"struct.std::__1::pair.1354"* %29, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %113

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 2
  %34 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 -1
  %35 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair.1354"* %0, %"struct.std::__1::pair.1354"* %32, %"struct.std::__1::pair.1354"* %33, %"struct.std::__1::pair.1354"* %34, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %113

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 1
  %38 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 2
  %39 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 3
  %40 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %1, i64 -1
  %41 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair.1354"* %0, %"struct.std::__1::pair.1354"* %37, %"struct.std::__1::pair.1354"* %38, %"struct.std::__1::pair.1354"* %39, %"struct.std::__1::pair.1354"* %40, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  br label %113

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 2
  %44 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 1
  %45 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairImiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair.1354"* %0, %"struct.std::__1::pair.1354"* %44, %"struct.std::__1::pair.1354"* %43, %"struct.std::__1::__less.1510"* dereferenceable(1) %2)
  %46 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %0, i64 3
  %47 = icmp eq %"struct.std::__1::pair.1354"* %46, %1
  br i1 %47, label %113, label %48

48:                                               ; preds = %42, %106
  %49 = phi %"struct.std::__1::pair.1354"* [ %108, %106 ], [ %46, %42 ]
  %50 = phi i32 [ %107, %106 ], [ 0, %42 ]
  %51 = phi %"struct.std::__1::pair.1354"* [ %49, %106 ], [ %43, %42 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %49, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %51, i64 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %53, %55
  br i1 %56, label %57, label %60

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %49, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  br label %68

60:                                               ; preds = %48
  %61 = icmp ult i64 %55, %53
  br i1 %61, label %106, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %49, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %51, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp slt i32 %64, %66
  br i1 %67, label %68, label %106

68:                                               ; preds = %57, %62
  %69 = phi i32 [ %59, %57 ], [ %64, %62 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %49, i64 0, i32 1
  store i64 %55, i64* %52, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %51, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %70, align 8
  %73 = icmp eq %"struct.std::__1::pair.1354"* %51, %0
  br i1 %73, label %101, label %74

74:                                               ; preds = %68, %92
  %75 = phi i32* [ %95, %92 ], [ %71, %68 ]
  %76 = phi i64* [ %77, %92 ], [ %54, %68 ]
  %77 = getelementptr inbounds i64, i64* %76, i64 -2
  %78 = bitcast i64* %77 to %"struct.std::__1::pair.1354"*
  %79 = load i64, i64* %77, align 8
  %80 = icmp ult i64 %53, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = getelementptr inbounds i64, i64* %76, i64 -1
  %83 = bitcast i64* %82 to i32*
  %84 = load i32, i32* %83, align 4
  br label %92

85:                                               ; preds = %74
  %86 = icmp ult i64 %79, %53
  br i1 %86, label %101, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds i64, i64* %76, i64 -1
  %89 = bitcast i64* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = icmp slt i32 %69, %90
  br i1 %91, label %92, label %101

92:                                               ; preds = %81, %87
  %93 = phi i32 [ %84, %81 ], [ %90, %87 ]
  store i64 %79, i64* %76, align 8
  %94 = getelementptr inbounds i64, i64* %76, i64 -1
  %95 = bitcast i64* %94 to i32*
  %96 = getelementptr inbounds i64, i64* %76, i64 1
  %97 = bitcast i64* %96 to i32*
  store i32 %93, i32* %97, align 8
  %98 = icmp eq %"struct.std::__1::pair.1354"* %78, %0
  br i1 %98, label %99, label %74

99:                                               ; preds = %92
  %100 = bitcast i64* %94 to i32*
  br label %101

101:                                              ; preds = %85, %87, %99, %68
  %102 = phi i64* [ %54, %68 ], [ %77, %99 ], [ %76, %87 ], [ %76, %85 ]
  %103 = phi i32* [ %71, %68 ], [ %100, %99 ], [ %75, %87 ], [ %75, %85 ]
  store i64 %53, i64* %102, align 8
  store i32 %69, i32* %103, align 8
  %104 = add i32 %50, 1
  %105 = icmp eq i32 %104, 8
  br i1 %105, label %110, label %106

106:                                              ; preds = %101, %60, %62
  %107 = phi i32 [ %104, %101 ], [ %50, %62 ], [ %50, %60 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %49, i64 1
  %109 = icmp eq %"struct.std::__1::pair.1354"* %108, %1
  br i1 %109, label %113, label %48

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"struct.std::__1::pair.1354", %"struct.std::__1::pair.1354"* %49, i64 1
  %112 = icmp eq %"struct.std::__1::pair.1354"* %111, %1
  br label %113

113:                                              ; preds = %106, %110, %42, %14, %16, %22, %3, %3, %36, %31, %27
  %114 = phi i1 [ true, %36 ], [ true, %31 ], [ true, %27 ], [ true, %3 ], [ true, %3 ], [ true, %22 ], [ true, %16 ], [ true, %14 ], [ true, %42 ], [ %112, %110 ], [ true, %106 ]
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEvT0_SI_T_"(%"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %502, %2
  %4 = phi %"class.std::__1::unique_ptr.86"* [ %1, %2 ], [ %476, %502 ]
  %5 = phi %"class.std::__1::unique_ptr.86"* [ %0, %2 ], [ %20, %502 ]
  %6 = ptrtoint %"class.std::__1::unique_ptr.86"* %4 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 -1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::unique_ptr.86"* %7 to i64*
  %10 = bitcast %"class.std::__1::unique_ptr.86"* %7 to i64*
  %11 = bitcast %"class.std::__1::unique_ptr.86"* %7 to i64*
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.86"* %7 to i64*
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr.86"* %7 to i64*
  %16 = ptrtoint %"class.std::__1::unique_ptr.86"* %4 to i64
  br label %17

17:                                               ; preds = %511, %3
  %18 = phi %"class.std::__1::unique_ptr.86"* [ %5, %3 ], [ %512, %511 ]
  br label %19

19:                                               ; preds = %413, %17
  %20 = phi %"class.std::__1::unique_ptr.86"* [ %18, %17 ], [ %396, %413 ]
  %21 = ptrtoint %"class.std::__1::unique_ptr.86"* %20 to i64
  %22 = sub i64 %6, %21
  %23 = ashr exact i64 %22, 3
  switch i64 %23, label %144 [
    i64 0, label %515
    i64 1, label %515
    i64 2, label %24
    i64 3, label %40
    i64 4, label %89
    i64 5, label %94
  ]

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %31, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %29, %33
  br i1 %34, label %35, label %515

35:                                               ; preds = %24
  %36 = ptrtoint %"class.cc::RenderSurfaceImpl"* %27 to i64
  %37 = ptrtoint %"class.cc::RenderSurfaceImpl"* %31 to i64
  %38 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  %39 = bitcast %"class.std::__1::unique_ptr.86"* %25 to i64*
  store i64 %36, i64* %38, align 8
  store i64 %37, i64* %39, align 8
  br label %515

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 -1
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %41, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %44, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %48, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %46, %50
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %42, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %53, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, %46
  %57 = ptrtoint %"class.cc::RenderSurfaceImpl"* %44 to i64
  %58 = ptrtoint %"class.cc::RenderSurfaceImpl"* %53 to i64
  %59 = ptrtoint %"class.cc::RenderSurfaceImpl"* %48 to i64
  br i1 %51, label %75, label %60

60:                                               ; preds = %40
  br i1 %56, label %61, label %515

61:                                               ; preds = %60
  %62 = bitcast %"class.std::__1::unique_ptr.86"* %41 to i64*
  %63 = bitcast %"class.std::__1::unique_ptr.86"* %42 to i64*
  store i64 %58, i64* %62, align 8
  store i64 %57, i64* %63, align 8
  %64 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %43, align 8
  %65 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %64, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %47, align 8
  %68 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %67, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = icmp ult i64 %66, %69
  br i1 %70, label %71, label %515

71:                                               ; preds = %61
  %72 = ptrtoint %"class.cc::RenderSurfaceImpl"* %64 to i64
  %73 = ptrtoint %"class.cc::RenderSurfaceImpl"* %67 to i64
  %74 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  store i64 %72, i64* %74, align 8
  store i64 %73, i64* %62, align 8
  br label %515

75:                                               ; preds = %40
  %76 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  br i1 %56, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::unique_ptr.86"* %42 to i64*
  store i64 %58, i64* %76, align 8
  store i64 %59, i64* %78, align 8
  br label %515

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::unique_ptr.86"* %41 to i64*
  store i64 %57, i64* %76, align 8
  store i64 %59, i64* %80, align 8
  %81 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %52, align 8
  %82 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %81, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %49, align 8
  %85 = icmp ult i64 %83, %84
  br i1 %85, label %86, label %515

86:                                               ; preds = %79
  %87 = ptrtoint %"class.cc::RenderSurfaceImpl"* %81 to i64
  %88 = bitcast %"class.std::__1::unique_ptr.86"* %42 to i64*
  store i64 %87, i64* %80, align 8
  store i64 %59, i64* %88, align 8
  br label %515

89:                                               ; preds = %19
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 2
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 -1
  %93 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEjT0_SI_SI_SI_T_"(%"class.std::__1::unique_ptr.86"* %20, %"class.std::__1::unique_ptr.86"* %90, %"class.std::__1::unique_ptr.86"* %91, %"class.std::__1::unique_ptr.86"* %92)
  br label %515

94:                                               ; preds = %19
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 3
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %4, i64 -1
  %99 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEjT0_SI_SI_SI_T_"(%"class.std::__1::unique_ptr.86"* %20, %"class.std::__1::unique_ptr.86"* %95, %"class.std::__1::unique_ptr.86"* %96, %"class.std::__1::unique_ptr.86"* %97) #18
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %101, i64 0, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %97, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %105, i64 0, i32 2
  %107 = load i64, i64* %106, align 8
  %108 = icmp ult i64 %103, %107
  br i1 %108, label %109, label %515

109:                                              ; preds = %94
  %110 = ptrtoint %"class.cc::RenderSurfaceImpl"* %101 to i64
  %111 = ptrtoint %"class.cc::RenderSurfaceImpl"* %105 to i64
  %112 = bitcast %"class.std::__1::unique_ptr.86"* %97 to i64*
  %113 = bitcast %"class.std::__1::unique_ptr.86"* %98 to i64*
  store i64 %110, i64* %112, align 8
  store i64 %111, i64* %113, align 8
  %114 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %104, align 8
  %115 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %114, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %96, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %118, i64 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = icmp ult i64 %116, %120
  br i1 %121, label %122, label %515

122:                                              ; preds = %109
  %123 = ptrtoint %"class.cc::RenderSurfaceImpl"* %114 to i64
  %124 = ptrtoint %"class.cc::RenderSurfaceImpl"* %118 to i64
  %125 = bitcast %"class.std::__1::unique_ptr.86"* %96 to i64*
  store i64 %123, i64* %125, align 8
  store i64 %124, i64* %112, align 8
  %126 = load i64, i64* %115, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %95, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %128, i64 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult i64 %126, %130
  br i1 %131, label %132, label %515

132:                                              ; preds = %122
  %133 = ptrtoint %"class.cc::RenderSurfaceImpl"* %128 to i64
  %134 = bitcast %"class.std::__1::unique_ptr.86"* %95 to i64*
  store i64 %123, i64* %134, align 8
  store i64 %133, i64* %125, align 8
  %135 = load i64, i64* %115, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %137, i64 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = icmp ult i64 %135, %139
  br i1 %140, label %141, label %515

141:                                              ; preds = %132
  %142 = ptrtoint %"class.cc::RenderSurfaceImpl"* %137 to i64
  %143 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  store i64 %123, i64* %143, align 8
  store i64 %142, i64* %134, align 8
  br label %515

144:                                              ; preds = %19
  %145 = icmp slt i64 %22, 56
  br i1 %145, label %146, label %244

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 1
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %150, i64 0, i32 2
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %153, align 8
  %155 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %154, i64 0, i32 2
  %156 = load i64, i64* %155, align 8
  %157 = icmp ult i64 %152, %156
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %147, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %158, align 8
  %160 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %159, i64 0, i32 2
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, %152
  %163 = ptrtoint %"class.cc::RenderSurfaceImpl"* %150 to i64
  %164 = ptrtoint %"class.cc::RenderSurfaceImpl"* %159 to i64
  %165 = ptrtoint %"class.cc::RenderSurfaceImpl"* %154 to i64
  br i1 %157, label %175, label %166

166:                                              ; preds = %146
  br i1 %162, label %167, label %186

167:                                              ; preds = %166
  %168 = bitcast %"class.std::__1::unique_ptr.86"* %148 to i64*
  %169 = bitcast %"class.std::__1::unique_ptr.86"* %147 to i64*
  store i64 %164, i64* %168, align 8
  store i64 %163, i64* %169, align 8
  %170 = load i64, i64* %160, align 8
  %171 = load i64, i64* %155, align 8
  %172 = icmp ult i64 %170, %171
  br i1 %172, label %173, label %186

173:                                              ; preds = %167
  %174 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  store i64 %164, i64* %174, align 8
  store i64 %165, i64* %168, align 8
  br label %186

175:                                              ; preds = %146
  %176 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  br i1 %162, label %177, label %179

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.86"* %147 to i64*
  store i64 %164, i64* %176, align 8
  store i64 %165, i64* %178, align 8
  br label %186

179:                                              ; preds = %175
  %180 = bitcast %"class.std::__1::unique_ptr.86"* %148 to i64*
  store i64 %163, i64* %176, align 8
  store i64 %165, i64* %180, align 8
  %181 = load i64, i64* %160, align 8
  %182 = load i64, i64* %155, align 8
  %183 = icmp ult i64 %181, %182
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = bitcast %"class.std::__1::unique_ptr.86"* %147 to i64*
  store i64 %164, i64* %180, align 8
  store i64 %165, i64* %185, align 8
  br label %186

186:                                              ; preds = %184, %179, %177, %173, %167, %166
  %187 = phi %"class.cc::RenderSurfaceImpl"* [ %159, %166 ], [ %150, %167 ], [ %150, %173 ], [ %154, %177 ], [ %159, %179 ], [ %154, %184 ]
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 3
  %189 = icmp eq %"class.std::__1::unique_ptr.86"* %188, %4
  br i1 %189, label %515, label %190

190:                                              ; preds = %186, %242
  %191 = phi %"class.cc::RenderSurfaceImpl"* [ %243, %242 ], [ %187, %186 ]
  %192 = phi %"class.std::__1::unique_ptr.86"* [ %240, %242 ], [ %188, %186 ]
  %193 = phi %"class.std::__1::unique_ptr.86"* [ %192, %242 ], [ %147, %186 ]
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %192, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %194, align 8
  %196 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %195, i64 0, i32 2
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %191, i64 0, i32 2
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %197, %199
  %201 = ptrtoint %"class.cc::RenderSurfaceImpl"* %195 to i64
  br i1 %200, label %202, label %239

202:                                              ; preds = %190
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %194, align 8
  br label %203

203:                                              ; preds = %220, %202
  %204 = phi %"class.std::__1::unique_ptr.86"* [ %192, %202 ], [ %205, %220 ]
  %205 = phi %"class.std::__1::unique_ptr.86"* [ %193, %202 ], [ %221, %220 ]
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %205, i64 0, i32 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::unique_ptr.86"* %205 to i64*
  %208 = load i64, i64* %207, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %206, align 8
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %204, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %209, align 8
  %211 = bitcast %"class.std::__1::unique_ptr.86"* %204 to i64*
  store i64 %208, i64* %211, align 8
  %212 = icmp eq %"class.cc::RenderSurfaceImpl"* %210, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %203
  %214 = bitcast %"class.cc::RenderSurfaceImpl"* %210 to void (%"class.cc::RenderSurfaceImpl"*)***
  %215 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %215, i64 1
  %217 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %216, align 8
  tail call void %217(%"class.cc::RenderSurfaceImpl"* nonnull %210) #18
  br label %218

218:                                              ; preds = %213, %203
  %219 = icmp eq %"class.std::__1::unique_ptr.86"* %205, %20
  br i1 %219, label %228, label %220

220:                                              ; preds = %218
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %205, i64 -1
  %222 = load i64, i64* %196, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %221, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %223, align 8
  %225 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %224, i64 0, i32 2
  %226 = load i64, i64* %225, align 8
  %227 = icmp ult i64 %222, %226
  br i1 %227, label %203, label %228

228:                                              ; preds = %218, %220
  %229 = phi %"class.std::__1::unique_ptr.86"* [ %205, %220 ], [ %20, %218 ]
  %230 = bitcast %"class.std::__1::unique_ptr.86"* %229 to i64*
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %229, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %231, align 8
  store i64 %201, i64* %230, align 8
  %233 = icmp eq %"class.cc::RenderSurfaceImpl"* %232, null
  br i1 %233, label %239, label %234

234:                                              ; preds = %228
  %235 = bitcast %"class.cc::RenderSurfaceImpl"* %232 to void (%"class.cc::RenderSurfaceImpl"*)***
  %236 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %236, i64 1
  %238 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %237, align 8
  tail call void %238(%"class.cc::RenderSurfaceImpl"* nonnull %232) #18
  br label %239

239:                                              ; preds = %234, %228, %190
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %192, i64 1
  %241 = icmp eq %"class.std::__1::unique_ptr.86"* %240, %4
  br i1 %241, label %515, label %242

242:                                              ; preds = %239
  %243 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %194, align 8
  br label %190

244:                                              ; preds = %144
  %245 = icmp sgt i64 %22, 7992
  %246 = sdiv i64 %23, 2
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 %246
  br i1 %245, label %248, label %305

248:                                              ; preds = %244
  %249 = sdiv i64 %23, 4
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 %249
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %247, i64 %249
  %252 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEjT0_SI_SI_SI_T_"(%"class.std::__1::unique_ptr.86"* %20, %"class.std::__1::unique_ptr.86"* %250, %"class.std::__1::unique_ptr.86"* %247, %"class.std::__1::unique_ptr.86"* %251) #18
  %253 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %12, align 8
  %254 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %253, i64 0, i32 2
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %251, i64 0, i32 0, i32 0, i32 0
  %257 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %256, align 8
  %258 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %257, i64 0, i32 2
  %259 = load i64, i64* %258, align 8
  %260 = icmp ult i64 %255, %259
  br i1 %260, label %261, label %348

261:                                              ; preds = %248
  %262 = ptrtoint %"class.cc::RenderSurfaceImpl"* %253 to i64
  %263 = ptrtoint %"class.cc::RenderSurfaceImpl"* %257 to i64
  %264 = bitcast %"class.std::__1::unique_ptr.86"* %251 to i64*
  store i64 %262, i64* %264, align 8
  store i64 %263, i64* %13, align 8
  %265 = add i32 %252, 1
  %266 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %256, align 8
  %267 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %266, i64 0, i32 2
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %247, i64 0, i32 0, i32 0, i32 0
  %270 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %269, align 8
  %271 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %270, i64 0, i32 2
  %272 = load i64, i64* %271, align 8
  %273 = icmp ult i64 %268, %272
  br i1 %273, label %274, label %348

274:                                              ; preds = %261
  %275 = ptrtoint %"class.cc::RenderSurfaceImpl"* %266 to i64
  %276 = ptrtoint %"class.cc::RenderSurfaceImpl"* %270 to i64
  %277 = bitcast %"class.std::__1::unique_ptr.86"* %247 to i64*
  store i64 %275, i64* %277, align 8
  store i64 %276, i64* %264, align 8
  %278 = add i32 %252, 2
  %279 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %269, align 8
  %280 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %279, i64 0, i32 2
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %250, i64 0, i32 0, i32 0, i32 0
  %283 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %282, align 8
  %284 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %283, i64 0, i32 2
  %285 = load i64, i64* %284, align 8
  %286 = icmp ult i64 %281, %285
  br i1 %286, label %287, label %348

287:                                              ; preds = %274
  %288 = ptrtoint %"class.cc::RenderSurfaceImpl"* %279 to i64
  %289 = ptrtoint %"class.cc::RenderSurfaceImpl"* %283 to i64
  %290 = bitcast %"class.std::__1::unique_ptr.86"* %250 to i64*
  store i64 %288, i64* %290, align 8
  store i64 %289, i64* %277, align 8
  %291 = add i32 %252, 3
  %292 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %282, align 8
  %293 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %292, i64 0, i32 2
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %296 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %295, align 8
  %297 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %296, i64 0, i32 2
  %298 = load i64, i64* %297, align 8
  %299 = icmp ult i64 %294, %298
  br i1 %299, label %300, label %348

300:                                              ; preds = %287
  %301 = ptrtoint %"class.cc::RenderSurfaceImpl"* %292 to i64
  %302 = ptrtoint %"class.cc::RenderSurfaceImpl"* %296 to i64
  %303 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  store i64 %301, i64* %303, align 8
  store i64 %302, i64* %290, align 8
  %304 = add i32 %252, 4
  br label %348

305:                                              ; preds = %244
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %247, i64 0, i32 0, i32 0, i32 0
  %307 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %306, align 8
  %308 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %307, i64 0, i32 2
  %309 = load i64, i64* %308, align 8
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %310, align 8
  %312 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %311, i64 0, i32 2
  %313 = load i64, i64* %312, align 8
  %314 = icmp ult i64 %309, %313
  %315 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %8, align 8
  %316 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %315, i64 0, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = icmp ult i64 %317, %309
  %319 = ptrtoint %"class.cc::RenderSurfaceImpl"* %307 to i64
  %320 = ptrtoint %"class.cc::RenderSurfaceImpl"* %315 to i64
  %321 = ptrtoint %"class.cc::RenderSurfaceImpl"* %311 to i64
  br i1 %314, label %336, label %322

322:                                              ; preds = %305
  br i1 %318, label %323, label %348

323:                                              ; preds = %322
  %324 = bitcast %"class.std::__1::unique_ptr.86"* %247 to i64*
  store i64 %320, i64* %324, align 8
  store i64 %319, i64* %9, align 8
  %325 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %306, align 8
  %326 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %325, i64 0, i32 2
  %327 = load i64, i64* %326, align 8
  %328 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %310, align 8
  %329 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %328, i64 0, i32 2
  %330 = load i64, i64* %329, align 8
  %331 = icmp ult i64 %327, %330
  br i1 %331, label %332, label %348

332:                                              ; preds = %323
  %333 = ptrtoint %"class.cc::RenderSurfaceImpl"* %325 to i64
  %334 = ptrtoint %"class.cc::RenderSurfaceImpl"* %328 to i64
  %335 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  store i64 %333, i64* %335, align 8
  store i64 %334, i64* %324, align 8
  br label %348

336:                                              ; preds = %305
  %337 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  br i1 %318, label %338, label %339

338:                                              ; preds = %336
  store i64 %320, i64* %337, align 8
  store i64 %321, i64* %11, align 8
  br label %348

339:                                              ; preds = %336
  %340 = bitcast %"class.std::__1::unique_ptr.86"* %247 to i64*
  store i64 %319, i64* %337, align 8
  store i64 %321, i64* %340, align 8
  %341 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %8, align 8
  %342 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %341, i64 0, i32 2
  %343 = load i64, i64* %342, align 8
  %344 = load i64, i64* %312, align 8
  %345 = icmp ult i64 %343, %344
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = ptrtoint %"class.cc::RenderSurfaceImpl"* %341 to i64
  store i64 %347, i64* %340, align 8
  store i64 %321, i64* %10, align 8
  br label %348

348:                                              ; preds = %346, %339, %338, %332, %323, %322, %300, %287, %274, %261, %248
  %349 = phi i32 [ %304, %300 ], [ %291, %287 ], [ %278, %274 ], [ %265, %261 ], [ %252, %248 ], [ 1, %338 ], [ 0, %322 ], [ 2, %332 ], [ 1, %323 ], [ 2, %346 ], [ 1, %339 ]
  %350 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 0, i32 0, i32 0, i32 0
  %351 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %350, align 8
  %352 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %351, i64 0, i32 2
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %247, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %354, align 8
  %356 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %355, i64 0, i32 2
  %357 = load i64, i64* %356, align 8
  %358 = icmp ult i64 %353, %357
  br i1 %358, label %431, label %359

359:                                              ; preds = %348, %419
  %360 = phi %"class.std::__1::unique_ptr.86"* [ %361, %419 ], [ %7, %348 ]
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %360, i64 -1
  %362 = icmp eq %"class.std::__1::unique_ptr.86"* %20, %361
  br i1 %362, label %363, label %419

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 1
  %365 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %14, align 8
  %366 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %365, i64 0, i32 2
  %367 = load i64, i64* %366, align 8
  %368 = icmp ult i64 %353, %367
  %369 = ptrtoint %"class.cc::RenderSurfaceImpl"* %365 to i64
  br i1 %368, label %386, label %370

370:                                              ; preds = %363
  %371 = icmp eq %"class.std::__1::unique_ptr.86"* %364, %7
  br i1 %371, label %515, label %372

372:                                              ; preds = %370, %383
  %373 = phi %"class.std::__1::unique_ptr.86"* [ %384, %383 ], [ %364, %370 ]
  %374 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %373, i64 0, i32 0, i32 0, i32 0
  %375 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %374, align 8
  %376 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %375, i64 0, i32 2
  %377 = load i64, i64* %376, align 8
  %378 = icmp ult i64 %353, %377
  br i1 %378, label %379, label %383

379:                                              ; preds = %372
  %380 = ptrtoint %"class.cc::RenderSurfaceImpl"* %375 to i64
  %381 = bitcast %"class.std::__1::unique_ptr.86"* %373 to i64*
  store i64 %369, i64* %381, align 8
  store i64 %380, i64* %15, align 8
  %382 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %373, i64 1
  br label %386

383:                                              ; preds = %372
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %373, i64 1
  %385 = icmp eq %"class.std::__1::unique_ptr.86"* %384, %7
  br i1 %385, label %515, label %372

386:                                              ; preds = %379, %363
  %387 = phi %"class.std::__1::unique_ptr.86"* [ %364, %363 ], [ %382, %379 ]
  %388 = icmp eq %"class.std::__1::unique_ptr.86"* %387, %7
  br i1 %388, label %515, label %389

389:                                              ; preds = %386, %415
  %390 = phi %"class.std::__1::unique_ptr.86"* [ %402, %415 ], [ %387, %386 ]
  %391 = phi %"class.std::__1::unique_ptr.86"* [ %407, %415 ], [ %7, %386 ]
  %392 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %350, align 8
  %393 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %392, i64 0, i32 2
  %394 = load i64, i64* %393, align 8
  br label %395

395:                                              ; preds = %395, %389
  %396 = phi %"class.std::__1::unique_ptr.86"* [ %390, %389 ], [ %402, %395 ]
  %397 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %396, i64 0, i32 0, i32 0, i32 0
  %398 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %397, align 8
  %399 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %398, i64 0, i32 2
  %400 = load i64, i64* %399, align 8
  %401 = icmp ult i64 %394, %400
  %402 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %396, i64 1
  br i1 %401, label %403, label %395

403:                                              ; preds = %395
  %404 = ptrtoint %"class.cc::RenderSurfaceImpl"* %398 to i64
  br label %405

405:                                              ; preds = %403, %405
  %406 = phi %"class.std::__1::unique_ptr.86"* [ %407, %405 ], [ %391, %403 ]
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %406, i64 -1
  %408 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %407, i64 0, i32 0, i32 0, i32 0
  %409 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %408, align 8
  %410 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %409, i64 0, i32 2
  %411 = load i64, i64* %410, align 8
  %412 = icmp ult i64 %394, %411
  br i1 %412, label %405, label %413

413:                                              ; preds = %405
  %414 = icmp ult %"class.std::__1::unique_ptr.86"* %396, %407
  br i1 %414, label %415, label %19

415:                                              ; preds = %413
  %416 = ptrtoint %"class.cc::RenderSurfaceImpl"* %409 to i64
  %417 = bitcast %"class.std::__1::unique_ptr.86"* %396 to i64*
  %418 = bitcast %"class.std::__1::unique_ptr.86"* %407 to i64*
  store i64 %416, i64* %417, align 8
  store i64 %404, i64* %418, align 8
  br label %389

419:                                              ; preds = %359
  %420 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %361, i64 0, i32 0, i32 0, i32 0
  %421 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %420, align 8
  %422 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %421, i64 0, i32 2
  %423 = load i64, i64* %422, align 8
  %424 = icmp ult i64 %423, %357
  br i1 %424, label %425, label %359

425:                                              ; preds = %419
  %426 = ptrtoint %"class.cc::RenderSurfaceImpl"* %351 to i64
  %427 = ptrtoint %"class.cc::RenderSurfaceImpl"* %421 to i64
  %428 = bitcast %"class.std::__1::unique_ptr.86"* %20 to i64*
  %429 = bitcast %"class.std::__1::unique_ptr.86"* %361 to i64*
  store i64 %427, i64* %428, align 8
  store i64 %426, i64* %429, align 8
  %430 = add i32 %349, 1
  br label %431

431:                                              ; preds = %348, %425
  %432 = phi i32 [ %430, %425 ], [ %349, %348 ]
  %433 = phi %"class.std::__1::unique_ptr.86"* [ %361, %425 ], [ %7, %348 ]
  %434 = ptrtoint %"class.std::__1::unique_ptr.86"* %20 to i64
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %20, i64 1
  %436 = icmp ult %"class.std::__1::unique_ptr.86"* %435, %433
  br i1 %436, label %437, label %473

437:                                              ; preds = %431, %466
  %438 = phi %"class.std::__1::unique_ptr.86"* [ %472, %466 ], [ %247, %431 ]
  %439 = phi i32 [ %470, %466 ], [ %432, %431 ]
  %440 = phi %"class.std::__1::unique_ptr.86"* [ %453, %466 ], [ %435, %431 ]
  %441 = phi %"class.std::__1::unique_ptr.86"* [ %458, %466 ], [ %433, %431 ]
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %438, i64 0, i32 0, i32 0, i32 0
  %443 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %442, align 8
  %444 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %443, i64 0, i32 2
  %445 = load i64, i64* %444, align 8
  br label %446

446:                                              ; preds = %446, %437
  %447 = phi %"class.std::__1::unique_ptr.86"* [ %440, %437 ], [ %453, %446 ]
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %448, align 8
  %450 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %449, i64 0, i32 2
  %451 = load i64, i64* %450, align 8
  %452 = icmp ult i64 %451, %445
  %453 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %447, i64 1
  br i1 %452, label %446, label %454

454:                                              ; preds = %446
  %455 = ptrtoint %"class.cc::RenderSurfaceImpl"* %449 to i64
  br label %456

456:                                              ; preds = %454, %456
  %457 = phi %"class.std::__1::unique_ptr.86"* [ %458, %456 ], [ %441, %454 ]
  %458 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %457, i64 -1
  %459 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %458, i64 0, i32 0, i32 0, i32 0
  %460 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %459, align 8
  %461 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %460, i64 0, i32 2
  %462 = load i64, i64* %461, align 8
  %463 = icmp ult i64 %462, %445
  br i1 %463, label %464, label %456

464:                                              ; preds = %456
  %465 = icmp ugt %"class.std::__1::unique_ptr.86"* %447, %458
  br i1 %465, label %473, label %466

466:                                              ; preds = %464
  %467 = ptrtoint %"class.cc::RenderSurfaceImpl"* %460 to i64
  %468 = bitcast %"class.std::__1::unique_ptr.86"* %447 to i64*
  %469 = bitcast %"class.std::__1::unique_ptr.86"* %458 to i64*
  store i64 %467, i64* %468, align 8
  store i64 %455, i64* %469, align 8
  %470 = add i32 %439, 1
  %471 = icmp eq %"class.std::__1::unique_ptr.86"* %438, %447
  %472 = select i1 %471, %"class.std::__1::unique_ptr.86"* %458, %"class.std::__1::unique_ptr.86"* %438
  br label %437

473:                                              ; preds = %464, %431
  %474 = phi %"class.std::__1::unique_ptr.86"* [ %247, %431 ], [ %438, %464 ]
  %475 = phi i32 [ %432, %431 ], [ %439, %464 ]
  %476 = phi %"class.std::__1::unique_ptr.86"* [ %435, %431 ], [ %447, %464 ]
  %477 = icmp eq %"class.std::__1::unique_ptr.86"* %476, %474
  br i1 %477, label %494, label %478

478:                                              ; preds = %473
  %479 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %474, i64 0, i32 0, i32 0, i32 0
  %480 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %479, align 8
  %481 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %480, i64 0, i32 2
  %482 = load i64, i64* %481, align 8
  %483 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %476, i64 0, i32 0, i32 0, i32 0
  %484 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %483, align 8
  %485 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %484, i64 0, i32 2
  %486 = load i64, i64* %485, align 8
  %487 = icmp ult i64 %482, %486
  br i1 %487, label %488, label %494

488:                                              ; preds = %478
  %489 = ptrtoint %"class.cc::RenderSurfaceImpl"* %480 to i64
  %490 = ptrtoint %"class.cc::RenderSurfaceImpl"* %484 to i64
  %491 = bitcast %"class.std::__1::unique_ptr.86"* %476 to i64*
  %492 = bitcast %"class.std::__1::unique_ptr.86"* %474 to i64*
  store i64 %489, i64* %491, align 8
  store i64 %490, i64* %492, align 8
  %493 = add i32 %475, 1
  br label %494

494:                                              ; preds = %473, %488, %478
  %495 = phi i32 [ %493, %488 ], [ %475, %478 ], [ %475, %473 ]
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %504

497:                                              ; preds = %494
  %498 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEbT0_SI_T_"(%"class.std::__1::unique_ptr.86"* %20, %"class.std::__1::unique_ptr.86"* %476)
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %476, i64 1
  %500 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEbT0_SI_T_"(%"class.std::__1::unique_ptr.86"* %499, %"class.std::__1::unique_ptr.86"* %4)
  br i1 %500, label %501, label %503

501:                                              ; preds = %497
  br i1 %498, label %515, label %502

502:                                              ; preds = %501, %513
  br label %3

503:                                              ; preds = %497
  br i1 %498, label %511, label %504

504:                                              ; preds = %503, %494
  %505 = ptrtoint %"class.std::__1::unique_ptr.86"* %476 to i64
  %506 = sub i64 %505, %434
  %507 = sub i64 %16, %505
  %508 = icmp slt i64 %506, %507
  br i1 %508, label %509, label %513

509:                                              ; preds = %504
  tail call fastcc void @"_ZNSt3__16__sortIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEvT0_SI_T_"(%"class.std::__1::unique_ptr.86"* %20, %"class.std::__1::unique_ptr.86"* %476)
  %510 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %476, i64 1
  br label %511

511:                                              ; preds = %509, %503
  %512 = phi %"class.std::__1::unique_ptr.86"* [ %499, %503 ], [ %510, %509 ]
  br label %17

513:                                              ; preds = %504
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %476, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEvT0_SI_T_"(%"class.std::__1::unique_ptr.86"* %514, %"class.std::__1::unique_ptr.86"* %4)
  br label %502

515:                                              ; preds = %501, %386, %19, %19, %370, %383, %239, %186, %141, %132, %122, %109, %94, %86, %79, %77, %71, %61, %60, %24, %35, %89
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEjT0_SI_SI_SI_T_"(%"class.std::__1::unique_ptr.86"* nocapture, %"class.std::__1::unique_ptr.86"* nocapture, %"class.std::__1::unique_ptr.86"* nocapture, %"class.std::__1::unique_ptr.86"* nocapture) unnamed_addr #5 {
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %6, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %10, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %8, %12
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %8
  %19 = ptrtoint %"class.cc::RenderSurfaceImpl"* %6 to i64
  %20 = ptrtoint %"class.cc::RenderSurfaceImpl"* %15 to i64
  %21 = ptrtoint %"class.cc::RenderSurfaceImpl"* %10 to i64
  br i1 %13, label %39, label %22

22:                                               ; preds = %4
  br i1 %18, label %23, label %53

23:                                               ; preds = %22
  %24 = bitcast %"class.std::__1::unique_ptr.86"* %1 to i64*
  %25 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i64*
  store i64 %20, i64* %24, align 8
  store i64 %19, i64* %25, align 8
  %26 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %5, align 8
  %27 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %26, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %9, align 8
  %30 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %29, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %28, %31
  br i1 %32, label %33, label %53

33:                                               ; preds = %23
  %34 = ptrtoint %"class.cc::RenderSurfaceImpl"* %26 to i64
  %35 = ptrtoint %"class.cc::RenderSurfaceImpl"* %29 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  store i64 %34, i64* %36, align 8
  store i64 %35, i64* %24, align 8
  %37 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %14, align 8
  %38 = ptrtoint %"class.cc::RenderSurfaceImpl"* %37 to i64
  br label %53

39:                                               ; preds = %4
  %40 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  br i1 %18, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i64*
  store i64 %20, i64* %40, align 8
  store i64 %21, i64* %42, align 8
  br label %53

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::unique_ptr.86"* %1 to i64*
  store i64 %19, i64* %40, align 8
  store i64 %21, i64* %44, align 8
  %45 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %14, align 8
  %46 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %45, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* %11, align 8
  %49 = icmp ult i64 %47, %48
  %50 = ptrtoint %"class.cc::RenderSurfaceImpl"* %45 to i64
  br i1 %49, label %51, label %53

51:                                               ; preds = %43
  %52 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i64*
  store i64 %50, i64* %44, align 8
  store i64 %21, i64* %52, align 8
  br label %53

53:                                               ; preds = %22, %23, %33, %41, %43, %51
  %54 = phi i64 [ %21, %41 ], [ %20, %22 ], [ %38, %33 ], [ %19, %23 ], [ %21, %51 ], [ %50, %43 ]
  %55 = phi %"class.cc::RenderSurfaceImpl"* [ %10, %41 ], [ %15, %22 ], [ %37, %33 ], [ %6, %23 ], [ %10, %51 ], [ %45, %43 ]
  %56 = phi i32 [ 1, %41 ], [ 0, %22 ], [ 2, %33 ], [ 1, %23 ], [ 2, %51 ], [ 1, %43 ]
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %55, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %64, label %93

64:                                               ; preds = %53
  %65 = ptrtoint %"class.cc::RenderSurfaceImpl"* %58 to i64
  %66 = bitcast %"class.std::__1::unique_ptr.86"* %2 to i64*
  %67 = bitcast %"class.std::__1::unique_ptr.86"* %3 to i64*
  store i64 %65, i64* %66, align 8
  store i64 %54, i64* %67, align 8
  %68 = add nuw nsw i32 %56, 1
  %69 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %14, align 8
  %70 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %69, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %5, align 8
  %73 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %72, i64 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %76, label %93

76:                                               ; preds = %64
  %77 = ptrtoint %"class.cc::RenderSurfaceImpl"* %69 to i64
  %78 = ptrtoint %"class.cc::RenderSurfaceImpl"* %72 to i64
  %79 = bitcast %"class.std::__1::unique_ptr.86"* %1 to i64*
  store i64 %77, i64* %79, align 8
  store i64 %78, i64* %66, align 8
  %80 = add nuw nsw i32 %56, 2
  %81 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %5, align 8
  %82 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %81, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %9, align 8
  %85 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %84, i64 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %83, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %76
  %89 = ptrtoint %"class.cc::RenderSurfaceImpl"* %81 to i64
  %90 = ptrtoint %"class.cc::RenderSurfaceImpl"* %84 to i64
  %91 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  store i64 %89, i64* %91, align 8
  store i64 %90, i64* %79, align 8
  %92 = add nuw nsw i32 %56, 3
  br label %93

93:                                               ; preds = %64, %88, %76, %53
  %94 = phi i32 [ %92, %88 ], [ %80, %76 ], [ %68, %64 ], [ %56, %53 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEbT0_SI_T_"(%"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"*) unnamed_addr #0 {
  %3 = ptrtoint %"class.std::__1::unique_ptr.86"* %1 to i64
  %4 = ptrtoint %"class.std::__1::unique_ptr.86"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %127 [
    i64 0, label %234
    i64 1, label %234
    i64 2, label %7
    i64 3, label %23
    i64 4, label %72
    i64 5, label %77
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %1, i64 -1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %10, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %12, %16
  br i1 %17, label %18, label %234

18:                                               ; preds = %7
  %19 = ptrtoint %"class.cc::RenderSurfaceImpl"* %10 to i64
  %20 = ptrtoint %"class.cc::RenderSurfaceImpl"* %14 to i64
  %21 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  %22 = bitcast %"class.std::__1::unique_ptr.86"* %8 to i64*
  store i64 %19, i64* %21, align 8
  store i64 %20, i64* %22, align 8
  br label %234

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %1, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %31, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %29, %33
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %25, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %36, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %38, %29
  %40 = ptrtoint %"class.cc::RenderSurfaceImpl"* %27 to i64
  %41 = ptrtoint %"class.cc::RenderSurfaceImpl"* %36 to i64
  %42 = ptrtoint %"class.cc::RenderSurfaceImpl"* %31 to i64
  br i1 %34, label %58, label %43

43:                                               ; preds = %23
  br i1 %39, label %44, label %234

44:                                               ; preds = %43
  %45 = bitcast %"class.std::__1::unique_ptr.86"* %24 to i64*
  %46 = bitcast %"class.std::__1::unique_ptr.86"* %25 to i64*
  store i64 %41, i64* %45, align 8
  store i64 %40, i64* %46, align 8
  %47 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %26, align 8
  %48 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %47, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %30, align 8
  %51 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %50, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %54, label %234

54:                                               ; preds = %44
  %55 = ptrtoint %"class.cc::RenderSurfaceImpl"* %47 to i64
  %56 = ptrtoint %"class.cc::RenderSurfaceImpl"* %50 to i64
  %57 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  store i64 %55, i64* %57, align 8
  store i64 %56, i64* %45, align 8
  br label %234

58:                                               ; preds = %23
  %59 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  br i1 %39, label %60, label %62

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::unique_ptr.86"* %25 to i64*
  store i64 %41, i64* %59, align 8
  store i64 %42, i64* %61, align 8
  br label %234

62:                                               ; preds = %58
  %63 = bitcast %"class.std::__1::unique_ptr.86"* %24 to i64*
  store i64 %40, i64* %59, align 8
  store i64 %42, i64* %63, align 8
  %64 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %35, align 8
  %65 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %64, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %32, align 8
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %69, label %234

69:                                               ; preds = %62
  %70 = ptrtoint %"class.cc::RenderSurfaceImpl"* %64 to i64
  %71 = bitcast %"class.std::__1::unique_ptr.86"* %25 to i64*
  store i64 %70, i64* %63, align 8
  store i64 %42, i64* %71, align 8
  br label %234

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 2
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %1, i64 -1
  %76 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEjT0_SI_SI_SI_T_"(%"class.std::__1::unique_ptr.86"* %0, %"class.std::__1::unique_ptr.86"* %73, %"class.std::__1::unique_ptr.86"* %74, %"class.std::__1::unique_ptr.86"* %75)
  br label %234

77:                                               ; preds = %2
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 1
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 2
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 3
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %1, i64 -1
  %82 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2cc10EffectTree27CreateOrReuseRenderSurfacesEPNS_6vectorINS_10unique_ptrINS1_17RenderSurfaceImplENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEEEPNS1_13LayerTreeImplEE3$_0PS8_EEjT0_SI_SI_SI_T_"(%"class.std::__1::unique_ptr.86"* %0, %"class.std::__1::unique_ptr.86"* %78, %"class.std::__1::unique_ptr.86"* %79, %"class.std::__1::unique_ptr.86"* %80) #18
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %81, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %84, i64 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %80, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %88, i64 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = icmp ult i64 %86, %90
  br i1 %91, label %92, label %234

92:                                               ; preds = %77
  %93 = ptrtoint %"class.cc::RenderSurfaceImpl"* %84 to i64
  %94 = ptrtoint %"class.cc::RenderSurfaceImpl"* %88 to i64
  %95 = bitcast %"class.std::__1::unique_ptr.86"* %80 to i64*
  %96 = bitcast %"class.std::__1::unique_ptr.86"* %81 to i64*
  store i64 %93, i64* %95, align 8
  store i64 %94, i64* %96, align 8
  %97 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %87, align 8
  %98 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %97, i64 0, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %79, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %101, i64 0, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = icmp ult i64 %99, %103
  br i1 %104, label %105, label %234

105:                                              ; preds = %92
  %106 = ptrtoint %"class.cc::RenderSurfaceImpl"* %97 to i64
  %107 = ptrtoint %"class.cc::RenderSurfaceImpl"* %101 to i64
  %108 = bitcast %"class.std::__1::unique_ptr.86"* %79 to i64*
  store i64 %106, i64* %108, align 8
  store i64 %107, i64* %95, align 8
  %109 = load i64, i64* %98, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %78, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %111, i64 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = icmp ult i64 %109, %113
  br i1 %114, label %115, label %234

115:                                              ; preds = %105
  %116 = ptrtoint %"class.cc::RenderSurfaceImpl"* %111 to i64
  %117 = bitcast %"class.std::__1::unique_ptr.86"* %78 to i64*
  store i64 %106, i64* %117, align 8
  store i64 %116, i64* %108, align 8
  %118 = load i64, i64* %98, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %120, i64 0, i32 2
  %122 = load i64, i64* %121, align 8
  %123 = icmp ult i64 %118, %122
  br i1 %123, label %124, label %234

124:                                              ; preds = %115
  %125 = ptrtoint %"class.cc::RenderSurfaceImpl"* %120 to i64
  %126 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  store i64 %106, i64* %126, align 8
  store i64 %125, i64* %117, align 8
  br label %234

127:                                              ; preds = %2
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 2
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 1
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %131, i64 0, i32 2
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %134, align 8
  %136 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %135, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = icmp ult i64 %133, %137
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %128, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %140, i64 0, i32 2
  %142 = load i64, i64* %141, align 8
  %143 = icmp ult i64 %142, %133
  %144 = ptrtoint %"class.cc::RenderSurfaceImpl"* %131 to i64
  %145 = ptrtoint %"class.cc::RenderSurfaceImpl"* %140 to i64
  %146 = ptrtoint %"class.cc::RenderSurfaceImpl"* %135 to i64
  br i1 %138, label %156, label %147

147:                                              ; preds = %127
  br i1 %143, label %148, label %167

148:                                              ; preds = %147
  %149 = bitcast %"class.std::__1::unique_ptr.86"* %129 to i64*
  %150 = bitcast %"class.std::__1::unique_ptr.86"* %128 to i64*
  store i64 %145, i64* %149, align 8
  store i64 %144, i64* %150, align 8
  %151 = load i64, i64* %141, align 8
  %152 = load i64, i64* %136, align 8
  %153 = icmp ult i64 %151, %152
  br i1 %153, label %154, label %167

154:                                              ; preds = %148
  %155 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  store i64 %145, i64* %155, align 8
  store i64 %146, i64* %149, align 8
  br label %167

156:                                              ; preds = %127
  %157 = bitcast %"class.std::__1::unique_ptr.86"* %0 to i64*
  br i1 %143, label %158, label %160

158:                                              ; preds = %156
  %159 = bitcast %"class.std::__1::unique_ptr.86"* %128 to i64*
  store i64 %145, i64* %157, align 8
  store i64 %146, i64* %159, align 8
  br label %167

160:                                              ; preds = %156
  %161 = bitcast %"class.std::__1::unique_ptr.86"* %129 to i64*
  store i64 %144, i64* %157, align 8
  store i64 %146, i64* %161, align 8
  %162 = load i64, i64* %141, align 8
  %163 = load i64, i64* %136, align 8
  %164 = icmp ult i64 %162, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = bitcast %"class.std::__1::unique_ptr.86"* %128 to i64*
  store i64 %145, i64* %161, align 8
  store i64 %146, i64* %166, align 8
  br label %167

167:                                              ; preds = %147, %148, %154, %158, %160, %165
  %168 = phi %"class.cc::RenderSurfaceImpl"* [ %140, %147 ], [ %131, %148 ], [ %131, %154 ], [ %135, %158 ], [ %140, %160 ], [ %135, %165 ]
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %0, i64 3
  %170 = icmp eq %"class.std::__1::unique_ptr.86"* %169, %1
  br i1 %170, label %234, label %171

171:                                              ; preds = %167, %228
  %172 = phi %"class.cc::RenderSurfaceImpl"* [ %230, %228 ], [ %168, %167 ]
  %173 = phi %"class.std::__1::unique_ptr.86"* [ %226, %228 ], [ %169, %167 ]
  %174 = phi i32 [ %225, %228 ], [ 0, %167 ]
  %175 = phi %"class.std::__1::unique_ptr.86"* [ %173, %228 ], [ %128, %167 ]
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %173, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %176, align 8
  %178 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %177, i64 0, i32 2
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %172, i64 0, i32 2
  %181 = load i64, i64* %180, align 8
  %182 = icmp ult i64 %179, %181
  %183 = ptrtoint %"class.cc::RenderSurfaceImpl"* %177 to i64
  br i1 %182, label %184, label %224

184:                                              ; preds = %171
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %176, align 8
  br label %185

185:                                              ; preds = %202, %184
  %186 = phi %"class.std::__1::unique_ptr.86"* [ %173, %184 ], [ %187, %202 ]
  %187 = phi %"class.std::__1::unique_ptr.86"* [ %175, %184 ], [ %203, %202 ]
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr.86"* %187 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %188, align 8
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %186, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %191, align 8
  %193 = bitcast %"class.std::__1::unique_ptr.86"* %186 to i64*
  store i64 %190, i64* %193, align 8
  %194 = icmp eq %"class.cc::RenderSurfaceImpl"* %192, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %185
  %196 = bitcast %"class.cc::RenderSurfaceImpl"* %192 to void (%"class.cc::RenderSurfaceImpl"*)***
  %197 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %197, i64 1
  %199 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %198, align 8
  tail call void %199(%"class.cc::RenderSurfaceImpl"* nonnull %192) #18
  br label %200

200:                                              ; preds = %185, %195
  %201 = icmp eq %"class.std::__1::unique_ptr.86"* %187, %0
  br i1 %201, label %210, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %187, i64 -1
  %204 = load i64, i64* %178, align 8
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %203, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %205, align 8
  %207 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %206, i64 0, i32 2
  %208 = load i64, i64* %207, align 8
  %209 = icmp ult i64 %204, %208
  br i1 %209, label %185, label %210

210:                                              ; preds = %200, %202
  %211 = phi %"class.std::__1::unique_ptr.86"* [ %187, %202 ], [ %0, %200 ]
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.86"* %211 to i64*
  %214 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %212, align 8
  store i64 %183, i64* %213, align 8
  %215 = icmp eq %"class.cc::RenderSurfaceImpl"* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %210
  %217 = bitcast %"class.cc::RenderSurfaceImpl"* %214 to void (%"class.cc::RenderSurfaceImpl"*)***
  %218 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %218, i64 1
  %220 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %219, align 8
  tail call void %220(%"class.cc::RenderSurfaceImpl"* nonnull %214) #18
  br label %221

221:                                              ; preds = %216, %210
  %222 = add i32 %174, 1
  %223 = icmp eq i32 %222, 8
  br i1 %223, label %231, label %224

224:                                              ; preds = %221, %171
  %225 = phi i32 [ %222, %221 ], [ %174, %171 ]
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %173, i64 1
  %227 = icmp eq %"class.std::__1::unique_ptr.86"* %226, %1
  br i1 %227, label %234, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %173, i64 0, i32 0, i32 0, i32 0
  %230 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %229, align 8
  br label %171

231:                                              ; preds = %221
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %173, i64 1
  %233 = icmp eq %"class.std::__1::unique_ptr.86"* %232, %1
  br label %234

234:                                              ; preds = %224, %231, %167, %124, %115, %105, %92, %77, %69, %62, %60, %54, %44, %43, %7, %18, %2, %2, %72
  %235 = phi i1 [ true, %72 ], [ true, %2 ], [ true, %2 ], [ true, %18 ], [ true, %7 ], [ true, %43 ], [ true, %44 ], [ true, %54 ], [ true, %60 ], [ true, %62 ], [ true, %69 ], [ true, %77 ], [ true, %92 ], [ true, %105 ], [ true, %115 ], [ true, %124 ], [ true, %167 ], [ %233, %231 ], [ true, %224 ]
  ret i1 %235
}

declare void @_ZN2cc17RenderSurfaceImplC1EPNS_13LayerTreeImplEm(%"class.cc::RenderSurfaceImpl"*, %"class.cc::LayerTreeImpl"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2cc17RenderSurfaceImplENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.84"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.86"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.86"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.86"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"class.cc::RenderSurfaceImpl"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #18
  %26 = ptrtoint %"class.std::__1::unique_ptr.86"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %217

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #19
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #19
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #20
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.86"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.86"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr.86"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr.86"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.86"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !20

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr.86"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr.86"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr.86"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr.86"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr.86"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr.86"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr.86"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr.86"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr.86"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr.86"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr.86"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr.86"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr.86"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr.86"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr.86"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr.86"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %"class.cc::RenderSurfaceImpl"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr.86"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr.86"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.86"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.86"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !21

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr.86"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr.86"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr.86"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr.86"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr.86"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.86"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.86"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.86"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.86"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.86"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.86"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.86"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.86"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr.86"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.86"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.86"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.86"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr.86"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.86"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.86"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.86"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.86"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr.86"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr.86"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr.86"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.86"*
  %199 = icmp eq %"class.std::__1::unique_ptr.86"* %195, %198
  br i1 %199, label %213, label %200

200:                                              ; preds = %194, %211
  %201 = phi %"class.std::__1::unique_ptr.86"* [ %202, %211 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %203, align 8
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %203, align 8
  %205 = icmp eq %"class.cc::RenderSurfaceImpl"* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %200
  %207 = bitcast %"class.cc::RenderSurfaceImpl"* %204 to void (%"class.cc::RenderSurfaceImpl"*)***
  %208 = load void (%"class.cc::RenderSurfaceImpl"*)**, void (%"class.cc::RenderSurfaceImpl"*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %208, i64 1
  %210 = load void (%"class.cc::RenderSurfaceImpl"*)*, void (%"class.cc::RenderSurfaceImpl"*)** %209, align 8
  tail call void %210(%"class.cc::RenderSurfaceImpl"* nonnull %204) #18
  br label %211

211:                                              ; preds = %206, %200
  %212 = icmp eq %"class.std::__1::unique_ptr.86"* %202, %198
  br i1 %212, label %213, label %200

213:                                              ; preds = %211, %194
  %214 = icmp eq i64 %197, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %213
  %216 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %216) #20
  br label %217

217:                                              ; preds = %215, %213, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.155"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdE13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEENS_9allocatorISC_EEE7emplaceIJRKS3_SB_EEENS_11__wrap_iterIPSC_EENSJ_IPKSC_EEDpOT_(%"class.std::__1::vector.153"*, %"struct.std::__1::pair.155"*, %"struct.cc::ElementId"* dereferenceable(8), %class.scoped_refptr.1311* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.155"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.1512", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.153", %"class.std::__1::vector.153"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.153", %"class.std::__1::vector.153"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.153", %"class.std::__1::vector.153"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.155"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.155"* %11 to i64
  br i1 %12, label %14, label %163

14:                                               ; preds = %4
  %15 = icmp eq %"struct.std::__1::pair.155"* %9, %1
  %16 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  br i1 %15, label %17, label %28

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 0, i32 0, i32 0
  %19 = load i64, i64* %16, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %3, i64 0, i32 0
  %22 = bitcast %class.scoped_refptr.1311* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.scoped_refptr.1311* %20 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %21, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 1
  %26 = ptrtoint %"struct.std::__1::pair.155"* %25 to i64
  %27 = bitcast %"struct.std::__1::pair.155"** %8 to i64*
  store i64 %26, i64* %27, align 8
  br label %376

28:                                               ; preds = %14
  %29 = load i64, i64* %16, align 8
  %30 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %3, i64 0, i32 0
  %31 = bitcast %class.scoped_refptr.1311* %3 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %30, align 8
  %33 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %8, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 1
  %35 = ptrtoint %"struct.std::__1::pair.155"* %33 to i64
  %36 = ptrtoint %"struct.std::__1::pair.155"* %34 to i64
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 4
  %39 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 %38
  %40 = bitcast %"struct.std::__1::pair.155"** %8 to i64*
  %41 = icmp ult %"struct.std::__1::pair.155"* %39, %33
  br i1 %41, label %42, label %78

42:                                               ; preds = %28
  %43 = sub nsw i64 0, %38
  %44 = getelementptr %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %33, i64 %43, i32 0, i32 0
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %5, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 4
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 3
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %42, %53
  %54 = phi %"struct.std::__1::pair.155"* [ %67, %53 ], [ %33, %42 ]
  %55 = phi %"struct.std::__1::pair.155"* [ %66, %53 ], [ %39, %42 ]
  %56 = phi i64 [ %68, %53 ], [ %51, %42 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %55, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %54, i64 0, i32 0, i32 0
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %54, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %55, i64 0, i32 1
  %62 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %61, i64 0, i32 0
  %63 = bitcast %class.scoped_refptr.1311* %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %class.scoped_refptr.1311* %60 to i64*
  store i64 %64, i64* %65, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %62, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %55, i64 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %54, i64 1
  %68 = add i64 %56, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %53, !llvm.loop !22

70:                                               ; preds = %53, %42
  %71 = phi %"struct.std::__1::pair.155"* [ %33, %42 ], [ %67, %53 ]
  %72 = phi %"struct.std::__1::pair.155"* [ %39, %42 ], [ %66, %53 ]
  %73 = phi %"struct.std::__1::pair.155"* [ undef, %42 ], [ %67, %53 ]
  %74 = icmp ult i8* %47, inttoptr (i64 48 to i8*)
  br i1 %74, label %75, label %107

75:                                               ; preds = %107, %70
  %76 = phi %"struct.std::__1::pair.155"* [ %73, %70 ], [ %147, %107 ]
  %77 = ptrtoint %"struct.std::__1::pair.155"* %76 to i64
  br label %78

78:                                               ; preds = %75, %28
  %79 = phi i64 [ %77, %75 ], [ %35, %28 ]
  store i64 %79, i64* %40, align 8
  %80 = icmp eq i64 %37, 0
  br i1 %80, label %149, label %81

81:                                               ; preds = %78, %105
  %82 = phi %"struct.std::__1::pair.155"* [ %85, %105 ], [ %33, %78 ]
  %83 = phi %"struct.std::__1::pair.155"* [ %84, %105 ], [ %39, %78 ]
  %84 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %83, i64 -1
  %85 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %82, i64 -1
  %86 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %84, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %85, i64 0, i32 0, i32 0
  %88 = load i64, i64* %86, align 8
  store i64 %88, i64* %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %83, i64 -1, i32 1
  %90 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %89, i64 0, i32 0
  %91 = bitcast %class.scoped_refptr.1311* %89 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %90, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %82, i64 -1, i32 1
  %94 = bitcast %class.scoped_refptr.1311* %93 to i64*
  %95 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %93, i64 0, i32 0
  %96 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %95, align 8
  store i64 %92, i64* %94, align 8
  %97 = icmp eq %"class.cc::SyncedProperty.1312"* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %99) #18
  %100 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %96, i64 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = bitcast %"class.cc::SyncedProperty.1312"* %96 to i8*
  tail call void @_ZdlPv(i8* %104) #20
  br label %105

105:                                              ; preds = %103, %98, %81
  %106 = icmp eq %"struct.std::__1::pair.155"* %84, %1
  br i1 %106, label %149, label %81

107:                                              ; preds = %70, %107
  %108 = phi %"struct.std::__1::pair.155"* [ %147, %107 ], [ %71, %70 ]
  %109 = phi %"struct.std::__1::pair.155"* [ %146, %107 ], [ %72, %70 ]
  %110 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 0, i32 0, i32 0
  %112 = load i64, i64* %110, align 8
  store i64 %112, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 0, i32 1
  %114 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 0, i32 1
  %115 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %114, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr.1311* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr.1311* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %115, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 1, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 1, i32 0, i32 0
  %121 = load i64, i64* %119, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 1, i32 1
  %123 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 1, i32 1
  %124 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %123, i64 0, i32 0
  %125 = bitcast %class.scoped_refptr.1311* %123 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %class.scoped_refptr.1311* %122 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %124, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 2, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 2, i32 0, i32 0
  %130 = load i64, i64* %128, align 8
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 2, i32 1
  %132 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 2, i32 1
  %133 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %132, i64 0, i32 0
  %134 = bitcast %class.scoped_refptr.1311* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %class.scoped_refptr.1311* %131 to i64*
  store i64 %135, i64* %136, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %133, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 3, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 3, i32 0, i32 0
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 3, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 3, i32 1
  %142 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %141, i64 0, i32 0
  %143 = bitcast %class.scoped_refptr.1311* %141 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %class.scoped_refptr.1311* %140 to i64*
  store i64 %144, i64* %145, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %142, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %109, i64 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %108, i64 4
  %148 = icmp ult %"struct.std::__1::pair.155"* %146, %33
  br i1 %148, label %107, label %75

149:                                              ; preds = %105, %78
  %150 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 0, i32 0, i32 0
  store i64 %29, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 0, i32 1
  %152 = bitcast %class.scoped_refptr.1311* %151 to i64*
  %153 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %151, i64 0, i32 0
  %154 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %153, align 8
  store i64 %32, i64* %152, align 8
  %155 = icmp eq %"class.cc::SyncedProperty.1312"* %154, null
  br i1 %155, label %376, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %154, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %157) #18
  %158 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %154, i64 0, i32 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %376

161:                                              ; preds = %156
  %162 = bitcast %"class.cc::SyncedProperty.1312"* %154 to i8*
  tail call void @_ZdlPv(i8* %162) #20
  br label %376

163:                                              ; preds = %4
  %164 = ptrtoint %"struct.std::__1::pair.155"* %9 to i64
  %165 = getelementptr inbounds %"class.std::__1::vector.153", %"class.std::__1::vector.153"* %0, i64 0, i32 0, i32 2
  %166 = bitcast %"struct.std::__1::__split_buffer.1512"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %166) #18
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %6, i64 0, i32 0
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %6, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %6, i64 0, i32 2
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %6, i64 0, i32 3, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %6, i64 0, i32 3, i32 1, i32 0
  %172 = bitcast %"struct.std::__1::pair.155"** %8 to i64*
  %173 = bitcast %"class.std::__1::vector.153"* %0 to i64*
  %174 = bitcast %"struct.std::__1::__split_buffer.1512"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 40, i1 false)
  %175 = load i64, i64* %173, align 8
  %176 = sub i64 %164, %175
  %177 = ashr exact i64 %176, 4
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 1152921504606846975
  br i1 %179, label %180, label %182

180:                                              ; preds = %163
  %181 = bitcast %"class.std::__1::vector.153"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #19
  unreachable

182:                                              ; preds = %163
  %183 = bitcast %"struct.std::__1::pair.155"** %10 to i64*
  %184 = sub i64 %13, %175
  %185 = ashr exact i64 %184, 4
  %186 = icmp ult i64 %185, 576460752303423487
  br i1 %186, label %191, label %187

187:                                              ; preds = %182
  %188 = sub i64 %5, %175
  %189 = ashr exact i64 %188, 4
  store %"struct.std::__1::pair.155"* null, %"struct.std::__1::pair.155"** %170, align 8
  %190 = bitcast %"class.std::__1::allocator.159"** %171 to %"class.std::__1::__compressed_pair.156"**
  store %"class.std::__1::__compressed_pair.156"* %165, %"class.std::__1::__compressed_pair.156"** %190, align 8
  br label %202

191:                                              ; preds = %182
  %192 = ashr exact i64 %184, 3
  %193 = icmp ult i64 %192, %178
  %194 = select i1 %193, i64 %178, i64 %192
  %195 = sub i64 %5, %175
  %196 = ashr exact i64 %195, 4
  store %"struct.std::__1::pair.155"* null, %"struct.std::__1::pair.155"** %170, align 8
  %197 = bitcast %"class.std::__1::allocator.159"** %171 to %"class.std::__1::__compressed_pair.156"**
  store %"class.std::__1::__compressed_pair.156"* %165, %"class.std::__1::__compressed_pair.156"** %197, align 8
  %198 = icmp eq i64 %194, 0
  br i1 %198, label %208, label %199

199:                                              ; preds = %191
  %200 = icmp ugt i64 %194, 1152921504606846975
  br i1 %200, label %201, label %202

201:                                              ; preds = %199
  tail call void @abort() #19
  unreachable

202:                                              ; preds = %187, %199
  %203 = phi i64 [ 1152921504606846975, %187 ], [ %194, %199 ]
  %204 = phi i64 [ %189, %187 ], [ %196, %199 ]
  %205 = shl i64 %203, 4
  %206 = tail call i8* @_Znwm(i64 %205) #20
  %207 = bitcast i8* %206 to %"struct.std::__1::pair.155"*
  br label %208

208:                                              ; preds = %191, %202
  %209 = phi i64 [ %204, %202 ], [ %196, %191 ]
  %210 = phi i64 [ %203, %202 ], [ 0, %191 ]
  %211 = phi %"struct.std::__1::pair.155"* [ %207, %202 ], [ null, %191 ]
  store %"struct.std::__1::pair.155"* %211, %"struct.std::__1::pair.155"** %167, align 8
  %212 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %211, i64 %209
  store %"struct.std::__1::pair.155"* %212, %"struct.std::__1::pair.155"** %169, align 8
  store %"struct.std::__1::pair.155"* %212, %"struct.std::__1::pair.155"** %168, align 8
  %213 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %211, i64 %210
  store %"struct.std::__1::pair.155"* %213, %"struct.std::__1::pair.155"** %170, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdE13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEERNS_9allocatorISC_EEE12emplace_backIJRKS3_SB_EEEvDpOT_(%"struct.std::__1::__split_buffer.1512"* nonnull %6, %"struct.cc::ElementId"* dereferenceable(8) %2, %class.scoped_refptr.1311* dereferenceable(8) %3)
  %214 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %168, align 8
  %215 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %7, align 8
  %216 = icmp eq %"struct.std::__1::pair.155"* %215, %1
  br i1 %216, label %269, label %217

217:                                              ; preds = %208
  %218 = ptrtoint %"struct.std::__1::pair.155"* %215 to i64
  %219 = getelementptr %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 -1, i32 0, i32 0
  %220 = ptrtoint i64* %219 to i64
  %221 = sub i64 %220, %218
  %222 = and i64 %221, 16
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %237

224:                                              ; preds = %217
  %225 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 -1
  %226 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %225, i64 0, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %214, i64 -1, i32 0, i32 0
  %228 = load i64, i64* %226, align 8
  store i64 %228, i64* %227, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %214, i64 -1, i32 1
  %230 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 -1, i32 1
  %231 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %230, i64 0, i32 0
  %232 = bitcast %class.scoped_refptr.1311* %230 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %class.scoped_refptr.1311* %229 to i64*
  store i64 %233, i64* %234, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %231, align 8
  %235 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %168, align 8
  %236 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %235, i64 -1
  store %"struct.std::__1::pair.155"* %236, %"struct.std::__1::pair.155"** %168, align 8
  br label %237

237:                                              ; preds = %224, %217
  %238 = phi %"struct.std::__1::pair.155"* [ undef, %217 ], [ %236, %224 ]
  %239 = phi %"struct.std::__1::pair.155"* [ %214, %217 ], [ %236, %224 ]
  %240 = phi %"struct.std::__1::pair.155"* [ %1, %217 ], [ %225, %224 ]
  %241 = icmp ult i64 %221, 16
  br i1 %241, label %269, label %242

242:                                              ; preds = %237, %242
  %243 = phi %"struct.std::__1::pair.155"* [ %267, %242 ], [ %239, %237 ]
  %244 = phi %"struct.std::__1::pair.155"* [ %256, %242 ], [ %240, %237 ]
  %245 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %244, i64 -1, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %243, i64 -1, i32 0, i32 0
  %247 = load i64, i64* %245, align 8
  store i64 %247, i64* %246, align 8
  %248 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %243, i64 -1, i32 1
  %249 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %244, i64 -1, i32 1
  %250 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %249, i64 0, i32 0
  %251 = bitcast %class.scoped_refptr.1311* %249 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %class.scoped_refptr.1311* %248 to i64*
  store i64 %252, i64* %253, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %250, align 8
  %254 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %168, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %254, i64 -1
  store %"struct.std::__1::pair.155"* %255, %"struct.std::__1::pair.155"** %168, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %244, i64 -2
  %257 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %256, i64 0, i32 0, i32 0
  %258 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %254, i64 -2, i32 0, i32 0
  %259 = load i64, i64* %257, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %254, i64 -2, i32 1
  %261 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %244, i64 -2, i32 1
  %262 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %261, i64 0, i32 0
  %263 = bitcast %class.scoped_refptr.1311* %261 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %class.scoped_refptr.1311* %260 to i64*
  store i64 %264, i64* %265, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %262, align 8
  %266 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %168, align 8
  %267 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %266, i64 -1
  store %"struct.std::__1::pair.155"* %267, %"struct.std::__1::pair.155"** %168, align 8
  %268 = icmp eq %"struct.std::__1::pair.155"* %256, %215
  br i1 %268, label %269, label %242

269:                                              ; preds = %237, %242, %208
  %270 = phi %"struct.std::__1::pair.155"* [ %214, %208 ], [ %238, %237 ], [ %267, %242 ]
  %271 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %8, align 8
  %272 = icmp eq %"struct.std::__1::pair.155"* %271, %1
  br i1 %272, label %273, label %279

273:                                              ; preds = %269
  %274 = ptrtoint %"struct.std::__1::pair.155"* %271 to i64
  %275 = ptrtoint %"struct.std::__1::pair.155"* %270 to i64
  %276 = bitcast %"struct.std::__1::pair.155"** %168 to i64*
  %277 = bitcast %"struct.std::__1::pair.155"** %169 to i64*
  %278 = load i64, i64* %277, align 8
  br label %338

279:                                              ; preds = %269
  %280 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %169, align 8
  %281 = getelementptr %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %271, i64 -1, i32 0, i32 0
  %282 = ptrtoint i64* %281 to i64
  %283 = sub i64 %282, %5
  %284 = and i64 %283, 16
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %299

286:                                              ; preds = %279
  %287 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %280, i64 0, i32 0, i32 0
  %289 = load i64, i64* %287, align 8
  store i64 %289, i64* %288, align 8
  %290 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %280, i64 0, i32 1
  %291 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 0, i32 1
  %292 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %291, i64 0, i32 0
  %293 = bitcast %class.scoped_refptr.1311* %291 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %class.scoped_refptr.1311* %290 to i64*
  store i64 %294, i64* %295, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %292, align 8
  %296 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %1, i64 1
  %297 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %169, align 8
  %298 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %297, i64 1
  store %"struct.std::__1::pair.155"* %298, %"struct.std::__1::pair.155"** %169, align 8
  br label %299

299:                                              ; preds = %286, %279
  %300 = phi %"struct.std::__1::pair.155"* [ undef, %279 ], [ %298, %286 ]
  %301 = phi %"struct.std::__1::pair.155"* [ %280, %279 ], [ %298, %286 ]
  %302 = phi %"struct.std::__1::pair.155"* [ %1, %279 ], [ %296, %286 ]
  %303 = icmp ult i64 %283, 16
  br i1 %303, label %331, label %304

304:                                              ; preds = %299, %304
  %305 = phi %"struct.std::__1::pair.155"* [ %329, %304 ], [ %301, %299 ]
  %306 = phi %"struct.std::__1::pair.155"* [ %327, %304 ], [ %302, %299 ]
  %307 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %306, i64 0, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %305, i64 0, i32 0, i32 0
  %309 = load i64, i64* %307, align 8
  store i64 %309, i64* %308, align 8
  %310 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %305, i64 0, i32 1
  %311 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %306, i64 0, i32 1
  %312 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %311, i64 0, i32 0
  %313 = bitcast %class.scoped_refptr.1311* %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %class.scoped_refptr.1311* %310 to i64*
  store i64 %314, i64* %315, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %312, align 8
  %316 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %169, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %316, i64 1
  store %"struct.std::__1::pair.155"* %317, %"struct.std::__1::pair.155"** %169, align 8
  %318 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %306, i64 1, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %317, i64 0, i32 0, i32 0
  %320 = load i64, i64* %318, align 8
  store i64 %320, i64* %319, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %316, i64 1, i32 1
  %322 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %306, i64 1, i32 1
  %323 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %322, i64 0, i32 0
  %324 = bitcast %class.scoped_refptr.1311* %322 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = bitcast %class.scoped_refptr.1311* %321 to i64*
  store i64 %325, i64* %326, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %323, align 8
  %327 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %306, i64 2
  %328 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %169, align 8
  %329 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %328, i64 1
  store %"struct.std::__1::pair.155"* %329, %"struct.std::__1::pair.155"** %169, align 8
  %330 = icmp eq %"struct.std::__1::pair.155"* %327, %271
  br i1 %330, label %331, label %304

331:                                              ; preds = %304, %299
  %332 = phi %"struct.std::__1::pair.155"* [ %300, %299 ], [ %329, %304 ]
  %333 = ptrtoint %"struct.std::__1::pair.155"* %332 to i64
  %334 = bitcast %"struct.std::__1::pair.155"** %168 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = load i64, i64* %172, align 8
  %337 = bitcast %"struct.std::__1::pair.155"** %169 to i64*
  br label %338

338:                                              ; preds = %273, %331
  %339 = phi i64* [ %277, %273 ], [ %337, %331 ]
  %340 = phi i64 [ %278, %273 ], [ %333, %331 ]
  %341 = phi i64 [ %274, %273 ], [ %336, %331 ]
  %342 = phi i64* [ %276, %273 ], [ %334, %331 ]
  %343 = phi i64 [ %275, %273 ], [ %335, %331 ]
  %344 = load i64, i64* %173, align 8
  store i64 %343, i64* %173, align 8
  store i64 %344, i64* %342, align 8
  store i64 %340, i64* %172, align 8
  store i64 %341, i64* %339, align 8
  %345 = load i64, i64* %183, align 8
  %346 = bitcast %"struct.std::__1::pair.155"** %170 to i64*
  %347 = load i64, i64* %346, align 8
  store i64 %347, i64* %183, align 8
  store i64 %345, i64* %346, align 8
  %348 = bitcast %"struct.std::__1::__split_buffer.1512"* %6 to i64*
  store i64 %344, i64* %348, align 8
  %349 = inttoptr i64 %344 to %"struct.std::__1::pair.155"*
  %350 = inttoptr i64 %341 to %"struct.std::__1::pair.155"*
  %351 = icmp eq %"struct.std::__1::pair.155"* %350, %349
  br i1 %351, label %370, label %352

352:                                              ; preds = %338, %365
  %353 = phi %"struct.std::__1::pair.155"* [ %366, %365 ], [ %350, %338 ]
  %354 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %353, i64 -1
  store %"struct.std::__1::pair.155"* %354, %"struct.std::__1::pair.155"** %169, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %353, i64 -1, i32 1, i32 0
  %356 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %355, align 8
  %357 = icmp eq %"class.cc::SyncedProperty.1312"* %356, null
  br i1 %357, label %365, label %358

358:                                              ; preds = %352
  %359 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %356, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %359) #18
  %360 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %356, i64 0, i32 0, i32 0, i32 0
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %358
  %364 = bitcast %"class.cc::SyncedProperty.1312"* %356 to i8*
  call void @_ZdlPv(i8* %364) #20
  br label %365

365:                                              ; preds = %363, %358, %352
  %366 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %169, align 8
  %367 = icmp eq %"struct.std::__1::pair.155"* %366, %349
  br i1 %367, label %368, label %352

368:                                              ; preds = %365
  %369 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %167, align 8
  br label %370

370:                                              ; preds = %368, %338
  %371 = phi %"struct.std::__1::pair.155"* [ %369, %368 ], [ %349, %338 ]
  %372 = icmp eq %"struct.std::__1::pair.155"* %371, null
  br i1 %372, label %375, label %373

373:                                              ; preds = %370
  %374 = bitcast %"struct.std::__1::pair.155"* %371 to i8*
  call void @_ZdlPv(i8* %374) #20
  br label %375

375:                                              ; preds = %370, %373
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %166) #18
  br label %376

376:                                              ; preds = %149, %156, %161, %17, %375
  %377 = phi %"struct.std::__1::pair.155"* [ %1, %17 ], [ %214, %375 ], [ %1, %161 ], [ %1, %156 ], [ %1, %149 ]
  ret %"struct.std::__1::pair.155"* %377
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdE13scoped_refptrINS2_14SyncedPropertyINS2_13AdditionGroupIN3gfx12ScrollOffsetEEEEEEEERNS_9allocatorISC_EEE12emplace_backIJRKS3_SB_EEEvDpOT_(%"struct.std::__1::__split_buffer.1512"*, %"struct.cc::ElementId"* dereferenceable(8), %class.scoped_refptr.1311* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.155"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.155"* %7 to i64
  br i1 %8, label %10, label %183

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1512", %"struct.std::__1::__split_buffer.1512"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.155"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.155"* %14 to i64
  br i1 %15, label %17, label %57

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.155"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 4
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.155"* %12, %5
  br i1 %24, label %53, label %25

25:                                               ; preds = %17, %47
  %26 = phi %"struct.std::__1::pair.155"* [ %49, %47 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.155"* [ %48, %47 ], [ %12, %17 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %27, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %26, i64 0, i32 0, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %31, i64 0, i32 0
  %33 = bitcast %class.scoped_refptr.1311* %31 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %32, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %26, i64 0, i32 1
  %36 = bitcast %class.scoped_refptr.1311* %35 to i64*
  %37 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %35, i64 0, i32 0
  %38 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %37, align 8
  store i64 %34, i64* %36, align 8
  %39 = icmp eq %"class.cc::SyncedProperty.1312"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %38, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #18
  %42 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %38, i64 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = bitcast %"class.cc::SyncedProperty.1312"* %38 to i8*
  tail call void @_ZdlPv(i8* %46) #20
  br label %47

47:                                               ; preds = %45, %40, %25
  %48 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %27, i64 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %26, i64 1
  %50 = icmp eq %"struct.std::__1::pair.155"* %48, %5
  br i1 %50, label %51, label %25

51:                                               ; preds = %47
  %52 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %11, align 8
  br label %53

53:                                               ; preds = %51, %17
  %54 = phi %"struct.std::__1::pair.155"* [ %5, %17 ], [ %52, %51 ]
  %55 = phi %"struct.std::__1::pair.155"* [ %23, %17 ], [ %49, %51 ]
  store %"struct.std::__1::pair.155"* %55, %"struct.std::__1::pair.155"** %4, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %54, i64 %22
  store %"struct.std::__1::pair.155"* %56, %"struct.std::__1::pair.155"** %11, align 8
  br label %183

57:                                               ; preds = %10
  %58 = bitcast %"struct.std::__1::pair.155"** %6 to i64*
  %59 = bitcast %"struct.std::__1::__split_buffer.1512"* %0 to i64*
  %60 = sub i64 %9, %16
  %61 = ashr exact i64 %60, 3
  %62 = icmp eq i64 %60, 0
  %63 = select i1 %62, i64 1, i64 %61
  %64 = icmp ugt i64 %63, 1152921504606846975
  br i1 %64, label %65, label %66

65:                                               ; preds = %57
  tail call void @abort() #19
  unreachable

66:                                               ; preds = %57
  %67 = lshr i64 %63, 2
  %68 = shl i64 %63, 4
  %69 = tail call i8* @_Znwm(i64 %68) #20
  %70 = bitcast i8* %69 to %"struct.std::__1::pair.155"*
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %70, i64 %67
  %73 = ptrtoint %"struct.std::__1::pair.155"* %72 to i64
  %74 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %70, i64 %63
  %75 = ptrtoint %"struct.std::__1::pair.155"* %74 to i64
  %76 = ptrtoint %"struct.std::__1::pair.155"* %12 to i64
  %77 = ptrtoint %"struct.std::__1::pair.155"* %5 to i64
  %78 = sub i64 %77, %76
  %79 = ashr exact i64 %78, 4
  %80 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %72, i64 %79
  %81 = icmp eq i64 %78, 0
  br i1 %81, label %156, label %82

82:                                               ; preds = %66
  %83 = add i64 %78, -16
  %84 = lshr i64 %83, 4
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %105, label %88

88:                                               ; preds = %82, %88
  %89 = phi %"struct.std::__1::pair.155"* [ %101, %88 ], [ %72, %82 ]
  %90 = phi %"struct.std::__1::pair.155"* [ %102, %88 ], [ %12, %82 ]
  %91 = phi i64 [ %103, %88 ], [ %86, %82 ]
  %92 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %90, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %89, i64 0, i32 0, i32 0
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %89, i64 0, i32 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %90, i64 0, i32 1
  %97 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %96, i64 0, i32 0
  %98 = bitcast %class.scoped_refptr.1311* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.scoped_refptr.1311* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %97, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %89, i64 1
  %102 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %90, i64 1
  %103 = add i64 %91, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %88, !llvm.loop !23

105:                                              ; preds = %88, %82
  %106 = phi %"struct.std::__1::pair.155"* [ %72, %82 ], [ %101, %88 ]
  %107 = phi %"struct.std::__1::pair.155"* [ %12, %82 ], [ %102, %88 ]
  %108 = icmp ult i64 %83, 48
  br i1 %108, label %151, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"struct.std::__1::pair.155"* [ %148, %109 ], [ %106, %105 ]
  %111 = phi %"struct.std::__1::pair.155"* [ %149, %109 ], [ %107, %105 ]
  %112 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 0, i32 0, i32 0
  %114 = load i64, i64* %112, align 8
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 0, i32 1
  %116 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 0, i32 1
  %117 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %116, i64 0, i32 0
  %118 = bitcast %class.scoped_refptr.1311* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.scoped_refptr.1311* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %117, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 1, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 1, i32 0, i32 0
  %123 = load i64, i64* %121, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 1, i32 1
  %125 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 1, i32 1
  %126 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %125, i64 0, i32 0
  %127 = bitcast %class.scoped_refptr.1311* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %class.scoped_refptr.1311* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %126, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 2, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 2, i32 0, i32 0
  %132 = load i64, i64* %130, align 8
  store i64 %132, i64* %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 2, i32 1
  %134 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 2, i32 1
  %135 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %134, i64 0, i32 0
  %136 = bitcast %class.scoped_refptr.1311* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %class.scoped_refptr.1311* %133 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %135, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 3, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 3, i32 0, i32 0
  %141 = load i64, i64* %139, align 8
  store i64 %141, i64* %140, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 3, i32 1
  %143 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 3, i32 1
  %144 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %143, i64 0, i32 0
  %145 = bitcast %class.scoped_refptr.1311* %143 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %class.scoped_refptr.1311* %142 to i64*
  store i64 %146, i64* %147, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %144, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %110, i64 4
  %149 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %111, i64 4
  %150 = icmp eq %"struct.std::__1::pair.155"* %80, %148
  br i1 %150, label %151, label %109

151:                                              ; preds = %109, %105
  %152 = ptrtoint %"struct.std::__1::pair.155"* %80 to i64
  %153 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %13, align 8
  %154 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %11, align 8
  %155 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  br label %156

156:                                              ; preds = %66, %151
  %157 = phi %"struct.std::__1::pair.155"* [ %155, %151 ], [ %5, %66 ]
  %158 = phi %"struct.std::__1::pair.155"* [ %154, %151 ], [ %12, %66 ]
  %159 = phi %"struct.std::__1::pair.155"* [ %153, %151 ], [ %14, %66 ]
  %160 = phi i64 [ %152, %151 ], [ %73, %66 ]
  store i64 %71, i64* %59, align 8
  %161 = bitcast %"struct.std::__1::pair.155"** %11 to i64*
  store i64 %73, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::pair.155"** %4 to i64*
  store i64 %160, i64* %162, align 8
  store i64 %75, i64* %58, align 8
  %163 = icmp eq %"struct.std::__1::pair.155"* %157, %158
  br i1 %163, label %179, label %164

164:                                              ; preds = %156, %177
  %165 = phi %"struct.std::__1::pair.155"* [ %166, %177 ], [ %157, %156 ]
  %166 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %165, i64 -1
  %167 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %165, i64 -1, i32 1, i32 0
  %168 = load %"class.cc::SyncedProperty.1312"*, %"class.cc::SyncedProperty.1312"** %167, align 8
  %169 = icmp eq %"class.cc::SyncedProperty.1312"* %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %168, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %171) #18
  %172 = getelementptr inbounds %"class.cc::SyncedProperty.1312", %"class.cc::SyncedProperty.1312"* %168, i64 0, i32 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  %176 = bitcast %"class.cc::SyncedProperty.1312"* %168 to i8*
  tail call void @_ZdlPv(i8* %176) #20
  br label %177

177:                                              ; preds = %175, %170, %164
  %178 = icmp eq %"struct.std::__1::pair.155"* %166, %158
  br i1 %178, label %179, label %164

179:                                              ; preds = %177, %156
  %180 = icmp eq %"struct.std::__1::pair.155"* %159, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  %182 = bitcast %"struct.std::__1::pair.155"* %159 to i8*
  tail call void @_ZdlPv(i8* %182) #20
  br label %183

183:                                              ; preds = %181, %179, %53, %3
  %184 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %185 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %186 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %184, i64 0, i32 0, i32 0
  %187 = load i64, i64* %185, align 8
  store i64 %187, i64* %186, align 8
  %188 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %184, i64 0, i32 1
  %189 = getelementptr inbounds %class.scoped_refptr.1311, %class.scoped_refptr.1311* %2, i64 0, i32 0
  %190 = bitcast %class.scoped_refptr.1311* %2 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %class.scoped_refptr.1311* %188 to i64*
  store i64 %191, i64* %192, align 8
  store %"class.cc::SyncedProperty.1312"* null, %"class.cc::SyncedProperty.1312"** %189, align 8
  %193 = load %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"** %4, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.155", %"struct.std::__1::pair.155"* %193, i64 1
  store %"struct.std::__1::pair.155"* %194, %"struct.std::__1::pair.155"** %4, align 8
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN2cc20CompositorCommitData16ScrollUpdateInfoC1ERKS1_(%"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* dereferenceable(40)) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.145"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_(%"class.std::__1::vector.143"*, %"struct.std::__1::pair.145"*, %"struct.cc::ElementId"* dereferenceable(8), %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.145"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.1525", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.145"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.145"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.145"* %11 to i64
  br i1 %12, label %15, label %159

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.145"* %9, %1
  %17 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  br i1 %16, label %18, label %28

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 0, i32 0, i32 0
  %20 = load i64, i64* %17, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 0, i32 1
  %22 = bitcast %"class.gfx::ScrollOffset"* %3 to i64*
  %23 = bitcast %"class.gfx::ScrollOffset"* %21 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 1
  %26 = ptrtoint %"struct.std::__1::pair.145"* %25 to i64
  %27 = bitcast %"struct.std::__1::pair.145"** %8 to i64*
  store i64 %26, i64* %27, align 8
  br label %310

28:                                               ; preds = %15
  %29 = load i64, i64* %17, align 8
  %30 = bitcast %"class.gfx::ScrollOffset"* %3 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 1
  %33 = ptrtoint %"struct.std::__1::pair.145"* %32 to i64
  %34 = sub i64 %13, %33
  %35 = ashr exact i64 %34, 4
  %36 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 %35
  %37 = bitcast %"struct.std::__1::pair.145"** %8 to i64*
  %38 = icmp ult %"struct.std::__1::pair.145"* %36, %9
  br i1 %38, label %39, label %68

39:                                               ; preds = %28
  %40 = sub nsw i64 0, %35
  %41 = getelementptr %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %9, i64 %40, i32 0, i32 0
  %42 = bitcast i64* %41 to i8*
  %43 = xor i64 %5, -1
  %44 = getelementptr i8, i8* %42, i64 %43
  %45 = ptrtoint i8* %44 to i64
  %46 = lshr i64 %45, 4
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %39, %50
  %51 = phi %"struct.std::__1::pair.145"* [ %57, %50 ], [ %9, %39 ]
  %52 = phi %"struct.std::__1::pair.145"* [ %56, %50 ], [ %36, %39 ]
  %53 = phi i64 [ %58, %50 ], [ %48, %39 ]
  %54 = bitcast %"struct.std::__1::pair.145"* %51 to i8*
  %55 = bitcast %"struct.std::__1::pair.145"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #18
  %56 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %52, i64 1
  %57 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %51, i64 1
  %58 = add i64 %53, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %50, !llvm.loop !24

60:                                               ; preds = %50, %39
  %61 = phi %"struct.std::__1::pair.145"* [ %9, %39 ], [ %57, %50 ]
  %62 = phi %"struct.std::__1::pair.145"* [ %36, %39 ], [ %56, %50 ]
  %63 = phi %"struct.std::__1::pair.145"* [ undef, %39 ], [ %57, %50 ]
  %64 = icmp ult i8* %44, inttoptr (i64 48 to i8*)
  br i1 %64, label %65, label %135

65:                                               ; preds = %135, %60
  %66 = phi %"struct.std::__1::pair.145"* [ %63, %60 ], [ %153, %135 ]
  %67 = ptrtoint %"struct.std::__1::pair.145"* %66 to i64
  br label %68

68:                                               ; preds = %65, %28
  %69 = phi i64 [ %67, %65 ], [ %13, %28 ]
  store i64 %69, i64* %37, align 8
  %70 = icmp eq i64 %34, 0
  br i1 %70, label %155, label %71

71:                                               ; preds = %68
  %72 = add i64 %34, -16
  %73 = lshr i64 %72, 4
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"struct.std::__1::pair.145"* [ %82, %77 ], [ %9, %71 ]
  %79 = phi %"struct.std::__1::pair.145"* [ %81, %77 ], [ %36, %71 ]
  %80 = phi i64 [ %91, %77 ], [ %75, %71 ]
  %81 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %79, i64 -1
  %82 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %78, i64 -1
  %83 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %81, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %82, i64 0, i32 0, i32 0
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %79, i64 -1, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %78, i64 -1, i32 1
  %88 = bitcast %"class.gfx::ScrollOffset"* %86 to i64*
  %89 = bitcast %"class.gfx::ScrollOffset"* %87 to i64*
  %90 = load i64, i64* %88, align 4
  store i64 %90, i64* %89, align 8
  %91 = add i64 %80, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %77, !llvm.loop !25

93:                                               ; preds = %77, %71
  %94 = phi %"struct.std::__1::pair.145"* [ %9, %71 ], [ %82, %77 ]
  %95 = phi %"struct.std::__1::pair.145"* [ %36, %71 ], [ %81, %77 ]
  %96 = icmp ult i64 %72, 48
  br i1 %96, label %155, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.std::__1::pair.145"* [ %125, %97 ], [ %94, %93 ]
  %99 = phi %"struct.std::__1::pair.145"* [ %124, %97 ], [ %95, %93 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -1, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -1, i32 0, i32 0
  %102 = load i64, i64* %100, align 8
  store i64 %102, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -1, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -1, i32 1
  %105 = bitcast %"class.gfx::ScrollOffset"* %103 to i64*
  %106 = bitcast %"class.gfx::ScrollOffset"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -2, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -2, i32 0, i32 0
  %110 = load i64, i64* %108, align 8
  store i64 %110, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -2, i32 1
  %112 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -2, i32 1
  %113 = bitcast %"class.gfx::ScrollOffset"* %111 to i64*
  %114 = bitcast %"class.gfx::ScrollOffset"* %112 to i64*
  %115 = load i64, i64* %113, align 4
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -3, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -3, i32 0, i32 0
  %118 = load i64, i64* %116, align 8
  store i64 %118, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -3, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -3, i32 1
  %121 = bitcast %"class.gfx::ScrollOffset"* %119 to i64*
  %122 = bitcast %"class.gfx::ScrollOffset"* %120 to i64*
  %123 = load i64, i64* %121, align 4
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -4
  %125 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -4
  %126 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %124, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %125, i64 0, i32 0, i32 0
  %128 = load i64, i64* %126, align 8
  store i64 %128, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %99, i64 -4, i32 1
  %130 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %98, i64 -4, i32 1
  %131 = bitcast %"class.gfx::ScrollOffset"* %129 to i64*
  %132 = bitcast %"class.gfx::ScrollOffset"* %130 to i64*
  %133 = load i64, i64* %131, align 4
  store i64 %133, i64* %132, align 8
  %134 = icmp eq %"struct.std::__1::pair.145"* %124, %1
  br i1 %134, label %155, label %97

135:                                              ; preds = %60, %135
  %136 = phi %"struct.std::__1::pair.145"* [ %153, %135 ], [ %61, %60 ]
  %137 = phi %"struct.std::__1::pair.145"* [ %152, %135 ], [ %62, %60 ]
  %138 = bitcast %"struct.std::__1::pair.145"* %136 to i8*
  %139 = bitcast %"struct.std::__1::pair.145"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 16, i1 false) #18
  %140 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %137, i64 1
  %141 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %136, i64 1
  %142 = bitcast %"struct.std::__1::pair.145"* %141 to i8*
  %143 = bitcast %"struct.std::__1::pair.145"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 16, i1 false) #18
  %144 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %137, i64 2
  %145 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %136, i64 2
  %146 = bitcast %"struct.std::__1::pair.145"* %145 to i8*
  %147 = bitcast %"struct.std::__1::pair.145"* %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 16, i1 false) #18
  %148 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %137, i64 3
  %149 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %136, i64 3
  %150 = bitcast %"struct.std::__1::pair.145"* %149 to i8*
  %151 = bitcast %"struct.std::__1::pair.145"* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false) #18
  %152 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %137, i64 4
  %153 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %136, i64 4
  %154 = icmp ult %"struct.std::__1::pair.145"* %152, %9
  br i1 %154, label %135, label %65

155:                                              ; preds = %93, %97, %68
  %156 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 0, i32 0, i32 0
  store i64 %29, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %1, i64 0, i32 1
  %158 = bitcast %"class.gfx::ScrollOffset"* %157 to i64*
  store i64 %31, i64* %158, align 8
  br label %310

159:                                              ; preds = %4
  %160 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %0, i64 0, i32 0, i32 2
  %161 = bitcast %"struct.std::__1::__split_buffer.1525"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %161) #18
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %6, i64 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %6, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %6, i64 0, i32 2
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %6, i64 0, i32 3, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %6, i64 0, i32 3, i32 1, i32 0
  %167 = bitcast %"struct.std::__1::pair.145"** %8 to i64*
  %168 = bitcast %"class.std::__1::vector.143"* %0 to i64*
  %169 = bitcast %"struct.std::__1::__split_buffer.1525"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 40, i1 false)
  %170 = load i64, i64* %168, align 8
  %171 = sub i64 %13, %170
  %172 = ashr exact i64 %171, 4
  %173 = add nsw i64 %172, 1
  %174 = icmp ugt i64 %173, 1152921504606846975
  br i1 %174, label %175, label %177

175:                                              ; preds = %159
  %176 = bitcast %"class.std::__1::vector.143"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %176) #19
  unreachable

177:                                              ; preds = %159
  %178 = bitcast %"struct.std::__1::pair.145"** %10 to i64*
  %179 = sub i64 %14, %170
  %180 = ashr exact i64 %179, 4
  %181 = icmp ult i64 %180, 576460752303423487
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = sub i64 %5, %170
  %184 = ashr exact i64 %183, 4
  store %"struct.std::__1::pair.145"* null, %"struct.std::__1::pair.145"** %165, align 8
  %185 = bitcast %"class.std::__1::allocator.149"** %166 to %"class.std::__1::__compressed_pair.146"**
  store %"class.std::__1::__compressed_pair.146"* %160, %"class.std::__1::__compressed_pair.146"** %185, align 8
  br label %197

186:                                              ; preds = %177
  %187 = ashr exact i64 %179, 3
  %188 = icmp ult i64 %187, %173
  %189 = select i1 %188, i64 %173, i64 %187
  %190 = sub i64 %5, %170
  %191 = ashr exact i64 %190, 4
  store %"struct.std::__1::pair.145"* null, %"struct.std::__1::pair.145"** %165, align 8
  %192 = bitcast %"class.std::__1::allocator.149"** %166 to %"class.std::__1::__compressed_pair.146"**
  store %"class.std::__1::__compressed_pair.146"* %160, %"class.std::__1::__compressed_pair.146"** %192, align 8
  %193 = icmp eq i64 %189, 0
  br i1 %193, label %203, label %194

194:                                              ; preds = %186
  %195 = icmp ugt i64 %189, 1152921504606846975
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  tail call void @abort() #19
  unreachable

197:                                              ; preds = %182, %194
  %198 = phi i64 [ 1152921504606846975, %182 ], [ %189, %194 ]
  %199 = phi i64 [ %184, %182 ], [ %191, %194 ]
  %200 = shl i64 %198, 4
  %201 = tail call i8* @_Znwm(i64 %200) #20
  %202 = bitcast i8* %201 to %"struct.std::__1::pair.145"*
  br label %203

203:                                              ; preds = %186, %197
  %204 = phi i64 [ %199, %197 ], [ %191, %186 ]
  %205 = phi i64 [ %198, %197 ], [ 0, %186 ]
  %206 = phi %"struct.std::__1::pair.145"* [ %202, %197 ], [ null, %186 ]
  store %"struct.std::__1::pair.145"* %206, %"struct.std::__1::pair.145"** %162, align 8
  %207 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %206, i64 %204
  store %"struct.std::__1::pair.145"* %207, %"struct.std::__1::pair.145"** %164, align 8
  store %"struct.std::__1::pair.145"* %207, %"struct.std::__1::pair.145"** %163, align 8
  %208 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %206, i64 %205
  store %"struct.std::__1::pair.145"* %208, %"struct.std::__1::pair.145"** %165, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEERNS_9allocatorIS6_EEE12emplace_backIJRKS3_S5_EEEvDpOT_(%"struct.std::__1::__split_buffer.1525"* nonnull %6, %"struct.cc::ElementId"* dereferenceable(8) %2, %"class.gfx::ScrollOffset"* dereferenceable(8) %3)
  %209 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %163, align 8
  %210 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %7, align 8
  %211 = ptrtoint %"struct.std::__1::pair.145"* %210 to i64
  %212 = sub i64 %5, %211
  %213 = ashr exact i64 %212, 4
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %209, i64 %214
  store %"struct.std::__1::pair.145"* %215, %"struct.std::__1::pair.145"** %163, align 8
  %216 = icmp sgt i64 %212, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %203
  %218 = bitcast %"struct.std::__1::pair.145"* %215 to i8*
  %219 = bitcast %"struct.std::__1::pair.145"* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %212, i1 false) #18
  br label %220

220:                                              ; preds = %217, %203
  %221 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %8, align 8
  %222 = icmp eq %"struct.std::__1::pair.145"* %221, %1
  br i1 %222, label %223, label %227

223:                                              ; preds = %220
  %224 = ptrtoint %"struct.std::__1::pair.145"* %221 to i64
  %225 = bitcast %"struct.std::__1::pair.145"** %164 to i64*
  %226 = load i64, i64* %225, align 8
  br label %284

227:                                              ; preds = %220
  %228 = bitcast %"struct.std::__1::pair.145"** %164 to i8**
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %221, i64 -1, i32 0, i32 0
  %231 = ptrtoint i64* %230 to i64
  %232 = sub i64 %231, %5
  %233 = lshr i64 %232, 4
  %234 = add nuw nsw i64 %233, 1
  %235 = and i64 %234, 3
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %250, label %237

237:                                              ; preds = %227, %237
  %238 = phi i8* [ %245, %237 ], [ %229, %227 ]
  %239 = phi %"struct.std::__1::pair.145"* [ %242, %237 ], [ %1, %227 ]
  %240 = phi i64 [ %246, %237 ], [ %235, %227 ]
  %241 = bitcast %"struct.std::__1::pair.145"* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* align 8 %241, i64 16, i1 false) #18
  %242 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %239, i64 1
  %243 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %164, align 8
  %244 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %243, i64 1
  store %"struct.std::__1::pair.145"* %244, %"struct.std::__1::pair.145"** %164, align 8
  %245 = bitcast %"struct.std::__1::pair.145"* %244 to i8*
  %246 = add i64 %240, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %237, !llvm.loop !26

248:                                              ; preds = %237
  %249 = bitcast %"struct.std::__1::pair.145"* %244 to i8*
  br label %250

250:                                              ; preds = %227, %248
  %251 = phi %"struct.std::__1::pair.145"* [ undef, %227 ], [ %244, %248 ]
  %252 = phi i8* [ %229, %227 ], [ %249, %248 ]
  %253 = phi %"struct.std::__1::pair.145"* [ %1, %227 ], [ %242, %248 ]
  %254 = icmp ult i64 %232, 48
  br i1 %254, label %279, label %255

255:                                              ; preds = %250, %255
  %256 = phi i8* [ %278, %255 ], [ %252, %250 ]
  %257 = phi %"struct.std::__1::pair.145"* [ %274, %255 ], [ %253, %250 ]
  %258 = bitcast %"struct.std::__1::pair.145"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %258, i64 16, i1 false) #18
  %259 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %257, i64 1
  %260 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %164, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %260, i64 1
  store %"struct.std::__1::pair.145"* %261, %"struct.std::__1::pair.145"** %164, align 8
  %262 = bitcast %"struct.std::__1::pair.145"* %261 to i8*
  %263 = bitcast %"struct.std::__1::pair.145"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 16, i1 false) #18
  %264 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %257, i64 2
  %265 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %164, align 8
  %266 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %265, i64 1
  store %"struct.std::__1::pair.145"* %266, %"struct.std::__1::pair.145"** %164, align 8
  %267 = bitcast %"struct.std::__1::pair.145"* %266 to i8*
  %268 = bitcast %"struct.std::__1::pair.145"* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %268, i64 16, i1 false) #18
  %269 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %257, i64 3
  %270 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %164, align 8
  %271 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %270, i64 1
  store %"struct.std::__1::pair.145"* %271, %"struct.std::__1::pair.145"** %164, align 8
  %272 = bitcast %"struct.std::__1::pair.145"* %271 to i8*
  %273 = bitcast %"struct.std::__1::pair.145"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 16, i1 false) #18
  %274 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %257, i64 4
  %275 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %164, align 8
  %276 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %275, i64 1
  store %"struct.std::__1::pair.145"* %276, %"struct.std::__1::pair.145"** %164, align 8
  %277 = icmp eq %"struct.std::__1::pair.145"* %274, %221
  %278 = bitcast %"struct.std::__1::pair.145"* %276 to i8*
  br i1 %277, label %279, label %255

279:                                              ; preds = %255, %250
  %280 = phi %"struct.std::__1::pair.145"* [ %251, %250 ], [ %276, %255 ]
  %281 = ptrtoint %"struct.std::__1::pair.145"* %280 to i64
  %282 = load i64, i64* %167, align 8
  %283 = bitcast %"struct.std::__1::pair.145"** %164 to i64*
  br label %284

284:                                              ; preds = %223, %279
  %285 = phi i64* [ %225, %223 ], [ %283, %279 ]
  %286 = phi i64 [ %226, %223 ], [ %281, %279 ]
  %287 = phi i64 [ %224, %223 ], [ %282, %279 ]
  %288 = load i64, i64* %168, align 8
  %289 = bitcast %"struct.std::__1::pair.145"** %163 to i64*
  %290 = load i64, i64* %289, align 8
  store i64 %290, i64* %168, align 8
  store i64 %288, i64* %289, align 8
  store i64 %286, i64* %167, align 8
  store i64 %287, i64* %285, align 8
  %291 = load i64, i64* %178, align 8
  %292 = bitcast %"struct.std::__1::pair.145"** %165 to i64*
  %293 = load i64, i64* %292, align 8
  store i64 %293, i64* %178, align 8
  store i64 %291, i64* %292, align 8
  %294 = bitcast %"struct.std::__1::__split_buffer.1525"* %6 to i64*
  store i64 %288, i64* %294, align 8
  %295 = inttoptr i64 %288 to %"struct.std::__1::pair.145"*
  %296 = inttoptr i64 %287 to %"struct.std::__1::pair.145"*
  %297 = icmp eq %"struct.std::__1::pair.145"* %296, %295
  br i1 %297, label %305, label %298

298:                                              ; preds = %284
  %299 = getelementptr %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %296, i64 -1, i32 0, i32 0
  %300 = ptrtoint i64* %299 to i64
  %301 = sub i64 %300, %288
  %302 = lshr i64 %301, 4
  %303 = xor i64 %302, -1
  %304 = getelementptr %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %296, i64 %303
  store %"struct.std::__1::pair.145"* %304, %"struct.std::__1::pair.145"** %164, align 8
  br label %305

305:                                              ; preds = %298, %284
  %306 = icmp eq i64 %288, 0
  br i1 %306, label %309, label %307

307:                                              ; preds = %305
  %308 = inttoptr i64 %288 to i8*
  call void @_ZdlPv(i8* %308) #20
  br label %309

309:                                              ; preds = %305, %307
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %161) #18
  br label %310

310:                                              ; preds = %18, %155, %309
  %311 = phi %"struct.std::__1::pair.145"* [ %1, %18 ], [ %1, %155 ], [ %209, %309 ]
  ret %"struct.std::__1::pair.145"* %311
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEN3gfx12ScrollOffsetEEERNS_9allocatorIS6_EEE12emplace_backIJRKS3_S5_EEEvDpOT_(%"struct.std::__1::__split_buffer.1525"*, %"struct.cc::ElementId"* dereferenceable(8), %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.145"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.145"* %7 to i64
  br i1 %8, label %10, label %184

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.145"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1525", %"struct.std::__1::__split_buffer.1525"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.145"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.145"* %15 to i64
  br i1 %16, label %18, label %100

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.145"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.145"* %12, %5
  br i1 %25, label %96, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %5, i64 -1, i32 0, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.145"* [ %47, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.145"* [ %46, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %48, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %36, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %35, i64 0, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %36, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %35, i64 0, i32 1
  %43 = bitcast %"class.gfx::ScrollOffset"* %41 to i64*
  %44 = bitcast %"class.gfx::ScrollOffset"* %42 to i64*
  %45 = load i64, i64* %43, align 4
  store i64 %45, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %36, i64 1
  %47 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %35, i64 1
  %48 = add i64 %37, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %34, !llvm.loop !27

50:                                               ; preds = %34, %26
  %51 = phi %"struct.std::__1::pair.145"* [ undef, %26 ], [ %47, %34 ]
  %52 = phi %"struct.std::__1::pair.145"* [ %24, %26 ], [ %47, %34 ]
  %53 = phi %"struct.std::__1::pair.145"* [ %12, %26 ], [ %46, %34 ]
  %54 = icmp ult i64 %29, 48
  br i1 %54, label %93, label %55

55:                                               ; preds = %50, %55
  %56 = phi %"struct.std::__1::pair.145"* [ %91, %55 ], [ %52, %50 ]
  %57 = phi %"struct.std::__1::pair.145"* [ %90, %55 ], [ %53, %50 ]
  %58 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 0, i32 0, i32 0
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 0, i32 1
  %63 = bitcast %"class.gfx::ScrollOffset"* %61 to i64*
  %64 = bitcast %"class.gfx::ScrollOffset"* %62 to i64*
  %65 = load i64, i64* %63, align 4
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 1, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 1, i32 0, i32 0
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 1, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 1, i32 1
  %71 = bitcast %"class.gfx::ScrollOffset"* %69 to i64*
  %72 = bitcast %"class.gfx::ScrollOffset"* %70 to i64*
  %73 = load i64, i64* %71, align 4
  store i64 %73, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 2, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 2, i32 0, i32 0
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 2, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 2, i32 1
  %79 = bitcast %"class.gfx::ScrollOffset"* %77 to i64*
  %80 = bitcast %"class.gfx::ScrollOffset"* %78 to i64*
  %81 = load i64, i64* %79, align 4
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 3, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 3, i32 0, i32 0
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 3, i32 1
  %86 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 3, i32 1
  %87 = bitcast %"class.gfx::ScrollOffset"* %85 to i64*
  %88 = bitcast %"class.gfx::ScrollOffset"* %86 to i64*
  %89 = load i64, i64* %87, align 4
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %57, i64 4
  %91 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %56, i64 4
  %92 = icmp eq %"struct.std::__1::pair.145"* %90, %5
  br i1 %92, label %93, label %55

93:                                               ; preds = %55, %50
  %94 = phi %"struct.std::__1::pair.145"* [ %51, %50 ], [ %91, %55 ]
  %95 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %11, align 8
  br label %96

96:                                               ; preds = %93, %18
  %97 = phi %"struct.std::__1::pair.145"* [ %5, %18 ], [ %95, %93 ]
  %98 = phi %"struct.std::__1::pair.145"* [ %24, %18 ], [ %94, %93 ]
  store %"struct.std::__1::pair.145"* %98, %"struct.std::__1::pair.145"** %4, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %97, i64 %23
  store %"struct.std::__1::pair.145"* %99, %"struct.std::__1::pair.145"** %11, align 8
  br label %184

100:                                              ; preds = %10
  %101 = bitcast %"struct.std::__1::pair.145"** %6 to i64*
  %102 = bitcast %"struct.std::__1::__split_buffer.1525"* %0 to i64*
  %103 = sub i64 %9, %17
  %104 = ashr exact i64 %103, 3
  %105 = icmp eq i64 %103, 0
  %106 = select i1 %105, i64 1, i64 %104
  %107 = icmp ugt i64 %106, 1152921504606846975
  br i1 %107, label %108, label %109

108:                                              ; preds = %100
  tail call void @abort() #19
  unreachable

109:                                              ; preds = %100
  %110 = lshr i64 %106, 2
  %111 = shl i64 %106, 4
  %112 = tail call i8* @_Znwm(i64 %111) #20
  %113 = bitcast i8* %112 to %"struct.std::__1::pair.145"*
  %114 = ptrtoint i8* %112 to i64
  %115 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %113, i64 %110
  %116 = ptrtoint %"struct.std::__1::pair.145"* %115 to i64
  %117 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %113, i64 %106
  %118 = ptrtoint %"struct.std::__1::pair.145"* %117 to i64
  %119 = ptrtoint %"struct.std::__1::pair.145"* %5 to i64
  %120 = sub i64 %119, %13
  %121 = ashr exact i64 %120, 4
  %122 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %115, i64 %121
  %123 = icmp eq i64 %120, 0
  br i1 %123, label %174, label %124

124:                                              ; preds = %109
  %125 = add i64 %120, -16
  %126 = lshr i64 %125, 4
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %144, label %130

130:                                              ; preds = %124, %130
  %131 = phi %"struct.std::__1::pair.145"* [ %137, %130 ], [ %115, %124 ]
  %132 = phi i64 [ %138, %130 ], [ %116, %124 ]
  %133 = phi %"struct.std::__1::pair.145"* [ %139, %130 ], [ %12, %124 ]
  %134 = phi i64 [ %140, %130 ], [ %128, %124 ]
  %135 = inttoptr i64 %132 to i8*
  %136 = bitcast %"struct.std::__1::pair.145"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #18
  %137 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %131, i64 1
  %138 = ptrtoint %"struct.std::__1::pair.145"* %137 to i64
  %139 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %133, i64 1
  %140 = add i64 %134, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %130, !llvm.loop !28

142:                                              ; preds = %130
  %143 = ptrtoint %"struct.std::__1::pair.145"* %137 to i64
  br label %144

144:                                              ; preds = %124, %142
  %145 = phi %"struct.std::__1::pair.145"* [ %115, %124 ], [ %137, %142 ]
  %146 = phi i64 [ %116, %124 ], [ %143, %142 ]
  %147 = phi %"struct.std::__1::pair.145"* [ %12, %124 ], [ %139, %142 ]
  %148 = icmp ult i64 %125, 48
  br i1 %148, label %171, label %149

149:                                              ; preds = %144, %149
  %150 = phi %"struct.std::__1::pair.145"* [ %167, %149 ], [ %145, %144 ]
  %151 = phi i64 [ %168, %149 ], [ %146, %144 ]
  %152 = phi %"struct.std::__1::pair.145"* [ %169, %149 ], [ %147, %144 ]
  %153 = inttoptr i64 %151 to i8*
  %154 = bitcast %"struct.std::__1::pair.145"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 16, i1 false) #18
  %155 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %150, i64 1
  %156 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %152, i64 1
  %157 = bitcast %"struct.std::__1::pair.145"* %155 to i8*
  %158 = bitcast %"struct.std::__1::pair.145"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 16, i1 false) #18
  %159 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %150, i64 2
  %160 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %152, i64 2
  %161 = bitcast %"struct.std::__1::pair.145"* %159 to i8*
  %162 = bitcast %"struct.std::__1::pair.145"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 16, i1 false) #18
  %163 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %150, i64 3
  %164 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %152, i64 3
  %165 = bitcast %"struct.std::__1::pair.145"* %163 to i8*
  %166 = bitcast %"struct.std::__1::pair.145"* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 16, i1 false) #18
  %167 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %150, i64 4
  %168 = ptrtoint %"struct.std::__1::pair.145"* %167 to i64
  %169 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %152, i64 4
  %170 = icmp eq %"struct.std::__1::pair.145"* %122, %167
  br i1 %170, label %171, label %149

171:                                              ; preds = %149, %144
  %172 = ptrtoint %"struct.std::__1::pair.145"* %122 to i64
  %173 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %14, align 8
  br label %174

174:                                              ; preds = %109, %171
  %175 = phi %"struct.std::__1::pair.145"* [ %173, %171 ], [ %15, %109 ]
  %176 = phi i64 [ %172, %171 ], [ %116, %109 ]
  store i64 %114, i64* %102, align 8
  %177 = bitcast %"struct.std::__1::pair.145"** %11 to i64*
  store i64 %116, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::pair.145"** %4 to i64*
  store i64 %176, i64* %178, align 8
  store i64 %118, i64* %101, align 8
  %179 = icmp eq %"struct.std::__1::pair.145"* %175, null
  %180 = inttoptr i64 %176 to %"struct.std::__1::pair.145"*
  br i1 %179, label %184, label %181

181:                                              ; preds = %174
  %182 = bitcast %"struct.std::__1::pair.145"* %175 to i8*
  tail call void @_ZdlPv(i8* %182) #20
  %183 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %4, align 8
  br label %184

184:                                              ; preds = %181, %174, %96, %3
  %185 = phi %"struct.std::__1::pair.145"* [ %183, %181 ], [ %180, %174 ], [ %98, %96 ], [ %5, %3 ]
  %186 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %187 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %185, i64 0, i32 0, i32 0
  %188 = load i64, i64* %186, align 8
  store i64 %188, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %185, i64 0, i32 1
  %190 = bitcast %"class.gfx::ScrollOffset"* %2 to i64*
  %191 = bitcast %"class.gfx::ScrollOffset"* %189 to i64*
  %192 = load i64, i64* %190, align 4
  store i64 %192, i64* %191, align 8
  %193 = load %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"** %4, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.145", %"struct.std::__1::pair.145"* %193, i64 1
  store %"struct.std::__1::pair.145"* %194, %"struct.std::__1::pair.145"** %4, align 8
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.106"*) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %3 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::ClipRectData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.106"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::vector.106"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::ClipRectData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %2, i64 0, i32 0
  %29 = load %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %28, align 8
  %30 = icmp eq %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %29, i64 0, i32 1
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = icmp ult i64 %27, 4
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  store i8 1, i8* %32, align 4
  %38 = bitcast %"class.base::StackAllocator"* %2 to %"struct.cc::ClipRectData"**
  %39 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %38, align 8
  br label %44

40:                                               ; preds = %26, %31
  %41 = mul i64 %27, 24
  %42 = tail call i8* @_Znwm(i64 %41) #20
  %43 = bitcast i8* %42 to %"struct.cc::ClipRectData"*
  br label %44

44:                                               ; preds = %21, %37, %40
  %45 = phi i64 [ 0, %21 ], [ %27, %37 ], [ %27, %40 ]
  %46 = phi %"struct.cc::ClipRectData"* [ null, %21 ], [ %39, %37 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %46, i64 %9
  %48 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %46, i64 %45
  %49 = ptrtoint %"struct.cc::ClipRectData"* %48 to i64
  %50 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %46, i64 %9, i32 1, i32 0
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %47, i64 0, i32 0
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %46, i64 %9, i32 1, i32 1
  %54 = bitcast %"class.gfx::RectF"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 16, i1 false) #18
  %55 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %47, i64 1
  %56 = ptrtoint %"struct.cc::ClipRectData"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 0
  %58 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %57, align 8
  %59 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %3, align 8
  %60 = icmp eq %"struct.cc::ClipRectData"* %59, %58
  br i1 %60, label %61, label %63

61:                                               ; preds = %44
  %62 = ptrtoint %"struct.cc::ClipRectData"* %58 to i64
  br label %73

63:                                               ; preds = %44, %63
  %64 = phi %"struct.cc::ClipRectData"* [ %66, %63 ], [ %47, %44 ]
  %65 = phi %"struct.cc::ClipRectData"* [ %67, %63 ], [ %59, %44 ]
  %66 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %64, i64 -1
  %67 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %65, i64 -1
  %68 = bitcast %"struct.cc::ClipRectData"* %66 to i8*
  %69 = bitcast %"struct.cc::ClipRectData"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 24, i1 false) #18
  %70 = icmp eq %"struct.cc::ClipRectData"* %67, %58
  br i1 %70, label %71, label %63

71:                                               ; preds = %63
  %72 = load i64, i64* %6, align 8
  br label %73

73:                                               ; preds = %61, %71
  %74 = phi %"struct.cc::ClipRectData"* [ %47, %61 ], [ %66, %71 ]
  %75 = phi i64 [ %62, %61 ], [ %72, %71 ]
  %76 = ptrtoint %"struct.cc::ClipRectData"* %74 to i64
  store i64 %76, i64* %6, align 8
  store i64 %56, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %73
  %79 = inttoptr i64 %75 to %"struct.cc::ClipRectData"*
  %80 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %2, i64 0, i32 0
  %81 = load %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %80, align 8
  %82 = icmp ne %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %81, null
  %83 = bitcast %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %81 to %"struct.cc::ClipRectData"*
  %84 = icmp eq %"struct.cc::ClipRectData"* %79, %83
  %85 = and i1 %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %81, i64 0, i32 1
  store i8 0, i8* %87, align 4
  br label %90

88:                                               ; preds = %78
  %89 = inttoptr i64 %75 to i8*
  tail call void @_ZdlPv(i8* %89) #20
  br label %90

90:                                               ; preds = %73, %86, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc18AnimationScaleDataENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.166"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::AnimationScaleData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::AnimationScaleData"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 12
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.cc::AnimationScaleData"*
  %14 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %27, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.cc::AnimationScaleData"* %14 to i64
  br label %27

18:                                               ; preds = %12, %18
  %19 = phi %"struct.cc::AnimationScaleData"* [ %25, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.cc::AnimationScaleData"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 12, i1 false) #18
  %21 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %19, i64 0, i32 0
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %19, i64 0, i32 1
  store float 0.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %19, i64 0, i32 2
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %19, i64 0, i32 3
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %19, i64 1
  %26 = icmp eq %"struct.cc::AnimationScaleData"* %25, %14
  br i1 %26, label %16, label %18

27:                                               ; preds = %12, %16
  %28 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %88

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.166"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = sdiv exact i64 %32, 12
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1537228672809129301
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.166"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #19
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = sdiv exact i64 %39, 12
  %41 = icmp ult i64 %40, 768614336404564650
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = shl nsw i64 %40, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 1537228672809129301, %38 ]
  %49 = mul i64 %48, 12
  %50 = tail call i8* @_Znwm(i64 %49) #20
  %51 = bitcast i8* %50 to %"struct.cc::AnimationScaleData"*
  br label %52

52:                                               ; preds = %42, %47
  %53 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %54 = phi %"struct.cc::AnimationScaleData"* [ %51, %47 ], [ null, %42 ]
  %55 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %54, i64 %33
  %56 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %54, i64 %53
  %57 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %55, i64 %1
  br label %58

58:                                               ; preds = %52, %58
  %59 = phi %"struct.cc::AnimationScaleData"* [ %65, %58 ], [ %55, %52 ]
  %60 = bitcast %"struct.cc::AnimationScaleData"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 12, i1 false) #18
  %61 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %59, i64 0, i32 0
  store i32 -1, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %59, i64 0, i32 1
  store float 0.000000e+00, float* %62, align 4
  %63 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %59, i64 0, i32 2
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %59, i64 0, i32 3
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %59, i64 1
  %66 = icmp eq %"struct.cc::AnimationScaleData"* %57, %65
  br i1 %66, label %67, label %58

67:                                               ; preds = %58
  %68 = ptrtoint %"struct.cc::AnimationScaleData"* %56 to i64
  %69 = ptrtoint %"struct.cc::AnimationScaleData"* %57 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %70, align 8
  %72 = load i64, i64* %7, align 8
  %73 = ptrtoint %"struct.cc::AnimationScaleData"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, -12
  %76 = getelementptr inbounds %"struct.cc::AnimationScaleData", %"struct.cc::AnimationScaleData"* %55, i64 %75
  %77 = ptrtoint %"struct.cc::AnimationScaleData"* %76 to i64
  %78 = icmp sgt i64 %74, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %67
  %80 = bitcast %"struct.cc::AnimationScaleData"* %76 to i8*
  %81 = bitcast %"struct.cc::AnimationScaleData"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %74, i1 false) #18
  %82 = load %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"** %70, align 8
  br label %83

83:                                               ; preds = %67, %79
  %84 = phi %"struct.cc::AnimationScaleData"* [ %71, %67 ], [ %82, %79 ]
  store i64 %77, i64* %30, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %85 = icmp eq %"struct.cc::AnimationScaleData"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"struct.cc::AnimationScaleData"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #20
  br label %88

88:                                               ; preds = %86, %83, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IN2cc17DrawTransformDataENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.173"*, i64, %"class.std::__1::vector.175"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.175"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.175"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %77, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.std::__1::vector.175"*
  %15 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %75, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::DrawTransformData"** %18 to i64*
  %20 = bitcast %"class.std::__1::vector.175"* %2 to i64*
  %21 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 0
  br label %24

22:                                               ; preds = %72
  %23 = ptrtoint %"class.std::__1::vector.175"* %15 to i64
  br label %75

24:                                               ; preds = %72, %17
  %25 = phi %"class.std::__1::vector.175"* [ %14, %17 ], [ %73, %72 ]
  %26 = bitcast %"class.std::__1::vector.175"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #18
  %27 = load i64, i64* %19, align 8
  %28 = load i64, i64* %20, align 8
  %29 = sub i64 %27, %28
  %30 = sdiv exact i64 %29, 148
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %72, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 124640162660199673
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.175"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #19
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #20
  %38 = bitcast i8* %37 to %"struct.cc::DrawTransformData"*
  %39 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %25, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.cc::DrawTransformData"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.175"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.cc::DrawTransformData"* %42, %"struct.cc::DrawTransformData"** %43, align 8
  %44 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %21, align 8
  %45 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %18, align 8
  %46 = bitcast %"struct.cc::DrawTransformData"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = icmp eq %"struct.cc::DrawTransformData"* %44, %45
  br i1 %48, label %70, label %49

49:                                               ; preds = %36, %49
  %50 = phi %"struct.cc::DrawTransformData"* [ %66, %49 ], [ %38, %36 ]
  %51 = phi %"struct.cc::DrawTransformData"* [ %65, %49 ], [ %44, %36 ]
  %52 = bitcast %"struct.cc::DrawTransformData"* %51 to i64*
  %53 = bitcast %"struct.cc::DrawTransformData"* %50 to i64*
  %54 = load i64, i64* %52, align 4
  store i64 %54, i64* %53, align 4
  %55 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %50, i64 0, i32 2, i32 0
  %56 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %51, i64 0, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 3, i1 false) #18
  %57 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %50, i64 0, i32 2, i32 4
  %58 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %51, i64 0, i32 2, i32 4
  %59 = bitcast %"class.gfx::Transform"* %57 to i8*
  %60 = bitcast %"class.gfx::Transform"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 68, i1 false) #18
  %61 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %50, i64 0, i32 2, i32 5
  %62 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %51, i64 0, i32 2, i32 5
  %63 = bitcast %"class.gfx::Transform"* %61 to i8*
  %64 = bitcast %"class.gfx::Transform"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 68, i1 false) #18
  %65 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %51, i64 1
  %66 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %50, i64 1
  %67 = icmp eq %"struct.cc::DrawTransformData"* %65, %45
  br i1 %67, label %68, label %49

68:                                               ; preds = %49
  %69 = ptrtoint %"struct.cc::DrawTransformData"* %66 to i64
  br label %70

70:                                               ; preds = %68, %36
  %71 = phi i64 [ %47, %36 ], [ %69, %68 ]
  store i64 %71, i64* %46, align 8
  br label %72

72:                                               ; preds = %70, %24
  %73 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %25, i64 1
  %74 = icmp eq %"class.std::__1::vector.175"* %73, %15
  br i1 %74, label %22, label %24

75:                                               ; preds = %13, %22
  %76 = phi i64 [ %23, %22 ], [ %9, %13 ]
  store i64 %76, i64* %8, align 8
  br label %221

77:                                               ; preds = %3
  %78 = bitcast %"class.std::__1::vector.173"* %0 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %9, %79
  %81 = sdiv exact i64 %80, 24
  %82 = add i64 %81, %1
  %83 = icmp ugt i64 %82, 768614336404564650
  br i1 %83, label %84, label %86

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::vector.173"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #19
  unreachable

86:                                               ; preds = %77
  %87 = sub i64 %6, %79
  %88 = sdiv exact i64 %87, 24
  %89 = icmp ult i64 %88, 384307168202282325
  br i1 %89, label %90, label %95

90:                                               ; preds = %86
  %91 = shl nsw i64 %88, 1
  %92 = icmp ult i64 %91, %82
  %93 = select i1 %92, i64 %82, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %86, %90
  %96 = phi i64 [ %93, %90 ], [ 768614336404564650, %86 ]
  %97 = mul i64 %96, 24
  %98 = tail call i8* @_Znwm(i64 %97) #20
  %99 = bitcast i8* %98 to %"class.std::__1::vector.175"*
  br label %100

100:                                              ; preds = %95, %90
  %101 = phi i64 [ %96, %95 ], [ 0, %90 ]
  %102 = phi %"class.std::__1::vector.175"* [ %99, %95 ], [ null, %90 ]
  %103 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %102, i64 %81
  %104 = ptrtoint %"class.std::__1::vector.175"* %103 to i64
  %105 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %102, i64 %101
  %106 = ptrtoint %"class.std::__1::vector.175"* %105 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %103, i64 %1
  %108 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 1
  %109 = bitcast %"struct.cc::DrawTransformData"** %108 to i64*
  %110 = bitcast %"class.std::__1::vector.175"* %2 to i64*
  %111 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %2, i64 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %161, %100
  %113 = phi %"class.std::__1::vector.175"* [ %103, %100 ], [ %162, %161 ]
  %114 = phi i64 [ %104, %100 ], [ %163, %161 ]
  %115 = inttoptr i64 %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #18
  %116 = load i64, i64* %109, align 8
  %117 = load i64, i64* %110, align 8
  %118 = sub i64 %116, %117
  %119 = sdiv exact i64 %118, 148
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %161, label %121

121:                                              ; preds = %112
  %122 = icmp ugt i64 %119, 124640162660199673
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = inttoptr i64 %114 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #19
  unreachable

125:                                              ; preds = %121
  %126 = tail call i8* @_Znwm(i64 %118) #20
  %127 = bitcast i8* %126 to %"struct.cc::DrawTransformData"*
  %128 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %113, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.cc::DrawTransformData"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = inttoptr i64 %114 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %127, i64 %119
  %132 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %113, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.cc::DrawTransformData"* %131, %"struct.cc::DrawTransformData"** %132, align 8
  %133 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %111, align 8
  %134 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %108, align 8
  %135 = bitcast %"struct.cc::DrawTransformData"** %128 to i64*
  %136 = ptrtoint i8* %126 to i64
  %137 = icmp eq %"struct.cc::DrawTransformData"* %133, %134
  br i1 %137, label %159, label %138

138:                                              ; preds = %125, %138
  %139 = phi %"struct.cc::DrawTransformData"* [ %155, %138 ], [ %127, %125 ]
  %140 = phi %"struct.cc::DrawTransformData"* [ %154, %138 ], [ %133, %125 ]
  %141 = bitcast %"struct.cc::DrawTransformData"* %140 to i64*
  %142 = bitcast %"struct.cc::DrawTransformData"* %139 to i64*
  %143 = load i64, i64* %141, align 4
  store i64 %143, i64* %142, align 4
  %144 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %139, i64 0, i32 2, i32 0
  %145 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %140, i64 0, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %145, i64 3, i1 false) #18
  %146 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %139, i64 0, i32 2, i32 4
  %147 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %140, i64 0, i32 2, i32 4
  %148 = bitcast %"class.gfx::Transform"* %146 to i8*
  %149 = bitcast %"class.gfx::Transform"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 68, i1 false) #18
  %150 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %139, i64 0, i32 2, i32 5
  %151 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %140, i64 0, i32 2, i32 5
  %152 = bitcast %"class.gfx::Transform"* %150 to i8*
  %153 = bitcast %"class.gfx::Transform"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %153, i64 68, i1 false) #18
  %154 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %140, i64 1
  %155 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %139, i64 1
  %156 = icmp eq %"struct.cc::DrawTransformData"* %154, %134
  br i1 %156, label %157, label %138

157:                                              ; preds = %138
  %158 = ptrtoint %"struct.cc::DrawTransformData"* %155 to i64
  br label %159

159:                                              ; preds = %157, %125
  %160 = phi i64 [ %136, %125 ], [ %158, %157 ]
  store i64 %160, i64* %135, align 8
  br label %161

161:                                              ; preds = %159, %112
  %162 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %113, i64 1
  %163 = ptrtoint %"class.std::__1::vector.175"* %162 to i64
  %164 = icmp eq %"class.std::__1::vector.175"* %107, %162
  br i1 %164, label %165, label %112

165:                                              ; preds = %161
  %166 = ptrtoint %"class.std::__1::vector.175"* %107 to i64
  %167 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %167, align 8
  %169 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %7, align 8
  %170 = icmp eq %"class.std::__1::vector.175"* %169, %168
  br i1 %170, label %171, label %173

171:                                              ; preds = %165
  %172 = ptrtoint %"class.std::__1::vector.175"* %168 to i64
  br label %198

173:                                              ; preds = %165, %173
  %174 = phi %"class.std::__1::vector.175"* [ %176, %173 ], [ %103, %165 ]
  %175 = phi %"class.std::__1::vector.175"* [ %177, %173 ], [ %169, %165 ]
  %176 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %174, i64 -1
  %177 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %175, i64 -1
  %178 = bitcast %"class.std::__1::vector.175"* %176 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #18
  %179 = bitcast %"class.std::__1::vector.175"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector.175"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %175, i64 -1, i32 0, i32 1
  %183 = bitcast %"struct.cc::DrawTransformData"** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %174, i64 -1, i32 0, i32 1
  %186 = bitcast %"struct.cc::DrawTransformData"** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %175, i64 -1, i32 0, i32 2, i32 0, i32 0
  %188 = bitcast %"struct.cc::DrawTransformData"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %174, i64 -1, i32 0, i32 2, i32 0, i32 0
  %191 = bitcast %"struct.cc::DrawTransformData"** %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = bitcast %"class.std::__1::vector.175"* %177 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #18
  %193 = icmp eq %"class.std::__1::vector.175"* %177, %168
  br i1 %193, label %194, label %173

194:                                              ; preds = %173
  %195 = ptrtoint %"class.std::__1::vector.175"* %176 to i64
  %196 = load i64, i64* %78, align 8
  %197 = load %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"** %7, align 8
  br label %198

198:                                              ; preds = %171, %194
  %199 = phi %"class.std::__1::vector.175"* [ %168, %171 ], [ %197, %194 ]
  %200 = phi i64 [ %104, %171 ], [ %195, %194 ]
  %201 = phi i64 [ %172, %171 ], [ %196, %194 ]
  store i64 %200, i64* %78, align 8
  store i64 %166, i64* %8, align 8
  store i64 %106, i64* %5, align 8
  %202 = inttoptr i64 %201 to %"class.std::__1::vector.175"*
  %203 = icmp eq %"class.std::__1::vector.175"* %199, %202
  br i1 %203, label %217, label %204

204:                                              ; preds = %198, %215
  %205 = phi %"class.std::__1::vector.175"* [ %206, %215 ], [ %199, %198 ]
  %206 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %205, i64 -1
  %207 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %206, i64 0, i32 0, i32 0
  %208 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %207, align 8
  %209 = icmp eq %"struct.cc::DrawTransformData"* %208, null
  br i1 %209, label %215, label %210

210:                                              ; preds = %204
  %211 = ptrtoint %"struct.cc::DrawTransformData"* %208 to i64
  %212 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %205, i64 -1, i32 0, i32 1
  %213 = bitcast %"struct.cc::DrawTransformData"** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast %"struct.cc::DrawTransformData"* %208 to i8*
  tail call void @_ZdlPv(i8* %214) #20
  br label %215

215:                                              ; preds = %210, %204
  %216 = icmp eq %"class.std::__1::vector.175"* %206, %202
  br i1 %216, label %217, label %204

217:                                              ; preds = %215, %198
  %218 = icmp eq i64 %201, 0
  br i1 %218, label %221, label %219

219:                                              ; preds = %217
  %220 = inttoptr i64 %201 to i8*
  tail call void @_ZdlPv(i8* %220) #20
  br label %221

221:                                              ; preds = %219, %217, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc17DrawTransformDataENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.175"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::DrawTransformData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::DrawTransformData"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 148
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %36, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.cc::DrawTransformData"*
  %14 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %34, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.cc::DrawTransformData"* %14 to i64
  br label %34

18:                                               ; preds = %12, %18
  %19 = phi %"struct.cc::DrawTransformData"* [ %32, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.cc::DrawTransformData"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 148, i1 false) #18
  %21 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 0
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 1
  store i32 -1, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 0
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 1
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 2
  store i8 0, i8* %25, align 2
  %26 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 4
  %27 = bitcast %"class.gfx::Transform"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %28 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 4, i32 0, i32 1
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 5
  %30 = bitcast %"class.gfx::Transform"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %31 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 0, i32 2, i32 5, i32 0, i32 1
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %19, i64 1
  %33 = icmp eq %"struct.cc::DrawTransformData"* %32, %14
  br i1 %33, label %16, label %18

34:                                               ; preds = %12, %16
  %35 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %35, i64* %7, align 8
  br label %121

36:                                               ; preds = %2
  %37 = bitcast %"class.std::__1::vector.175"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %8, %38
  %40 = sdiv exact i64 %39, 148
  %41 = add i64 %40, %1
  %42 = icmp ugt i64 %41, 124640162660199673
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::vector.175"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #19
  unreachable

45:                                               ; preds = %36
  %46 = sub i64 %5, %38
  %47 = sdiv exact i64 %46, 148
  %48 = icmp ult i64 %47, 62320081330099836
  br i1 %48, label %49, label %54

49:                                               ; preds = %45
  %50 = shl nsw i64 %47, 1
  %51 = icmp ult i64 %50, %41
  %52 = select i1 %51, i64 %41, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %45, %49
  %55 = phi i64 [ %52, %49 ], [ 124640162660199673, %45 ]
  %56 = mul i64 %55, 148
  %57 = tail call i8* @_Znwm(i64 %56) #20
  %58 = bitcast i8* %57 to %"struct.cc::DrawTransformData"*
  br label %59

59:                                               ; preds = %49, %54
  %60 = phi i64 [ %55, %54 ], [ 0, %49 ]
  %61 = phi %"struct.cc::DrawTransformData"* [ %58, %54 ], [ null, %49 ]
  %62 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %61, i64 %40
  %63 = ptrtoint %"struct.cc::DrawTransformData"* %62 to i64
  %64 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %61, i64 %60
  %65 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %62, i64 %1
  br label %66

66:                                               ; preds = %59, %66
  %67 = phi %"struct.cc::DrawTransformData"* [ %81, %66 ], [ %62, %59 ]
  %68 = phi i64 [ %82, %66 ], [ %63, %59 ]
  %69 = inttoptr i64 %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %69, i8 0, i64 148, i1 false) #18
  %70 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 0
  store i32 -1, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 1
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 0
  store i8 1, i8* %72, align 4
  %73 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 1
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 2
  store i8 0, i8* %74, align 2
  %75 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 4
  %76 = bitcast %"class.gfx::Transform"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %77 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 4, i32 0, i32 1
  store i8 0, i8* %77, align 4
  %78 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 5
  %79 = bitcast %"class.gfx::Transform"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #18
  %80 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 0, i32 2, i32 5, i32 0, i32 1
  store i8 0, i8* %80, align 4
  %81 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %67, i64 1
  %82 = ptrtoint %"struct.cc::DrawTransformData"* %81 to i64
  %83 = icmp eq %"struct.cc::DrawTransformData"* %65, %81
  br i1 %83, label %84, label %66

84:                                               ; preds = %66
  %85 = ptrtoint %"struct.cc::DrawTransformData"* %64 to i64
  %86 = ptrtoint %"struct.cc::DrawTransformData"* %65 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %0, i64 0, i32 0, i32 0
  %88 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %87, align 8
  %89 = load %"struct.cc::DrawTransformData"*, %"struct.cc::DrawTransformData"** %6, align 8
  %90 = icmp eq %"struct.cc::DrawTransformData"* %89, %88
  br i1 %90, label %91, label %93

91:                                               ; preds = %84
  %92 = ptrtoint %"struct.cc::DrawTransformData"* %88 to i64
  br label %115

93:                                               ; preds = %84, %93
  %94 = phi %"struct.cc::DrawTransformData"* [ %96, %93 ], [ %62, %84 ]
  %95 = phi %"struct.cc::DrawTransformData"* [ %97, %93 ], [ %89, %84 ]
  %96 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %94, i64 -1
  %97 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %95, i64 -1
  %98 = bitcast %"struct.cc::DrawTransformData"* %97 to i64*
  %99 = bitcast %"struct.cc::DrawTransformData"* %96 to i64*
  %100 = load i64, i64* %98, align 4
  store i64 %100, i64* %99, align 4
  %101 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %94, i64 -1, i32 2, i32 0
  %102 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %95, i64 -1, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 3, i1 false) #18
  %103 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %94, i64 -1, i32 2, i32 4
  %104 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %95, i64 -1, i32 2, i32 4
  %105 = bitcast %"class.gfx::Transform"* %103 to i8*
  %106 = bitcast %"class.gfx::Transform"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 68, i1 false) #18
  %107 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %94, i64 -1, i32 2, i32 5
  %108 = getelementptr inbounds %"struct.cc::DrawTransformData", %"struct.cc::DrawTransformData"* %95, i64 -1, i32 2, i32 5
  %109 = bitcast %"class.gfx::Transform"* %107 to i8*
  %110 = bitcast %"class.gfx::Transform"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 68, i1 false) #18
  %111 = icmp eq %"struct.cc::DrawTransformData"* %97, %88
  br i1 %111, label %112, label %93

112:                                              ; preds = %93
  %113 = ptrtoint %"struct.cc::DrawTransformData"* %96 to i64
  %114 = load i64, i64* %37, align 8
  br label %115

115:                                              ; preds = %91, %112
  %116 = phi i64 [ %63, %91 ], [ %113, %112 ]
  %117 = phi i64 [ %92, %91 ], [ %114, %112 ]
  store i64 %116, i64* %37, align 8
  store i64 %86, i64* %7, align 8
  store i64 %85, i64* %4, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = inttoptr i64 %117 to i8*
  tail call void @_ZdlPv(i8* %120) #20
  br label %121

121:                                              ; preds = %119, %115, %34
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.round.v2f32(<2 x float>) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIiS7_EEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIiS7_EEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEDpOT_"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIiS7_EEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIiS7_EEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEDpOT_"}
!12 = !{i64 0, i64 65}
!13 = !{!"branch_weights", i32 1, i32 2000}
!14 = distinct !{!14, !7}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !7}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !7}
!28 = distinct !{!28, !7}
