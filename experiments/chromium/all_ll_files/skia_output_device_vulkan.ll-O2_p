; ModuleID = '../../components/viz/service/display_embedder/skia_output_device_vulkan.cc'
source_filename = "../../components/viz/service/display_embedder/skia_output_device_vulkan.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type <{ i32, [4 x i8], %union.anon.214, i64, i8, [7 x i8] }>
%union.anon.214 = type { %struct.__GLsync* }
%struct.__GLsync = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.viz::SkiaOutputDeviceVulkan" = type { %"class.viz::SkiaOutputDevice", %"class.viz::VulkanContextProvider"*, i32, %"class.std::__1::unique_ptr.104", %"class.absl::optional.146", %"class.std::__1::vector.155", %class.sk_sp.163, i8, %"class.std::__1::vector.164", %"class.base::WeakPtrFactory.171" }
%"class.viz::SkiaOutputDevice" = type { i32 (...)**, %class.GrDirectContext*, %"struct.viz::OutputSurface::Capabilities", i64, %"class.base::RepeatingCallback", %"class.std::__1::queue", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.97", %class.scoped_refptr.85 }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %class.sk_sp.41, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.1", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.41 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"struct.viz::OutputSurface::Capabilities" = type { i32, i32, i8, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, [15 x i32] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.viz::SkiaOutputDevice::SwapInfo"*, i64 }
%"class.viz::SkiaOutputDevice::SwapInfo" = type { %"class.base::OnceCallback", %"struct.gpu::SwapBuffersCompleteParams" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.gpu::SwapBuffersCompleteParams" = type { %"struct.gfx::SwapResponse", %"class.absl::optional", %"struct.gpu::Mailbox", %"class.std::__1::vector", %"struct.gfx::CALayerParams", %"class.std::__1::vector.75" }
%"struct.gfx::SwapResponse" = type { i64, i32, %"struct.gfx::SwapTimings" }
%"struct.gfx::SwapTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gpu::TextureInUseResponse"*, %"struct.gpu::TextureInUseResponse"*, %"class.std::__1::__compressed_pair.72" }
%"struct.gpu::TextureInUseResponse" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.gpu::TextureInUseResponse"* }
%"struct.gfx::CALayerParams" = type { i8, i32, %"class.gfx::Size", float }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.gpu::Mailbox"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.gpu::MemoryTypeTracker"* }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.85, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.87 }
%class.scoped_refptr.87 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.88", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.89" }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i8 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.ui::LatencyTracker"* }
%"class.ui::LatencyTracker" = type opaque
%class.scoped_refptr.85 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.86" }>
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.gpu::VulkanSurface"* }
%"class.gpu::VulkanSurface" = type { i32 (...)**, %struct.VkInstance_T*, i32, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceFormatKHR, %"class.gpu::VulkanDeviceQueue"*, i64, i32, %"class.gfx::Size", i32, i32, %"class.std::__1::unique_ptr.120" }
%struct.VkInstance_T = type opaque
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr.114", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.107" }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.109" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.gpu::VulkanSwapChain"* }
%"class.gpu::VulkanSwapChain" = type { %"class.base::Lock", i64, %"class.gpu::VulkanDeviceQueue"*, i8, %struct.VkSwapchainKHR_T*, %"class.gfx::Size", %"class.std::__1::vector.123", i32, i8, i8, [2 x i8], %"class.base::ConditionVariable", i8, i32, %"class.absl::optional.133", i8, %class.scoped_refptr.85, %"class.base::circular_deque.138" }
%struct.VkSwapchainKHR_T = type opaque
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.gpu::VulkanSwapChain::ImageData"*, %"struct.gpu::VulkanSwapChain::ImageData"*, %"class.std::__1::__compressed_pair.125" }
%"struct.gpu::VulkanSwapChain::ImageData" = type { %struct.VkImage_T*, i32, %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%struct.VkImage_T = type opaque
%struct.VkSemaphore_T = type opaque
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.gpu::VulkanSwapChain::ImageData"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.130, %union.anon.131, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.130 = type { i64 }
%union.anon.131 = type { i64 }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { i32 }
%"class.base::circular_deque.138" = type { %"class.base::internal::VectorBuffer.139", i64, i64 }
%"class.base::internal::VectorBuffer.139" = type { %"struct.gpu::VulkanSwapChain::PendingSemaphores"*, i64 }
%"struct.gpu::VulkanSwapChain::PendingSemaphores" = type { %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"class.gpu::VulkanSwapChain::ScopedWrite" }
%"class.gpu::VulkanSwapChain::ScopedWrite" = type { %"class.gpu::VulkanSwapChain"*, i8, %struct.VkImage_T*, i32, i32, i32, %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"class.std::__1::__compressed_pair.158" }
%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair" = type { %class.sk_sp.157, i64 }
%class.sk_sp.157 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* }
%class.sk_sp.163 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.89" }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.gfx::Rect"* }
%"class.base::WeakPtrFactory.171" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::VulkanContextProvider" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.103", [4 x i8] }>
%"class.base::RefCountedThreadSafe.103" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.249 }
%union.anon.249 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gpu::VulkanImplementation" = type <{ i32 (...)**, i8, i8, [6 x i8] }>
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional.201" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.182" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.176 }
%struct.anon.176 = type { i64 }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.193", i32, i64, i64 }
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i32 }
%"class.absl::optional.201" = type { %"class.absl::optional_internal::optional_data.202" }
%"class.absl::optional_internal::optional_data.202" = type { %"class.absl::optional_internal::optional_data_base.203" }
%"class.absl::optional_internal::optional_data_base.203" = type { %"class.absl::optional_internal::optional_data_dtor_base.204" }
%"class.absl::optional_internal::optional_data_dtor_base.204" = type { i8, %union.anon.205 }
%union.anon.205 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.207", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.206, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.207" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.276", %"class.gpu::VulkanFunctionPointers::VulkanFunction.277", %"class.gpu::VulkanFunctionPointers::VulkanFunction.278", %"class.gpu::VulkanFunctionPointers::VulkanFunction.279", %"class.gpu::VulkanFunctionPointers::VulkanFunction.280", %"class.gpu::VulkanFunctionPointers::VulkanFunction.281", %"class.gpu::VulkanFunctionPointers::VulkanFunction.282", %"class.gpu::VulkanFunctionPointers::VulkanFunction.283", %"class.gpu::VulkanFunctionPointers::VulkanFunction.284", %"class.gpu::VulkanFunctionPointers::VulkanFunction.285", %"class.gpu::VulkanFunctionPointers::VulkanFunction.286", %"class.gpu::VulkanFunctionPointers::VulkanFunction.287", %"class.gpu::VulkanFunctionPointers::VulkanFunction.288", %"class.gpu::VulkanFunctionPointers::VulkanFunction.289", %"class.gpu::VulkanFunctionPointers::VulkanFunction.290", %"class.gpu::VulkanFunctionPointers::VulkanFunction.291", %"class.gpu::VulkanFunctionPointers::VulkanFunction.292", %"class.gpu::VulkanFunctionPointers::VulkanFunction.293", %"class.gpu::VulkanFunctionPointers::VulkanFunction.294", %"class.gpu::VulkanFunctionPointers::VulkanFunction.295", %"class.gpu::VulkanFunctionPointers::VulkanFunction.296", %"class.gpu::VulkanFunctionPointers::VulkanFunction.297", %"class.gpu::VulkanFunctionPointers::VulkanFunction.298", %"class.gpu::VulkanFunctionPointers::VulkanFunction.299", %"class.gpu::VulkanFunctionPointers::VulkanFunction.300", %"class.gpu::VulkanFunctionPointers::VulkanFunction.301", %"class.gpu::VulkanFunctionPointers::VulkanFunction.302", %"class.gpu::VulkanFunctionPointers::VulkanFunction.303", %"class.gpu::VulkanFunctionPointers::VulkanFunction.304", %"class.gpu::VulkanFunctionPointers::VulkanFunction.305", %"class.gpu::VulkanFunctionPointers::VulkanFunction.306", %"class.gpu::VulkanFunctionPointers::VulkanFunction.307", %"class.gpu::VulkanFunctionPointers::VulkanFunction.308", %"class.gpu::VulkanFunctionPointers::VulkanFunction.309", %"class.gpu::VulkanFunctionPointers::VulkanFunction.310", %"class.gpu::VulkanFunctionPointers::VulkanFunction.311", %"class.gpu::VulkanFunctionPointers::VulkanFunction.312", %"class.gpu::VulkanFunctionPointers::VulkanFunction.313", %"class.gpu::VulkanFunctionPointers::VulkanFunction.314", %"class.gpu::VulkanFunctionPointers::VulkanFunction.315", %"class.gpu::VulkanFunctionPointers::VulkanFunction.316", %"class.gpu::VulkanFunctionPointers::VulkanFunction.317", %"class.gpu::VulkanFunctionPointers::VulkanFunction.318", %"class.gpu::VulkanFunctionPointers::VulkanFunction.319", %"class.gpu::VulkanFunctionPointers::VulkanFunction.320", %"class.gpu::VulkanFunctionPointers::VulkanFunction.321", %"class.gpu::VulkanFunctionPointers::VulkanFunction.322", %"class.gpu::VulkanFunctionPointers::VulkanFunction.323", %"class.gpu::VulkanFunctionPointers::VulkanFunction.324", %"class.gpu::VulkanFunctionPointers::VulkanFunction.325", %"class.gpu::VulkanFunctionPointers::VulkanFunction.326", %"class.gpu::VulkanFunctionPointers::VulkanFunction.327", %"class.gpu::VulkanFunctionPointers::VulkanFunction.328", %"class.gpu::VulkanFunctionPointers::VulkanFunction.329", %"class.gpu::VulkanFunctionPointers::VulkanFunction.330", %"class.gpu::VulkanFunctionPointers::VulkanFunction.331", %"class.gpu::VulkanFunctionPointers::VulkanFunction.332", %"class.gpu::VulkanFunctionPointers::VulkanFunction.333", %"class.gpu::VulkanFunctionPointers::VulkanFunction.334", %"class.gpu::VulkanFunctionPointers::VulkanFunction.335", %"class.gpu::VulkanFunctionPointers::VulkanFunction.336", %"class.gpu::VulkanFunctionPointers::VulkanFunction.337", %"class.gpu::VulkanFunctionPointers::VulkanFunction.338", %"class.gpu::VulkanFunctionPointers::VulkanFunction.339", %"class.gpu::VulkanFunctionPointers::VulkanFunction.340", %"class.gpu::VulkanFunctionPointers::VulkanFunction.341", %"class.gpu::VulkanFunctionPointers::VulkanFunction.342", %"class.gpu::VulkanFunctionPointers::VulkanFunction.343", %"class.gpu::VulkanFunctionPointers::VulkanFunction.344", %"class.gpu::VulkanFunctionPointers::VulkanFunction.345", %"class.gpu::VulkanFunctionPointers::VulkanFunction.346", %"class.gpu::VulkanFunctionPointers::VulkanFunction.347", %"class.gpu::VulkanFunctionPointers::VulkanFunction.343", %"class.gpu::VulkanFunctionPointers::VulkanFunction.348", %"class.gpu::VulkanFunctionPointers::VulkanFunction.349", %"class.gpu::VulkanFunctionPointers::VulkanFunction.350", %"class.gpu::VulkanFunctionPointers::VulkanFunction.351", %"class.gpu::VulkanFunctionPointers::VulkanFunction.352", %"class.gpu::VulkanFunctionPointers::VulkanFunction.353", %"class.gpu::VulkanFunctionPointers::VulkanFunction.354", %"class.gpu::VulkanFunctionPointers::VulkanFunction.355", %"class.gpu::VulkanFunctionPointers::VulkanFunction.356", %"class.gpu::VulkanFunctionPointers::VulkanFunction.357", %"class.gpu::VulkanFunctionPointers::VulkanFunction.358", %"class.gpu::VulkanFunctionPointers::VulkanFunction.359", %"class.gpu::VulkanFunctionPointers::VulkanFunction.360", %"class.gpu::VulkanFunctionPointers::VulkanFunction.361", %"class.gpu::VulkanFunctionPointers::VulkanFunction.362", %"class.gpu::VulkanFunctionPointers::VulkanFunction.363", %"class.gpu::VulkanFunctionPointers::VulkanFunction.364", %"class.gpu::VulkanFunctionPointers::VulkanFunction.365", %"class.gpu::VulkanFunctionPointers::VulkanFunction.366", %"class.gpu::VulkanFunctionPointers::VulkanFunction.367", %"class.gpu::VulkanFunctionPointers::VulkanFunction.368", %"class.gpu::VulkanFunctionPointers::VulkanFunction.369", %"class.gpu::VulkanFunctionPointers::VulkanFunction.370", %"class.gpu::VulkanFunctionPointers::VulkanFunction.371", %"class.gpu::VulkanFunctionPointers::VulkanFunction.372", %"class.gpu::VulkanFunctionPointers::VulkanFunction.373" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.276" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.277" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.278" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.279" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.280" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.281" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.282" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.283" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.284" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.285" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.286" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.287" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.288" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.289" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.290" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.291" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.292" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.293" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.294" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.295" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.296" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.297" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.298" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.299" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.300" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.301" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.302" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.303" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.304" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.305" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.306" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.307" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.308" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.309" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.310" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.311" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.312" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.313" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.314" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.315" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.316" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.317" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.318" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.319" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.320" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.321" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.322" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.323" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.324" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.325" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.326" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.327" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.328" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.329" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.330" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.331" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.332" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.333" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.334" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.335" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.336" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.337" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.338" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.339" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.340" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.341" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.342" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.344" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.345" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.346" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.347" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.343" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.348" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.349" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.350" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.351" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.352" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.353" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.354" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.355" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.356" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.357" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.358" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.359" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.360" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.361" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.362" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.363" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.364" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.365" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.366" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.367" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.368" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.369" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.370" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.371" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.372" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.373" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.base::OnceCallback.208" = type { %"class.base::internal::CallbackBase" }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.209, i32, i8, [3 x i8] }>
%union.anon.209 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.210", %"struct.std::__1::atomic.193" }
%"struct.std::__1::atomic.210" = type { %"struct.std::__1::__atomic_base.211" }
%"struct.std::__1::__atomic_base.211" = type { %"struct.std::__1::__cxx_atomic_impl.212" }
%"struct.std::__1::__cxx_atomic_impl.212" = type { %"struct.std::__1::__cxx_atomic_base_impl.213" }
%"struct.std::__1::__cxx_atomic_base_impl.213" = type { i32 }
%"class.viz::OutputSurfaceFrame" = type { %"class.gfx::Size", %"class.absl::optional", %"class.std::__1::vector.164", %"class.std::__1::vector.215", i8, %"class.std::__1::unique_ptr.230" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.225" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.217" }
%"class.base::internal::flat_tree.217" = type { %"class.std::__1::vector.218" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.220" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback.236" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"struct.gfx::SwapCompletionResult" = type { i32, [4 x i8], %"struct.gfx::GpuFenceHandle", %"class.std::__1::unique_ptr.255" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.gfx::CALayerParams"* }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %class.GrBackendSemaphore*, %class.GrBackendSemaphore*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %class.GrBackendSemaphore* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.245, %class.sk_sp.246 }
%union.anon.245 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%class.sk_sp.246 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.absl::optional.261" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.262, [384 x i64], %class.sk_sp.263, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.264", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.270" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.262 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.263 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.250 }
%struct.anon.250 = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3viz22SkiaOutputDeviceVulkanEFvNS2_18OutputSurfaceFrameEN3gfx10SwapResultEEvE6InvokeIS8_NS_7WeakPtrIS3_EEJS4_S6_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS2_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorIN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZTVN3viz22SkiaOutputDeviceVulkanE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SkiaOutputDeviceVulkan"*)* @_ZN3viz22SkiaOutputDeviceVulkanD2Ev to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDeviceVulkan"*)* @_ZN3viz22SkiaOutputDeviceVulkanD0Ev to i8*), i8* bitcast (void ()* @_ZN3viz16SkiaOutputDevice16BeginScopedPaintEv to i8*), i8* bitcast (i1 (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i32, i32)* @_ZN3viz22SkiaOutputDeviceVulkan7ReshapeERKN3gfx4SizeEfRKNS1_10ColorSpaceENS1_12BufferFormatENS1_16OverlayTransformE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDeviceVulkan"*, i1, %"class.base::OnceCallback.208"*)* @_ZN3viz22SkiaOutputDeviceVulkan6SubmitEbN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.base::OnceCallback"*, %"class.viz::OutputSurfaceFrame"*)* @_ZN3viz22SkiaOutputDeviceVulkan11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEENS_18OutputSurfaceFrameE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.gfx::Rect"*, %"class.base::OnceCallback"*, %"class.viz::OutputSurfaceFrame"*)* @_ZN3viz22SkiaOutputDeviceVulkan13PostSubBufferERKN3gfx4RectEN4base12OnceCallbackIFvRKNS1_20PresentationFeedbackEEEENS_18OutputSurfaceFrameE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDevice"*, %"class.base::OnceCallback"*, %"class.viz::OutputSurfaceFrame"*)* @_ZN3viz16SkiaOutputDevice19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEENS_18OutputSurfaceFrameE to i8*), i8* bitcast (i1 (%"class.viz::SkiaOutputDevice"*, %"class.gfx::Rect"*)* @_ZN3viz16SkiaOutputDevice16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDevice"*, i1)* @_ZN3viz16SkiaOutputDevice17SetEnableDCLayersEb to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDevice"*, i1)* @_ZN3viz16SkiaOutputDevice18SetGpuVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.viz::SkiaOutputDevice"*)* @_ZNK3viz16SkiaOutputDevice21IsPrimaryPlaneOverlayEv to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDevice"*, %"class.absl::optional.261"*)* @_ZN3viz16SkiaOutputDevice20SchedulePrimaryPlaneERKN4absl8optionalINS_25OverlayProcessorInterface25OutputSurfaceOverlayPlaneEEE to i8*), i8* bitcast (void ()* @_ZN3viz16SkiaOutputDevice16ScheduleOverlaysENSt3__16vectorINS_16OverlayCandidateENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDevice"*)* @_ZN3viz16SkiaOutputDevice16EnsureBackbufferEv to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDevice"*)* @_ZN3viz16SkiaOutputDevice17DiscardBackbufferEv to i8*), i8* bitcast (%class.SkSurface* (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.std::__1::vector.238"*)* @_ZN3viz22SkiaOutputDeviceVulkan10BeginPaintEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.viz::SkiaOutputDeviceVulkan"*)* @_ZN3viz22SkiaOutputDeviceVulkan8EndPaintEv to i8*), i8* bitcast (%class.SkCanvas* (%"class.viz::SkiaOutputDevice"*, %class.SkSurface*)* @_ZN3viz16SkiaOutputDevice9GetCanvasEP9SkSurface to i8*), i8* bitcast (i1 (%"class.viz::SkiaOutputDevice"*, %class.SkSurface*, %"class.viz::VulkanContextProvider"*, %"class.std::__1::vector.238"*, %"class.base::OnceCallback.208"*)* @_ZN3viz16SkiaOutputDevice5FlushEP9SkSurfacePNS_21VulkanContextProviderENSt3__16vectorI18GrBackendSemaphoreNS5_9allocatorIS7_EEEEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (i1 (%"class.viz::SkiaOutputDevice"*, %class.SkSurface*, i32, %class.GrBackendSemaphore*, i1)* @_ZN3viz16SkiaOutputDevice4WaitEP9SkSurfaceiPK18GrBackendSemaphoreb to i8*), i8* bitcast (void ()* @_ZN3viz16SkiaOutputDevice4DrawEP9SkSurface5sk_spIK21SkDeferredDisplayListE to i8*)] }, align 8
@.str = private unnamed_addr constant [24 x i8] c"~SkiaOutputDeviceVulkan\00", align 1
@.str.1 = private unnamed_addr constant [75 x i8] c"../../components/viz/service/display_embedder/skia_output_device_vulkan.cc\00", align 1
@.ref.tmp = private constant %struct.GrFlushInfo zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [33 x i8] c"Failed to create vulkan surface.\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"Failed to initialize vulkan surface.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.5 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3viz22SkiaOutputDeviceVulkanC1EN4base7PassKeyIS0_EEPNS_21VulkanContextProviderEjPN3gpu13MemoryTrackerENS1_17RepeatingCallbackIFvNS6_25SwapBuffersCompleteParamsERKN3gfx4SizeENSB_14GpuFenceHandleEEEE = hidden unnamed_addr alias void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::VulkanContextProvider"*, i32, %"class.gpu::MemoryTracker"*, %"class.base::RepeatingCallback"*), void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::VulkanContextProvider"*, i32, %"class.gpu::MemoryTracker"*, %"class.base::RepeatingCallback"*)* @_ZN3viz22SkiaOutputDeviceVulkanC2EN4base7PassKeyIS0_EEPNS_21VulkanContextProviderEjPN3gpu13MemoryTrackerENS1_17RepeatingCallbackIFvNS6_25SwapBuffersCompleteParamsERKN3gfx4SizeENSB_14GpuFenceHandleEEEE
@_ZN3viz22SkiaOutputDeviceVulkanD1Ev = hidden unnamed_addr alias void (%"class.viz::SkiaOutputDeviceVulkan"*), void (%"class.viz::SkiaOutputDeviceVulkan"*)* @_ZN3viz22SkiaOutputDeviceVulkanD2Ev
@_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairC1Ev = hidden unnamed_addr alias void (%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*), void (%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*)* @_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairC2Ev
@_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairC1ERKS1_ = hidden unnamed_addr alias void (%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*), void (%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*)* @_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairC2ERKS1_
@_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairD1Ev = hidden unnamed_addr alias void (%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*), void (%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*)* @_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::SkiaOutputDeviceVulkan"* @_ZN3viz22SkiaOutputDeviceVulkan6CreateEPNS_21VulkanContextProviderEjPN3gpu13MemoryTrackerEN4base17RepeatingCallbackIFvNS3_25SwapBuffersCompleteParamsERKN3gfx4SizeENS9_14GpuFenceHandleEEEE(%"class.viz::VulkanContextProvider"*, i32, %"class.gpu::MemoryTracker"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = tail call i8* @_Znwm(i64 392) #11
  %9 = bitcast i8* %8 to %"class.viz::SkiaOutputDeviceVulkan"*
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #12
  %12 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = bitcast i8* %8 to %"class.viz::SkiaOutputDevice"*
  %14 = bitcast %"class.viz::VulkanContextProvider"* %0 to %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)***
  %15 = load %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)**, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*** %14, align 8
  %16 = getelementptr inbounds %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)** %15, i64 3
  %17 = load %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)** %16, align 8
  %18 = call %class.GrDirectContext* %17(%"class.viz::VulkanContextProvider"* %0) #12
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %19, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %10) #12
  call void @_ZN3viz16SkiaOutputDeviceC2EP15GrDirectContextPN3gpu13MemoryTrackerEN4base17RepeatingCallbackIFvNS3_25SwapBuffersCompleteParamsERKN3gfx4SizeENS9_14GpuFenceHandleEEEE(%"class.viz::SkiaOutputDevice"* nonnull %13, %class.GrDirectContext* %18, %"class.gpu::MemoryTracker"* %2, %"class.base::RepeatingCallback"* nonnull %5) #12
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #12
  %21 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN3viz22SkiaOutputDeviceVulkanE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 224
  %23 = bitcast i8* %22 to %"class.viz::VulkanContextProvider"**
  store %"class.viz::VulkanContextProvider"* %0, %"class.viz::VulkanContextProvider"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 232
  %25 = bitcast i8* %24 to i32*
  store i32 %1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 240
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %8, i64 248
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %8, i64 256
  %30 = getelementptr inbounds i8, i8* %8, i64 344
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 88, i1 false) #12
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds i8, i8* %8, i64 352
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #12
  %32 = getelementptr inbounds i8, i8* %8, i64 376
  %33 = bitcast i8* %32 to %"class.base::internal::WeakPtrFactoryBase"*
  %34 = ptrtoint i8* %8 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %33, i64 %34) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %36 = call zeroext i1 @_ZN3viz22SkiaOutputDeviceVulkan10InitializeEv(%"class.viz::SkiaOutputDeviceVulkan"* nonnull %9)
  br i1 %36, label %42, label %37, !prof !2

37:                                               ; preds = %4
  %38 = bitcast i8* %8 to void (%"class.viz::SkiaOutputDeviceVulkan"*)***
  %39 = load void (%"class.viz::SkiaOutputDeviceVulkan"*)**, void (%"class.viz::SkiaOutputDeviceVulkan"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.viz::SkiaOutputDeviceVulkan"*)*, void (%"class.viz::SkiaOutputDeviceVulkan"*)** %39, i64 1
  %41 = load void (%"class.viz::SkiaOutputDeviceVulkan"*)*, void (%"class.viz::SkiaOutputDeviceVulkan"*)** %40, align 8
  call void %41(%"class.viz::SkiaOutputDeviceVulkan"* nonnull %9) #12
  br label %42

42:                                               ; preds = %4, %37
  %43 = phi i64 [ 0, %37 ], [ %34, %4 ]
  %44 = inttoptr i64 %43 to %"class.viz::SkiaOutputDeviceVulkan"*
  ret %"class.viz::SkiaOutputDeviceVulkan"* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz22SkiaOutputDeviceVulkan10InitializeEv(%"class.viz::SkiaOutputDeviceVulkan"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 1
  %7 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %6, align 8
  %8 = bitcast %"class.viz::VulkanContextProvider"* %7 to %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)***
  %9 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %9, i64 1
  %11 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %10, align 8
  %12 = tail call %"class.gpu::VulkanImplementation"* %11(%"class.viz::VulkanContextProvider"* %7) #12
  %13 = bitcast %"class.gpu::VulkanImplementation"* %12 to %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)***
  %14 = load %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)**, %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)*** %13, align 8
  %15 = getelementptr inbounds %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)*, %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)** %14, i64 4
  %16 = load %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)*, %"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementation"*, i32)** %15, align 8
  %17 = tail call %"class.gpu::VulkanSurface"* %16(%"class.gpu::VulkanImplementation"* %12, i32 %5) #12
  %18 = ptrtoint %"class.gpu::VulkanSurface"* %17 to i64
  %19 = icmp eq %"class.gpu::VulkanSurface"* %17, null
  br i1 %19, label %20, label %27, !prof !3

20:                                               ; preds = %1
  %21 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %21, label %22, label %78

22:                                               ; preds = %20
  %23 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %23) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 268, i32 2) #12
  %24 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 32) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %23) #12
  br label %78

27:                                               ; preds = %1
  %28 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %6, align 8
  %29 = bitcast %"class.viz::VulkanContextProvider"* %28 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %30 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %30, i64 2
  %32 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %31, align 8
  %33 = tail call %"class.gpu::VulkanDeviceQueue"* %32(%"class.viz::VulkanContextProvider"* %28) #12
  %34 = tail call zeroext i1 @_ZN3gpu13VulkanSurface10InitializeEPNS_17VulkanDeviceQueueENS0_6FormatE(%"class.gpu::VulkanSurface"* nonnull %17, %"class.gpu::VulkanDeviceQueue"* %33, i32 0) #12
  br i1 %34, label %42, label %35, !prof !2

35:                                               ; preds = %27
  %36 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %36, label %37, label %73

37:                                               ; preds = %35
  %38 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %38) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 274, i32 2) #12
  %39 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %40 = bitcast %"class.std::__1::basic_ostringstream"* %39 to %"class.std::__1::basic_ostream"*
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i64 36) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %38) #12
  br label %73

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.104"* %43 to i64*
  store i64 %18, i64* %46, align 8
  %47 = icmp eq %"class.gpu::VulkanSurface"* %45, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.gpu::VulkanSurface"* %45 to void (%"class.gpu::VulkanSurface"*)***
  %50 = load void (%"class.gpu::VulkanSurface"*)**, void (%"class.gpu::VulkanSurface"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %50, i64 1
  %52 = load void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %51, align 8
  tail call void %52(%"class.gpu::VulkanSurface"* nonnull %45) #12
  %53 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %44, align 8
  br label %54

54:                                               ; preds = %48, %42
  %55 = phi %"class.gpu::VulkanSurface"* [ %53, %48 ], [ %17, %42 ]
  %56 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 2
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 1, i32* %57, align 8
  %58 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 16
  store i8 1, i8* %58, align 2
  %59 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 3
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 5
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 13
  store i8 1, i8* %61, align 1
  %62 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 9
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 1
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 17
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %55, i64 0, i32 4
  %66 = bitcast %struct.VkSurfaceFormatKHR* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, 37
  %70 = select i1 %69, i32 4, i32 6
  %71 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 23, i64 6
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 2, i32 23, i64 10
  store i32 %70, i32* %72, align 4
  br label %78

73:                                               ; preds = %35, %37
  %74 = bitcast %"class.gpu::VulkanSurface"* %17 to void (%"class.gpu::VulkanSurface"*)***
  %75 = load void (%"class.gpu::VulkanSurface"*)**, void (%"class.gpu::VulkanSurface"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %75, i64 1
  %77 = load void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %76, align 8
  call void %77(%"class.gpu::VulkanSurface"* nonnull %17) #12
  br label %78

78:                                               ; preds = %20, %22, %54, %73
  %79 = phi i1 [ true, %54 ], [ false, %73 ], [ false, %22 ], [ false, %20 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkanC2EN4base7PassKeyIS0_EEPNS_21VulkanContextProviderEjPN3gpu13MemoryTrackerENS1_17RepeatingCallbackIFvNS6_25SwapBuffersCompleteParamsERKN3gfx4SizeENSB_14GpuFenceHandleEEEE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::VulkanContextProvider"*, i32, %"class.gpu::MemoryTracker"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0
  %8 = bitcast %"class.viz::VulkanContextProvider"* %1 to %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)***
  %9 = load %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)**, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*** %8, align 8
  %10 = getelementptr inbounds %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)** %9, i64 3
  %11 = load %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)** %10, align 8
  %12 = tail call %class.GrDirectContext* %11(%"class.viz::VulkanContextProvider"* %1) #12
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %13, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %14) #12
  call void @_ZN3viz16SkiaOutputDeviceC2EP15GrDirectContextPN3gpu13MemoryTrackerEN4base17RepeatingCallbackIFvNS3_25SwapBuffersCompleteParamsERKN3gfx4SizeENS9_14GpuFenceHandleEEEE(%"class.viz::SkiaOutputDevice"* %7, %class.GrDirectContext* %12, %"class.gpu::MemoryTracker"* %3, %"class.base::RepeatingCallback"* nonnull %6) #12
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  %16 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN3viz22SkiaOutputDeviceVulkanE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 1
  store %"class.viz::VulkanContextProvider"* %1, %"class.viz::VulkanContextProvider"** %17, align 8
  %18 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 2
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3
  %20 = bitcast %"class.std::__1::unique_ptr.104"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 7
  %24 = bitcast %union.anon.150* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 88, i1 false)
  store i8 1, i8* %23, align 8
  %25 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8
  %26 = bitcast %"class.std::__1::vector.164"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #12
  %27 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 9, i32 0
  %28 = ptrtoint %"class.viz::SkiaOutputDeviceVulkan"* %0 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %27, i64 %28) #12
  ret void
}

declare void @_ZN3viz16SkiaOutputDeviceC2EP15GrDirectContextPN3gpu13MemoryTrackerEN4base17RepeatingCallbackIFvNS3_25SwapBuffersCompleteParamsERKN3gfx4SizeENS9_14GpuFenceHandleEEEE(%"class.viz::SkiaOutputDevice"*, %class.GrDirectContext*, %"class.gpu::MemoryTracker"*, %"class.base::RepeatingCallback"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkanD2Ev(%"class.viz::SkiaOutputDeviceVulkan"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN3viz22SkiaOutputDeviceVulkanE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %8, align 8
  %10 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %7, %9
  br i1 %10, label %35, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  br label %40

13:                                               ; preds = %40
  %14 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %6, align 8
  %15 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %8, align 8
  %16 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %15, %14
  br i1 %16, label %35, label %17

17:                                               ; preds = %13, %33
  %18 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %19, %33 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %19, i64 0, i32 0, i32 0
  %21 = load %class.SkSurface*, %class.SkSurface** %20, align 8
  %22 = icmp eq %class.SkSurface* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkSurface* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkSurface* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #12
  br label %33

33:                                               ; preds = %27, %23, %17
  %34 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %19, %14
  br i1 %34, label %35, label %17

35:                                               ; preds = %33, %1, %13
  %36 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %14, %13 ], [ %7, %1 ], [ %14, %33 ]
  store %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %36, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %8, align 8
  %37 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %37, align 8
  %39 = icmp eq %"class.gpu::VulkanSurface"* %38, null
  br i1 %39, label %68, label %47, !prof !3

40:                                               ; preds = %11, %40
  %41 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %7, %11 ], [ %45, %40 ]
  %42 = load %"class.gpu::MemoryTypeTracker"*, %"class.gpu::MemoryTypeTracker"** %12, align 8
  %43 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %41, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZN3gpu17MemoryTypeTracker12TrackMemFreeEm(%"class.gpu::MemoryTypeTracker"* %42, i64 %44) #12
  %45 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %41, i64 1
  %46 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %45, %9
  br i1 %46, label %13, label %40

47:                                               ; preds = %35
  %48 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 80, i1 false)
  %49 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 69) #12
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 1
  %51 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %50, align 8
  %52 = bitcast %"class.viz::VulkanContextProvider"* %51 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %53 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %53, i64 2
  %55 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %54, align 8
  %56 = call %"class.gpu::VulkanDeviceQueue"* %55(%"class.viz::VulkanContextProvider"* %51) #12
  %57 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %56, i64 0, i32 6
  %58 = load %struct.VkQueue_T*, %struct.VkQueue_T** %57, align 8
  %59 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #12
  %60 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %59, i64 0, i32 85, i32 0
  %61 = load i32 (%struct.VkQueue_T*)*, i32 (%struct.VkQueue_T*)** %60, align 8
  %62 = call i32 %61(%struct.VkQueue_T* %58) #12
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %48) #12
  %63 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %37, align 8
  %64 = bitcast %"class.gpu::VulkanSurface"* %63 to void (%"class.gpu::VulkanSurface"*)***
  %65 = load void (%"class.gpu::VulkanSurface"*)**, void (%"class.gpu::VulkanSurface"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %65, i64 2
  %67 = load void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %66, align 8
  call void %67(%"class.gpu::VulkanSurface"* %63) #12
  br label %68

68:                                               ; preds = %35, %47
  %69 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 9, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %69) #12
  %70 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8, i32 0, i32 0
  %71 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %70, align 8
  %72 = icmp eq %"class.gfx::Rect"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = ptrtoint %"class.gfx::Rect"* %71 to i64
  %75 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8, i32 0, i32 1
  %76 = bitcast %"class.gfx::Rect"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"class.gfx::Rect"* %71 to i8*
  call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %68, %73
  %79 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 6, i32 0
  %80 = load %class.SkColorSpace*, %class.SkColorSpace** %79, align 8
  %81 = icmp eq %class.SkColorSpace* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = bitcast %class.SkColorSpace* %80 to i8*
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %78, %82, %86
  %89 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %6, align 8
  %90 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %89, null
  br i1 %90, label %118, label %91

91:                                               ; preds = %88
  %92 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %89 to i8*
  %93 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %8, align 8
  %94 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %93, %89
  br i1 %94, label %116, label %95

95:                                               ; preds = %91, %111
  %96 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %97, %111 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %96, i64 -1
  %98 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %97, i64 0, i32 0, i32 0
  %99 = load %class.SkSurface*, %class.SkSurface** %98, align 8
  %100 = icmp eq %class.SkSurface* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %99, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkSurface* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkSurface* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #12
  br label %111

111:                                              ; preds = %105, %101, %95
  %112 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %97, %89
  br i1 %112, label %113, label %95

113:                                              ; preds = %111
  %114 = bitcast %"class.std::__1::vector.155"* %5 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %91
  %117 = phi i8* [ %115, %113 ], [ %92, %91 ]
  store %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %89, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %8, align 8
  call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %88, %116
  %119 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %120 = load i8, i8* %119, align 8, !range !4
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gpu15VulkanSwapChain11ScopedWriteD1Ev(%"class.gpu::VulkanSwapChain::ScopedWrite"* %123) #12
  store i8 0, i8* %119, align 8
  br label %124

124:                                              ; preds = %118, %122
  %125 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %37, align 8
  store %"class.gpu::VulkanSurface"* null, %"class.gpu::VulkanSurface"** %37, align 8
  %126 = icmp eq %"class.gpu::VulkanSurface"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.gpu::VulkanSurface"* %125 to void (%"class.gpu::VulkanSurface"*)***
  %129 = load void (%"class.gpu::VulkanSurface"*)**, void (%"class.gpu::VulkanSurface"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %129, i64 1
  %131 = load void (%"class.gpu::VulkanSurface"*)*, void (%"class.gpu::VulkanSurface"*)** %130, align 8
  call void %131(%"class.gpu::VulkanSurface"* nonnull %125) #12
  br label %132

132:                                              ; preds = %124, %127
  %133 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0
  call void @_ZN3viz16SkiaOutputDeviceD2Ev(%"class.viz::SkiaOutputDevice"* %133) #12
  ret void
}

declare void @_ZN3gpu17MemoryTypeTracker12TrackMemFreeEm(%"class.gpu::MemoryTypeTracker"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3viz16SkiaOutputDeviceD2Ev(%"class.viz::SkiaOutputDevice"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkanD0Ev(%"class.viz::SkiaOutputDeviceVulkan"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz22SkiaOutputDeviceVulkanD2Ev(%"class.viz::SkiaOutputDeviceVulkan"* %0) #12
  %2 = bitcast %"class.viz::SkiaOutputDeviceVulkan"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz22SkiaOutputDeviceVulkan7ReshapeERKN3gfx4SizeEfRKNS1_10ColorSpaceENS1_12BufferFormatENS1_16OverlayTransformE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.gfx::Size"* dereferenceable(8), float, %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.163, align 8
  %8 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %8, align 8
  %10 = icmp eq %"class.gpu::VulkanSurface"* %9, null
  br i1 %10, label %22, label %11, !prof !3

11:                                               ; preds = %6
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.163* nonnull sret %7, %"class.gfx::ColorSpace"* %3) #12
  %12 = call zeroext i1 @_ZN3viz22SkiaOutputDeviceVulkan17RecreateSwapChainERKN3gfx4SizeE5sk_spI12SkColorSpaceENS1_16OverlayTransformE(%"class.viz::SkiaOutputDeviceVulkan"* %0, %"class.gfx::Size"* dereferenceable(8) %1, %class.sk_sp.163* nonnull %7, i32 %5)
  %13 = getelementptr inbounds %class.sk_sp.163, %class.sk_sp.163* %7, i64 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %6, %20, %16, %11
  %23 = phi i1 [ false, %6 ], [ %12, %11 ], [ %12, %16 ], [ %12, %20 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz22SkiaOutputDeviceVulkan17RecreateSwapChainERKN3gfx4SizeE5sk_spI12SkColorSpaceENS1_16OverlayTransformE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.gfx::Size"* dereferenceable(8), %class.sk_sp.163* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %6, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.gpu::VulkanSurface"* %6 to i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)***
  %10 = load i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)**, i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)*, i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)** %10, i64 3
  %12 = load i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)*, i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.gpu::VulkanSurface"* %6, %"class.gfx::Size"* dereferenceable(8) %1, i32 %3) #12
  br i1 %13, label %14, label %220, !prof !2

14:                                               ; preds = %4
  %15 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %16 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %15, i64 0, i32 7
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, %8
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.sk_sp.163, %class.sk_sp.163* %2, i64 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  %22 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 6, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %21, %class.SkColorSpace* %23) #12
  br i1 %24, label %220, label %25, !prof !3

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5
  %27 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %26, i64 0, i32 0, i32 0
  %28 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %27, align 8
  %29 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5, i32 0, i32 1
  %30 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %29, align 8
  %31 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %28, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  br label %175

34:                                               ; preds = %175
  %35 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %27, align 8
  %36 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %29, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %35, %34 ], [ %28, %25 ]
  %39 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %36, %34 ], [ %28, %25 ]
  %40 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %41 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %40, i64 0, i32 11, i32 0, i32 0, i32 0
  %42 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %41, align 8
  %43 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %42, i64 0, i32 6
  %44 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %42, i64 0, i32 6, i32 0, i32 1
  %45 = bitcast %"struct.gpu::VulkanSwapChain::ImageData"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.123"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = lshr exact i64 %49, 5
  %51 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %39, %38
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %38 to i64
  br label %75

54:                                               ; preds = %37, %70
  %55 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %56, %70 ], [ %39, %37 ]
  %56 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %55, i64 -1
  %57 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %56, i64 0, i32 0, i32 0
  %58 = load %class.SkSurface*, %class.SkSurface** %57, align 8
  %59 = icmp eq %class.SkSurface* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkSurface* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkSurface* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  tail call void %69(%class.SkRefCntBase* nonnull %65) #12
  br label %70

70:                                               ; preds = %64, %60, %54
  %71 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %56, %38
  br i1 %71, label %72, label %54

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector.155"* %26 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %52, %72
  %76 = phi i64 [ %74, %72 ], [ %53, %52 ]
  store %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %38, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %29, align 8
  %77 = and i64 %50, 4294967295
  %78 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %38 to i64
  %79 = sub i64 %78, %76
  %80 = ashr exact i64 %79, 4
  %81 = icmp ugt i64 %77, %80
  %82 = inttoptr i64 %76 to %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*
  br i1 %81, label %83, label %85

83:                                               ; preds = %75
  %84 = sub nsw i64 %77, %80
  tail call void @_ZNSt3__16vectorIN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.155"* %26, i64 %84) #12
  br label %109

85:                                               ; preds = %75
  %86 = icmp ult i64 %77, %80
  br i1 %86, label %87, label %109

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %82, i64 %77
  %89 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %88, %38
  br i1 %89, label %108, label %90

90:                                               ; preds = %87, %106
  %91 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %92, %106 ], [ %38, %87 ]
  %92 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %91, i64 -1
  %93 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %92, i64 0, i32 0, i32 0
  %94 = load %class.SkSurface*, %class.SkSurface** %93, align 8
  %95 = icmp eq %class.SkSurface* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkSurface* %94 to %class.SkRefCntBase*
  %102 = bitcast %class.SkSurface* %94 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  tail call void %105(%class.SkRefCntBase* nonnull %101) #12
  br label %106

106:                                              ; preds = %100, %96, %90
  %107 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %92, %88
  br i1 %107, label %108, label %90

108:                                              ; preds = %106, %87
  store %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %88, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %29, align 8
  br label %109

109:                                              ; preds = %83, %85, %108
  %110 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 6
  %111 = getelementptr inbounds %class.sk_sp.163, %class.sk_sp.163* %2, i64 0, i32 0
  %112 = bitcast %class.sk_sp.163* %2 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %111, align 8
  %114 = getelementptr inbounds %class.sk_sp.163, %class.sk_sp.163* %110, i64 0, i32 0
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %114, align 8
  %116 = bitcast %class.sk_sp.163* %110 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %class.SkColorSpace* %115, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = bitcast %class.SkColorSpace* %115 to i8*
  tail call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %109, %118, %122
  %125 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8
  %126 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8, i32 0, i32 1
  %127 = bitcast %"class.gfx::Rect"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector.164"* %125 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %128, %130
  %132 = ashr exact i64 %131, 4
  %133 = icmp ugt i64 %77, %132
  %134 = inttoptr i64 %130 to %"class.gfx::Rect"*
  br i1 %133, label %135, label %140

135:                                              ; preds = %124
  %136 = sub nsw i64 %77, %132
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.164"* %125, i64 %136) #12
  %137 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %125, i64 0, i32 0, i32 0
  %138 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %137, align 8
  %139 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %126, align 8
  br label %145

140:                                              ; preds = %124
  %141 = inttoptr i64 %128 to %"class.gfx::Rect"*
  %142 = icmp ult i64 %77, %132
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %134, i64 %77
  store %"class.gfx::Rect"* %144, %"class.gfx::Rect"** %126, align 8
  br label %145

145:                                              ; preds = %135, %140, %143
  %146 = phi %"class.gfx::Rect"* [ %139, %135 ], [ %141, %140 ], [ %144, %143 ]
  %147 = phi %"class.gfx::Rect"* [ %138, %135 ], [ %134, %140 ], [ %134, %143 ]
  %148 = icmp eq %"class.gfx::Rect"* %147, %146
  br i1 %148, label %182, label %149

149:                                              ; preds = %145
  %150 = ptrtoint %"class.gfx::Rect"* %147 to i64
  %151 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %146, i64 -1, i32 0, i32 0
  %152 = ptrtoint i32* %151 to i64
  %153 = sub i64 %152, %150
  %154 = lshr i64 %153, 4
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 3
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %172, label %158

158:                                              ; preds = %149, %158
  %159 = phi %"class.gfx::Rect"* [ %169, %158 ], [ %147, %149 ]
  %160 = phi i64 [ %170, %158 ], [ %156, %149 ]
  %161 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %162 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %161, i64 0, i32 8
  %163 = bitcast %"class.gfx::Size"* %162 to i64*
  %164 = load i64, i64* %163, align 4
  %165 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %159, i64 0, i32 0, i32 0
  store i32 0, i32* %165, align 4
  %166 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %159, i64 0, i32 0, i32 1
  store i32 0, i32* %166, align 4
  %167 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %159, i64 0, i32 1
  %168 = bitcast %"class.gfx::Size"* %167 to i64*
  store i64 %164, i64* %168, align 4
  %169 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %159, i64 1
  %170 = add i64 %160, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %158, !llvm.loop !5

172:                                              ; preds = %158, %149
  %173 = phi %"class.gfx::Rect"* [ %147, %149 ], [ %169, %158 ]
  %174 = icmp ult i64 %153, 48
  br i1 %174, label %182, label %184

175:                                              ; preds = %32, %175
  %176 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %28, %32 ], [ %180, %175 ]
  %177 = load %"class.gpu::MemoryTypeTracker"*, %"class.gpu::MemoryTypeTracker"** %33, align 8
  %178 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %176, i64 0, i32 1
  %179 = load i64, i64* %178, align 8
  tail call void @_ZN3gpu17MemoryTypeTracker12TrackMemFreeEm(%"class.gpu::MemoryTypeTracker"* %177, i64 %179) #12
  %180 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %176, i64 1
  %181 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %180, %30
  br i1 %181, label %34, label %175

182:                                              ; preds = %172, %184, %145
  %183 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 7
  store i8 1, i8* %183, align 8
  br label %220

184:                                              ; preds = %172, %184
  %185 = phi %"class.gfx::Rect"* [ %218, %184 ], [ %173, %172 ]
  %186 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %187 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %186, i64 0, i32 8
  %188 = bitcast %"class.gfx::Size"* %187 to i64*
  %189 = load i64, i64* %188, align 4
  %190 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 0, i32 0, i32 0
  store i32 0, i32* %190, align 4
  %191 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 0, i32 0, i32 1
  store i32 0, i32* %191, align 4
  %192 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 0, i32 1
  %193 = bitcast %"class.gfx::Size"* %192 to i64*
  store i64 %189, i64* %193, align 4
  %194 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %195 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %194, i64 0, i32 8
  %196 = bitcast %"class.gfx::Size"* %195 to i64*
  %197 = load i64, i64* %196, align 4
  %198 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 1, i32 0, i32 0
  store i32 0, i32* %198, align 4
  %199 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 1, i32 0, i32 1
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 1, i32 1
  %201 = bitcast %"class.gfx::Size"* %200 to i64*
  store i64 %197, i64* %201, align 4
  %202 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %203 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %202, i64 0, i32 8
  %204 = bitcast %"class.gfx::Size"* %203 to i64*
  %205 = load i64, i64* %204, align 4
  %206 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 2, i32 0, i32 0
  store i32 0, i32* %206, align 4
  %207 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 2, i32 0, i32 1
  store i32 0, i32* %207, align 4
  %208 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 2, i32 1
  %209 = bitcast %"class.gfx::Size"* %208 to i64*
  store i64 %205, i64* %209, align 4
  %210 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %5, align 8
  %211 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %210, i64 0, i32 8
  %212 = bitcast %"class.gfx::Size"* %211 to i64*
  %213 = load i64, i64* %212, align 4
  %214 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 3, i32 0, i32 0
  store i32 0, i32* %214, align 4
  %215 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 3, i32 0, i32 1
  store i32 0, i32* %215, align 4
  %216 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 3, i32 1
  %217 = bitcast %"class.gfx::Size"* %216 to i64*
  store i64 %213, i64* %217, align 4
  %218 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %185, i64 4
  %219 = icmp eq %"class.gfx::Rect"* %218, %146
  br i1 %219, label %182, label %184

220:                                              ; preds = %19, %182, %4
  %221 = phi i1 [ false, %4 ], [ true, %182 ], [ true, %19 ]
  ret i1 %221
}

declare void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.163* sret, %"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan6SubmitEbN4base12OnceCallbackIFvvEEE(%"class.viz::SkiaOutputDeviceVulkan"*, i1 zeroext, %"class.base::OnceCallback.208"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %class.GrBackendSurfaceMutableState, align 4
  %5 = alloca %"class.base::OnceCallback.208", align 8
  %6 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %33, label %9, !prof !3

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %13, align 8
  %15 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 1
  %16 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %15, align 8
  %17 = bitcast %"class.viz::VulkanContextProvider"* %16 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %18 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %18, i64 2
  %20 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %19, align 8
  %21 = tail call %"class.gpu::VulkanDeviceQueue"* %20(%"class.viz::VulkanContextProvider"* %16) #12
  %22 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %21, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %class.GrBackendSurfaceMutableState* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %4, i64 0, i32 1
  %28 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %4, i64 0, i32 2
  %29 = bitcast %class.GrBackendSurfaceMutableState* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -86, i64 16, i1 false)
  store i32 1000001002, i32* %25, align 4
  store i32 %23, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i8 1, i8* %28, align 4
  %30 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %14, i64 %12, i32 0, i32 0
  %31 = load %class.SkSurface*, %class.SkSurface** %30, align 8
  %32 = call zeroext i1 @_ZN9SkSurface5flushERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.SkSurface* %31, %struct.GrFlushInfo* nonnull dereferenceable(48) @.ref.tmp, %class.GrBackendSurfaceMutableState* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  br label %33

33:                                               ; preds = %3, %9
  %34 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0
  %35 = getelementptr inbounds %"class.base::OnceCallback.208", %"class.base::OnceCallback.208"* %2, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback.208"* %2 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback.208"* %5 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  call void @_ZN3viz16SkiaOutputDevice6SubmitEbN4base12OnceCallbackIFvvEEE(%"class.viz::SkiaOutputDevice"* %34, i1 zeroext %1, %"class.base::OnceCallback.208"* nonnull %5) #12
  %39 = getelementptr inbounds %"class.base::OnceCallback.208", %"class.base::OnceCallback.208"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #12
  ret void
}

declare zeroext i1 @_ZN9SkSurface5flushERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.SkSurface*, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) local_unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice6SubmitEbN4base12OnceCallbackIFvvEEE(%"class.viz::SkiaOutputDevice"*, i1 zeroext, %"class.base::OnceCallback.208"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEENS_18OutputSurfaceFrameE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.base::OnceCallback"* nocapture, %"class.viz::OutputSurfaceFrame"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %7 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %9, i64 0, i32 8
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %14 = bitcast %"class.gfx::Size"* %10 to i64*
  %15 = bitcast %"class.gfx::Size"* %13 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 4
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* nonnull %6, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %2) #12
  call void @_ZN3viz22SkiaOutputDeviceVulkan13PostSubBufferERKN3gfx4RectEN4base12OnceCallbackIFvRKNS1_20PresentationFeedbackEEEENS_18OutputSurfaceFrameE(%"class.viz::SkiaOutputDeviceVulkan"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %4, %"class.base::OnceCallback"* nonnull %5, %"class.viz::OutputSurfaceFrame"* nonnull %6)
  call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %6) #12
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan13PostSubBufferERKN3gfx4RectEN4base12OnceCallbackIFvRKNS1_20PresentationFeedbackEEEENS_18OutputSurfaceFrameE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::OnceCallback"* nocapture, %"class.viz::OutputSurfaceFrame"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback.236", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %10 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void @_ZN3viz16SkiaOutputDevice16StartSwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.viz::SkiaOutputDevice"* %10, %"class.base::OnceCallback"* nonnull %6) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  %16 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 7
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %19, align 8
  br i1 %18, label %44, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %20, i64 0, i32 8
  %23 = bitcast %"class.gfx::Size"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %87

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %87

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = trunc i64 %24 to i32
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %37, label %87

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = lshr i64 %24, 32
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %87, !prof !3

43:                                               ; preds = %37
  store i8 0, i8* %16, align 8
  br label %44

44:                                               ; preds = %4, %43
  %45 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %20, i64 0, i32 11, i32 0, i32 0, i32 0
  %46 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %45, align 8
  %47 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %47) #12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50, !prof !2

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %46, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %51) #12
  br label %52

52:                                               ; preds = %50, %44
  %53 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %46, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 4, !range !4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %52
  call void @llvm.trap() #12
  unreachable

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %46, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %47) #12
  %61 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8
  %62 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8, i32 0, i32 1
  %63 = bitcast %"class.gfx::Rect"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::vector.164"* %61 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %64, %66
  br i1 %67, label %87, label %68

68:                                               ; preds = %57
  %69 = zext i32 %59 to i64
  br label %70

70:                                               ; preds = %68, %80
  %71 = phi i64 [ %66, %68 ], [ %83, %80 ]
  %72 = phi i64 [ 0, %68 ], [ %81, %80 ]
  %73 = inttoptr i64 %71 to %"class.gfx::Rect"*
  %74 = icmp eq i64 %72, %69
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %73, i64 %69
  %77 = bitcast %"class.gfx::Rect"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false)
  br label %80

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %73, i64 %72
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %79, %"class.gfx::Rect"* dereferenceable(16) %1) #12
  br label %80

80:                                               ; preds = %75, %78
  %81 = add nuw i64 %72, 1
  %82 = load i64, i64* %63, align 8
  %83 = load i64, i64* %65, align 8
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 4
  %86 = icmp ult i64 %81, %85
  br i1 %86, label %70, label %87

87:                                               ; preds = %80, %37, %28, %32, %21, %57
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %119, label %91, !prof !7

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %119, label %95, !prof !3

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %96, align 8
  %98 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #12
  %99 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12, !noalias !8
  %100 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %100) #12, !noalias !8
  %101 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 9, i32 0, i32 1
  %102 = load i64, i64* %101, align 8, !noalias !8
  %103 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %103, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %102) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12, !noalias !8
  %104 = call i8* @_Znwm(i64 160) #11, !noalias !11
  %105 = bitcast i8* %104 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %105, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS2_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #12, !noalias !11
  %106 = getelementptr inbounds i8, i8* %104, i64 32
  %107 = bitcast i8* %106 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32)* @_ZN3viz22SkiaOutputDeviceVulkan23OnPostSubBufferFinishedENS_18OutputSurfaceFrameEN3gfx10SwapResultE to i64), i64 0>, <2 x i64>* %107, align 8, !noalias !11
  %108 = getelementptr inbounds i8, i8* %104, i64 48
  %109 = bitcast i8* %108 to %"class.base::internal::WeakReference"*
  %110 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %109, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %110) #12, !noalias !11
  %111 = getelementptr inbounds i8, i8* %104, i64 56
  %112 = bitcast i8* %111 to i64*
  %113 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8, !noalias !11
  store i64 %114, i64* %112, align 8, !noalias !11
  %115 = getelementptr inbounds i8, i8* %104, i64 64
  %116 = bitcast i8* %115 to %"class.viz::OutputSurfaceFrame"*
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* %116, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %3) #12, !noalias !11
  %117 = bitcast %"class.base::OnceCallback.236"* %7 to i8**
  store i8* %104, i8** %117, align 8, !alias.scope !11
  call void @_ZN3gpu13VulkanSurface18PostSubBufferAsyncERKN3gfx4RectEN4base12OnceCallbackIFvNS1_10SwapResultEEEE(%"class.gpu::VulkanSurface"* %97, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.base::OnceCallback.236"* nonnull %7) #12
  %118 = getelementptr inbounds %"class.base::OnceCallback.236", %"class.base::OnceCallback.236"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %103) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #12
  br label %120

119:                                              ; preds = %87, %91
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* nonnull %9, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %3) #12
  call void @_ZN3viz22SkiaOutputDeviceVulkan23OnPostSubBufferFinishedENS_18OutputSurfaceFrameEN3gfx10SwapResultE(%"class.viz::SkiaOutputDeviceVulkan"* %0, %"class.viz::OutputSurfaceFrame"* nonnull %9, i32 0)
  call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %9) #12
  br label %120

120:                                              ; preds = %119, %95
  ret void
}

declare void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"*, %"class.viz::OutputSurfaceFrame"* dereferenceable(96)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN3viz16SkiaOutputDevice16StartSwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.viz::SkiaOutputDevice"*, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gpu13VulkanSurface18PostSubBufferAsyncERKN3gfx4RectEN4base12OnceCallbackIFvNS1_10SwapResultEEEE(%"class.gpu::VulkanSurface"*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::OnceCallback.236"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan23OnPostSubBufferFinishedENS_18OutputSurfaceFrameEN3gfx10SwapResultE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32) #0 align 2 {
  %4 = alloca %"struct.gfx::SwapCompletionResult", align 8
  %5 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %6 = alloca %"class.absl::optional", align 4
  %7 = alloca %"class.std::__1::vector.75", align 8
  %8 = alloca %"struct.gpu::Mailbox", align 1
  %9 = alloca %"struct.gfx::SwapCompletionResult", align 8
  %10 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %11 = alloca %"class.absl::optional", align 4
  %12 = alloca %"class.std::__1::vector.75", align 8
  %13 = alloca %"struct.gpu::Mailbox", align 1
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %15, label %55, !prof !2

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %16, align 8
  %18 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %17, i64 0, i32 11, i32 0, i32 0, i32 0
  %19 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %20) #12
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %19, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %24) #12
  br label %25

25:                                               ; preds = %23, %15
  %26 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %19, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %25
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %19, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %20) #12
  %34 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0
  call void @_ZN3gfx20SwapCompletionResultC1ENS_10SwapResultE(%"struct.gfx::SwapCompletionResult"* nonnull %4, i32 0) #12
  %35 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %16, align 8
  %36 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %35, i64 0, i32 8
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* nonnull %5, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %1) #12
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #12
  %38 = zext i32 %32 to i64
  %39 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 8, i32 0, i32 0
  %40 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %39, align 8
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %40, i64 %38
  store i8 1, i8* %37, align 4
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.gfx::Rect"* %42 to i8*
  %44 = bitcast %"class.gfx::Rect"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 16, i1 false) #12
  %45 = bitcast %"class.std::__1::vector.75"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #12
  %46 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %8) #12
  call void @_ZN3viz16SkiaOutputDevice17FinishSwapBuffersEN3gfx20SwapCompletionResultERKNS1_4SizeENS_18OutputSurfaceFrameERKN4absl8optionalINS1_4RectEEENSt3__16vectorIN3gpu7MailboxENSD_9allocatorISG_EEEERKSG_(%"class.viz::SkiaOutputDevice"* %34, %"struct.gfx::SwapCompletionResult"* nonnull %4, %"class.gfx::Size"* dereferenceable(8) %36, %"class.viz::OutputSurfaceFrame"* nonnull %5, %"class.absl::optional"* nonnull dereferenceable(20) %6, %"class.std::__1::vector.75"* nonnull %7, %"struct.gpu::Mailbox"* nonnull dereferenceable(16) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %7, i64 0, i32 0, i32 0
  %48 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %47, align 8
  %49 = icmp eq %"struct.gpu::Mailbox"* %48, null
  br i1 %49, label %79, label %50

50:                                               ; preds = %30
  %51 = ptrtoint %"struct.gpu::Mailbox"* %48 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %7, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.gpu::Mailbox"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %48, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %54) #11
  br label %79

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0
  call void @_ZN3gfx20SwapCompletionResultC1ENS_10SwapResultE(%"struct.gfx::SwapCompletionResult"* nonnull %9, i32 %2) #12
  %57 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %57, align 8
  %59 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %58, i64 0, i32 8
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* nonnull %10, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %1) #12
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %60) #12
  %61 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %57, align 8
  %62 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %61, i64 0, i32 8
  %63 = bitcast %"class.gfx::Size"* %62 to i64*
  %64 = load i64, i64* %63, align 4
  store i8 1, i8* %60, align 4
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %68 = bitcast %"class.gfx::Size"* %67 to i64*
  store i64 %64, i64* %68, align 4
  %69 = bitcast %"class.std::__1::vector.75"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #12
  %70 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #12
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %13) #12
  call void @_ZN3viz16SkiaOutputDevice17FinishSwapBuffersEN3gfx20SwapCompletionResultERKNS1_4SizeENS_18OutputSurfaceFrameERKN4absl8optionalINS1_4RectEEENSt3__16vectorIN3gpu7MailboxENSD_9allocatorISG_EEEERKSG_(%"class.viz::SkiaOutputDevice"* %56, %"struct.gfx::SwapCompletionResult"* nonnull %9, %"class.gfx::Size"* dereferenceable(8) %59, %"class.viz::OutputSurfaceFrame"* nonnull %10, %"class.absl::optional"* nonnull dereferenceable(20) %11, %"class.std::__1::vector.75"* nonnull %12, %"struct.gpu::Mailbox"* nonnull dereferenceable(16) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #12
  %71 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %72 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %71, align 8
  %73 = icmp eq %"struct.gpu::Mailbox"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %55
  %75 = ptrtoint %"struct.gpu::Mailbox"* %72 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.gpu::Mailbox"** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %72, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %74, %55, %50, %30
  %80 = phi i8* [ %37, %30 ], [ %37, %50 ], [ %60, %55 ], [ %60, %74 ]
  %81 = phi %"class.viz::OutputSurfaceFrame"* [ %5, %30 ], [ %5, %50 ], [ %10, %55 ], [ %10, %74 ]
  %82 = phi %"struct.gfx::SwapCompletionResult"* [ %4, %30 ], [ %4, %50 ], [ %9, %55 ], [ %9, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %80) #12
  call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %81) #12
  call void @_ZN3gfx20SwapCompletionResultD1Ev(%"struct.gfx::SwapCompletionResult"* nonnull %82) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSurface* @_ZN3viz22SkiaOutputDeviceVulkan10BeginPaintEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEE(%"class.viz::SkiaOutputDeviceVulkan"*, %"class.std::__1::vector.238"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSurfaceProps, align 4
  %4 = alloca %struct.GrVkImageInfo, align 8
  %5 = alloca %class.GrBackendRenderTarget, align 8
  %6 = alloca %struct.VkMemoryRequirements, align 8
  %7 = alloca %class.sk_sp.157, align 8
  %8 = alloca %class.sk_sp.163, align 8
  %9 = alloca %class.GrBackendRenderTarget, align 8
  %10 = alloca %class.GrBackendSemaphore, align 8
  %11 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %12, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %13, align 8
  %15 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gpu15VulkanSwapChain11ScopedWriteD1Ev(%"class.gpu::VulkanSwapChain::ScopedWrite"* %19) #12
  store i8 0, i8* %15, align 8
  br label %20

20:                                               ; preds = %18, %2
  %21 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gpu15VulkanSwapChain11ScopedWriteC1EPS0_(%"class.gpu::VulkanSwapChain::ScopedWrite"* %21, %"class.gpu::VulkanSwapChain"* %14) #12
  store i8 1, i8* %15, align 8
  %22 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %20
  tail call void @_ZN3gpu15VulkanSwapChain11ScopedWriteD1Ev(%"class.gpu::VulkanSwapChain::ScopedWrite"* %21) #12
  store i8 0, i8* %15, align 8
  br label %279

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %30, align 8
  %32 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %31, i64 %29, i32 0
  %33 = getelementptr inbounds %class.sk_sp.157, %class.sk_sp.157* %32, i64 0, i32 0
  %34 = load %class.SkSurface*, %class.SkSurface** %33, align 8
  %35 = icmp eq %class.SkSurface* %34, null
  br i1 %35, label %36, label %163, !prof !3

36:                                               ; preds = %26
  %37 = bitcast %class.SkSurfaceProps* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 0
  store i32 -1431655766, i32* %38, align 4
  %39 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 1
  store i32 -1431655766, i32* %39, align 4
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %3) #12
  %40 = load %"class.gpu::VulkanSurface"*, %"class.gpu::VulkanSurface"** %11, align 8
  %41 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %40, i64 0, i32 4
  %42 = bitcast %struct.VkSurfaceFormatKHR* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = bitcast %struct.GrVkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 144, i1 false)
  %46 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 1, i32 5
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 1, i32 6
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 2
  %49 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 36, i1 false) #12
  %50 = bitcast i32* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #12
  store i32 1, i32* %49, align 8
  %51 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 7
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 8
  store i32 -1, i32* %52, align 8
  %53 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 9
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 0
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 2
  %56 = bitcast i64* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 36, i1 false) #12
  %57 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 12
  store i32 0, i32* %57, align 8
  %58 = load i8, i8* %15, align 8, !range !4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %61, !prof !3

60:                                               ; preds = %36
  call void @llvm.trap() #12
  unreachable

61:                                               ; preds = %36
  %62 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %63 = bitcast %struct.VkImage_T** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 0
  %66 = bitcast %struct.GrVkImageInfo* %4 to i64*
  store i64 %64, i64* %66, align 8
  store i32 0, i32* %48, align 8
  %67 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 3
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 4
  store i32 %44, i32* %70, align 8
  %71 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 5
  store i32 %72, i32* %73, align 4
  store i32 1, i32* %49, align 8
  store i32 1, i32* %51, align 4
  store i32 -1, i32* %52, align 8
  store i8 0, i8* %53, align 4
  %74 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %74) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 176, i1 false)
  %75 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %40, i64 0, i32 8, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %40, i64 0, i32 8, i32 1
  %78 = load i32, i32* %77, align 4
  call void @_ZN21GrBackendRenderTargetC1EiiiRK13GrVkImageInfo(%class.GrBackendRenderTarget* nonnull %5, i32 %76, i32 %78, i32 0, %struct.GrVkImageInfo* nonnull dereferenceable(144) %4) #12
  %79 = bitcast %struct.VkMemoryRequirements* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 24, i1 false)
  %80 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 1
  %81 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %80, align 8
  %82 = bitcast %"class.viz::VulkanContextProvider"* %81 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %83 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %82, align 8
  %84 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %83, i64 2
  %85 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %84, align 8
  %86 = call %"class.gpu::VulkanDeviceQueue"* %85(%"class.viz::VulkanContextProvider"* %81) #12
  %87 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %86, i64 0, i32 5
  %88 = load %struct.VkDevice_T*, %struct.VkDevice_T** %87, align 8
  %89 = load %struct.VkImage_T*, %struct.VkImage_T** %65, align 8
  %90 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #12
  %91 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %90, i64 0, i32 80, i32 0
  %92 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %91, align 8
  call void %92(%struct.VkDevice_T* %88, %struct.VkImage_T* %89, %struct.VkMemoryRequirements* nonnull %6) #12
  %93 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %6, i64 0, i32 0
  %94 = load i8, i8* %15, align 8, !range !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %61
  call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %61
  %98 = load i64, i64* %93, align 8
  %99 = load i32, i32* %27, align 8
  %100 = zext i32 %99 to i64
  %101 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %30, align 8
  %102 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %101, i64 %100, i32 1
  store i64 %98, i64* %102, align 8
  %103 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %104 = load %"class.gpu::MemoryTypeTracker"*, %"class.gpu::MemoryTypeTracker"** %103, align 8
  %105 = load i64, i64* %93, align 8
  call void @_ZN3gpu17MemoryTypeTracker13TrackMemAllocEm(%"class.gpu::MemoryTypeTracker"* %104, i64 %105) #12
  %106 = icmp eq i32 %44, 44
  %107 = select i1 %106, i32 6, i32 4
  %108 = bitcast %class.sk_sp.157* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #12
  %109 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %80, align 8
  %110 = bitcast %"class.viz::VulkanContextProvider"* %109 to %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)***
  %111 = load %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)**, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*** %110, align 8
  %112 = getelementptr inbounds %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)** %111, i64 3
  %113 = load %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)*, %class.GrDirectContext* (%"class.viz::VulkanContextProvider"*)** %112, align 8
  %114 = call %class.GrDirectContext* %113(%"class.viz::VulkanContextProvider"* %109) #12
  %115 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %114, i64 0, i32 0
  %116 = getelementptr inbounds %class.sk_sp.163, %class.sk_sp.163* %8, i64 0, i32 0
  %117 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 6, i32 0
  %118 = load %class.SkColorSpace*, %class.SkColorSpace** %117, align 8
  %119 = icmp eq %class.SkColorSpace* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %97
  %121 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 1 monotonic
  br label %123

123:                                              ; preds = %97, %120
  store %class.SkColorSpace* %118, %class.SkColorSpace** %116, align 8
  call void @_ZN9SkSurface27MakeFromBackendRenderTargetEP18GrRecordingContextRK21GrBackendRenderTarget15GrSurfaceOrigin11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.157* nonnull sret %7, %class.GrRecordingContext* %115, %class.GrBackendRenderTarget* nonnull dereferenceable(176) %5, i32 0, i32 %107, %class.sk_sp.163* nonnull %8, %class.SkSurfaceProps* nonnull %3, void (i8*)* null, i8* null) #12
  %124 = getelementptr inbounds %class.sk_sp.157, %class.sk_sp.157* %7, i64 0, i32 0
  %125 = bitcast %class.sk_sp.157* %7 to i64*
  %126 = load i64, i64* %125, align 8
  store %class.SkSurface* null, %class.SkSurface** %124, align 8
  %127 = load %class.SkSurface*, %class.SkSurface** %33, align 8
  %128 = bitcast %class.sk_sp.157* %32 to i64*
  store i64 %126, i64* %128, align 8
  %129 = icmp eq %class.SkSurface* %127, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %127, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = bitcast %class.SkSurface* %127 to %class.SkRefCntBase*
  %136 = bitcast %class.SkSurface* %127 to void (%class.SkRefCntBase*)***
  %137 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %136, align 8
  %138 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, i64 2
  %139 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, align 8
  call void %139(%class.SkRefCntBase* nonnull %135) #12
  br label %140

140:                                              ; preds = %123, %130, %134
  %141 = load %class.SkSurface*, %class.SkSurface** %124, align 8
  %142 = icmp eq %class.SkSurface* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %141, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkSurface* %141 to %class.SkRefCntBase*
  %149 = bitcast %class.SkSurface* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #12
  br label %153

153:                                              ; preds = %140, %143, %147
  %154 = load %class.SkColorSpace*, %class.SkColorSpace** %116, align 8
  %155 = icmp eq %class.SkColorSpace* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw add i32* %157, i32 -1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = bitcast %class.SkColorSpace* %154 to i8*
  call void @_ZdlPv(i8* %161) #11
  br label %162

162:                                              ; preds = %153, %156, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #12
  call void @_ZN21GrBackendRenderTargetD1Ev(%class.GrBackendRenderTarget* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %172

163:                                              ; preds = %26
  %164 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %164) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 176, i1 false)
  %165 = load %class.SkSurface*, %class.SkSurface** %33, align 8
  call void @_ZN9SkSurface22getBackendRenderTargetENS_19BackendHandleAccessE(%class.GrBackendRenderTarget* nonnull sret %9, %class.SkSurface* %165, i32 0) #12
  %166 = load i8, i8* %15, align 8, !range !4
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %169, !prof !3

168:                                              ; preds = %163
  call void @llvm.trap() #12
  unreachable

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %171 = load i32, i32* %170, align 4
  call void @_ZN21GrBackendRenderTarget16setVkImageLayoutE13VkImageLayout(%class.GrBackendRenderTarget* nonnull %9, i32 %171) #12
  call void @_ZN21GrBackendRenderTargetD1Ev(%class.GrBackendRenderTarget* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %164) #12
  br label %172

172:                                              ; preds = %169, %162
  %173 = load i8, i8* %15, align 8, !range !4
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %176, !prof !3

175:                                              ; preds = %172
  call void @llvm.trap() #12
  unreachable

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6
  %178 = bitcast %struct.VkSemaphore_T** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %class.GrBackendSemaphore* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %180) #12
  %181 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %10, i64 0, i32 0
  %182 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %10, i64 0, i32 4
  %183 = bitcast %class.GrBackendSemaphore* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 32, i1 false)
  store i32 1, i32* %181, align 8
  %184 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %10, i64 0, i32 2
  %185 = bitcast %union.anon.214* %184 to i64*
  store i64 %179, i64* %185, align 8
  store i8 1, i8* %182, align 8
  %186 = load %class.SkSurface*, %class.SkSurface** %33, align 8
  %187 = call zeroext i1 @_ZN9SkSurface4waitEiPK18GrBackendSemaphoreb(%class.SkSurface* %186, i32 1, %class.GrBackendSemaphore* nonnull %10, i1 zeroext false) #12
  %188 = load i8, i8* %15, align 8, !range !4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %176
  call void @llvm.trap() #12
  unreachable

191:                                              ; preds = %176
  %192 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 7
  %193 = bitcast %struct.VkSemaphore_T** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::vector.238", %"class.std::__1::vector.238"* %1, i64 0, i32 0, i32 1
  %196 = load %class.GrBackendSemaphore*, %class.GrBackendSemaphore** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::vector.238", %"class.std::__1::vector.238"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %198 = load %class.GrBackendSemaphore*, %class.GrBackendSemaphore** %197, align 8
  %199 = icmp ult %class.GrBackendSemaphore* %196, %198
  %200 = ptrtoint %class.GrBackendSemaphore* %198 to i64
  br i1 %199, label %201, label %213

201:                                              ; preds = %191
  %202 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 0, i32 0
  store i32 1, i32* %202, align 8
  %203 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 0, i32 1, i64 0
  %204 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 0, i32 2, i32 0
  %205 = bitcast %struct.__GLsync** %204 to i64*
  %206 = bitcast i8* %203 to i32*
  store i32 -1431655766, i32* %206, align 4
  store i64 %194, i64* %205, align 8
  %207 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 0, i32 3
  store i64 -6148914691236517206, i64* %207, align 8
  %208 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 0, i32 4
  store i8 1, i8* %208, align 8
  %209 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 0, i32 5, i64 0
  %210 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %196, i64 1
  %211 = ptrtoint %class.GrBackendSemaphore* %210 to i64
  %212 = bitcast %class.GrBackendSemaphore** %195 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 1 %209, i8 -86, i64 7, i1 false)
  store i64 %211, i64* %212, align 8
  br label %277

213:                                              ; preds = %191
  %214 = ptrtoint %class.GrBackendSemaphore* %196 to i64
  %215 = bitcast %class.GrBackendSemaphore** %195 to i64*
  %216 = bitcast %"class.std::__1::vector.238"* %1 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = sub i64 %214, %217
  %219 = ashr exact i64 %218, 5
  %220 = add nsw i64 %219, 1
  %221 = icmp ugt i64 %220, 576460752303423487
  br i1 %221, label %222, label %224

222:                                              ; preds = %213
  %223 = bitcast %"class.std::__1::vector.238"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %223) #13
  unreachable

224:                                              ; preds = %213
  %225 = bitcast %class.GrBackendSemaphore** %197 to i64*
  %226 = sub i64 %200, %217
  %227 = ashr exact i64 %226, 5
  %228 = icmp ult i64 %227, 288230376151711743
  br i1 %228, label %229, label %237

229:                                              ; preds = %224
  %230 = ashr exact i64 %226, 4
  %231 = icmp ult i64 %230, %220
  %232 = select i1 %231, i64 %220, i64 %230
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %242, label %234

234:                                              ; preds = %229
  %235 = icmp ugt i64 %232, 576460752303423487
  br i1 %235, label %236, label %237

236:                                              ; preds = %234
  call void @abort() #13
  unreachable

237:                                              ; preds = %234, %224
  %238 = phi i64 [ %232, %234 ], [ 576460752303423487, %224 ]
  %239 = shl i64 %238, 5
  %240 = call i8* @_Znwm(i64 %239) #11
  %241 = bitcast i8* %240 to %class.GrBackendSemaphore*
  br label %242

242:                                              ; preds = %237, %229
  %243 = phi i64 [ %238, %237 ], [ 0, %229 ]
  %244 = phi %class.GrBackendSemaphore* [ %241, %237 ], [ null, %229 ]
  %245 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %219
  %246 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %243
  %247 = ptrtoint %class.GrBackendSemaphore* %246 to i64
  %248 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %245, i64 0, i32 0
  store i32 1, i32* %248, align 8
  %249 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %219, i32 1, i64 0
  %250 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %219, i32 2, i32 0
  %251 = bitcast %struct.__GLsync** %250 to i64*
  %252 = bitcast i8* %249 to i32*
  store i32 -1431655766, i32* %252, align 4
  store i64 %194, i64* %251, align 8
  %253 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %219, i32 3
  store i64 -6148914691236517206, i64* %253, align 8
  %254 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %219, i32 4
  store i8 1, i8* %254, align 8
  %255 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %244, i64 %219, i32 5, i64 0
  %256 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %245, i64 1
  %257 = ptrtoint %class.GrBackendSemaphore* %256 to i64
  %258 = getelementptr inbounds %"class.std::__1::vector.238", %"class.std::__1::vector.238"* %1, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %255, i8 -86, i64 7, i1 false)
  %259 = load %class.GrBackendSemaphore*, %class.GrBackendSemaphore** %258, align 8
  %260 = load i64, i64* %215, align 8
  %261 = ptrtoint %class.GrBackendSemaphore* %259 to i64
  %262 = sub i64 %260, %261
  %263 = ashr exact i64 %262, 5
  %264 = sub nsw i64 0, %263
  %265 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %245, i64 %264
  %266 = ptrtoint %class.GrBackendSemaphore* %265 to i64
  %267 = icmp sgt i64 %262, 0
  br i1 %267, label %268, label %272

268:                                              ; preds = %242
  %269 = bitcast %class.GrBackendSemaphore* %265 to i8*
  %270 = bitcast %class.GrBackendSemaphore* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %270, i64 %262, i1 false) #12
  %271 = load %class.GrBackendSemaphore*, %class.GrBackendSemaphore** %258, align 8
  br label %272

272:                                              ; preds = %268, %242
  %273 = phi %class.GrBackendSemaphore* [ %259, %242 ], [ %271, %268 ]
  store i64 %266, i64* %216, align 8
  store i64 %257, i64* %215, align 8
  store i64 %247, i64* %225, align 8
  %274 = icmp eq %class.GrBackendSemaphore* %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = bitcast %class.GrBackendSemaphore* %273 to i8*
  call void @_ZdlPv(i8* %276) #11
  br label %277

277:                                              ; preds = %201, %272, %275
  %278 = load %class.SkSurface*, %class.SkSurface** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %180) #12
  br label %279

279:                                              ; preds = %277, %25
  %280 = phi %class.SkSurface* [ null, %25 ], [ %278, %277 ]
  ret %class.SkSurface* %280
}

declare void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* sret) local_unnamed_addr #2

declare void @_ZN21GrBackendRenderTargetC1EiiiRK13GrVkImageInfo(%class.GrBackendRenderTarget*, i32, i32, i32, %struct.GrVkImageInfo* dereferenceable(144)) unnamed_addr #2

declare void @_ZN3gpu17MemoryTypeTracker13TrackMemAllocEm(%"class.gpu::MemoryTypeTracker"*, i64) local_unnamed_addr #2

declare void @_ZN9SkSurface27MakeFromBackendRenderTargetEP18GrRecordingContextRK21GrBackendRenderTarget15GrSurfaceOrigin11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.157* sret, %class.GrRecordingContext*, %class.GrBackendRenderTarget* dereferenceable(176), i32, i32, %class.sk_sp.163*, %class.SkSurfaceProps*, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN21GrBackendRenderTargetD1Ev(%class.GrBackendRenderTarget*) unnamed_addr #3

declare void @_ZN9SkSurface22getBackendRenderTargetENS_19BackendHandleAccessE(%class.GrBackendRenderTarget* sret, %class.SkSurface*, i32) local_unnamed_addr #2

declare void @_ZN21GrBackendRenderTarget16setVkImageLayoutE13VkImageLayout(%class.GrBackendRenderTarget*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN9SkSurface4waitEiPK18GrBackendSemaphoreb(%class.SkSurface*, i32, %class.GrBackendSemaphore*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan8EndPaintEv(%"class.viz::SkiaOutputDeviceVulkan"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.GrBackendRenderTarget, align 8
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8, !prof !3

7:                                                ; preds = %1
  tail call void @llvm.trap() #12
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %12, align 8
  %14 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 176, i1 false)
  %15 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %13, i64 %11, i32 0, i32 0
  %16 = load %class.SkSurface*, %class.SkSurface** %15, align 8
  call void @_ZN9SkSurface22getBackendRenderTargetENS_19BackendHandleAccessE(%class.GrBackendRenderTarget* nonnull sret %2, %class.SkSurface* %16, i32 0) #12
  %17 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %17) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 144, i1 false)
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 1, i32 5
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 1, i32 6
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 2
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 36, i1 false) #12
  %22 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #12
  store i32 1, i32* %21, align 8
  %23 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 7
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 8
  store i32 -1, i32* %24, align 8
  %25 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 9
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11, i32 2
  %28 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 36, i1 false) #12
  %29 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 12
  store i32 0, i32* %29, align 8
  %30 = call zeroext i1 @_ZNK21GrBackendRenderTarget14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendRenderTarget* nonnull %2, %struct.GrVkImageInfo* nonnull %3) #12
  %31 = load i8, i8* %4, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %8
  %34 = getelementptr inbounds %"class.viz::SkiaOutputDeviceVulkan", %"class.viz::SkiaOutputDeviceVulkan"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gpu15VulkanSwapChain11ScopedWriteD1Ev(%"class.gpu::VulkanSwapChain::ScopedWrite"* %34) #12
  store i8 0, i8* %4, align 8
  br label %35

35:                                               ; preds = %8, %33
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %17) #12
  call void @_ZN21GrBackendRenderTargetD1Ev(%class.GrBackendRenderTarget* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %14) #12
  ret void
}

declare zeroext i1 @_ZNK21GrBackendRenderTarget14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendRenderTarget*, %struct.GrVkImageInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare zeroext i1 @_ZN3gpu13VulkanSurface10InitializeEPNS_17VulkanDeviceQueueENS0_6FormatE(%"class.gpu::VulkanSurface"*, %"class.gpu::VulkanDeviceQueue"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice17FinishSwapBuffersEN3gfx20SwapCompletionResultERKNS1_4SizeENS_18OutputSurfaceFrameERKN4absl8optionalINS1_4RectEEENSt3__16vectorIN3gpu7MailboxENSD_9allocatorISG_EEEERKSG_(%"class.viz::SkiaOutputDevice"*, %"struct.gfx::SwapCompletionResult"*, %"class.gfx::Size"* dereferenceable(8), %"class.viz::OutputSurfaceFrame"*, %"class.absl::optional"* dereferenceable(20), %"class.std::__1::vector.75"*, %"struct.gpu::Mailbox"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx20SwapCompletionResultC1ENS_10SwapResultE(%"struct.gfx::SwapCompletionResult"*, i32) unnamed_addr #2

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx20SwapCompletionResultD1Ev(%"struct.gfx::SwapCompletionResult"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairC2Ev(%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* nocapture) unnamed_addr #5 align 2 {
  %2 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairC2ERKS1_(%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* nocapture, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkSurface*, %class.SkSurface** %4, align 8
  %6 = icmp eq %class.SkSurface* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkSurface* %5, %class.SkSurface** %3, align 8
  %11 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairD2Ev(%"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkSurface*, %class.SkSurface** %2, align 8
  %4 = icmp eq %class.SkSurface* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkSurface* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkSurface* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #12
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

declare void @_ZN3viz16SkiaOutputDevice16BeginScopedPaintEv() unnamed_addr

declare void @_ZN3viz16SkiaOutputDevice19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEENS_18OutputSurfaceFrameE(%"class.viz::SkiaOutputDevice"*, %"class.base::OnceCallback"*, %"class.viz::OutputSurfaceFrame"*) unnamed_addr #2

declare zeroext i1 @_ZN3viz16SkiaOutputDevice16SetDrawRectangleERKN3gfx4RectE(%"class.viz::SkiaOutputDevice"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice17SetEnableDCLayersEb(%"class.viz::SkiaOutputDevice"*, i1 zeroext) unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice18SetGpuVSyncEnabledEb(%"class.viz::SkiaOutputDevice"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK3viz16SkiaOutputDevice21IsPrimaryPlaneOverlayEv(%"class.viz::SkiaOutputDevice"*) unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice20SchedulePrimaryPlaneERKN4absl8optionalINS_25OverlayProcessorInterface25OutputSurfaceOverlayPlaneEEE(%"class.viz::SkiaOutputDevice"*, %"class.absl::optional.261"*) unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice16ScheduleOverlaysENSt3__16vectorINS_16OverlayCandidateENS1_9allocatorIS3_EEEE() unnamed_addr

declare void @_ZN3viz16SkiaOutputDevice16EnsureBackbufferEv(%"class.viz::SkiaOutputDevice"*) unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice17DiscardBackbufferEv(%"class.viz::SkiaOutputDevice"*) unnamed_addr #2

declare %class.SkCanvas* @_ZN3viz16SkiaOutputDevice9GetCanvasEP9SkSurface(%"class.viz::SkiaOutputDevice"*, %class.SkSurface*) unnamed_addr #2

declare zeroext i1 @_ZN3viz16SkiaOutputDevice5FlushEP9SkSurfacePNS_21VulkanContextProviderENSt3__16vectorI18GrBackendSemaphoreNS5_9allocatorIS7_EEEEN4base12OnceCallbackIFvvEEE(%"class.viz::SkiaOutputDevice"*, %class.SkSurface*, %"class.viz::VulkanContextProvider"*, %"class.std::__1::vector.238"*, %"class.base::OnceCallback.208"*) unnamed_addr #2

declare zeroext i1 @_ZN3viz16SkiaOutputDevice4WaitEP9SkSurfaceiPK18GrBackendSemaphoreb(%"class.viz::SkiaOutputDevice"*, %class.SkSurface*, i32, %class.GrBackendSemaphore*, i1 zeroext) unnamed_addr #2

declare void @_ZN3viz16SkiaOutputDevice4DrawEP9SkSurface5sk_spIK21SkDeferredDisplayListE() unnamed_addr

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu15VulkanSwapChain11ScopedWriteD1Ev(%"class.gpu::VulkanSwapChain::ScopedWrite"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::WeakPtr"*
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::OutputSurfaceFrame"*
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.viz::SkiaOutputDeviceVulkan"**
  %14 = load %"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::SkiaOutputDeviceVulkan"** %13, align 8
  %15 = icmp eq %"class.viz::SkiaOutputDeviceVulkan"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  call void @_ZN4base8internal13FunctorTraitsIMN3viz22SkiaOutputDeviceVulkanEFvNS2_18OutputSurfaceFrameEN3gfx10SwapResultEEvE6InvokeIS8_NS_7WeakPtrIS3_EEJS4_S6_EEEvT_OT0_DpOT1_(i64 %18, i64 %21, %"class.base::WeakPtr"* dereferenceable(16) %6, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %8, i32* nonnull dereferenceable(4) %3) #12
  br label %22

22:                                               ; preds = %2, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3viz22SkiaOutputDeviceVulkanEFvNS2_18OutputSurfaceFrameEN3gfx10SwapResultEEvE6InvokeIS8_NS_7WeakPtrIS3_EEJS4_S6_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"class.viz::OutputSurfaceFrame"* dereferenceable(96), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #12
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #12
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %13

13:                                               ; preds = %10, %5
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #12
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = bitcast i64* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = select i1 %14, i8* %17, i8* null
  %19 = getelementptr inbounds i8, i8* %18, i64 %1
  %20 = bitcast i8* %19 to %"class.viz::SkiaOutputDeviceVulkan"*
  %21 = and i64 %0, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %0, -1
  %27 = getelementptr i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32)**
  %29 = load void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32)*, void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32)** %28, align 8
  br label %32

30:                                               ; preds = %13
  %31 = inttoptr i64 %0 to void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32)*
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi void (%"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::OutputSurfaceFrame"*, i32)* [ %29, %23 ], [ %31, %30 ]
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* nonnull %7, %"class.viz::OutputSurfaceFrame"* dereferenceable(96) %3) #12
  %34 = load i32, i32* %4, align 4
  call void %33(%"class.viz::SkiaOutputDeviceVulkan"* %20, %"class.viz::OutputSurfaceFrame"* nonnull %7, i32 %34) #12
  call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %7) #12
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS2_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.viz::OutputSurfaceFrame"*
  tail call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* %5) #12
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #12
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::SkiaOutputDeviceVulkan"**
  %9 = load %"class.viz::SkiaOutputDeviceVulkan"*, %"class.viz::SkiaOutputDeviceVulkan"** %8, align 8
  %10 = icmp ne %"class.viz::SkiaOutputDeviceVulkan"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN3gpu15VulkanSwapChain11ScopedWriteC1EPS0_(%"class.gpu::VulkanSwapChain::ScopedWrite"*, %"class.gpu::VulkanSwapChain"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz22SkiaOutputDeviceVulkan17SkSurfaceSizePairENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.155"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast %class.SkSurface** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %189

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.155"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.155"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %57, i64 %33
  %59 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %58 to i64
  %60 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  %63 = add i64 %62, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #12
  %73 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %69, i64 1
  %74 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !16

77:                                               ; preds = %68
  %78 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 112
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #12
  %87 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 1
  %88 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #12
  %89 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 2
  %90 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #12
  %91 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 3
  %92 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #12
  %93 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 4
  %94 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #12
  %95 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 5
  %96 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #12
  %97 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 6
  %98 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #12
  %99 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 7
  %100 = bitcast %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #12
  %101 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %84, i64 8
  %102 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %101 to i64
  %103 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %60 to i64
  %106 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %0, i64 0, i32 0, i32 0
  %108 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %107, align 8
  %109 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %108 to i64
  %110 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %6, align 8
  %111 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %110, %108
  br i1 %111, label %161, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %110, i64 -1, i32 0, i32 0
  %114 = ptrtoint %class.SkSurface** %113 to i64
  %115 = sub i64 %114, %109
  %116 = and i64 %115, 16
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %132

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %110, i64 -1
  %120 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %58, i64 -1, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %119, i64 0, i32 0, i32 0
  %122 = load %class.SkSurface*, %class.SkSurface** %121, align 8
  %123 = icmp eq %class.SkSurface* %122, null
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %122, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 1 monotonic
  br label %127

127:                                              ; preds = %124, %118
  store %class.SkSurface* %122, %class.SkSurface** %120, align 8
  %128 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %58, i64 -1, i32 1
  %129 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %110, i64 -1, i32 1
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %128, align 8
  %131 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %58, i64 -1
  br label %132

132:                                              ; preds = %127, %112
  %133 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ undef, %112 ], [ %131, %127 ]
  %134 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %58, %112 ], [ %131, %127 ]
  %135 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %110, %112 ], [ %119, %127 ]
  %136 = icmp ult i64 %115, 16
  br i1 %136, label %156, label %137

137:                                              ; preds = %132, %193
  %138 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %197, %193 ], [ %134, %132 ]
  %139 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %151, %193 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %138, i64 -1, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %139, i64 -1, i32 0, i32 0
  %142 = load %class.SkSurface*, %class.SkSurface** %141, align 8
  %143 = icmp eq %class.SkSurface* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %142, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 1 monotonic
  br label %147

147:                                              ; preds = %144, %137
  store %class.SkSurface* %142, %class.SkSurface** %140, align 8
  %148 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %138, i64 -1, i32 1
  %149 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %139, i64 -1, i32 1
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %148, align 8
  %151 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %139, i64 -2
  %152 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %138, i64 -2, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %151, i64 0, i32 0, i32 0
  %154 = load %class.SkSurface*, %class.SkSurface** %153, align 8
  %155 = icmp eq %class.SkSurface* %154, null
  br i1 %155, label %193, label %190

156:                                              ; preds = %193, %132
  %157 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %133, %132 ], [ %197, %193 ]
  %158 = ptrtoint %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %157 to i64
  %159 = load i64, i64* %30, align 8
  %160 = load %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*, %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"** %6, align 8
  br label %161

161:                                              ; preds = %104, %156
  %162 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %160, %156 ], [ %108, %104 ]
  %163 = phi i64 [ %158, %156 ], [ %59, %104 ]
  %164 = phi i64 [ %159, %156 ], [ %109, %104 ]
  store i64 %163, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %165 = inttoptr i64 %164 to %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"*
  %166 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %162, %165
  br i1 %166, label %185, label %167

167:                                              ; preds = %161, %183
  %168 = phi %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* [ %169, %183 ], [ %162, %161 ]
  %169 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %168, i64 -1
  %170 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %169, i64 0, i32 0, i32 0
  %171 = load %class.SkSurface*, %class.SkSurface** %170, align 8
  %172 = icmp eq %class.SkSurface* %171, null
  br i1 %172, label %183, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %183

177:                                              ; preds = %173
  %178 = bitcast %class.SkSurface* %171 to %class.SkRefCntBase*
  %179 = bitcast %class.SkSurface* %171 to void (%class.SkRefCntBase*)***
  %180 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %179, align 8
  %181 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, i64 2
  %182 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %181, align 8
  tail call void %182(%class.SkRefCntBase* nonnull %178) #12
  br label %183

183:                                              ; preds = %177, %173, %167
  %184 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %169, %165
  br i1 %184, label %185, label %167

185:                                              ; preds = %183, %161
  %186 = icmp eq i64 %164, 0
  br i1 %186, label %189, label %187

187:                                              ; preds = %185
  %188 = inttoptr i64 %164 to i8*
  tail call void @_ZdlPv(i8* %188) #11
  br label %189

189:                                              ; preds = %187, %185, %27
  ret void

190:                                              ; preds = %147
  %191 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %154, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 1 monotonic
  br label %193

193:                                              ; preds = %190, %147
  store %class.SkSurface* %154, %class.SkSurface** %152, align 8
  %194 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %138, i64 -2, i32 1
  %195 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %139, i64 -2, i32 1
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair", %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %138, i64 -2
  %198 = icmp eq %"struct.viz::SkiaOutputDeviceVulkan::SkSurfaceSizePair"* %151, %108
  br i1 %198, label %156, label %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.164"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.gfx::Rect"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gfx::Rect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.gfx::Rect"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"class.gfx::Rect"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.164"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.164"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to %"class.gfx::Rect"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.gfx::Rect"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %33
  %59 = bitcast %"class.gfx::Rect"* %58 to i8*
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %56
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.gfx::Rect"* %60 to i64
  %64 = ptrtoint %"class.gfx::Rect"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.gfx::Rect"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %71
  %73 = ptrtoint %"class.gfx::Rect"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.gfx::Rect"* %72 to i8*
  %77 = bitcast %"class.gfx::Rect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.gfx::Rect"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.gfx::Rect"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.gfx::Rect"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{!"branch_weights", i32 1073205, i32 2146410443}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base14WeakPtrFactoryIN3viz22SkiaOutputDeviceVulkanEE10GetWeakPtrEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base14WeakPtrFactoryIN3viz22SkiaOutputDeviceVulkanEE10GetWeakPtrEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22SkiaOutputDeviceVulkanEFvNS3_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN3viz22SkiaOutputDeviceVulkanEFvNS1_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN3viz22SkiaOutputDeviceVulkanEFvNS1_18OutputSurfaceFrameEN3gfx10SwapResultEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!16 = distinct !{!16, !6}
