; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_multi_draw_instanced_base_vertex_base_instance.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_multi_draw_instanced_base_vertex_base_instance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.base::span.492" = type { %"struct.base::internal::ExtentStorage", i32* }
%"class.base::span.493" = type { %"struct.base::internal::ExtentStorage", i32* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.189" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.184" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"class.blink::TraceWrapperV8Reference.189" = type { %"class.v8::TracedReference.190" }
%"class.v8::TracedReference.190" = type { %"class.v8::BasicTracedReference.191" }
%"class.v8::BasicTracedReference.191" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance" = type { %"class.blink::WebGLExtension" }
%"class.blink::WebGLExtension" = type { %"class.blink::ScriptWrappable", %"class.blink::WeakMember.192" }
%"class.blink::WeakMember.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::WebGLRenderingContextBase"* }
%"class.blink::WebGLRenderingContextBase" = type <{ %"class.blink::CanvasRenderingContext.base", [7 x i8], %"class.blink::DrawingBuffer::Client", %"class.blink::NoAllocDirectCallHost", %class.scoped_refptr.302, %"class.blink::Member.364", i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer", i8, [7 x i8], %"class.blink::HeapTaskRunnerTimer", %class.scoped_refptr.266, i8, i8, i8, [5 x i8], %"class.blink::Member.367", %"class.blink::Member.370", %"class.blink::Member.370", %"class.WTF::Vector.384", i32, [4 x i8], %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.393", i8, [7 x i8], %"class.blink::Member.395", %"class.blink::HeapVector.423", i32, [4 x i8], %"class.WTF::Vector.432", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x float], i8, [3 x i8], [4 x i32], float, i32, [4 x i8], i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %"class.std::__1::unique_ptr.339", [45 x i8], [3 x i8], %"class.blink::HeapVector.442", %"class.WTF::HashSet", %"class.WTF::Vector.432", %"class.WTF::Vector.432", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", i32, i32, %"class.base::MRUCache.454", i32, i8, [3 x i8], %"class.blink::CanvasColorParams", [4 x i8] }>
%"class.blink::CanvasRenderingContext.base" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8 }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.195", i32 }>
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.210", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.246", i8, i32, i32, i32, %"class.WTF::Vector.261", i8, i8, i64, i64, %"class.base::RepeatingCallback.271", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.292" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.199" }
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__cxx_atomic_impl.202" }
%"struct.std::__1::__cxx_atomic_impl.202" = type { %"struct.std::__1::__cxx_atomic_base_impl.203" }
%"struct.std::__1::__cxx_atomic_base_impl.203" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.204" }
%"struct.std::__1::atomic.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__atomic_base.206" }
%"struct.std::__1::__atomic_base.206" = type { %"struct.std::__1::__cxx_atomic_impl.207" }
%"struct.std::__1::__cxx_atomic_impl.207" = type { %"struct.std::__1::__cxx_atomic_base_impl.208" }
%"struct.std::__1::__cxx_atomic_base_impl.208" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.199" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.209 }
%class.scoped_refptr.209 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.210" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.237", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.220, [384 x i64], %class.sk_sp.221, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.222", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.228" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.220 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.221 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.234, %class.SkPixmap, %class.sk_sp.236 }
%class.sk_sp.234 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.235, i32, i32 }
%class.sk_sp.235 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.199" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.204" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.236 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.249, %"class.std::__1::unique_ptr.250" }
%class.scoped_refptr.249 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.257", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.257" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.263" }
%"class.WTF::VectorBufferBase.263" = type { %class.scoped_refptr.264*, i32, i32 }
%class.scoped_refptr.264 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.266, %"struct.gpu::SyncToken", %"class.base::WeakPtr.268", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.265" }
%"class.base::RefCountedThreadSafe.265" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.268" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.271" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.286" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.std::__1::pair.288"*, %"struct.std::__1::pair.288"*, %"class.std::__1::__compressed_pair.289" }
%"struct.std::__1::pair.288" = type { i32, i32 }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::pair.288"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.235, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::DrawingBuffer::Client" = type { i32 (...)** }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.296", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon.301 }
%union.anon.301 = type { i64 }
%class.scoped_refptr.302 = type { %"class.blink::DrawingBuffer"* }
%"class.blink::DrawingBuffer" = type { %"class.cc::TextureLayerClient", %"class.WTF::RefCounted.303", %"class.WTF::Vector.305", %"class.blink::DrawingBuffer::Client"*, i32, i32, %"class.std::__1::unique_ptr.313", %"class.gpu::gles2::GLES2Interface"*, %"class.std::__1::unique_ptr.339", %"class.blink::IntSize", i8, i8, i8, i8, i8, %"struct.blink::Platform::GraphicsInfo", i8, i8, i32, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i32, i32, i32, i32, %"struct.gpu::Mailbox", i32, %class.scoped_refptr.348, %class.scoped_refptr.348, i8, i8, i32, i8, i8, %"class.gfx::ColorSpace", i32, i8, i32, i32, i32, i8, i8, i8, i32, %class.scoped_refptr.357, %"class.WTF::Deque.358", i32, i8, i32, i32, %"class.base::WeakPtrFactory.363" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted.303" = type { %"class.base::RefCounted.304" }
%"class.base::RefCounted.304" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"struct.blink::DrawingBuffer::RegisteredBitmap"*, i32, i32 }
%"struct.blink::DrawingBuffer::RegisteredBitmap" = type { %class.scoped_refptr.308, %"class.cc::SharedBitmapIdRegistration" }
%class.scoped_refptr.308 = type { %"class.cc::CrossThreadSharedBitmap"* }
%"class.cc::CrossThreadSharedBitmap" = type <{ %"class.base::RefCountedThreadSafe.309", %"struct.gpu::Mailbox", [4 x i8], %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.gfx::Size", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::SharedBitmapIdRegistration" = type { %"class.base::WeakPtr.310", %"struct.gpu::Mailbox" }
%"class.base::WeakPtr.310" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::ObserverList", %"class.base::WeakPtrFactory.335" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.328", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.330" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.blink::Platform::GraphicsInfo" = type { i32, i32, i32, i8, i8, i8, i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.183 }
%"class.blink::DrawingBuffer::ScopedStateRestorer" = type <{ %class.scoped_refptr.302, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%class.scoped_refptr.348 = type { %"struct.blink::DrawingBuffer::ColorBuffer"* }
%"struct.blink::DrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe.349", %"class.base::PlatformThreadRef", %"class.base::WeakPtr.350", %"class.blink::IntSize", i32, i32, %"class.std::__1::unique_ptr.351", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe.349" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.350" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.scoped_refptr.357 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.WTF::Deque.358" = type { %"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %class.scoped_refptr.348*, i32, i32 }
%"class.base::WeakPtrFactory.363" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::WebGLContextGroup"* }
%"class.blink::WebGLContextGroup" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.192", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.266, %"class.base::WeakPtrFactory.366" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.366" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.266 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.267" }>
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::WebGLBuffer"* }
%"class.blink::WebGLBuffer" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, i64 }
%"class.blink::WebGLSharedPlatform3DObject.base" = type <{ %"class.blink::WebGLSharedObject", i32 }>
%"class.blink::WebGLSharedObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.364" }
%"class.blink::WebGLObject.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ThreadState::PrefinalizerRegistration.369", [3 x i8], i32, i32, i8, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.369" = type { i8 }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::WebGLVertexArrayObjectBase"* }
%"class.blink::WebGLVertexArrayObjectBase" = type <{ %"class.blink::WebGLContextObject", i32, i32, i8, [7 x i8], %"class.blink::Member.367", %"class.blink::HeapVector", %"class.WTF::Vector.379", i8, [7 x i8] }>
%"class.blink::WebGLContextObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.372" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.193" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.375" }
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.blink::Member.367"*, i32, i32 }
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { i8*, i32, i32 }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { i32*, i32, i32 }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::WebGLProgram"* }
%"class.blink::WebGLProgram" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::WebGLFramebuffer"* }
%"class.blink::WebGLFramebuffer" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::WebGLRenderbuffer"* }
%"class.blink::WebGLRenderbuffer" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.407", i32, %"class.blink::Member.408", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.189", %"class.blink::SelfKeepAlive.420" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.399" }
%"class.blink::WeakMember.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.403" }
%"class.WTF::HashSet.403" = type { %"class.WTF::HashTable.404" }
%"class.WTF::HashTable.404" = type <{ %"class.blink::WeakMember.406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.406" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.407" = type { i8 }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.412, %"class.blink::Member.413", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.412 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.415" }
%"class.blink::Persistent.415" = type { %"class.blink::PersistentBase.416" }
%"class.blink::PersistentBase.416" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.417" }
%"class.base::StrongAlias.417" = type { %"class.base::UnguessableToken" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.418 }
%class.scoped_refptr.418 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.408", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.189", %class.scoped_refptr.419 }
%class.scoped_refptr.419 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::SelfKeepAlive.420" = type { %"class.blink::Persistent.421" }
%"class.blink::Persistent.421" = type { %"class.blink::PersistentBase.422" }
%"class.blink::PersistentBase.422" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::WebGLRenderingContextBase::TextureUnitState"*, i32, i32 }
%"class.blink::WebGLRenderingContextBase::TextureUnitState" = type { %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429" }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::WebGLTexture"* }
%"class.blink::WebGLTexture" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, %"struct.blink::WebGLTexture::VideoFrameUploadMetadata" }
%"struct.blink::WebGLTexture::VideoFrameUploadMetadata" = type <{ i32, %"class.blink::IntRect", [4 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache" = type { i32, %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.std::__1::unique_ptr.195"*, i32, i32 }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::Extensions3DUtil"* }
%"class.blink::Extensions3DUtil" = type <{ %"class.gpu::gles2::GLES2Interface"*, %"class.WTF::HashSet", %"class.WTF::HashSet", i8, [7 x i8] }>
%"class.blink::HeapVector.442" = type { %"class.WTF::Vector.445" }
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"class.blink::Member.448"*, i32, i32 }
%"class.blink::Member.448" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { i32*, i32, i32 }
%"class.WTF::HashSet.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::MRUCache.454" = type { %"class.base::MRUCacheBase.455" }
%"class.base::MRUCacheBase.455" = type { i32 (...)**, %"class.std::__1::list.456", %"class.std::__1::map.463", i64 }
%"class.std::__1::list.456" = type { %"class.std::__1::__list_imp.457" }
%"class.std::__1::__list_imp.457" = type { %"struct.std::__1::__list_node_base.458", %"class.std::__1::__compressed_pair.459" }
%"struct.std::__1::__list_node_base.458" = type { %"struct.std::__1::__list_node_base.458"*, %"struct.std::__1::__list_node_base.458"* }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.463" = type { %"class.std::__1::__tree.464" }
%"class.std::__1::__tree.464" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.465", %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.blink::V8UnionInt32ArrayOrLongSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::NotShared", %"class.WTF::Vector.480" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::NotShared" = type { %"class.blink::Member.476" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.478" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { i32*, i32, i32 }
%"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::NotShared.485", %"class.WTF::Vector.432" }
%"class.blink::NotShared.485" = type { %"class.blink::Member.486" }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::DOMTypedArray.488"* }
%"class.blink::DOMTypedArray.488" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.v8::internal::Isolate" = type opaque

@.str = private unnamed_addr constant [46 x i8] c"WebGLMultiDrawInstancedBaseVertexBaseInstance\00", align 1
@_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink45WebGLMultiDrawInstancedBaseVertexBaseInstance18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance18wrapper_type_info_E, align 8
@_ZZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_155v8_webgl_multi_draw_instanced_base_vertex_base_instance58MultiDrawArraysInstancedBaseInstanceWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 10, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_155v8_webgl_multi_draw_instanced_base_vertex_base_instance70MultiDrawElementsInstancedBaseVertexBaseInstanceWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 13, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [42 x i8] c"multiDrawArraysInstancedBaseInstanceWEBGL\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #3
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #3
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* null) #3
  %8 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #3
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2, %"class.v8::Signature"* %11, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #3
  %12 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 11) #3
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #3
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %17 = tail call i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Value"* %16) #3
  %18 = trunc i16 %17 to i8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %15
  tail call void @_ZN2v82V817FromJustIsNothingEv() #3
  br label %21

21:                                               ; preds = %7, %20, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #3
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink47V8WebGLMultiDrawInstancedBaseVertexBaseInstance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_155v8_webgl_multi_draw_instanced_base_vertex_base_instance58MultiDrawArraysInstancedBaseInstanceWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::span.492", align 8
  %3 = alloca %"class.base::span.492", align 8
  %4 = alloca %"class.base::span.493", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %17 = bitcast i8** %16 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #3
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 10
  br i1 %25, label %26, label %46, !prof !2

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #3
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 10, i32 %24) #3
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #3
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #3
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #3
  br label %336

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %50, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load i16, i16* %58, align 2
  switch i16 %59, label %64 [
    i16 1057, label %60
    i16 1056, label %60
    i16 1040, label %60
  ]

60:                                               ; preds = %46, %46, %46
  %61 = add i64 %50, 19
  %62 = inttoptr i64 %61 to %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"**
  %63 = load %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"*, %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"** %62, align 1
  br label %76

64:                                               ; preds = %46
  %65 = bitcast i64* %49 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #3
  %67 = load i32, i32* %23, align 8
  %68 = bitcast i8* %66 to %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"*
  %69 = icmp sgt i32 %67, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = load i64*, i64** %7, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 1
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 160
  %75 = inttoptr i64 %74 to %"class.v8::Value"*
  br label %80

76:                                               ; preds = %60, %64
  %77 = phi %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"* [ %63, %60 ], [ %68, %64 ]
  %78 = bitcast i64** %47 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %70, %76
  %81 = phi %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"* [ %68, %70 ], [ %77, %76 ]
  %82 = phi %"class.v8::Value"* [ %75, %70 ], [ %79, %76 ]
  %83 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %82) #3
  br i1 %83, label %84, label %87, !prof !3

84:                                               ; preds = %80
  %85 = bitcast %"class.v8::Value"* %82 to %"class.v8::Uint32"*
  %86 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %85) #3
  br label %96

87:                                               ; preds = %80
  %88 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %82) #3
  br i1 %88, label %89, label %92, !prof !3

89:                                               ; preds = %87
  %90 = bitcast %"class.v8::Value"* %82 to %"class.v8::Int32"*
  %91 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %90) #3
  br label %96

92:                                               ; preds = %87
  %93 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %94 = load i32, i32* %20, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %336

96:                                               ; preds = %89, %84, %92
  %97 = phi i32 [ %93, %92 ], [ %91, %89 ], [ %86, %84 ]
  %98 = load i32, i32* %23, align 8
  %99 = icmp sgt i32 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = load i64*, i64** %7, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %96
  %107 = load i64*, i64** %47, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 1
  %109 = bitcast i64* %108 to %"class.v8::Value"*
  br label %110

110:                                              ; preds = %100, %106
  %111 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  %112 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %111, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %113 = load i32, i32* %20, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %336

115:                                              ; preds = %110
  %116 = load i32, i32* %23, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %7, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %47, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %129) #3
  br i1 %130, label %131, label %134, !prof !3

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Uint32"*
  %133 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %132) #3
  br label %141

134:                                              ; preds = %128
  %135 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %129) #3
  br i1 %135, label %136, label %139, !prof !3

136:                                              ; preds = %134
  %137 = bitcast %"class.v8::Value"* %129 to %"class.v8::Int32"*
  %138 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %137) #3
  br label %141

139:                                              ; preds = %134
  %140 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %129, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %141

141:                                              ; preds = %131, %136, %139
  %142 = phi i32 [ %133, %131 ], [ %138, %136 ], [ %140, %139 ]
  %143 = load i32, i32* %20, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %336

145:                                              ; preds = %141
  %146 = load i32, i32* %23, align 8
  %147 = icmp sgt i32 %146, 3
  br i1 %147, label %154, label %148

148:                                              ; preds = %145
  %149 = load i64*, i64** %7, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 1
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 160
  %153 = inttoptr i64 %152 to %"class.v8::Value"*
  br label %158

154:                                              ; preds = %145
  %155 = load i64*, i64** %47, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  %157 = bitcast i64* %156 to %"class.v8::Value"*
  br label %158

158:                                              ; preds = %148, %154
  %159 = phi %"class.v8::Value"* [ %153, %148 ], [ %157, %154 ]
  %160 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %159, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %161 = load i32, i32* %20, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %336

163:                                              ; preds = %158
  %164 = load i32, i32* %23, align 8
  %165 = icmp sgt i32 %164, 4
  br i1 %165, label %172, label %166

166:                                              ; preds = %163
  %167 = load i64*, i64** %7, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 1
  %169 = load i64, i64* %168, align 8
  %170 = add i64 %169, 160
  %171 = inttoptr i64 %170 to %"class.v8::Value"*
  br label %176

172:                                              ; preds = %163
  %173 = load i64*, i64** %47, align 8
  %174 = getelementptr inbounds i64, i64* %173, i64 4
  %175 = bitcast i64* %174 to %"class.v8::Value"*
  br label %176

176:                                              ; preds = %166, %172
  %177 = phi %"class.v8::Value"* [ %171, %166 ], [ %175, %172 ]
  %178 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %177) #3
  br i1 %178, label %179, label %182, !prof !3

179:                                              ; preds = %176
  %180 = bitcast %"class.v8::Value"* %177 to %"class.v8::Uint32"*
  %181 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %180) #3
  br label %189

182:                                              ; preds = %176
  %183 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %177) #3
  br i1 %183, label %184, label %187, !prof !3

184:                                              ; preds = %182
  %185 = bitcast %"class.v8::Value"* %177 to %"class.v8::Int32"*
  %186 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %185) #3
  br label %189

187:                                              ; preds = %182
  %188 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %177, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %189

189:                                              ; preds = %179, %184, %187
  %190 = phi i32 [ %181, %179 ], [ %186, %184 ], [ %188, %187 ]
  %191 = load i32, i32* %20, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %336

193:                                              ; preds = %189
  %194 = load i32, i32* %23, align 8
  %195 = icmp sgt i32 %194, 5
  br i1 %195, label %202, label %196

196:                                              ; preds = %193
  %197 = load i64*, i64** %7, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 1
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 160
  %201 = inttoptr i64 %200 to %"class.v8::Value"*
  br label %206

202:                                              ; preds = %193
  %203 = load i64*, i64** %47, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 5
  %205 = bitcast i64* %204 to %"class.v8::Value"*
  br label %206

206:                                              ; preds = %196, %202
  %207 = phi %"class.v8::Value"* [ %201, %196 ], [ %205, %202 ]
  %208 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %207, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %209 = load i32, i32* %20, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %336

211:                                              ; preds = %206
  %212 = load i32, i32* %23, align 8
  %213 = icmp sgt i32 %212, 6
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = load i64*, i64** %7, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 1
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 160
  %219 = inttoptr i64 %218 to %"class.v8::Value"*
  br label %224

220:                                              ; preds = %211
  %221 = load i64*, i64** %47, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 6
  %223 = bitcast i64* %222 to %"class.v8::Value"*
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi %"class.v8::Value"* [ %219, %214 ], [ %223, %220 ]
  %226 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %225) #3
  br i1 %226, label %227, label %230, !prof !3

227:                                              ; preds = %224
  %228 = bitcast %"class.v8::Value"* %225 to %"class.v8::Uint32"*
  %229 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %228) #3
  br label %237

230:                                              ; preds = %224
  %231 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %225) #3
  br i1 %231, label %232, label %235, !prof !3

232:                                              ; preds = %230
  %233 = bitcast %"class.v8::Value"* %225 to %"class.v8::Int32"*
  %234 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %233) #3
  br label %237

235:                                              ; preds = %230
  %236 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %225, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %237

237:                                              ; preds = %227, %232, %235
  %238 = phi i32 [ %229, %227 ], [ %234, %232 ], [ %236, %235 ]
  %239 = load i32, i32* %20, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %336

241:                                              ; preds = %237
  %242 = load i32, i32* %23, align 8
  %243 = icmp sgt i32 %242, 7
  br i1 %243, label %250, label %244

244:                                              ; preds = %241
  %245 = load i64*, i64** %7, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = load i64, i64* %246, align 8
  %248 = add i64 %247, 160
  %249 = inttoptr i64 %248 to %"class.v8::Value"*
  br label %254

250:                                              ; preds = %241
  %251 = load i64*, i64** %47, align 8
  %252 = getelementptr inbounds i64, i64* %251, i64 7
  %253 = bitcast i64* %252 to %"class.v8::Value"*
  br label %254

254:                                              ; preds = %244, %250
  %255 = phi %"class.v8::Value"* [ %249, %244 ], [ %253, %250 ]
  %256 = call %"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence"* @_ZN5blink40V8UnionUint32ArrayOrUnsignedLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %255, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %257 = load i32, i32* %20, align 8
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %336

259:                                              ; preds = %254
  %260 = load i32, i32* %23, align 8
  %261 = icmp sgt i32 %260, 8
  br i1 %261, label %268, label %262

262:                                              ; preds = %259
  %263 = load i64*, i64** %7, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, 160
  %267 = inttoptr i64 %266 to %"class.v8::Value"*
  br label %272

268:                                              ; preds = %259
  %269 = load i64*, i64** %47, align 8
  %270 = getelementptr inbounds i64, i64* %269, i64 8
  %271 = bitcast i64* %270 to %"class.v8::Value"*
  br label %272

272:                                              ; preds = %262, %268
  %273 = phi %"class.v8::Value"* [ %267, %262 ], [ %271, %268 ]
  %274 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %273) #3
  br i1 %274, label %275, label %278, !prof !3

275:                                              ; preds = %272
  %276 = bitcast %"class.v8::Value"* %273 to %"class.v8::Uint32"*
  %277 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %276) #3
  br label %285

278:                                              ; preds = %272
  %279 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %273) #3
  br i1 %279, label %280, label %283, !prof !3

280:                                              ; preds = %278
  %281 = bitcast %"class.v8::Value"* %273 to %"class.v8::Int32"*
  %282 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %281) #3
  br label %285

283:                                              ; preds = %278
  %284 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %273, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %285

285:                                              ; preds = %275, %280, %283
  %286 = phi i32 [ %277, %275 ], [ %282, %280 ], [ %284, %283 ]
  %287 = load i32, i32* %20, align 8
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %336

289:                                              ; preds = %285
  %290 = load i32, i32* %23, align 8
  %291 = icmp sgt i32 %290, 9
  br i1 %291, label %298, label %292

292:                                              ; preds = %289
  %293 = load i64*, i64** %7, align 8
  %294 = getelementptr inbounds i64, i64* %293, i64 1
  %295 = load i64, i64* %294, align 8
  %296 = add i64 %295, 160
  %297 = inttoptr i64 %296 to %"class.v8::Value"*
  br label %302

298:                                              ; preds = %289
  %299 = load i64*, i64** %47, align 8
  %300 = getelementptr inbounds i64, i64* %299, i64 9
  %301 = bitcast i64* %300 to %"class.v8::Value"*
  br label %302

302:                                              ; preds = %292, %298
  %303 = phi %"class.v8::Value"* [ %297, %292 ], [ %301, %298 ]
  %304 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %303) #3
  br i1 %304, label %305, label %308, !prof !3

305:                                              ; preds = %302
  %306 = bitcast %"class.v8::Value"* %303 to %"class.v8::Int32"*
  %307 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %306) #3
  br label %310

308:                                              ; preds = %302
  %309 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %303, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %310

310:                                              ; preds = %305, %308
  %311 = phi i32 [ %307, %305 ], [ %309, %308 ]
  %312 = load i32, i32* %20, align 8
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %336

314:                                              ; preds = %310
  %315 = bitcast %"class.base::span.492"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315)
  %316 = bitcast %"class.base::span.492"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %316)
  %317 = bitcast %"class.base::span.493"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %317)
  %318 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %112) #3
  %319 = extractvalue { i64, i32* } %318, 0
  %320 = extractvalue { i64, i32* } %318, 1
  %321 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %160) #3
  %322 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %2, i64 0, i32 0, i32 0
  %323 = extractvalue { i64, i32* } %321, 0
  store i64 %323, i64* %322, align 8
  %324 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %2, i64 0, i32 1
  %325 = extractvalue { i64, i32* } %321, 1
  store i32* %325, i32** %324, align 8
  %326 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %208) #3
  %327 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %3, i64 0, i32 0, i32 0
  %328 = extractvalue { i64, i32* } %326, 0
  store i64 %328, i64* %327, align 8
  %329 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %3, i64 0, i32 1
  %330 = extractvalue { i64, i32* } %326, 1
  store i32* %330, i32** %329, align 8
  %331 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_40V8UnionUint32ArrayOrUnsignedLongSequenceE(%"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence"* %256) #3
  %332 = getelementptr inbounds %"class.base::span.493", %"class.base::span.493"* %4, i64 0, i32 0, i32 0
  %333 = extractvalue { i64, i32* } %331, 0
  store i64 %333, i64* %332, align 8
  %334 = getelementptr inbounds %"class.base::span.493", %"class.base::span.493"* %4, i64 0, i32 1
  %335 = extractvalue { i64, i32* } %331, 1
  store i32* %335, i32** %334, align 8
  call void @_ZN5blink45WebGLMultiDrawInstancedBaseVertexBaseInstance40multiDrawArraysInstancedBaseInstanceImplEjN4base4spanIKiLm18446744073709551615EEEjS4_jS4_jNS2_IKjLm18446744073709551615EEEji(%"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"* %81, i32 %97, i64 %319, i32* %320, i32 %142, %"class.base::span.492"* nonnull byval(%"class.base::span.492") align 8 %2, i32 %190, %"class.base::span.492"* nonnull byval(%"class.base::span.492") align 8 %3, i32 %238, %"class.base::span.493"* nonnull byval(%"class.base::span.493") align 8 %4, i32 %286, i32 %311) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %316)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %317)
  br label %336

336:                                              ; preds = %310, %285, %254, %237, %206, %189, %158, %141, %110, %92, %314, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %337 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %338 = load i64*, i64** %337, align 8
  %339 = icmp eq i64* %338, null
  br i1 %339, label %349, label %340

340:                                              ; preds = %336
  %341 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %342 = bitcast %"class.v8::Isolate"* %341 to %"class.v8::internal::Isolate"*
  %343 = load i64, i64* %338, align 8
  %344 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %342, i64 %343) #3
  %345 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %341) #3
  br i1 %345, label %349, label %346

346:                                              ; preds = %340
  %347 = bitcast i64* %344 to %"class.v8::Value"*
  %348 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %341, %"class.v8::Value"* %347) #3
  br label %349

349:                                              ; preds = %346, %340, %336
  %350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %351 = icmp eq %"class.WTF::StringImpl"* %350, null
  br i1 %351, label %365, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  br i1 %356, label %359, label %361

359:                                              ; preds = %352
  %360 = add i32 %358, -1
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %359, %352
  %362 = phi i32 [ %360, %359 ], [ %358, %352 ]
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %350) #3
  br label %365

365:                                              ; preds = %349, %361, %364
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_155v8_webgl_multi_draw_instanced_base_vertex_base_instance70MultiDrawElementsInstancedBaseVertexBaseInstanceWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::span.492", align 8
  %3 = alloca %"class.base::span.492", align 8
  %4 = alloca %"class.base::span.492", align 8
  %5 = alloca %"class.base::span.493", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %18 = bitcast i8** %17 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.WTF::StringImpl"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #3
  %24 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 13
  br i1 %26, label %27, label %47, !prof !2

27:                                               ; preds = %1
  %28 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #3
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 13, i32 %25) #3
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #3
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #3
  br label %46

46:                                               ; preds = %27, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #3
  br label %421

47:                                               ; preds = %1
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 -1
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i64 %51, -4294967296
  %56 = zext i32 %54 to i64
  %57 = or i64 %55, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load i16, i16* %59, align 2
  switch i16 %60, label %65 [
    i16 1057, label %61
    i16 1056, label %61
    i16 1040, label %61
  ]

61:                                               ; preds = %47, %47, %47
  %62 = add i64 %51, 19
  %63 = inttoptr i64 %62 to %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"**
  %64 = load %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"*, %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"** %63, align 1
  br label %77

65:                                               ; preds = %47
  %66 = bitcast i64* %50 to %"class.v8::Object"*
  %67 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %66, i32 1) #3
  %68 = load i32, i32* %24, align 8
  %69 = bitcast i8* %67 to %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"*
  %70 = icmp sgt i32 %68, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %8, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %81

77:                                               ; preds = %61, %65
  %78 = phi %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"* [ %64, %61 ], [ %69, %65 ]
  %79 = bitcast i64** %48 to %"class.v8::Value"**
  %80 = load %"class.v8::Value"*, %"class.v8::Value"** %79, align 8
  br label %81

81:                                               ; preds = %71, %77
  %82 = phi %"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"* [ %69, %71 ], [ %78, %77 ]
  %83 = phi %"class.v8::Value"* [ %76, %71 ], [ %80, %77 ]
  %84 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %83) #3
  br i1 %84, label %85, label %88, !prof !3

85:                                               ; preds = %81
  %86 = bitcast %"class.v8::Value"* %83 to %"class.v8::Uint32"*
  %87 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %86) #3
  br label %97

88:                                               ; preds = %81
  %89 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %83) #3
  br i1 %89, label %90, label %93, !prof !3

90:                                               ; preds = %88
  %91 = bitcast %"class.v8::Value"* %83 to %"class.v8::Int32"*
  %92 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %91) #3
  br label %97

93:                                               ; preds = %88
  %94 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %83, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  %95 = load i32, i32* %21, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %421

97:                                               ; preds = %90, %85, %93
  %98 = phi i32 [ %94, %93 ], [ %92, %90 ], [ %87, %85 ]
  %99 = load i32, i32* %24, align 8
  %100 = icmp sgt i32 %99, 1
  br i1 %100, label %107, label %101

101:                                              ; preds = %97
  %102 = load i64*, i64** %8, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 1
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 160
  %106 = inttoptr i64 %105 to %"class.v8::Value"*
  br label %111

107:                                              ; preds = %97
  %108 = load i64*, i64** %48, align 8
  %109 = getelementptr inbounds i64, i64* %108, i64 1
  %110 = bitcast i64* %109 to %"class.v8::Value"*
  br label %111

111:                                              ; preds = %101, %107
  %112 = phi %"class.v8::Value"* [ %106, %101 ], [ %110, %107 ]
  %113 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %112, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  %114 = load i32, i32* %21, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %421

116:                                              ; preds = %111
  %117 = load i32, i32* %24, align 8
  %118 = icmp sgt i32 %117, 2
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = load i64*, i64** %8, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, 160
  %124 = inttoptr i64 %123 to %"class.v8::Value"*
  br label %129

125:                                              ; preds = %116
  %126 = load i64*, i64** %48, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 2
  %128 = bitcast i64* %127 to %"class.v8::Value"*
  br label %129

129:                                              ; preds = %119, %125
  %130 = phi %"class.v8::Value"* [ %124, %119 ], [ %128, %125 ]
  %131 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %130) #3
  br i1 %131, label %132, label %135, !prof !3

132:                                              ; preds = %129
  %133 = bitcast %"class.v8::Value"* %130 to %"class.v8::Uint32"*
  %134 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %133) #3
  br label %142

135:                                              ; preds = %129
  %136 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %130) #3
  br i1 %136, label %137, label %140, !prof !3

137:                                              ; preds = %135
  %138 = bitcast %"class.v8::Value"* %130 to %"class.v8::Int32"*
  %139 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %138) #3
  br label %142

140:                                              ; preds = %135
  %141 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %130, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %142

142:                                              ; preds = %132, %137, %140
  %143 = phi i32 [ %134, %132 ], [ %139, %137 ], [ %141, %140 ]
  %144 = load i32, i32* %21, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %421

146:                                              ; preds = %142
  %147 = load i32, i32* %24, align 8
  %148 = icmp sgt i32 %147, 3
  br i1 %148, label %155, label %149

149:                                              ; preds = %146
  %150 = load i64*, i64** %8, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 160
  %154 = inttoptr i64 %153 to %"class.v8::Value"*
  br label %159

155:                                              ; preds = %146
  %156 = load i64*, i64** %48, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 3
  %158 = bitcast i64* %157 to %"class.v8::Value"*
  br label %159

159:                                              ; preds = %149, %155
  %160 = phi %"class.v8::Value"* [ %154, %149 ], [ %158, %155 ]
  %161 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %160) #3
  br i1 %161, label %162, label %165, !prof !3

162:                                              ; preds = %159
  %163 = bitcast %"class.v8::Value"* %160 to %"class.v8::Uint32"*
  %164 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %163) #3
  br label %172

165:                                              ; preds = %159
  %166 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %160) #3
  br i1 %166, label %167, label %170, !prof !3

167:                                              ; preds = %165
  %168 = bitcast %"class.v8::Value"* %160 to %"class.v8::Int32"*
  %169 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %168) #3
  br label %172

170:                                              ; preds = %165
  %171 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %160, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %172

172:                                              ; preds = %162, %167, %170
  %173 = phi i32 [ %164, %162 ], [ %169, %167 ], [ %171, %170 ]
  %174 = load i32, i32* %21, align 8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %421

176:                                              ; preds = %172
  %177 = load i32, i32* %24, align 8
  %178 = icmp sgt i32 %177, 4
  br i1 %178, label %185, label %179

179:                                              ; preds = %176
  %180 = load i64*, i64** %8, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 1
  %182 = load i64, i64* %181, align 8
  %183 = add i64 %182, 160
  %184 = inttoptr i64 %183 to %"class.v8::Value"*
  br label %189

185:                                              ; preds = %176
  %186 = load i64*, i64** %48, align 8
  %187 = getelementptr inbounds i64, i64* %186, i64 4
  %188 = bitcast i64* %187 to %"class.v8::Value"*
  br label %189

189:                                              ; preds = %179, %185
  %190 = phi %"class.v8::Value"* [ %184, %179 ], [ %188, %185 ]
  %191 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %190, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  %192 = load i32, i32* %21, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %421

194:                                              ; preds = %189
  %195 = load i32, i32* %24, align 8
  %196 = icmp sgt i32 %195, 5
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  %198 = load i64*, i64** %8, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 1
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 160
  %202 = inttoptr i64 %201 to %"class.v8::Value"*
  br label %207

203:                                              ; preds = %194
  %204 = load i64*, i64** %48, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 5
  %206 = bitcast i64* %205 to %"class.v8::Value"*
  br label %207

207:                                              ; preds = %197, %203
  %208 = phi %"class.v8::Value"* [ %202, %197 ], [ %206, %203 ]
  %209 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %208) #3
  br i1 %209, label %210, label %213, !prof !3

210:                                              ; preds = %207
  %211 = bitcast %"class.v8::Value"* %208 to %"class.v8::Uint32"*
  %212 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %211) #3
  br label %220

213:                                              ; preds = %207
  %214 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %208) #3
  br i1 %214, label %215, label %218, !prof !3

215:                                              ; preds = %213
  %216 = bitcast %"class.v8::Value"* %208 to %"class.v8::Int32"*
  %217 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %216) #3
  br label %220

218:                                              ; preds = %213
  %219 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %208, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %220

220:                                              ; preds = %210, %215, %218
  %221 = phi i32 [ %212, %210 ], [ %217, %215 ], [ %219, %218 ]
  %222 = load i32, i32* %21, align 8
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %421

224:                                              ; preds = %220
  %225 = load i32, i32* %24, align 8
  %226 = icmp sgt i32 %225, 6
  br i1 %226, label %233, label %227

227:                                              ; preds = %224
  %228 = load i64*, i64** %8, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 1
  %230 = load i64, i64* %229, align 8
  %231 = add i64 %230, 160
  %232 = inttoptr i64 %231 to %"class.v8::Value"*
  br label %237

233:                                              ; preds = %224
  %234 = load i64*, i64** %48, align 8
  %235 = getelementptr inbounds i64, i64* %234, i64 6
  %236 = bitcast i64* %235 to %"class.v8::Value"*
  br label %237

237:                                              ; preds = %227, %233
  %238 = phi %"class.v8::Value"* [ %232, %227 ], [ %236, %233 ]
  %239 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %238, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  %240 = load i32, i32* %21, align 8
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %421

242:                                              ; preds = %237
  %243 = load i32, i32* %24, align 8
  %244 = icmp sgt i32 %243, 7
  br i1 %244, label %251, label %245

245:                                              ; preds = %242
  %246 = load i64*, i64** %8, align 8
  %247 = getelementptr inbounds i64, i64* %246, i64 1
  %248 = load i64, i64* %247, align 8
  %249 = add i64 %248, 160
  %250 = inttoptr i64 %249 to %"class.v8::Value"*
  br label %255

251:                                              ; preds = %242
  %252 = load i64*, i64** %48, align 8
  %253 = getelementptr inbounds i64, i64* %252, i64 7
  %254 = bitcast i64* %253 to %"class.v8::Value"*
  br label %255

255:                                              ; preds = %245, %251
  %256 = phi %"class.v8::Value"* [ %250, %245 ], [ %254, %251 ]
  %257 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %256) #3
  br i1 %257, label %258, label %261, !prof !3

258:                                              ; preds = %255
  %259 = bitcast %"class.v8::Value"* %256 to %"class.v8::Uint32"*
  %260 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %259) #3
  br label %268

261:                                              ; preds = %255
  %262 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %256) #3
  br i1 %262, label %263, label %266, !prof !3

263:                                              ; preds = %261
  %264 = bitcast %"class.v8::Value"* %256 to %"class.v8::Int32"*
  %265 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %264) #3
  br label %268

266:                                              ; preds = %261
  %267 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %256, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %268

268:                                              ; preds = %258, %263, %266
  %269 = phi i32 [ %260, %258 ], [ %265, %263 ], [ %267, %266 ]
  %270 = load i32, i32* %21, align 8
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %421

272:                                              ; preds = %268
  %273 = load i32, i32* %24, align 8
  %274 = icmp sgt i32 %273, 8
  br i1 %274, label %281, label %275

275:                                              ; preds = %272
  %276 = load i64*, i64** %8, align 8
  %277 = getelementptr inbounds i64, i64* %276, i64 1
  %278 = load i64, i64* %277, align 8
  %279 = add i64 %278, 160
  %280 = inttoptr i64 %279 to %"class.v8::Value"*
  br label %285

281:                                              ; preds = %272
  %282 = load i64*, i64** %48, align 8
  %283 = getelementptr inbounds i64, i64* %282, i64 8
  %284 = bitcast i64* %283 to %"class.v8::Value"*
  br label %285

285:                                              ; preds = %275, %281
  %286 = phi %"class.v8::Value"* [ %280, %275 ], [ %284, %281 ]
  %287 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %286, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  %288 = load i32, i32* %21, align 8
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %421

290:                                              ; preds = %285
  %291 = load i32, i32* %24, align 8
  %292 = icmp sgt i32 %291, 9
  br i1 %292, label %299, label %293

293:                                              ; preds = %290
  %294 = load i64*, i64** %8, align 8
  %295 = getelementptr inbounds i64, i64* %294, i64 1
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %296, 160
  %298 = inttoptr i64 %297 to %"class.v8::Value"*
  br label %303

299:                                              ; preds = %290
  %300 = load i64*, i64** %48, align 8
  %301 = getelementptr inbounds i64, i64* %300, i64 9
  %302 = bitcast i64* %301 to %"class.v8::Value"*
  br label %303

303:                                              ; preds = %293, %299
  %304 = phi %"class.v8::Value"* [ %298, %293 ], [ %302, %299 ]
  %305 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %304) #3
  br i1 %305, label %306, label %309, !prof !3

306:                                              ; preds = %303
  %307 = bitcast %"class.v8::Value"* %304 to %"class.v8::Uint32"*
  %308 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %307) #3
  br label %316

309:                                              ; preds = %303
  %310 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %304) #3
  br i1 %310, label %311, label %314, !prof !3

311:                                              ; preds = %309
  %312 = bitcast %"class.v8::Value"* %304 to %"class.v8::Int32"*
  %313 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %312) #3
  br label %316

314:                                              ; preds = %309
  %315 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %304, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %316

316:                                              ; preds = %306, %311, %314
  %317 = phi i32 [ %308, %306 ], [ %313, %311 ], [ %315, %314 ]
  %318 = load i32, i32* %21, align 8
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %421

320:                                              ; preds = %316
  %321 = load i32, i32* %24, align 8
  %322 = icmp sgt i32 %321, 10
  br i1 %322, label %329, label %323

323:                                              ; preds = %320
  %324 = load i64*, i64** %8, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %333

329:                                              ; preds = %320
  %330 = load i64*, i64** %48, align 8
  %331 = getelementptr inbounds i64, i64* %330, i64 10
  %332 = bitcast i64* %331 to %"class.v8::Value"*
  br label %333

333:                                              ; preds = %323, %329
  %334 = phi %"class.v8::Value"* [ %328, %323 ], [ %332, %329 ]
  %335 = call %"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence"* @_ZN5blink40V8UnionUint32ArrayOrUnsignedLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %334, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  %336 = load i32, i32* %21, align 8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %421

338:                                              ; preds = %333
  %339 = load i32, i32* %24, align 8
  %340 = icmp sgt i32 %339, 11
  br i1 %340, label %347, label %341

341:                                              ; preds = %338
  %342 = load i64*, i64** %8, align 8
  %343 = getelementptr inbounds i64, i64* %342, i64 1
  %344 = load i64, i64* %343, align 8
  %345 = add i64 %344, 160
  %346 = inttoptr i64 %345 to %"class.v8::Value"*
  br label %351

347:                                              ; preds = %338
  %348 = load i64*, i64** %48, align 8
  %349 = getelementptr inbounds i64, i64* %348, i64 11
  %350 = bitcast i64* %349 to %"class.v8::Value"*
  br label %351

351:                                              ; preds = %341, %347
  %352 = phi %"class.v8::Value"* [ %346, %341 ], [ %350, %347 ]
  %353 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %352) #3
  br i1 %353, label %354, label %357, !prof !3

354:                                              ; preds = %351
  %355 = bitcast %"class.v8::Value"* %352 to %"class.v8::Uint32"*
  %356 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %355) #3
  br label %364

357:                                              ; preds = %351
  %358 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %352) #3
  br i1 %358, label %359, label %362, !prof !3

359:                                              ; preds = %357
  %360 = bitcast %"class.v8::Value"* %352 to %"class.v8::Int32"*
  %361 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %360) #3
  br label %364

362:                                              ; preds = %357
  %363 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %352, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %364

364:                                              ; preds = %354, %359, %362
  %365 = phi i32 [ %356, %354 ], [ %361, %359 ], [ %363, %362 ]
  %366 = load i32, i32* %21, align 8
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %421

368:                                              ; preds = %364
  %369 = load i32, i32* %24, align 8
  %370 = icmp sgt i32 %369, 12
  br i1 %370, label %377, label %371

371:                                              ; preds = %368
  %372 = load i64*, i64** %8, align 8
  %373 = getelementptr inbounds i64, i64* %372, i64 1
  %374 = load i64, i64* %373, align 8
  %375 = add i64 %374, 160
  %376 = inttoptr i64 %375 to %"class.v8::Value"*
  br label %381

377:                                              ; preds = %368
  %378 = load i64*, i64** %48, align 8
  %379 = getelementptr inbounds i64, i64* %378, i64 12
  %380 = bitcast i64* %379 to %"class.v8::Value"*
  br label %381

381:                                              ; preds = %371, %377
  %382 = phi %"class.v8::Value"* [ %376, %371 ], [ %380, %377 ]
  %383 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %382) #3
  br i1 %383, label %384, label %387, !prof !3

384:                                              ; preds = %381
  %385 = bitcast %"class.v8::Value"* %382 to %"class.v8::Int32"*
  %386 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %385) #3
  br label %389

387:                                              ; preds = %381
  %388 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %382, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #3
  br label %389

389:                                              ; preds = %384, %387
  %390 = phi i32 [ %386, %384 ], [ %388, %387 ]
  %391 = load i32, i32* %21, align 8
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %421

393:                                              ; preds = %389
  %394 = bitcast %"class.base::span.492"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %394)
  %395 = bitcast %"class.base::span.492"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %395)
  %396 = bitcast %"class.base::span.492"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %396)
  %397 = bitcast %"class.base::span.493"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %397)
  %398 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %113) #3
  %399 = extractvalue { i64, i32* } %398, 0
  %400 = extractvalue { i64, i32* } %398, 1
  %401 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %191) #3
  %402 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %2, i64 0, i32 0, i32 0
  %403 = extractvalue { i64, i32* } %401, 0
  store i64 %403, i64* %402, align 8
  %404 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %2, i64 0, i32 1
  %405 = extractvalue { i64, i32* } %401, 1
  store i32* %405, i32** %404, align 8
  %406 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %239) #3
  %407 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %3, i64 0, i32 0, i32 0
  %408 = extractvalue { i64, i32* } %406, 0
  store i64 %408, i64* %407, align 8
  %409 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %3, i64 0, i32 1
  %410 = extractvalue { i64, i32* } %406, 1
  store i32* %410, i32** %409, align 8
  %411 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %287) #3
  %412 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %4, i64 0, i32 0, i32 0
  %413 = extractvalue { i64, i32* } %411, 0
  store i64 %413, i64* %412, align 8
  %414 = getelementptr inbounds %"class.base::span.492", %"class.base::span.492"* %4, i64 0, i32 1
  %415 = extractvalue { i64, i32* } %411, 1
  store i32* %415, i32** %414, align 8
  %416 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_40V8UnionUint32ArrayOrUnsignedLongSequenceE(%"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence"* %335) #3
  %417 = getelementptr inbounds %"class.base::span.493", %"class.base::span.493"* %5, i64 0, i32 0, i32 0
  %418 = extractvalue { i64, i32* } %416, 0
  store i64 %418, i64* %417, align 8
  %419 = getelementptr inbounds %"class.base::span.493", %"class.base::span.493"* %5, i64 0, i32 1
  %420 = extractvalue { i64, i32* } %416, 1
  store i32* %420, i32** %419, align 8
  call void @_ZN5blink45WebGLMultiDrawInstancedBaseVertexBaseInstance52multiDrawElementsInstancedBaseVertexBaseInstanceImplEjN4base4spanIKiLm18446744073709551615EEEjjS4_jS4_jS4_jNS2_IKjLm18446744073709551615EEEji(%"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"* %82, i32 %98, i64 %399, i32* %400, i32 %143, i32 %173, %"class.base::span.492"* nonnull byval(%"class.base::span.492") align 8 %2, i32 %221, %"class.base::span.492"* nonnull byval(%"class.base::span.492") align 8 %3, i32 %269, %"class.base::span.492"* nonnull byval(%"class.base::span.492") align 8 %4, i32 %317, %"class.base::span.493"* nonnull byval(%"class.base::span.493") align 8 %5, i32 %365, i32 %390) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %394)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %395)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %396)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %397)
  br label %421

421:                                              ; preds = %389, %364, %333, %316, %285, %268, %237, %220, %189, %172, %142, %111, %93, %393, %46
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %422 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %423 = load i64*, i64** %422, align 8
  %424 = icmp eq i64* %423, null
  br i1 %424, label %434, label %425

425:                                              ; preds = %421
  %426 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %427 = bitcast %"class.v8::Isolate"* %426 to %"class.v8::internal::Isolate"*
  %428 = load i64, i64* %423, align 8
  %429 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %427, i64 %428) #3
  %430 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %426) #3
  br i1 %430, label %434, label %431

431:                                              ; preds = %425
  %432 = bitcast i64* %429 to %"class.v8::Value"*
  %433 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %426, %"class.v8::Value"* %432) #3
  br label %434

434:                                              ; preds = %431, %425, %421
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %450, label %437

437:                                              ; preds = %434
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  br i1 %441, label %444, label %446

444:                                              ; preds = %437
  %445 = add i32 %443, -1
  store i32 %445, i32* %442, align 4
  br label %446

446:                                              ; preds = %444, %437
  %447 = phi i32 [ %445, %444 ], [ %443, %437 ]
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %450

449:                                              ; preds = %446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %435) #3
  br label %450

450:                                              ; preds = %434, %446, %449
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #3
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence"* @_ZN5blink40V8UnionUint32ArrayOrUnsignedLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink45WebGLMultiDrawInstancedBaseVertexBaseInstance40multiDrawArraysInstancedBaseInstanceImplEjN4base4spanIKiLm18446744073709551615EEEjS4_jS4_jNS2_IKjLm18446744073709551615EEEji(%"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"*, i32, i64, i32*, i32, %"class.base::span.492"* byval(%"class.base::span.492") align 8, i32, %"class.base::span.492"* byval(%"class.base::span.492") align 8, i32, %"class.base::span.493"* byval(%"class.base::span.493") align 8, i32, i32) local_unnamed_addr #2

declare { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"*) local_unnamed_addr #2

declare { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_40V8UnionUint32ArrayOrUnsignedLongSequenceE(%"class.blink::V8UnionUint32ArrayOrUnsignedLongSequence"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN5blink45WebGLMultiDrawInstancedBaseVertexBaseInstance52multiDrawElementsInstancedBaseVertexBaseInstanceImplEjN4base4spanIKiLm18446744073709551615EEEjjS4_jS4_jS4_jNS2_IKjLm18446744073709551615EEEji(%"class.blink::WebGLMultiDrawInstancedBaseVertexBaseInstance"*, i32, i64, i32*, i32, i32, %"class.base::span.492"* byval(%"class.base::span.492") align 8, i32, %"class.base::span.492"* byval(%"class.base::span.492") align 8, i32, %"class.base::span.492"* byval(%"class.base::span.492") align 8, i32, %"class.base::span.493"* byval(%"class.base::span.493") align 8, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
