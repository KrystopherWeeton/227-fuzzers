; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_float_keyframe.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_float_keyframe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CompositorFloatKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr" }
%"class.blink::CompositorKeyframe" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::FloatKeyframe"* }
%"class.gfx::FloatKeyframe" = type <{ %"class.gfx::Keyframe", float, [4 x i8] }>
%"class.gfx::Keyframe" = type { i32 (...)**, %"class.base::TimeDelta", %"class.std::__1::unique_ptr.0" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.gfx::TimingFunction"* }
%"class.gfx::TimingFunction" = type { i32 (...)** }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN5blink23CompositorFloatKeyframeE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositorFloatKeyframe"*)* @_ZN5blink23CompositorFloatKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::CompositorFloatKeyframe"*)* @_ZN5blink23CompositorFloatKeyframeD0Ev to i8*), i8* bitcast (double (%"class.blink::CompositorFloatKeyframe"*)* @_ZNK5blink23CompositorFloatKeyframe4TimeEv to i8*), i8* bitcast (%"class.gfx::TimingFunction"* (%"class.blink::CompositorFloatKeyframe"*)* @_ZNK5blink23CompositorFloatKeyframe16CcTimingFunctionEv to i8*)] }, align 8

@_ZN5blink23CompositorFloatKeyframeC1EdfRKNS_14TimingFunctionE = hidden unnamed_addr alias void (%"class.blink::CompositorFloatKeyframe"*, double, float, %"class.blink::TimingFunction"*), void (%"class.blink::CompositorFloatKeyframe"*, double, float, %"class.blink::TimingFunction"*)* @_ZN5blink23CompositorFloatKeyframeC2EdfRKNS_14TimingFunctionE
@_ZN5blink23CompositorFloatKeyframeC1ENSt3__110unique_ptrIN3gfx13FloatKeyframeENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.blink::CompositorFloatKeyframe"*, %"class.gfx::FloatKeyframe"*), void (%"class.blink::CompositorFloatKeyframe"*, %"class.gfx::FloatKeyframe"*)* @_ZN5blink23CompositorFloatKeyframeC2ENSt3__110unique_ptrIN3gfx13FloatKeyframeENS1_14default_deleteIS4_EEEE
@_ZN5blink23CompositorFloatKeyframeD1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorFloatKeyframe"*), void (%"class.blink::CompositorFloatKeyframe"*)* @_ZN5blink23CompositorFloatKeyframeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23CompositorFloatKeyframeC2EdfRKNS_14TimingFunctionE(%"class.blink::CompositorFloatKeyframe"* nocapture, double, float, %"class.blink::TimingFunction"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23CompositorFloatKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = fmul double %1, 1.000000e+06
  %7 = fcmp ult double %6, 0xC3E0000000000000
  %8 = fcmp ugt double %6, 0x43DFFFFFFFFFFFFF
  %9 = fcmp ogt double %6, 0xC3E0000000000000
  %10 = select i1 %9, double %6, double 0xC3E0000000000000
  %11 = fptosi double %10 to i64
  %12 = select i1 %7, i64 0, i64 9223372036854775807
  %13 = select i1 %8, i64 %12, i64 %11
  %14 = bitcast %"class.blink::TimingFunction"* %3 to %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)***
  %15 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)**, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %15, i64 6
  %17 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %16, align 8
  %18 = tail call %"class.gfx::TimingFunction"* %17(%"class.blink::TimingFunction"* %3) #4
  %19 = tail call %"class.gfx::FloatKeyframe"* @_ZN3gfx13FloatKeyframe6CreateEN4base9TimeDeltaEfNSt3__110unique_ptrINS_14TimingFunctionENS3_14default_deleteIS5_EEEE(i64 %13, float %2, %"class.gfx::TimingFunction"* %18) #4
  %20 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.gfx::FloatKeyframe"* %19, %"class.gfx::FloatKeyframe"** %20, align 8
  ret void
}

declare %"class.gfx::FloatKeyframe"* @_ZN3gfx13FloatKeyframe6CreateEN4base9TimeDeltaEfNSt3__110unique_ptrINS_14TimingFunctionENS3_14default_deleteIS5_EEEE(i64, float, %"class.gfx::TimingFunction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23CompositorFloatKeyframeC2ENSt3__110unique_ptrIN3gfx13FloatKeyframeENS1_14default_deleteIS4_EEEE(%"class.blink::CompositorFloatKeyframe"* nocapture, %"class.gfx::FloatKeyframe"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gfx::FloatKeyframe"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23CompositorFloatKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23CompositorFloatKeyframeD2Ev(%"class.blink::CompositorFloatKeyframe"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23CompositorFloatKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::FloatKeyframe"*, %"class.gfx::FloatKeyframe"** %3, align 8
  store %"class.gfx::FloatKeyframe"* null, %"class.gfx::FloatKeyframe"** %3, align 8
  %5 = icmp eq %"class.gfx::FloatKeyframe"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gfx::FloatKeyframe"* %4 to void (%"class.gfx::FloatKeyframe"*)***
  %8 = load void (%"class.gfx::FloatKeyframe"*)**, void (%"class.gfx::FloatKeyframe"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::FloatKeyframe"*)*, void (%"class.gfx::FloatKeyframe"*)** %8, i64 1
  %10 = load void (%"class.gfx::FloatKeyframe"*)*, void (%"class.gfx::FloatKeyframe"*)** %9, align 8
  tail call void %10(%"class.gfx::FloatKeyframe"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23CompositorFloatKeyframeD0Ev(%"class.blink::CompositorFloatKeyframe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23CompositorFloatKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::FloatKeyframe"*, %"class.gfx::FloatKeyframe"** %3, align 8
  store %"class.gfx::FloatKeyframe"* null, %"class.gfx::FloatKeyframe"** %3, align 8
  %5 = icmp eq %"class.gfx::FloatKeyframe"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gfx::FloatKeyframe"* %4 to void (%"class.gfx::FloatKeyframe"*)***
  %8 = load void (%"class.gfx::FloatKeyframe"*)**, void (%"class.gfx::FloatKeyframe"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::FloatKeyframe"*)*, void (%"class.gfx::FloatKeyframe"*)** %8, i64 1
  %10 = load void (%"class.gfx::FloatKeyframe"*)*, void (%"class.gfx::FloatKeyframe"*)** %9, align 8
  tail call void %10(%"class.gfx::FloatKeyframe"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::CompositorFloatKeyframe"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink23CompositorFloatKeyframe4TimeEv(%"class.blink::CompositorFloatKeyframe"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::FloatKeyframe"*, %"class.gfx::FloatKeyframe"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::FloatKeyframe", %"class.gfx::FloatKeyframe"* %3, i64 0, i32 0
  %5 = tail call i64 @_ZNK3gfx8Keyframe4TimeEv(%"class.gfx::Keyframe"* %4) #4
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = sitofp i64 %5 to double
  %10 = fdiv double %9, 1.000000e+06
  br label %14

11:                                               ; preds = %1
  %12 = icmp slt i64 %5, 0
  %13 = select i1 %12, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi double [ %13, %11 ], [ %10, %8 ]
  ret double %15
}

declare i64 @_ZNK3gfx8Keyframe4TimeEv(%"class.gfx::Keyframe"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gfx::TimingFunction"* @_ZNK5blink23CompositorFloatKeyframe16CcTimingFunctionEv(%"class.blink::CompositorFloatKeyframe"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::FloatKeyframe"*, %"class.gfx::FloatKeyframe"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::FloatKeyframe", %"class.gfx::FloatKeyframe"* %3, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gfx::TimingFunction"*, %"class.gfx::TimingFunction"** %4, align 8
  ret %"class.gfx::TimingFunction"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::FloatKeyframe"* @_ZNK5blink23CompositorFloatKeyframe9CloneToCCEv(%"class.blink::CompositorFloatKeyframe"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFloatKeyframe", %"class.blink::CompositorFloatKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::FloatKeyframe"*, %"class.gfx::FloatKeyframe"** %2, align 8
  %4 = tail call %"class.gfx::FloatKeyframe"* @_ZNK3gfx13FloatKeyframe5CloneEv(%"class.gfx::FloatKeyframe"* %3) #4
  ret %"class.gfx::FloatKeyframe"* %4
}

declare %"class.gfx::FloatKeyframe"* @_ZNK3gfx13FloatKeyframe5CloneEv(%"class.gfx::FloatKeyframe"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
