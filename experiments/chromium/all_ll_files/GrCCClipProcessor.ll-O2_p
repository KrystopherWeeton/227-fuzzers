; ModuleID = '../../third_party/skia/src/gpu/ccpr/GrCCClipProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/ccpr/GrCCClipProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrCCClipProcessor = type <{ %class.GrFragmentProcessor.base, [4 x i8], %class.sk_sp, i8, [7 x i8] }>
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp = type { %class.GrCCClipPath* }
%class.GrCCClipPath = type { %class.SkRefCnt.base, [4 x i8], %class.SkPath, %struct.SkIRect, %struct.SkIRect, %class.sk_sp.15, %struct.SkIPoint }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPath = type <{ %class.sk_sp.2, i32, %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", i8, i8 }>
%class.sk_sp.2 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.3, %class.SkTDArray.4, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.3 = type { i8*, i32, i32 }
%class.SkTDArray.4 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.10 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.10 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.15 = type { %class.GrTextureProxy* }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.18", %class.GrSurfaceProxy }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.GrProxyProvider = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.24, %class.sk_sp.25, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.59" }
%class.SkNVRefCnt.24 = type { %"struct.std::__1::atomic" }
%class.sk_sp.25 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.26 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.26 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.27, void (i8*)*, i8* }
%class.SkNVRefCnt.27 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.28, i32, [4 x i8] }
%union.anon.28 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.25, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.56, %class.sk_sp.58, %class.sk_sp.58 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.30, %class.SkTMultiMap, %class.SkTDynamicHash.37, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.30 }
%class.SkTDArray.30 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.37 = type { %class.SkTHashTable.38 }
%class.SkTHashTable.38 = type { i32, i32, %class.SkAutoTArray.39 }
%class.SkAutoTArray.39 = type { %"class.std::__1::unique_ptr.40" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.46, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.46 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.47, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.47 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.48 }
%class.SkTHashTable.48 = type { i32, i32, %class.SkAutoTArray.49 }
%class.SkAutoTArray.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.56 = type { %class.GrCaps* }
%class.sk_sp.58 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.57, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.57 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrSwizzle = type { i16 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.64, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.64 = type { %class.GrSurfaceProxy* }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.65*, i32, i32 }
%class.SkTArray.65 = type { i32*, i64 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.69, %class.SkTArray.71 }
%class.SkTArray.69 = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.70 }
%class.sk_sp.70 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTArray.71 = type { %"class.std::__1::unique_ptr.66"*, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.GrGLSLFragmentProcessor* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%"class.GrCCClipProcessor::Impl" = type { %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.86, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.88, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.97], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.83 }
%union.anon.83 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.86 = type { %class.SkAlignedSTStorage.87, %class.SkTArray.69 }
%class.SkAlignedSTStorage.87 = type { [120 x i8] }
%class.SkSTArray.88 = type { %class.SkAlignedSTStorage.89, %class.SkTArray.90 }
%class.SkAlignedSTStorage.89 = type { [16 x i8] }
%class.SkTArray.90 = type { %"class.std::__1::unique_ptr.91"*, i64 }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.97 = type { %class.SkAlignedSTStorage.98, %class.SkTArray.69 }
%class.SkAlignedSTStorage.98 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.86, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.88, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.97], i32, i8, [3 x i8], i32, [12 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.84 }
%struct.anon.84 = type { i8 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN17GrCCClipProcessorD2Ev = comdat any

$_ZN17GrCCClipProcessorD0Ev = comdat any

$_ZNK17GrCCClipProcessor4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN17GrCCClipProcessor4ImplD0Ev = comdat any

$_ZN17GrCCClipProcessor4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN17GrCCClipProcessor4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTVN17GrCCClipProcessor4ImplE = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@_ZTV17GrCCClipProcessor = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrCCClipProcessor*)* @_ZN17GrCCClipProcessorD2Ev to i8*), i8* bitcast (void (%class.GrCCClipProcessor*)* @_ZN17GrCCClipProcessorD0Ev to i8*), i8* bitcast (i8* (%class.GrCCClipProcessor*)* @_ZNK17GrCCClipProcessor4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrCCClipProcessor*)* @_ZNK17GrCCClipProcessor5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrCCClipProcessor*)* @_ZNK17GrCCClipProcessor17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrCCClipProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK17GrCCClipProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrCCClipProcessor*, %class.GrFragmentProcessor*)* @_ZNK17GrCCClipProcessor9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [18 x i8] c"GrCCClipProcessor\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTVN17GrCCClipProcessor4ImplE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%"class.GrCCClipProcessor::Impl"*)* @_ZN17GrCCClipProcessor4ImplD0Ev to i8*), i8* bitcast (void (%"class.GrCCClipProcessor::Impl"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN17GrCCClipProcessor4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%"class.GrCCClipProcessor::Impl"*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN17GrCCClipProcessor4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"half coverage;\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"path_ibounds\00", align 1
@.str.6 = private unnamed_addr constant [88 x i8] c"if (all(greaterThan(float4(sk_FragCoord.xy, %s.RB), float4(%s.LT, sk_FragCoord.xy)))) {\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"atlas_translate\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"sk_FragCoord.xy + %s.xy\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"coverage = %s.a;\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"} else {\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"coverage = 0;\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"coverage = 1 - coverage;\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"return %s * coverage;\00", align 1

@_ZN17GrCCClipProcessorC1ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK6GrCaps5sk_spIK12GrCCClipPathENS_15MustCheckBoundsE = hidden unnamed_addr alias void (%class.GrCCClipProcessor*, %class.GrFragmentProcessor*, %class.GrCaps*, %class.sk_sp*, i1), void (%class.GrCCClipProcessor*, %class.GrFragmentProcessor*, %class.GrCaps*, %class.sk_sp*, i1)* @_ZN17GrCCClipProcessorC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK6GrCaps5sk_spIK12GrCCClipPathENS_15MustCheckBoundsE
@_ZN17GrCCClipProcessorC1ERKS_ = hidden unnamed_addr alias void (%class.GrCCClipProcessor*, %class.GrCCClipProcessor*), void (%class.GrCCClipProcessor*, %class.GrCCClipProcessor*)* @_ZN17GrCCClipProcessorC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrCCClipProcessorC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK6GrCaps5sk_spIK12GrCCClipPathENS_15MustCheckBoundsE(%class.GrCCClipProcessor*, %class.GrFragmentProcessor*, %class.GrCaps* dereferenceable(232), %class.sk_sp* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %class.GrSwizzle, align 2
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = zext i1 %4 to i8
  %9 = bitcast %class.GrCCClipProcessor* %0 to %class.GrFragmentProcessor*
  %10 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 1
  store i32 26, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %14 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %16 = bitcast %class.SkTArray* %13 to i8**
  store i8* %14, i8** %16, align 8
  store i64 8589934592, i64* %15, align 8
  %17 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %18 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 3
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %20, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrCCClipProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %21 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2
  %22 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %23 = bitcast %class.sk_sp* %3 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.GrCCClipPath* null, %class.GrCCClipPath** %22, align 8
  %25 = bitcast %class.sk_sp* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 3
  store i8 %8, i8* %26, align 8
  %27 = inttoptr i64 %24 to %class.GrCCClipPath*
  %28 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %27, i64 0, i32 5, i32 0
  %29 = load %class.GrTextureProxy*, %class.GrTextureProxy** %28, align 8
  %30 = icmp eq %class.GrTextureProxy* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %5
  %32 = bitcast %class.GrTextureProxy* %29 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr i8, i8* %33, i64 -24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.GrTextureProxy* %29 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = bitcast i8* %38 to %class.GrSurfaceProxy*
  br label %40

40:                                               ; preds = %31, %5
  %41 = phi %class.GrSurfaceProxy* [ %39, %31 ], [ null, %5 ]
  %42 = bitcast %class.GrSwizzle* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %42) #9, !noalias !2
  %43 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %6, i64 0, i32 0
  store i16 -21846, i16* %43, align 2, !noalias !2
  %44 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %41, i64 0, i32 5
  call void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* nonnull sret %6, %class.GrCaps* %2, %class.GrBackendFormat* dereferenceable(72) %44, i32 1) #9, !noalias !2
  %45 = icmp eq %class.GrSurfaceProxy* %41, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !5
  br label %49

49:                                               ; preds = %40, %46
  %50 = ptrtoint %class.GrSurfaceProxy* %41 to i64
  %51 = load i16, i16* %43, align 2, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %42) #9, !noalias !2
  %52 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  store i16 %51, i16* %54, align 4
  %55 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %56 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %7, i32 0, %class.SkMatrix* dereferenceable(40) %55, i32 0, i32 0) #9
  %57 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %58 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %57, align 8
  %59 = icmp eq %class.GrSurfaceProxy* %58, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %58, i64 0, i32 1
  %62 = getelementptr inbounds %class.SkNVRefCnt.24, %class.SkNVRefCnt.24* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %72

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.SkNVRefCnt.24, %class.SkNVRefCnt.24* %61, i64 -2
  %67 = bitcast %class.SkNVRefCnt.24* %66 to %class.GrSurfaceProxy*
  %68 = bitcast %class.SkNVRefCnt.24* %66 to void (%class.GrSurfaceProxy*)***
  %69 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %69, i64 1
  %71 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %70, align 8
  call void %71(%class.GrSurfaceProxy* nonnull %67) #9
  br label %72

72:                                               ; preds = %65, %60, %49
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %9, %class.GrFragmentProcessor* %56, i64 3) #9
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %9, %class.GrFragmentProcessor* %1, i64 1) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrCCClipProcessorC2ERKS_(%class.GrCCClipProcessor*, %class.GrCCClipProcessor* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrCCClipProcessor* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrCCClipProcessor* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 1
  store i32 26, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrCCClipProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %1, i64 0, i32 2, i32 0
  %21 = load %class.GrCCClipPath*, %class.GrCCClipPath** %20, align 8
  %22 = icmp eq %class.GrCCClipPath* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %2, %23
  store %class.GrCCClipPath* %21, %class.GrCCClipPath** %19, align 8
  %27 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %1, i64 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !8
  store i8 %29, i8* %27, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #9
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK17GrCCClipProcessor5cloneEv(%class.GrCCClipProcessor*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 80) #9
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrCCClipProcessor* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 26, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrCCClipProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 64
  %26 = bitcast i8* %25 to %class.GrCCClipPath**
  %27 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2, i32 0
  %28 = load %class.GrCCClipPath*, %class.GrCCClipPath** %27, align 8
  %29 = icmp eq %class.GrCCClipPath* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %1
  %31 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %1, %30
  store %class.GrCCClipPath* %28, %class.GrCCClipPath** %26, align 8
  %34 = getelementptr inbounds i8, i8* %2, i64 72
  %35 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !8
  store i8 %36, i8* %34, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #9
  ret %class.GrFragmentProcessor* %3
}

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17GrCCClipProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrCCClipProcessor* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2, i32 0
  %5 = load %class.GrCCClipPath*, %class.GrCCClipPath** %4, align 8
  %6 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %5, i64 0, i32 2, i32 4
  %7 = load i8, i8* %6, align 2
  %8 = and i8 %7, 2
  %9 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = or i8 %8, %10
  %12 = zext i8 %11 to i32
  %13 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %14 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %14, i64 2
  %16 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %15, align 8
  tail call void %16(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17GrCCClipProcessor9onIsEqualERK19GrFragmentProcessor(%class.GrCCClipProcessor* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %4 = bitcast %class.GrFragmentProcessor* %3 to %class.GrCCClipPath**
  %5 = load %class.GrCCClipPath*, %class.GrCCClipPath** %4, align 8
  %6 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %5, i64 0, i32 2
  %7 = tail call i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath* %6) #9
  %8 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2, i32 0
  %9 = load %class.GrCCClipPath*, %class.GrCCClipPath** %8, align 8
  %10 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %9, i64 0, i32 2
  %11 = tail call i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath* %10) #9
  %12 = icmp eq i32 %7, %11
  br i1 %12, label %13, label %30

13:                                               ; preds = %2
  %14 = load %class.GrCCClipPath*, %class.GrCCClipPath** %4, align 8
  %15 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %14, i64 0, i32 2, i32 4
  %16 = load i8, i8* %15, align 2
  %17 = load %class.GrCCClipPath*, %class.GrCCClipPath** %8, align 8
  %18 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %17, i64 0, i32 2, i32 4
  %19 = load i8, i8* %18, align 2
  %20 = xor i8 %19, %16
  %21 = and i8 %20, 3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %13
  %24 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %25 = bitcast i32* %24 to i8*
  %26 = load i8, i8* %25, align 8, !range !8
  %27 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 3
  %28 = load i8, i8* %27, align 8, !range !8
  %29 = icmp eq i8 %26, %28
  br label %30

30:                                               ; preds = %23, %13, %2
  %31 = phi i1 [ false, %13 ], [ false, %2 ], [ %29, %23 ]
  ret i1 %31
}

declare i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK17GrCCClipProcessor17onMakeProgramImplEv(%class.GrCCClipProcessor* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #11
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 16, i1 false) #9
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.66"**
  store %"class.std::__1::unique_ptr.66"* null, %"class.std::__1::unique_ptr.66"** %9, align 8
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN17GrCCClipProcessor4ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %2, i64 44
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrCCClipProcessorD2Ev(%class.GrCCClipProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrCCClipProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrCCClipPath*, %class.GrCCClipPath** %3, align 8
  %5 = icmp eq %class.GrCCClipPath* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrCCClipPath* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrCCClipPath* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %17, i64 0, i32 0
  br label %28

24:                                               ; preds = %39, %16
  %25 = phi i64 [ %19, %16 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %48, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %31, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %31, align 8
  %33 = icmp eq %class.GrFragmentProcessor* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %class.GrFragmentProcessor* %32 to void (%class.GrFragmentProcessor*)***
  %36 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %36, i64 1
  %38 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %37, align 8
  tail call void %38(%class.GrFragmentProcessor* nonnull %32) #9
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %18, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = bitcast %class.SkTArray* %17 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #9
  br label %48

48:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrCCClipProcessorD0Ev(%class.GrCCClipProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrCCClipProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrCCClipPath*, %class.GrCCClipPath** %3, align 8
  %5 = icmp eq %class.GrCCClipPath* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrCCClipPath* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrCCClipPath* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %17, i64 0, i32 0
  br label %28

24:                                               ; preds = %39, %16
  %25 = phi i64 [ %19, %16 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %48, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %31, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %31, align 8
  %33 = icmp eq %class.GrFragmentProcessor* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %class.GrFragmentProcessor* %32 to void (%class.GrFragmentProcessor*)***
  %36 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %36, i64 1
  %38 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %37, align 8
  tail call void %38(%class.GrFragmentProcessor* nonnull %32) #9
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %18, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = bitcast %class.SkTArray* %17 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #9
  br label %48

48:                                               ; preds = %24, %45
  %49 = bitcast %class.GrCCClipProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %49) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK17GrCCClipProcessor4nameEv(%class.GrCCClipProcessor*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #9
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #9
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* sret, %class.GrCaps*, %class.GrBackendFormat* dereferenceable(72), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrCCClipProcessor4ImplD0Ev(%"class.GrCCClipProcessor::Impl"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.GrCCClipProcessor::Impl", %"class.GrCCClipProcessor::Impl"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #9
  %3 = bitcast %"class.GrCCClipProcessor::Impl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrCCClipProcessor4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%"class.GrCCClipProcessor::Impl"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %13 = bitcast %class.GrFragmentProcessor** %12 to %class.GrCCClipProcessor**
  %14 = load %class.GrCCClipProcessor*, %class.GrCCClipProcessor** %13, align 8
  %15 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %16 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %18 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %17, align 8
  %19 = bitcast %class.GrGLSLFPFragmentBuilder* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.GrGLSLFPFragmentBuilder* %18 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 160
  %27 = getelementptr inbounds i8, i8* %25, i64 488
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = bitcast i8* %26 to %class.SkString**
  %31 = load %class.SkString*, %class.SkString** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %31, i64 %32
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %33, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #9
  %34 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %14, i64 0, i32 3
  %35 = load i8, i8* %34, align 8, !range !8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %2
  %38 = bitcast %class.GrCCClipProcessor* %14 to %class.GrFragmentProcessor*
  %39 = bitcast %class.GrGLSLUniformHandler* %16 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  br label %56

40:                                               ; preds = %2
  %41 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %42 = bitcast %class.GrCCClipProcessor* %14 to %class.GrFragmentProcessor*
  %43 = bitcast %class.GrGLSLUniformHandler* %16 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %44 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %43, align 8
  %45 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %44, i64 13
  %46 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %45, align 8
  %47 = call i32 %46(%class.GrGLSLUniformHandler* %16, %class.GrFragmentProcessor* %42, i32 16, i32 24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %5) #9
  %48 = getelementptr inbounds %"class.GrCCClipProcessor::Impl", %"class.GrCCClipProcessor::Impl"* %0, i64 0, i32 1, i32 0
  store i32 %47, i32* %48, align 8
  %49 = load i8*, i8** %19, align 8
  %50 = getelementptr i8, i8* %49, i64 -24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %24, i64 %52
  %54 = bitcast i8* %53 to %class.GrGLSLShaderBuilder*
  %55 = load i8*, i8** %5, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %54, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.6, i64 0, i64 0), i8* %55, i8* %55)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %56

56:                                               ; preds = %37, %40
  %57 = phi i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** [ %39, %37 ], [ %43, %40 ]
  %58 = phi %class.GrFragmentProcessor* [ %38, %37 ], [ %42, %40 ]
  %59 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %60 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %57, align 8
  %61 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %60, i64 13
  %62 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %61, align 8
  %63 = call i32 %62(%class.GrGLSLUniformHandler* %16, %class.GrFragmentProcessor* %58, i32 16, i32 22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %6) #9
  %64 = getelementptr inbounds %"class.GrCCClipProcessor::Impl", %"class.GrCCClipProcessor::Impl"* %0, i64 0, i32 2, i32 0
  store i32 %63, i32* %64, align 4
  %65 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9
  %66 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %66, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %7) #9
  %67 = load i8*, i8** %6, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8* %67) #9
  %68 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %69, align 8
  %70 = getelementptr inbounds %"class.GrCCClipProcessor::Impl", %"class.GrCCClipProcessor::Impl"* %0, i64 0, i32 0
  %71 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %66, align 8
  %72 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %71, i64 0, i32 2
  %73 = call i64 @strlen(i8* %72) #9
  %74 = icmp ugt i64 %73, -17
  br i1 %74, label %75, label %77

75:                                               ; preds = %56
  %76 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %76) #12
  unreachable

77:                                               ; preds = %56
  %78 = icmp ult i64 %73, 23
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = add nuw i64 %73, 16
  %81 = and i64 %80, -16
  %82 = call i8* @_Znwm(i64 %81) #11
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %82, i8** %83, align 8
  %84 = or i64 %81, -9223372036854775808
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %86, align 8
  %87 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %94

88:                                               ; preds = %77
  %89 = trunc i64 %73 to i8
  %90 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 %89, i8* %91, align 1
  %92 = bitcast %"class.SkSL::String"* %9 to i8*
  %93 = icmp eq i64 %73, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %88, %79
  %95 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %90, %88 ], [ %87, %79 ]
  %96 = phi i8* [ %92, %88 ], [ %82, %79 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %96, i8* align 1 %72, i64 %73, i1 false) #9
  br label %97

97:                                               ; preds = %88, %94
  %98 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %90, %88 ], [ %95, %94 ]
  %99 = phi i8* [ %92, %88 ], [ %96, %94 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 %73
  store i8 0, i8* %100, align 1
  %101 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101)
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1, !noalias !9
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %97
  %106 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* nonnull align 8 %106, i64 24, i1 false) #9, !noalias !9
  br label %113

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0
  %109 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8, !noalias !9
  %111 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8, !noalias !9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %108, i8* %110, i64 %112) #9
  br label %113

113:                                              ; preds = %107, %105
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %8, %class.GrGLSLFragmentProcessor* %70, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %4) #9
  %114 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1, !noalias !9
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8, !noalias !9
  call void @_ZdlPv(i8* %120) #11
  br label %121

121:                                              ; preds = %113, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101)
  %122 = load i8, i8* %102, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %121, %124
  %128 = load i8*, i8** %19, align 8
  %129 = getelementptr i8, i8* %128, i64 -24
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds i8, i8* %24, i64 %131
  %133 = bitcast i8* %132 to %class.GrGLSLShaderBuilder*
  %134 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %69, align 8
  %135 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %134, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %133, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* %135)
  %136 = load i8, i8* %34, align 8, !range !8
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %178, label %138

138:                                              ; preds = %127
  %139 = load i8*, i8** %19, align 8
  %140 = getelementptr i8, i8* %139, i64 -24
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds i8, i8* %24, i64 %142
  %144 = getelementptr inbounds i8, i8* %143, i64 160
  %145 = getelementptr inbounds i8, i8* %143, i64 488
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 8
  %148 = bitcast i8* %144 to %class.SkString**
  %149 = load %class.SkString*, %class.SkString** %148, align 8
  %150 = sext i32 %147 to i64
  %151 = getelementptr inbounds %class.SkString, %class.SkString* %149, i64 %150
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %151, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #9
  %152 = load i8*, i8** %19, align 8
  %153 = getelementptr i8, i8* %152, i64 -24
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds i8, i8* %24, i64 %155
  %157 = getelementptr inbounds i8, i8* %156, i64 160
  %158 = getelementptr inbounds i8, i8* %156, i64 488
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 8
  %161 = bitcast i8* %157 to %class.SkString**
  %162 = load %class.SkString*, %class.SkString** %161, align 8
  %163 = sext i32 %160 to i64
  %164 = getelementptr inbounds %class.SkString, %class.SkString* %162, i64 %163
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %164, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #9
  %165 = load i8*, i8** %19, align 8
  %166 = getelementptr i8, i8* %165, i64 -24
  %167 = bitcast i8* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds i8, i8* %24, i64 %168
  %170 = getelementptr inbounds i8, i8* %169, i64 160
  %171 = getelementptr inbounds i8, i8* %169, i64 488
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 8
  %174 = bitcast i8* %170 to %class.SkString**
  %175 = load %class.SkString*, %class.SkString** %174, align 8
  %176 = sext i32 %173 to i64
  %177 = getelementptr inbounds %class.SkString, %class.SkString* %175, i64 %176
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %177, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %178

178:                                              ; preds = %127, %138
  %179 = getelementptr inbounds %class.GrCCClipProcessor, %class.GrCCClipProcessor* %14, i64 0, i32 2, i32 0
  %180 = load %class.GrCCClipPath*, %class.GrCCClipPath** %179, align 8
  %181 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %180, i64 0, i32 2, i32 4
  %182 = load i8, i8* %181, align 2
  %183 = and i8 %182, 2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %199, label %185

185:                                              ; preds = %178
  %186 = load i8*, i8** %19, align 8
  %187 = getelementptr i8, i8* %186, i64 -24
  %188 = bitcast i8* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds i8, i8* %24, i64 %189
  %191 = getelementptr inbounds i8, i8* %190, i64 160
  %192 = getelementptr inbounds i8, i8* %190, i64 488
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 8
  %195 = bitcast i8* %191 to %class.SkString**
  %196 = load %class.SkString*, %class.SkString** %195, align 8
  %197 = sext i32 %194 to i64
  %198 = getelementptr inbounds %class.SkString, %class.SkString* %196, i64 %197
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %198, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0)) #9
  br label %199

199:                                              ; preds = %178, %185
  %200 = bitcast %class.SkString* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #9
  %201 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %201, align 8
  %202 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  store i8 0, i8* %203, align 1
  %204 = bitcast %"class.SkSL::String"* %11 to i8*
  store i8 0, i8* %204, align 8
  %205 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* nonnull align 8 %204, i64 24, i1 false) #9, !noalias !12
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %10, %class.GrGLSLFragmentProcessor* %70, i32 1, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #9
  %206 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1, !noalias !12
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %199
  %211 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8, !noalias !12
  call void @_ZdlPv(i8* %212) #11
  br label %213

213:                                              ; preds = %199, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205)
  %214 = load i8*, i8** %19, align 8
  %215 = getelementptr i8, i8* %214, i64 -24
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %201, align 8
  %219 = getelementptr inbounds i8, i8* %24, i64 %217
  %220 = bitcast i8* %219 to %class.GrGLSLShaderBuilder*
  %221 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %218, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %220, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0), i8* %221)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrCCClipProcessor4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%"class.GrCCClipProcessor::Impl"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %5 = bitcast i32* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %10 = bitcast %class.GrFragmentProcessor* %9 to %class.GrCCClipPath**
  %11 = load %class.GrCCClipPath*, %class.GrCCClipPath** %10, align 8
  %12 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %11, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %11, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %11, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %11, i64 0, i32 3, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  %24 = getelementptr inbounds %"class.GrCCClipProcessor::Impl", %"class.GrCCClipProcessor::Impl"* %0, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)***
  %27 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %26, align 8
  %28 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %27, i64 16
  %29 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %28, align 8
  tail call void %29(%class.GrGLSLProgramDataManager* %1, i32 %25, float %14, float %17, float %20, float %23) #9
  br label %30

30:                                               ; preds = %3, %8
  %31 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %32 = bitcast %class.GrFragmentProcessor* %31 to %class.GrCCClipPath**
  %33 = load %class.GrCCClipPath*, %class.GrCCClipPath** %32, align 8
  %34 = getelementptr inbounds %"class.GrCCClipProcessor::Impl", %"class.GrCCClipProcessor::Impl"* %0, i64 0, i32 2, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %33, i64 0, i32 6, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sitofp i32 %37 to float
  %39 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %33, i64 0, i32 6, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  %42 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %43 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %43, i64 8
  %45 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %44, align 8
  tail call void %45(%class.GrGLSLProgramDataManager* %1, i32 %35, float %38, float %41) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.71, %class.SkTArray.71* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #9
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.71* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #9
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.69, %class.SkTArray.69* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #9
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.69* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #9
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #9
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL9make_viewRK6GrCapsP14GrSurfaceProxy: argument 0"}
!4 = distinct !{!4, !"_ZL9make_viewRK6GrCapsP14GrSurfaceProxy"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI14GrSurfaceProxyE5sk_spIT_EPS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI14GrSurfaceProxyE5sk_spIT_EPS2_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!11 = distinct !{!11, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!14 = distinct !{!14, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
