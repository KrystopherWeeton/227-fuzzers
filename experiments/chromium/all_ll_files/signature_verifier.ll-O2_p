; ModuleID = '../../crypto/signature_verifier.cc'
source_filename = "../../crypto/signature_verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crypto::SignatureVerifier" = type { %"class.std::__1::vector", %"class.std::__1::unique_ptr" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.crypto::SignatureVerifier::VerifyContext"* }
%"struct.crypto::SignatureVerifier::VerifyContext" = type { %"class.bssl::internal::StackAllocated" }
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.cbs_st = type { i8*, i64 }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.engine_st = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"VerifyInit\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../crypto/signature_verifier.cc\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"VerifyUpdate\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"VerifyFinal\00", align 1

@_ZN6crypto17SignatureVerifierC1Ev = hidden unnamed_addr alias void (%"class.crypto::SignatureVerifier"*), void (%"class.crypto::SignatureVerifier"*)* @_ZN6crypto17SignatureVerifierC2Ev
@_ZN6crypto17SignatureVerifierD1Ev = hidden unnamed_addr alias void (%"class.crypto::SignatureVerifier"*), void (%"class.crypto::SignatureVerifier"*)* @_ZN6crypto17SignatureVerifierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto17SignatureVerifierC2Ev(%"class.crypto::SignatureVerifier"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.crypto::SignatureVerifier"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto17SignatureVerifierD2Ev(%"class.crypto::SignatureVerifier"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %2, align 8
  store %"struct.crypto::SignatureVerifier::VerifyContext"* null, %"struct.crypto::SignatureVerifier::VerifyContext"** %2, align 8
  %4 = icmp eq %"struct.crypto::SignatureVerifier::VerifyContext"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %3, i64 0, i32 0, i32 0
  %7 = tail call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* %6) #6
  %8 = bitcast %"struct.crypto::SignatureVerifier::VerifyContext"* %3 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #7
  br label %17

17:                                               ; preds = %9, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6crypto17SignatureVerifier10VerifyInitENS0_18SignatureAlgorithmEN4base4spanIKhLm18446744073709551615EEES5_(%"class.crypto::SignatureVerifier"*, i32, i64, i8*, i64, i8*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.evp_pkey_ctx_st*, align 8
  %11 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 29) #6
  %13 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %13, %"class.base::Location"* nonnull dereferenceable(32) %8) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  switch i32 %1, label %20 [
    i32 0, label %14
    i32 1, label %16
    i32 3, label %16
    i32 2, label %18
  ]

14:                                               ; preds = %6
  %15 = call %struct.env_md_st* @EVP_sha1() #6
  br label %20

16:                                               ; preds = %6, %6
  %17 = call %struct.env_md_st* @EVP_sha256() #6
  br label %20

18:                                               ; preds = %6
  %19 = call %struct.env_md_st* @EVP_sha256() #6
  br label %20

20:                                               ; preds = %6, %18, %16, %14
  %21 = phi i32 [ 0, %6 ], [ 408, %18 ], [ 6, %16 ], [ 6, %14 ]
  %22 = phi %struct.env_md_st* [ null, %6 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ]
  %23 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %24, align 8
  %26 = icmp eq %"struct.crypto::SignatureVerifier::VerifyContext"* %25, null
  br i1 %26, label %27, label %78

27:                                               ; preds = %20
  %28 = call i8* @_Znwm(i64 32) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 0, i64 32, i1 false) #6
  %29 = bitcast i8* %28 to %struct.env_md_ctx_st*
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %29) #6
  %30 = ptrtoint i8* %28 to i64
  %31 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %24, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %30, i64* %32, align 8
  %33 = icmp eq %"struct.crypto::SignatureVerifier::VerifyContext"* %31, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %31, i64 0, i32 0, i32 0
  %36 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* %35) #6
  %37 = bitcast %"struct.crypto::SignatureVerifier::VerifyContext"* %31 to i8*
  call void @_ZdlPv(i8* %37) #7
  br label %38

38:                                               ; preds = %34, %27
  %39 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 0
  %40 = getelementptr inbounds i8, i8* %3, i64 %2
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %39, i8* %3, i8* %40)
  %41 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #6
  %42 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* %5, i64 %4) #6
  %43 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %9) #6
  %44 = icmp eq %struct.evp_pkey_st* %43, null
  br i1 %44, label %76, label %45

45:                                               ; preds = %38
  %46 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #6
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %74

48:                                               ; preds = %45
  %49 = call i32 @EVP_PKEY_id(%struct.evp_pkey_st* nonnull %43) #6
  %50 = icmp eq i32 %49, %21
  br i1 %50, label %51, label %74

51:                                               ; preds = %48
  %52 = bitcast %struct.evp_pkey_ctx_st** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #6
  store %struct.evp_pkey_ctx_st* inttoptr (i64 -6148914691236517206 to %struct.evp_pkey_ctx_st*), %struct.evp_pkey_ctx_st** %10, align 8
  %53 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %24, align 8
  %54 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %53, i64 0, i32 0, i32 0
  %55 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* %54, %struct.evp_pkey_ctx_st** nonnull %10, %struct.env_md_st* %22, %struct.engine_st* null, %struct.evp_pkey_st* nonnull %43) #6
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %51
  %58 = icmp eq i32 %1, 3
  br i1 %58, label %59, label %71

59:                                               ; preds = %57
  %60 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %10, align 8
  %61 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %60, i32 6) #6
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %10, align 8
  %65 = call i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st* %64, %struct.env_md_st* %22) #6
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %10, align 8
  %69 = call i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st* %68, i32 -1) #6
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %67, %57
  br label %72

72:                                               ; preds = %59, %63, %67, %51, %71
  %73 = phi i1 [ true, %71 ], [ false, %51 ], [ false, %67 ], [ false, %63 ], [ false, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #6
  br label %74

74:                                               ; preds = %45, %48, %72
  %75 = phi i1 [ false, %45 ], [ false, %48 ], [ %73, %72 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %43) #6
  br label %76

76:                                               ; preds = %38, %74
  %77 = phi i1 [ %75, %74 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #6
  br label %78

78:                                               ; preds = %20, %76
  %79 = phi i1 [ %77, %76 ], [ false, %20 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %13) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  ret i1 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #6
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #6
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #7
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #6
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #8
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #7
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #6
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto17SignatureVerifier12VerifyUpdateEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::SignatureVerifier"* nocapture readonly, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 85) #6
  %8 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %5) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  %9 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %9, align 8
  %11 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %10, i64 0, i32 0, i32 0
  %12 = call i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st* %11, i8* %2, i64 %1) #6
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %8) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

declare i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6crypto17SignatureVerifier11VerifyFinalEv(%"class.crypto::SignatureVerifier"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 93) #6
  %6 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %2, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  %7 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %7, align 8
  %9 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint i8* %11 to i64
  %16 = sub i64 %14, %15
  %17 = call i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st* %9, i8* %11, i64 %16) #6
  %18 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %7, align 8
  store %"struct.crypto::SignatureVerifier::VerifyContext"* null, %"struct.crypto::SignatureVerifier::VerifyContext"** %7, align 8
  %19 = icmp eq %"struct.crypto::SignatureVerifier::VerifyContext"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %18, i64 0, i32 0, i32 0
  %22 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* %21) #6
  %23 = bitcast %"struct.crypto::SignatureVerifier::VerifyContext"* %18 to i8*
  call void @_ZdlPv(i8* %23) #7
  br label %24

24:                                               ; preds = %1, %20
  %25 = bitcast %"class.crypto::SignatureVerifier"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %13, align 8
  %27 = icmp eq i32 %17, 1
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret i1 %27
}

declare i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto17SignatureVerifier5ResetEv(%"class.crypto::SignatureVerifier"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.crypto::SignatureVerifier::VerifyContext"*, %"struct.crypto::SignatureVerifier::VerifyContext"** %2, align 8
  store %"struct.crypto::SignatureVerifier::VerifyContext"* null, %"struct.crypto::SignatureVerifier::VerifyContext"** %2, align 8
  %4 = icmp eq %"struct.crypto::SignatureVerifier::VerifyContext"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.crypto::SignatureVerifier::VerifyContext", %"struct.crypto::SignatureVerifier::VerifyContext"* %3, i64 0, i32 0, i32 0
  %7 = tail call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* %6) #6
  %8 = bitcast %"struct.crypto::SignatureVerifier::VerifyContext"* %3 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %5
  %10 = bitcast %"class.crypto::SignatureVerifier"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.crypto::SignatureVerifier", %"class.crypto::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 8
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #2

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
