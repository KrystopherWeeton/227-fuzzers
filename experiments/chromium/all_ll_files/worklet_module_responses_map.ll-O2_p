; ModuleID = '../../third_party/blink/renderer/core/workers/worklet_module_responses_map.cc'
source_filename = "../../third_party/blink/renderer/core/workers/worklet_module_responses_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.25", i32, [4 x i8], %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.202", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.141", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i64 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { i64 }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { float }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.144", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.153" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.93"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.459", i64 }
%"class.std::__1::vector.459" = type { %"class.std::__1::__vector_base.460" }
%"class.std::__1::__vector_base.460" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.461" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::WorkletModuleResponsesMap::Entry" = type { i32, [4 x i8], %"class.absl::optional", %"class.WTF::HashMap.447" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"class.blink::ModuleScriptCreationParams" }
%"class.blink::ModuleScriptCreationParams" = type <{ %"class.blink::KURL", %"class.blink::KURL", i32, i32, i8, [7 x i8], %"class.blink::ParkableString", %"class.WTF::String", %"class.blink::Persistent", %"class.blink::Persistent.206", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.3" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.WTF::Vector.18", i8, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.206" = type { %"class.blink::PersistentBase.207" }
%"class.blink::PersistentBase.207" = type { %"class.blink::ScriptStreamer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member", %"class.blink::Member.410", %"class.mojo::ScopedHandleBase.412", %"class.std::__1::unique_ptr.413", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.432", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.444 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.406", i32, i32, %"class.blink::Member.408", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.388" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.212", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.243", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.364", %"class.blink::ResourceResponse", %class.scoped_refptr.366, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.absl::optional.212" = type { %"class.absl::optional_internal::optional_data.213" }
%"class.absl::optional_internal::optional_data.213" = type { %"class.absl::optional_internal::optional_data_base.214" }
%"class.absl::optional_internal::optional_data_base.214" = type { %"class.absl::optional_internal::optional_data_dtor_base.215" }
%"class.absl::optional_internal::optional_data_dtor_base.215" = type { i8, %union.anon.216 }
%union.anon.216 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.217", i8, %"class.absl::optional.228", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.217" = type { %"class.absl::optional_internal::optional_data.218" }
%"class.absl::optional_internal::optional_data.218" = type { %"class.absl::optional_internal::optional_data_base.219" }
%"class.absl::optional_internal::optional_data_base.219" = type { %"class.absl::optional_internal::optional_data_dtor_base.220" }
%"class.absl::optional_internal::optional_data_dtor_base.220" = type { i8, [7 x i8], %union.anon.221 }
%union.anon.221 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.224 }
%union.anon.224 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.228" = type { %"class.absl::optional_internal::optional_data.229" }
%"class.absl::optional_internal::optional_data.229" = type { %"class.absl::optional_internal::optional_data_base.230" }
%"class.absl::optional_internal::optional_data_base.230" = type { %"class.absl::optional_internal::optional_data_dtor_base.231" }
%"class.absl::optional_internal::optional_data_dtor_base.231" = type { i8, %union.anon.232 }
%union.anon.232 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.233", %"class.WTF::Vector.238" }
%"class.WTF::Vector.233" = type { %"class.WTF::VectorBuffer.234" }
%"class.WTF::VectorBuffer.234" = type { %"class.WTF::VectorBufferBase.235" }
%"class.WTF::VectorBufferBase.235" = type { i32*, i32, i32 }
%"class.WTF::Vector.238" = type { %"class.WTF::VectorBuffer.239" }
%"class.WTF::VectorBuffer.239" = type { %"class.WTF::VectorBufferBase.240" }
%"class.WTF::VectorBufferBase.240" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.341" }
%"class.WTF::HashMap.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"struct.WTF::KeyValuePair.344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.344" = type <{ %"class.blink::WeakMember.500", i32, [4 x i8] }>
%"class.blink::WeakMember.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.502", [7 x i8], %"class.blink::Member.503", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.502" = type { i8 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.349", i8, i8, %class.scoped_refptr.354, %class.scoped_refptr.359, %class.scoped_refptr.361 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"struct.std::__1::pair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.353" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.354 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.355", i32, i32, %"class.blink::Persistent.357" }
%"class.WTF::RefCounted.355" = type { %"class.base::RefCounted.356" }
%"class.base::RefCounted.356" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.357" = type { %"class.blink::PersistentBase.358" }
%"class.blink::PersistentBase.358" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%class.scoped_refptr.359 = type { %"class.base::RefCountedData.360"* }
%"class.base::RefCountedData.360" = type opaque
%class.scoped_refptr.361 = type { %"class.base::RefCountedData.362"* }
%"class.base::RefCountedData.362" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.304" }
%"class.base::time_internal::TimeBase.304" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.363 }
%class.scoped_refptr.363 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.251, %class.scoped_refptr.251, %class.scoped_refptr.251, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.254, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.268", %"class.absl::optional.273", %"class.absl::optional.283", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.293", %"class.absl::optional.283", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.283", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.293", %"class.absl::optional.298", i8, %class.scoped_refptr.303 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.246" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.246" = type { %"class.absl::optional_internal::optional_data.247" }
%"class.absl::optional_internal::optional_data.247" = type { %"class.absl::optional_internal::optional_data_base.248" }
%"class.absl::optional_internal::optional_data_base.248" = type { %"class.absl::optional_internal::optional_data_dtor_base.249" }
%"class.absl::optional_internal::optional_data_dtor_base.249" = type { i8, %union.anon.250 }
%union.anon.250 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.251 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.457", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.246", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.251 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.254 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.255", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.262, i8, %"class.url::Origin" }
%"class.base::RefCounted.255" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"*, %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.std::__1::unique_ptr.256"* }
%class.scoped_refptr.262 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.263" }
%"struct.std::__1::atomic.263" = type { %"struct.std::__1::__atomic_base.264" }
%"struct.std::__1::__atomic_base.264" = type { %"struct.std::__1::__atomic_base.265" }
%"struct.std::__1::__atomic_base.265" = type { %"struct.std::__1::__cxx_atomic_impl.266" }
%"struct.std::__1::__cxx_atomic_impl.266" = type { %"struct.std::__1::__cxx_atomic_base_impl.267" }
%"struct.std::__1::__cxx_atomic_base_impl.267" = type { i32 }
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.273" = type { %"class.absl::optional_internal::optional_data.274" }
%"class.absl::optional_internal::optional_data.274" = type { %"class.absl::optional_internal::optional_data_base.275" }
%"class.absl::optional_internal::optional_data_base.275" = type { %"class.absl::optional_internal::optional_data_dtor_base.276" }
%"class.absl::optional_internal::optional_data_dtor_base.276" = type { i8, %union.anon.277 }
%union.anon.277 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.278", %"class.WTF::Vector.238", %"class.WTF::String" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %class.scoped_refptr.251*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.288", %"class.absl::optional.288" }
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { %"class.base::TimeDelta" }
%"class.absl::optional.283" = type { %"class.absl::optional_internal::optional_data.284" }
%"class.absl::optional_internal::optional_data.284" = type { %"class.absl::optional_internal::optional_data_base.285" }
%"class.absl::optional_internal::optional_data_base.285" = type { %"class.absl::optional_internal::optional_data_dtor_base.286" }
%"class.absl::optional_internal::optional_data_dtor_base.286" = type { i8, %union.anon.287 }
%union.anon.287 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, %union.anon.297 }
%union.anon.297 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.298" = type { %"class.absl::optional_internal::optional_data.299" }
%"class.absl::optional_internal::optional_data.299" = type { %"class.absl::optional_internal::optional_data_base.300" }
%"class.absl::optional_internal::optional_data_base.300" = type { %"class.absl::optional_internal::optional_data_dtor_base.301" }
%"class.absl::optional_internal::optional_data_dtor_base.301" = type { i8, %union.anon.302 }
%union.anon.302 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.303 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.491", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.491" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.492" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { i32*, i32*, %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { i32* }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.305", %class.scoped_refptr.320, %class.scoped_refptr.321, %"struct.blink::CacheControlHeader", %"class.absl::optional.288", %"class.absl::optional.322", %"class.absl::optional.322", %"class.absl::optional.322", i64, %"class.blink::KURL", %"class.WTF::Vector.327", %"class.WTF::String", %"class.WTF::Vector.238", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.293", %"class.WTF::Vector.238", %"class.blink::KURL", %"class.absl::optional.332" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.305" = type { %"class.absl::optional_internal::optional_data.306" }
%"class.absl::optional_internal::optional_data.306" = type { %"class.absl::optional_internal::optional_data_base.307" }
%"class.absl::optional_internal::optional_data_base.307" = type { %"class.absl::optional_internal::optional_data_dtor_base.308" }
%"class.absl::optional_internal::optional_data_dtor_base.308" = type { i8, %union.anon.309 }
%union.anon.309 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.238", %"class.WTF::String", i64, i64, %"class.WTF::Vector.310", %"class.WTF::Vector.315" }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.320 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.321 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { %"class.base::Time" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, %union.anon.336 }
%union.anon.336 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.366 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.367", i64, %"class.WTF::Vector.369", %"class.WTF::Vector.374" }
%"class.WTF::RefCounted.367" = type { %"class.base::RefCounted.368" }
%"class.base::RefCounted.368" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { i8*, i32, i32 }
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"class.std::__1::unique_ptr.377"*, i32, i32 }
%"class.std::__1::unique_ptr.377" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.391", i32, %"class.WTF::Vector.369", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.397" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.412" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.416, i8, %"class.mojo::ScopedHandleBase.418", %class.scoped_refptr.419, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.416 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.417" }>
%"class.base::RefCountedThreadSafe.417" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedHandleBase.418" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.419 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.420 }
%class.scoped_refptr.420 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.421", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.421" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.422 }
%class.scoped_refptr.422 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.423", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.423" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.424" }
%"struct.std::__1::atomic.424" = type { %"struct.std::__1::__atomic_base.425" }
%"struct.std::__1::__atomic_base.425" = type { %"struct.std::__1::__atomic_base.426" }
%"struct.std::__1::__atomic_base.426" = type { %"struct.std::__1::__cxx_atomic_impl.427" }
%"struct.std::__1::__cxx_atomic_impl.427" = type { %"struct.std::__1::__cxx_atomic_base_impl.428" }
%"struct.std::__1::__cxx_atomic_base_impl.428" = type { i8 }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.435" }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%class.scoped_refptr.444 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.WTF::HashMap.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type { %"class.blink::CrossThreadPersistent", %class.scoped_refptr.444 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.452" }
%"class.blink::PersistentBase.452" = type { %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.453" }
%"struct.std::__1::atomic.453" = type { %"struct.std::__1::__atomic_base.454" }
%"struct.std::__1::__atomic_base.454" = type { %"struct.std::__1::__cxx_atomic_impl.455" }
%"struct.std::__1::__cxx_atomic_impl.455" = type { %"struct.std::__1::__cxx_atomic_base_impl.456" }
%"struct.std::__1::__cxx_atomic_base_impl.456" = type { %"class.blink::PersistentNode"* }
%"class.blink::ModuleScriptFetcher::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.417", [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.468", %"class.WTF::Mutex" }
%"class.WTF::HashMap.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"struct.WTF::KeyValuePair.472"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.472" = type { %"struct.std::__1::pair.473", %"class.std::__1::unique_ptr.474" }
%"struct.std::__1::pair.473" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::WorkletModuleResponsesMap::Entry"* }
%"class.blink::Persistent.480" = type { %"class.blink::PersistentBase.481" }
%"class.blink::PersistentBase.481" = type { %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::PersistentNodePtr" }
%"struct.base::internal::BindState.542" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.543" }
%"class.std::__1::tuple.543" = type { %"struct.std::__1::__tuple_impl.544" }
%"struct.std::__1::__tuple_impl.544" = type { %"class.std::__1::__tuple_leaf.545" }
%"class.std::__1::__tuple_leaf.545" = type { %"class.blink::Persistent.480" }
%"struct.std::__1::__tuple_impl.549" = type { %"class.std::__1::__tuple_leaf.545", %"class.std::__1::__tuple_leaf.505" }
%"class.std::__1::__tuple_leaf.505" = type { %"class.blink::ModuleScriptCreationParams" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.510", %"class.blink::FreeList", %"class.WTF::Vector.515" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.509" }
%"struct.std::__1::array.509" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.510" = type { %"class.WTF::VectorBuffer.511" }
%"class.WTF::VectorBuffer.511" = type { %"class.WTF::VectorBufferBase.512" }
%"class.WTF::VectorBufferBase.512" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.WTF::KeyValuePair.551" = type { %"struct.std::__1::pair.473", i8* }

$_ZNK5blink26ModuleScriptCreationParams12IsolatedCopyEv = comdat any

$_ZN5blink26ModuleScriptCreationParamsD2Ev = comdat any

$_ZN3WTF19CrossThreadBindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJRNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_ = comdat any

$_ZN3WTF19CrossThreadBindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJRNS1_21CrossThreadPersistentIS3_EEEEEDaOT_DpOT0_ = comdat any

$_ZNK5blink26ModuleScriptCreationParams13GetSourceTextEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_21CrossThreadPersistentIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS2_26ModuleScriptCreationParamsEEJNS2_21CrossThreadPersistentIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN5blink26ModuleScriptCreationParamsC2ERKS0_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27SingleCachedMetadataHandlerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14ScriptStreamerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_14ScriptStreamerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_21CrossThreadPersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_21CrossThreadPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPS4_RSA_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_ISA_EEEELb0EE4MoveEOSB_RSB_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISH_SM_SN_EES6_EEPKSE_RKT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_10PersistentIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS2_26ModuleScriptCreationParamsEEJNS2_10PersistentIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_19ModuleScriptFetcher6ClientEEENS3_26ModuleScriptCreationParamsEEEC2IJLm0ELm1EEJS7_S8_EJEJEJS7_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_ = comdat any

$_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSC_IS9_EENS_18PartitionAllocatorEED2Ev = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EES6_SD_EENS_18HashTableAddResultISO_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8ReinsertEOSE_ = comdat any

$_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISH_SM_SN_EES6_EENS2_IPSE_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSE_j = comdat any

@.str = private unnamed_addr constant [10 x i8] c"SetParams\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/core/workers/worklet_module_responses_map.cc\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"GetEntry\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::CrossThreadPersistent<blink::ModuleScriptFetcher::Client>, scoped_refptr<base::SingleThreadTaskRunner> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEEEEPKcv = private unnamed_addr constant [245 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<std::__1::pair<blink::KURL, blink::ModuleType>, std::__1::unique_ptr<blink::WorkletModuleResponsesMap::Entry, std::__1::default_delete<blink::WorkletModuleResponsesMap::Entry> > >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkletModuleResponsesMap5Entry9AddClientEPNS_19ModuleScriptFetcher6ClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::ModuleScriptFetcher::Client"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.444, align 8
  %5 = alloca %"class.blink::ModuleScriptFetcher::Client"*, align 8
  %6 = getelementptr inbounds %class.scoped_refptr.444, %class.scoped_refptr.444* %4, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %6, align 8
  store %"class.blink::ModuleScriptFetcher::Client"* %1, %"class.blink::ModuleScriptFetcher::Client"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0
  %8 = call { %"struct.WTF::KeyValuePair.451"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPS4_RSA_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.448"* %7, %"class.blink::ModuleScriptFetcher::Client"** nonnull dereferenceable(8) %5, %class.scoped_refptr.444* nonnull dereferenceable(8) %4) #10
  %9 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %10 = icmp eq %"class.base::SingleThreadTaskRunner"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %9, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.417"* %17 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %18) #10
  br label %19

19:                                               ; preds = %3, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkletModuleResponsesMap5Entry9SetParamsERKN4absl8optionalINS_26ModuleScriptCreationParamsEEE(%"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.absl::optional"* dereferenceable(304)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca %"class.blink::ModuleScriptCreationParams", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to { i64, i64 }*
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to { i64, i64 }*
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 0
  br i1 %18, label %95, label %20

20:                                               ; preds = %2
  store i32 1, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %21) #10
  %22 = load i8, i8* %16, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZNK5blink26ModuleScriptCreationParams12IsolatedCopyEv(%"class.blink::ModuleScriptCreationParams"* nonnull sret %7, %"class.blink::ModuleScriptCreationParams"* %26)
  %27 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %31) #10
  store i8 0, i8* %27, align 8
  br label %32

32:                                               ; preds = %25, %30
  %33 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %34 = bitcast i8* %33 to %"class.blink::ModuleScriptCreationParams"*
  call void @_ZN5blink26ModuleScriptCreationParamsC2ERKS0_(%"class.blink::ModuleScriptCreationParams"* %34, %"class.blink::ModuleScriptCreationParams"* nonnull dereferenceable(296) %7) #10
  store i8 1, i8* %27, align 8
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %21) #10
  %35 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %39, i64 %42
  br i1 %37, label %152, label %44

44:                                               ; preds = %32
  %45 = icmp eq i32 %41, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %44, %50
  %47 = phi %"struct.WTF::KeyValuePair.451"* [ %51, %50 ], [ %39, %44 ]
  %48 = bitcast %"struct.WTF::KeyValuePair.451"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  switch i64 %49, label %53 [
    i64 -1, label %50
    i64 0, label %50
  ]

50:                                               ; preds = %46, %46
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %47, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.451"* %51, %43
  br i1 %52, label %152, label %46

53:                                               ; preds = %46, %44
  %54 = phi %"struct.WTF::KeyValuePair.451"* [ %39, %44 ], [ %47, %46 ]
  %55 = icmp eq %"struct.WTF::KeyValuePair.451"* %54, %43
  br i1 %55, label %152, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.base::Location"* %8 to i8*
  %58 = bitcast <2 x i64>* %10 to i8*
  %59 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %60 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  %61 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i64*
  %63 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  br label %68

68:                                               ; preds = %56, %93
  %69 = phi %"struct.WTF::KeyValuePair.451"* [ %54, %56 ], [ %87, %93 ]
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %69, i64 0, i32 1, i32 0
  %71 = bitcast %"class.base::SingleThreadTaskRunner"** %70 to %"class.base::SequencedTaskRunner"**
  %72 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %71, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 47) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)* @_ZN5blink19ModuleScriptFetcher6Client9OnFetchedERKNS_26ModuleScriptCreationParamsE to i64), i64 0>, <2 x i64>* %10, align 16
  %73 = load i8, i8* %16, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %68
  call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %69, i64 0, i32 0
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJRNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %9, { i64, i64 }* nonnull dereferenceable(16) %11, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %77, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296) %26)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %78 = bitcast %"class.base::SequencedTaskRunner"* %72 to %"class.base::TaskRunner"*
  %79 = load i64, i64* %62, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %61, align 8
  store i64 %79, i64* %64, align 8, !alias.scope !4
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8, !noalias !4
  %80 = bitcast %"class.base::SequencedTaskRunner"* %72 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %81 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %80, align 8
  %82 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %81, align 8
  %83 = call zeroext i1 %82(%"class.base::TaskRunner"* %78, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %3, i64 0) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #10
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %69, i64 1
  %85 = icmp eq %"struct.WTF::KeyValuePair.451"* %84, %43
  br i1 %85, label %152, label %86

86:                                               ; preds = %76, %90
  %87 = phi %"struct.WTF::KeyValuePair.451"* [ %91, %90 ], [ %84, %76 ]
  %88 = bitcast %"struct.WTF::KeyValuePair.451"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  switch i64 %89, label %93 [
    i64 -1, label %90
    i64 0, label %90
  ]

90:                                               ; preds = %86, %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %87, i64 1
  %92 = icmp eq %"struct.WTF::KeyValuePair.451"* %91, %43
  br i1 %92, label %152, label %86

93:                                               ; preds = %86
  %94 = icmp eq %"struct.WTF::KeyValuePair.451"* %87, %43
  br i1 %94, label %152, label %68

95:                                               ; preds = %2
  store i32 2, i32* %19, align 8
  %96 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0, i32 0
  %100 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %100, i64 %103
  br i1 %98, label %152, label %105

105:                                              ; preds = %95
  %106 = icmp eq i32 %102, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %105, %111
  %108 = phi %"struct.WTF::KeyValuePair.451"* [ %112, %111 ], [ %100, %105 ]
  %109 = bitcast %"struct.WTF::KeyValuePair.451"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  switch i64 %110, label %114 [
    i64 -1, label %111
    i64 0, label %111
  ]

111:                                              ; preds = %107, %107
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %108, i64 1
  %113 = icmp eq %"struct.WTF::KeyValuePair.451"* %112, %104
  br i1 %113, label %152, label %107

114:                                              ; preds = %107, %105
  %115 = phi %"struct.WTF::KeyValuePair.451"* [ %100, %105 ], [ %108, %107 ]
  %116 = icmp eq %"struct.WTF::KeyValuePair.451"* %115, %104
  br i1 %116, label %152, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.base::Location"* %12 to i8*
  %119 = bitcast <2 x i64>* %14 to i8*
  %120 = bitcast %"class.base::OnceCallback"* %5 to i8*
  %121 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i8*
  %122 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  %124 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %126 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %127 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  br label %129

129:                                              ; preds = %117, %150
  %130 = phi %"struct.WTF::KeyValuePair.451"* [ %115, %117 ], [ %144, %150 ]
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %130, i64 0, i32 1, i32 0
  %132 = bitcast %"class.base::SingleThreadTaskRunner"** %131 to %"class.base::SequencedTaskRunner"**
  %133 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %132, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 56) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleScriptFetcher::Client"*)* @_ZN5blink19ModuleScriptFetcher6Client8OnFailedEv to i64), i64 0>, <2 x i64>* %14, align 16
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %130, i64 0, i32 0
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJRNS1_21CrossThreadPersistentIS3_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %13, { i64, i64 }* nonnull dereferenceable(16) %15, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %134)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121)
  %135 = bitcast %"class.base::SequencedTaskRunner"* %133 to %"class.base::TaskRunner"*
  %136 = load i64, i64* %123, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %122, align 8
  store i64 %136, i64* %125, align 8, !alias.scope !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %124, align 8, !noalias !7
  %137 = bitcast %"class.base::SequencedTaskRunner"* %133 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %138 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %137, align 8
  %139 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %138, align 8
  %140 = call zeroext i1 %139(%"class.base::TaskRunner"* %135, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback"* nonnull %5, i64 0) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %126) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %127) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %128) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #10
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %130, i64 1
  %142 = icmp eq %"struct.WTF::KeyValuePair.451"* %141, %104
  br i1 %142, label %152, label %143

143:                                              ; preds = %129, %147
  %144 = phi %"struct.WTF::KeyValuePair.451"* [ %148, %147 ], [ %141, %129 ]
  %145 = bitcast %"struct.WTF::KeyValuePair.451"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  switch i64 %146, label %150 [
    i64 -1, label %147
    i64 0, label %147
  ]

147:                                              ; preds = %143, %143
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %144, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.451"* %148, %104
  br i1 %149, label %152, label %143

150:                                              ; preds = %143
  %151 = icmp eq %"struct.WTF::KeyValuePair.451"* %144, %104
  br i1 %151, label %152, label %129

152:                                              ; preds = %50, %76, %93, %90, %111, %129, %150, %147, %95, %32, %53, %114
  %153 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %0, i64 0, i32 3, i32 0
  call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable.448"* %153) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink26ModuleScriptCreationParams12IsolatedCopyEv(%"class.blink::ModuleScriptCreationParams"* noalias sret, %"class.blink::ModuleScriptCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 7
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = tail call dereferenceable(8) %"class.blink::ParkableString"* @_ZNK5blink26ModuleScriptCreationParams13GetSourceTextEv(%"class.blink::ModuleScriptCreationParams"* %1)
  %11 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %10) #10
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.WTF::String"* [ %11, %9 ], [ %5, %2 ]
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %13) #10
  %15 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 0
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %3, %"class.blink::KURL"* %16) #10
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 1
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %4, %"class.blink::KURL"* %18) #10
  %19 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %23, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #10
  %24 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %24, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  %25 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 2
  store i32 %20, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 3
  store i32 %22, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 4
  store i8 1, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %30, label %63, label %31

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #10
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %36
  call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8
  %50 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 10
  %51 = bitcast %"class.blink::Persistent"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #10
  store i32 14, i32* %50, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #10
  %52 = load atomic i32, i32* %32 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %48
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %48
  %60 = phi i32 [ %58, %57 ], [ %56, %48 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %67

63:                                               ; preds = %12
  %64 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8
  %65 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 10
  %66 = bitcast %"class.blink::Persistent"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #10
  store i32 14, i32* %65, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #10
  br label %67

67:                                               ; preds = %63, %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #10
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  %48 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %47, %60, %63
  %65 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %65) #10
  %66 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %66) #10
  %67 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %67) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJRNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16), %"class.blink::ModuleScriptCreationParams"* dereferenceable(296)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.blink::CrossThreadPersistent", align 8
  %8 = alloca %"class.blink::ModuleScriptCreationParams", align 8
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10, !alias.scope !10
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !10
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #10, !noalias !10
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %13, align 8, !noalias !10
  call void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"* nonnull %10, %"class.blink::ModuleScriptFetcher::Client"* %14) #10
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #10
  %15 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %15) #10
  call void @_ZNK5blink26ModuleScriptCreationParams12IsolatedCopyEv(%"class.blink::ModuleScriptCreationParams"* nonnull sret %8, %"class.blink::ModuleScriptCreationParams"* %3) #10
  %16 = call i8* @_Znwm(i64 360) #11, !noalias !13
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_21CrossThreadPersistentIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS2_26ModuleScriptCreationParamsEEJNS2_21CrossThreadPersistentIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !13
  %18 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8, !noalias !13
  %20 = getelementptr inbounds i8, i8* %16, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %21, align 8, !noalias !13
  %22 = getelementptr inbounds i8, i8* %16, i64 48
  %23 = bitcast i8* %22 to %"class.blink::PersistentBase.452"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !noalias !13
  %24 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !13
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #10, !noalias !13
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %27 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %26, align 8, !noalias !13
  call void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"* %23, %"class.blink::ModuleScriptFetcher::Client"* %27) #10, !noalias !13
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #10, !noalias !13
  %28 = getelementptr inbounds i8, i8* %16, i64 64
  %29 = bitcast i8* %28 to %"class.blink::ModuleScriptCreationParams"*
  call void @_ZN5blink26ModuleScriptCreationParamsC2ERKS0_(%"class.blink::ModuleScriptCreationParams"* %29, %"class.blink::ModuleScriptCreationParams"* nonnull dereferenceable(296) %8) #10, !noalias !13
  %30 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %32 = ptrtoint i8* %16 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8, !noalias !18
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %32, i64* %34, align 8, !alias.scope !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8, !noalias !18
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #10, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #10
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %15) #10
  %37 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %38 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %37 to i64*
  %39 = load atomic i64, i64* %38 acquire, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %4
  %42 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %43 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %42, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %43) #10
  %44 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %45 = load atomic i64, i64* %38 monotonic, align 8
  %46 = inttoptr i64 %45 to %"class.blink::PersistentNode"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %44, i64 0, i32 0, i32 0
  %50 = bitcast %"class.blink::CrossThreadPersistentRegion"* %44 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = inttoptr i64 %45 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %53, align 8
  store %"class.blink::PersistentNode"* %46, %"class.blink::PersistentNode"** %49, align 8
  br label %54

54:                                               ; preds = %48, %41
  store atomic i64 0, i64* %38 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %43) #10
  br label %55

55:                                               ; preds = %4, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

declare void @_ZN5blink19ModuleScriptFetcher6Client9OnFetchedERKNS_26ModuleScriptCreationParamsE(%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296)) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJRNS1_21CrossThreadPersistentIS3_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.blink::CrossThreadPersistent", align 8
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #10, !alias.scope !21
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !21
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #10, !noalias !21
  %11 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %11, align 8, !noalias !21
  call void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"* nonnull %8, %"class.blink::ModuleScriptFetcher::Client"* %12) #10
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #10
  %13 = call i8* @_Znwm(i64 64) #11, !noalias !24
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_21CrossThreadPersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_21CrossThreadPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !24
  %15 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8, !noalias !24
  %17 = getelementptr inbounds i8, i8* %13, i64 32
  %18 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %18, align 8, !noalias !24
  %19 = getelementptr inbounds i8, i8* %13, i64 48
  %20 = bitcast i8* %19 to %"class.blink::PersistentBase.452"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10, !noalias !24
  %21 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !24
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #10, !noalias !24
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %24 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %23, align 8, !noalias !24
  call void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"* %20, %"class.blink::ModuleScriptFetcher::Client"* %24) #10, !noalias !24
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #10, !noalias !24
  %25 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = ptrtoint i8* %13 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8, !noalias !29
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %27, i64* %29, align 8, !alias.scope !29
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8, !noalias !29
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %33 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %32 to i64*
  %34 = load atomic i64, i64* %33 acquire, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %50, label %36

36:                                               ; preds = %3
  %37 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %38 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %37, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %38) #10
  %39 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %40 = load atomic i64, i64* %33 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::PersistentNode"*
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %39, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::CrossThreadPersistentRegion"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %40 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %44, align 8
  br label %49

49:                                               ; preds = %43, %36
  store atomic i64 0, i64* %33 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %38) #10
  br label %50

50:                                               ; preds = %3, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN5blink19ModuleScriptFetcher6Client8OnFailedEv(%"class.blink::ModuleScriptFetcher::Client"*) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25WorkletModuleResponsesMap8GetEntryERKNS_4KURLENS_10ModuleTypeEPNS_19ModuleScriptFetcher6ClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::WorkletModuleResponsesMap"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::ModuleScriptFetcher::Client"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.scoped_refptr.444, align 8
  %7 = alloca %"class.blink::ModuleScriptFetcher::Client"*, align 8
  %8 = alloca %class.scoped_refptr.444, align 8
  %9 = alloca %"class.blink::ModuleScriptFetcher::Client"*, align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to { i64, i64 }*
  %14 = alloca %"class.blink::Persistent.480", align 8
  %15 = alloca %"struct.std::__1::pair.473", align 8
  %16 = alloca %"class.base::Location", align 8
  %17 = alloca %"class.base::OnceCallback", align 8
  %18 = alloca %"class.blink::Persistent.480", align 8
  %19 = alloca %"class.blink::ModuleScriptCreationParams", align 8
  %20 = alloca %"class.base::Location", align 8
  %21 = alloca %"class.base::OnceCallback", align 8
  %22 = alloca <2 x i64>, align 16
  %23 = bitcast <2 x i64>* %22 to { i64, i64 }*
  %24 = alloca %"class.blink::Persistent.480", align 8
  %25 = alloca %"class.std::__1::unique_ptr.474", align 8
  %26 = alloca %"struct.std::__1::pair.473", align 8
  %27 = alloca %"class.blink::KURL", align 8
  %28 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %28) #10
  %29 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %5
  %33 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %1) #10
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #10
  br i1 %35, label %99, label %36

36:                                               ; preds = %32, %5, %34
  %37 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to %"class.base::TaskRunner"*
  %38 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 80) #10
  %39 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleScriptFetcher::Client"*)* @_ZN5blink19ModuleScriptFetcher6Client8OnFailedEv to i64), i64 0>, <2 x i64>* %12, align 16
  %40 = bitcast %"class.blink::Persistent.480"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %14, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %14, i64 0, i32 0, i32 0
  store %"class.blink::ModuleScriptFetcher::Client"* %3, %"class.blink::ModuleScriptFetcher::Client"** %42, align 8, !alias.scope !32
  %43 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %14, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8, !alias.scope !32
  %44 = ptrtoint %"class.blink::ModuleScriptFetcher::Client"* %3 to i64
  switch i64 %44, label %45 [
    i64 0, label %71
    i64 -1, label %71
  ]

45:                                               ; preds = %36
  %46 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !32
  %47 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %46, i64 0, i32 1
  %48 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %47) #10, !noalias !32
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %52, !prof !3

50:                                               ; preds = %45
  %51 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %47, i8* %51) #10
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i8* [ %51, %50 ], [ %48, %45 ]
  %54 = bitcast i8* %53 to %"class.blink::ThreadState"**
  %55 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %54, align 8, !noalias !32
  %56 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %56, align 8, !noalias !32
  %58 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %58, align 8, !noalias !32
  %60 = icmp eq %"class.blink::PersistentNode"* %59, null
  br i1 %60, label %61, label %64, !prof !3

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %62) #10
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %58, align 8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi %"class.blink::PersistentNode"* [ %63, %61 ], [ %59, %52 ]
  %66 = bitcast %"class.blink::PersistentNode"* %65 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !32
  %68 = bitcast %"class.blink::PersistentRegion"* %57 to i64*
  store i64 %67, i64* %68, align 8, !noalias !32
  %69 = bitcast %"class.blink::PersistentNode"* %65 to %"class.blink::PersistentBase.481"**
  store %"class.blink::PersistentBase.481"* %41, %"class.blink::PersistentBase.481"** %69, align 8, !noalias !32
  %70 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %65, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %70, align 8
  store %"class.blink::PersistentNode"* %65, %"class.blink::PersistentNode"** %43, align 8, !alias.scope !32
  br label %71

71:                                               ; preds = %36, %36, %64
  %72 = call i8* @_Znwm(i64 64) #11, !noalias !35
  %73 = bitcast i8* %72 to %"struct.base::internal::BindState.542"*
  call void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.542"* nonnull %73, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %13, %"class.blink::Persistent.480"* nonnull dereferenceable(16) %14) #10, !noalias !35
  %74 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %72, i8** %74, align 8, !alias.scope !35
  %75 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %37, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %11) #10
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #10
  %77 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %78 = icmp eq %"class.blink::PersistentNode"* %77, null
  br i1 %78, label %98, label %79

79:                                               ; preds = %71
  %80 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %81 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %80, i64 0, i32 1
  %82 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %81) #10
  %83 = icmp eq i8* %82, null
  br i1 %83, label %84, label %86, !prof !3

84:                                               ; preds = %79
  %85 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %81, i8* %85) #10
  br label %86

86:                                               ; preds = %84, %79
  %87 = phi i8* [ %85, %84 ], [ %82, %79 ]
  %88 = bitcast i8* %87 to %"class.blink::ThreadState"**
  %89 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %89, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %90, align 8
  %92 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %93 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %91, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::PersistentRegion"* %91 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.blink::PersistentNode"* %92 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %92, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %97, align 8
  store %"class.blink::PersistentNode"* %92, %"class.blink::PersistentNode"** %93, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %98

98:                                               ; preds = %71, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #10
  br label %326

99:                                               ; preds = %34
  %100 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %101) #10
  %102 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %15, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %102, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %103 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %15, i64 0, i32 1
  store i32 %2, i32* %103, align 8, !alias.scope !42
  %104 = getelementptr inbounds %"class.WTF::HashMap.468", %"class.WTF::HashMap.468"* %100, i64 0, i32 0
  %105 = call %"struct.WTF::KeyValuePair.472"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISH_SM_SN_EES6_EEPKSE_RKT0_(%"class.WTF::HashTable.469"* %104, %"struct.std::__1::pair.473"* nonnull dereferenceable(120) %15) #10
  %106 = icmp eq %"struct.WTF::KeyValuePair.472"* %105, null
  %107 = getelementptr inbounds %"class.WTF::HashMap.468", %"class.WTF::HashMap.468"* %100, i64 0, i32 0, i32 0
  %108 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %108, i64 %111
  %113 = select i1 %106, %"struct.WTF::KeyValuePair.472"* %112, %"struct.WTF::KeyValuePair.472"* %105
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %102) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %101) #10
  %114 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %107, align 8
  %115 = load i32, i32* %109, align 8
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %114, i64 %116
  %118 = icmp eq %"struct.WTF::KeyValuePair.472"* %113, %117
  br i1 %118, label %282, label %119

119:                                              ; preds = %99
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %113, i64 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %121, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  switch i32 %123, label %282 [
    i32 0, label %124
    i32 1, label %146
    i32 2, label %219
  ]

124:                                              ; preds = %119
  %125 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 1 monotonic
  br label %129

129:                                              ; preds = %124, %126
  %130 = bitcast %class.scoped_refptr.444* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130)
  %131 = bitcast %"class.blink::ModuleScriptFetcher::Client"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131)
  %132 = getelementptr inbounds %class.scoped_refptr.444, %class.scoped_refptr.444* %8, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %4, %"class.base::SingleThreadTaskRunner"** %132, align 8
  store %"class.blink::ModuleScriptFetcher::Client"* %3, %"class.blink::ModuleScriptFetcher::Client"** %9, align 8
  %133 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %121, i64 0, i32 3, i32 0
  %134 = call { %"struct.WTF::KeyValuePair.451"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPS4_RSA_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.448"* %133, %"class.blink::ModuleScriptFetcher::Client"** nonnull dereferenceable(8) %9, %class.scoped_refptr.444* nonnull dereferenceable(8) %8) #10
  %135 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %132, align 8
  %136 = icmp eq %"class.base::SingleThreadTaskRunner"* %135, null
  br i1 %136, label %145, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %135, i64 0, i32 0, i32 0, i32 1
  %139 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw sub i32* %139, i32 1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %138, i64 -2
  %144 = bitcast %"class.base::RefCountedThreadSafe.417"* %143 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %144) #10
  br label %145

145:                                              ; preds = %129, %137, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131)
  br label %326

146:                                              ; preds = %119
  %147 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to %"class.base::TaskRunner"*
  %148 = bitcast %"class.base::Location"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 100) #10
  %149 = bitcast %"class.blink::Persistent.480"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #10
  %150 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %18, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %18, i64 0, i32 0, i32 0
  store %"class.blink::ModuleScriptFetcher::Client"* %3, %"class.blink::ModuleScriptFetcher::Client"** %151, align 8, !alias.scope !45
  %152 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %18, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %152, align 8, !alias.scope !45
  %153 = ptrtoint %"class.blink::ModuleScriptFetcher::Client"* %3 to i64
  switch i64 %153, label %154 [
    i64 0, label %180
    i64 -1, label %180
  ]

154:                                              ; preds = %146
  %155 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !45
  %156 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %155, i64 0, i32 1
  %157 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %156) #10, !noalias !45
  %158 = icmp eq i8* %157, null
  br i1 %158, label %159, label %161, !prof !3

159:                                              ; preds = %154
  %160 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %156, i8* %160) #10
  br label %161

161:                                              ; preds = %159, %154
  %162 = phi i8* [ %160, %159 ], [ %157, %154 ]
  %163 = bitcast i8* %162 to %"class.blink::ThreadState"**
  %164 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %163, align 8, !noalias !45
  %165 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %165, align 8, !noalias !45
  %167 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %167, align 8, !noalias !45
  %169 = icmp eq %"class.blink::PersistentNode"* %168, null
  br i1 %169, label %170, label %173, !prof !3

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %166, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %171) #10
  %172 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %167, align 8
  br label %173

173:                                              ; preds = %170, %161
  %174 = phi %"class.blink::PersistentNode"* [ %172, %170 ], [ %168, %161 ]
  %175 = bitcast %"class.blink::PersistentNode"* %174 to i64*
  %176 = load i64, i64* %175, align 8, !noalias !45
  %177 = bitcast %"class.blink::PersistentRegion"* %166 to i64*
  store i64 %176, i64* %177, align 8, !noalias !45
  %178 = bitcast %"class.blink::PersistentNode"* %174 to %"class.blink::PersistentBase.481"**
  store %"class.blink::PersistentBase.481"* %150, %"class.blink::PersistentBase.481"** %178, align 8, !noalias !45
  %179 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %174, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %179, align 8
  store %"class.blink::PersistentNode"* %174, %"class.blink::PersistentNode"** %152, align 8, !alias.scope !45
  br label %180

180:                                              ; preds = %146, %146, %173
  %181 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %19, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %181) #10
  %182 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %183 = load i8, i8* %182, align 8, !range !2, !noalias !48
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %186, !prof !3

185:                                              ; preds = %180
  call void @llvm.trap() #10
  unreachable

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZNK5blink26ModuleScriptCreationParams12IsolatedCopyEv(%"class.blink::ModuleScriptCreationParams"* nonnull sret %19, %"class.blink::ModuleScriptCreationParams"* %187) #10
  %188 = call i8* @_Znwm(i64 360) #11, !noalias !51
  %189 = bitcast i8* %188 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %189, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_10PersistentIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS2_26ModuleScriptCreationParamsEEJNS2_10PersistentIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !51
  %190 = getelementptr inbounds i8, i8* %188, i64 32
  %191 = bitcast i8* %190 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)* @_ZN5blink19ModuleScriptFetcher6Client9OnFetchedERKNS_26ModuleScriptCreationParamsE to i64), i64 0>, <2 x i64>* %191, align 8, !noalias !51
  %192 = getelementptr inbounds i8, i8* %188, i64 48
  %193 = bitcast i8* %192 to %"struct.std::__1::__tuple_impl.549"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_19ModuleScriptFetcher6ClientEEENS3_26ModuleScriptCreationParamsEEEC2IJLm0ELm1EEJS7_S8_EJEJEJS7_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.549"* %193, %"class.blink::Persistent.480"* nonnull dereferenceable(16) %18, %"class.blink::ModuleScriptCreationParams"* nonnull dereferenceable(296) %19) #10, !noalias !51
  %194 = bitcast %"class.base::OnceCallback"* %17 to i8**
  store i8* %188, i8** %194, align 8, !alias.scope !51
  %195 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %147, %"class.base::Location"* nonnull dereferenceable(32) %16, %"class.base::OnceCallback"* nonnull %17) #10
  %196 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %196) #10
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %181) #10
  %197 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %152, align 8
  %198 = icmp eq %"class.blink::PersistentNode"* %197, null
  br i1 %198, label %218, label %199

199:                                              ; preds = %186
  %200 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %201 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %200, i64 0, i32 1
  %202 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %201) #10
  %203 = icmp eq i8* %202, null
  br i1 %203, label %204, label %206, !prof !3

204:                                              ; preds = %199
  %205 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %201, i8* %205) #10
  br label %206

206:                                              ; preds = %204, %199
  %207 = phi i8* [ %205, %204 ], [ %202, %199 ]
  %208 = bitcast i8* %207 to %"class.blink::ThreadState"**
  %209 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %209, i64 0, i32 3, i32 0, i32 0, i32 0
  %211 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %210, align 8
  %212 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %152, align 8
  %213 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %211, i64 0, i32 0, i32 0
  %214 = bitcast %"class.blink::PersistentRegion"* %211 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.blink::PersistentNode"* %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %212, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %217, align 8
  store %"class.blink::PersistentNode"* %212, %"class.blink::PersistentNode"** %213, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %152, align 8
  br label %218

218:                                              ; preds = %186, %206
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148) #10
  br label %326

219:                                              ; preds = %119
  %220 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to %"class.base::TaskRunner"*
  %221 = bitcast %"class.base::Location"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  %222 = bitcast <2 x i64>* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %222) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ModuleScriptFetcher::Client"*)* @_ZN5blink19ModuleScriptFetcher6Client8OnFailedEv to i64), i64 0>, <2 x i64>* %22, align 16
  %223 = bitcast %"class.blink::Persistent.480"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223) #10
  %224 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %24, i64 0, i32 0
  %225 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %24, i64 0, i32 0, i32 0
  store %"class.blink::ModuleScriptFetcher::Client"* %3, %"class.blink::ModuleScriptFetcher::Client"** %225, align 8, !alias.scope !58
  %226 = getelementptr inbounds %"class.blink::Persistent.480", %"class.blink::Persistent.480"* %24, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %226, align 8, !alias.scope !58
  %227 = ptrtoint %"class.blink::ModuleScriptFetcher::Client"* %3 to i64
  switch i64 %227, label %228 [
    i64 0, label %254
    i64 -1, label %254
  ]

228:                                              ; preds = %219
  %229 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !58
  %230 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %229, i64 0, i32 1
  %231 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %230) #10, !noalias !58
  %232 = icmp eq i8* %231, null
  br i1 %232, label %233, label %235, !prof !3

233:                                              ; preds = %228
  %234 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %230, i8* %234) #10
  br label %235

235:                                              ; preds = %233, %228
  %236 = phi i8* [ %234, %233 ], [ %231, %228 ]
  %237 = bitcast i8* %236 to %"class.blink::ThreadState"**
  %238 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %237, align 8, !noalias !58
  %239 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %238, i64 0, i32 3, i32 0, i32 0, i32 0
  %240 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %239, align 8, !noalias !58
  %241 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %240, i64 0, i32 0, i32 0
  %242 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %241, align 8, !noalias !58
  %243 = icmp eq %"class.blink::PersistentNode"* %242, null
  br i1 %243, label %244, label %247, !prof !3

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %240, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %245) #10
  %246 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %241, align 8
  br label %247

247:                                              ; preds = %244, %235
  %248 = phi %"class.blink::PersistentNode"* [ %246, %244 ], [ %242, %235 ]
  %249 = bitcast %"class.blink::PersistentNode"* %248 to i64*
  %250 = load i64, i64* %249, align 8, !noalias !58
  %251 = bitcast %"class.blink::PersistentRegion"* %240 to i64*
  store i64 %250, i64* %251, align 8, !noalias !58
  %252 = bitcast %"class.blink::PersistentNode"* %248 to %"class.blink::PersistentBase.481"**
  store %"class.blink::PersistentBase.481"* %224, %"class.blink::PersistentBase.481"** %252, align 8, !noalias !58
  %253 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %248, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %253, align 8
  store %"class.blink::PersistentNode"* %248, %"class.blink::PersistentNode"** %226, align 8, !alias.scope !58
  br label %254

254:                                              ; preds = %219, %219, %247
  %255 = call i8* @_Znwm(i64 64) #11, !noalias !61
  %256 = bitcast i8* %255 to %"struct.base::internal::BindState.542"*
  call void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.542"* nonnull %256, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %23, %"class.blink::Persistent.480"* nonnull dereferenceable(16) %24) #10, !noalias !61
  %257 = bitcast %"class.base::OnceCallback"* %21 to i8**
  store i8* %255, i8** %257, align 8, !alias.scope !61
  %258 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %220, %"class.base::Location"* nonnull dereferenceable(32) %20, %"class.base::OnceCallback"* nonnull %21) #10
  %259 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %21, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %259) #10
  %260 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %226, align 8
  %261 = icmp eq %"class.blink::PersistentNode"* %260, null
  br i1 %261, label %281, label %262

262:                                              ; preds = %254
  %263 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %264 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %263, i64 0, i32 1
  %265 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %264) #10
  %266 = icmp eq i8* %265, null
  br i1 %266, label %267, label %269, !prof !3

267:                                              ; preds = %262
  %268 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %264, i8* %268) #10
  br label %269

269:                                              ; preds = %267, %262
  %270 = phi i8* [ %268, %267 ], [ %265, %262 ]
  %271 = bitcast i8* %270 to %"class.blink::ThreadState"**
  %272 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %272, i64 0, i32 3, i32 0, i32 0, i32 0
  %274 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %273, align 8
  %275 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %226, align 8
  %276 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %274, i64 0, i32 0, i32 0
  %277 = bitcast %"class.blink::PersistentRegion"* %274 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.blink::PersistentNode"* %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %275, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %280, align 8
  store %"class.blink::PersistentNode"* %275, %"class.blink::PersistentNode"** %276, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %226, align 8
  br label %281

281:                                              ; preds = %254, %269
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %223) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #10
  br label %326

282:                                              ; preds = %99, %119
  %283 = bitcast %"class.std::__1::unique_ptr.474"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #10
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.474"* %25, i64 0, i32 0, i32 0, i32 0
  %285 = call noalias i8* @malloc(i64 336) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 336, i1 false) #10
  %286 = bitcast %"class.std::__1::unique_ptr.474"* %25 to i8**
  store i8* %285, i8** %286, align 8
  %287 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %287, label %291, label %288

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = atomicrmw add i32* %289, i32 1 monotonic
  br label %291

291:                                              ; preds = %282, %288
  %292 = bitcast %class.scoped_refptr.444* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292)
  %293 = bitcast %"class.blink::ModuleScriptFetcher::Client"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293)
  %294 = getelementptr inbounds %class.scoped_refptr.444, %class.scoped_refptr.444* %6, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %4, %"class.base::SingleThreadTaskRunner"** %294, align 8
  store %"class.blink::ModuleScriptFetcher::Client"* %3, %"class.blink::ModuleScriptFetcher::Client"** %7, align 8
  %295 = getelementptr inbounds i8, i8* %285, i64 312
  %296 = bitcast i8* %295 to %"class.WTF::HashTable.448"*
  %297 = call { %"struct.WTF::KeyValuePair.451"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPS4_RSA_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.448"* %296, %"class.blink::ModuleScriptFetcher::Client"** nonnull dereferenceable(8) %7, %class.scoped_refptr.444* nonnull dereferenceable(8) %6) #10
  %298 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %294, align 8
  %299 = icmp eq %"class.base::SingleThreadTaskRunner"* %298, null
  br i1 %299, label %308, label %300

300:                                              ; preds = %291
  %301 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %298, i64 0, i32 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = atomicrmw sub i32* %302, i32 1 acq_rel
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %308

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %301, i64 -2
  %307 = bitcast %"class.base::RefCountedThreadSafe.417"* %306 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %307) #10
  br label %308

308:                                              ; preds = %291, %300, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293)
  %309 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %26, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %309) #10
  %310 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %310) #10
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %27, %"class.blink::KURL"* %1) #10
  %311 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %26, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %311, %"class.blink::KURL"* nonnull dereferenceable(112) %27) #10
  %312 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %26, i64 0, i32 1
  store i32 %2, i32* %312, align 8, !alias.scope !68
  %313 = call { %"struct.WTF::KeyValuePair.472"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EES6_SD_EENS_18HashTableAddResultISO_SE_EEOT0_OT1_(%"class.WTF::HashTable.469"* %104, %"struct.std::__1::pair.473"* nonnull dereferenceable(120) %26, %"class.std::__1::unique_ptr.474"* nonnull dereferenceable(8) %25) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %311) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %310) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %309) #10
  %314 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %284, align 8
  store %"class.blink::WorkletModuleResponsesMap::Entry"* null, %"class.blink::WorkletModuleResponsesMap::Entry"** %284, align 8
  %315 = icmp eq %"class.blink::WorkletModuleResponsesMap::Entry"* %314, null
  br i1 %315, label %325, label %316

316:                                              ; preds = %308
  %317 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %314, i64 0, i32 3
  call void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSC_IS9_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.447"* %317) #10
  %318 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %319 = load i8, i8* %318, align 8, !range !2
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %322) #10
  br label %323

323:                                              ; preds = %321, %316
  %324 = bitcast %"class.blink::WorkletModuleResponsesMap::Entry"* %314 to i8*
  call void @free(i8* %324) #10
  br label %325

325:                                              ; preds = %308, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #10
  br label %326

326:                                              ; preds = %325, %281, %218, %145, %98
  %327 = phi i1 [ true, %98 ], [ false, %325 ], [ true, %281 ], [ true, %218 ], [ true, %145 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %28) #10
  %328 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %328, label %337, label %329

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %331 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %330, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = atomicrmw sub i32* %331, i32 1 acq_rel
  %333 = icmp eq i32 %332, 1
  br i1 %333, label %334, label %337

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %330, i64 -2
  %336 = bitcast %"class.base::RefCountedThreadSafe.417"* %335 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %336) #10
  br label %337

337:                                              ; preds = %326, %329, %334
  ret i1 %327
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkletModuleResponsesMap14SetEntryParamsERKNS_4KURLENS_10ModuleTypeERKN4absl8optionalINS_26ModuleScriptCreationParamsEEE(%"class.blink::WorkletModuleResponsesMap"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.absl::optional"* dereferenceable(304)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::pair.473", align 8
  %6 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %13, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %14 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 1
  store i32 %2, i32* %14, align 8, !alias.scope !71
  %15 = getelementptr inbounds %"class.WTF::HashMap.468", %"class.WTF::HashMap.468"* %11, i64 0, i32 0
  %16 = call %"struct.WTF::KeyValuePair.472"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISH_SM_SN_EES6_EEPKSE_RKT0_(%"class.WTF::HashTable.469"* %15, %"struct.std::__1::pair.473"* nonnull dereferenceable(120) %5) #10
  %17 = icmp eq %"struct.WTF::KeyValuePair.472"* %16, null
  %18 = getelementptr inbounds %"class.WTF::HashMap.468", %"class.WTF::HashMap.468"* %11, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %19, i64 %22
  %24 = select i1 %17, %"struct.WTF::KeyValuePair.472"* %23, %"struct.WTF::KeyValuePair.472"* %16
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %25, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #10
  call void @_ZN5blink25WorkletModuleResponsesMap5Entry9SetParamsERKN4absl8optionalINS_26ModuleScriptCreationParamsEEE(%"class.blink::WorkletModuleResponsesMap::Entry"* %26, %"class.absl::optional"* dereferenceable(304) %3)
  br label %27

27:                                               ; preds = %4, %10
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkletModuleResponsesMap7DisposeEv(%"class.blink::WorkletModuleResponsesMap"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.468", %"class.WTF::HashMap.468"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %10, i64 %13
  br i1 %8, label %28, label %15

15:                                               ; preds = %1
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"struct.WTF::KeyValuePair.472"* [ %22, %21 ], [ %10, %15 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %18, i64 0, i32 0
  %20 = tail call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.473"* dereferenceable(120) %19) #10
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %18, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair.472"* %22, %14
  br i1 %23, label %24, label %17

24:                                               ; preds = %21, %17
  %25 = phi %"struct.WTF::KeyValuePair.472"* [ %18, %17 ], [ %14, %21 ]
  %26 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %9, align 8
  %27 = load i32, i32* %11, align 8
  br label %28

28:                                               ; preds = %24, %1, %15
  %29 = phi i32 [ %12, %1 ], [ 0, %15 ], [ %27, %24 ]
  %30 = phi %"struct.WTF::KeyValuePair.472"* [ %10, %1 ], [ %10, %15 ], [ %26, %24 ]
  %31 = phi %"struct.WTF::KeyValuePair.472"* [ %14, %1 ], [ %10, %15 ], [ %25, %24 ]
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %30, i64 %32
  %34 = icmp eq %"struct.WTF::KeyValuePair.472"* %31, %33
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %48

39:                                               ; preds = %71
  %40 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %9, align 8
  br label %41

41:                                               ; preds = %39, %28
  %42 = phi %"struct.WTF::KeyValuePair.472"* [ %40, %39 ], [ %30, %28 ]
  %43 = icmp eq %"struct.WTF::KeyValuePair.472"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = load i32, i32* %11, align 8
  call void @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSE_j(%"struct.WTF::KeyValuePair.472"* nonnull %42, i32 %45) #10
  %46 = bitcast %"class.WTF::HashMap.468"* %5 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %6, align 4
  br label %47

47:                                               ; preds = %41, %44
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #10
  ret void

48:                                               ; preds = %35, %71
  %49 = phi %"struct.WTF::KeyValuePair.472"* [ %31, %35 ], [ %72, %71 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %49, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #10
  store i8 0, i8* %36, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 296, i1 false) #10
  call void @_ZN5blink25WorkletModuleResponsesMap5Entry9SetParamsERKN4absl8optionalINS_26ModuleScriptCreationParamsEEE(%"class.blink::WorkletModuleResponsesMap::Entry"* %51, %"class.absl::optional"* nonnull dereferenceable(304) %2)
  %56 = load i8, i8* %36, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %38) #10
  store i8 0, i8* %36, align 8
  br label %59

59:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #10
  br label %60

60:                                               ; preds = %48, %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %49, i64 1
  %62 = icmp eq %"struct.WTF::KeyValuePair.472"* %61, %14
  br i1 %62, label %71, label %63

63:                                               ; preds = %60, %68
  %64 = phi %"struct.WTF::KeyValuePair.472"* [ %69, %68 ], [ %61, %60 ]
  %65 = phi %"struct.WTF::KeyValuePair.472"* [ %64, %68 ], [ %49, %60 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %65, i64 1, i32 0
  %67 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.473"* dereferenceable(120) %66) #10
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %64, i64 1
  %70 = icmp eq %"struct.WTF::KeyValuePair.472"* %69, %14
  br i1 %70, label %71, label %63

71:                                               ; preds = %63, %68, %60
  %72 = phi %"struct.WTF::KeyValuePair.472"* [ %14, %60 ], [ %64, %63 ], [ %14, %68 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair.472"* %72, %33
  br i1 %73, label %39, label %48
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ParkableString"* @_ZNK5blink26ModuleScriptCreationParams13GetSourceTextEv(%"class.blink::ModuleScriptCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ParkableString", align 8
  %3 = alloca %class.scoped_refptr, align 8
  %4 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %68, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ParkableString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::String"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %15 = bitcast %class.scoped_refptr* %3 to i64*
  store i64 %13, i64* %15, align 8
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %2, %class.scoped_refptr* nonnull dereferenceable(8) %3) #10
  %16 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %17, align 8
  %19 = icmp eq %"class.blink::ParkableStringImpl"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #10
  br label %22

22:                                               ; preds = %20, %7
  %23 = ptrtoint %"class.blink::ParkableStringImpl"* %18 to i64
  %24 = bitcast %"class.blink::ParkableString"* %16 to i64*
  %25 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %16, i64 0, i32 0, i32 0
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #10
  %30 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  call void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"* nonnull %26) #10
  %34 = bitcast %"class.blink::ParkableStringImpl"* %26 to i8*
  call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %22, %28, %33
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %2) #10
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %51

51:                                               ; preds = %35, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 0, i64* %12, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %51
  store i8 0, i8* %4, align 8
  br label %68

68:                                               ; preds = %1, %67
  %69 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  ret %"class.blink::ParkableString"* %69
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_21CrossThreadPersistentIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::ModuleScriptCreationParams"*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.blink::ModuleScriptFetcher::Client"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)**
  %23 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.blink::ModuleScriptFetcher::Client"* %14, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296) %5) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS2_26ModuleScriptCreationParamsEEJNS2_21CrossThreadPersistentIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::ModuleScriptCreationParams"*
  tail call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %5) #10
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #10
  %13 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %14 = load atomic i64, i64* %7 monotonic, align 8
  %15 = inttoptr i64 %14 to %"class.blink::PersistentNode"*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %13, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::CrossThreadPersistentRegion"* %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %14 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %15, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %22, align 8
  store %"class.blink::PersistentNode"* %15, %"class.blink::PersistentNode"** %18, align 8
  br label %23

23:                                               ; preds = %17, %10
  store atomic i64 0, i64* %7 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #10
  br label %24

24:                                               ; preds = %3, %23
  %25 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %24, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"*, %"class.blink::ModuleScriptFetcher::Client"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.452", %"class.blink::PersistentBase.452"* %0, i64 0, i32 0
  store %"class.blink::ModuleScriptFetcher::Client"* %1, %"class.blink::ModuleScriptFetcher::Client"** %3, align 8
  %4 = ptrtoint %"class.blink::ModuleScriptFetcher::Client"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.452", %"class.blink::PersistentBase.452"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.452"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #10
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.452"**
  store %"class.blink::PersistentBase.452"* %0, %"class.blink::PersistentBase.452"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.452", %"class.blink::PersistentBase.452"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase.452"*
  tail call void @_ZNK5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.452"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.452"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase.452", %"class.blink::PersistentBase.452"* %0, i64 0, i32 0
  %5 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ModuleScriptFetcher::Client"* %5 to i8*
  %10 = ptrtoint %"class.blink::ModuleScriptFetcher::Client"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #10, !range !74
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ModuleScriptCreationParamsC2ERKS0_(%"class.blink::ModuleScriptCreationParams"*, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296)) unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %3, %"class.blink::KURL"* dereferenceable(112) %4) #10
  %5 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 1
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %5, %"class.blink::KURL"* dereferenceable(112) %6) #10
  %7 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 2
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 9, i1 false)
  %11 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* %12, %"class.blink::ParkableStringImpl"** %13, align 8
  %14 = icmp eq %"class.blink::ParkableStringImpl"* %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #10
  br label %17

17:                                               ; preds = %2, %15
  %18 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 7, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #10
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %17, %22, %37
  %40 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8
  %41 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 8
  %42 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %40, i64 0, i32 0
  %43 = bitcast %"class.blink::Persistent"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::Persistent"* %40 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %46, align 8
  switch i64 %44, label %47 [
    i64 0, label %73
    i64 -1, label %73
  ]

47:                                               ; preds = %39
  %48 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %49 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %48, i64 0, i32 1
  %50 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %49) #10
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %54, !prof !3

52:                                               ; preds = %47
  %53 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %49, i8* %53) #10
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i8* [ %53, %52 ], [ %50, %47 ]
  %56 = bitcast i8* %55 to %"class.blink::ThreadState"**
  %57 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %60, align 8
  %62 = icmp eq %"class.blink::PersistentNode"* %61, null
  br i1 %62, label %63, label %66, !prof !3

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %64) #10
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %60, align 8
  br label %66

66:                                               ; preds = %63, %54
  %67 = phi %"class.blink::PersistentNode"* [ %65, %63 ], [ %61, %54 ]
  %68 = bitcast %"class.blink::PersistentNode"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::PersistentRegion"* %59 to i64*
  store i64 %69, i64* %70, align 8
  %71 = bitcast %"class.blink::PersistentNode"* %67 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %42, %"class.blink::PersistentBase"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %67, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27SingleCachedMetadataHandlerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %72, align 8
  store %"class.blink::PersistentNode"* %67, %"class.blink::PersistentNode"** %46, align 8
  br label %73

73:                                               ; preds = %39, %39, %66
  %74 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 9
  %75 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 9
  %76 = getelementptr inbounds %"class.blink::Persistent.206", %"class.blink::Persistent.206"* %74, i64 0, i32 0
  %77 = bitcast %"class.blink::Persistent.206"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.blink::Persistent.206"* %74 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %80, align 8
  switch i64 %78, label %81 [
    i64 0, label %107
    i64 -1, label %107
  ]

81:                                               ; preds = %73
  %82 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %83 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %82, i64 0, i32 1
  %84 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %83) #10
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %88, !prof !3

86:                                               ; preds = %81
  %87 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %83, i8* %87) #10
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i8* [ %87, %86 ], [ %84, %81 ]
  %90 = bitcast i8* %89 to %"class.blink::ThreadState"**
  %91 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %94, align 8
  %96 = icmp eq %"class.blink::PersistentNode"* %95, null
  br i1 %96, label %97, label %100, !prof !3

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %93, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %98) #10
  %99 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %94, align 8
  br label %100

100:                                              ; preds = %97, %88
  %101 = phi %"class.blink::PersistentNode"* [ %99, %97 ], [ %95, %88 ]
  %102 = bitcast %"class.blink::PersistentNode"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.blink::PersistentRegion"* %93 to i64*
  store i64 %103, i64* %104, align 8
  %105 = bitcast %"class.blink::PersistentNode"* %101 to %"class.blink::PersistentBase.207"**
  store %"class.blink::PersistentBase.207"* %76, %"class.blink::PersistentBase.207"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %101, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14ScriptStreamerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %106, align 8
  store %"class.blink::PersistentNode"* %101, %"class.blink::PersistentNode"** %80, align 8
  br label %107

107:                                              ; preds = %73, %73, %100
  %108 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 10
  %109 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 10
  %110 = load i32, i32* %109, align 8
  store i32 %110, i32* %108, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27SingleCachedMetadataHandlerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SingleCachedMetadataHandler"**
  %5 = load %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::SingleCachedMetadataHandler"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::SingleCachedMetadataHandler"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SingleCachedMetadataHandler"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CachedMetadataHandler"*
  %4 = bitcast i8* %1 to void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)**, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CachedMetadataHandler"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14ScriptStreamerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ScriptStreamer"**
  %5 = load %"class.blink::ScriptStreamer"*, %"class.blink::ScriptStreamer"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::ScriptStreamer"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ScriptStreamer", %"class.blink::ScriptStreamer"* %5, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ScriptStreamerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ScriptStreamerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptStreamer"*
  tail call void @_ZNK5blink14ScriptStreamer5TraceEPNS_7VisitorE(%"class.blink::ScriptStreamer"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink14ScriptStreamer5TraceEPNS_7VisitorE(%"class.blink::ScriptStreamer"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_21CrossThreadPersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ModuleScriptFetcher::Client"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ModuleScriptFetcher::Client"*)**
  %21 = load void (%"class.blink::ModuleScriptFetcher::Client"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ModuleScriptFetcher::Client"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ModuleScriptFetcher::Client"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ModuleScriptFetcher::Client"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_21CrossThreadPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #10
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #10
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.451"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPS4_RSA_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.448"*, %"class.blink::ModuleScriptFetcher::Client"** dereferenceable(8), %class.scoped_refptr.444* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.451"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.451"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.448"* %0, %"struct.WTF::KeyValuePair.451"* null)
  %9 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.451"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ModuleScriptFetcher::Client"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %40, align 8
  %42 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ModuleScriptFetcher::Client"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ModuleScriptFetcher::Client"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.451"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.451"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %59, %43
  br i1 %64, label %126, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %59, inttoptr (i64 -1 to %"class.blink::ModuleScriptFetcher::Client"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.451"* %60, %"struct.WTF::KeyValuePair.451"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %73, align 8
  %75 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.451"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.451"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::ModuleScriptFetcher::Client"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.451"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %89, i64 0, i32 0, i32 0
  %91 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %92 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %91, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %92) #10
  tail call void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"* %90, %"class.blink::ModuleScriptFetcher::Client"* %88) #10
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %92) #10
  %93 = getelementptr inbounds %class.scoped_refptr.444, %class.scoped_refptr.444* %2, i64 0, i32 0
  %94 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %93, align 8
  %95 = icmp eq %"class.base::SingleThreadTaskRunner"* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 1 monotonic
  br label %99

99:                                               ; preds = %96, %87
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %89, i64 0, i32 1
  %101 = ptrtoint %"class.base::SingleThreadTaskRunner"* %94 to i64
  %102 = bitcast %class.scoped_refptr.444* %100 to i64*
  %103 = getelementptr inbounds %class.scoped_refptr.444, %class.scoped_refptr.444* %100, i64 0, i32 0
  %104 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.base::SingleThreadTaskRunner"* %104, null
  br i1 %105, label %114, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %104, i64 0, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw sub i32* %108, i32 1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %107, i64 -2
  %113 = bitcast %"class.base::RefCountedThreadSafe.417"* %112 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %113) #10
  br label %114

114:                                              ; preds = %99, %106, %111
  %115 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, %117
  %121 = shl i32 %120, 1
  %122 = load i32, i32* %12, align 8
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = tail call %"struct.WTF::KeyValuePair.451"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.448"* %0, %"struct.WTF::KeyValuePair.451"* %89)
  br label %126

126:                                              ; preds = %58, %114, %124
  %127 = phi i8 [ 1, %114 ], [ 1, %124 ], [ 0, %58 ]
  %128 = phi %"struct.WTF::KeyValuePair.451"* [ %89, %114 ], [ %125, %124 ], [ %60, %58 ]
  %129 = insertvalue { %"struct.WTF::KeyValuePair.451"*, i8 } undef, %"struct.WTF::KeyValuePair.451"* %128, 0
  %130 = insertvalue { %"struct.WTF::KeyValuePair.451"*, i8 } %129, i8 %127, 1
  ret { %"struct.WTF::KeyValuePair.451"*, i8 } %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.451"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.448"*, %"struct.WTF::KeyValuePair.451"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.451"*
  %37 = call %"struct.WTF::KeyValuePair.451"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.448"* %0, %"struct.WTF::KeyValuePair.451"* %36, i32 %32, %"struct.WTF::KeyValuePair.451"* %1) #10
  ret %"struct.WTF::KeyValuePair.451"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.451"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.448"*, %"struct.WTF::KeyValuePair.451"*, i32, %"struct.WTF::KeyValuePair.451"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.448", align 8
  %6 = bitcast %"class.WTF::HashTable.448"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.448"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.451"* %1, %"struct.WTF::KeyValuePair.451"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.451"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.448"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.448"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.451"* %22 to i64
  br label %87

24:                                               ; preds = %107
  %25 = bitcast %"class.WTF::HashTable.448"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.448"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %108, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.451"* [ null, %16 ], [ %111, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %109, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable.448"* nonnull %5)
  %35 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, -2147483648
  store i32 %37, i32* %35, align 8
  %38 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %7, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair.451"* %38, null
  br i1 %39, label %86, label %40, !prof !75

40:                                               ; preds = %28
  %41 = load i32, i32* %8, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %84, label %43

43:                                               ; preds = %40
  %44 = zext i32 %41 to i64
  br label %45

45:                                               ; preds = %81, %43
  %46 = phi i64 [ 0, %43 ], [ %82, %81 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %38, i64 %46, i32 0, i32 0, i32 0
  %48 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %47, align 8
  %49 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %48, inttoptr (i64 -1 to %"class.blink::ModuleScriptFetcher::Client"*)
  br i1 %49, label %81, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %38, i64 %46, i32 1, i32 0
  %52 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %51, align 8
  %53 = icmp eq %"class.base::SingleThreadTaskRunner"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %52, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.417"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #10
  br label %62

62:                                               ; preds = %59, %54, %50
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %38, i64 %46, i32 0, i32 0, i32 1
  %64 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %63 to i64*
  %65 = load atomic i64, i64* %64 acquire, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %62
  %68 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %69 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %68, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #10
  %70 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %71 = load atomic i64, i64* %64 monotonic, align 8
  %72 = inttoptr i64 %71 to %"class.blink::PersistentNode"*
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %70, i64 0, i32 0, i32 0
  %76 = bitcast %"class.blink::CrossThreadPersistentRegion"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = inttoptr i64 %71 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %72, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  store %"class.blink::PersistentNode"* %72, %"class.blink::PersistentNode"** %75, align 8
  br label %80

80:                                               ; preds = %74, %67
  store atomic i64 0, i64* %64 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #10
  br label %81

81:                                               ; preds = %80, %62, %45
  %82 = add nuw nsw i64 %46, 1
  %83 = icmp eq i64 %82, %44
  br i1 %83, label %84, label %45

84:                                               ; preds = %81, %40
  %85 = bitcast %"struct.WTF::KeyValuePair.451"* %38 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %85) #10
  store %"struct.WTF::KeyValuePair.451"* null, %"struct.WTF::KeyValuePair.451"** %7, align 8
  br label %86

86:                                               ; preds = %28, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.451"* %33

87:                                               ; preds = %21, %107
  %88 = phi i64 [ %108, %107 ], [ %23, %21 ]
  %89 = phi i32 [ %109, %107 ], [ %13, %21 ]
  %90 = phi %"struct.WTF::KeyValuePair.451"* [ %110, %107 ], [ %22, %21 ]
  %91 = phi %"struct.WTF::KeyValuePair.451"* [ %111, %107 ], [ null, %21 ]
  %92 = phi i32 [ %112, %107 ], [ 0, %21 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %90, i64 %93
  %95 = bitcast %"struct.WTF::KeyValuePair.451"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  switch i64 %96, label %97 [
    i64 -1, label %107
    i64 0, label %107
  ]

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %94, i64 0, i32 0
  %99 = call { %"struct.WTF::KeyValuePair.451"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.448"* nonnull %5, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %98) #10
  %100 = extractvalue { %"struct.WTF::KeyValuePair.451"*, i8 } %99, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_ISA_EEEELb0EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.451"* dereferenceable(24) %94, %"struct.WTF::KeyValuePair.451"* dereferenceable(24) %100) #10
  %101 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %15, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %101, i64 %93
  %103 = icmp eq %"struct.WTF::KeyValuePair.451"* %102, %3
  %104 = select i1 %103, %"struct.WTF::KeyValuePair.451"* %100, %"struct.WTF::KeyValuePair.451"* %91
  %105 = load i32, i32* %12, align 8
  %106 = ptrtoint %"struct.WTF::KeyValuePair.451"* %101 to i64
  br label %107

107:                                              ; preds = %87, %87, %97
  %108 = phi i64 [ %88, %87 ], [ %106, %97 ], [ %88, %87 ]
  %109 = phi i32 [ %89, %87 ], [ %105, %97 ], [ %89, %87 ]
  %110 = phi %"struct.WTF::KeyValuePair.451"* [ %90, %87 ], [ %101, %97 ], [ %90, %87 ]
  %111 = phi %"struct.WTF::KeyValuePair.451"* [ %91, %87 ], [ %104, %97 ], [ %91, %87 ]
  %112 = add i32 %92, 1
  %113 = icmp eq i32 %112, %109
  br i1 %113, label %24, label %87
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable.448"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.451"* %3, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %47, %9
  %12 = phi i64 [ 0, %9 ], [ %48, %47 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %3, i64 %12, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %13, align 8
  %15 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %14, inttoptr (i64 -1 to %"class.blink::ModuleScriptFetcher::Client"*)
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %3, i64 %12, i32 1, i32 0
  %18 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %17, align 8
  %19 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.417"* %26 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #10
  br label %28

28:                                               ; preds = %25, %20, %16
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %3, i64 %12, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %29 to i64*
  %31 = load atomic i64, i64* %30 acquire, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %35 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %34, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %35) #10
  %36 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %37 = load atomic i64, i64* %30 monotonic, align 8
  %38 = inttoptr i64 %37 to %"class.blink::PersistentNode"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %36, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::CrossThreadPersistentRegion"* %36 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = inttoptr i64 %37 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %45, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %41, align 8
  br label %46

46:                                               ; preds = %40, %33
  store atomic i64 0, i64* %30 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %35) #10
  br label %47

47:                                               ; preds = %46, %28, %11
  %48 = add nuw nsw i64 %12, 1
  %49 = icmp eq i64 %48, %10
  br i1 %49, label %50, label %11

50:                                               ; preds = %47, %5
  %51 = bitcast %"struct.WTF::KeyValuePair.451"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #10
  %52 = bitcast %"class.WTF::HashTable.448"* %0 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  store i32 0, i32* %6, align 8
  %53 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 2
  store i32 0, i32* %53, align 4
  br label %54

54:                                               ; preds = %1, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.451"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEENS_12KeyValuePairIS5_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.448"*, %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.448", %"class.WTF::HashTable.448"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.451"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %34, align 8
  %36 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::ModuleScriptFetcher::Client"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.451"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.451"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.451"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.451"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.451"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::ModuleScriptFetcher::Client"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %67, align 8
  %69 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %63, inttoptr (i64 -1 to %"class.blink::ModuleScriptFetcher::Client"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.451"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %79, align 8
  %81 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.451"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.451"*, i8 } undef, %"struct.WTF::KeyValuePair.451"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.451"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.451"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_ISA_EEEELb0EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.451"* dereferenceable(24), %"struct.WTF::KeyValuePair.451"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.417"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %11, %6, %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %14
  %20 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #10
  %22 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %23 = load atomic i64, i64* %16 monotonic, align 8
  %24 = inttoptr i64 %23 to %"class.blink::PersistentNode"*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %23 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %26, %19
  store atomic i64 0, i64* %16 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #10
  br label %33

33:                                               ; preds = %14, %32
  %34 = bitcast %"struct.WTF::KeyValuePair.451"* %1 to i8*
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %1, i64 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  %36 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %37 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %36, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %37) #10
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %38, align 8
  tail call void @_ZN5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.452"* %35, %"class.blink::ModuleScriptFetcher::Client"* %39) #10
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %37) #10
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %class.scoped_refptr.444, %class.scoped_refptr.444* %41, i64 0, i32 0
  %43 = bitcast %class.scoped_refptr.444* %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.scoped_refptr.444* %40 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %42, align 8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase.481"*
  tail call void @_ZNK5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.481"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.481"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase.481", %"class.blink::PersistentBase.481"* %0, i64 0, i32 0
  %5 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ModuleScriptFetcher::Client"* %5 to i8*
  %10 = ptrtoint %"class.blink::ModuleScriptFetcher::Client"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #10, !range !74
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ModuleScriptFetcher::Client"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ModuleScriptFetcher::Client"*)**
  %21 = load void (%"class.blink::ModuleScriptFetcher::Client"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ModuleScriptFetcher::Client"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ModuleScriptFetcher::Client"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ModuleScriptFetcher::Client"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEEC2IS6_JS8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.542"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.480"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.542", %"struct.base::internal::BindState.542"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState.542", %"struct.base::internal::BindState.542"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.542", %"struct.base::internal::BindState.542"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple.543", %"class.std::__1::tuple.543"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.480"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple.543"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.542", %"struct.base::internal::BindState.542"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !3

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #10
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !3

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #10
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.481"**
  store %"class.blink::PersistentBase.481"* %11, %"class.blink::PersistentBase.481"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS2_10PersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.472"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISH_SM_SN_EES6_EEPKSE_RKT0_(%"class.WTF::HashTable.469"*, %"struct.std::__1::pair.473"* dereferenceable(120)) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"struct.std::__1::pair.473", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.472"* %6, null
  br i1 %7, label %96, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = lshr i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %8
  %20 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %14) #10
  br label %21

21:                                               ; preds = %8, %19
  %22 = phi i32 [ %20, %19 ], [ %17, %8 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = shl i32 %24, 15
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = zext i32 %22 to i64
  %39 = mul i64 %38, 5146158508761418231
  %40 = zext i32 %37 to i64
  %41 = mul i64 %40, -682818954288075998
  %42 = add i64 %41, %39
  %43 = lshr i64 %42, 32
  %44 = trunc i64 %43 to i32
  %45 = and i32 %11, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %4, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %4, i64 0, i32 1
  %51 = xor i32 %44, -1
  %52 = lshr i64 %42, 55
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, %51
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %91, %21
  %66 = phi i64 [ 0, %21 ], [ %93, %91 ]
  %67 = phi i64 [ %46, %21 ], [ %95, %91 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %67
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %47) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %48) #10, !noalias !76
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #10, !noalias !76
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %49, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #10
  store i32 -128, i32* %50, align 8, !alias.scope !79
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %48) #10, !noalias !76
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %68, i64 0, i32 0, i32 0
  %70 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %69, %"class.blink::KURL"* nonnull dereferenceable(112) %49) #10
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #10
  br label %77

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %67, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = load i32, i32* %50, align 8
  %76 = icmp eq i32 %74, %75
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #10
  br i1 %76, label %96, label %77

77:                                               ; preds = %71, %72
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %67, i32 0, i32 0, i32 4
  %79 = bitcast %"class.WTF::String"* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, inttoptr (i64 -1 to i8*)
  br i1 %81, label %91, label %82

82:                                               ; preds = %77
  %83 = bitcast i8* %80 to %"class.WTF::StringImpl"*
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %85 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"* %84) #10
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %67, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = load i32, i32* %23, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %96, label %91

91:                                               ; preds = %82, %77, %86
  %92 = icmp eq i64 %66, 0
  %93 = select i1 %92, i64 %64, i64 %66
  %94 = add i64 %93, %67
  %95 = and i64 %94, %12
  br label %65

96:                                               ; preds = %86, %72, %2
  %97 = phi %"struct.WTF::KeyValuePair.472"* [ null, %2 ], [ null, %72 ], [ %68, %86 ]
  ret %"struct.WTF::KeyValuePair.472"* %97
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_10PersistentIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::ModuleScriptCreationParams"*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.blink::ModuleScriptFetcher::Client"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)**
  %23 = load void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*, void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptCreationParams"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.blink::ModuleScriptFetcher::Client"* %14, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296) %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19ModuleScriptFetcher6ClientEFvRKNS2_26ModuleScriptCreationParamsEEJNS2_10PersistentIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::ModuleScriptCreationParams"*
  tail call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %5) #10
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.blink::PersistentNode"**
  %8 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %9 = icmp eq %"class.blink::PersistentNode"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %3
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !3

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #10
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentNode"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %24, align 8
  br label %29

29:                                               ; preds = %3, %17
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_19ModuleScriptFetcher6ClientEEENS3_26ModuleScriptCreationParamsEEEC2IJLm0ELm1EEJS7_S8_EJEJEJS7_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.549"*, %"class.blink::Persistent.480"* dereferenceable(16), %"class.blink::ModuleScriptCreationParams"* dereferenceable(296)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl.549", %"struct.std::__1::__tuple_impl.549"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::Persistent.480"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.std::__1::__tuple_impl.549"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl.549", %"struct.std::__1::__tuple_impl.549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  switch i64 %6, label %9 [
    i64 0, label %35
    i64 -1, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !3

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #10
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !3

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #10
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.481"**
  store %"class.blink::PersistentBase.481"* %4, %"class.blink::PersistentBase.481"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19ModuleScriptFetcher6ClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %8, align 8
  br label %35

35:                                               ; preds = %3, %3, %28
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl.549", %"struct.std::__1::__tuple_impl.549"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = bitcast i8* %36 to %"class.blink::ModuleScriptCreationParams"*
  tail call void @_ZN5blink26ModuleScriptCreationParamsC2ERKS0_(%"class.blink::ModuleScriptCreationParams"* %37, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296) %2) #10
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSC_IS9_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.447"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashMap.447", %"class.WTF::HashMap.447"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.451"*, %"struct.WTF::KeyValuePair.451"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.451"* %3, null
  br i1 %4, label %52, label %5, !prof !75

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashMap.447", %"class.WTF::HashMap.447"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %47, %9
  %12 = phi i64 [ 0, %9 ], [ %48, %47 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %3, i64 %12, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ModuleScriptFetcher::Client"*, %"class.blink::ModuleScriptFetcher::Client"** %13, align 8
  %15 = icmp eq %"class.blink::ModuleScriptFetcher::Client"* %14, inttoptr (i64 -1 to %"class.blink::ModuleScriptFetcher::Client"*)
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %3, i64 %12, i32 1, i32 0
  %18 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %17, align 8
  %19 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.417"* %26 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #10
  br label %28

28:                                               ; preds = %25, %20, %16
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.451", %"struct.WTF::KeyValuePair.451"* %3, i64 %12, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %29 to i64*
  %31 = load atomic i64, i64* %30 acquire, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %35 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %34, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %35) #10
  %36 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %37 = load atomic i64, i64* %30 monotonic, align 8
  %38 = inttoptr i64 %37 to %"class.blink::PersistentNode"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %36, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::CrossThreadPersistentRegion"* %36 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = inttoptr i64 %37 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %45, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %41, align 8
  br label %46

46:                                               ; preds = %40, %33
  store atomic i64 0, i64* %30 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %35) #10
  br label %47

47:                                               ; preds = %46, %28, %11
  %48 = add nuw nsw i64 %12, 1
  %49 = icmp eq i64 %48, %10
  br i1 %49, label %50, label %11

50:                                               ; preds = %47, %5
  %51 = bitcast %"struct.WTF::KeyValuePair.451"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #10
  store %"struct.WTF::KeyValuePair.451"* null, %"struct.WTF::KeyValuePair.451"** %2, align 8
  br label %52

52:                                               ; preds = %1, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.472"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EES6_SD_EENS_18HashTableAddResultISO_SE_EEOT0_OT1_(%"class.WTF::HashTable.469"*, %"struct.std::__1::pair.473"* dereferenceable(120), %"class.std::__1::unique_ptr.474"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"struct.std::__1::pair.473", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.551", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"struct.std::__1::pair.473", align 8
  %9 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair.472"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = tail call %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.469"* %0, %"struct.WTF::KeyValuePair.472"* null)
  %14 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %9, align 8
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi %"struct.WTF::KeyValuePair.472"* [ %10, %3 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = lshr i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %15
  %28 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %22) #10
  br label %29

29:                                               ; preds = %15, %27
  %30 = phi i32 [ %28, %27 ], [ %25, %15 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = shl i32 %32, 15
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 10
  %37 = xor i32 %36, %35
  %38 = mul i32 %37, 9
  %39 = lshr i32 %38, 6
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 11
  %42 = xor i32 %41, -1
  %43 = add i32 %40, %42
  %44 = lshr i32 %43, 16
  %45 = xor i32 %44, %43
  %46 = zext i32 %30 to i64
  %47 = mul i64 %46, 5146158508761418231
  %48 = zext i32 %45 to i64
  %49 = mul i64 %48, -682818954288075998
  %50 = add i64 %49, %47
  %51 = lshr i64 %50, 32
  %52 = trunc i64 %51 to i32
  %53 = and i32 %19, %52
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %8, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %8, i64 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %8, i64 0, i32 1
  %59 = xor i32 %52, -1
  %60 = lshr i64 %50, 55
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, %59
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %100, %29
  %74 = phi i64 [ 0, %29 ], [ %103, %100 ]
  %75 = phi i64 [ %54, %29 ], [ %105, %100 ]
  %76 = phi %"struct.WTF::KeyValuePair.472"* [ null, %29 ], [ %101, %100 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %16, i64 %75
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %55) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %56) #10, !noalias !82
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #10, !noalias !82
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %57, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #10
  store i32 -128, i32* %58, align 8, !alias.scope !85
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %56) #10, !noalias !82
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %77, i64 0, i32 0, i32 0
  %79 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %78, %"class.blink::KURL"* nonnull dereferenceable(112) %57) #10
  br i1 %79, label %81, label %80

80:                                               ; preds = %73
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #10
  br label %86

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %16, i64 %75, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = load i32, i32* %58, align 8
  %85 = icmp eq i32 %83, %84
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #10
  br i1 %85, label %106, label %86

86:                                               ; preds = %80, %81
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %16, i64 %75, i32 0, i32 0, i32 4
  %88 = bitcast %"class.WTF::String"* %87 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = icmp eq i8* %89, inttoptr (i64 -1 to i8*)
  br i1 %90, label %100, label %91

91:                                               ; preds = %86
  %92 = bitcast i8* %89 to %"class.WTF::StringImpl"*
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %94 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"* %93) #10
  br i1 %94, label %95, label %100

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %16, i64 %75, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = load i32, i32* %31, align 8
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %167, label %100

100:                                              ; preds = %86, %91, %95
  %101 = phi %"struct.WTF::KeyValuePair.472"* [ %76, %95 ], [ %77, %86 ], [ %76, %91 ]
  %102 = icmp eq i64 %74, 0
  %103 = select i1 %102, i64 %72, i64 %74
  %104 = add i64 %103, %75
  %105 = and i64 %104, %20
  br label %73

106:                                              ; preds = %81
  %107 = icmp eq %"struct.WTF::KeyValuePair.472"* %76, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %76, i64 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %110) #10
  %111 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %111) #10, !noalias !88
  %112 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %112) #10, !noalias !91
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10, !noalias !91
  %113 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %113, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10, !noalias !88
  %114 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 1
  store i32 -128, i32* %114, align 8, !alias.scope !94, !noalias !88
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10, !noalias !88
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %112) #10, !noalias !91
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %115, %"class.blink::KURL"* nonnull dereferenceable(112) %113) #10
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 0, i32 1
  %117 = load i32, i32* %114, align 8, !noalias !88
  store i32 %117, i32* %116, align 8, !alias.scope !88
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 1
  store i8* null, i8** %118, align 8, !alias.scope !88
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %113) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %111) #10, !noalias !88
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %76, i64 0, i32 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %119, %"class.blink::KURL"* nonnull dereferenceable(112) %115) #10
  %120 = getelementptr inbounds i8, i8* %109, i64 112
  %121 = bitcast i8* %120 to i32*
  %122 = load i32, i32* %116, align 8
  store i32 %122, i32* %121, align 8
  %123 = getelementptr inbounds i8, i8* %109, i64 120
  %124 = bitcast i8* %123 to i64*
  store i64 0, i64* %124, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %110) #10
  %125 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, 2147483647
  %128 = and i32 %127, 2147483647
  %129 = and i32 %126, -2147483648
  %130 = or i32 %128, %129
  store i32 %130, i32* %125, align 8
  br label %131

131:                                              ; preds = %106, %108
  %132 = phi %"struct.WTF::KeyValuePair.472"* [ %76, %108 ], [ %77, %106 ]
  %133 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 0
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %132, i64 0, i32 0, i32 0
  %135 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %134, %"class.blink::KURL"* dereferenceable(112) %133) #10
  %136 = load i32, i32* %31, align 4
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %132, i64 0, i32 0, i32 1
  store i32 %136, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %132, i64 0, i32 1
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.474"* %2, i64 0, i32 0, i32 0, i32 0
  %140 = bitcast %"class.std::__1::unique_ptr.474"* %2 to i64*
  %141 = load i64, i64* %140, align 8
  store %"class.blink::WorkletModuleResponsesMap::Entry"* null, %"class.blink::WorkletModuleResponsesMap::Entry"** %139, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.474"* %138, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %142, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.474"* %138 to i64*
  store i64 %141, i64* %144, align 8
  %145 = icmp eq %"class.blink::WorkletModuleResponsesMap::Entry"* %143, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %143, i64 0, i32 3
  call void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSC_IS9_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.447"* %147) #10
  %148 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %152) #10
  br label %153

153:                                              ; preds = %151, %146
  %154 = bitcast %"class.blink::WorkletModuleResponsesMap::Entry"* %143 to i8*
  call void @free(i8* %154) #10
  br label %155

155:                                              ; preds = %131, %153
  %156 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = add i32 %160, %158
  %162 = shl i32 %161, 1
  %163 = load i32, i32* %17, align 8
  %164 = icmp ult i32 %162, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %155
  %166 = call %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.469"* %0, %"struct.WTF::KeyValuePair.472"* %132)
  br label %167

167:                                              ; preds = %95, %155, %165
  %168 = phi i8 [ 1, %155 ], [ 1, %165 ], [ 0, %95 ]
  %169 = phi %"struct.WTF::KeyValuePair.472"* [ %132, %155 ], [ %166, %165 ], [ %77, %95 ]
  %170 = insertvalue { %"struct.WTF::KeyValuePair.472"*, i8 } undef, %"struct.WTF::KeyValuePair.472"* %169, 0
  %171 = insertvalue { %"struct.WTF::KeyValuePair.472"*, i8 } %170, i8 %168, 1
  ret { %"struct.WTF::KeyValuePair.472"*, i8 } %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.469"*, %"struct.WTF::KeyValuePair.472"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"struct.std::__1::pair.473", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.551", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = mul i32 %14, 6
  %16 = shl i32 %10, 1
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %34, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ugt i32 %16, %10
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %18
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %7) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %34

34:                                               ; preds = %12, %2, %33
  %35 = phi i32 [ %16, %33 ], [ 8, %2 ], [ %10, %12 ]
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 7
  %38 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([245 x i8], [245 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEEEEPKcv, i64 0, i64 0)) #10
  %39 = bitcast i8* %38 to %"struct.WTF::KeyValuePair.472"*
  %40 = icmp eq i32 %35, 0
  br i1 %40, label %63, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %5, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.551", %"struct.WTF::KeyValuePair.551"* %6, i64 0, i32 1
  br label %50

50:                                               ; preds = %41, %50
  %51 = phi i64 [ %61, %50 ], [ 0, %41 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %39, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %52, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %42) #10
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %43) #10, !noalias !97
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #10, !noalias !100
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10, !noalias !100
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %45, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10, !noalias !97
  store i32 -128, i32* %46, align 8, !alias.scope !103, !noalias !97
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10, !noalias !97
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #10, !noalias !100
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %47, %"class.blink::KURL"* nonnull dereferenceable(112) %45) #10
  %54 = load i32, i32* %46, align 8, !noalias !97
  store i32 %54, i32* %48, align 8, !alias.scope !97
  store i8* null, i8** %49, align 8, !alias.scope !97
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %43) #10, !noalias !97
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %52, i64 0, i32 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %55, %"class.blink::KURL"* nonnull dereferenceable(112) %47) #10
  %56 = getelementptr inbounds i8, i8* %53, i64 112
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %48, align 8
  store i32 %58, i32* %57, align 8
  %59 = getelementptr inbounds i8, i8* %53, i64 120
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %42) #10
  %61 = add nuw nsw i64 %51, 1
  %62 = icmp eq i64 %61, %36
  br i1 %62, label %63, label %50

63:                                               ; preds = %50, %34
  %64 = call %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable.469"* %0, %"struct.WTF::KeyValuePair.472"* %39, i32 %35, %"struct.WTF::KeyValuePair.472"* %1) #10
  ret %"struct.WTF::KeyValuePair.472"* %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable.469"*, %"struct.WTF::KeyValuePair.472"*, i32, %"struct.WTF::KeyValuePair.472"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.469", align 8
  %6 = bitcast %"class.WTF::HashTable.469"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.469"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.472"* %1, %"struct.WTF::KeyValuePair.472"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 0
  br i1 %14, label %16, label %36

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.472"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.469"* %5 to i64*
  br label %22

19:                                               ; preds = %51
  %20 = bitcast %"class.WTF::HashTable.469"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.WTF::KeyValuePair.472"* [ null, %16 ], [ %52, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %53, %19 ]
  %27 = bitcast %"class.WTF::HashTable.469"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = inttoptr i64 %28 to %"struct.WTF::KeyValuePair.472"*
  call void @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSE_j(%"struct.WTF::KeyValuePair.472"* nonnull %31, i32 %26) #10
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %32

32:                                               ; preds = %22, %30
  %33 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, -2147483648
  store i32 %35, i32* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.472"* %25

36:                                               ; preds = %4, %51
  %37 = phi %"struct.WTF::KeyValuePair.472"* [ %52, %51 ], [ null, %4 ]
  %38 = phi i32 [ %53, %51 ], [ 0, %4 ]
  %39 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %15, align 8
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %39, i64 %40, i32 0
  %42 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.473"* dereferenceable(120) %41) #10
  br i1 %42, label %51, label %43

43:                                               ; preds = %36
  %44 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %15, align 8
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %44, i64 %40
  %46 = call %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8ReinsertEOSE_(%"class.WTF::HashTable.469"* nonnull %5, %"struct.WTF::KeyValuePair.472"* dereferenceable(128) %45)
  %47 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %15, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %47, i64 %40
  %49 = icmp eq %"struct.WTF::KeyValuePair.472"* %48, %3
  %50 = select i1 %49, %"struct.WTF::KeyValuePair.472"* %46, %"struct.WTF::KeyValuePair.472"* %37
  br label %51

51:                                               ; preds = %36, %43
  %52 = phi %"struct.WTF::KeyValuePair.472"* [ %37, %36 ], [ %50, %43 ]
  %53 = add i32 %38, 1
  %54 = load i32, i32* %12, align 8
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %19, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.472"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8ReinsertEOSE_(%"class.WTF::HashTable.469"*, %"struct.WTF::KeyValuePair.472"* dereferenceable(128)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.472"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISH_SM_SN_EES6_EENS2_IPSE_bEERKT0_(%"class.WTF::HashTable.469"* %0, %"struct.std::__1::pair.473"* dereferenceable(120) %3) #10
  %5 = extractvalue { %"struct.WTF::KeyValuePair.472"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %6, align 8
  store %"class.blink::WorkletModuleResponsesMap::Entry"* null, %"class.blink::WorkletModuleResponsesMap::Entry"** %6, align 8
  %8 = icmp eq %"class.blink::WorkletModuleResponsesMap::Entry"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %7, i64 0, i32 3
  tail call void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSC_IS9_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.447"* %10) #10
  %11 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %15) #10
  br label %16

16:                                               ; preds = %14, %9
  %17 = bitcast %"class.blink::WorkletModuleResponsesMap::Entry"* %7 to i8*
  tail call void @free(i8* %17) #10
  br label %18

18:                                               ; preds = %2, %16
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %5, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %19) #10
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %19, %"class.blink::KURL"* dereferenceable(112) %20) #10
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %1, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %5, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.474"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr.474"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.blink::WorkletModuleResponsesMap::Entry"* null, %"class.blink::WorkletModuleResponsesMap::Entry"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.474"* %24 to i64*
  store i64 %28, i64* %29, align 8
  ret %"struct.WTF::KeyValuePair.472"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.473"* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.std::__1::pair.473", align 8
  %4 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #10, !noalias !106
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #10, !noalias !106
  %6 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %3, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #10
  %7 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %3, i64 0, i32 1
  store i32 -128, i32* %7, align 8, !alias.scope !109
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #10, !noalias !106
  %8 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %0, i64 0, i32 0
  %9 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %8, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #10
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #10
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* %7, align 8
  %15 = icmp eq i32 %13, %14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #10
  br i1 %15, label %21, label %16

16:                                               ; preds = %10, %11
  %17 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %0, i64 0, i32 0, i32 4
  %18 = bitcast %"class.WTF::String"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, inttoptr (i64 -1 to i8*)
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi i1 [ true, %11 ], [ %20, %16 ]
  ret i1 %22
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.472"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISH_SM_SN_EES6_EENS2_IPSE_bEERKT0_(%"class.WTF::HashTable.469"*, %"struct.std::__1::pair.473"* dereferenceable(120)) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"struct.std::__1::pair.473", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.472"*, %"struct.WTF::KeyValuePair.472"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.469", %"class.WTF::HashTable.469"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #10
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i32 [ %18, %17 ], [ %15, %2 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 15
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 10
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, 9
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 11
  %32 = xor i32 %31, -1
  %33 = add i32 %30, %32
  %34 = lshr i32 %33, 16
  %35 = xor i32 %34, %33
  %36 = zext i32 %20 to i64
  %37 = mul i64 %36, 5146158508761418231
  %38 = zext i32 %35 to i64
  %39 = mul i64 %38, -682818954288075998
  %40 = add i64 %39, %37
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = and i32 %9, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %4, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.473", %"struct.std::__1::pair.473"* %4, i64 0, i32 1
  %49 = xor i32 %42, -1
  %50 = lshr i64 %40, 55
  %51 = trunc i64 %50 to i32
  %52 = add i32 %51, %49
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %93, %19
  %64 = phi %"struct.WTF::KeyValuePair.472"* [ null, %19 ], [ %94, %93 ]
  %65 = phi i64 [ 0, %19 ], [ %96, %93 ]
  %66 = phi i64 [ %44, %19 ], [ %98, %93 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %66
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %45) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %46) #10, !noalias !112
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #10, !noalias !112
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %47, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #10
  store i32 -128, i32* %48, align 8, !alias.scope !115
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %46) #10, !noalias !112
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %67, i64 0, i32 0, i32 0
  %69 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %68, %"class.blink::KURL"* nonnull dereferenceable(112) %47) #10
  br i1 %69, label %71, label %70

70:                                               ; preds = %63
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %45) #10
  br label %79

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %66, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = load i32, i32* %48, align 8
  %75 = icmp eq i32 %73, %74
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %45) #10
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = icmp eq %"struct.WTF::KeyValuePair.472"* %64, null
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.472"* %67, %"struct.WTF::KeyValuePair.472"* %64
  br label %99

79:                                               ; preds = %70, %71
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %66, i32 0, i32 0, i32 4
  %81 = bitcast %"class.WTF::String"* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %93, label %84

84:                                               ; preds = %79
  %85 = bitcast i8* %82 to %"class.WTF::StringImpl"*
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %87 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"* %86) #10
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %6, i64 %66, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = load i32, i32* %21, align 8
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %79, %84, %88
  %94 = phi %"struct.WTF::KeyValuePair.472"* [ %64, %84 ], [ %64, %88 ], [ %67, %79 ]
  %95 = icmp eq i64 %65, 0
  %96 = select i1 %95, i64 %62, i64 %65
  %97 = add i64 %96, %66
  %98 = and i64 %97, %10
  br label %63

99:                                               ; preds = %88, %76
  %100 = phi %"struct.WTF::KeyValuePair.472"* [ %78, %76 ], [ %67, %88 ]
  %101 = phi i8 [ 0, %76 ], [ 1, %88 ]
  %102 = insertvalue { %"struct.WTF::KeyValuePair.472"*, i8 } undef, %"struct.WTF::KeyValuePair.472"* %100, 0
  %103 = insertvalue { %"struct.WTF::KeyValuePair.472"*, i8 } %102, i8 %101, 1
  ret { %"struct.WTF::KeyValuePair.472"*, i8 } %103
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS1_10unique_ptrINS3_25WorkletModuleResponsesMap5EntryENS1_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSE_j(%"struct.WTF::KeyValuePair.472"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %29, %2
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  ret void

8:                                                ; preds = %29, %4
  %9 = phi i64 [ 0, %4 ], [ %30, %29 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %0, i64 %9, i32 0, i32 0, i32 4
  %11 = bitcast %"class.WTF::String"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %29, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::WorkletModuleResponsesMap::Entry"*, %"class.blink::WorkletModuleResponsesMap::Entry"** %15, align 8
  store %"class.blink::WorkletModuleResponsesMap::Entry"* null, %"class.blink::WorkletModuleResponsesMap::Entry"** %15, align 8
  %17 = icmp eq %"class.blink::WorkletModuleResponsesMap::Entry"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %16, i64 0, i32 3
  tail call void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSC_IS9_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.447"* %19) #10
  %20 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap::Entry", %"class.blink::WorkletModuleResponsesMap::Entry"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %24) #10
  br label %25

25:                                               ; preds = %23, %18
  %26 = bitcast %"class.blink::WorkletModuleResponsesMap::Entry"* %16 to i8*
  tail call void @free(i8* %26) #10
  br label %27

27:                                               ; preds = %14, %25
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.472", %"struct.WTF::KeyValuePair.472"* %0, i64 %9, i32 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %28) #10
  br label %29

29:                                               ; preds = %8, %27
  %30 = add nuw nsw i64 %9, 1
  %31 = icmp eq i64 %30, %5
  br i1 %31, label %6, label %8
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEEE4CopyERKS5_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEEE4CopyERKS5_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_21CrossThreadPersistentIS5_EES6_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_21CrossThreadPersistentIS5_EES6_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJNS1_21CrossThreadPersistentIS3_EES4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJNS1_21CrossThreadPersistentIS3_EES4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEEE4CopyERKS5_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19ModuleScriptFetcher6ClientEEEE4CopyERKS5_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_21CrossThreadPersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_21CrossThreadPersistentIS5_EEEEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_21CrossThreadPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_21CrossThreadPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink22WrapPersistentInternalINS_19ModuleScriptFetcher6ClientEEENS_10PersistentIT_EEPS4_: argument 0"}
!34 = distinct !{!34, !"_ZN5blink22WrapPersistentInternalINS_19ModuleScriptFetcher6ClientEEENS_10PersistentIT_EEPS4_"}
!35 = !{!36, !38, !40}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!40 = distinct !{!40, !41, !"_ZN3WTF4BindIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF4BindIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__19make_pairIRKN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__19make_pairIRKN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink22WrapPersistentInternalINS_19ModuleScriptFetcher6ClientEEENS_10PersistentIT_EEPS4_: argument 0"}
!47 = distinct !{!47, !"_ZN5blink22WrapPersistentInternalINS_19ModuleScriptFetcher6ClientEEENS_10PersistentIT_EEPS4_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5blink25WorkletModuleResponsesMap5Entry9GetParamsEv: argument 0"}
!50 = distinct !{!50, !"_ZNK5blink25WorkletModuleResponsesMap5Entry9GetParamsEv"}
!51 = !{!52, !54, !56}
!52 = distinct !{!52, !53, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_10PersistentIS5_EES6_EEEDcOT0_DpOT1_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvRKNS3_26ModuleScriptCreationParamsEEJNS3_10PersistentIS5_EES6_EEEDcOT0_DpOT1_"}
!54 = distinct !{!54, !55, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJNS1_10PersistentIS3_EES4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!55 = distinct !{!55, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJNS1_10PersistentIS3_EES4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!56 = distinct !{!56, !57, !"_ZN3WTF4BindIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJNS1_10PersistentIS3_EES4_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZN3WTF4BindIMN5blink19ModuleScriptFetcher6ClientEFvRKNS1_26ModuleScriptCreationParamsEEJNS1_10PersistentIS3_EES4_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN5blink22WrapPersistentInternalINS_19ModuleScriptFetcher6ClientEEENS_10PersistentIT_EEPS4_: argument 0"}
!60 = distinct !{!60, !"_ZN5blink22WrapPersistentInternalINS_19ModuleScriptFetcher6ClientEEENS_10PersistentIT_EEPS4_"}
!61 = !{!62, !64, !66}
!62 = distinct !{!62, !63, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!63 = distinct !{!63, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19ModuleScriptFetcher6ClientEFvvEJNS3_10PersistentIS5_EEEEEDcOT0_DpOT1_"}
!64 = distinct !{!64, !65, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8BindOnceIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!66 = distinct !{!66, !67, !"_ZN3WTF4BindIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!67 = distinct !{!67, !"_ZN3WTF4BindIMN5blink19ModuleScriptFetcher6ClientEFvvEJNS1_10PersistentIS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__19make_pairIN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__19make_pairIN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__19make_pairIRKN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__19make_pairIRKN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!74 = !{i32 24, i32 33}
!75 = !{!"branch_weights", i32 2000, i32 1}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!78 = distinct !{!78, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!79 = !{!80, !77}
!80 = distinct !{!80, !81, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!81 = distinct !{!81, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!84 = distinct !{!84, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!85 = !{!86, !83}
!86 = distinct !{!86, !87, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!87 = distinct !{!87, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISB_EEEEEEE10EmptyValueEv: argument 0"}
!90 = distinct !{!90, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISB_EEEEEEE10EmptyValueEv"}
!91 = !{!92, !89}
!92 = distinct !{!92, !93, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!93 = distinct !{!93, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!94 = !{!95, !92}
!95 = distinct !{!95, !96, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!96 = distinct !{!96, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISB_EEEEEEE10EmptyValueEv: argument 0"}
!99 = distinct !{!99, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS2_10unique_ptrINS4_25WorkletModuleResponsesMap5EntryENS2_14default_deleteISB_EEEEEEE10EmptyValueEv"}
!100 = !{!101, !98}
!101 = distinct !{!101, !102, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!102 = distinct !{!102, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!103 = !{!104, !101}
!104 = distinct !{!104, !105, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!108 = distinct !{!108, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!109 = !{!110, !107}
!110 = distinct !{!110, !111, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!114 = distinct !{!114, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!115 = !{!116, !113}
!116 = distinct !{!116, !117, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!117 = distinct !{!117, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
