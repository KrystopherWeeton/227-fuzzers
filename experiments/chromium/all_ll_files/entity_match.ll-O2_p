; ModuleID = '../../chrome/browser/ui/commander/entity_match.cc'
source_filename = "../../chrome/browser/ui/commander/entity_match.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.commander::GroupMatch" = type { %"class.tab_groups::TabGroupId", %"class.std::__1::basic_string.220", %"class.std::__1::vector.229", double }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.223 }
%union.anon.223 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.231" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.gfx::Range"* }
%"struct.commander::WindowMatch" = type { %class.Browser*, %"class.std::__1::basic_string.220", %"class.std::__1::vector.229", double }
%class.Browser = type { %class.TabStripModelObserver, %"class.content::WebContentsDelegate", %class.ChromeWebModalDialogManagerDelegate, %class.BookmarkTabHelperObserver, %"class.zoom::ZoomObserver", %"class.content::PageNavigator", %class.ThemeServiceObserver, %"class.translate::ContentTranslateDriver::TranslationObserver", %"class.ui::SelectFileDialog::Listener", %class.PrefChangeRegistrar, %"struct.Browser::CreateParams", i32, %class.Profile*, %"class.std::__1::unique_ptr", %class.BrowserWindow*, %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::basic_string", i8, i8, %class.SessionID, %"class.std::__1::unique_ptr.99", %"class.std::__1::map.105", i32, %"class.gfx::Rect", i32, %"class.std::__1::basic_string", i8, i8, %"class.base::TimeTicks", %class.UnloadController, %"class.std::__1::unique_ptr.126", %class.scoped_refptr.132, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", i32, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", i8, %"class.std::__1::basic_string", %class.SigninViewController, %"class.std::__1::unique_ptr.207", %"class.base::OnceCallback", %"class.std::__1::unique_ptr.213", %"class.base::ElapsedTimer", %"class.base::WeakPtrFactory.219", %"class.base::WeakPtrFactory.219" }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.content::WebContentsDelegate" = type { i32 (...)**, %"class.std::__1::set.4" }
%"class.std::__1::set.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.ChromeWebModalDialogManagerDelegate = type { %"class.web_modal::WebContentsModalDialogManagerDelegate" }
%"class.web_modal::WebContentsModalDialogManagerDelegate" = type { i32 (...)** }
%class.BookmarkTabHelperObserver = type { i32 (...)** }
%"class.zoom::ZoomObserver" = type { i32 (...)** }
%"class.content::PageNavigator" = type { i32 (...)** }
%class.ThemeServiceObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"class.translate::ContentTranslateDriver::TranslationObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::SelectFileDialog::Listener" = type { i32 (...)** }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.20" }
%"class.std::__1::__tree.20" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.PrefService = type opaque
%"struct.Browser::CreateParams" = type <{ i32, [4 x i8], %class.Profile*, i8, [3 x i8], %"class.gfx::Rect", [4 x i8], %"class.std::__1::basic_string", i8, [3 x i8], i32, i8, i8, i8, i8, [4 x i8], %class.BrowserWindow*, %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, [7 x i8] }>
%class.Profile = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.ScopedProfileKeepAlive* }
%class.ScopedProfileKeepAlive = type opaque
%class.BrowserWindow = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.TabStripModelDelegate* }
%class.TabStripModelDelegate = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.TabStripModel* }
%class.TabStripModel = type { %class.TabGroupController, %"class.std::__1::vector", %"class.std::__1::unique_ptr.52", %class.TabStripModelDelegate*, i8, [7 x i8], %"class.base::ObserverList", %class.Profile*, i8, %"class.std::__1::unique_ptr.76", %"class.ui::ListSelectionModel", i8, %class.TabSwitchEventLatencyRecorder, %"class.base::RepeatingTimer", %"class.base::TimeTicks", i64, i64, %"class.base::WeakPtrFactory.95" }
%class.TabGroupController = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.TabStripModel::WebContentsData"* }
%"class.TabStripModel::WebContentsData" = type opaque
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::unique_ptr.46"* }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.TabGroupModel* }
%class.TabGroupModel = type { %"class.std::__1::map.55", %class.TabGroupController* }
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.69", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.TabStripModelOrderController* }
%class.TabStripModelOrderController = type { %class.TabStripModelObserver, %class.TabStripModel* }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.82" }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { i32*, i32*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i32* }
%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.89 }
%union.anon.89 = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.90, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.92" }
%class.scoped_refptr.90 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.91" }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.92" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.94", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.95" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.SessionID = type { i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.LocationBarModel* }
%class.LocationBarModel = type opaque
%"class.std::__1::map.105" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.UnloadController = type { %"class.WebContentsCollection::Observer", %class.TabStripModelObserver, %class.Browser*, %class.WebContentsCollection, %"class.std::__1::set.4", %"class.std::__1::set.4", i8, %"class.base::RepeatingCallback.124", %"class.base::WeakPtrFactory.125" }
%"class.WebContentsCollection::Observer" = type { i32 (...)** }
%class.WebContentsCollection = type { %"class.WebContentsCollection::Observer"*, %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.116" }
%"class.base::internal::flat_tree.116" = type { %"class.std::__1::vector.117" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::pair"* }
%"class.base::RepeatingCallback.124" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.125" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.FindBarController* }
%class.FindBarController = type opaque
%class.scoped_refptr.132 = type { %"class.ui::SelectFileDialog"* }
%"class.ui::SelectFileDialog" = type { %"class.ui::BaseShellDialog", %"class.base::RefCountedThreadSafe.133", %"class.ui::SelectFileDialog::Listener"*, %"class.std::__1::unique_ptr.134" }
%"class.ui::BaseShellDialog" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe.133" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.ui::SelectFilePolicy"* }
%"class.ui::SelectFilePolicy" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.BrowserContentSettingBubbleModelDelegate* }
%class.BrowserContentSettingBubbleModelDelegate = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.BrowserLocationBarModelDelegate* }
%class.BrowserLocationBarModelDelegate = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %class.BrowserLiveTabContext* }
%class.BrowserLiveTabContext = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %class.BrowserSyncedWindowDelegate* }
%class.BrowserSyncedWindowDelegate = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.BrowserInstantController* }
%class.BrowserInstantController = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.web_app::AppBrowserController"* }
%"class.web_app::AppBrowserController" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.ExclusiveAccessManager* }
%class.ExclusiveAccessManager = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.extensions::BrowserExtensionWindowController"* }
%"class.extensions::BrowserExtensionWindowController" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.chrome::BrowserCommandController"* }
%"class.chrome::BrowserCommandController" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SigninViewController = type { %"class.SigninViewControllerDelegate::Observer", %class.Browser*, %class.SigninViewControllerDelegate*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.206" }
%"class.SigninViewControllerDelegate::Observer" = type { %"class.base::CheckedObserver" }
%class.SigninViewControllerDelegate = type { i32 (...)**, %"class.base::ObserverList.194" }
%"class.base::ObserverList.194" = type <{ %"class.std::__1::vector.195", %"class.base::LinkedList.203", i64, i32, [4 x i8] }>
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.198" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.197 }
%class.scoped_refptr.197 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.203" = type { %"class.base::LinkNode.204" }
%"class.base::LinkNode.204" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ScopedObservation" = type { %"class.SigninViewControllerDelegate::Observer"*, %class.SigninViewControllerDelegate* }
%"class.base::WeakPtrFactory.206" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %class.ScopedKeepAlive* }
%class.ScopedKeepAlive = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.extensions::ExtensionBrowserWindowHelper"* }
%"class.extensions::ExtensionBrowserWindowHelper" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::WeakPtrFactory.219" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.commander::TabMatch" = type { i32, i32, %"class.std::__1::basic_string.220", %"class.std::__1::vector.229", double }
%"struct.commander::TabSearchOptions" = type { i8, i8, i8, i8, %"class.absl::optional.247", %"class.absl::optional.247" }
%"class.absl::optional.247" = type { %"class.absl::optional_internal::optional_data.248" }
%"class.absl::optional_internal::optional_data.248" = type { %"class.absl::optional_internal::optional_data_base.249" }
%"class.absl::optional_internal::optional_data_base.249" = type { %"class.absl::optional_internal::optional_data_dtor_base.250" }
%"class.absl::optional_internal::optional_data_dtor_base.250" = type { i8, %union.anon.251 }
%union.anon.251 = type { %"class.tab_groups::TabGroupId" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.224 }
%struct.anon.224 = type { %"struct.std::__1::__padding.225", i8 }
%"struct.std::__1::__padding.225" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.commander::CommandItem" = type { i32 (...)**, %"class.std::__1::basic_string.220", i32, %"class.std::__1::basic_string.220", %"class.absl::variant", double, %"class.std::__1::vector.229" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.240" }
%"union.absl::variant_internal::DestructibleUnionImpl.240" = type { %"struct.std::__1::pair.241" }
%"struct.std::__1::pair.241" = type { %"class.std::__1::basic_string.220", %"class.base::RepeatingCallback.242" }
%"class.base::RepeatingCallback.242" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.commander::TabMatch"* }
%"class.commander::FuzzyFinder" = type { %"class.std::__1::basic_string.220", %"class.std::__1::vector.82", %"class.std::__1::vector.82", %"class.std::__1::vector.259", %"class.std::__1::vector.264" }
%"class.std::__1::vector.259" = type { i64*, i64, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { i64*, i64*, %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { i64* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.268", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.268" = type { %"class.std::__1::__tree.269" }
%"class.std::__1::__tree.269" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.commander::WindowMatch"* }
%class.BrowserList = type { %"class.std::__1::vector.286", %"class.std::__1::vector.286", %"class.base::internal::flat_tree.293" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %class.Browser**, %class.Browser**, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %class.Browser** }
%"class.base::internal::flat_tree.293" = type { %"class.std::__1::vector.286" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"*, %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.commander::GroupMatch"* }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.tab_groups::TabGroupId"* }
%class.TabGroup = type <{ %class.TabGroupController*, %"class.tab_groups::TabGroupId", %"class.std::__1::unique_ptr.309", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.tab_groups::TabGroupVisualData"* }
%"class.tab_groups::TabGroupVisualData" = type <{ %"class.std::__1::basic_string.220", i32, i8, [3 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN9commander8TabMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN9commander11WindowMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN9commander10GroupMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@__const._ZN9commander19GroupsMatchingInputEPK7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEN4absl8optionalIN10tab_groups10TabGroupIdEEE.match.1 = private unnamed_addr constant %"struct.commander::GroupMatch" { %"class.tab_groups::TabGroupId" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.std::__1::basic_string.220" { %"class.std::__1::__compressed_pair.221" { %"struct.std::__1::__compressed_pair_elem.222" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.223 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector.229" { %"class.std::__1::__vector_base.230" { %"class.gfx::Range"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Range"*), %"class.gfx::Range"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Range"*), %"class.std::__1::__compressed_pair.231" { %"struct.std::__1::__compressed_pair_elem.232" { %"class.gfx::Range"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Range"*) } } } }, double 0xFFFFFFFFFFFFFFFF }, align 8

@_ZN9commander11WindowMatchC1EP7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEd = hidden unnamed_addr alias void (%"struct.commander::WindowMatch"*, %class.Browser*, %"class.std::__1::basic_string.220"*, double), void (%"struct.commander::WindowMatch"*, %class.Browser*, %"class.std::__1::basic_string.220"*, double)* @_ZN9commander11WindowMatchC2EP7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEd
@_ZN9commander11WindowMatchD1Ev = hidden unnamed_addr alias void (%"struct.commander::WindowMatch"*), void (%"struct.commander::WindowMatch"*)* @_ZN9commander11WindowMatchD2Ev
@_ZN9commander11WindowMatchC1EOS0_ = hidden unnamed_addr alias void (%"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"*), void (%"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"*)* @_ZN9commander11WindowMatchC2EOS0_
@_ZN9commander10GroupMatchC1EN10tab_groups10TabGroupIdERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEd = hidden unnamed_addr alias void (%"struct.commander::GroupMatch"*, %"class.tab_groups::TabGroupId"*, %"class.std::__1::basic_string.220"*, double), void (%"struct.commander::GroupMatch"*, %"class.tab_groups::TabGroupId"*, %"class.std::__1::basic_string.220"*, double)* @_ZN9commander10GroupMatchC2EN10tab_groups10TabGroupIdERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEd
@_ZN9commander10GroupMatchD1Ev = hidden unnamed_addr alias void (%"struct.commander::GroupMatch"*), void (%"struct.commander::GroupMatch"*)* @_ZN9commander10GroupMatchD2Ev
@_ZN9commander10GroupMatchC1EOS0_ = hidden unnamed_addr alias void (%"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"*), void (%"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"*)* @_ZN9commander10GroupMatchC2EOS0_
@_ZN9commander8TabMatchC1EiiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEd = hidden unnamed_addr alias void (%"struct.commander::TabMatch"*, i32, i32, %"class.std::__1::basic_string.220"*, double), void (%"struct.commander::TabMatch"*, i32, i32, %"class.std::__1::basic_string.220"*, double)* @_ZN9commander8TabMatchC2EiiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEd
@_ZN9commander8TabMatchD1Ev = hidden unnamed_addr alias void (%"struct.commander::TabMatch"*), void (%"struct.commander::TabMatch"*)* @_ZN9commander8TabMatchD2Ev
@_ZN9commander8TabMatchC1EOS0_ = hidden unnamed_addr alias void (%"struct.commander::TabMatch"*, %"struct.commander::TabMatch"*), void (%"struct.commander::TabMatch"*, %"struct.commander::TabMatch"*)* @_ZN9commander8TabMatchC2EOS0_
@_ZN9commander16TabSearchOptionsC1Ev = hidden unnamed_addr alias void (%"struct.commander::TabSearchOptions"*), void (%"struct.commander::TabSearchOptions"*)* @_ZN9commander16TabSearchOptionsC2Ev
@_ZN9commander16TabSearchOptionsD1Ev = hidden unnamed_addr alias void (%"struct.commander::TabSearchOptions"*), void (%"struct.commander::TabSearchOptions"*)* @_ZN9commander16TabSearchOptionsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander11WindowMatchC2EP7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEd(%"struct.commander::WindowMatch"*, %class.Browser*, %"class.std::__1::basic_string.220"* nocapture readonly dereferenceable(24), double) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 0
  store %class.Browser* %1, %class.Browser** %5, align 8
  %6 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.220"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string.220"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #11
  br label %189

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.220"* %6 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.220"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.220"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #12
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #12
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.220"* %6 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !2
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !2
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !5, !noalias !2
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !2
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !2
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !2
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !7

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !2
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !5, !noalias !2
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !5, !noalias !2
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !9

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !11

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !12

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2
  %191 = bitcast %"class.std::__1::vector.229"* %190 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #11
  %192 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 3
  store double %3, double* %192, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander11WindowMatchD2Ev(%"struct.commander::WindowMatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.gfx::Range"*, %"class.gfx::Range"** %2, align 8
  %4 = icmp eq %"class.gfx::Range"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Range"* %3 to i64
  %7 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.gfx::Range"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Range"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string.220"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.220"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander11WindowMatchC2EOS0_(%"struct.commander::WindowMatch"* nocapture, %"struct.commander::WindowMatch"* nocapture dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.commander::WindowMatch"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"struct.commander::WindowMatch"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %9 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2
  %12 = bitcast %"class.std::__1::vector.229"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = bitcast %"class.std::__1::vector.229"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.229"* %10 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast %"class.gfx::Range"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.gfx::Range"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.gfx::Range"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.std::__1::vector.229"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #11
  %27 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 3
  %29 = bitcast double* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast double* %27 to i64*
  store i64 %30, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.commander::WindowMatch"* @_ZN9commander11WindowMatchaSEOS0_(%"struct.commander::WindowMatch"* returned, %"struct.commander::WindowMatch"* nocapture dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.commander::WindowMatch"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"struct.commander::WindowMatch"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string.220"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.220"* %6 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %2, %12
  %16 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #11
  %18 = bitcast %"class.std::__1::basic_string.220"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  store i8 0, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string.220"* %7 to i16*
  store i16 0, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.gfx::Range"*, %"class.gfx::Range"** %23, align 8
  %25 = icmp eq %"class.gfx::Range"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %15
  %27 = ptrtoint %"class.gfx::Range"* %24 to i64
  %28 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %29 = bitcast %"class.gfx::Range"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.gfx::Range"* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  %31 = bitcast %"class.std::__1::vector.229"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  br label %32

32:                                               ; preds = %15, %26
  %33 = bitcast %"class.std::__1::vector.229"* %22 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.229"* %21 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast %"class.gfx::Range"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %40 = bitcast %"class.gfx::Range"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.gfx::Range"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.gfx::Range"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.229"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 3
  %48 = bitcast double* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 3
  %51 = bitcast double* %50 to i64*
  store i64 %49, i64* %51, align 8
  ret %"struct.commander::WindowMatch"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.commander::CommandItem"* @_ZNK9commander11WindowMatch13ToCommandItemEv(%"struct.commander::WindowMatch"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %0, i64 0, i32 2
  %5 = tail call i8* @_Znwm(i64 136) #13
  %6 = bitcast i8* %5 to %"struct.commander::CommandItem"*
  %7 = load double, double* %3, align 8
  tail call void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"* nonnull %6, %"class.std::__1::basic_string.220"* dereferenceable(24) %2, double %7, %"class.std::__1::vector.229"* dereferenceable(24) %4) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = bitcast i8* %8 to i32*
  store i32 3, i32* %9, align 8
  ret %"struct.commander::CommandItem"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander10GroupMatchC2EN10tab_groups10TabGroupIdERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEd(%"struct.commander::GroupMatch"*, %"class.tab_groups::TabGroupId"*, %"class.std::__1::basic_string.220"* nocapture readonly dereferenceable(24), double) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 0
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %5, %"class.tab_groups::TabGroupId"* dereferenceable(16) %1) #11
  %6 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.220"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string.220"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #11
  br label %189

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.220"* %6 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.220"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.220"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #12
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #12
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.220"* %6 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !13
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !13
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !16, !noalias !13
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !16, !noalias !13
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !13
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !13
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !16, !noalias !13
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !16, !noalias !13
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !13
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !13
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !16, !noalias !13
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !16, !noalias !13
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !13
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !16, !noalias !13
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !16, !noalias !13
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !18

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !13
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !13
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !16, !noalias !13
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !16, !noalias !13
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !19

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !20

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !21

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2
  %191 = bitcast %"class.std::__1::vector.229"* %190 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #11
  %192 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 3
  store double %3, double* %192, align 8
  ret void
}

declare void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander10GroupMatchD2Ev(%"struct.commander::GroupMatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.gfx::Range"*, %"class.gfx::Range"** %2, align 8
  %4 = icmp eq %"class.gfx::Range"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Range"* %3 to i64
  %7 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.gfx::Range"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Range"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string.220"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.220"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander10GroupMatchC2EOS0_(%"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 0
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %3, %"class.tab_groups::TabGroupId"* dereferenceable(16) %4) #11
  %5 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.220"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector.229"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = bitcast %"class.std::__1::vector.229"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.229"* %9 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.gfx::Range"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast %"class.gfx::Range"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.gfx::Range"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.gfx::Range"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector.229"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #11
  %26 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 3
  %28 = bitcast double* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast double* %26 to i64*
  store i64 %29, i64* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.commander::GroupMatch"* @_ZN9commander10GroupMatchaSEOS0_(%"struct.commander::GroupMatch"* returned, %"struct.commander::GroupMatch"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.tab_groups::TabGroupId"* @_ZN10tab_groups10TabGroupIdaSERKS0_(%"class.tab_groups::TabGroupId"* %3, %"class.tab_groups::TabGroupId"* dereferenceable(16) %4) #11
  %6 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string.220"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.220"* %6 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %2, %12
  %16 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #11
  %18 = bitcast %"class.std::__1::basic_string.220"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  store i8 0, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string.220"* %7 to i16*
  store i16 0, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.gfx::Range"*, %"class.gfx::Range"** %23, align 8
  %25 = icmp eq %"class.gfx::Range"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %15
  %27 = ptrtoint %"class.gfx::Range"* %24 to i64
  %28 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %29 = bitcast %"class.gfx::Range"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.gfx::Range"* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  %31 = bitcast %"class.std::__1::vector.229"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  br label %32

32:                                               ; preds = %15, %26
  %33 = bitcast %"class.std::__1::vector.229"* %22 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.229"* %21 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast %"class.gfx::Range"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 1
  %40 = bitcast %"class.gfx::Range"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.gfx::Range"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.gfx::Range"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.229"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 3
  %48 = bitcast double* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 3
  %51 = bitcast double* %50 to i64*
  store i64 %49, i64* %51, align 8
  ret %"struct.commander::GroupMatch"* %0
}

declare dereferenceable(16) %"class.tab_groups::TabGroupId"* @_ZN10tab_groups10TabGroupIdaSERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.commander::CommandItem"* @_ZNK9commander10GroupMatch13ToCommandItemEv(%"struct.commander::GroupMatch"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %0, i64 0, i32 2
  %5 = tail call i8* @_Znwm(i64 136) #13
  %6 = bitcast i8* %5 to %"struct.commander::CommandItem"*
  %7 = load double, double* %3, align 8
  tail call void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"* nonnull %6, %"class.std::__1::basic_string.220"* dereferenceable(24) %2, double %7, %"class.std::__1::vector.229"* dereferenceable(24) %4) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = bitcast i8* %8 to i32*
  store i32 4, i32* %9, align 8
  ret %"struct.commander::CommandItem"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander8TabMatchC2EiiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEd(%"struct.commander::TabMatch"*, i32, i32, %"class.std::__1::basic_string.220"* nocapture readonly dereferenceable(24), double) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string.220"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::basic_string.220"* %8 to i8*
  %15 = bitcast %"class.std::__1::basic_string.220"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #11
  br label %191

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string.220"* %8 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.std::__1::basic_string.220"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::basic_string.220"* %8 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #12
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #12
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #13
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.220"* %8 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %18, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %18, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !22
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !22
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !25, !noalias !22
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !25, !noalias !22
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %18, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !22
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !22
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !25, !noalias !22
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !25, !noalias !22
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %18, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !22
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !22
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !25, !noalias !22
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !25, !noalias !22
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %18, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !22
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !22
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !25, !noalias !22
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !25, !noalias !22
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !27

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %18, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !22
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !22
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !25, !noalias !22
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !25, !noalias !22
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !28

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !29

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !30

191:                                              ; preds = %156, %161, %136, %13
  %192 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3
  %193 = bitcast %"class.std::__1::vector.229"* %192 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 24, i1 false) #11
  %194 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 4
  store double %4, double* %194, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander8TabMatchD2Ev(%"struct.commander::TabMatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.gfx::Range"*, %"class.gfx::Range"** %2, align 8
  %4 = icmp eq %"class.gfx::Range"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Range"* %3 to i64
  %7 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.gfx::Range"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Range"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string.220"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.220"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander8TabMatchC2EOS0_(%"struct.commander::TabMatch"* nocapture, %"struct.commander::TabMatch"* nocapture dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.commander::TabMatch"* %1 to i64*
  %4 = bitcast %"struct.commander::TabMatch"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %9 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3
  %12 = bitcast %"class.std::__1::vector.229"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = bitcast %"class.std::__1::vector.229"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.229"* %10 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast %"class.gfx::Range"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 1
  %20 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.gfx::Range"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.gfx::Range"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.std::__1::vector.229"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #11
  %27 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 4
  %29 = bitcast double* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast double* %27 to i64*
  store i64 %30, i64* %31, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.commander::TabMatch"* @_ZN9commander8TabMatchaSEOS0_(%"struct.commander::TabMatch"* returned, %"struct.commander::TabMatch"* nocapture dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.commander::TabMatch"* %1 to i64*
  %4 = bitcast %"struct.commander::TabMatch"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string.220"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.220"* %6 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %2, %12
  %16 = bitcast %"class.std::__1::basic_string.220"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #11
  %18 = bitcast %"class.std::__1::basic_string.220"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  store i8 0, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string.220"* %7 to i16*
  store i16 0, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3
  %23 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.gfx::Range"*, %"class.gfx::Range"** %23, align 8
  %25 = icmp eq %"class.gfx::Range"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %15
  %27 = ptrtoint %"class.gfx::Range"* %24 to i64
  %28 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 1
  %29 = bitcast %"class.gfx::Range"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.gfx::Range"* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  %31 = bitcast %"class.std::__1::vector.229"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  br label %32

32:                                               ; preds = %15, %26
  %33 = bitcast %"class.std::__1::vector.229"* %22 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.229"* %21 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3, i32 0, i32 1
  %37 = bitcast %"class.gfx::Range"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 1
  %40 = bitcast %"class.gfx::Range"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.gfx::Range"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.gfx::Range"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.229"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 4
  %48 = bitcast double* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 4
  %51 = bitcast double* %50 to i64*
  store i64 %49, i64* %51, align 8
  ret %"struct.commander::TabMatch"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.commander::CommandItem"* @_ZNK9commander8TabMatch13ToCommandItemEv(%"struct.commander::TabMatch"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %0, i64 0, i32 3
  %5 = tail call i8* @_Znwm(i64 136) #13
  %6 = bitcast i8* %5 to %"struct.commander::CommandItem"*
  %7 = load double, double* %3, align 8
  tail call void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"* nonnull %6, %"class.std::__1::basic_string.220"* dereferenceable(24) %2, double %7, %"class.std::__1::vector.229"* dereferenceable(24) %4) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = bitcast i8* %8 to i32*
  store i32 2, i32* %9, align 8
  ret %"struct.commander::CommandItem"* %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9commander16TabSearchOptionsC2Ev(%"struct.commander::TabSearchOptions"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = bitcast %"struct.commander::TabSearchOptions"* %0 to i32*
  store i32 0, i32* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9commander16TabSearchOptionsD2Ev(%"struct.commander::TabSearchOptions"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander17TabsMatchingInputEPK7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKNS_16TabSearchOptionsE(%"class.std::__1::vector.252"* noalias sret, %class.Browser* nocapture readonly, %"class.std::__1::basic_string.220"* dereferenceable(24), %"struct.commander::TabSearchOptions"* dereferenceable(56)) local_unnamed_addr #0 {
  %5 = alloca %"class.commander::FuzzyFinder", align 8
  %6 = alloca %"class.std::__1::vector.229", align 8
  %7 = alloca %"class.absl::optional.247", align 8
  %8 = alloca %"class.std::__1::basic_string.220", align 8
  %9 = alloca %"struct.commander::TabMatch", align 8
  %10 = alloca %"struct.commander::TabMatch", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector.252"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = bitcast %"class.commander::FuzzyFinder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %5, %"class.std::__1::basic_string.220"* dereferenceable(24) %2) #11
  %15 = bitcast %"class.std::__1::vector.229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %class.Browser, %class.Browser* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %19 = load %class.TabStripModel*, %class.TabStripModel** %18, align 8
  %20 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %19, i64 0, i32 1
  %21 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %19, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.std::__1::unique_ptr.46"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %109

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 0
  %33 = bitcast %class.TabStripModel* %19 to %"class.content::WebContents"* (%class.TabStripModel*, i32)***
  %34 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 3
  %36 = getelementptr inbounds %"class.absl::optional.247", %"class.absl::optional.247"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %class.TabStripModel* %19 to void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)***
  %38 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.absl::optional.247", %"class.absl::optional.247"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.commander::TabSearchOptions", %"struct.commander::TabSearchOptions"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string.220"* %8 to i8*
  %44 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.std::__1::basic_string.220"* %8 to i8**
  %48 = bitcast %"class.std::__1::basic_string.220"* %8 to i16*
  %49 = bitcast %"class.std::__1::basic_string.220"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = bitcast %"class.std::__1::basic_string.220"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"struct.commander::TabMatch"* %10 to i8*
  %55 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 3, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 4
  %63 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 2
  %64 = bitcast %"class.std::__1::basic_string.220"* %63 to i8*
  %65 = bitcast %"class.std::__1::basic_string.220"* %63 to i8**
  %66 = bitcast %"class.std::__1::basic_string.220"* %63 to i16*
  %67 = bitcast %"class.std::__1::basic_string.220"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = bitcast %"class.std::__1::vector.229"* %59 to i8*
  %70 = bitcast %"struct.commander::TabMatch"* %10 to i64*
  %71 = bitcast %"class.std::__1::vector.229"* %59 to i64*
  %72 = bitcast %"class.gfx::Range"** %60 to i64*
  %73 = bitcast %"class.gfx::Range"** %61 to i64*
  %74 = bitcast double* %62 to i64*
  %75 = bitcast %"struct.commander::TabMatch"** %11 to i64*
  %76 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %10, i64 0, i32 3, i32 0, i32 0
  %77 = bitcast %"struct.commander::TabMatch"* %9 to i8*
  %78 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 3, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 3, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 4
  %86 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string.220"* %86 to i8*
  %88 = bitcast %"class.std::__1::basic_string.220"* %86 to i8**
  %89 = bitcast %"class.std::__1::basic_string.220"* %86 to i16*
  %90 = bitcast %"class.std::__1::basic_string.220"* %86 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %9, i64 0, i32 3
  %93 = bitcast %"class.std::__1::vector.229"* %92 to i8*
  %94 = bitcast %"struct.commander::TabMatch"* %9 to i64*
  %95 = bitcast %"class.std::__1::vector.229"* %92 to i64*
  %96 = bitcast %"class.gfx::Range"** %83 to i64*
  %97 = bitcast %"class.gfx::Range"** %84 to i64*
  %98 = bitcast double* %85 to i64*
  %99 = bitcast %"class.std::__1::basic_string.220"* %8 to i8*
  %100 = bitcast %"struct.commander::TabMatch"* %10 to i8*
  %101 = bitcast %"struct.commander::TabMatch"* %9 to i8*
  br label %110

102:                                              ; preds = %784
  %103 = load %"class.gfx::Range"*, %"class.gfx::Range"** %16, align 8
  %104 = icmp eq %"class.gfx::Range"* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.gfx::Range"* %103 to i8*
  %107 = ptrtoint %"class.gfx::Range"* %103 to i64
  %108 = bitcast %"class.gfx::Range"** %17 to i64*
  store i64 %107, i64* %108, align 8
  call void @_ZdlPv(i8* %106) #13
  br label %109

109:                                              ; preds = %4, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #11
  ret void

110:                                              ; preds = %30, %784
  %111 = phi i32 [ 0, %30 ], [ %786, %784 ]
  %112 = phi double [ 1.000000e+00, %30 ], [ %785, %784 ]
  %113 = call zeroext i1 @_ZNK13TabStripModel11IsTabPinnedEi(%class.TabStripModel* %19, i32 %111) #11
  %114 = load i8, i8* %31, align 1
  %115 = load i8, i8* %32, align 1
  %116 = select i1 %113, i8 %114, i8 %115
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %784

118:                                              ; preds = %110
  %119 = load %"class.content::WebContents"* (%class.TabStripModel*, i32)**, %"class.content::WebContents"* (%class.TabStripModel*, i32)*** %33, align 8
  %120 = getelementptr inbounds %"class.content::WebContents"* (%class.TabStripModel*, i32)*, %"class.content::WebContents"* (%class.TabStripModel*, i32)** %119, i64 7
  %121 = load %"class.content::WebContents"* (%class.TabStripModel*, i32)*, %"class.content::WebContents"* (%class.TabStripModel*, i32)** %120, align 8
  %122 = call %"class.content::WebContents"* %121(%class.TabStripModel* %19, i32 %111) #11
  %123 = load i8, i8* %34, align 2, !range !31
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.content::WebContents"* %122 to i1 (%"class.content::WebContents"*)***
  %127 = load i1 (%"class.content::WebContents"*)**, i1 (%"class.content::WebContents"*)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.content::WebContents"*)*, i1 (%"class.content::WebContents"*)** %127, i64 59
  %129 = load i1 (%"class.content::WebContents"*)*, i1 (%"class.content::WebContents"*)** %128, align 8
  %130 = call zeroext i1 %129(%"class.content::WebContents"* %122) #11
  br i1 %130, label %131, label %784

131:                                              ; preds = %118, %125
  %132 = load i8, i8* %35, align 1, !range !31
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %131
  %135 = bitcast %"class.content::WebContents"* %122 to i1 (%"class.content::WebContents"*)***
  %136 = load i1 (%"class.content::WebContents"*)**, i1 (%"class.content::WebContents"*)*** %135, align 8
  %137 = getelementptr inbounds i1 (%"class.content::WebContents"*)*, i1 (%"class.content::WebContents"*)** %136, i64 57
  %138 = load i1 (%"class.content::WebContents"*)*, i1 (%"class.content::WebContents"*)** %137, align 8
  %139 = call zeroext i1 %138(%"class.content::WebContents"* %122) #11
  br i1 %139, label %140, label %784

140:                                              ; preds = %131, %134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %141 = load void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)*** %37, align 8
  %142 = getelementptr inbounds void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)** %141, i64 6
  %143 = load void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.247"*, %class.TabStripModel*, i32)** %142, align 8
  call void %143(%"class.absl::optional.247"* nonnull sret %7, %class.TabStripModel* %19, i32 %111) #11
  %144 = load i8, i8* %38, align 8, !range !31
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = load i8, i8* %36, align 8, !range !31
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %782, label %149

149:                                              ; preds = %146
  %150 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"* %39, %"class.tab_groups::TabGroupId"* dereferenceable(16) %40) #11
  br i1 %150, label %782, label %151

151:                                              ; preds = %140, %149
  %152 = load i8, i8* %41, align 8, !range !31
  %153 = icmp ne i8 %152, 0
  %154 = load i8, i8* %36, align 8
  %155 = icmp ne i8 %154, 0
  %156 = and i1 %153, %155
  br i1 %156, label %157, label %159

157:                                              ; preds = %151
  %158 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"* %42, %"class.tab_groups::TabGroupId"* dereferenceable(16) %40) #11
  br i1 %158, label %782, label %159

159:                                              ; preds = %151, %157
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %160 = bitcast %"class.content::WebContents"* %122 to %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false)
  %161 = load %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)**, %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)*, %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)** %161, i64 38
  %163 = load %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)*, %"class.std::__1::basic_string.220"* (%"class.content::WebContents"*)** %162, align 8
  %164 = call dereferenceable(24) %"class.std::__1::basic_string.220"* %163(%"class.content::WebContents"* %122) #11
  %165 = bitcast %"class.std::__1::basic_string.220"* %164 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %165, i64 0, i32 1, i32 1
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %159
  %170 = bitcast %"class.std::__1::basic_string.220"* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %170, i64 24, i1 false) #11
  br label %341

171:                                              ; preds = %159
  %172 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i16*, i16** %172, align 8
  %174 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = icmp ult i64 %175, 11
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = trunc i64 %175 to i8
  store i8 %178, i8* %50, align 1
  br label %193

179:                                              ; preds = %171
  %180 = icmp ugt i64 %175, 9223372036854775791
  br i1 %180, label %181, label %183

181:                                              ; preds = %179
  %182 = bitcast %"class.std::__1::basic_string.220"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %182) #12
  unreachable

183:                                              ; preds = %179
  %184 = add nuw nsw i64 %175, 8
  %185 = and i64 %184, -8
  %186 = icmp slt i64 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %183
  call void @abort() #12
  unreachable

188:                                              ; preds = %183
  %189 = shl i64 %185, 1
  %190 = call i8* @_Znwm(i64 %189) #13
  %191 = bitcast i8* %190 to i16*
  store i8* %190, i8** %47, align 8
  %192 = or i64 %185, -9223372036854775808
  store i64 %192, i64* %46, align 8
  store i64 %175, i64* %45, align 8
  br label %193

193:                                              ; preds = %188, %177
  %194 = phi i16* [ %48, %177 ], [ %191, %188 ]
  %195 = add nuw nsw i64 %175, 1
  %196 = add i64 %175, 1
  %197 = icmp ult i64 %196, 16
  br i1 %197, label %288, label %198

198:                                              ; preds = %193
  %199 = getelementptr i16, i16* %194, i64 1
  %200 = getelementptr i16, i16* %199, i64 %175
  %201 = getelementptr i16, i16* %173, i64 1
  %202 = getelementptr i16, i16* %201, i64 %175
  %203 = icmp ult i16* %194, %202
  %204 = icmp ult i16* %173, %200
  %205 = and i1 %203, %204
  br i1 %205, label %288, label %206

206:                                              ; preds = %198
  %207 = and i64 %196, -16
  %208 = sub i64 %195, %207
  %209 = getelementptr i16, i16* %173, i64 %207
  %210 = getelementptr i16, i16* %194, i64 %207
  %211 = add i64 %207, -16
  %212 = lshr exact i64 %211, 4
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp ult i64 %211, 48
  br i1 %215, label %267, label %216

216:                                              ; preds = %206
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %264, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %265, %218 ]
  %221 = getelementptr i16, i16* %173, i64 %219
  %222 = getelementptr i16, i16* %194, i64 %219
  %223 = bitcast i16* %221 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !32
  %225 = getelementptr i16, i16* %221, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !32
  %228 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %228, align 2, !alias.scope !35, !noalias !32
  %229 = getelementptr i16, i16* %222, i64 8
  %230 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %230, align 2, !alias.scope !35, !noalias !32
  %231 = or i64 %219, 16
  %232 = getelementptr i16, i16* %173, i64 %231
  %233 = getelementptr i16, i16* %194, i64 %231
  %234 = bitcast i16* %232 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !32
  %236 = getelementptr i16, i16* %232, i64 8
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !32
  %239 = bitcast i16* %233 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %239, align 2, !alias.scope !35, !noalias !32
  %240 = getelementptr i16, i16* %233, i64 8
  %241 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %241, align 2, !alias.scope !35, !noalias !32
  %242 = or i64 %219, 32
  %243 = getelementptr i16, i16* %173, i64 %242
  %244 = getelementptr i16, i16* %194, i64 %242
  %245 = bitcast i16* %243 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !32
  %247 = getelementptr i16, i16* %243, i64 8
  %248 = bitcast i16* %247 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !32
  %250 = bitcast i16* %244 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %250, align 2, !alias.scope !35, !noalias !32
  %251 = getelementptr i16, i16* %244, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %249, <8 x i16>* %252, align 2, !alias.scope !35, !noalias !32
  %253 = or i64 %219, 48
  %254 = getelementptr i16, i16* %173, i64 %253
  %255 = getelementptr i16, i16* %194, i64 %253
  %256 = bitcast i16* %254 to <8 x i16>*
  %257 = load <8 x i16>, <8 x i16>* %256, align 2, !alias.scope !32
  %258 = getelementptr i16, i16* %254, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !32
  %261 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %261, align 2, !alias.scope !35, !noalias !32
  %262 = getelementptr i16, i16* %255, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %263, align 2, !alias.scope !35, !noalias !32
  %264 = add i64 %219, 64
  %265 = add i64 %220, -4
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %218, !llvm.loop !37

267:                                              ; preds = %218, %206
  %268 = phi i64 [ 0, %206 ], [ %264, %218 ]
  %269 = icmp eq i64 %214, 0
  br i1 %269, label %286, label %270

270:                                              ; preds = %267, %270
  %271 = phi i64 [ %283, %270 ], [ %268, %267 ]
  %272 = phi i64 [ %284, %270 ], [ %214, %267 ]
  %273 = getelementptr i16, i16* %173, i64 %271
  %274 = getelementptr i16, i16* %194, i64 %271
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !32
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !32
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !35, !noalias !32
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !35, !noalias !32
  %283 = add i64 %271, 16
  %284 = add i64 %272, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %270, !llvm.loop !38

286:                                              ; preds = %270, %267
  %287 = icmp eq i64 %196, %207
  br i1 %287, label %341, label %288

288:                                              ; preds = %286, %198, %193
  %289 = phi i64 [ %195, %198 ], [ %195, %193 ], [ %208, %286 ]
  %290 = phi i16* [ %173, %198 ], [ %173, %193 ], [ %209, %286 ]
  %291 = phi i16* [ %194, %198 ], [ %194, %193 ], [ %210, %286 ]
  %292 = add i64 %289, -1
  %293 = and i64 %289, 7
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %288, %295
  %296 = phi i64 [ %301, %295 ], [ %289, %288 ]
  %297 = phi i16* [ %303, %295 ], [ %290, %288 ]
  %298 = phi i16* [ %302, %295 ], [ %291, %288 ]
  %299 = phi i64 [ %304, %295 ], [ %293, %288 ]
  %300 = load i16, i16* %297, align 2
  store i16 %300, i16* %298, align 2
  %301 = add i64 %296, -1
  %302 = getelementptr inbounds i16, i16* %298, i64 1
  %303 = getelementptr inbounds i16, i16* %297, i64 1
  %304 = add i64 %299, -1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %295, !llvm.loop !39

306:                                              ; preds = %295, %288
  %307 = phi i64 [ %289, %288 ], [ %301, %295 ]
  %308 = phi i16* [ %290, %288 ], [ %303, %295 ]
  %309 = phi i16* [ %291, %288 ], [ %302, %295 ]
  %310 = icmp ult i64 %292, 7
  br i1 %310, label %341, label %311

311:                                              ; preds = %306, %311
  %312 = phi i64 [ %337, %311 ], [ %307, %306 ]
  %313 = phi i16* [ %339, %311 ], [ %308, %306 ]
  %314 = phi i16* [ %338, %311 ], [ %309, %306 ]
  %315 = load i16, i16* %313, align 2
  store i16 %315, i16* %314, align 2
  %316 = getelementptr inbounds i16, i16* %314, i64 1
  %317 = getelementptr inbounds i16, i16* %313, i64 1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %314, i64 2
  %320 = getelementptr inbounds i16, i16* %313, i64 2
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %314, i64 3
  %323 = getelementptr inbounds i16, i16* %313, i64 3
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %314, i64 4
  %326 = getelementptr inbounds i16, i16* %313, i64 4
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %314, i64 5
  %329 = getelementptr inbounds i16, i16* %313, i64 5
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %314, i64 6
  %332 = getelementptr inbounds i16, i16* %313, i64 6
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %314, i64 7
  %335 = getelementptr inbounds i16, i16* %313, i64 7
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = add i64 %312, -8
  %338 = getelementptr inbounds i16, i16* %314, i64 8
  %339 = getelementptr inbounds i16, i16* %313, i64 8
  %340 = icmp eq i64 %337, 0
  br i1 %340, label %341, label %311, !llvm.loop !40

341:                                              ; preds = %306, %311, %286, %169
  %342 = load i8, i8* %52, align 1
  %343 = icmp slt i8 %342, 0
  %344 = load i64, i64* %53, align 8
  %345 = zext i8 %342 to i64
  %346 = select i1 %343, i64 %344, i64 %345
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %559

348:                                              ; preds = %341
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 56, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %85, align 8
  %349 = call i32 @_ZN8sessions16SessionTabHelper8IdForTabEPKN7content11WebContentsE(%"class.content::WebContents"* %122) #11
  store i32 %111, i32* %78, align 8
  store i32 %349, i32* %79, align 4
  %350 = load i8, i8* %50, align 1
  %351 = icmp slt i8 %350, 0
  br i1 %351, label %353, label %352

352:                                              ; preds = %348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %43, i64 24, i1 false) #11
  br label %521

353:                                              ; preds = %348
  %354 = load i16*, i16** %44, align 8
  %355 = load i64, i64* %45, align 8
  %356 = icmp ult i64 %355, 11
  br i1 %356, label %357, label %359

357:                                              ; preds = %353
  %358 = trunc i64 %355 to i8
  store i8 %358, i8* %91, align 1
  br label %373

359:                                              ; preds = %353
  %360 = icmp ugt i64 %355, 9223372036854775791
  br i1 %360, label %361, label %363

361:                                              ; preds = %359
  %362 = bitcast %"class.std::__1::basic_string.220"* %86 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %362) #12
  unreachable

363:                                              ; preds = %359
  %364 = add nuw nsw i64 %355, 8
  %365 = and i64 %364, -8
  %366 = icmp slt i64 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %363
  call void @abort() #12
  unreachable

368:                                              ; preds = %363
  %369 = shl i64 %365, 1
  %370 = call i8* @_Znwm(i64 %369) #13
  %371 = bitcast i8* %370 to i16*
  store i8* %370, i8** %88, align 8
  %372 = or i64 %365, -9223372036854775808
  store i64 %372, i64* %81, align 8
  store i64 %355, i64* %80, align 8
  br label %373

373:                                              ; preds = %368, %357
  %374 = phi i16* [ %89, %357 ], [ %371, %368 ]
  %375 = add nuw nsw i64 %355, 1
  %376 = add i64 %355, 1
  %377 = icmp ult i64 %376, 16
  br i1 %377, label %468, label %378

378:                                              ; preds = %373
  %379 = getelementptr i16, i16* %374, i64 1
  %380 = getelementptr i16, i16* %379, i64 %355
  %381 = getelementptr i16, i16* %354, i64 1
  %382 = getelementptr i16, i16* %381, i64 %355
  %383 = icmp ult i16* %374, %382
  %384 = icmp ult i16* %354, %380
  %385 = and i1 %383, %384
  br i1 %385, label %468, label %386

386:                                              ; preds = %378
  %387 = and i64 %376, -16
  %388 = sub i64 %375, %387
  %389 = getelementptr i16, i16* %354, i64 %387
  %390 = getelementptr i16, i16* %374, i64 %387
  %391 = add i64 %387, -16
  %392 = lshr exact i64 %391, 4
  %393 = add nuw nsw i64 %392, 1
  %394 = and i64 %393, 3
  %395 = icmp ult i64 %391, 48
  br i1 %395, label %447, label %396

396:                                              ; preds = %386
  %397 = sub nsw i64 %393, %394
  br label %398

398:                                              ; preds = %398, %396
  %399 = phi i64 [ 0, %396 ], [ %444, %398 ]
  %400 = phi i64 [ %397, %396 ], [ %445, %398 ]
  %401 = getelementptr i16, i16* %354, i64 %399
  %402 = getelementptr i16, i16* %374, i64 %399
  %403 = bitcast i16* %401 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !41
  %405 = getelementptr i16, i16* %401, i64 8
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !41
  %408 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %408, align 2, !alias.scope !44, !noalias !41
  %409 = getelementptr i16, i16* %402, i64 8
  %410 = bitcast i16* %409 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %410, align 2, !alias.scope !44, !noalias !41
  %411 = or i64 %399, 16
  %412 = getelementptr i16, i16* %354, i64 %411
  %413 = getelementptr i16, i16* %374, i64 %411
  %414 = bitcast i16* %412 to <8 x i16>*
  %415 = load <8 x i16>, <8 x i16>* %414, align 2, !alias.scope !41
  %416 = getelementptr i16, i16* %412, i64 8
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !41
  %419 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %419, align 2, !alias.scope !44, !noalias !41
  %420 = getelementptr i16, i16* %413, i64 8
  %421 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %421, align 2, !alias.scope !44, !noalias !41
  %422 = or i64 %399, 32
  %423 = getelementptr i16, i16* %354, i64 %422
  %424 = getelementptr i16, i16* %374, i64 %422
  %425 = bitcast i16* %423 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !41
  %427 = getelementptr i16, i16* %423, i64 8
  %428 = bitcast i16* %427 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !41
  %430 = bitcast i16* %424 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %430, align 2, !alias.scope !44, !noalias !41
  %431 = getelementptr i16, i16* %424, i64 8
  %432 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %429, <8 x i16>* %432, align 2, !alias.scope !44, !noalias !41
  %433 = or i64 %399, 48
  %434 = getelementptr i16, i16* %354, i64 %433
  %435 = getelementptr i16, i16* %374, i64 %433
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !41
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !41
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !44, !noalias !41
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !44, !noalias !41
  %444 = add i64 %399, 64
  %445 = add i64 %400, -4
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %398, !llvm.loop !46

447:                                              ; preds = %398, %386
  %448 = phi i64 [ 0, %386 ], [ %444, %398 ]
  %449 = icmp eq i64 %394, 0
  br i1 %449, label %466, label %450

450:                                              ; preds = %447, %450
  %451 = phi i64 [ %463, %450 ], [ %448, %447 ]
  %452 = phi i64 [ %464, %450 ], [ %394, %447 ]
  %453 = getelementptr i16, i16* %354, i64 %451
  %454 = getelementptr i16, i16* %374, i64 %451
  %455 = bitcast i16* %453 to <8 x i16>*
  %456 = load <8 x i16>, <8 x i16>* %455, align 2, !alias.scope !41
  %457 = getelementptr i16, i16* %453, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !41
  %460 = bitcast i16* %454 to <8 x i16>*
  store <8 x i16> %456, <8 x i16>* %460, align 2, !alias.scope !44, !noalias !41
  %461 = getelementptr i16, i16* %454, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %462, align 2, !alias.scope !44, !noalias !41
  %463 = add i64 %451, 16
  %464 = add i64 %452, -1
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %450, !llvm.loop !47

466:                                              ; preds = %450, %447
  %467 = icmp eq i64 %376, %387
  br i1 %467, label %521, label %468

468:                                              ; preds = %466, %378, %373
  %469 = phi i64 [ %375, %378 ], [ %375, %373 ], [ %388, %466 ]
  %470 = phi i16* [ %354, %378 ], [ %354, %373 ], [ %389, %466 ]
  %471 = phi i16* [ %374, %378 ], [ %374, %373 ], [ %390, %466 ]
  %472 = add i64 %469, -1
  %473 = and i64 %469, 7
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %486, label %475

475:                                              ; preds = %468, %475
  %476 = phi i64 [ %481, %475 ], [ %469, %468 ]
  %477 = phi i16* [ %483, %475 ], [ %470, %468 ]
  %478 = phi i16* [ %482, %475 ], [ %471, %468 ]
  %479 = phi i64 [ %484, %475 ], [ %473, %468 ]
  %480 = load i16, i16* %477, align 2
  store i16 %480, i16* %478, align 2
  %481 = add i64 %476, -1
  %482 = getelementptr inbounds i16, i16* %478, i64 1
  %483 = getelementptr inbounds i16, i16* %477, i64 1
  %484 = add i64 %479, -1
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %486, label %475, !llvm.loop !48

486:                                              ; preds = %475, %468
  %487 = phi i64 [ %469, %468 ], [ %481, %475 ]
  %488 = phi i16* [ %470, %468 ], [ %483, %475 ]
  %489 = phi i16* [ %471, %468 ], [ %482, %475 ]
  %490 = icmp ult i64 %472, 7
  br i1 %490, label %521, label %491

491:                                              ; preds = %486, %491
  %492 = phi i64 [ %517, %491 ], [ %487, %486 ]
  %493 = phi i16* [ %519, %491 ], [ %488, %486 ]
  %494 = phi i16* [ %518, %491 ], [ %489, %486 ]
  %495 = load i16, i16* %493, align 2
  store i16 %495, i16* %494, align 2
  %496 = getelementptr inbounds i16, i16* %494, i64 1
  %497 = getelementptr inbounds i16, i16* %493, i64 1
  %498 = load i16, i16* %497, align 2
  store i16 %498, i16* %496, align 2
  %499 = getelementptr inbounds i16, i16* %494, i64 2
  %500 = getelementptr inbounds i16, i16* %493, i64 2
  %501 = load i16, i16* %500, align 2
  store i16 %501, i16* %499, align 2
  %502 = getelementptr inbounds i16, i16* %494, i64 3
  %503 = getelementptr inbounds i16, i16* %493, i64 3
  %504 = load i16, i16* %503, align 2
  store i16 %504, i16* %502, align 2
  %505 = getelementptr inbounds i16, i16* %494, i64 4
  %506 = getelementptr inbounds i16, i16* %493, i64 4
  %507 = load i16, i16* %506, align 2
  store i16 %507, i16* %505, align 2
  %508 = getelementptr inbounds i16, i16* %494, i64 5
  %509 = getelementptr inbounds i16, i16* %493, i64 5
  %510 = load i16, i16* %509, align 2
  store i16 %510, i16* %508, align 2
  %511 = getelementptr inbounds i16, i16* %494, i64 6
  %512 = getelementptr inbounds i16, i16* %493, i64 6
  %513 = load i16, i16* %512, align 2
  store i16 %513, i16* %511, align 2
  %514 = getelementptr inbounds i16, i16* %494, i64 7
  %515 = getelementptr inbounds i16, i16* %493, i64 7
  %516 = load i16, i16* %515, align 2
  store i16 %516, i16* %514, align 2
  %517 = add i64 %492, -8
  %518 = getelementptr inbounds i16, i16* %494, i64 8
  %519 = getelementptr inbounds i16, i16* %493, i64 8
  %520 = icmp eq i64 %517, 0
  br i1 %520, label %521, label %491, !llvm.loop !49

521:                                              ; preds = %486, %491, %466, %352
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #11
  store double %112, double* %85, align 8
  %522 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %11, align 8
  %523 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %12, align 8
  %524 = icmp ult %"struct.commander::TabMatch"* %522, %523
  br i1 %524, label %525, label %546

525:                                              ; preds = %521
  %526 = bitcast %"struct.commander::TabMatch"* %522 to i64*
  %527 = load i64, i64* %94, align 8
  store i64 %527, i64* %526, align 8
  %528 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %522, i64 0, i32 2
  %529 = bitcast %"class.std::__1::basic_string.220"* %528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %529, i8* align 8 %87, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #11
  %530 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %522, i64 0, i32 3
  %531 = bitcast %"class.std::__1::vector.229"* %530 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %531, i8 0, i64 24, i1 false) #11
  %532 = load i64, i64* %95, align 8
  %533 = bitcast %"class.std::__1::vector.229"* %530 to i64*
  store i64 %532, i64* %533, align 8
  %534 = load i64, i64* %96, align 8
  %535 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %522, i64 0, i32 3, i32 0, i32 1
  %536 = bitcast %"class.gfx::Range"** %535 to i64*
  store i64 %534, i64* %536, align 8
  %537 = load i64, i64* %97, align 8
  %538 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %522, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %539 = bitcast %"class.gfx::Range"** %538 to i64*
  store i64 %537, i64* %539, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #11
  %540 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %522, i64 0, i32 4
  %541 = load i64, i64* %98, align 8
  %542 = bitcast double* %540 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %522, i64 1
  %544 = ptrtoint %"struct.commander::TabMatch"* %543 to i64
  store i64 %544, i64* %75, align 8
  %545 = fmul double %112, 0x3FEE666666666666
  br label %553

546:                                              ; preds = %521
  call void @_ZNSt3__16vectorIN9commander8TabMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.252"* %0, %"struct.commander::TabMatch"* nonnull dereferenceable(64) %9) #11
  %547 = load %"class.gfx::Range"*, %"class.gfx::Range"** %82, align 8
  %548 = fmul double %112, 0x3FEE666666666666
  %549 = icmp eq %"class.gfx::Range"* %547, null
  br i1 %549, label %553, label %550

550:                                              ; preds = %546
  %551 = bitcast %"class.gfx::Range"* %547 to i8*
  %552 = ptrtoint %"class.gfx::Range"* %547 to i64
  store i64 %552, i64* %96, align 8
  call void @_ZdlPv(i8* %551) #13
  br label %553

553:                                              ; preds = %525, %550, %546
  %554 = phi double [ %545, %525 ], [ %548, %550 ], [ %548, %546 ]
  %555 = load i8, i8* %91, align 1
  %556 = icmp slt i8 %555, 0
  br i1 %556, label %557, label %772

557:                                              ; preds = %553
  %558 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %558) #13
  br label %772

559:                                              ; preds = %341
  %560 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %5, %"class.std::__1::basic_string.220"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.229"* nonnull %6) #11
  %561 = fcmp ogt double %560, 0.000000e+00
  br i1 %561, label %562, label %775

562:                                              ; preds = %559
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %54) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 56, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %62, align 8
  %563 = call i32 @_ZN8sessions16SessionTabHelper8IdForTabEPKN7content11WebContentsE(%"class.content::WebContents"* %122) #11
  store i32 %111, i32* %55, align 8
  store i32 %563, i32* %56, align 4
  %564 = load i8, i8* %50, align 1
  %565 = icmp slt i8 %564, 0
  br i1 %565, label %567, label %566

566:                                              ; preds = %562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %43, i64 24, i1 false) #11
  br label %735

567:                                              ; preds = %562
  %568 = load i16*, i16** %44, align 8
  %569 = load i64, i64* %45, align 8
  %570 = icmp ult i64 %569, 11
  br i1 %570, label %571, label %573

571:                                              ; preds = %567
  %572 = trunc i64 %569 to i8
  store i8 %572, i8* %68, align 1
  br label %587

573:                                              ; preds = %567
  %574 = icmp ugt i64 %569, 9223372036854775791
  br i1 %574, label %575, label %577

575:                                              ; preds = %573
  %576 = bitcast %"class.std::__1::basic_string.220"* %63 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %576) #12
  unreachable

577:                                              ; preds = %573
  %578 = add nuw nsw i64 %569, 8
  %579 = and i64 %578, -8
  %580 = icmp slt i64 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %577
  call void @abort() #12
  unreachable

582:                                              ; preds = %577
  %583 = shl i64 %579, 1
  %584 = call i8* @_Znwm(i64 %583) #13
  %585 = bitcast i8* %584 to i16*
  store i8* %584, i8** %65, align 8
  %586 = or i64 %579, -9223372036854775808
  store i64 %586, i64* %58, align 8
  store i64 %569, i64* %57, align 8
  br label %587

587:                                              ; preds = %582, %571
  %588 = phi i16* [ %66, %571 ], [ %585, %582 ]
  %589 = add nuw nsw i64 %569, 1
  %590 = add i64 %569, 1
  %591 = icmp ult i64 %590, 16
  br i1 %591, label %682, label %592

592:                                              ; preds = %587
  %593 = getelementptr i16, i16* %588, i64 1
  %594 = getelementptr i16, i16* %593, i64 %569
  %595 = getelementptr i16, i16* %568, i64 1
  %596 = getelementptr i16, i16* %595, i64 %569
  %597 = icmp ult i16* %588, %596
  %598 = icmp ult i16* %568, %594
  %599 = and i1 %597, %598
  br i1 %599, label %682, label %600

600:                                              ; preds = %592
  %601 = and i64 %590, -16
  %602 = sub i64 %589, %601
  %603 = getelementptr i16, i16* %568, i64 %601
  %604 = getelementptr i16, i16* %588, i64 %601
  %605 = add i64 %601, -16
  %606 = lshr exact i64 %605, 4
  %607 = add nuw nsw i64 %606, 1
  %608 = and i64 %607, 3
  %609 = icmp ult i64 %605, 48
  br i1 %609, label %661, label %610

610:                                              ; preds = %600
  %611 = sub nsw i64 %607, %608
  br label %612

612:                                              ; preds = %612, %610
  %613 = phi i64 [ 0, %610 ], [ %658, %612 ]
  %614 = phi i64 [ %611, %610 ], [ %659, %612 ]
  %615 = getelementptr i16, i16* %568, i64 %613
  %616 = getelementptr i16, i16* %588, i64 %613
  %617 = bitcast i16* %615 to <8 x i16>*
  %618 = load <8 x i16>, <8 x i16>* %617, align 2, !alias.scope !50
  %619 = getelementptr i16, i16* %615, i64 8
  %620 = bitcast i16* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !50
  %622 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %618, <8 x i16>* %622, align 2, !alias.scope !53, !noalias !50
  %623 = getelementptr i16, i16* %616, i64 8
  %624 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %621, <8 x i16>* %624, align 2, !alias.scope !53, !noalias !50
  %625 = or i64 %613, 16
  %626 = getelementptr i16, i16* %568, i64 %625
  %627 = getelementptr i16, i16* %588, i64 %625
  %628 = bitcast i16* %626 to <8 x i16>*
  %629 = load <8 x i16>, <8 x i16>* %628, align 2, !alias.scope !50
  %630 = getelementptr i16, i16* %626, i64 8
  %631 = bitcast i16* %630 to <8 x i16>*
  %632 = load <8 x i16>, <8 x i16>* %631, align 2, !alias.scope !50
  %633 = bitcast i16* %627 to <8 x i16>*
  store <8 x i16> %629, <8 x i16>* %633, align 2, !alias.scope !53, !noalias !50
  %634 = getelementptr i16, i16* %627, i64 8
  %635 = bitcast i16* %634 to <8 x i16>*
  store <8 x i16> %632, <8 x i16>* %635, align 2, !alias.scope !53, !noalias !50
  %636 = or i64 %613, 32
  %637 = getelementptr i16, i16* %568, i64 %636
  %638 = getelementptr i16, i16* %588, i64 %636
  %639 = bitcast i16* %637 to <8 x i16>*
  %640 = load <8 x i16>, <8 x i16>* %639, align 2, !alias.scope !50
  %641 = getelementptr i16, i16* %637, i64 8
  %642 = bitcast i16* %641 to <8 x i16>*
  %643 = load <8 x i16>, <8 x i16>* %642, align 2, !alias.scope !50
  %644 = bitcast i16* %638 to <8 x i16>*
  store <8 x i16> %640, <8 x i16>* %644, align 2, !alias.scope !53, !noalias !50
  %645 = getelementptr i16, i16* %638, i64 8
  %646 = bitcast i16* %645 to <8 x i16>*
  store <8 x i16> %643, <8 x i16>* %646, align 2, !alias.scope !53, !noalias !50
  %647 = or i64 %613, 48
  %648 = getelementptr i16, i16* %568, i64 %647
  %649 = getelementptr i16, i16* %588, i64 %647
  %650 = bitcast i16* %648 to <8 x i16>*
  %651 = load <8 x i16>, <8 x i16>* %650, align 2, !alias.scope !50
  %652 = getelementptr i16, i16* %648, i64 8
  %653 = bitcast i16* %652 to <8 x i16>*
  %654 = load <8 x i16>, <8 x i16>* %653, align 2, !alias.scope !50
  %655 = bitcast i16* %649 to <8 x i16>*
  store <8 x i16> %651, <8 x i16>* %655, align 2, !alias.scope !53, !noalias !50
  %656 = getelementptr i16, i16* %649, i64 8
  %657 = bitcast i16* %656 to <8 x i16>*
  store <8 x i16> %654, <8 x i16>* %657, align 2, !alias.scope !53, !noalias !50
  %658 = add i64 %613, 64
  %659 = add i64 %614, -4
  %660 = icmp eq i64 %659, 0
  br i1 %660, label %661, label %612, !llvm.loop !55

661:                                              ; preds = %612, %600
  %662 = phi i64 [ 0, %600 ], [ %658, %612 ]
  %663 = icmp eq i64 %608, 0
  br i1 %663, label %680, label %664

664:                                              ; preds = %661, %664
  %665 = phi i64 [ %677, %664 ], [ %662, %661 ]
  %666 = phi i64 [ %678, %664 ], [ %608, %661 ]
  %667 = getelementptr i16, i16* %568, i64 %665
  %668 = getelementptr i16, i16* %588, i64 %665
  %669 = bitcast i16* %667 to <8 x i16>*
  %670 = load <8 x i16>, <8 x i16>* %669, align 2, !alias.scope !50
  %671 = getelementptr i16, i16* %667, i64 8
  %672 = bitcast i16* %671 to <8 x i16>*
  %673 = load <8 x i16>, <8 x i16>* %672, align 2, !alias.scope !50
  %674 = bitcast i16* %668 to <8 x i16>*
  store <8 x i16> %670, <8 x i16>* %674, align 2, !alias.scope !53, !noalias !50
  %675 = getelementptr i16, i16* %668, i64 8
  %676 = bitcast i16* %675 to <8 x i16>*
  store <8 x i16> %673, <8 x i16>* %676, align 2, !alias.scope !53, !noalias !50
  %677 = add i64 %665, 16
  %678 = add i64 %666, -1
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %680, label %664, !llvm.loop !56

680:                                              ; preds = %664, %661
  %681 = icmp eq i64 %590, %601
  br i1 %681, label %735, label %682

682:                                              ; preds = %680, %592, %587
  %683 = phi i64 [ %589, %592 ], [ %589, %587 ], [ %602, %680 ]
  %684 = phi i16* [ %568, %592 ], [ %568, %587 ], [ %603, %680 ]
  %685 = phi i16* [ %588, %592 ], [ %588, %587 ], [ %604, %680 ]
  %686 = add i64 %683, -1
  %687 = and i64 %683, 7
  %688 = icmp eq i64 %687, 0
  br i1 %688, label %700, label %689

689:                                              ; preds = %682, %689
  %690 = phi i64 [ %695, %689 ], [ %683, %682 ]
  %691 = phi i16* [ %697, %689 ], [ %684, %682 ]
  %692 = phi i16* [ %696, %689 ], [ %685, %682 ]
  %693 = phi i64 [ %698, %689 ], [ %687, %682 ]
  %694 = load i16, i16* %691, align 2
  store i16 %694, i16* %692, align 2
  %695 = add i64 %690, -1
  %696 = getelementptr inbounds i16, i16* %692, i64 1
  %697 = getelementptr inbounds i16, i16* %691, i64 1
  %698 = add i64 %693, -1
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %700, label %689, !llvm.loop !57

700:                                              ; preds = %689, %682
  %701 = phi i64 [ %683, %682 ], [ %695, %689 ]
  %702 = phi i16* [ %684, %682 ], [ %697, %689 ]
  %703 = phi i16* [ %685, %682 ], [ %696, %689 ]
  %704 = icmp ult i64 %686, 7
  br i1 %704, label %735, label %705

705:                                              ; preds = %700, %705
  %706 = phi i64 [ %731, %705 ], [ %701, %700 ]
  %707 = phi i16* [ %733, %705 ], [ %702, %700 ]
  %708 = phi i16* [ %732, %705 ], [ %703, %700 ]
  %709 = load i16, i16* %707, align 2
  store i16 %709, i16* %708, align 2
  %710 = getelementptr inbounds i16, i16* %708, i64 1
  %711 = getelementptr inbounds i16, i16* %707, i64 1
  %712 = load i16, i16* %711, align 2
  store i16 %712, i16* %710, align 2
  %713 = getelementptr inbounds i16, i16* %708, i64 2
  %714 = getelementptr inbounds i16, i16* %707, i64 2
  %715 = load i16, i16* %714, align 2
  store i16 %715, i16* %713, align 2
  %716 = getelementptr inbounds i16, i16* %708, i64 3
  %717 = getelementptr inbounds i16, i16* %707, i64 3
  %718 = load i16, i16* %717, align 2
  store i16 %718, i16* %716, align 2
  %719 = getelementptr inbounds i16, i16* %708, i64 4
  %720 = getelementptr inbounds i16, i16* %707, i64 4
  %721 = load i16, i16* %720, align 2
  store i16 %721, i16* %719, align 2
  %722 = getelementptr inbounds i16, i16* %708, i64 5
  %723 = getelementptr inbounds i16, i16* %707, i64 5
  %724 = load i16, i16* %723, align 2
  store i16 %724, i16* %722, align 2
  %725 = getelementptr inbounds i16, i16* %708, i64 6
  %726 = getelementptr inbounds i16, i16* %707, i64 6
  %727 = load i16, i16* %726, align 2
  store i16 %727, i16* %725, align 2
  %728 = getelementptr inbounds i16, i16* %708, i64 7
  %729 = getelementptr inbounds i16, i16* %707, i64 7
  %730 = load i16, i16* %729, align 2
  store i16 %730, i16* %728, align 2
  %731 = add i64 %706, -8
  %732 = getelementptr inbounds i16, i16* %708, i64 8
  %733 = getelementptr inbounds i16, i16* %707, i64 8
  %734 = icmp eq i64 %731, 0
  br i1 %734, label %735, label %705, !llvm.loop !58

735:                                              ; preds = %700, %705, %680, %566
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #11
  store double %560, double* %62, align 8
  %736 = load %"class.gfx::Range"*, %"class.gfx::Range"** %16, align 8
  %737 = load %"class.gfx::Range"*, %"class.gfx::Range"** %17, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.229"* %59, %"class.gfx::Range"* %736, %"class.gfx::Range"* %737) #11
  %738 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %11, align 8
  %739 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %12, align 8
  %740 = icmp ult %"struct.commander::TabMatch"* %738, %739
  br i1 %740, label %741, label %761

741:                                              ; preds = %735
  %742 = bitcast %"struct.commander::TabMatch"* %738 to i64*
  %743 = load i64, i64* %70, align 8
  store i64 %743, i64* %742, align 8
  %744 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %738, i64 0, i32 2
  %745 = bitcast %"class.std::__1::basic_string.220"* %744 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %745, i8* align 8 %64, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %746 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %738, i64 0, i32 3
  %747 = bitcast %"class.std::__1::vector.229"* %746 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %747, i8 0, i64 24, i1 false) #11
  %748 = load i64, i64* %71, align 8
  %749 = bitcast %"class.std::__1::vector.229"* %746 to i64*
  store i64 %748, i64* %749, align 8
  %750 = load i64, i64* %72, align 8
  %751 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %738, i64 0, i32 3, i32 0, i32 1
  %752 = bitcast %"class.gfx::Range"** %751 to i64*
  store i64 %750, i64* %752, align 8
  %753 = load i64, i64* %73, align 8
  %754 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %738, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %755 = bitcast %"class.gfx::Range"** %754 to i64*
  store i64 %753, i64* %755, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #11
  %756 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %738, i64 0, i32 4
  %757 = load i64, i64* %74, align 8
  %758 = bitcast double* %756 to i64*
  store i64 %757, i64* %758, align 8
  %759 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %738, i64 1
  %760 = ptrtoint %"struct.commander::TabMatch"* %759 to i64
  store i64 %760, i64* %75, align 8
  br label %767

761:                                              ; preds = %735
  call void @_ZNSt3__16vectorIN9commander8TabMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.252"* %0, %"struct.commander::TabMatch"* nonnull dereferenceable(64) %10) #11
  %762 = load %"class.gfx::Range"*, %"class.gfx::Range"** %76, align 8
  %763 = icmp eq %"class.gfx::Range"* %762, null
  br i1 %763, label %767, label %764

764:                                              ; preds = %761
  %765 = bitcast %"class.gfx::Range"* %762 to i8*
  %766 = ptrtoint %"class.gfx::Range"* %762 to i64
  store i64 %766, i64* %72, align 8
  call void @_ZdlPv(i8* %765) #13
  br label %767

767:                                              ; preds = %741, %764, %761
  %768 = load i8, i8* %68, align 1
  %769 = icmp slt i8 %768, 0
  br i1 %769, label %770, label %772

770:                                              ; preds = %767
  %771 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %771) #13
  br label %772

772:                                              ; preds = %770, %767, %557, %553
  %773 = phi i8* [ %77, %553 ], [ %77, %557 ], [ %54, %767 ], [ %54, %770 ]
  %774 = phi double [ %554, %553 ], [ %554, %557 ], [ %112, %767 ], [ %112, %770 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %773) #11
  br label %775

775:                                              ; preds = %772, %559
  %776 = phi double [ %112, %559 ], [ %774, %772 ]
  %777 = load i8, i8* %50, align 1
  %778 = icmp slt i8 %777, 0
  br i1 %778, label %779, label %781

779:                                              ; preds = %775
  %780 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %780) #13
  br label %781

781:                                              ; preds = %775, %779
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  br label %782

782:                                              ; preds = %146, %157, %149, %781
  %783 = phi double [ %776, %781 ], [ %112, %149 ], [ %112, %157 ], [ %112, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  br label %784

784:                                              ; preds = %782, %125, %134, %110
  %785 = phi double [ %112, %110 ], [ %783, %782 ], [ %112, %125 ], [ %112, %134 ]
  %786 = add nuw nsw i32 %111, 1
  %787 = load i64, i64* %22, align 8
  %788 = load i64, i64* %24, align 8
  %789 = sub i64 %787, %788
  %790 = lshr exact i64 %789, 3
  %791 = trunc i64 %790 to i32
  %792 = icmp slt i32 %786, %791
  br i1 %792, label %110, label %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string.220"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK13TabStripModel11IsTabPinnedEi(%class.TabStripModel*, i32) local_unnamed_addr #1

declare i32 @_ZN8sessions16SessionTabHelper8IdForTabEPKN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string.220"* dereferenceable(24), %"class.std::__1::vector.229"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20WindowsMatchingInputEPK7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEb(%"class.std::__1::vector.279"* noalias sret, %class.Browser* readonly, %"class.std::__1::basic_string.220"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.commander::FuzzyFinder", align 8
  %6 = alloca %"class.std::__1::vector.229", align 8
  %7 = alloca %"class.std::__1::basic_string.220", align 8
  %8 = alloca %"struct.commander::WindowMatch", align 8
  %9 = alloca %"struct.commander::WindowMatch", align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.279", %"class.std::__1::vector.279"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.279", %"class.std::__1::vector.279"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::vector.279"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = tail call %class.BrowserList* @_ZN11BrowserList11GetInstanceEv() #11
  %14 = bitcast %"class.commander::FuzzyFinder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %5, %"class.std::__1::basic_string.220"* dereferenceable(24) %2) #11
  %15 = bitcast %"class.std::__1::vector.229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %class.BrowserList, %class.BrowserList* %13, i64 0, i32 1, i32 0, i32 1
  %19 = load %class.Browser**, %class.Browser*** %18, align 8
  %20 = getelementptr inbounds %class.BrowserList, %class.BrowserList* %13, i64 0, i32 1, i32 0, i32 0
  %21 = load %class.Browser**, %class.Browser*** %20, align 8
  %22 = icmp eq %class.Browser** %19, %21
  br i1 %22, label %89, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %class.Browser, %class.Browser* %1, i64 0, i32 12
  %25 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  %26 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string.220"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.commander::WindowMatch"* %9 to i8*
  %32 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 2, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 3
  %39 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string.220"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = bitcast %"class.std::__1::basic_string.220"* %39 to i8*
  %43 = bitcast %"class.std::__1::basic_string.220"* %39 to i8**
  %44 = bitcast %"class.std::__1::basic_string.220"* %39 to i16*
  %45 = bitcast %"class.std::__1::basic_string.220"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = bitcast %"class.std::__1::vector.229"* %35 to i8*
  %48 = bitcast %"struct.commander::WindowMatch"* %9 to i64*
  %49 = bitcast %"class.std::__1::vector.229"* %35 to i64*
  %50 = bitcast %"class.gfx::Range"** %36 to i64*
  %51 = bitcast %"class.gfx::Range"** %37 to i64*
  %52 = bitcast double* %38 to i64*
  %53 = bitcast %"struct.commander::WindowMatch"** %10 to i64*
  %54 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 2, i32 0, i32 0
  %55 = bitcast %"struct.commander::WindowMatch"* %8 to i8*
  %56 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 2, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 2, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 3
  %63 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string.220"* %63 to i8*
  %65 = bitcast %"class.std::__1::basic_string.220"* %63 to i8**
  %66 = bitcast %"class.std::__1::basic_string.220"* %63 to i16*
  %67 = bitcast %"class.std::__1::basic_string.220"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 2
  %70 = bitcast %"class.std::__1::vector.229"* %69 to i8*
  %71 = bitcast %"struct.commander::WindowMatch"* %8 to i64*
  %72 = bitcast %"class.std::__1::vector.229"* %69 to i64*
  %73 = bitcast %"class.gfx::Range"** %60 to i64*
  %74 = bitcast %"class.gfx::Range"** %61 to i64*
  %75 = bitcast double* %62 to i64*
  %76 = bitcast %"class.std::__1::basic_string.220"* %7 to i8**
  %77 = bitcast %"class.std::__1::basic_string.220"* %7 to i8*
  %78 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %9, i64 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string.220"* %78 to i8*
  %80 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %8, i64 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string.220"* %80 to i8*
  br label %90

82:                                               ; preds = %547
  %83 = load %"class.gfx::Range"*, %"class.gfx::Range"** %16, align 8
  %84 = icmp eq %"class.gfx::Range"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.gfx::Range"* %83 to i8*
  %87 = ptrtoint %"class.gfx::Range"* %83 to i64
  %88 = bitcast %"class.gfx::Range"** %17 to i64*
  store i64 %87, i64* %88, align 8
  call void @_ZdlPv(i8* %86) #13
  br label %89

89:                                               ; preds = %4, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #11
  ret void

90:                                               ; preds = %23, %547
  %91 = phi %class.Browser** [ %21, %23 ], [ %548, %547 ]
  %92 = phi double [ 0x3FEE666666666666, %23 ], [ %549, %547 ]
  %93 = phi %class.Browser** [ %19, %23 ], [ %94, %547 ]
  %94 = getelementptr inbounds %class.Browser*, %class.Browser** %93, i64 -1
  %95 = load %class.Browser*, %class.Browser** %94, align 8
  %96 = icmp eq %class.Browser* %95, %1
  br i1 %96, label %547, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %class.Browser, %class.Browser* %95, i64 0, i32 11
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %547

101:                                              ; preds = %97
  br i1 %3, label %102, label %107

102:                                              ; preds = %101
  %103 = getelementptr inbounds %class.Browser, %class.Browser* %95, i64 0, i32 12
  %104 = load %class.Profile*, %class.Profile** %103, align 8
  %105 = load %class.Profile*, %class.Profile** %24, align 8
  %106 = icmp eq %class.Profile* %104, %105
  br i1 %106, label %107, label %547

107:                                              ; preds = %102, %101
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 24, i1 false)
  call void @_ZNK7Browser25GetWindowTitleForMaxWidthEi(%"class.std::__1::basic_string.220"* nonnull sret %7, %class.Browser* %95, i32 1000) #11
  %108 = load i8, i8* %29, align 1
  %109 = icmp slt i8 %108, 0
  %110 = load i64, i64* %30, align 8
  %111 = zext i8 %108 to i64
  %112 = select i1 %109, i64 %110, i64 %111
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %324

114:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %55) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 48, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %62, align 8
  store %class.Browser* %95, %class.Browser** %56, align 8
  %115 = load i8, i8* %41, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %25, i64 24, i1 false) #11
  br label %286

118:                                              ; preds = %114
  %119 = load i16*, i16** %26, align 8
  %120 = load i64, i64* %27, align 8
  %121 = icmp ult i64 %120, 11
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = trunc i64 %120 to i8
  store i8 %123, i8* %68, align 1
  br label %138

124:                                              ; preds = %118
  %125 = icmp ugt i64 %120, 9223372036854775791
  br i1 %125, label %126, label %128

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::basic_string.220"* %63 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %127) #12
  unreachable

128:                                              ; preds = %124
  %129 = add nuw nsw i64 %120, 8
  %130 = and i64 %129, -8
  %131 = icmp slt i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %128
  call void @abort() #12
  unreachable

133:                                              ; preds = %128
  %134 = shl i64 %130, 1
  %135 = call i8* @_Znwm(i64 %134) #13
  %136 = bitcast i8* %135 to i16*
  store i8* %135, i8** %65, align 8
  %137 = or i64 %130, -9223372036854775808
  store i64 %137, i64* %58, align 8
  store i64 %120, i64* %57, align 8
  br label %138

138:                                              ; preds = %133, %122
  %139 = phi i16* [ %66, %122 ], [ %136, %133 ]
  %140 = add nuw nsw i64 %120, 1
  %141 = add i64 %120, 1
  %142 = icmp ult i64 %141, 16
  br i1 %142, label %233, label %143

143:                                              ; preds = %138
  %144 = getelementptr i16, i16* %139, i64 1
  %145 = getelementptr i16, i16* %144, i64 %120
  %146 = getelementptr i16, i16* %119, i64 1
  %147 = getelementptr i16, i16* %146, i64 %120
  %148 = icmp ult i16* %139, %147
  %149 = icmp ult i16* %119, %145
  %150 = and i1 %148, %149
  br i1 %150, label %233, label %151

151:                                              ; preds = %143
  %152 = and i64 %141, -16
  %153 = sub i64 %140, %152
  %154 = getelementptr i16, i16* %119, i64 %152
  %155 = getelementptr i16, i16* %139, i64 %152
  %156 = add i64 %152, -16
  %157 = lshr exact i64 %156, 4
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 3
  %160 = icmp ult i64 %156, 48
  br i1 %160, label %212, label %161

161:                                              ; preds = %151
  %162 = sub nsw i64 %158, %159
  br label %163

163:                                              ; preds = %163, %161
  %164 = phi i64 [ 0, %161 ], [ %209, %163 ]
  %165 = phi i64 [ %162, %161 ], [ %210, %163 ]
  %166 = getelementptr i16, i16* %119, i64 %164
  %167 = getelementptr i16, i16* %139, i64 %164
  %168 = bitcast i16* %166 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !59
  %170 = getelementptr i16, i16* %166, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !59
  %173 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %173, align 2, !alias.scope !62, !noalias !59
  %174 = getelementptr i16, i16* %167, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %175, align 2, !alias.scope !62, !noalias !59
  %176 = or i64 %164, 16
  %177 = getelementptr i16, i16* %119, i64 %176
  %178 = getelementptr i16, i16* %139, i64 %176
  %179 = bitcast i16* %177 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !59
  %181 = getelementptr i16, i16* %177, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !59
  %184 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !62, !noalias !59
  %185 = getelementptr i16, i16* %178, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !62, !noalias !59
  %187 = or i64 %164, 32
  %188 = getelementptr i16, i16* %119, i64 %187
  %189 = getelementptr i16, i16* %139, i64 %187
  %190 = bitcast i16* %188 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !59
  %192 = getelementptr i16, i16* %188, i64 8
  %193 = bitcast i16* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !59
  %195 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %195, align 2, !alias.scope !62, !noalias !59
  %196 = getelementptr i16, i16* %189, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %197, align 2, !alias.scope !62, !noalias !59
  %198 = or i64 %164, 48
  %199 = getelementptr i16, i16* %119, i64 %198
  %200 = getelementptr i16, i16* %139, i64 %198
  %201 = bitcast i16* %199 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !59
  %203 = getelementptr i16, i16* %199, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !59
  %206 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %206, align 2, !alias.scope !62, !noalias !59
  %207 = getelementptr i16, i16* %200, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %208, align 2, !alias.scope !62, !noalias !59
  %209 = add i64 %164, 64
  %210 = add i64 %165, -4
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %163, !llvm.loop !64

212:                                              ; preds = %163, %151
  %213 = phi i64 [ 0, %151 ], [ %209, %163 ]
  %214 = icmp eq i64 %159, 0
  br i1 %214, label %231, label %215

215:                                              ; preds = %212, %215
  %216 = phi i64 [ %228, %215 ], [ %213, %212 ]
  %217 = phi i64 [ %229, %215 ], [ %159, %212 ]
  %218 = getelementptr i16, i16* %119, i64 %216
  %219 = getelementptr i16, i16* %139, i64 %216
  %220 = bitcast i16* %218 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !59
  %222 = getelementptr i16, i16* %218, i64 8
  %223 = bitcast i16* %222 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !59
  %225 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %225, align 2, !alias.scope !62, !noalias !59
  %226 = getelementptr i16, i16* %219, i64 8
  %227 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %227, align 2, !alias.scope !62, !noalias !59
  %228 = add i64 %216, 16
  %229 = add i64 %217, -1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %215, !llvm.loop !65

231:                                              ; preds = %215, %212
  %232 = icmp eq i64 %141, %152
  br i1 %232, label %286, label %233

233:                                              ; preds = %231, %143, %138
  %234 = phi i64 [ %140, %143 ], [ %140, %138 ], [ %153, %231 ]
  %235 = phi i16* [ %119, %143 ], [ %119, %138 ], [ %154, %231 ]
  %236 = phi i16* [ %139, %143 ], [ %139, %138 ], [ %155, %231 ]
  %237 = add i64 %234, -1
  %238 = and i64 %234, 7
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %251, label %240

240:                                              ; preds = %233, %240
  %241 = phi i64 [ %246, %240 ], [ %234, %233 ]
  %242 = phi i16* [ %248, %240 ], [ %235, %233 ]
  %243 = phi i16* [ %247, %240 ], [ %236, %233 ]
  %244 = phi i64 [ %249, %240 ], [ %238, %233 ]
  %245 = load i16, i16* %242, align 2
  store i16 %245, i16* %243, align 2
  %246 = add i64 %241, -1
  %247 = getelementptr inbounds i16, i16* %243, i64 1
  %248 = getelementptr inbounds i16, i16* %242, i64 1
  %249 = add i64 %244, -1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %240, !llvm.loop !66

251:                                              ; preds = %240, %233
  %252 = phi i64 [ %234, %233 ], [ %246, %240 ]
  %253 = phi i16* [ %235, %233 ], [ %248, %240 ]
  %254 = phi i16* [ %236, %233 ], [ %247, %240 ]
  %255 = icmp ult i64 %237, 7
  br i1 %255, label %286, label %256

256:                                              ; preds = %251, %256
  %257 = phi i64 [ %282, %256 ], [ %252, %251 ]
  %258 = phi i16* [ %284, %256 ], [ %253, %251 ]
  %259 = phi i16* [ %283, %256 ], [ %254, %251 ]
  %260 = load i16, i16* %258, align 2
  store i16 %260, i16* %259, align 2
  %261 = getelementptr inbounds i16, i16* %259, i64 1
  %262 = getelementptr inbounds i16, i16* %258, i64 1
  %263 = load i16, i16* %262, align 2
  store i16 %263, i16* %261, align 2
  %264 = getelementptr inbounds i16, i16* %259, i64 2
  %265 = getelementptr inbounds i16, i16* %258, i64 2
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %259, i64 3
  %268 = getelementptr inbounds i16, i16* %258, i64 3
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %259, i64 4
  %271 = getelementptr inbounds i16, i16* %258, i64 4
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %259, i64 5
  %274 = getelementptr inbounds i16, i16* %258, i64 5
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %259, i64 6
  %277 = getelementptr inbounds i16, i16* %258, i64 6
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %259, i64 7
  %280 = getelementptr inbounds i16, i16* %258, i64 7
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = add i64 %257, -8
  %283 = getelementptr inbounds i16, i16* %259, i64 8
  %284 = getelementptr inbounds i16, i16* %258, i64 8
  %285 = icmp eq i64 %282, 0
  br i1 %285, label %286, label %256, !llvm.loop !67

286:                                              ; preds = %251, %256, %231, %117
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11
  store double %92, double* %62, align 8
  %287 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %10, align 8
  %288 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %11, align 8
  %289 = icmp ult %"struct.commander::WindowMatch"* %287, %288
  br i1 %289, label %290, label %311

290:                                              ; preds = %286
  %291 = load i64, i64* %71, align 8
  %292 = bitcast %"struct.commander::WindowMatch"* %287 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %287, i64 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string.220"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %64, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %295 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %287, i64 0, i32 2
  %296 = bitcast %"class.std::__1::vector.229"* %295 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %296, i8 0, i64 24, i1 false) #11
  %297 = load i64, i64* %72, align 8
  %298 = bitcast %"class.std::__1::vector.229"* %295 to i64*
  store i64 %297, i64* %298, align 8
  %299 = load i64, i64* %73, align 8
  %300 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %287, i64 0, i32 2, i32 0, i32 1
  %301 = bitcast %"class.gfx::Range"** %300 to i64*
  store i64 %299, i64* %301, align 8
  %302 = load i64, i64* %74, align 8
  %303 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %287, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %304 = bitcast %"class.gfx::Range"** %303 to i64*
  store i64 %302, i64* %304, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11
  %305 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %287, i64 0, i32 3
  %306 = load i64, i64* %75, align 8
  %307 = bitcast double* %305 to i64*
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %287, i64 1
  %309 = ptrtoint %"struct.commander::WindowMatch"* %308 to i64
  store i64 %309, i64* %53, align 8
  %310 = fmul double %92, 0x3FEE666666666666
  br label %318

311:                                              ; preds = %286
  call void @_ZNSt3__16vectorIN9commander11WindowMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.279"* %0, %"struct.commander::WindowMatch"* nonnull dereferenceable(64) %8) #11
  %312 = load %"class.gfx::Range"*, %"class.gfx::Range"** %59, align 8
  %313 = fmul double %92, 0x3FEE666666666666
  %314 = icmp eq %"class.gfx::Range"* %312, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %311
  %316 = bitcast %"class.gfx::Range"* %312 to i8*
  %317 = ptrtoint %"class.gfx::Range"* %312 to i64
  store i64 %317, i64* %73, align 8
  call void @_ZdlPv(i8* %316) #13
  br label %318

318:                                              ; preds = %290, %315, %311
  %319 = phi double [ %310, %290 ], [ %313, %315 ], [ %313, %311 ]
  %320 = load i8, i8* %68, align 1
  %321 = icmp slt i8 %320, 0
  br i1 %321, label %322, label %536

322:                                              ; preds = %318
  %323 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %323) #13
  br label %536

324:                                              ; preds = %107
  %325 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %5, %"class.std::__1::basic_string.220"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.229"* nonnull %6) #11
  %326 = fcmp ogt double %325, 0.000000e+00
  br i1 %326, label %327, label %539

327:                                              ; preds = %324
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 48, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %38, align 8
  store %class.Browser* %95, %class.Browser** %32, align 8
  %328 = load i8, i8* %41, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %331, label %330

330:                                              ; preds = %327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %25, i64 24, i1 false) #11
  br label %499

331:                                              ; preds = %327
  %332 = load i16*, i16** %26, align 8
  %333 = load i64, i64* %27, align 8
  %334 = icmp ult i64 %333, 11
  br i1 %334, label %335, label %337

335:                                              ; preds = %331
  %336 = trunc i64 %333 to i8
  store i8 %336, i8* %46, align 1
  br label %351

337:                                              ; preds = %331
  %338 = icmp ugt i64 %333, 9223372036854775791
  br i1 %338, label %339, label %341

339:                                              ; preds = %337
  %340 = bitcast %"class.std::__1::basic_string.220"* %39 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %340) #12
  unreachable

341:                                              ; preds = %337
  %342 = add nuw nsw i64 %333, 8
  %343 = and i64 %342, -8
  %344 = icmp slt i64 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %341
  call void @abort() #12
  unreachable

346:                                              ; preds = %341
  %347 = shl i64 %343, 1
  %348 = call i8* @_Znwm(i64 %347) #13
  %349 = bitcast i8* %348 to i16*
  store i8* %348, i8** %43, align 8
  %350 = or i64 %343, -9223372036854775808
  store i64 %350, i64* %34, align 8
  store i64 %333, i64* %33, align 8
  br label %351

351:                                              ; preds = %346, %335
  %352 = phi i16* [ %44, %335 ], [ %349, %346 ]
  %353 = add nuw nsw i64 %333, 1
  %354 = add i64 %333, 1
  %355 = icmp ult i64 %354, 16
  br i1 %355, label %446, label %356

356:                                              ; preds = %351
  %357 = getelementptr i16, i16* %352, i64 1
  %358 = getelementptr i16, i16* %357, i64 %333
  %359 = getelementptr i16, i16* %332, i64 1
  %360 = getelementptr i16, i16* %359, i64 %333
  %361 = icmp ult i16* %352, %360
  %362 = icmp ult i16* %332, %358
  %363 = and i1 %361, %362
  br i1 %363, label %446, label %364

364:                                              ; preds = %356
  %365 = and i64 %354, -16
  %366 = sub i64 %353, %365
  %367 = getelementptr i16, i16* %332, i64 %365
  %368 = getelementptr i16, i16* %352, i64 %365
  %369 = add i64 %365, -16
  %370 = lshr exact i64 %369, 4
  %371 = add nuw nsw i64 %370, 1
  %372 = and i64 %371, 3
  %373 = icmp ult i64 %369, 48
  br i1 %373, label %425, label %374

374:                                              ; preds = %364
  %375 = sub nsw i64 %371, %372
  br label %376

376:                                              ; preds = %376, %374
  %377 = phi i64 [ 0, %374 ], [ %422, %376 ]
  %378 = phi i64 [ %375, %374 ], [ %423, %376 ]
  %379 = getelementptr i16, i16* %332, i64 %377
  %380 = getelementptr i16, i16* %352, i64 %377
  %381 = bitcast i16* %379 to <8 x i16>*
  %382 = load <8 x i16>, <8 x i16>* %381, align 2, !alias.scope !68
  %383 = getelementptr i16, i16* %379, i64 8
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !68
  %386 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %382, <8 x i16>* %386, align 2, !alias.scope !71, !noalias !68
  %387 = getelementptr i16, i16* %380, i64 8
  %388 = bitcast i16* %387 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %388, align 2, !alias.scope !71, !noalias !68
  %389 = or i64 %377, 16
  %390 = getelementptr i16, i16* %332, i64 %389
  %391 = getelementptr i16, i16* %352, i64 %389
  %392 = bitcast i16* %390 to <8 x i16>*
  %393 = load <8 x i16>, <8 x i16>* %392, align 2, !alias.scope !68
  %394 = getelementptr i16, i16* %390, i64 8
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !68
  %397 = bitcast i16* %391 to <8 x i16>*
  store <8 x i16> %393, <8 x i16>* %397, align 2, !alias.scope !71, !noalias !68
  %398 = getelementptr i16, i16* %391, i64 8
  %399 = bitcast i16* %398 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %399, align 2, !alias.scope !71, !noalias !68
  %400 = or i64 %377, 32
  %401 = getelementptr i16, i16* %332, i64 %400
  %402 = getelementptr i16, i16* %352, i64 %400
  %403 = bitcast i16* %401 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !68
  %405 = getelementptr i16, i16* %401, i64 8
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !68
  %408 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %408, align 2, !alias.scope !71, !noalias !68
  %409 = getelementptr i16, i16* %402, i64 8
  %410 = bitcast i16* %409 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %410, align 2, !alias.scope !71, !noalias !68
  %411 = or i64 %377, 48
  %412 = getelementptr i16, i16* %332, i64 %411
  %413 = getelementptr i16, i16* %352, i64 %411
  %414 = bitcast i16* %412 to <8 x i16>*
  %415 = load <8 x i16>, <8 x i16>* %414, align 2, !alias.scope !68
  %416 = getelementptr i16, i16* %412, i64 8
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !68
  %419 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %419, align 2, !alias.scope !71, !noalias !68
  %420 = getelementptr i16, i16* %413, i64 8
  %421 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %421, align 2, !alias.scope !71, !noalias !68
  %422 = add i64 %377, 64
  %423 = add i64 %378, -4
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %425, label %376, !llvm.loop !73

425:                                              ; preds = %376, %364
  %426 = phi i64 [ 0, %364 ], [ %422, %376 ]
  %427 = icmp eq i64 %372, 0
  br i1 %427, label %444, label %428

428:                                              ; preds = %425, %428
  %429 = phi i64 [ %441, %428 ], [ %426, %425 ]
  %430 = phi i64 [ %442, %428 ], [ %372, %425 ]
  %431 = getelementptr i16, i16* %332, i64 %429
  %432 = getelementptr i16, i16* %352, i64 %429
  %433 = bitcast i16* %431 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !68
  %435 = getelementptr i16, i16* %431, i64 8
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !68
  %438 = bitcast i16* %432 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %438, align 2, !alias.scope !71, !noalias !68
  %439 = getelementptr i16, i16* %432, i64 8
  %440 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %440, align 2, !alias.scope !71, !noalias !68
  %441 = add i64 %429, 16
  %442 = add i64 %430, -1
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %428, !llvm.loop !74

444:                                              ; preds = %428, %425
  %445 = icmp eq i64 %354, %365
  br i1 %445, label %499, label %446

446:                                              ; preds = %444, %356, %351
  %447 = phi i64 [ %353, %356 ], [ %353, %351 ], [ %366, %444 ]
  %448 = phi i16* [ %332, %356 ], [ %332, %351 ], [ %367, %444 ]
  %449 = phi i16* [ %352, %356 ], [ %352, %351 ], [ %368, %444 ]
  %450 = add i64 %447, -1
  %451 = and i64 %447, 7
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %464, label %453

453:                                              ; preds = %446, %453
  %454 = phi i64 [ %459, %453 ], [ %447, %446 ]
  %455 = phi i16* [ %461, %453 ], [ %448, %446 ]
  %456 = phi i16* [ %460, %453 ], [ %449, %446 ]
  %457 = phi i64 [ %462, %453 ], [ %451, %446 ]
  %458 = load i16, i16* %455, align 2
  store i16 %458, i16* %456, align 2
  %459 = add i64 %454, -1
  %460 = getelementptr inbounds i16, i16* %456, i64 1
  %461 = getelementptr inbounds i16, i16* %455, i64 1
  %462 = add i64 %457, -1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %453, !llvm.loop !75

464:                                              ; preds = %453, %446
  %465 = phi i64 [ %447, %446 ], [ %459, %453 ]
  %466 = phi i16* [ %448, %446 ], [ %461, %453 ]
  %467 = phi i16* [ %449, %446 ], [ %460, %453 ]
  %468 = icmp ult i64 %450, 7
  br i1 %468, label %499, label %469

469:                                              ; preds = %464, %469
  %470 = phi i64 [ %495, %469 ], [ %465, %464 ]
  %471 = phi i16* [ %497, %469 ], [ %466, %464 ]
  %472 = phi i16* [ %496, %469 ], [ %467, %464 ]
  %473 = load i16, i16* %471, align 2
  store i16 %473, i16* %472, align 2
  %474 = getelementptr inbounds i16, i16* %472, i64 1
  %475 = getelementptr inbounds i16, i16* %471, i64 1
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %474, align 2
  %477 = getelementptr inbounds i16, i16* %472, i64 2
  %478 = getelementptr inbounds i16, i16* %471, i64 2
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %472, i64 3
  %481 = getelementptr inbounds i16, i16* %471, i64 3
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %472, i64 4
  %484 = getelementptr inbounds i16, i16* %471, i64 4
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %472, i64 5
  %487 = getelementptr inbounds i16, i16* %471, i64 5
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %472, i64 6
  %490 = getelementptr inbounds i16, i16* %471, i64 6
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %472, i64 7
  %493 = getelementptr inbounds i16, i16* %471, i64 7
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = add i64 %470, -8
  %496 = getelementptr inbounds i16, i16* %472, i64 8
  %497 = getelementptr inbounds i16, i16* %471, i64 8
  %498 = icmp eq i64 %495, 0
  br i1 %498, label %499, label %469, !llvm.loop !76

499:                                              ; preds = %464, %469, %444, %330
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #11
  store double %325, double* %38, align 8
  %500 = load %"class.gfx::Range"*, %"class.gfx::Range"** %16, align 8
  %501 = load %"class.gfx::Range"*, %"class.gfx::Range"** %17, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.229"* %35, %"class.gfx::Range"* %500, %"class.gfx::Range"* %501) #11
  %502 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %10, align 8
  %503 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %11, align 8
  %504 = icmp ult %"struct.commander::WindowMatch"* %502, %503
  br i1 %504, label %505, label %525

505:                                              ; preds = %499
  %506 = load i64, i64* %48, align 8
  %507 = bitcast %"struct.commander::WindowMatch"* %502 to i64*
  store i64 %506, i64* %507, align 8
  %508 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %502, i64 0, i32 1
  %509 = bitcast %"class.std::__1::basic_string.220"* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %509, i8* align 8 %42, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #11
  %510 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %502, i64 0, i32 2
  %511 = bitcast %"class.std::__1::vector.229"* %510 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %511, i8 0, i64 24, i1 false) #11
  %512 = load i64, i64* %49, align 8
  %513 = bitcast %"class.std::__1::vector.229"* %510 to i64*
  store i64 %512, i64* %513, align 8
  %514 = load i64, i64* %50, align 8
  %515 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %502, i64 0, i32 2, i32 0, i32 1
  %516 = bitcast %"class.gfx::Range"** %515 to i64*
  store i64 %514, i64* %516, align 8
  %517 = load i64, i64* %51, align 8
  %518 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %502, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %519 = bitcast %"class.gfx::Range"** %518 to i64*
  store i64 %517, i64* %519, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #11
  %520 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %502, i64 0, i32 3
  %521 = load i64, i64* %52, align 8
  %522 = bitcast double* %520 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %502, i64 1
  %524 = ptrtoint %"struct.commander::WindowMatch"* %523 to i64
  store i64 %524, i64* %53, align 8
  br label %531

525:                                              ; preds = %499
  call void @_ZNSt3__16vectorIN9commander11WindowMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.279"* %0, %"struct.commander::WindowMatch"* nonnull dereferenceable(64) %9) #11
  %526 = load %"class.gfx::Range"*, %"class.gfx::Range"** %54, align 8
  %527 = icmp eq %"class.gfx::Range"* %526, null
  br i1 %527, label %531, label %528

528:                                              ; preds = %525
  %529 = bitcast %"class.gfx::Range"* %526 to i8*
  %530 = ptrtoint %"class.gfx::Range"* %526 to i64
  store i64 %530, i64* %50, align 8
  call void @_ZdlPv(i8* %529) #13
  br label %531

531:                                              ; preds = %505, %528, %525
  %532 = load i8, i8* %46, align 1
  %533 = icmp slt i8 %532, 0
  br i1 %533, label %534, label %536

534:                                              ; preds = %531
  %535 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %535) #13
  br label %536

536:                                              ; preds = %534, %531, %322, %318
  %537 = phi i8* [ %55, %318 ], [ %55, %322 ], [ %31, %531 ], [ %31, %534 ]
  %538 = phi double [ %319, %318 ], [ %319, %322 ], [ %92, %531 ], [ %92, %534 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %537) #11
  br label %539

539:                                              ; preds = %536, %324
  %540 = phi double [ %92, %324 ], [ %538, %536 ]
  %541 = load i8, i8* %41, align 1
  %542 = icmp slt i8 %541, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %539
  %544 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %544) #13
  br label %545

545:                                              ; preds = %539, %543
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %546 = load %class.Browser**, %class.Browser*** %20, align 8
  br label %547

547:                                              ; preds = %102, %90, %97, %545
  %548 = phi %class.Browser** [ %546, %545 ], [ %91, %97 ], [ %91, %90 ], [ %91, %102 ]
  %549 = phi double [ %540, %545 ], [ %92, %97 ], [ %92, %90 ], [ %92, %102 ]
  %550 = icmp eq %class.Browser** %94, %548
  br i1 %550, label %82, label %90
}

declare %class.BrowserList* @_ZN11BrowserList11GetInstanceEv() local_unnamed_addr #1

declare void @_ZNK7Browser25GetWindowTitleForMaxWidthEi(%"class.std::__1::basic_string.220"* sret, %class.Browser*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander19GroupsMatchingInputEPK7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEN4absl8optionalIN10tab_groups10TabGroupIdEEE(%"class.std::__1::vector.294"* noalias sret, %class.Browser* nocapture readonly, %"class.std::__1::basic_string.220"* dereferenceable(24), %"class.absl::optional.247"*) local_unnamed_addr #0 {
  %5 = alloca %"class.commander::FuzzyFinder", align 8
  %6 = alloca %"class.std::__1::vector.229", align 8
  %7 = alloca %"class.std::__1::vector.301", align 8
  %8 = alloca %"class.std::__1::basic_string.220", align 8
  %9 = alloca %"struct.commander::GroupMatch", align 8
  %10 = alloca %"class.tab_groups::TabGroupId", align 8
  %11 = alloca %"struct.commander::GroupMatch", align 8
  %12 = alloca %"class.tab_groups::TabGroupId", align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector.294"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = bitcast %"class.commander::FuzzyFinder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %5, %"class.std::__1::basic_string.220"* dereferenceable(24) %2) #11
  %17 = bitcast %"class.std::__1::vector.229"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %class.Browser, %class.Browser* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %21 = load %class.TabStripModel*, %class.TabStripModel** %20, align 8
  %22 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %class.TabGroupModel*, %class.TabGroupModel** %22, align 8
  %24 = bitcast %"class.std::__1::vector.301"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZNK13TabGroupModel13ListTabGroupsEv(%"class.std::__1::vector.301"* nonnull sret %7, %class.TabGroupModel* %23) #11
  %25 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %7, i64 0, i32 0, i32 0
  %26 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %7, i64 0, i32 0, i32 1
  %28 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %27, align 8
  %29 = icmp eq %"class.tab_groups::TabGroupId"* %26, %28
  br i1 %29, label %87, label %30

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.absl::optional.247", %"class.absl::optional.247"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.absl::optional.247", %"class.absl::optional.247"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::basic_string.220"* %8 to i8*
  %34 = bitcast %"class.std::__1::basic_string.220"* %8 to i8**
  %35 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string.220"* %8 to i16*
  %38 = bitcast %"class.std::__1::basic_string.220"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = bitcast %"class.std::__1::basic_string.220"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.commander::GroupMatch"* %11 to i8*
  %44 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string.220"* %45 to i8*
  %47 = getelementptr inbounds %"class.std::__1::basic_string.220", %"class.std::__1::basic_string.220"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::basic_string.220"* %45 to i8**
  %49 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string.220"* %45 to i16*
  %52 = bitcast %"class.std::__1::basic_string.220"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 2
  %55 = bitcast %"class.std::__1::vector.229"* %54 to i8*
  %56 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 3
  %57 = bitcast %"class.std::__1::vector.229"* %54 to i64*
  %58 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 2, i32 0, i32 1
  %59 = bitcast %"class.gfx::Range"** %58 to i64*
  %60 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"class.gfx::Range"** %60 to i64*
  %62 = bitcast double* %56 to i64*
  %63 = bitcast %"struct.commander::GroupMatch"** %13 to i64*
  %64 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %11, i64 0, i32 2, i32 0, i32 0
  %65 = bitcast %"struct.commander::GroupMatch"* %9 to i8*
  %66 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string.220"* %67 to i8*
  %69 = bitcast %"class.std::__1::basic_string.220"* %67 to i8**
  %70 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %71 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string.220"* %67 to i16*
  %73 = bitcast %"class.std::__1::basic_string.220"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 2
  %76 = bitcast %"class.std::__1::vector.229"* %75 to i8*
  %77 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 3
  %78 = bitcast %"class.std::__1::vector.229"* %75 to i64*
  %79 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.gfx::Range"** %79 to i64*
  %81 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.gfx::Range"** %81 to i64*
  %83 = bitcast double* %77 to i64*
  %84 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %9, i64 0, i32 2, i32 0, i32 0
  br label %102

85:                                               ; preds = %736
  %86 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %25, align 8
  br label %87

87:                                               ; preds = %85, %4
  %88 = phi %"class.tab_groups::TabGroupId"* [ %86, %85 ], [ %26, %4 ]
  %89 = icmp eq %"class.tab_groups::TabGroupId"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = ptrtoint %"class.tab_groups::TabGroupId"* %88 to i64
  %92 = bitcast %"class.tab_groups::TabGroupId"** %27 to i64*
  store i64 %91, i64* %92, align 8
  %93 = bitcast %"class.tab_groups::TabGroupId"* %88 to i8*
  call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  %95 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  %96 = icmp eq %"class.gfx::Range"* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = ptrtoint %"class.gfx::Range"* %95 to i64
  %99 = bitcast %"class.gfx::Range"** %19 to i64*
  store i64 %98, i64* %99, align 8
  %100 = bitcast %"class.gfx::Range"* %95 to i8*
  call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %94, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %16) #11
  ret void

102:                                              ; preds = %30, %736
  %103 = phi double [ 0x3FEE666666666666, %30 ], [ %737, %736 ]
  %104 = phi %"class.tab_groups::TabGroupId"* [ %26, %30 ], [ %738, %736 ]
  %105 = load i8, i8* %31, align 8, !range !31
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"* %32, %"class.tab_groups::TabGroupId"* dereferenceable(16) %104) #11
  br i1 %108, label %736, label %109

109:                                              ; preds = %102, %107
  %110 = call %class.TabGroup* @_ZNK13TabGroupModel11GetTabGroupERKN10tab_groups10TabGroupIdE(%class.TabGroupModel* %23, %"class.tab_groups::TabGroupId"* dereferenceable(16) %104) #11
  %111 = getelementptr inbounds %class.TabGroup, %class.TabGroup* %110, i64 0, i32 2, i32 0, i32 0, i32 0
  %112 = load %"class.tab_groups::TabGroupVisualData"*, %"class.tab_groups::TabGroupVisualData"** %111, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %113 = bitcast %"class.tab_groups::TabGroupVisualData"* %112 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  br label %122

120:                                              ; preds = %109
  %121 = zext i8 %115 to i64
  br label %122

122:                                              ; preds = %117, %120
  %123 = phi i64 [ %119, %117 ], [ %121, %120 ]
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK8TabGroup16GetContentStringEv(%"class.std::__1::basic_string.220"* nonnull sret %8, %class.TabGroup* %110) #11
  br label %299

126:                                              ; preds = %122
  br i1 %116, label %129, label %127

127:                                              ; preds = %126
  %128 = bitcast %"class.tab_groups::TabGroupVisualData"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %128, i64 24, i1 false) #11
  br label %299

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i16*, i16** %130, align 8
  %132 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = icmp ult i64 %133, 11
  br i1 %134, label %135, label %137

135:                                              ; preds = %129
  %136 = trunc i64 %133 to i8
  store i8 %136, i8* %39, align 1
  br label %151

137:                                              ; preds = %129
  %138 = icmp ugt i64 %133, 9223372036854775791
  br i1 %138, label %139, label %141

139:                                              ; preds = %137
  %140 = bitcast %"class.std::__1::basic_string.220"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %140) #12
  unreachable

141:                                              ; preds = %137
  %142 = add nuw nsw i64 %133, 8
  %143 = and i64 %142, -8
  %144 = icmp slt i64 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %141
  call void @abort() #12
  unreachable

146:                                              ; preds = %141
  %147 = shl i64 %143, 1
  %148 = call i8* @_Znwm(i64 %147) #13
  %149 = bitcast i8* %148 to i16*
  store i8* %148, i8** %34, align 8
  %150 = or i64 %143, -9223372036854775808
  store i64 %150, i64* %35, align 8
  store i64 %133, i64* %36, align 8
  br label %151

151:                                              ; preds = %146, %135
  %152 = phi i16* [ %37, %135 ], [ %149, %146 ]
  %153 = add nuw nsw i64 %133, 1
  %154 = add i64 %133, 1
  %155 = icmp ult i64 %154, 16
  br i1 %155, label %246, label %156

156:                                              ; preds = %151
  %157 = getelementptr i16, i16* %152, i64 1
  %158 = getelementptr i16, i16* %157, i64 %133
  %159 = getelementptr i16, i16* %131, i64 1
  %160 = getelementptr i16, i16* %159, i64 %133
  %161 = icmp ult i16* %152, %160
  %162 = icmp ult i16* %131, %158
  %163 = and i1 %161, %162
  br i1 %163, label %246, label %164

164:                                              ; preds = %156
  %165 = and i64 %154, -16
  %166 = sub i64 %153, %165
  %167 = getelementptr i16, i16* %131, i64 %165
  %168 = getelementptr i16, i16* %152, i64 %165
  %169 = add i64 %165, -16
  %170 = lshr exact i64 %169, 4
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 3
  %173 = icmp ult i64 %169, 48
  br i1 %173, label %225, label %174

174:                                              ; preds = %164
  %175 = sub nsw i64 %171, %172
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i64 [ 0, %174 ], [ %222, %176 ]
  %178 = phi i64 [ %175, %174 ], [ %223, %176 ]
  %179 = getelementptr i16, i16* %131, i64 %177
  %180 = getelementptr i16, i16* %152, i64 %177
  %181 = bitcast i16* %179 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !77
  %183 = getelementptr i16, i16* %179, i64 8
  %184 = bitcast i16* %183 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !77
  %186 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %186, align 2, !alias.scope !80, !noalias !77
  %187 = getelementptr i16, i16* %180, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %188, align 2, !alias.scope !80, !noalias !77
  %189 = or i64 %177, 16
  %190 = getelementptr i16, i16* %131, i64 %189
  %191 = getelementptr i16, i16* %152, i64 %189
  %192 = bitcast i16* %190 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !77
  %194 = getelementptr i16, i16* %190, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !77
  %197 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %197, align 2, !alias.scope !80, !noalias !77
  %198 = getelementptr i16, i16* %191, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %199, align 2, !alias.scope !80, !noalias !77
  %200 = or i64 %177, 32
  %201 = getelementptr i16, i16* %131, i64 %200
  %202 = getelementptr i16, i16* %152, i64 %200
  %203 = bitcast i16* %201 to <8 x i16>*
  %204 = load <8 x i16>, <8 x i16>* %203, align 2, !alias.scope !77
  %205 = getelementptr i16, i16* %201, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  %207 = load <8 x i16>, <8 x i16>* %206, align 2, !alias.scope !77
  %208 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %204, <8 x i16>* %208, align 2, !alias.scope !80, !noalias !77
  %209 = getelementptr i16, i16* %202, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %210, align 2, !alias.scope !80, !noalias !77
  %211 = or i64 %177, 48
  %212 = getelementptr i16, i16* %131, i64 %211
  %213 = getelementptr i16, i16* %152, i64 %211
  %214 = bitcast i16* %212 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2, !alias.scope !77
  %216 = getelementptr i16, i16* %212, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !77
  %219 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %219, align 2, !alias.scope !80, !noalias !77
  %220 = getelementptr i16, i16* %213, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %221, align 2, !alias.scope !80, !noalias !77
  %222 = add i64 %177, 64
  %223 = add i64 %178, -4
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %176, !llvm.loop !82

225:                                              ; preds = %176, %164
  %226 = phi i64 [ 0, %164 ], [ %222, %176 ]
  %227 = icmp eq i64 %172, 0
  br i1 %227, label %244, label %228

228:                                              ; preds = %225, %228
  %229 = phi i64 [ %241, %228 ], [ %226, %225 ]
  %230 = phi i64 [ %242, %228 ], [ %172, %225 ]
  %231 = getelementptr i16, i16* %131, i64 %229
  %232 = getelementptr i16, i16* %152, i64 %229
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2, !alias.scope !77
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2, !alias.scope !77
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2, !alias.scope !80, !noalias !77
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2, !alias.scope !80, !noalias !77
  %241 = add i64 %229, 16
  %242 = add i64 %230, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %228, !llvm.loop !83

244:                                              ; preds = %228, %225
  %245 = icmp eq i64 %154, %165
  br i1 %245, label %299, label %246

246:                                              ; preds = %244, %156, %151
  %247 = phi i64 [ %153, %156 ], [ %153, %151 ], [ %166, %244 ]
  %248 = phi i16* [ %131, %156 ], [ %131, %151 ], [ %167, %244 ]
  %249 = phi i16* [ %152, %156 ], [ %152, %151 ], [ %168, %244 ]
  %250 = add i64 %247, -1
  %251 = and i64 %247, 7
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %264, label %253

253:                                              ; preds = %246, %253
  %254 = phi i64 [ %259, %253 ], [ %247, %246 ]
  %255 = phi i16* [ %261, %253 ], [ %248, %246 ]
  %256 = phi i16* [ %260, %253 ], [ %249, %246 ]
  %257 = phi i64 [ %262, %253 ], [ %251, %246 ]
  %258 = load i16, i16* %255, align 2
  store i16 %258, i16* %256, align 2
  %259 = add i64 %254, -1
  %260 = getelementptr inbounds i16, i16* %256, i64 1
  %261 = getelementptr inbounds i16, i16* %255, i64 1
  %262 = add i64 %257, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %253, !llvm.loop !84

264:                                              ; preds = %253, %246
  %265 = phi i64 [ %247, %246 ], [ %259, %253 ]
  %266 = phi i16* [ %248, %246 ], [ %261, %253 ]
  %267 = phi i16* [ %249, %246 ], [ %260, %253 ]
  %268 = icmp ult i64 %250, 7
  br i1 %268, label %299, label %269

269:                                              ; preds = %264, %269
  %270 = phi i64 [ %295, %269 ], [ %265, %264 ]
  %271 = phi i16* [ %297, %269 ], [ %266, %264 ]
  %272 = phi i16* [ %296, %269 ], [ %267, %264 ]
  %273 = load i16, i16* %271, align 2
  store i16 %273, i16* %272, align 2
  %274 = getelementptr inbounds i16, i16* %272, i64 1
  %275 = getelementptr inbounds i16, i16* %271, i64 1
  %276 = load i16, i16* %275, align 2
  store i16 %276, i16* %274, align 2
  %277 = getelementptr inbounds i16, i16* %272, i64 2
  %278 = getelementptr inbounds i16, i16* %271, i64 2
  %279 = load i16, i16* %278, align 2
  store i16 %279, i16* %277, align 2
  %280 = getelementptr inbounds i16, i16* %272, i64 3
  %281 = getelementptr inbounds i16, i16* %271, i64 3
  %282 = load i16, i16* %281, align 2
  store i16 %282, i16* %280, align 2
  %283 = getelementptr inbounds i16, i16* %272, i64 4
  %284 = getelementptr inbounds i16, i16* %271, i64 4
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %283, align 2
  %286 = getelementptr inbounds i16, i16* %272, i64 5
  %287 = getelementptr inbounds i16, i16* %271, i64 5
  %288 = load i16, i16* %287, align 2
  store i16 %288, i16* %286, align 2
  %289 = getelementptr inbounds i16, i16* %272, i64 6
  %290 = getelementptr inbounds i16, i16* %271, i64 6
  %291 = load i16, i16* %290, align 2
  store i16 %291, i16* %289, align 2
  %292 = getelementptr inbounds i16, i16* %272, i64 7
  %293 = getelementptr inbounds i16, i16* %271, i64 7
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %270, -8
  %296 = getelementptr inbounds i16, i16* %272, i64 8
  %297 = getelementptr inbounds i16, i16* %271, i64 8
  %298 = icmp eq i64 %295, 0
  br i1 %298, label %299, label %269, !llvm.loop !85

299:                                              ; preds = %264, %269, %244, %127, %125
  %300 = load i8, i8* %41, align 1
  %301 = icmp slt i8 %300, 0
  %302 = load i64, i64* %42, align 8
  %303 = zext i8 %300 to i64
  %304 = select i1 %301, i64 %302, i64 %303
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %515

306:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %65) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 bitcast (%"struct.commander::GroupMatch"* @__const._ZN9commander19GroupsMatchingInputEPK7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEN4absl8optionalIN10tab_groups10TabGroupIdEEE.match.1 to i8*), i64 72, i1 false)
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %10, %"class.tab_groups::TabGroupId"* dereferenceable(16) %104) #11
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %66, %"class.tab_groups::TabGroupId"* nonnull dereferenceable(16) %10) #11
  %307 = load i8, i8* %39, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %310, label %309

309:                                              ; preds = %306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %33, i64 24, i1 false) #11
  br label %478

310:                                              ; preds = %306
  %311 = load i16*, i16** %47, align 8
  %312 = load i64, i64* %36, align 8
  %313 = icmp ult i64 %312, 11
  br i1 %313, label %314, label %316

314:                                              ; preds = %310
  %315 = trunc i64 %312 to i8
  store i8 %315, i8* %74, align 1
  br label %330

316:                                              ; preds = %310
  %317 = icmp ugt i64 %312, 9223372036854775791
  br i1 %317, label %318, label %320

318:                                              ; preds = %316
  %319 = bitcast %"class.std::__1::basic_string.220"* %67 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %319) #12
  unreachable

320:                                              ; preds = %316
  %321 = add nuw nsw i64 %312, 8
  %322 = and i64 %321, -8
  %323 = icmp slt i64 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %320
  call void @abort() #12
  unreachable

325:                                              ; preds = %320
  %326 = shl i64 %322, 1
  %327 = call i8* @_Znwm(i64 %326) #13
  %328 = bitcast i8* %327 to i16*
  store i8* %327, i8** %69, align 8
  %329 = or i64 %322, -9223372036854775808
  store i64 %329, i64* %70, align 8
  store i64 %312, i64* %71, align 8
  br label %330

330:                                              ; preds = %325, %314
  %331 = phi i16* [ %72, %314 ], [ %328, %325 ]
  %332 = add nuw nsw i64 %312, 1
  %333 = add i64 %312, 1
  %334 = icmp ult i64 %333, 16
  br i1 %334, label %425, label %335

335:                                              ; preds = %330
  %336 = getelementptr i16, i16* %331, i64 1
  %337 = getelementptr i16, i16* %336, i64 %312
  %338 = getelementptr i16, i16* %311, i64 1
  %339 = getelementptr i16, i16* %338, i64 %312
  %340 = icmp ult i16* %331, %339
  %341 = icmp ult i16* %311, %337
  %342 = and i1 %340, %341
  br i1 %342, label %425, label %343

343:                                              ; preds = %335
  %344 = and i64 %333, -16
  %345 = sub i64 %332, %344
  %346 = getelementptr i16, i16* %311, i64 %344
  %347 = getelementptr i16, i16* %331, i64 %344
  %348 = add i64 %344, -16
  %349 = lshr exact i64 %348, 4
  %350 = add nuw nsw i64 %349, 1
  %351 = and i64 %350, 3
  %352 = icmp ult i64 %348, 48
  br i1 %352, label %404, label %353

353:                                              ; preds = %343
  %354 = sub nsw i64 %350, %351
  br label %355

355:                                              ; preds = %355, %353
  %356 = phi i64 [ 0, %353 ], [ %401, %355 ]
  %357 = phi i64 [ %354, %353 ], [ %402, %355 ]
  %358 = getelementptr i16, i16* %311, i64 %356
  %359 = getelementptr i16, i16* %331, i64 %356
  %360 = bitcast i16* %358 to <8 x i16>*
  %361 = load <8 x i16>, <8 x i16>* %360, align 2, !alias.scope !86
  %362 = getelementptr i16, i16* %358, i64 8
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !86
  %365 = bitcast i16* %359 to <8 x i16>*
  store <8 x i16> %361, <8 x i16>* %365, align 2, !alias.scope !89, !noalias !86
  %366 = getelementptr i16, i16* %359, i64 8
  %367 = bitcast i16* %366 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %367, align 2, !alias.scope !89, !noalias !86
  %368 = or i64 %356, 16
  %369 = getelementptr i16, i16* %311, i64 %368
  %370 = getelementptr i16, i16* %331, i64 %368
  %371 = bitcast i16* %369 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !86
  %373 = getelementptr i16, i16* %369, i64 8
  %374 = bitcast i16* %373 to <8 x i16>*
  %375 = load <8 x i16>, <8 x i16>* %374, align 2, !alias.scope !86
  %376 = bitcast i16* %370 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %376, align 2, !alias.scope !89, !noalias !86
  %377 = getelementptr i16, i16* %370, i64 8
  %378 = bitcast i16* %377 to <8 x i16>*
  store <8 x i16> %375, <8 x i16>* %378, align 2, !alias.scope !89, !noalias !86
  %379 = or i64 %356, 32
  %380 = getelementptr i16, i16* %311, i64 %379
  %381 = getelementptr i16, i16* %331, i64 %379
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !86
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !86
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !89, !noalias !86
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !89, !noalias !86
  %390 = or i64 %356, 48
  %391 = getelementptr i16, i16* %311, i64 %390
  %392 = getelementptr i16, i16* %331, i64 %390
  %393 = bitcast i16* %391 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !86
  %395 = getelementptr i16, i16* %391, i64 8
  %396 = bitcast i16* %395 to <8 x i16>*
  %397 = load <8 x i16>, <8 x i16>* %396, align 2, !alias.scope !86
  %398 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %398, align 2, !alias.scope !89, !noalias !86
  %399 = getelementptr i16, i16* %392, i64 8
  %400 = bitcast i16* %399 to <8 x i16>*
  store <8 x i16> %397, <8 x i16>* %400, align 2, !alias.scope !89, !noalias !86
  %401 = add i64 %356, 64
  %402 = add i64 %357, -4
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %355, !llvm.loop !91

404:                                              ; preds = %355, %343
  %405 = phi i64 [ 0, %343 ], [ %401, %355 ]
  %406 = icmp eq i64 %351, 0
  br i1 %406, label %423, label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %420, %407 ], [ %405, %404 ]
  %409 = phi i64 [ %421, %407 ], [ %351, %404 ]
  %410 = getelementptr i16, i16* %311, i64 %408
  %411 = getelementptr i16, i16* %331, i64 %408
  %412 = bitcast i16* %410 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !86
  %414 = getelementptr i16, i16* %410, i64 8
  %415 = bitcast i16* %414 to <8 x i16>*
  %416 = load <8 x i16>, <8 x i16>* %415, align 2, !alias.scope !86
  %417 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %417, align 2, !alias.scope !89, !noalias !86
  %418 = getelementptr i16, i16* %411, i64 8
  %419 = bitcast i16* %418 to <8 x i16>*
  store <8 x i16> %416, <8 x i16>* %419, align 2, !alias.scope !89, !noalias !86
  %420 = add i64 %408, 16
  %421 = add i64 %409, -1
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %423, label %407, !llvm.loop !92

423:                                              ; preds = %407, %404
  %424 = icmp eq i64 %333, %344
  br i1 %424, label %478, label %425

425:                                              ; preds = %423, %335, %330
  %426 = phi i64 [ %332, %335 ], [ %332, %330 ], [ %345, %423 ]
  %427 = phi i16* [ %311, %335 ], [ %311, %330 ], [ %346, %423 ]
  %428 = phi i16* [ %331, %335 ], [ %331, %330 ], [ %347, %423 ]
  %429 = add i64 %426, -1
  %430 = and i64 %426, 7
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %443, label %432

432:                                              ; preds = %425, %432
  %433 = phi i64 [ %438, %432 ], [ %426, %425 ]
  %434 = phi i16* [ %440, %432 ], [ %427, %425 ]
  %435 = phi i16* [ %439, %432 ], [ %428, %425 ]
  %436 = phi i64 [ %441, %432 ], [ %430, %425 ]
  %437 = load i16, i16* %434, align 2
  store i16 %437, i16* %435, align 2
  %438 = add i64 %433, -1
  %439 = getelementptr inbounds i16, i16* %435, i64 1
  %440 = getelementptr inbounds i16, i16* %434, i64 1
  %441 = add i64 %436, -1
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %443, label %432, !llvm.loop !93

443:                                              ; preds = %432, %425
  %444 = phi i64 [ %426, %425 ], [ %438, %432 ]
  %445 = phi i16* [ %427, %425 ], [ %440, %432 ]
  %446 = phi i16* [ %428, %425 ], [ %439, %432 ]
  %447 = icmp ult i64 %429, 7
  br i1 %447, label %478, label %448

448:                                              ; preds = %443, %448
  %449 = phi i64 [ %474, %448 ], [ %444, %443 ]
  %450 = phi i16* [ %476, %448 ], [ %445, %443 ]
  %451 = phi i16* [ %475, %448 ], [ %446, %443 ]
  %452 = load i16, i16* %450, align 2
  store i16 %452, i16* %451, align 2
  %453 = getelementptr inbounds i16, i16* %451, i64 1
  %454 = getelementptr inbounds i16, i16* %450, i64 1
  %455 = load i16, i16* %454, align 2
  store i16 %455, i16* %453, align 2
  %456 = getelementptr inbounds i16, i16* %451, i64 2
  %457 = getelementptr inbounds i16, i16* %450, i64 2
  %458 = load i16, i16* %457, align 2
  store i16 %458, i16* %456, align 2
  %459 = getelementptr inbounds i16, i16* %451, i64 3
  %460 = getelementptr inbounds i16, i16* %450, i64 3
  %461 = load i16, i16* %460, align 2
  store i16 %461, i16* %459, align 2
  %462 = getelementptr inbounds i16, i16* %451, i64 4
  %463 = getelementptr inbounds i16, i16* %450, i64 4
  %464 = load i16, i16* %463, align 2
  store i16 %464, i16* %462, align 2
  %465 = getelementptr inbounds i16, i16* %451, i64 5
  %466 = getelementptr inbounds i16, i16* %450, i64 5
  %467 = load i16, i16* %466, align 2
  store i16 %467, i16* %465, align 2
  %468 = getelementptr inbounds i16, i16* %451, i64 6
  %469 = getelementptr inbounds i16, i16* %450, i64 6
  %470 = load i16, i16* %469, align 2
  store i16 %470, i16* %468, align 2
  %471 = getelementptr inbounds i16, i16* %451, i64 7
  %472 = getelementptr inbounds i16, i16* %450, i64 7
  %473 = load i16, i16* %472, align 2
  store i16 %473, i16* %471, align 2
  %474 = add i64 %449, -8
  %475 = getelementptr inbounds i16, i16* %451, i64 8
  %476 = getelementptr inbounds i16, i16* %450, i64 8
  %477 = icmp eq i64 %474, 0
  br i1 %477, label %478, label %448, !llvm.loop !94

478:                                              ; preds = %443, %448, %423, %309
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11
  store double %103, double* %77, align 8
  %479 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %13, align 8
  %480 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %14, align 8
  %481 = icmp ult %"struct.commander::GroupMatch"* %479, %480
  br i1 %481, label %482, label %502

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 0, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %483, %"class.tab_groups::TabGroupId"* nonnull dereferenceable(16) %66) #11
  %484 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 0, i32 1
  %485 = bitcast %"class.std::__1::basic_string.220"* %484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %485, i8* align 8 %68, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11
  %486 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 0, i32 2
  %487 = bitcast %"class.std::__1::vector.229"* %486 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %487, i8 0, i64 24, i1 false) #11
  %488 = load i64, i64* %78, align 8
  %489 = bitcast %"class.std::__1::vector.229"* %486 to i64*
  store i64 %488, i64* %489, align 8
  %490 = load i64, i64* %80, align 8
  %491 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 0, i32 2, i32 0, i32 1
  %492 = bitcast %"class.gfx::Range"** %491 to i64*
  store i64 %490, i64* %492, align 8
  %493 = load i64, i64* %82, align 8
  %494 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %495 = bitcast %"class.gfx::Range"** %494 to i64*
  store i64 %493, i64* %495, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11
  %496 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 0, i32 3
  %497 = load i64, i64* %83, align 8
  %498 = bitcast double* %496 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %479, i64 1
  %500 = ptrtoint %"struct.commander::GroupMatch"* %499 to i64
  store i64 %500, i64* %63, align 8
  %501 = fmul double %103, 0x3FEE666666666666
  br label %509

502:                                              ; preds = %478
  call void @_ZNSt3__16vectorIN9commander10GroupMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.294"* %0, %"struct.commander::GroupMatch"* nonnull dereferenceable(72) %9) #11
  %503 = load %"class.gfx::Range"*, %"class.gfx::Range"** %84, align 8
  %504 = fmul double %103, 0x3FEE666666666666
  %505 = icmp eq %"class.gfx::Range"* %503, null
  br i1 %505, label %509, label %506

506:                                              ; preds = %502
  %507 = bitcast %"class.gfx::Range"* %503 to i8*
  %508 = ptrtoint %"class.gfx::Range"* %503 to i64
  store i64 %508, i64* %80, align 8
  call void @_ZdlPv(i8* %507) #13
  br label %509

509:                                              ; preds = %482, %506, %502
  %510 = phi double [ %501, %482 ], [ %504, %506 ], [ %504, %502 ]
  %511 = load i8, i8* %74, align 1
  %512 = icmp slt i8 %511, 0
  br i1 %512, label %513, label %726

513:                                              ; preds = %509
  %514 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %514) #13
  br label %726

515:                                              ; preds = %299
  %516 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %5, %"class.std::__1::basic_string.220"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.229"* nonnull %6) #11
  %517 = fcmp ogt double %516, 0.000000e+00
  br i1 %517, label %518, label %729

518:                                              ; preds = %515
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast (%"struct.commander::GroupMatch"* @__const._ZN9commander19GroupsMatchingInputEPK7BrowserRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEN4absl8optionalIN10tab_groups10TabGroupIdEEE.match.1 to i8*), i64 72, i1 false)
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %12, %"class.tab_groups::TabGroupId"* dereferenceable(16) %104) #11
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %44, %"class.tab_groups::TabGroupId"* nonnull dereferenceable(16) %12) #11
  %519 = load i8, i8* %39, align 1
  %520 = icmp slt i8 %519, 0
  br i1 %520, label %522, label %521

521:                                              ; preds = %518
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %33, i64 24, i1 false) #11
  br label %690

522:                                              ; preds = %518
  %523 = load i16*, i16** %47, align 8
  %524 = load i64, i64* %36, align 8
  %525 = icmp ult i64 %524, 11
  br i1 %525, label %526, label %528

526:                                              ; preds = %522
  %527 = trunc i64 %524 to i8
  store i8 %527, i8* %53, align 1
  br label %542

528:                                              ; preds = %522
  %529 = icmp ugt i64 %524, 9223372036854775791
  br i1 %529, label %530, label %532

530:                                              ; preds = %528
  %531 = bitcast %"class.std::__1::basic_string.220"* %45 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %531) #12
  unreachable

532:                                              ; preds = %528
  %533 = add nuw nsw i64 %524, 8
  %534 = and i64 %533, -8
  %535 = icmp slt i64 %534, 0
  br i1 %535, label %536, label %537

536:                                              ; preds = %532
  call void @abort() #12
  unreachable

537:                                              ; preds = %532
  %538 = shl i64 %534, 1
  %539 = call i8* @_Znwm(i64 %538) #13
  %540 = bitcast i8* %539 to i16*
  store i8* %539, i8** %48, align 8
  %541 = or i64 %534, -9223372036854775808
  store i64 %541, i64* %49, align 8
  store i64 %524, i64* %50, align 8
  br label %542

542:                                              ; preds = %537, %526
  %543 = phi i16* [ %51, %526 ], [ %540, %537 ]
  %544 = add nuw nsw i64 %524, 1
  %545 = add i64 %524, 1
  %546 = icmp ult i64 %545, 16
  br i1 %546, label %637, label %547

547:                                              ; preds = %542
  %548 = getelementptr i16, i16* %543, i64 1
  %549 = getelementptr i16, i16* %548, i64 %524
  %550 = getelementptr i16, i16* %523, i64 1
  %551 = getelementptr i16, i16* %550, i64 %524
  %552 = icmp ult i16* %543, %551
  %553 = icmp ult i16* %523, %549
  %554 = and i1 %552, %553
  br i1 %554, label %637, label %555

555:                                              ; preds = %547
  %556 = and i64 %545, -16
  %557 = sub i64 %544, %556
  %558 = getelementptr i16, i16* %523, i64 %556
  %559 = getelementptr i16, i16* %543, i64 %556
  %560 = add i64 %556, -16
  %561 = lshr exact i64 %560, 4
  %562 = add nuw nsw i64 %561, 1
  %563 = and i64 %562, 3
  %564 = icmp ult i64 %560, 48
  br i1 %564, label %616, label %565

565:                                              ; preds = %555
  %566 = sub nsw i64 %562, %563
  br label %567

567:                                              ; preds = %567, %565
  %568 = phi i64 [ 0, %565 ], [ %613, %567 ]
  %569 = phi i64 [ %566, %565 ], [ %614, %567 ]
  %570 = getelementptr i16, i16* %523, i64 %568
  %571 = getelementptr i16, i16* %543, i64 %568
  %572 = bitcast i16* %570 to <8 x i16>*
  %573 = load <8 x i16>, <8 x i16>* %572, align 2, !alias.scope !95
  %574 = getelementptr i16, i16* %570, i64 8
  %575 = bitcast i16* %574 to <8 x i16>*
  %576 = load <8 x i16>, <8 x i16>* %575, align 2, !alias.scope !95
  %577 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %573, <8 x i16>* %577, align 2, !alias.scope !98, !noalias !95
  %578 = getelementptr i16, i16* %571, i64 8
  %579 = bitcast i16* %578 to <8 x i16>*
  store <8 x i16> %576, <8 x i16>* %579, align 2, !alias.scope !98, !noalias !95
  %580 = or i64 %568, 16
  %581 = getelementptr i16, i16* %523, i64 %580
  %582 = getelementptr i16, i16* %543, i64 %580
  %583 = bitcast i16* %581 to <8 x i16>*
  %584 = load <8 x i16>, <8 x i16>* %583, align 2, !alias.scope !95
  %585 = getelementptr i16, i16* %581, i64 8
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !95
  %588 = bitcast i16* %582 to <8 x i16>*
  store <8 x i16> %584, <8 x i16>* %588, align 2, !alias.scope !98, !noalias !95
  %589 = getelementptr i16, i16* %582, i64 8
  %590 = bitcast i16* %589 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %590, align 2, !alias.scope !98, !noalias !95
  %591 = or i64 %568, 32
  %592 = getelementptr i16, i16* %523, i64 %591
  %593 = getelementptr i16, i16* %543, i64 %591
  %594 = bitcast i16* %592 to <8 x i16>*
  %595 = load <8 x i16>, <8 x i16>* %594, align 2, !alias.scope !95
  %596 = getelementptr i16, i16* %592, i64 8
  %597 = bitcast i16* %596 to <8 x i16>*
  %598 = load <8 x i16>, <8 x i16>* %597, align 2, !alias.scope !95
  %599 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %595, <8 x i16>* %599, align 2, !alias.scope !98, !noalias !95
  %600 = getelementptr i16, i16* %593, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !98, !noalias !95
  %602 = or i64 %568, 48
  %603 = getelementptr i16, i16* %523, i64 %602
  %604 = getelementptr i16, i16* %543, i64 %602
  %605 = bitcast i16* %603 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !95
  %607 = getelementptr i16, i16* %603, i64 8
  %608 = bitcast i16* %607 to <8 x i16>*
  %609 = load <8 x i16>, <8 x i16>* %608, align 2, !alias.scope !95
  %610 = bitcast i16* %604 to <8 x i16>*
  store <8 x i16> %606, <8 x i16>* %610, align 2, !alias.scope !98, !noalias !95
  %611 = getelementptr i16, i16* %604, i64 8
  %612 = bitcast i16* %611 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %612, align 2, !alias.scope !98, !noalias !95
  %613 = add i64 %568, 64
  %614 = add i64 %569, -4
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %616, label %567, !llvm.loop !100

616:                                              ; preds = %567, %555
  %617 = phi i64 [ 0, %555 ], [ %613, %567 ]
  %618 = icmp eq i64 %563, 0
  br i1 %618, label %635, label %619

619:                                              ; preds = %616, %619
  %620 = phi i64 [ %632, %619 ], [ %617, %616 ]
  %621 = phi i64 [ %633, %619 ], [ %563, %616 ]
  %622 = getelementptr i16, i16* %523, i64 %620
  %623 = getelementptr i16, i16* %543, i64 %620
  %624 = bitcast i16* %622 to <8 x i16>*
  %625 = load <8 x i16>, <8 x i16>* %624, align 2, !alias.scope !95
  %626 = getelementptr i16, i16* %622, i64 8
  %627 = bitcast i16* %626 to <8 x i16>*
  %628 = load <8 x i16>, <8 x i16>* %627, align 2, !alias.scope !95
  %629 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %625, <8 x i16>* %629, align 2, !alias.scope !98, !noalias !95
  %630 = getelementptr i16, i16* %623, i64 8
  %631 = bitcast i16* %630 to <8 x i16>*
  store <8 x i16> %628, <8 x i16>* %631, align 2, !alias.scope !98, !noalias !95
  %632 = add i64 %620, 16
  %633 = add i64 %621, -1
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %619, !llvm.loop !101

635:                                              ; preds = %619, %616
  %636 = icmp eq i64 %545, %556
  br i1 %636, label %690, label %637

637:                                              ; preds = %635, %547, %542
  %638 = phi i64 [ %544, %547 ], [ %544, %542 ], [ %557, %635 ]
  %639 = phi i16* [ %523, %547 ], [ %523, %542 ], [ %558, %635 ]
  %640 = phi i16* [ %543, %547 ], [ %543, %542 ], [ %559, %635 ]
  %641 = add i64 %638, -1
  %642 = and i64 %638, 7
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %655, label %644

644:                                              ; preds = %637, %644
  %645 = phi i64 [ %650, %644 ], [ %638, %637 ]
  %646 = phi i16* [ %652, %644 ], [ %639, %637 ]
  %647 = phi i16* [ %651, %644 ], [ %640, %637 ]
  %648 = phi i64 [ %653, %644 ], [ %642, %637 ]
  %649 = load i16, i16* %646, align 2
  store i16 %649, i16* %647, align 2
  %650 = add i64 %645, -1
  %651 = getelementptr inbounds i16, i16* %647, i64 1
  %652 = getelementptr inbounds i16, i16* %646, i64 1
  %653 = add i64 %648, -1
  %654 = icmp eq i64 %653, 0
  br i1 %654, label %655, label %644, !llvm.loop !102

655:                                              ; preds = %644, %637
  %656 = phi i64 [ %638, %637 ], [ %650, %644 ]
  %657 = phi i16* [ %639, %637 ], [ %652, %644 ]
  %658 = phi i16* [ %640, %637 ], [ %651, %644 ]
  %659 = icmp ult i64 %641, 7
  br i1 %659, label %690, label %660

660:                                              ; preds = %655, %660
  %661 = phi i64 [ %686, %660 ], [ %656, %655 ]
  %662 = phi i16* [ %688, %660 ], [ %657, %655 ]
  %663 = phi i16* [ %687, %660 ], [ %658, %655 ]
  %664 = load i16, i16* %662, align 2
  store i16 %664, i16* %663, align 2
  %665 = getelementptr inbounds i16, i16* %663, i64 1
  %666 = getelementptr inbounds i16, i16* %662, i64 1
  %667 = load i16, i16* %666, align 2
  store i16 %667, i16* %665, align 2
  %668 = getelementptr inbounds i16, i16* %663, i64 2
  %669 = getelementptr inbounds i16, i16* %662, i64 2
  %670 = load i16, i16* %669, align 2
  store i16 %670, i16* %668, align 2
  %671 = getelementptr inbounds i16, i16* %663, i64 3
  %672 = getelementptr inbounds i16, i16* %662, i64 3
  %673 = load i16, i16* %672, align 2
  store i16 %673, i16* %671, align 2
  %674 = getelementptr inbounds i16, i16* %663, i64 4
  %675 = getelementptr inbounds i16, i16* %662, i64 4
  %676 = load i16, i16* %675, align 2
  store i16 %676, i16* %674, align 2
  %677 = getelementptr inbounds i16, i16* %663, i64 5
  %678 = getelementptr inbounds i16, i16* %662, i64 5
  %679 = load i16, i16* %678, align 2
  store i16 %679, i16* %677, align 2
  %680 = getelementptr inbounds i16, i16* %663, i64 6
  %681 = getelementptr inbounds i16, i16* %662, i64 6
  %682 = load i16, i16* %681, align 2
  store i16 %682, i16* %680, align 2
  %683 = getelementptr inbounds i16, i16* %663, i64 7
  %684 = getelementptr inbounds i16, i16* %662, i64 7
  %685 = load i16, i16* %684, align 2
  store i16 %685, i16* %683, align 2
  %686 = add i64 %661, -8
  %687 = getelementptr inbounds i16, i16* %663, i64 8
  %688 = getelementptr inbounds i16, i16* %662, i64 8
  %689 = icmp eq i64 %686, 0
  br i1 %689, label %690, label %660, !llvm.loop !103

690:                                              ; preds = %655, %660, %635, %521
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  store double %516, double* %56, align 8
  %691 = load %"class.gfx::Range"*, %"class.gfx::Range"** %18, align 8
  %692 = load %"class.gfx::Range"*, %"class.gfx::Range"** %19, align 8
  call void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.229"* %54, %"class.gfx::Range"* %691, %"class.gfx::Range"* %692) #11
  %693 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %13, align 8
  %694 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %14, align 8
  %695 = icmp ult %"struct.commander::GroupMatch"* %693, %694
  br i1 %695, label %696, label %715

696:                                              ; preds = %690
  %697 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 0, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %697, %"class.tab_groups::TabGroupId"* nonnull dereferenceable(16) %44) #11
  %698 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 0, i32 1
  %699 = bitcast %"class.std::__1::basic_string.220"* %698 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %699, i8* align 8 %46, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %700 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 0, i32 2
  %701 = bitcast %"class.std::__1::vector.229"* %700 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %701, i8 0, i64 24, i1 false) #11
  %702 = load i64, i64* %57, align 8
  %703 = bitcast %"class.std::__1::vector.229"* %700 to i64*
  store i64 %702, i64* %703, align 8
  %704 = load i64, i64* %59, align 8
  %705 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 0, i32 2, i32 0, i32 1
  %706 = bitcast %"class.gfx::Range"** %705 to i64*
  store i64 %704, i64* %706, align 8
  %707 = load i64, i64* %61, align 8
  %708 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %709 = bitcast %"class.gfx::Range"** %708 to i64*
  store i64 %707, i64* %709, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  %710 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 0, i32 3
  %711 = load i64, i64* %62, align 8
  %712 = bitcast double* %710 to i64*
  store i64 %711, i64* %712, align 8
  %713 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %693, i64 1
  %714 = ptrtoint %"struct.commander::GroupMatch"* %713 to i64
  store i64 %714, i64* %63, align 8
  br label %721

715:                                              ; preds = %690
  call void @_ZNSt3__16vectorIN9commander10GroupMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.294"* %0, %"struct.commander::GroupMatch"* nonnull dereferenceable(72) %11) #11
  %716 = load %"class.gfx::Range"*, %"class.gfx::Range"** %64, align 8
  %717 = icmp eq %"class.gfx::Range"* %716, null
  br i1 %717, label %721, label %718

718:                                              ; preds = %715
  %719 = bitcast %"class.gfx::Range"* %716 to i8*
  %720 = ptrtoint %"class.gfx::Range"* %716 to i64
  store i64 %720, i64* %59, align 8
  call void @_ZdlPv(i8* %719) #13
  br label %721

721:                                              ; preds = %696, %718, %715
  %722 = load i8, i8* %53, align 1
  %723 = icmp slt i8 %722, 0
  br i1 %723, label %724, label %726

724:                                              ; preds = %721
  %725 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %725) #13
  br label %726

726:                                              ; preds = %724, %721, %513, %509
  %727 = phi i8* [ %65, %509 ], [ %65, %513 ], [ %43, %721 ], [ %43, %724 ]
  %728 = phi double [ %510, %509 ], [ %510, %513 ], [ %103, %721 ], [ %103, %724 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %727) #11
  br label %729

729:                                              ; preds = %726, %515
  %730 = phi double [ %103, %515 ], [ %728, %726 ]
  %731 = load i8, i8* %39, align 1
  %732 = icmp slt i8 %731, 0
  br i1 %732, label %733, label %735

733:                                              ; preds = %729
  %734 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %734) #13
  br label %735

735:                                              ; preds = %729, %733
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %736

736:                                              ; preds = %107, %735
  %737 = phi double [ %730, %735 ], [ %103, %107 ]
  %738 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %104, i64 1
  %739 = icmp eq %"class.tab_groups::TabGroupId"* %738, %28
  br i1 %739, label %85, label %102
}

declare void @_ZNK13TabGroupModel13ListTabGroupsEv(%"class.std::__1::vector.301"* sret, %class.TabGroupModel*) local_unnamed_addr #1

declare %class.TabGroup* @_ZNK13TabGroupModel11GetTabGroupERKN10tab_groups10TabGroupIdE(%class.TabGroupModel*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK8TabGroup16GetContentStringEv(%"class.std::__1::basic_string.220"* sret, %class.TabGroup*) local_unnamed_addr #1

declare zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"*, %"class.std::__1::basic_string.220"* dereferenceable(24), double, %"class.std::__1::vector.229"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN9commander8TabMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.252"*, %"struct.commander::TabMatch"* dereferenceable(64)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.commander::TabMatch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.252"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.252"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.commander::TabMatch"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.commander::TabMatch"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.commander::TabMatch"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %35
  %39 = ptrtoint %"struct.commander::TabMatch"* %38 to i64
  %40 = bitcast %"struct.commander::TabMatch"* %1 to i64*
  %41 = bitcast %"struct.commander::TabMatch"* %37 to i64*
  %42 = load i64, i64* %40, align 8
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %9, i32 2
  %44 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 2
  %45 = bitcast %"class.std::__1::basic_string.220"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string.220"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %9, i32 3
  %48 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3
  %49 = bitcast %"class.std::__1::vector.229"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = bitcast %"class.std::__1::vector.229"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.229"* %47 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3, i32 0, i32 1
  %54 = bitcast %"class.gfx::Range"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %9, i32 3, i32 0, i32 1
  %57 = bitcast %"class.gfx::Range"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.gfx::Range"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %9, i32 3, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.gfx::Range"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.std::__1::vector.229"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %36, i64 %9, i32 4
  %65 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %1, i64 0, i32 4
  %66 = bitcast double* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast double* %64 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %37, i64 1
  %70 = ptrtoint %"struct.commander::TabMatch"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %71, align 8
  %73 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %3, align 8
  %74 = icmp eq %"struct.commander::TabMatch"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %34
  %76 = ptrtoint %"struct.commander::TabMatch"* %72 to i64
  br label %115

77:                                               ; preds = %34, %77
  %78 = phi %"struct.commander::TabMatch"* [ %80, %77 ], [ %37, %34 ]
  %79 = phi %"struct.commander::TabMatch"* [ %81, %77 ], [ %73, %34 ]
  %80 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %79, i64 -1
  %82 = bitcast %"struct.commander::TabMatch"* %81 to i64*
  %83 = bitcast %"struct.commander::TabMatch"* %80 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %78, i64 -1, i32 2
  %86 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %79, i64 -1, i32 2
  %87 = bitcast %"class.std::__1::basic_string.220"* %85 to i8*
  %88 = bitcast %"class.std::__1::basic_string.220"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #11
  %89 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %78, i64 -1, i32 3
  %90 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %79, i64 -1, i32 3
  %91 = bitcast %"class.std::__1::vector.229"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #11
  %92 = bitcast %"class.std::__1::vector.229"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.229"* %89 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %79, i64 -1, i32 3, i32 0, i32 1
  %96 = bitcast %"class.gfx::Range"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %78, i64 -1, i32 3, i32 0, i32 1
  %99 = bitcast %"class.gfx::Range"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %79, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"class.gfx::Range"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %78, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"class.gfx::Range"** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast %"class.std::__1::vector.229"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #11
  %106 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %78, i64 -1, i32 4
  %107 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %79, i64 -1, i32 4
  %108 = bitcast double* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast double* %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = icmp eq %"struct.commander::TabMatch"* %81, %72
  br i1 %111, label %112, label %77

112:                                              ; preds = %77
  %113 = load i64, i64* %6, align 8
  %114 = load %"struct.commander::TabMatch"*, %"struct.commander::TabMatch"** %3, align 8
  br label %115

115:                                              ; preds = %75, %112
  %116 = phi %"struct.commander::TabMatch"* [ %72, %75 ], [ %114, %112 ]
  %117 = phi %"struct.commander::TabMatch"* [ %37, %75 ], [ %80, %112 ]
  %118 = phi i64 [ %76, %75 ], [ %113, %112 ]
  %119 = ptrtoint %"struct.commander::TabMatch"* %117 to i64
  store i64 %119, i64* %6, align 8
  store i64 %70, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %120 = inttoptr i64 %118 to %"struct.commander::TabMatch"*
  %121 = icmp eq %"struct.commander::TabMatch"* %116, %120
  br i1 %121, label %144, label %122

122:                                              ; preds = %115, %142
  %123 = phi %"struct.commander::TabMatch"* [ %124, %142 ], [ %116, %115 ]
  %124 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %123, i64 -1
  %125 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %123, i64 -1, i32 3, i32 0, i32 0
  %126 = load %"class.gfx::Range"*, %"class.gfx::Range"** %125, align 8
  %127 = icmp eq %"class.gfx::Range"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %122
  %129 = ptrtoint %"class.gfx::Range"* %126 to i64
  %130 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %123, i64 -1, i32 3, i32 0, i32 1
  %131 = bitcast %"class.gfx::Range"** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast %"class.gfx::Range"* %126 to i8*
  tail call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %128, %122
  %134 = getelementptr inbounds %"struct.commander::TabMatch", %"struct.commander::TabMatch"* %123, i64 -1, i32 2
  %135 = bitcast %"class.std::__1::basic_string.220"* %134 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::basic_string.220"* %134 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %139, %133
  %143 = icmp eq %"struct.commander::TabMatch"* %124, %120
  br i1 %143, label %144, label %122

144:                                              ; preds = %142, %115
  %145 = icmp eq i64 %118, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %118 to i8*
  tail call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx5RangeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.229"*, %"class.gfx::Range"*, %"class.gfx::Range"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Range"* %2 to i64
  %5 = ptrtoint %"class.gfx::Range"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Range"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.229"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Range"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Range"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Range"* %24, %"class.gfx::Range"* %2
  %26 = ptrtoint %"class.gfx::Range"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Range"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.gfx::Range"*
  %43 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Range"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %16, i64 %28
  store %"class.gfx::Range"* %48, %"class.gfx::Range"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Range"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.229"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.229"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.229"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.gfx::Range"*
  %76 = getelementptr inbounds %"class.std::__1::vector.229", %"class.std::__1::vector.229"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Range"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.229"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %72
  store %"class.gfx::Range"* %79, %"class.gfx::Range"** %8, align 8
  %80 = bitcast %"class.gfx::Range"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.gfx::Range"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Range"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN9commander11WindowMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.279"*, %"struct.commander::WindowMatch"* dereferenceable(64)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.279", %"class.std::__1::vector.279"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.commander::WindowMatch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.279"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.279"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.279", %"class.std::__1::vector.279"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.commander::WindowMatch"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.commander::WindowMatch"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.commander::WindowMatch"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %35
  %39 = ptrtoint %"struct.commander::WindowMatch"* %38 to i64
  %40 = bitcast %"struct.commander::WindowMatch"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.commander::WindowMatch"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string.220"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string.220"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %9, i32 2
  %48 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2
  %49 = bitcast %"class.std::__1::vector.229"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = bitcast %"class.std::__1::vector.229"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.229"* %47 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %54 = bitcast %"class.gfx::Range"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %9, i32 2, i32 0, i32 1
  %57 = bitcast %"class.gfx::Range"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.gfx::Range"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %9, i32 2, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.gfx::Range"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.std::__1::vector.229"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %36, i64 %9, i32 3
  %65 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %1, i64 0, i32 3
  %66 = bitcast double* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast double* %64 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %37, i64 1
  %70 = ptrtoint %"struct.commander::WindowMatch"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.279", %"class.std::__1::vector.279"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %71, align 8
  %73 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %3, align 8
  %74 = icmp eq %"struct.commander::WindowMatch"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %34
  %76 = ptrtoint %"struct.commander::WindowMatch"* %72 to i64
  br label %115

77:                                               ; preds = %34, %77
  %78 = phi %"struct.commander::WindowMatch"* [ %80, %77 ], [ %37, %34 ]
  %79 = phi %"struct.commander::WindowMatch"* [ %81, %77 ], [ %73, %34 ]
  %80 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %79, i64 -1
  %82 = bitcast %"struct.commander::WindowMatch"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"struct.commander::WindowMatch"* %80 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %78, i64 -1, i32 1
  %86 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %79, i64 -1, i32 1
  %87 = bitcast %"class.std::__1::basic_string.220"* %85 to i8*
  %88 = bitcast %"class.std::__1::basic_string.220"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #11
  %89 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %78, i64 -1, i32 2
  %90 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %79, i64 -1, i32 2
  %91 = bitcast %"class.std::__1::vector.229"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #11
  %92 = bitcast %"class.std::__1::vector.229"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.229"* %89 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %79, i64 -1, i32 2, i32 0, i32 1
  %96 = bitcast %"class.gfx::Range"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %78, i64 -1, i32 2, i32 0, i32 1
  %99 = bitcast %"class.gfx::Range"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %79, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"class.gfx::Range"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %78, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"class.gfx::Range"** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast %"class.std::__1::vector.229"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #11
  %106 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %78, i64 -1, i32 3
  %107 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %79, i64 -1, i32 3
  %108 = bitcast double* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast double* %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = icmp eq %"struct.commander::WindowMatch"* %81, %72
  br i1 %111, label %112, label %77

112:                                              ; preds = %77
  %113 = load i64, i64* %6, align 8
  %114 = load %"struct.commander::WindowMatch"*, %"struct.commander::WindowMatch"** %3, align 8
  br label %115

115:                                              ; preds = %75, %112
  %116 = phi %"struct.commander::WindowMatch"* [ %72, %75 ], [ %114, %112 ]
  %117 = phi %"struct.commander::WindowMatch"* [ %37, %75 ], [ %80, %112 ]
  %118 = phi i64 [ %76, %75 ], [ %113, %112 ]
  %119 = ptrtoint %"struct.commander::WindowMatch"* %117 to i64
  store i64 %119, i64* %6, align 8
  store i64 %70, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %120 = inttoptr i64 %118 to %"struct.commander::WindowMatch"*
  %121 = icmp eq %"struct.commander::WindowMatch"* %116, %120
  br i1 %121, label %144, label %122

122:                                              ; preds = %115, %142
  %123 = phi %"struct.commander::WindowMatch"* [ %124, %142 ], [ %116, %115 ]
  %124 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %123, i64 -1
  %125 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %123, i64 -1, i32 2, i32 0, i32 0
  %126 = load %"class.gfx::Range"*, %"class.gfx::Range"** %125, align 8
  %127 = icmp eq %"class.gfx::Range"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %122
  %129 = ptrtoint %"class.gfx::Range"* %126 to i64
  %130 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %123, i64 -1, i32 2, i32 0, i32 1
  %131 = bitcast %"class.gfx::Range"** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast %"class.gfx::Range"* %126 to i8*
  tail call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %128, %122
  %134 = getelementptr inbounds %"struct.commander::WindowMatch", %"struct.commander::WindowMatch"* %123, i64 -1, i32 1
  %135 = bitcast %"class.std::__1::basic_string.220"* %134 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::basic_string.220"* %134 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %139, %133
  %143 = icmp eq %"struct.commander::WindowMatch"* %124, %120
  br i1 %143, label %144, label %122

144:                                              ; preds = %142, %115
  %145 = icmp eq i64 %118, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %118 to i8*
  tail call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN9commander10GroupMatchENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.294"*, %"struct.commander::GroupMatch"* dereferenceable(72)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.commander::GroupMatch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.294"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.294"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.commander::GroupMatch"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.commander::GroupMatch"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.commander::GroupMatch"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %32
  %36 = ptrtoint %"struct.commander::GroupMatch"* %35 to i64
  %37 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 0
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %37, %"class.tab_groups::TabGroupId"* dereferenceable(16) %38) #11
  %39 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string.220"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string.220"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #11
  %43 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %9, i32 2
  %44 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2
  %45 = bitcast %"class.std::__1::vector.229"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #11
  %46 = bitcast %"class.std::__1::vector.229"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.229"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"class.gfx::Range"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %9, i32 2, i32 0, i32 1
  %53 = bitcast %"class.gfx::Range"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.gfx::Range"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %9, i32 2, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.gfx::Range"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.std::__1::vector.229"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #11
  %60 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %33, i64 %9, i32 3
  %61 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %1, i64 0, i32 3
  %62 = bitcast double* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast double* %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %34, i64 1
  %66 = ptrtoint %"struct.commander::GroupMatch"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %67, align 8
  %69 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %3, align 8
  %70 = icmp eq %"struct.commander::GroupMatch"* %69, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %31
  %72 = ptrtoint %"struct.commander::GroupMatch"* %68 to i64
  br label %110

73:                                               ; preds = %31, %73
  %74 = phi %"struct.commander::GroupMatch"* [ %105, %73 ], [ %34, %31 ]
  %75 = phi %"struct.commander::GroupMatch"* [ %76, %73 ], [ %69, %31 ]
  %76 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %75, i64 -1
  %77 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1, i32 0
  %78 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %76, i64 0, i32 0
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %77, %"class.tab_groups::TabGroupId"* dereferenceable(16) %78) #11
  %79 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %75, i64 -1, i32 1
  %81 = bitcast %"class.std::__1::basic_string.220"* %79 to i8*
  %82 = bitcast %"class.std::__1::basic_string.220"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #11
  %83 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1, i32 2
  %84 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %75, i64 -1, i32 2
  %85 = bitcast %"class.std::__1::vector.229"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #11
  %86 = bitcast %"class.std::__1::vector.229"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.229"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %75, i64 -1, i32 2, i32 0, i32 1
  %90 = bitcast %"class.gfx::Range"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1, i32 2, i32 0, i32 1
  %93 = bitcast %"class.gfx::Range"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %75, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"class.gfx::Range"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast %"class.gfx::Range"** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.std::__1::vector.229"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #11
  %100 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1, i32 3
  %101 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %75, i64 -1, i32 3
  %102 = bitcast double* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast double* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %74, i64 -1
  %106 = icmp eq %"struct.commander::GroupMatch"* %76, %68
  br i1 %106, label %107, label %73

107:                                              ; preds = %73
  %108 = load i64, i64* %6, align 8
  %109 = load %"struct.commander::GroupMatch"*, %"struct.commander::GroupMatch"** %3, align 8
  br label %110

110:                                              ; preds = %71, %107
  %111 = phi %"struct.commander::GroupMatch"* [ %68, %71 ], [ %109, %107 ]
  %112 = phi %"struct.commander::GroupMatch"* [ %34, %71 ], [ %105, %107 ]
  %113 = phi i64 [ %72, %71 ], [ %108, %107 ]
  %114 = ptrtoint %"struct.commander::GroupMatch"* %112 to i64
  store i64 %114, i64* %6, align 8
  store i64 %66, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %115 = inttoptr i64 %113 to %"struct.commander::GroupMatch"*
  %116 = icmp eq %"struct.commander::GroupMatch"* %111, %115
  br i1 %116, label %139, label %117

117:                                              ; preds = %110, %137
  %118 = phi %"struct.commander::GroupMatch"* [ %119, %137 ], [ %111, %110 ]
  %119 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %118, i64 -1
  %120 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %118, i64 -1, i32 2, i32 0, i32 0
  %121 = load %"class.gfx::Range"*, %"class.gfx::Range"** %120, align 8
  %122 = icmp eq %"class.gfx::Range"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = ptrtoint %"class.gfx::Range"* %121 to i64
  %125 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %118, i64 -1, i32 2, i32 0, i32 1
  %126 = bitcast %"class.gfx::Range"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = bitcast %"class.gfx::Range"* %121 to i8*
  tail call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %123, %117
  %129 = getelementptr inbounds %"struct.commander::GroupMatch", %"struct.commander::GroupMatch"* %118, i64 -1, i32 1
  %130 = bitcast %"class.std::__1::basic_string.220"* %129 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %130, i64 0, i32 1, i32 1
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = bitcast %"class.std::__1::basic_string.220"* %129 to i8**
  %136 = load i8*, i8** %135, align 8
  tail call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %134, %128
  %138 = icmp eq %"struct.commander::GroupMatch"* %119, %115
  br i1 %138, label %139, label %117

139:                                              ; preds = %137, %110
  %140 = icmp eq i64 %113, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = inttoptr i64 %113 to i8*
  tail call void @_ZdlPv(i8* %142) #13
  br label %143

143:                                              ; preds = %139, %141
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{i8 0, i8 2}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !8}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !8}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !8}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !8}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !8}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !8}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !10}
!94 = distinct !{!94, !8}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !8}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !10}
!103 = distinct !{!103, !8}
