; ModuleID = '../../ui/gfx/animation/keyframe/timing_function.cc'
source_filename = "../../ui/gfx/animation/keyframe/timing_function.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::TimingFunction" = type { i32 (...)** }
%"class.gfx::CubicBezierTimingFunction" = type <{ %"class.gfx::TimingFunction", %"class.gfx::CubicBezier", i32, [4 x i8] }>
%"class.gfx::CubicBezier" = type { double, double, double, double, double, double, double, double, double, double, [11 x double] }
%"class.gfx::StepsTimingFunction" = type { %"class.gfx::TimingFunction", i32, i32 }
%"class.gfx::LinearTimingFunction" = type { %"class.gfx::TimingFunction" }

@_ZTVN3gfx14TimingFunctionE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to i8*), i8* bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3gfx25CubicBezierTimingFunctionE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to i8*), i8* bitcast (void (%"class.gfx::CubicBezierTimingFunction"*)* @_ZN3gfx25CubicBezierTimingFunctionD0Ev to i8*), i8* bitcast (i32 (%"class.gfx::CubicBezierTimingFunction"*)* @_ZNK3gfx25CubicBezierTimingFunction7GetTypeEv to i8*), i8* bitcast (double (%"class.gfx::CubicBezierTimingFunction"*, double)* @_ZNK3gfx25CubicBezierTimingFunction8GetValueEd to i8*), i8* bitcast (double (%"class.gfx::CubicBezierTimingFunction"*, double)* @_ZNK3gfx25CubicBezierTimingFunction8VelocityEd to i8*), i8* bitcast (%"class.gfx::TimingFunction"* (%"class.gfx::CubicBezierTimingFunction"*)* @_ZNK3gfx25CubicBezierTimingFunction5CloneEv to i8*)] }, align 8
@_ZTVN3gfx19StepsTimingFunctionE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to i8*), i8* bitcast (void (%"class.gfx::StepsTimingFunction"*)* @_ZN3gfx19StepsTimingFunctionD0Ev to i8*), i8* bitcast (i32 (%"class.gfx::StepsTimingFunction"*)* @_ZNK3gfx19StepsTimingFunction7GetTypeEv to i8*), i8* bitcast (double (%"class.gfx::StepsTimingFunction"*, double)* @_ZNK3gfx19StepsTimingFunction8GetValueEd to i8*), i8* bitcast (double (%"class.gfx::StepsTimingFunction"*, double)* @_ZNK3gfx19StepsTimingFunction8VelocityEd to i8*), i8* bitcast (%"class.gfx::TimingFunction"* (%"class.gfx::StepsTimingFunction"*)* @_ZNK3gfx19StepsTimingFunction5CloneEv to i8*)] }, align 8
@_ZTVN3gfx20LinearTimingFunctionE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to i8*), i8* bitcast (void (%"class.gfx::LinearTimingFunction"*)* @_ZN3gfx20LinearTimingFunctionD0Ev to i8*), i8* bitcast (i32 (%"class.gfx::LinearTimingFunction"*)* @_ZNK3gfx20LinearTimingFunction7GetTypeEv to i8*), i8* bitcast (double (%"class.gfx::LinearTimingFunction"*, double)* @_ZNK3gfx20LinearTimingFunction8GetValueEd to i8*), i8* bitcast (double (%"class.gfx::LinearTimingFunction"*, double)* @_ZNK3gfx20LinearTimingFunction8VelocityEd to i8*), i8* bitcast (%"class.gfx::TimingFunction"* (%"class.gfx::LinearTimingFunction"*)* @_ZNK3gfx20LinearTimingFunction5CloneEv to i8*)] }, align 8
@switch.table._ZNK3gfx19StepsTimingFunction15GetPreciseValueEdNS_14TimingFunction14LimitDirectionE = private unnamed_addr constant [4 x double] [double 0.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00], align 8
@switch.table._ZNK3gfx19StepsTimingFunction19GetStepsStartOffsetEv = private unnamed_addr constant [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4

@_ZN3gfx14TimingFunctionD1Ev = hidden unnamed_addr alias void (%"class.gfx::TimingFunction"*), void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev
@_ZN3gfx25CubicBezierTimingFunctionC1ENS0_8EaseTypeEdddd = hidden unnamed_addr alias void (%"class.gfx::CubicBezierTimingFunction"*, i32, double, double, double, double), void (%"class.gfx::CubicBezierTimingFunction"*, i32, double, double, double, double)* @_ZN3gfx25CubicBezierTimingFunctionC2ENS0_8EaseTypeEdddd
@_ZN3gfx25CubicBezierTimingFunctionD2Ev = hidden unnamed_addr alias void (%"class.gfx::CubicBezierTimingFunction"*), bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to void (%"class.gfx::CubicBezierTimingFunction"*)*)
@_ZN3gfx25CubicBezierTimingFunctionD1Ev = hidden unnamed_addr alias void (%"class.gfx::CubicBezierTimingFunction"*), bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to void (%"class.gfx::CubicBezierTimingFunction"*)*)
@_ZN3gfx19StepsTimingFunctionC1EiNS0_12StepPositionE = hidden unnamed_addr alias void (%"class.gfx::StepsTimingFunction"*, i32, i32), void (%"class.gfx::StepsTimingFunction"*, i32, i32)* @_ZN3gfx19StepsTimingFunctionC2EiNS0_12StepPositionE
@_ZN3gfx19StepsTimingFunctionD2Ev = hidden unnamed_addr alias void (%"class.gfx::StepsTimingFunction"*), bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to void (%"class.gfx::StepsTimingFunction"*)*)
@_ZN3gfx19StepsTimingFunctionD1Ev = hidden unnamed_addr alias void (%"class.gfx::StepsTimingFunction"*), bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to void (%"class.gfx::StepsTimingFunction"*)*)
@_ZN3gfx20LinearTimingFunctionC1Ev = hidden unnamed_addr alias void (%"class.gfx::LinearTimingFunction"*), void (%"class.gfx::LinearTimingFunction"*)* @_ZN3gfx20LinearTimingFunctionC2Ev
@_ZN3gfx20LinearTimingFunctionD2Ev = hidden unnamed_addr alias void (%"class.gfx::LinearTimingFunction"*), bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to void (%"class.gfx::LinearTimingFunction"*)*)
@_ZN3gfx20LinearTimingFunctionD1Ev = hidden unnamed_addr alias void (%"class.gfx::LinearTimingFunction"*), bitcast (void (%"class.gfx::TimingFunction"*)* @_ZN3gfx14TimingFunctionD2Ev to void (%"class.gfx::LinearTimingFunction"*)*)

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx14TimingFunctionC2Ev(%"class.gfx::TimingFunction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::TimingFunction", %"class.gfx::TimingFunction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx14TimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx14TimingFunctionD2Ev(%"class.gfx::TimingFunction"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gfx14TimingFunctionD0Ev(%"class.gfx::TimingFunction"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::CubicBezierTimingFunction"* @_ZN3gfx25CubicBezierTimingFunction12CreatePresetENS0_8EaseTypeE(i32) local_unnamed_addr #4 align 2 {
  switch i32 %0, label %28 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 3, label %17
  ]

2:                                                ; preds = %1
  %3 = tail call i8* @_Znwm(i64 184) #13
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to %"class.gfx::CubicBezier"*
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %6, double 2.500000e-01, double 1.000000e-01, double 2.500000e-01, double 1.000000e+00) #14
  br label %22

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 184) #13
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to %"class.gfx::CubicBezier"*
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %11, double 4.200000e-01, double 0.000000e+00, double 1.000000e+00, double 1.000000e+00) #14
  br label %22

12:                                               ; preds = %1
  %13 = tail call i8* @_Znwm(i64 184) #13
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to %"class.gfx::CubicBezier"*
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %16, double 0.000000e+00, double 0.000000e+00, double 5.800000e-01, double 1.000000e+00) #14
  br label %22

17:                                               ; preds = %1
  %18 = tail call i8* @_Znwm(i64 184) #13
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to %"class.gfx::CubicBezier"*
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %21, double 4.200000e-01, double 0.000000e+00, double 5.800000e-01, double 1.000000e+00) #14
  br label %22

22:                                               ; preds = %2, %7, %12, %17
  %23 = phi i8* [ %18, %17 ], [ %13, %12 ], [ %8, %7 ], [ %3, %2 ]
  %24 = phi i32 [ 3, %17 ], [ 2, %12 ], [ 1, %7 ], [ 0, %2 ]
  %25 = getelementptr inbounds i8, i8* %23, i64 176
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = bitcast i8* %23 to %"class.gfx::CubicBezierTimingFunction"*
  br label %28

28:                                               ; preds = %22, %1
  %29 = phi %"class.gfx::CubicBezierTimingFunction"* [ null, %1 ], [ %27, %22 ]
  ret %"class.gfx::CubicBezierTimingFunction"* %29
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gfx::CubicBezierTimingFunction"* @_ZN3gfx25CubicBezierTimingFunction6CreateEdddd(double, double, double, double) local_unnamed_addr #4 align 2 {
  %5 = tail call i8* @_Znwm(i64 184) #13
  %6 = bitcast i8* %5 to %"class.gfx::CubicBezierTimingFunction"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to %"class.gfx::CubicBezier"*
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %9, double %0, double %1, double %2, double %3) #14
  %10 = getelementptr inbounds i8, i8* %5, i64 176
  %11 = bitcast i8* %10 to i32*
  store i32 4, i32* %11, align 8
  ret %"class.gfx::CubicBezierTimingFunction"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx25CubicBezierTimingFunctionC2ENS0_8EaseTypeEdddd(%"class.gfx::CubicBezierTimingFunction"*, i32, double, double, double, double) unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 1
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %8, double %2, double %3, double %4, double %5) #14
  %9 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 2
  store i32 %1, i32* %9, align 8
  ret void
}

declare void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"*, double, double, double, double) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx25CubicBezierTimingFunctionD0Ev(%"class.gfx::CubicBezierTimingFunction"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.gfx::CubicBezierTimingFunction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3gfx25CubicBezierTimingFunction7GetTypeEv(%"class.gfx::CubicBezierTimingFunction"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK3gfx25CubicBezierTimingFunction8GetValueEd(%"class.gfx::CubicBezierTimingFunction"*, double) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 1
  %4 = tail call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* %3, double %1) #14
  ret double %4
}

declare double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"*, double) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK3gfx25CubicBezierTimingFunction8VelocityEd(%"class.gfx::CubicBezierTimingFunction"*, double) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 1
  %4 = tail call double @_ZNK3gfx11CubicBezier5SlopeEd(%"class.gfx::CubicBezier"* %3, double %1) #14
  ret double %4
}

declare double @_ZNK3gfx11CubicBezier5SlopeEd(%"class.gfx::CubicBezier"*, double) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::TimingFunction"* @_ZNK3gfx25CubicBezierTimingFunction5CloneEv(%"class.gfx::CubicBezierTimingFunction"*) unnamed_addr #4 align 2 {
  %2 = tail call i8* @_Znwm(i64 184) #13
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx25CubicBezierTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %"class.gfx::CubicBezier"*
  %6 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 1
  tail call void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"* %5, %"class.gfx::CubicBezier"* dereferenceable(168) %6) #14
  %7 = getelementptr inbounds i8, i8* %2, i64 176
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %"class.gfx::CubicBezierTimingFunction", %"class.gfx::CubicBezierTimingFunction"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = bitcast i8* %2 to %"class.gfx::TimingFunction"*
  ret %"class.gfx::TimingFunction"* %11
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.gfx::StepsTimingFunction"* @_ZN3gfx19StepsTimingFunction6CreateEiNS0_12StepPositionE(i32, i32) local_unnamed_addr #8 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #13
  %4 = bitcast i8* %3 to %"class.gfx::StepsTimingFunction"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx19StepsTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 4
  ret %"class.gfx::StepsTimingFunction"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx19StepsTimingFunctionC2EiNS0_12StepPositionE(%"class.gfx::StepsTimingFunction"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx19StepsTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19StepsTimingFunctionD0Ev(%"class.gfx::StepsTimingFunction"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.gfx::StepsTimingFunction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3gfx19StepsTimingFunction7GetTypeEv(%"class.gfx::StepsTimingFunction"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 2
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden double @_ZNK3gfx19StepsTimingFunction8GetValueEd(%"class.gfx::StepsTimingFunction"* nocapture readonly, double) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = sitofp i32 %4 to double
  %6 = fmul double %5, %1
  %7 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds [4 x double], [4 x double]* @switch.table._ZNK3gfx19StepsTimingFunction15GetPreciseValueEdNS_14TimingFunction14LimitDirectionE, i64 0, i64 %12
  %14 = load double, double* %13, align 8
  br label %15

15:                                               ; preds = %11, %2
  %16 = phi double [ 1.000000e+00, %2 ], [ %14, %11 ]
  %17 = fadd double %6, %16
  %18 = tail call double @llvm.floor.f64(double %17) #14
  switch i32 %8, label %23 [
    i32 4, label %21
    i32 2, label %19
  ]

19:                                               ; preds = %15
  %20 = add nsw i32 %4, 1
  br label %23

21:                                               ; preds = %15
  %22 = add nsw i32 %4, -1
  br label %23

23:                                               ; preds = %15, %19, %21
  %24 = phi i32 [ %22, %21 ], [ %20, %19 ], [ %4, %15 ]
  %25 = fcmp oge double %1, 0.000000e+00
  %26 = fcmp olt double %18, 0.000000e+00
  %27 = and i1 %25, %26
  %28 = select i1 %27, double 0.000000e+00, double %18
  %29 = fcmp ole double %1, 1.000000e+00
  %30 = sitofp i32 %24 to double
  %31 = fcmp ogt double %28, %30
  %32 = and i1 %29, %31
  %33 = select i1 %32, double %30, double %28
  %34 = fdiv double %33, %30
  ret double %34
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden double @_ZNK3gfx19StepsTimingFunction15GetPreciseValueEdNS_14TimingFunction14LimitDirectionE(%"class.gfx::StepsTimingFunction"* nocapture readonly, double, i32) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sitofp i32 %5 to double
  %7 = fmul double %6, %1
  %8 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 4
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds [4 x double], [4 x double]* @switch.table._ZNK3gfx19StepsTimingFunction15GetPreciseValueEdNS_14TimingFunction14LimitDirectionE, i64 0, i64 %13
  %15 = load double, double* %14, align 8
  br label %16

16:                                               ; preds = %12, %3
  %17 = phi double [ 1.000000e+00, %3 ], [ %15, %12 ]
  %18 = fadd double %7, %17
  %19 = tail call double @llvm.floor.f64(double %18)
  %20 = icmp eq i32 %2, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = tail call double @llvm.floor.f64(double %7)
  %23 = fsub double %7, %22
  %24 = fcmp oeq double %23, 0.000000e+00
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = fadd double %19, -1.000000e+00
  br label %27

27:                                               ; preds = %25, %21, %16
  %28 = phi double [ %26, %25 ], [ %19, %21 ], [ %19, %16 ]
  switch i32 %9, label %33 [
    i32 4, label %31
    i32 2, label %29
  ]

29:                                               ; preds = %27
  %30 = add nsw i32 %5, 1
  br label %33

31:                                               ; preds = %27
  %32 = add nsw i32 %5, -1
  br label %33

33:                                               ; preds = %27, %29, %31
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ], [ %5, %27 ]
  %35 = fcmp oge double %1, 0.000000e+00
  %36 = fcmp olt double %28, 0.000000e+00
  %37 = and i1 %35, %36
  %38 = select i1 %37, double 0.000000e+00, double %28
  %39 = fcmp ole double %1, 1.000000e+00
  %40 = sitofp i32 %34 to double
  %41 = fcmp ogt double %38, %40
  %42 = and i1 %39, %41
  %43 = select i1 %42, double %40, double %38
  %44 = fdiv double %43, %40
  ret double %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::TimingFunction"* @_ZNK3gfx19StepsTimingFunction5CloneEv(%"class.gfx::StepsTimingFunction"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #13
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx19StepsTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %6 = bitcast i32* %5 to i64*
  %7 = bitcast i8* %4 to i64*
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  %9 = bitcast i8* %2 to %"class.gfx::TimingFunction"*
  ret %"class.gfx::TimingFunction"* %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK3gfx19StepsTimingFunction8VelocityEd(%"class.gfx::StepsTimingFunction"* nocapture readnone, double) unnamed_addr #1 align 2 {
  ret double 0.000000e+00
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK3gfx19StepsTimingFunction19GetStepsStartOffsetEv(%"class.gfx::StepsTimingFunction"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [4 x float], [4 x float]* @switch.table._ZNK3gfx19StepsTimingFunction19GetStepsStartOffsetEv, i64 0, i64 %7
  %9 = load float, float* %8, align 4
  ret float %9

10:                                               ; preds = %1
  ret float 1.000000e+00
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx19StepsTimingFunction13NumberOfJumpsEv(%"class.gfx::StepsTimingFunction"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %15 [
    i32 1, label %4
    i32 0, label %4
    i32 3, label %4
    i32 5, label %4
    i32 2, label %7
    i32 4, label %11
  ]

4:                                                ; preds = %1, %1, %1, %1
  %5 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  br label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  br label %18

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, -1
  br label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.gfx::StepsTimingFunction", %"class.gfx::StepsTimingFunction"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %15, %11, %7, %4
  %19 = phi i32 [ %17, %15 ], [ %14, %11 ], [ %10, %7 ], [ %6, %4 ]
  ret i32 %19
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.gfx::LinearTimingFunction"* @_ZN3gfx20LinearTimingFunction6CreateEv() local_unnamed_addr #8 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #13
  %2 = bitcast i8* %1 to %"class.gfx::LinearTimingFunction"*
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret %"class.gfx::LinearTimingFunction"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx20LinearTimingFunctionC2Ev(%"class.gfx::LinearTimingFunction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::LinearTimingFunction", %"class.gfx::LinearTimingFunction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx20LinearTimingFunctionD0Ev(%"class.gfx::LinearTimingFunction"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.gfx::LinearTimingFunction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3gfx20LinearTimingFunction7GetTypeEv(%"class.gfx::LinearTimingFunction"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::TimingFunction"* @_ZNK3gfx20LinearTimingFunction5CloneEv(%"class.gfx::LinearTimingFunction"* nocapture readnone) unnamed_addr #4 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #13
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gfx20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %2 to %"class.gfx::TimingFunction"*
  ret %"class.gfx::TimingFunction"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK3gfx20LinearTimingFunction8VelocityEd(%"class.gfx::LinearTimingFunction"* nocapture readnone, double) unnamed_addr #1 align 2 {
  ret double 0.000000e+00
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK3gfx20LinearTimingFunction8GetValueEd(%"class.gfx::LinearTimingFunction"* nocapture readnone, double returned) unnamed_addr #1 align 2 {
  ret double %1
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"*, %"class.gfx::CubicBezier"* dereferenceable(168)) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
