; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkShaderImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkShaderImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp.4*, i64 }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp.4*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.19 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.6*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.19*, %class.SkReadBuffer*)* }
%class.sk_sp.6 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.12*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.17*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.6*, i8*, i64, i8*)*, i8* }
%class.sk_sp.12 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.13", [7 x i8] }>
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%class.sk_sp.17 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.18, i32, i32 }
%class.sk_sp.18 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%class.SkFont = type <{ %class.sk_sp.6, float, float, float, i8, i8, i8, i8 }>
%"class.(anonymous namespace)::SkShaderImageFilter" = type { %class.SkImageFilter_Base.base, [4 x i8], %class.SkPaint }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.20*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.20*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.20*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.sk_sp.22 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.22, %"class.skif::LayerSpace.23" }
%"class.skif::LayerSpace.23" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.24 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.25, [384 x i64], %class.sk_sp.26, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.27", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.33" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.25 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.26 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

@.str = private unnamed_addr constant [20 x i8] c"SkShaderImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"SkPaintImageFilter\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"SkPaintImageFilterImpl\00", align 1
@_ZTVN12_GLOBAL__N_119SkShaderImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SkShaderImageFilter"*)* @_ZN12_GLOBAL__N_119SkShaderImageFilterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkShaderImageFilter"*)* @_ZN12_GLOBAL__N_119SkShaderImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.19*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkShaderImageFilter"*)* @_ZNK12_GLOBAL__N_119SkShaderImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkShaderImageFilter"*)* @_ZNK12_GLOBAL__N_119SkShaderImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkShaderImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_119SkShaderImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.22*, %"class.(anonymous namespace)::SkShaderImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_119SkShaderImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkShaderImageFilter"*)* @_ZNK12_GLOBAL__N_119SkShaderImageFilter23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp.4* inttoptr (i64 -6148914691236517206 to %class.sk_sp.4*), i64 -6148914691236517206 } } }, align 8
@__const._ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.1 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.2 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.3 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.4 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters5PaintERK7SkPaintRKNS_8CropRectE(%class.sk_sp.4* noalias nocapture sret, %class.SkPaint* dereferenceable(72), %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %2, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp une float %6, 0xFFF0000000000000
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds float, float* %5, i64 1
  %10 = load float, float* %9, align 4
  %11 = fcmp une float %10, 0xFFF0000000000000
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds float, float* %5, i64 2
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %14, 0x7FF0000000000000
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds float, float* %5, i64 3
  %18 = load float, float* %17, align 4
  %19 = fcmp une float %18, 0x7FF0000000000000
  br i1 %19, label %20, label %21

20:                                               ; preds = %16, %12, %8, %3
  br label %21

21:                                               ; preds = %16, %20
  %22 = phi %struct.SkRect* [ %4, %20 ], [ null, %16 ]
  %23 = tail call i8* @_Znwm(i64 152) #8, !noalias !2
  %24 = bitcast i8* %23 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %24, %class.sk_sp.4* null, i32 0, %struct.SkRect* %22) #9, !noalias !2
  %25 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkShaderImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !noalias !2
  %26 = getelementptr inbounds i8, i8* %23, i64 80
  %27 = bitcast i8* %26 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %27, %class.SkPaint* dereferenceable(72) %1) #9, !noalias !2
  %28 = bitcast %class.sk_sp.4* %0 to i8**
  store i8* %23, i8** %28, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters6ShaderE5sk_spI8SkShaderENS_6DitherERKNS_8CropRectE(%class.sk_sp.4* noalias nocapture sret, %class.sk_sp.1* nocapture, i1 zeroext, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = alloca %class.sk_sp.1, align 8
  %7 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %5) #9
  %8 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp.1* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkShader* null, %class.SkShader** %8, align 8
  %11 = bitcast %class.sk_sp.1* %6 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %5, %class.sk_sp.1* nonnull %6) #9
  %12 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %13 = load %class.SkShader*, %class.SkShader** %12, align 8
  %14 = icmp eq %class.SkShader* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkShader, %class.SkShader* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkShader* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkShader* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #9
  br label %25

25:                                               ; preds = %4, %15, %19
  %26 = zext i1 %2 to i32
  %27 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = shl nuw nsw i32 %26, 1
  %30 = and i32 %28, -3
  %31 = or i32 %30, %29
  store i32 %31, i32* %27, align 8
  %32 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0, i32 0
  %34 = load float, float* %33, align 4
  %35 = fcmp une float %34, 0xFFF0000000000000
  br i1 %35, label %48, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds float, float* %33, i64 1
  %38 = load float, float* %37, align 4
  %39 = fcmp une float %38, 0xFFF0000000000000
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds float, float* %33, i64 2
  %42 = load float, float* %41, align 4
  %43 = fcmp une float %42, 0x7FF0000000000000
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds float, float* %33, i64 3
  %46 = load float, float* %45, align 4
  %47 = fcmp une float %46, 0x7FF0000000000000
  br i1 %47, label %48, label %49

48:                                               ; preds = %44, %40, %36, %25
  br label %49

49:                                               ; preds = %44, %48
  %50 = phi %struct.SkRect* [ %32, %48 ], [ null, %44 ]
  %51 = call i8* @_Znwm(i64 152) #8, !noalias !5
  %52 = bitcast i8* %51 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %52, %class.sk_sp.4* null, i32 0, %struct.SkRect* %50) #9, !noalias !5
  %53 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkShaderImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8, !noalias !5
  %54 = getelementptr inbounds i8, i8* %51, i64 80
  %55 = bitcast i8* %54 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %55, %class.SkPaint* nonnull dereferenceable(72) %5) #9, !noalias !5
  %56 = bitcast %class.sk_sp.4* %0 to i8**
  store i8* %51, i8** %56, align 8, !alias.scope !5
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.1*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z38SkRegisterShaderImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.19*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer) #9
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.19*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer) #9
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), void (%class.sk_sp.19*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer) #9
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.19*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.19* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %class.SkPaint, align 8
  %5 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 0) #9
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %14, align 8
  br label %29

15:                                               ; preds = %2
  %16 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #9
  %17 = call i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, %class.SkFont* null) #9
  %18 = load i32, i32* %6, align 8
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 0
  %21 = select i1 %19, %struct.SkRect* null, %struct.SkRect* %20
  %22 = call i8* @_Znwm(i64 152) #8, !noalias !8
  %23 = bitcast i8* %22 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %23, %class.sk_sp.4* null, i32 0, %struct.SkRect* %21) #9, !noalias !8
  %24 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkShaderImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !noalias !8
  %25 = getelementptr inbounds i8, i8* %22, i64 80
  %26 = bitcast i8* %25 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %26, %class.SkPaint* nonnull dereferenceable(72) %4) #9, !noalias !8
  %27 = ptrtoint i8* %22 to i64
  %28 = bitcast %class.sk_sp.19* %0 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #9
  br label %29

29:                                               ; preds = %15, %13
  %30 = load i64, i64* %10, align 8
  %31 = and i64 %30, 4294967294
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast i8* %7 to %class.sk_sp.4**
  br label %39

35:                                               ; preds = %55, %29
  %36 = phi i64 [ %30, %29 ], [ %57, %55 ]
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %63, label %61

39:                                               ; preds = %55, %33
  %40 = phi i64 [ 0, %33 ], [ %56, %55 ]
  %41 = load %class.sk_sp.4*, %class.sk_sp.4** %34, align 8
  %42 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %41, i64 %40, i32 0
  %43 = load %class.SkImageFilter*, %class.SkImageFilter** %42, align 8
  %44 = icmp eq %class.SkImageFilter* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkImageFilter* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkImageFilter* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #9
  br label %55

55:                                               ; preds = %49, %45, %39
  %56 = add nuw nsw i64 %40, 1
  %57 = load i64, i64* %10, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %39, label %35

61:                                               ; preds = %35
  %62 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %62) #9
  br label %63

63:                                               ; preds = %35, %61
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp.4*, i32, %struct.SkRect*) unnamed_addr #2

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SkShaderImageFilterD2Ev(%"class.(anonymous namespace)::SkShaderImageFilter"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkShaderImageFilter", %"class.(anonymous namespace)::SkShaderImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkShaderImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkShaderImageFilter", %"class.(anonymous namespace)::SkShaderImageFilter"* %0, i64 0, i32 2
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %3) #9
  %4 = bitcast %"class.(anonymous namespace)::SkShaderImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SkShaderImageFilterD0Ev(%"class.(anonymous namespace)::SkShaderImageFilter"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkShaderImageFilter", %"class.(anonymous namespace)::SkShaderImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_119SkShaderImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkShaderImageFilter", %"class.(anonymous namespace)::SkShaderImageFilter"* %0, i64 0, i32 2
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %3) #9
  %4 = bitcast %"class.(anonymous namespace)::SkShaderImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %4) #9
  %5 = bitcast %"class.(anonymous namespace)::SkShaderImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.19*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_119SkShaderImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkShaderImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.19*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_119SkShaderImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_119SkShaderImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkShaderImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_119SkShaderImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkShaderImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkShaderImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #9
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkShaderImageFilter", %"class.(anonymous namespace)::SkShaderImageFilter"* %0, i64 0, i32 2
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkPaint*)***
  %6 = load void (%class.SkWriteBuffer*, %class.SkPaint*)**, void (%class.SkWriteBuffer*, %class.SkPaint*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkPaint*)*, void (%class.SkWriteBuffer*, %class.SkPaint*)** %6, i64 28
  %8 = load void (%class.SkWriteBuffer*, %class.SkPaint*)*, void (%class.SkWriteBuffer*, %class.SkPaint*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %class.SkPaint* dereferenceable(72) %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_119SkShaderImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.22* noalias sret, %"class.(anonymous namespace)::SkShaderImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca %class.sk_sp.24, align 8
  %10 = alloca i64, align 8
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = alloca %class.SkMatrix, align 16
  %15 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %20 = bitcast { i64, i64 }* %7 to i8*
  %21 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %23 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = load %class.SkSpecialImage*, %class.SkSpecialImage** %23, align 8
  %25 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %24, i64 0, i32 2, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %24, i64 0, i32 2, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 %26, %28
  %30 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %24, i64 0, i32 2, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %24, i64 0, i32 2, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %31, %33
  %35 = zext i32 %34 to i64
  %36 = shl nuw i64 %35, 32
  %37 = zext i32 %29 to i64
  %38 = or i64 %36, %37
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 0, i64* %39, align 8
  store i64 %38, i64* %22, align 8
  %40 = bitcast %"class.(anonymous namespace)::SkShaderImageFilter"* %1 to %class.SkImageFilter_Base*
  %41 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %40, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %8, %struct.SkIRect* nonnull %6) #9
  br i1 %41, label %44, label %42

42:                                               ; preds = %4
  %43 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %43, align 8
  br label %159

44:                                               ; preds = %4
  %45 = bitcast i64* %10 to %struct.SkISize*
  %46 = bitcast %class.sk_sp.24* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  %47 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %9, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %47, align 8
  %48 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #9
  %49 = load i32, i32* %18, align 4
  %50 = load i32, i32* %16, align 4
  %51 = sub i32 %49, %50
  %52 = load i32, i32* %19, align 4
  %53 = load i32, i32* %17, align 4
  %54 = sub i32 %52, %53
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %51 to i64
  %58 = or i64 %56, %57
  store i64 %58, i64* %10, align 8
  %59 = load %class.SkSpecialImage*, %class.SkSpecialImage** %23, align 8, !noalias !11
  %60 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %59, i64 0, i32 1
  %61 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %62 = load i32, i32* %61, align 8, !noalias !11
  %63 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %63, align 8, !noalias !11
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.24* nonnull sret %9, %class.SkSpecialImage* %59, i32 %62, %class.SkColorSpace* %64, %struct.SkISize* nonnull dereferenceable(8) %45, i32 2, %class.SkSurfaceProps* dereferenceable(8) %60) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #9
  %65 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %47, align 8
  %66 = icmp eq %class.SkSpecialSurface* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %44
  %68 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %68, align 8
  br label %158

69:                                               ; preds = %44
  %70 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %65) #9
  %71 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %72 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #9
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %75 = extractvalue { <2 x float>, <2 x float> } %73, 0
  store <2 x float> %75, <2 x float>* %74, align 8
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %77 = extractvalue { <2 x float>, <2 x float> } %73, 1
  store <2 x float> %77, <2 x float>* %76, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %70, %struct.SkRGBA4f* nonnull dereferenceable(16) %71, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  %78 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #9
  %79 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %80 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %81 = bitcast %class.SkMatrix* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* align 4 %81, i64 40, i1 false)
  %82 = load i32, i32* %16, align 4
  %83 = sub nsw i32 0, %82
  %84 = sitofp i32 %83 to float
  %85 = load i32, i32* %17, align 4
  %86 = sub nsw i32 0, %85
  %87 = sitofp i32 %86 to float
  %88 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %11, float %84, float %87) #9
  %89 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #9
  %90 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0, i64 0
  %91 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 1
  %92 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1, i64 0
  %93 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 3
  %94 = load i32, i32* %18, align 4
  %95 = load i32, i32* %16, align 4
  %96 = sub i32 %94, %95
  %97 = load i32, i32* %19, align 4
  %98 = load i32, i32* %17, align 4
  %99 = sub i32 %97, %98
  %100 = sitofp i32 %96 to float
  %101 = insertelement <2 x float> undef, float %100, i32 0
  %102 = sitofp i32 %99 to float
  %103 = insertelement <2 x float> %101, float %102, i32 1
  %104 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %104, align 8
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %103, <2 x float>* %105, align 8
  %106 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #9
  %107 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 1
  %108 = bitcast %class.SkMatrix* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %108, align 16
  %109 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %110, align 16
  %111 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %111, align 16
  store i32 16, i32* %107, align 4
  %112 = load i32, i32* %79, align 4
  %113 = trunc i32 %112 to i8
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %69
  %116 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %11) #9
  %117 = zext i8 %116 to i32
  store i32 %117, i32* %79, align 4
  br label %118

118:                                              ; preds = %115, %69
  %119 = phi i32 [ %117, %115 ], [ %112, %69 ]
  %120 = and i32 %119, 15
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %14) #9
  br label %126

124:                                              ; preds = %118
  %125 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %11, %class.SkMatrix* nonnull %14) #9
  br i1 %125, label %126, label %128

126:                                              ; preds = %122, %124
  %127 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %14, %struct.SkRect* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %13, i32 1) #9
  br label %128

128:                                              ; preds = %126, %124
  call void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas* %70, %class.SkMatrix* nonnull dereferenceable(40) %11) #9
  %129 = load float, float* %90, align 8
  %130 = fmul float %129, 0.000000e+00
  %131 = load float, float* %91, align 4
  %132 = fmul float %130, %131
  %133 = load float, float* %92, align 8
  %134 = fmul float %132, %133
  %135 = load float, float* %93, align 4
  %136 = fmul float %134, %135
  %137 = fcmp ord float %136, 0.000000e+00
  br i1 %137, label %138, label %140

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.(anonymous namespace)::SkShaderImageFilter", %"class.(anonymous namespace)::SkShaderImageFilter"* %1, i64 0, i32 2
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %70, %struct.SkRect* nonnull dereferenceable(16) %13, %class.SkPaint* dereferenceable(72) %139) #9
  br label %140

140:                                              ; preds = %128, %138
  %141 = load i32, i32* %16, align 4
  %142 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %141, i32* %142, align 4
  %143 = load i32, i32* %17, align 4
  %144 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %143, i32* %144, align 4
  %145 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %47, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.22* sret %0, %class.SkSpecialSurface* %145) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #9
  %146 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %47, align 8
  %147 = icmp eq %class.SkSpecialSurface* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %146, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = bitcast %class.SkSpecialSurface* %146 to %class.SkRefCntBase*
  %154 = bitcast %class.SkSpecialSurface* %146 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  call void %157(%class.SkRefCntBase* nonnull %153) #9
  br label %158

158:                                              ; preds = %67, %140, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %159

159:                                              ; preds = %158, %42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_119SkShaderImageFilter23affectsTransparentBlackEv(%"class.(anonymous namespace)::SkShaderImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.22* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.24* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint*, %class.SkReadBuffer* dereferenceable(136), %class.SkFont*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_119SkShaderImageFilter4MakeERK7SkPaintPK6SkRect: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_119SkShaderImageFilter4MakeERK7SkPaintPK6SkRect"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN12_GLOBAL__N_119SkShaderImageFilter4MakeERK7SkPaintPK6SkRect: argument 0"}
!7 = distinct !{!7, !"_ZN12_GLOBAL__N_119SkShaderImageFilter4MakeERK7SkPaintPK6SkRect"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN12_GLOBAL__N_119SkShaderImageFilter4MakeERK7SkPaintPK6SkRect: argument 0"}
!10 = distinct !{!10, !"_ZN12_GLOBAL__N_119SkShaderImageFilter4MakeERK7SkPaintPK6SkRect"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!13 = distinct !{!13, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
