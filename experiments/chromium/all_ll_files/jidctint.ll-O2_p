; ModuleID = '../../third_party/libjpeg_turbo/jidctint.c'
source_filename = "../../third_party/libjpeg_turbo/jidctint.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32, i32, [10 x i32], [10 x i32], i32, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x {}*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_islow(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [64 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [64 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 256, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %185
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %194

17:                                               ; preds = %185, %5
  %18 = phi i32 [ 8, %5 ], [ %192, %185 ]
  %19 = phi i32* [ %13, %5 ], [ %189, %185 ]
  %20 = phi i16* [ %12, %5 ], [ %190, %185 ]
  %21 = phi i16* [ %2, %5 ], [ %191, %185 ]
  %22 = getelementptr inbounds i16, i16* %21, i64 8
  %23 = load i16, i16* %22, align 2
  %24 = getelementptr inbounds i16, i16* %21, i64 16
  %25 = load i16, i16* %24, align 2
  %26 = or i16 %23, %25
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %61

28:                                               ; preds = %17
  %29 = getelementptr inbounds i16, i16* %21, i64 24
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %61

32:                                               ; preds = %28
  %33 = getelementptr inbounds i16, i16* %21, i64 32
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %61

36:                                               ; preds = %32
  %37 = getelementptr inbounds i16, i16* %21, i64 40
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %61

40:                                               ; preds = %36
  %41 = getelementptr inbounds i16, i16* %21, i64 48
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = getelementptr inbounds i16, i16* %21, i64 56
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %61

48:                                               ; preds = %44
  %49 = load i16, i16* %21, align 2
  %50 = sext i16 %49 to i32
  %51 = load i16, i16* %20, align 2
  %52 = sext i16 %51 to i32
  %53 = shl nsw i32 %50, 2
  %54 = mul i32 %53, %52
  store i32 %54, i32* %19, align 4
  %55 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %54, i32* %56, align 4
  %57 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %54, i32* %57, align 4
  %58 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %54, i32* %58, align 4
  %59 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %54, i32* %59, align 4
  %60 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %54, i32* %60, align 4
  br label %185

61:                                               ; preds = %17, %44, %40, %36, %32, %28
  %62 = phi i16 [ 0, %44 ], [ 0, %40 ], [ 0, %36 ], [ 0, %32 ], [ 0, %28 ], [ %25, %17 ]
  %63 = sext i16 %62 to i64
  %64 = getelementptr inbounds i16, i16* %20, i64 16
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i64
  %67 = mul nsw i64 %66, %63
  %68 = getelementptr inbounds i16, i16* %21, i64 48
  %69 = load i16, i16* %68, align 2
  %70 = sext i16 %69 to i64
  %71 = getelementptr inbounds i16, i16* %20, i64 48
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i64
  %74 = mul nsw i64 %73, %70
  %75 = add nsw i64 %74, %67
  %76 = mul nsw i64 %75, 4433
  %77 = mul nsw i64 %74, -15137
  %78 = add nsw i64 %76, %77
  %79 = mul nsw i64 %67, 6270
  %80 = add nsw i64 %76, %79
  %81 = load i16, i16* %21, align 2
  %82 = sext i16 %81 to i64
  %83 = load i16, i16* %20, align 2
  %84 = sext i16 %83 to i64
  %85 = mul nsw i64 %84, %82
  %86 = getelementptr inbounds i16, i16* %21, i64 32
  %87 = load i16, i16* %86, align 2
  %88 = sext i16 %87 to i64
  %89 = getelementptr inbounds i16, i16* %20, i64 32
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i64
  %92 = mul nsw i64 %91, %88
  %93 = add nsw i64 %92, %85
  %94 = shl nsw i64 %93, 13
  %95 = sub nsw i64 %85, %92
  %96 = shl nsw i64 %95, 13
  %97 = add nsw i64 %94, %80
  %98 = sub nsw i64 %94, %80
  %99 = add nsw i64 %96, %78
  %100 = sub nsw i64 %96, %78
  %101 = getelementptr inbounds i16, i16* %21, i64 56
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i64
  %104 = getelementptr inbounds i16, i16* %20, i64 56
  %105 = load i16, i16* %104, align 2
  %106 = sext i16 %105 to i64
  %107 = mul nsw i64 %106, %103
  %108 = getelementptr inbounds i16, i16* %21, i64 40
  %109 = load i16, i16* %108, align 2
  %110 = sext i16 %109 to i64
  %111 = getelementptr inbounds i16, i16* %20, i64 40
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i64
  %114 = mul nsw i64 %113, %110
  %115 = getelementptr inbounds i16, i16* %21, i64 24
  %116 = load i16, i16* %115, align 2
  %117 = sext i16 %116 to i64
  %118 = getelementptr inbounds i16, i16* %20, i64 24
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i64
  %121 = mul nsw i64 %120, %117
  %122 = sext i16 %23 to i64
  %123 = getelementptr inbounds i16, i16* %20, i64 8
  %124 = load i16, i16* %123, align 2
  %125 = sext i16 %124 to i64
  %126 = mul nsw i64 %125, %122
  %127 = add nsw i64 %126, %107
  %128 = add nsw i64 %121, %114
  %129 = add nsw i64 %121, %107
  %130 = add nsw i64 %126, %114
  %131 = add nsw i64 %130, %129
  %132 = mul nsw i64 %131, 9633
  %133 = mul nsw i64 %107, 2446
  %134 = mul nsw i64 %114, 16819
  %135 = mul nsw i64 %121, 25172
  %136 = mul nsw i64 %126, 12299
  %137 = mul nsw i64 %127, -7373
  %138 = mul nsw i64 %128, -20995
  %139 = mul nsw i64 %129, -16069
  %140 = mul nsw i64 %130, -3196
  %141 = add nsw i64 %132, %139
  %142 = add nsw i64 %132, %140
  %143 = add nsw i64 %137, %133
  %144 = add nsw i64 %143, %141
  %145 = add nsw i64 %138, %134
  %146 = add nsw i64 %145, %142
  %147 = add nsw i64 %138, %135
  %148 = add nsw i64 %147, %141
  %149 = add nsw i64 %137, %136
  %150 = add nsw i64 %149, %142
  %151 = add nsw i64 %97, 1024
  %152 = add i64 %151, %150
  %153 = lshr i64 %152, 11
  %154 = trunc i64 %153 to i32
  store i32 %154, i32* %19, align 4
  %155 = sub i64 %151, %150
  %156 = lshr i64 %155, 11
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %157, i32* %158, align 4
  %159 = add nsw i64 %99, 1024
  %160 = add i64 %159, %148
  %161 = lshr i64 %160, 11
  %162 = trunc i64 %161 to i32
  %163 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %162, i32* %163, align 4
  %164 = sub i64 %159, %148
  %165 = lshr i64 %164, 11
  %166 = trunc i64 %165 to i32
  %167 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %166, i32* %167, align 4
  %168 = add nsw i64 %100, 1024
  %169 = add i64 %168, %146
  %170 = lshr i64 %169, 11
  %171 = trunc i64 %170 to i32
  %172 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %171, i32* %172, align 4
  %173 = sub i64 %168, %146
  %174 = lshr i64 %173, 11
  %175 = trunc i64 %174 to i32
  %176 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %175, i32* %176, align 4
  %177 = add nsw i64 %98, 1024
  %178 = add i64 %177, %144
  %179 = lshr i64 %178, 11
  %180 = trunc i64 %179 to i32
  %181 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %180, i32* %181, align 4
  %182 = sub i64 %177, %144
  %183 = lshr i64 %182, 11
  %184 = trunc i64 %183 to i32
  br label %185

185:                                              ; preds = %61, %48
  %186 = phi i64 [ 32, %61 ], [ 56, %48 ]
  %187 = phi i32 [ %184, %61 ], [ %54, %48 ]
  %188 = getelementptr inbounds i32, i32* %19, i64 %186
  store i32 %187, i32* %188, align 4
  %189 = getelementptr inbounds i32, i32* %19, i64 1
  %190 = getelementptr inbounds i16, i16* %20, i64 1
  %191 = getelementptr inbounds i16, i16* %21, i64 1
  %192 = add nsw i32 %18, -1
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %14, label %17

194:                                              ; preds = %345, %14
  %195 = phi i64 [ 0, %14 ], [ %347, %345 ]
  %196 = phi i32* [ %13, %14 ], [ %346, %345 ]
  %197 = getelementptr inbounds i8*, i8** %3, i64 %195
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 %16
  %200 = getelementptr inbounds i32, i32* %196, i64 1
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds i32, i32* %196, i64 2
  %203 = load i32, i32* %202, align 4
  %204 = or i32 %201, %203
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %235

206:                                              ; preds = %194
  %207 = getelementptr inbounds i32, i32* %196, i64 3
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %235

210:                                              ; preds = %206
  %211 = getelementptr inbounds i32, i32* %196, i64 4
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %235

214:                                              ; preds = %210
  %215 = getelementptr inbounds i32, i32* %196, i64 5
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %235

218:                                              ; preds = %214
  %219 = getelementptr inbounds i32, i32* %196, i64 6
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %235

222:                                              ; preds = %218
  %223 = getelementptr inbounds i32, i32* %196, i64 7
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %235

226:                                              ; preds = %222
  %227 = load i32, i32* %196, align 4
  %228 = zext i32 %227 to i64
  %229 = add nuw nsw i64 %228, 16
  %230 = lshr i64 %229, 5
  %231 = and i64 %230, 1023
  %232 = getelementptr inbounds i8, i8* %15, i64 %231
  %233 = load i8, i8* %232, align 1
  store i8 %233, i8* %199, align 1
  %234 = getelementptr inbounds i8, i8* %199, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %234, i8 %233, i64 7, i1 false)
  br label %345

235:                                              ; preds = %194, %222, %218, %214, %210, %206
  %236 = phi i32 [ 0, %222 ], [ 0, %218 ], [ 0, %214 ], [ 0, %210 ], [ 0, %206 ], [ %203, %194 ]
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i32, i32* %196, i64 6
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %239 to i64
  %241 = add nsw i64 %240, %237
  %242 = mul nsw i64 %241, 4433
  %243 = mul nsw i64 %240, -15137
  %244 = add nsw i64 %242, %243
  %245 = mul nsw i64 %237, 6270
  %246 = add nsw i64 %242, %245
  %247 = load i32, i32* %196, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i32, i32* %196, i64 4
  %250 = load i32, i32* %249, align 4
  %251 = sext i32 %250 to i64
  %252 = add nsw i64 %251, %248
  %253 = shl nsw i64 %252, 13
  %254 = sub nsw i64 %248, %251
  %255 = shl nsw i64 %254, 13
  %256 = add nsw i64 %253, %246
  %257 = sub nsw i64 %253, %246
  %258 = add nsw i64 %255, %244
  %259 = sub nsw i64 %255, %244
  %260 = getelementptr inbounds i32, i32* %196, i64 7
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i32, i32* %196, i64 5
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds i32, i32* %196, i64 3
  %267 = load i32, i32* %266, align 4
  %268 = sext i32 %267 to i64
  %269 = sext i32 %201 to i64
  %270 = add nsw i64 %262, %269
  %271 = add nsw i64 %268, %265
  %272 = add nsw i64 %268, %262
  %273 = add nsw i64 %265, %269
  %274 = add nsw i64 %272, %273
  %275 = mul nsw i64 %274, 9633
  %276 = mul nsw i64 %262, 2446
  %277 = mul nsw i64 %265, 16819
  %278 = mul nsw i64 %268, 25172
  %279 = mul nsw i64 %269, 12299
  %280 = mul nsw i64 %270, -7373
  %281 = mul nsw i64 %271, -20995
  %282 = mul nsw i64 %272, -16069
  %283 = mul nsw i64 %273, -3196
  %284 = add nsw i64 %275, %282
  %285 = add nsw i64 %275, %283
  %286 = add nsw i64 %280, %276
  %287 = add nsw i64 %286, %284
  %288 = add nsw i64 %281, %277
  %289 = add nsw i64 %288, %285
  %290 = add nsw i64 %281, %278
  %291 = add nsw i64 %290, %284
  %292 = add nsw i64 %280, %279
  %293 = add nsw i64 %292, %285
  %294 = add nsw i64 %256, 131072
  %295 = add nsw i64 %294, %293
  %296 = lshr i64 %295, 18
  %297 = and i64 %296, 1023
  %298 = getelementptr inbounds i8, i8* %15, i64 %297
  %299 = load i8, i8* %298, align 1
  store i8 %299, i8* %199, align 1
  %300 = sub nsw i64 %294, %293
  %301 = lshr i64 %300, 18
  %302 = and i64 %301, 1023
  %303 = getelementptr inbounds i8, i8* %15, i64 %302
  %304 = load i8, i8* %303, align 1
  %305 = getelementptr inbounds i8, i8* %199, i64 7
  store i8 %304, i8* %305, align 1
  %306 = add nsw i64 %258, 131072
  %307 = add nsw i64 %306, %291
  %308 = lshr i64 %307, 18
  %309 = and i64 %308, 1023
  %310 = getelementptr inbounds i8, i8* %15, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = getelementptr inbounds i8, i8* %199, i64 1
  store i8 %311, i8* %312, align 1
  %313 = sub nsw i64 %306, %291
  %314 = lshr i64 %313, 18
  %315 = and i64 %314, 1023
  %316 = getelementptr inbounds i8, i8* %15, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = getelementptr inbounds i8, i8* %199, i64 6
  store i8 %317, i8* %318, align 1
  %319 = add nsw i64 %259, 131072
  %320 = add nsw i64 %319, %289
  %321 = lshr i64 %320, 18
  %322 = and i64 %321, 1023
  %323 = getelementptr inbounds i8, i8* %15, i64 %322
  %324 = load i8, i8* %323, align 1
  %325 = getelementptr inbounds i8, i8* %199, i64 2
  store i8 %324, i8* %325, align 1
  %326 = sub nsw i64 %319, %289
  %327 = lshr i64 %326, 18
  %328 = and i64 %327, 1023
  %329 = getelementptr inbounds i8, i8* %15, i64 %328
  %330 = load i8, i8* %329, align 1
  %331 = getelementptr inbounds i8, i8* %199, i64 5
  store i8 %330, i8* %331, align 1
  %332 = add nsw i64 %257, 131072
  %333 = add nsw i64 %332, %287
  %334 = lshr i64 %333, 18
  %335 = and i64 %334, 1023
  %336 = getelementptr inbounds i8, i8* %15, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = getelementptr inbounds i8, i8* %199, i64 3
  store i8 %337, i8* %338, align 1
  %339 = sub nsw i64 %332, %287
  %340 = lshr i64 %339, 18
  %341 = and i64 %340, 1023
  %342 = getelementptr inbounds i8, i8* %15, i64 %341
  %343 = load i8, i8* %342, align 1
  %344 = getelementptr inbounds i8, i8* %199, i64 4
  store i8 %343, i8* %344, align 1
  br label %345

345:                                              ; preds = %235, %226
  %346 = getelementptr inbounds i32, i32* %196, i64 8
  %347 = add nuw nsw i64 %195, 1
  %348 = icmp eq i64 %347, 8
  br i1 %348, label %349, label %194

349:                                              ; preds = %345
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_7x7(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [49 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [49 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 196, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 196, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [49 x i32], [49 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %137

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %132, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %135, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %134, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %133, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 16
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 16
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = getelementptr inbounds i16, i16* %21, i64 32
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %20, i64 32
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = getelementptr inbounds i16, i16* %21, i64 48
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds i16, i16* %20, i64 48
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = mul nsw i64 %48, %45
  %50 = sub nsw i64 %42, %49
  %51 = mul nsw i64 %50, 7223
  %52 = sub nsw i64 %35, %42
  %53 = mul nsw i64 %52, 2578
  %54 = mul nsw i64 %42, -15083
  %55 = add nsw i64 %54, %28
  %56 = add nsw i64 %55, %53
  %57 = add nsw i64 %56, %51
  %58 = add nsw i64 %49, %35
  %59 = sub nsw i64 %42, %58
  %60 = mul nsw i64 %58, 10438
  %61 = add nsw i64 %60, %28
  %62 = mul nsw i64 %49, -637
  %63 = add nsw i64 %51, %62
  %64 = add nsw i64 %63, %61
  %65 = mul nsw i64 %35, -20239
  %66 = add nsw i64 %53, %65
  %67 = add nsw i64 %66, %61
  %68 = mul nsw i64 %59, 11585
  %69 = add nsw i64 %68, %28
  %70 = getelementptr inbounds i16, i16* %21, i64 8
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i64
  %73 = getelementptr inbounds i16, i16* %20, i64 8
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i64
  %76 = mul nsw i64 %75, %72
  %77 = getelementptr inbounds i16, i16* %21, i64 24
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i64
  %80 = getelementptr inbounds i16, i16* %20, i64 24
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i64
  %83 = mul nsw i64 %82, %79
  %84 = getelementptr inbounds i16, i16* %21, i64 40
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i64
  %87 = getelementptr inbounds i16, i16* %20, i64 40
  %88 = load i16, i16* %87, align 2
  %89 = sext i16 %88 to i64
  %90 = mul nsw i64 %89, %86
  %91 = add nsw i64 %83, %76
  %92 = mul nsw i64 %91, 7663
  %93 = sub nsw i64 %76, %83
  %94 = mul nsw i64 %93, 1395
  %95 = sub nsw i64 %92, %94
  %96 = add nsw i64 %92, %94
  %97 = add nsw i64 %90, %83
  %98 = mul nsw i64 %97, -11295
  %99 = add nsw i64 %96, %98
  %100 = add nsw i64 %90, %76
  %101 = mul nsw i64 %100, 5027
  %102 = add nsw i64 %101, %95
  %103 = mul nsw i64 %90, 15326
  %104 = add nsw i64 %101, %103
  %105 = add nsw i64 %104, %98
  %106 = add nsw i64 %102, %64
  %107 = lshr i64 %106, 11
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %19, align 4
  %109 = sub nsw i64 %64, %102
  %110 = lshr i64 %109, 11
  %111 = trunc i64 %110 to i32
  %112 = getelementptr inbounds i32, i32* %19, i64 42
  store i32 %111, i32* %112, align 4
  %113 = add nsw i64 %99, %57
  %114 = lshr i64 %113, 11
  %115 = trunc i64 %114 to i32
  %116 = getelementptr inbounds i32, i32* %19, i64 7
  store i32 %115, i32* %116, align 4
  %117 = sub nsw i64 %57, %99
  %118 = lshr i64 %117, 11
  %119 = trunc i64 %118 to i32
  %120 = getelementptr inbounds i32, i32* %19, i64 35
  store i32 %119, i32* %120, align 4
  %121 = add nsw i64 %105, %67
  %122 = lshr i64 %121, 11
  %123 = trunc i64 %122 to i32
  %124 = getelementptr inbounds i32, i32* %19, i64 14
  store i32 %123, i32* %124, align 4
  %125 = sub nsw i64 %67, %105
  %126 = lshr i64 %125, 11
  %127 = trunc i64 %126 to i32
  %128 = getelementptr inbounds i32, i32* %19, i64 28
  store i32 %127, i32* %128, align 4
  %129 = lshr i64 %69, 11
  %130 = trunc i64 %129 to i32
  %131 = getelementptr inbounds i32, i32* %19, i64 21
  store i32 %130, i32* %131, align 4
  %132 = add nuw nsw i32 %18, 1
  %133 = getelementptr inbounds i16, i16* %21, i64 1
  %134 = getelementptr inbounds i16, i16* %20, i64 1
  %135 = getelementptr inbounds i32, i32* %19, i64 1
  %136 = icmp eq i32 %132, 7
  br i1 %136, label %14, label %17

137:                                              ; preds = %137, %14
  %138 = phi i64 [ 0, %14 ], [ %241, %137 ]
  %139 = phi i32* [ %13, %14 ], [ %240, %137 ]
  %140 = getelementptr inbounds i8*, i8** %3, i64 %138
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %16
  %143 = load i32, i32* %139, align 4
  %144 = sext i32 %143 to i64
  %145 = shl nsw i64 %144, 13
  %146 = add nsw i64 %145, 131072
  %147 = getelementptr inbounds i32, i32* %139, i64 2
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %139, i64 4
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %139, i64 6
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = sub nsw i64 %152, %155
  %157 = mul nsw i64 %156, 7223
  %158 = sub nsw i64 %149, %152
  %159 = mul nsw i64 %158, 2578
  %160 = mul nsw i64 %152, -15083
  %161 = add nsw i64 %160, %146
  %162 = add nsw i64 %161, %159
  %163 = add nsw i64 %162, %157
  %164 = add nsw i64 %155, %149
  %165 = sub nsw i64 %152, %164
  %166 = mul nsw i64 %164, 10438
  %167 = add nsw i64 %166, %146
  %168 = mul nsw i64 %155, -637
  %169 = add nsw i64 %157, %168
  %170 = add nsw i64 %169, %167
  %171 = mul nsw i64 %149, -20239
  %172 = add nsw i64 %159, %171
  %173 = add nsw i64 %172, %167
  %174 = mul nsw i64 %165, 11585
  %175 = add nsw i64 %174, %146
  %176 = getelementptr inbounds i32, i32* %139, i64 1
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i32, i32* %139, i64 3
  %180 = load i32, i32* %179, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i32, i32* %139, i64 5
  %183 = load i32, i32* %182, align 4
  %184 = sext i32 %183 to i64
  %185 = add nsw i64 %181, %178
  %186 = mul nsw i64 %185, 7663
  %187 = sub nsw i64 %178, %181
  %188 = mul nsw i64 %187, 1395
  %189 = sub nsw i64 %186, %188
  %190 = add nsw i64 %186, %188
  %191 = add nsw i64 %184, %181
  %192 = mul nsw i64 %191, -11295
  %193 = add nsw i64 %190, %192
  %194 = add nsw i64 %184, %178
  %195 = mul nsw i64 %194, 5027
  %196 = add nsw i64 %189, %195
  %197 = mul nsw i64 %184, 15326
  %198 = add nsw i64 %195, %197
  %199 = add nsw i64 %198, %192
  %200 = add nsw i64 %196, %170
  %201 = lshr i64 %200, 18
  %202 = and i64 %201, 1023
  %203 = getelementptr inbounds i8, i8* %15, i64 %202
  %204 = load i8, i8* %203, align 1
  store i8 %204, i8* %142, align 1
  %205 = sub nsw i64 %170, %196
  %206 = lshr i64 %205, 18
  %207 = and i64 %206, 1023
  %208 = getelementptr inbounds i8, i8* %15, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = getelementptr inbounds i8, i8* %142, i64 6
  store i8 %209, i8* %210, align 1
  %211 = add nsw i64 %193, %163
  %212 = lshr i64 %211, 18
  %213 = and i64 %212, 1023
  %214 = getelementptr inbounds i8, i8* %15, i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %142, i64 1
  store i8 %215, i8* %216, align 1
  %217 = sub nsw i64 %163, %193
  %218 = lshr i64 %217, 18
  %219 = and i64 %218, 1023
  %220 = getelementptr inbounds i8, i8* %15, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = getelementptr inbounds i8, i8* %142, i64 5
  store i8 %221, i8* %222, align 1
  %223 = add nsw i64 %199, %173
  %224 = lshr i64 %223, 18
  %225 = and i64 %224, 1023
  %226 = getelementptr inbounds i8, i8* %15, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = getelementptr inbounds i8, i8* %142, i64 2
  store i8 %227, i8* %228, align 1
  %229 = sub nsw i64 %173, %199
  %230 = lshr i64 %229, 18
  %231 = and i64 %230, 1023
  %232 = getelementptr inbounds i8, i8* %15, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = getelementptr inbounds i8, i8* %142, i64 4
  store i8 %233, i8* %234, align 1
  %235 = lshr i64 %175, 18
  %236 = and i64 %235, 1023
  %237 = getelementptr inbounds i8, i8* %15, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = getelementptr inbounds i8, i8* %142, i64 3
  store i8 %238, i8* %239, align 1
  %240 = getelementptr inbounds i32, i32* %139, i64 7
  %241 = add nuw nsw i64 %138, 1
  %242 = icmp eq i64 %241, 7
  br i1 %242, label %243, label %137

243:                                              ; preds = %137
  call void @llvm.lifetime.end.p0i8(i64 196, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_6x6(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [36 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [36 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 144, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [36 x i32], [36 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %109

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %104, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %107, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %106, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %105, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 32
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 32
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %31, 5793
  %36 = mul nsw i64 %35, %34
  %37 = add nsw i64 %36, %28
  %38 = mul nsw i64 %36, -2
  %39 = add nsw i64 %38, %28
  %40 = ashr i64 %39, 11
  %41 = getelementptr inbounds i16, i16* %21, i64 16
  %42 = load i16, i16* %41, align 2
  %43 = sext i16 %42 to i64
  %44 = getelementptr inbounds i16, i16* %20, i64 16
  %45 = load i16, i16* %44, align 2
  %46 = sext i16 %45 to i64
  %47 = mul nsw i64 %43, 10033
  %48 = mul nsw i64 %47, %46
  %49 = add nsw i64 %48, %37
  %50 = sub nsw i64 %37, %48
  %51 = getelementptr inbounds i16, i16* %21, i64 8
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i64
  %54 = getelementptr inbounds i16, i16* %20, i64 8
  %55 = load i16, i16* %54, align 2
  %56 = sext i16 %55 to i64
  %57 = mul nsw i64 %56, %53
  %58 = getelementptr inbounds i16, i16* %21, i64 24
  %59 = load i16, i16* %58, align 2
  %60 = sext i16 %59 to i64
  %61 = getelementptr inbounds i16, i16* %20, i64 24
  %62 = load i16, i16* %61, align 2
  %63 = sext i16 %62 to i64
  %64 = mul nsw i64 %63, %60
  %65 = getelementptr inbounds i16, i16* %21, i64 40
  %66 = load i16, i16* %65, align 2
  %67 = sext i16 %66 to i64
  %68 = getelementptr inbounds i16, i16* %20, i64 40
  %69 = load i16, i16* %68, align 2
  %70 = sext i16 %69 to i64
  %71 = mul nsw i64 %70, %67
  %72 = add nsw i64 %71, %57
  %73 = mul nsw i64 %72, 2998
  %74 = add nsw i64 %64, %57
  %75 = shl nsw i64 %74, 13
  %76 = add nsw i64 %73, %75
  %77 = sub nsw i64 %71, %64
  %78 = shl nsw i64 %77, 13
  %79 = add nsw i64 %73, %78
  %80 = sub nsw i64 %57, %64
  %81 = sub nsw i64 %80, %71
  %82 = shl nsw i64 %81, 2
  %83 = add nsw i64 %76, %49
  %84 = lshr i64 %83, 11
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %19, align 4
  %86 = sub nsw i64 %49, %76
  %87 = lshr i64 %86, 11
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds i32, i32* %19, i64 30
  store i32 %88, i32* %89, align 4
  %90 = add nsw i64 %82, %40
  %91 = trunc i64 %90 to i32
  %92 = getelementptr inbounds i32, i32* %19, i64 6
  store i32 %91, i32* %92, align 4
  %93 = sub nsw i64 %40, %82
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %94, i32* %95, align 4
  %96 = add nsw i64 %79, %50
  %97 = lshr i64 %96, 11
  %98 = trunc i64 %97 to i32
  %99 = getelementptr inbounds i32, i32* %19, i64 12
  store i32 %98, i32* %99, align 4
  %100 = sub nsw i64 %50, %79
  %101 = lshr i64 %100, 11
  %102 = trunc i64 %101 to i32
  %103 = getelementptr inbounds i32, i32* %19, i64 18
  store i32 %102, i32* %103, align 4
  %104 = add nuw nsw i32 %18, 1
  %105 = getelementptr inbounds i16, i16* %21, i64 1
  %106 = getelementptr inbounds i16, i16* %20, i64 1
  %107 = getelementptr inbounds i32, i32* %19, i64 1
  %108 = icmp eq i32 %104, 6
  br i1 %108, label %14, label %17

109:                                              ; preds = %109, %14
  %110 = phi i64 [ 0, %14 ], [ %188, %109 ]
  %111 = phi i32* [ %13, %14 ], [ %187, %109 ]
  %112 = getelementptr inbounds i8*, i8** %3, i64 %110
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %16
  %115 = load i32, i32* %111, align 4
  %116 = sext i32 %115 to i64
  %117 = shl nsw i64 %116, 13
  %118 = add nsw i64 %117, 131072
  %119 = getelementptr inbounds i32, i32* %111, i64 4
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = mul nsw i64 %121, 5793
  %123 = add nsw i64 %118, %122
  %124 = sub nsw i64 %118, %122
  %125 = sub nsw i64 %124, %122
  %126 = getelementptr inbounds i32, i32* %111, i64 2
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = mul nsw i64 %128, 10033
  %130 = add nsw i64 %123, %129
  %131 = sub nsw i64 %123, %129
  %132 = getelementptr inbounds i32, i32* %111, i64 1
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %111, i64 3
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %111, i64 5
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = add nsw i64 %140, %134
  %142 = mul nsw i64 %141, 2998
  %143 = add nsw i64 %137, %134
  %144 = shl nsw i64 %143, 13
  %145 = add nsw i64 %142, %144
  %146 = sub nsw i64 %140, %137
  %147 = shl nsw i64 %146, 13
  %148 = add nsw i64 %142, %147
  %149 = sub nsw i64 %134, %137
  %150 = sub nsw i64 %149, %140
  %151 = shl nsw i64 %150, 13
  %152 = add nsw i64 %145, %130
  %153 = lshr i64 %152, 18
  %154 = and i64 %153, 1023
  %155 = getelementptr inbounds i8, i8* %15, i64 %154
  %156 = load i8, i8* %155, align 1
  store i8 %156, i8* %114, align 1
  %157 = sub nsw i64 %130, %145
  %158 = lshr i64 %157, 18
  %159 = and i64 %158, 1023
  %160 = getelementptr inbounds i8, i8* %15, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = getelementptr inbounds i8, i8* %114, i64 5
  store i8 %161, i8* %162, align 1
  %163 = add nsw i64 %151, %125
  %164 = lshr i64 %163, 18
  %165 = and i64 %164, 1023
  %166 = getelementptr inbounds i8, i8* %15, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = getelementptr inbounds i8, i8* %114, i64 1
  store i8 %167, i8* %168, align 1
  %169 = sub nsw i64 %125, %151
  %170 = lshr i64 %169, 18
  %171 = and i64 %170, 1023
  %172 = getelementptr inbounds i8, i8* %15, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = getelementptr inbounds i8, i8* %114, i64 4
  store i8 %173, i8* %174, align 1
  %175 = add nsw i64 %148, %131
  %176 = lshr i64 %175, 18
  %177 = and i64 %176, 1023
  %178 = getelementptr inbounds i8, i8* %15, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = getelementptr inbounds i8, i8* %114, i64 2
  store i8 %179, i8* %180, align 1
  %181 = sub nsw i64 %131, %148
  %182 = lshr i64 %181, 18
  %183 = and i64 %182, 1023
  %184 = getelementptr inbounds i8, i8* %15, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = getelementptr inbounds i8, i8* %114, i64 3
  store i8 %185, i8* %186, align 1
  %187 = getelementptr inbounds i32, i32* %111, i64 6
  %188 = add nuw nsw i64 %110, 1
  %189 = icmp eq i64 %188, 6
  br i1 %189, label %190, label %109

190:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_5x5(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [25 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [25 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 100, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [25 x i32], [25 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %95

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %90, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %93, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %92, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %91, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 16
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 16
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = getelementptr inbounds i16, i16* %21, i64 32
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %20, i64 32
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = add nsw i64 %42, %35
  %44 = mul nsw i64 %43, 6476
  %45 = sub nsw i64 %35, %42
  %46 = mul nsw i64 %45, 2896
  %47 = add nsw i64 %46, %28
  %48 = add nsw i64 %47, %44
  %49 = sub nsw i64 %47, %44
  %50 = mul nsw i64 %45, -11584
  %51 = add nsw i64 %50, %28
  %52 = getelementptr inbounds i16, i16* %21, i64 8
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i64
  %55 = getelementptr inbounds i16, i16* %20, i64 8
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i64
  %58 = mul nsw i64 %57, %54
  %59 = getelementptr inbounds i16, i16* %21, i64 24
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i64
  %62 = getelementptr inbounds i16, i16* %20, i64 24
  %63 = load i16, i16* %62, align 2
  %64 = sext i16 %63 to i64
  %65 = mul nsw i64 %64, %61
  %66 = add nsw i64 %65, %58
  %67 = mul nsw i64 %66, 6810
  %68 = mul nsw i64 %58, 4209
  %69 = add nsw i64 %67, %68
  %70 = mul nsw i64 %65, -17828
  %71 = add nsw i64 %67, %70
  %72 = add nsw i64 %69, %48
  %73 = lshr i64 %72, 11
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %19, align 4
  %75 = sub nsw i64 %48, %69
  %76 = lshr i64 %75, 11
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds i32, i32* %19, i64 20
  store i32 %77, i32* %78, align 4
  %79 = add nsw i64 %71, %49
  %80 = lshr i64 %79, 11
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds i32, i32* %19, i64 5
  store i32 %81, i32* %82, align 4
  %83 = sub nsw i64 %49, %71
  %84 = lshr i64 %83, 11
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds i32, i32* %19, i64 15
  store i32 %85, i32* %86, align 4
  %87 = lshr i64 %51, 11
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds i32, i32* %19, i64 10
  store i32 %88, i32* %89, align 4
  %90 = add nuw nsw i32 %18, 1
  %91 = getelementptr inbounds i16, i16* %21, i64 1
  %92 = getelementptr inbounds i16, i16* %20, i64 1
  %93 = getelementptr inbounds i32, i32* %19, i64 1
  %94 = icmp eq i32 %90, 5
  br i1 %94, label %14, label %17

95:                                               ; preds = %95, %14
  %96 = phi i64 [ 0, %14 ], [ %161, %95 ]
  %97 = phi i32* [ %13, %14 ], [ %160, %95 ]
  %98 = getelementptr inbounds i8*, i8** %3, i64 %96
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 %16
  %101 = load i32, i32* %97, align 4
  %102 = sext i32 %101 to i64
  %103 = shl nsw i64 %102, 13
  %104 = add nsw i64 %103, 131072
  %105 = getelementptr inbounds i32, i32* %97, i64 2
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %97, i64 4
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = add nsw i64 %110, %107
  %112 = mul nsw i64 %111, 6476
  %113 = sub nsw i64 %107, %110
  %114 = mul nsw i64 %113, 2896
  %115 = add nsw i64 %114, %104
  %116 = add nsw i64 %115, %112
  %117 = sub nsw i64 %115, %112
  %118 = mul nsw i64 %113, -11584
  %119 = add nsw i64 %118, %104
  %120 = getelementptr inbounds i32, i32* %97, i64 1
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %97, i64 3
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = add nsw i64 %125, %122
  %127 = mul nsw i64 %126, 6810
  %128 = mul nsw i64 %122, 4209
  %129 = add nsw i64 %127, %128
  %130 = mul nsw i64 %125, -17828
  %131 = add nsw i64 %127, %130
  %132 = add nsw i64 %129, %116
  %133 = lshr i64 %132, 18
  %134 = and i64 %133, 1023
  %135 = getelementptr inbounds i8, i8* %15, i64 %134
  %136 = load i8, i8* %135, align 1
  store i8 %136, i8* %100, align 1
  %137 = sub nsw i64 %116, %129
  %138 = lshr i64 %137, 18
  %139 = and i64 %138, 1023
  %140 = getelementptr inbounds i8, i8* %15, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = getelementptr inbounds i8, i8* %100, i64 4
  store i8 %141, i8* %142, align 1
  %143 = add nsw i64 %131, %117
  %144 = lshr i64 %143, 18
  %145 = and i64 %144, 1023
  %146 = getelementptr inbounds i8, i8* %15, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds i8, i8* %100, i64 1
  store i8 %147, i8* %148, align 1
  %149 = sub nsw i64 %117, %131
  %150 = lshr i64 %149, 18
  %151 = and i64 %150, 1023
  %152 = getelementptr inbounds i8, i8* %15, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds i8, i8* %100, i64 3
  store i8 %153, i8* %154, align 1
  %155 = lshr i64 %119, 18
  %156 = and i64 %155, 1023
  %157 = getelementptr inbounds i8, i8* %15, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = getelementptr inbounds i8, i8* %100, i64 2
  store i8 %158, i8* %159, align 1
  %160 = getelementptr inbounds i32, i32* %97, i64 5
  %161 = add nuw nsw i64 %96, 1
  %162 = icmp eq i64 %161, 5
  br i1 %162, label %163, label %95

163:                                              ; preds = %95
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_3x3(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [9 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [9 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 36, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 0
  %14 = load i16, i16* %2, align 2
  %15 = sext i16 %14 to i64
  %16 = load i16, i16* %12, align 2
  %17 = sext i16 %16 to i64
  %18 = shl nsw i64 %15, 13
  %19 = mul nsw i64 %18, %17
  %20 = or i64 %19, 1024
  %21 = getelementptr inbounds i16, i16* %2, i64 16
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = getelementptr inbounds i16, i16* %12, i64 16
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i64
  %27 = mul nsw i64 %23, 5793
  %28 = mul nsw i64 %27, %26
  %29 = add nsw i64 %28, %20
  %30 = mul nsw i64 %28, -2
  %31 = add nsw i64 %30, %20
  %32 = getelementptr inbounds i16, i16* %2, i64 8
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = getelementptr inbounds i16, i16* %12, i64 8
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i64
  %38 = mul nsw i64 %34, 10033
  %39 = mul nsw i64 %38, %37
  %40 = add nsw i64 %39, %29
  %41 = lshr i64 %40, 11
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %13, align 16
  %43 = sub nsw i64 %29, %39
  %44 = lshr i64 %43, 11
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 6
  store i32 %45, i32* %46, align 8
  %47 = lshr i64 %31, 11
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 3
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds i16, i16* %2, i64 1
  %51 = getelementptr inbounds i16, i16* %12, i64 1
  %52 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 1
  %53 = load i16, i16* %50, align 2
  %54 = sext i16 %53 to i64
  %55 = load i16, i16* %51, align 2
  %56 = sext i16 %55 to i64
  %57 = shl nsw i64 %54, 13
  %58 = mul nsw i64 %57, %56
  %59 = or i64 %58, 1024
  %60 = getelementptr inbounds i16, i16* %2, i64 17
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i64
  %63 = getelementptr inbounds i16, i16* %12, i64 17
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i64
  %66 = mul nsw i64 %62, 5793
  %67 = mul nsw i64 %66, %65
  %68 = add nsw i64 %67, %59
  %69 = mul nsw i64 %67, -2
  %70 = add nsw i64 %69, %59
  %71 = getelementptr inbounds i16, i16* %2, i64 9
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i64
  %74 = getelementptr inbounds i16, i16* %12, i64 9
  %75 = load i16, i16* %74, align 2
  %76 = sext i16 %75 to i64
  %77 = mul nsw i64 %73, 10033
  %78 = mul nsw i64 %77, %76
  %79 = add nsw i64 %78, %68
  %80 = lshr i64 %79, 11
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* %52, align 4
  %82 = sub nsw i64 %68, %78
  %83 = lshr i64 %82, 11
  %84 = trunc i64 %83 to i32
  %85 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 7
  store i32 %84, i32* %85, align 4
  %86 = lshr i64 %70, 11
  %87 = trunc i64 %86 to i32
  %88 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 4
  store i32 %87, i32* %88, align 16
  %89 = getelementptr inbounds i16, i16* %2, i64 2
  %90 = getelementptr inbounds i16, i16* %12, i64 2
  %91 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 2
  %92 = load i16, i16* %89, align 2
  %93 = sext i16 %92 to i64
  %94 = load i16, i16* %90, align 2
  %95 = sext i16 %94 to i64
  %96 = shl nsw i64 %93, 13
  %97 = mul nsw i64 %96, %95
  %98 = or i64 %97, 1024
  %99 = getelementptr inbounds i16, i16* %2, i64 18
  %100 = load i16, i16* %99, align 2
  %101 = sext i16 %100 to i64
  %102 = getelementptr inbounds i16, i16* %12, i64 18
  %103 = load i16, i16* %102, align 2
  %104 = sext i16 %103 to i64
  %105 = mul nsw i64 %101, 5793
  %106 = mul nsw i64 %105, %104
  %107 = add nsw i64 %106, %98
  %108 = mul nsw i64 %106, -2
  %109 = add nsw i64 %108, %98
  %110 = getelementptr inbounds i16, i16* %2, i64 10
  %111 = load i16, i16* %110, align 2
  %112 = sext i16 %111 to i64
  %113 = getelementptr inbounds i16, i16* %12, i64 10
  %114 = load i16, i16* %113, align 2
  %115 = sext i16 %114 to i64
  %116 = mul nsw i64 %112, 10033
  %117 = mul nsw i64 %116, %115
  %118 = add nsw i64 %117, %107
  %119 = lshr i64 %118, 11
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %91, align 8
  %121 = sub nsw i64 %107, %117
  %122 = lshr i64 %121, 11
  %123 = trunc i64 %122 to i32
  %124 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 8
  store i32 %123, i32* %124, align 16
  %125 = lshr i64 %109, 11
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 5
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %8, i64 128
  %129 = zext i32 %4 to i64
  %130 = load i8*, i8** %3, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %129
  %132 = shl i64 %41, 32
  %133 = ashr exact i64 %132, 19
  %134 = add nsw i64 %133, 131072
  %135 = shl i64 %119, 32
  %136 = ashr exact i64 %135, 32
  %137 = mul nsw i64 %136, 5793
  %138 = add nsw i64 %134, %137
  %139 = mul nsw i64 %136, -11586
  %140 = add nsw i64 %139, %134
  %141 = shl i64 %80, 32
  %142 = ashr exact i64 %141, 32
  %143 = mul nsw i64 %142, 10033
  %144 = add nsw i64 %138, %143
  %145 = lshr i64 %144, 18
  %146 = and i64 %145, 1023
  %147 = getelementptr inbounds i8, i8* %128, i64 %146
  %148 = load i8, i8* %147, align 1
  store i8 %148, i8* %131, align 1
  %149 = sub nsw i64 %138, %143
  %150 = lshr i64 %149, 18
  %151 = and i64 %150, 1023
  %152 = getelementptr inbounds i8, i8* %128, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds i8, i8* %131, i64 2
  store i8 %153, i8* %154, align 1
  %155 = lshr i64 %140, 18
  %156 = and i64 %155, 1023
  %157 = getelementptr inbounds i8, i8* %128, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = getelementptr inbounds i8, i8* %131, i64 1
  store i8 %158, i8* %159, align 1
  %160 = getelementptr inbounds i8*, i8** %3, i64 1
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 %129
  %163 = load i32, i32* %49, align 4
  %164 = sext i32 %163 to i64
  %165 = shl nsw i64 %164, 13
  %166 = add nsw i64 %165, 131072
  %167 = shl i64 %125, 32
  %168 = ashr exact i64 %167, 32
  %169 = mul nsw i64 %168, 5793
  %170 = add nsw i64 %166, %169
  %171 = mul nsw i64 %168, -11586
  %172 = add nsw i64 %171, %166
  %173 = shl i64 %86, 32
  %174 = ashr exact i64 %173, 32
  %175 = mul nsw i64 %174, 10033
  %176 = add nsw i64 %170, %175
  %177 = lshr i64 %176, 18
  %178 = and i64 %177, 1023
  %179 = getelementptr inbounds i8, i8* %128, i64 %178
  %180 = load i8, i8* %179, align 1
  store i8 %180, i8* %162, align 1
  %181 = sub nsw i64 %170, %175
  %182 = lshr i64 %181, 18
  %183 = and i64 %182, 1023
  %184 = getelementptr inbounds i8, i8* %128, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = getelementptr inbounds i8, i8* %162, i64 2
  store i8 %185, i8* %186, align 1
  %187 = lshr i64 %172, 18
  %188 = and i64 %187, 1023
  %189 = getelementptr inbounds i8, i8* %128, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = getelementptr inbounds i8, i8* %162, i64 1
  store i8 %190, i8* %191, align 1
  %192 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 6
  %193 = getelementptr inbounds i8*, i8** %3, i64 2
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 %129
  %196 = load i32, i32* %192, align 8
  %197 = sext i32 %196 to i64
  %198 = shl nsw i64 %197, 13
  %199 = add nsw i64 %198, 131072
  %200 = shl i64 %122, 32
  %201 = ashr exact i64 %200, 32
  %202 = mul nsw i64 %201, 5793
  %203 = add nsw i64 %199, %202
  %204 = mul nsw i64 %201, -11586
  %205 = add nsw i64 %204, %199
  %206 = getelementptr inbounds [9 x i32], [9 x i32]* %6, i64 0, i64 7
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = mul nsw i64 %208, 10033
  %210 = add nsw i64 %203, %209
  %211 = lshr i64 %210, 18
  %212 = and i64 %211, 1023
  %213 = getelementptr inbounds i8, i8* %128, i64 %212
  %214 = load i8, i8* %213, align 1
  store i8 %214, i8* %195, align 1
  %215 = sub nsw i64 %203, %209
  %216 = lshr i64 %215, 18
  %217 = and i64 %216, 1023
  %218 = getelementptr inbounds i8, i8* %128, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds i8, i8* %195, i64 2
  store i8 %219, i8* %220, align 1
  %221 = lshr i64 %205, 18
  %222 = and i64 %221, 1023
  %223 = getelementptr inbounds i8, i8* %128, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = getelementptr inbounds i8, i8* %195, i64 1
  store i8 %224, i8* %225, align 1
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_9x9(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [72 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [72 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 288, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [72 x i32], [72 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %152

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %147, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %150, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %149, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %148, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 16
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 16
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = getelementptr inbounds i16, i16* %21, i64 32
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %20, i64 32
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = getelementptr inbounds i16, i16* %21, i64 48
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds i16, i16* %20, i64 48
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = mul nsw i64 %45, 5793
  %50 = mul nsw i64 %49, %48
  %51 = add nsw i64 %50, %28
  %52 = sub nsw i64 %28, %50
  %53 = sub nsw i64 %52, %50
  %54 = sub nsw i64 %35, %42
  %55 = mul nsw i64 %54, 5793
  %56 = add nsw i64 %53, %55
  %57 = mul nsw i64 %54, -11586
  %58 = add nsw i64 %57, %53
  %59 = add nsw i64 %42, %35
  %60 = mul nsw i64 %59, 10887
  %61 = mul nsw i64 %35, 8875
  %62 = mul nsw i64 %42, 2012
  %63 = sub nsw i64 %60, %62
  %64 = add nsw i64 %63, %51
  %65 = sub nsw i64 %51, %60
  %66 = add nsw i64 %65, %61
  %67 = sub nsw i64 %51, %61
  %68 = add nsw i64 %67, %62
  %69 = getelementptr inbounds i16, i16* %21, i64 8
  %70 = load i16, i16* %69, align 2
  %71 = sext i16 %70 to i64
  %72 = getelementptr inbounds i16, i16* %20, i64 8
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i64
  %75 = mul nsw i64 %74, %71
  %76 = getelementptr inbounds i16, i16* %21, i64 24
  %77 = load i16, i16* %76, align 2
  %78 = sext i16 %77 to i64
  %79 = getelementptr inbounds i16, i16* %20, i64 24
  %80 = load i16, i16* %79, align 2
  %81 = sext i16 %80 to i64
  %82 = getelementptr inbounds i16, i16* %21, i64 40
  %83 = load i16, i16* %82, align 2
  %84 = sext i16 %83 to i64
  %85 = getelementptr inbounds i16, i16* %20, i64 40
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i64
  %88 = mul nsw i64 %87, %84
  %89 = getelementptr inbounds i16, i16* %21, i64 56
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i64
  %92 = getelementptr inbounds i16, i16* %20, i64 56
  %93 = load i16, i16* %92, align 2
  %94 = sext i16 %93 to i64
  %95 = mul nsw i64 %94, %91
  %96 = mul nsw i64 %78, -10033
  %97 = mul nsw i64 %96, %81
  %98 = add nsw i64 %88, %75
  %99 = mul nsw i64 %98, 7447
  %100 = add nsw i64 %95, %75
  %101 = mul nsw i64 %100, 3962
  %102 = sub nsw i64 %99, %97
  %103 = add nsw i64 %102, %101
  %104 = sub nsw i64 %88, %95
  %105 = mul nsw i64 %104, 11409
  %106 = sub nsw i64 %97, %105
  %107 = add nsw i64 %106, %99
  %108 = add nsw i64 %105, %97
  %109 = add nsw i64 %108, %101
  %110 = sub nsw i64 %75, %88
  %111 = sub nsw i64 %110, %95
  %112 = mul nsw i64 %111, 10033
  %113 = add nsw i64 %103, %64
  %114 = lshr i64 %113, 11
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %19, align 4
  %116 = sub nsw i64 %64, %103
  %117 = lshr i64 %116, 11
  %118 = trunc i64 %117 to i32
  %119 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %118, i32* %119, align 4
  %120 = add nsw i64 %112, %56
  %121 = lshr i64 %120, 11
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %122, i32* %123, align 4
  %124 = sub nsw i64 %56, %112
  %125 = lshr i64 %124, 11
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %126, i32* %127, align 4
  %128 = add nsw i64 %107, %66
  %129 = lshr i64 %128, 11
  %130 = trunc i64 %129 to i32
  %131 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %130, i32* %131, align 4
  %132 = sub nsw i64 %66, %107
  %133 = lshr i64 %132, 11
  %134 = trunc i64 %133 to i32
  %135 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %134, i32* %135, align 4
  %136 = add nsw i64 %109, %68
  %137 = lshr i64 %136, 11
  %138 = trunc i64 %137 to i32
  %139 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %138, i32* %139, align 4
  %140 = sub nsw i64 %68, %109
  %141 = lshr i64 %140, 11
  %142 = trunc i64 %141 to i32
  %143 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %142, i32* %143, align 4
  %144 = lshr i64 %58, 11
  %145 = trunc i64 %144 to i32
  %146 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %145, i32* %146, align 4
  %147 = add nuw nsw i32 %18, 1
  %148 = getelementptr inbounds i16, i16* %21, i64 1
  %149 = getelementptr inbounds i16, i16* %20, i64 1
  %150 = getelementptr inbounds i32, i32* %19, i64 1
  %151 = icmp eq i32 %147, 8
  br i1 %151, label %14, label %17

152:                                              ; preds = %152, %14
  %153 = phi i64 [ 0, %14 ], [ %271, %152 ]
  %154 = phi i32* [ %13, %14 ], [ %270, %152 ]
  %155 = getelementptr inbounds i8*, i8** %3, i64 %153
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 %16
  %158 = load i32, i32* %154, align 4
  %159 = sext i32 %158 to i64
  %160 = shl nsw i64 %159, 13
  %161 = add nsw i64 %160, 131072
  %162 = getelementptr inbounds i32, i32* %154, i64 2
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, i32* %154, i64 4
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i32, i32* %154, i64 6
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = mul nsw i64 %170, 5793
  %172 = add nsw i64 %171, %161
  %173 = sub nsw i64 %161, %171
  %174 = sub nsw i64 %173, %171
  %175 = sub nsw i64 %164, %167
  %176 = mul nsw i64 %175, 5793
  %177 = add nsw i64 %174, %176
  %178 = mul nsw i64 %175, -11586
  %179 = add nsw i64 %178, %174
  %180 = add nsw i64 %167, %164
  %181 = mul nsw i64 %180, 10887
  %182 = mul nsw i64 %164, 8875
  %183 = mul nsw i64 %167, 2012
  %184 = sub nsw i64 %181, %183
  %185 = add nsw i64 %184, %172
  %186 = sub nsw i64 %172, %181
  %187 = add nsw i64 %186, %182
  %188 = sub nsw i64 %172, %182
  %189 = add nsw i64 %188, %183
  %190 = getelementptr inbounds i32, i32* %154, i64 1
  %191 = load i32, i32* %190, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i32, i32* %154, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %154, i64 5
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i32, i32* %154, i64 7
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = mul nsw i64 %195, -10033
  %203 = add nsw i64 %198, %192
  %204 = mul nsw i64 %203, 7447
  %205 = add nsw i64 %201, %192
  %206 = mul nsw i64 %205, 3962
  %207 = sub nsw i64 %204, %202
  %208 = add nsw i64 %207, %206
  %209 = sub nsw i64 %198, %201
  %210 = mul nsw i64 %209, 11409
  %211 = sub nsw i64 %202, %210
  %212 = add nsw i64 %211, %204
  %213 = add nsw i64 %210, %202
  %214 = add nsw i64 %213, %206
  %215 = sub nsw i64 %192, %198
  %216 = sub nsw i64 %215, %201
  %217 = mul nsw i64 %216, 10033
  %218 = add nsw i64 %208, %185
  %219 = lshr i64 %218, 18
  %220 = and i64 %219, 1023
  %221 = getelementptr inbounds i8, i8* %15, i64 %220
  %222 = load i8, i8* %221, align 1
  store i8 %222, i8* %157, align 1
  %223 = sub nsw i64 %185, %208
  %224 = lshr i64 %223, 18
  %225 = and i64 %224, 1023
  %226 = getelementptr inbounds i8, i8* %15, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = getelementptr inbounds i8, i8* %157, i64 8
  store i8 %227, i8* %228, align 1
  %229 = add nsw i64 %217, %177
  %230 = lshr i64 %229, 18
  %231 = and i64 %230, 1023
  %232 = getelementptr inbounds i8, i8* %15, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = getelementptr inbounds i8, i8* %157, i64 1
  store i8 %233, i8* %234, align 1
  %235 = sub nsw i64 %177, %217
  %236 = lshr i64 %235, 18
  %237 = and i64 %236, 1023
  %238 = getelementptr inbounds i8, i8* %15, i64 %237
  %239 = load i8, i8* %238, align 1
  %240 = getelementptr inbounds i8, i8* %157, i64 7
  store i8 %239, i8* %240, align 1
  %241 = add nsw i64 %212, %187
  %242 = lshr i64 %241, 18
  %243 = and i64 %242, 1023
  %244 = getelementptr inbounds i8, i8* %15, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = getelementptr inbounds i8, i8* %157, i64 2
  store i8 %245, i8* %246, align 1
  %247 = sub nsw i64 %187, %212
  %248 = lshr i64 %247, 18
  %249 = and i64 %248, 1023
  %250 = getelementptr inbounds i8, i8* %15, i64 %249
  %251 = load i8, i8* %250, align 1
  %252 = getelementptr inbounds i8, i8* %157, i64 6
  store i8 %251, i8* %252, align 1
  %253 = add nsw i64 %214, %189
  %254 = lshr i64 %253, 18
  %255 = and i64 %254, 1023
  %256 = getelementptr inbounds i8, i8* %15, i64 %255
  %257 = load i8, i8* %256, align 1
  %258 = getelementptr inbounds i8, i8* %157, i64 3
  store i8 %257, i8* %258, align 1
  %259 = sub nsw i64 %189, %214
  %260 = lshr i64 %259, 18
  %261 = and i64 %260, 1023
  %262 = getelementptr inbounds i8, i8* %15, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = getelementptr inbounds i8, i8* %157, i64 5
  store i8 %263, i8* %264, align 1
  %265 = lshr i64 %179, 18
  %266 = and i64 %265, 1023
  %267 = getelementptr inbounds i8, i8* %15, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = getelementptr inbounds i8, i8* %157, i64 4
  store i8 %268, i8* %269, align 1
  %270 = getelementptr inbounds i32, i32* %154, i64 8
  %271 = add nuw nsw i64 %153, 1
  %272 = icmp eq i64 %271, 9
  br i1 %272, label %273, label %152

273:                                              ; preds = %152
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_10x10(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [80 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [80 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 320, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [80 x i32], [80 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %162

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %157, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %160, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %159, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %158, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 32
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 32
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = mul nsw i64 %35, 9373
  %37 = add nsw i64 %36, %28
  %38 = mul nsw i64 %35, -3580
  %39 = add nsw i64 %38, %28
  %40 = mul nsw i64 %35, -11586
  %41 = add nsw i64 %40, %28
  %42 = ashr i64 %41, 11
  %43 = getelementptr inbounds i16, i16* %21, i64 16
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds i16, i16* %20, i64 16
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = mul nsw i64 %48, %45
  %50 = getelementptr inbounds i16, i16* %21, i64 48
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i64
  %53 = getelementptr inbounds i16, i16* %20, i64 48
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i64
  %56 = mul nsw i64 %55, %52
  %57 = add nsw i64 %56, %49
  %58 = mul nsw i64 %57, 6810
  %59 = mul nsw i64 %49, 4209
  %60 = add nsw i64 %58, %59
  %61 = mul nsw i64 %56, -17828
  %62 = add nsw i64 %58, %61
  %63 = add nsw i64 %60, %37
  %64 = sub nsw i64 %37, %60
  %65 = add nsw i64 %62, %39
  %66 = sub nsw i64 %39, %62
  %67 = getelementptr inbounds i16, i16* %21, i64 8
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i64
  %70 = getelementptr inbounds i16, i16* %20, i64 8
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i64
  %73 = mul nsw i64 %72, %69
  %74 = getelementptr inbounds i16, i16* %21, i64 24
  %75 = load i16, i16* %74, align 2
  %76 = sext i16 %75 to i64
  %77 = getelementptr inbounds i16, i16* %20, i64 24
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i64
  %80 = mul nsw i64 %79, %76
  %81 = getelementptr inbounds i16, i16* %21, i64 40
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i64
  %84 = getelementptr inbounds i16, i16* %20, i64 40
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i64
  %87 = mul nsw i64 %86, %83
  %88 = getelementptr inbounds i16, i16* %21, i64 56
  %89 = load i16, i16* %88, align 2
  %90 = sext i16 %89 to i64
  %91 = getelementptr inbounds i16, i16* %20, i64 56
  %92 = load i16, i16* %91, align 2
  %93 = sext i16 %92 to i64
  %94 = mul nsw i64 %93, %90
  %95 = add nsw i64 %94, %80
  %96 = sub nsw i64 %80, %94
  %97 = mul nsw i64 %96, 2531
  %98 = shl nsw i64 %87, 13
  %99 = mul nsw i64 %95, 7791
  %100 = add nsw i64 %97, %98
  %101 = mul nsw i64 %73, 11443
  %102 = add nsw i64 %99, %101
  %103 = add nsw i64 %102, %100
  %104 = mul nsw i64 %73, 1812
  %105 = sub nsw i64 %104, %99
  %106 = add nsw i64 %105, %100
  %107 = mul nsw i64 %95, 4815
  %108 = sub nsw i64 %98, %97
  %109 = shl nsw i64 %96, 12
  %110 = sub nsw i64 %108, %109
  %111 = sub nsw i64 %73, %87
  %112 = sub nsw i64 %111, %96
  %113 = shl nsw i64 %112, 2
  %114 = mul nsw i64 %73, 10323
  %115 = sub nsw i64 %114, %107
  %116 = sub nsw i64 %115, %110
  %117 = mul nsw i64 %73, 5260
  %118 = sub nsw i64 %117, %107
  %119 = add nsw i64 %110, %118
  %120 = add nsw i64 %103, %63
  %121 = lshr i64 %120, 11
  %122 = trunc i64 %121 to i32
  store i32 %122, i32* %19, align 4
  %123 = sub nsw i64 %63, %103
  %124 = lshr i64 %123, 11
  %125 = trunc i64 %124 to i32
  %126 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %125, i32* %126, align 4
  %127 = add nsw i64 %116, %65
  %128 = lshr i64 %127, 11
  %129 = trunc i64 %128 to i32
  %130 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %129, i32* %130, align 4
  %131 = sub nsw i64 %65, %116
  %132 = lshr i64 %131, 11
  %133 = trunc i64 %132 to i32
  %134 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %133, i32* %134, align 4
  %135 = add nsw i64 %113, %42
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %136, i32* %137, align 4
  %138 = sub nsw i64 %42, %113
  %139 = trunc i64 %138 to i32
  %140 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %139, i32* %140, align 4
  %141 = add nsw i64 %119, %66
  %142 = lshr i64 %141, 11
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %143, i32* %144, align 4
  %145 = sub nsw i64 %66, %119
  %146 = lshr i64 %145, 11
  %147 = trunc i64 %146 to i32
  %148 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %147, i32* %148, align 4
  %149 = add nsw i64 %106, %64
  %150 = lshr i64 %149, 11
  %151 = trunc i64 %150 to i32
  %152 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %151, i32* %152, align 4
  %153 = sub nsw i64 %64, %106
  %154 = lshr i64 %153, 11
  %155 = trunc i64 %154 to i32
  %156 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %155, i32* %156, align 4
  %157 = add nuw nsw i32 %18, 1
  %158 = getelementptr inbounds i16, i16* %21, i64 1
  %159 = getelementptr inbounds i16, i16* %20, i64 1
  %160 = getelementptr inbounds i32, i32* %19, i64 1
  %161 = icmp eq i32 %157, 8
  br i1 %161, label %14, label %17

162:                                              ; preds = %162, %14
  %163 = phi i64 [ 0, %14 ], [ %294, %162 ]
  %164 = phi i32* [ %13, %14 ], [ %293, %162 ]
  %165 = getelementptr inbounds i8*, i8** %3, i64 %163
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 %16
  %168 = load i32, i32* %164, align 4
  %169 = sext i32 %168 to i64
  %170 = shl nsw i64 %169, 13
  %171 = add nsw i64 %170, 131072
  %172 = getelementptr inbounds i32, i32* %164, i64 4
  %173 = load i32, i32* %172, align 4
  %174 = sext i32 %173 to i64
  %175 = mul nsw i64 %174, 9373
  %176 = add nsw i64 %171, %175
  %177 = mul nsw i64 %174, -3580
  %178 = add nsw i64 %171, %177
  %179 = mul nsw i64 %174, -11586
  %180 = add nsw i64 %171, %179
  %181 = getelementptr inbounds i32, i32* %164, i64 2
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i32, i32* %164, i64 6
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = add nsw i64 %186, %183
  %188 = mul nsw i64 %187, 6810
  %189 = mul nsw i64 %183, 4209
  %190 = add nsw i64 %188, %189
  %191 = mul nsw i64 %186, -17828
  %192 = add nsw i64 %188, %191
  %193 = add nsw i64 %190, %176
  %194 = sub nsw i64 %176, %190
  %195 = add nsw i64 %192, %178
  %196 = sub nsw i64 %178, %192
  %197 = getelementptr inbounds i32, i32* %164, i64 1
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32, i32* %164, i64 3
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i32, i32* %164, i64 5
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = shl nsw i64 %205, 13
  %207 = getelementptr inbounds i32, i32* %164, i64 7
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = add nsw i64 %209, %202
  %211 = sub nsw i64 %202, %209
  %212 = mul nsw i64 %211, 2531
  %213 = mul nsw i64 %210, 7791
  %214 = add nsw i64 %212, %206
  %215 = mul nsw i64 %199, 11443
  %216 = add nsw i64 %213, %215
  %217 = add nsw i64 %216, %214
  %218 = mul nsw i64 %199, 1812
  %219 = sub nsw i64 %218, %213
  %220 = add nsw i64 %219, %214
  %221 = mul nsw i64 %210, 4815
  %222 = sub nsw i64 %206, %212
  %223 = shl nsw i64 %211, 12
  %224 = sub nsw i64 %222, %223
  %225 = sub nsw i64 %199, %211
  %226 = shl nsw i64 %225, 13
  %227 = sub nsw i64 %226, %206
  %228 = mul nsw i64 %199, 10323
  %229 = sub nsw i64 %228, %221
  %230 = sub nsw i64 %229, %224
  %231 = mul nsw i64 %199, 5260
  %232 = sub nsw i64 %231, %221
  %233 = add nsw i64 %224, %232
  %234 = add nsw i64 %217, %193
  %235 = lshr i64 %234, 18
  %236 = and i64 %235, 1023
  %237 = getelementptr inbounds i8, i8* %15, i64 %236
  %238 = load i8, i8* %237, align 1
  store i8 %238, i8* %167, align 1
  %239 = sub nsw i64 %193, %217
  %240 = lshr i64 %239, 18
  %241 = and i64 %240, 1023
  %242 = getelementptr inbounds i8, i8* %15, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = getelementptr inbounds i8, i8* %167, i64 9
  store i8 %243, i8* %244, align 1
  %245 = add nsw i64 %230, %195
  %246 = lshr i64 %245, 18
  %247 = and i64 %246, 1023
  %248 = getelementptr inbounds i8, i8* %15, i64 %247
  %249 = load i8, i8* %248, align 1
  %250 = getelementptr inbounds i8, i8* %167, i64 1
  store i8 %249, i8* %250, align 1
  %251 = sub nsw i64 %195, %230
  %252 = lshr i64 %251, 18
  %253 = and i64 %252, 1023
  %254 = getelementptr inbounds i8, i8* %15, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = getelementptr inbounds i8, i8* %167, i64 8
  store i8 %255, i8* %256, align 1
  %257 = add nsw i64 %227, %180
  %258 = lshr i64 %257, 18
  %259 = and i64 %258, 1023
  %260 = getelementptr inbounds i8, i8* %15, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = getelementptr inbounds i8, i8* %167, i64 2
  store i8 %261, i8* %262, align 1
  %263 = sub nsw i64 %180, %227
  %264 = lshr i64 %263, 18
  %265 = and i64 %264, 1023
  %266 = getelementptr inbounds i8, i8* %15, i64 %265
  %267 = load i8, i8* %266, align 1
  %268 = getelementptr inbounds i8, i8* %167, i64 7
  store i8 %267, i8* %268, align 1
  %269 = add nsw i64 %233, %196
  %270 = lshr i64 %269, 18
  %271 = and i64 %270, 1023
  %272 = getelementptr inbounds i8, i8* %15, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = getelementptr inbounds i8, i8* %167, i64 3
  store i8 %273, i8* %274, align 1
  %275 = sub nsw i64 %196, %233
  %276 = lshr i64 %275, 18
  %277 = and i64 %276, 1023
  %278 = getelementptr inbounds i8, i8* %15, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = getelementptr inbounds i8, i8* %167, i64 6
  store i8 %279, i8* %280, align 1
  %281 = add nsw i64 %220, %194
  %282 = lshr i64 %281, 18
  %283 = and i64 %282, 1023
  %284 = getelementptr inbounds i8, i8* %15, i64 %283
  %285 = load i8, i8* %284, align 1
  %286 = getelementptr inbounds i8, i8* %167, i64 4
  store i8 %285, i8* %286, align 1
  %287 = sub nsw i64 %194, %220
  %288 = lshr i64 %287, 18
  %289 = and i64 %288, 1023
  %290 = getelementptr inbounds i8, i8* %15, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = getelementptr inbounds i8, i8* %167, i64 5
  store i8 %291, i8* %292, align 1
  %293 = getelementptr inbounds i32, i32* %164, i64 8
  %294 = add nuw nsw i64 %163, 1
  %295 = icmp eq i64 %294, 10
  br i1 %295, label %296, label %162

296:                                              ; preds = %162
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_11x11(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [88 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [88 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 352, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [88 x i32], [88 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %187

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %182, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %185, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %184, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %183, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 16
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 16
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = getelementptr inbounds i16, i16* %21, i64 32
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %20, i64 32
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = getelementptr inbounds i16, i16* %21, i64 48
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds i16, i16* %20, i64 48
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = mul nsw i64 %48, %45
  %50 = sub nsw i64 %42, %49
  %51 = mul nsw i64 %50, 20862
  %52 = sub nsw i64 %42, %35
  %53 = mul nsw i64 %52, 3529
  %54 = add nsw i64 %49, %35
  %55 = mul nsw i64 %54, -9467
  %56 = sub nsw i64 %54, %42
  %57 = mul nsw i64 %56, 11116
  %58 = add nsw i64 %57, %28
  %59 = mul nsw i64 %42, -14924
  %60 = add nsw i64 %58, %51
  %61 = add i64 %60, %59
  %62 = add i64 %61, %53
  %63 = mul nsw i64 %49, 17333
  %64 = add i64 %60, %63
  %65 = mul nsw i64 %35, -12399
  %66 = add nsw i64 %58, %53
  %67 = add i64 %66, %65
  %68 = add nsw i64 %58, %55
  %69 = mul nsw i64 %49, -6461
  %70 = add i64 %68, %69
  %71 = mul nsw i64 %42, 15929
  %72 = mul nsw i64 %35, -11395
  %73 = add nsw i64 %71, %72
  %74 = add nsw i64 %73, %68
  %75 = mul nsw i64 %56, -11585
  %76 = add nsw i64 %75, %28
  %77 = getelementptr inbounds i16, i16* %21, i64 8
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i64
  %80 = getelementptr inbounds i16, i16* %20, i64 8
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i64
  %83 = mul nsw i64 %82, %79
  %84 = getelementptr inbounds i16, i16* %21, i64 24
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i64
  %87 = getelementptr inbounds i16, i16* %20, i64 24
  %88 = load i16, i16* %87, align 2
  %89 = sext i16 %88 to i64
  %90 = mul nsw i64 %89, %86
  %91 = getelementptr inbounds i16, i16* %21, i64 40
  %92 = load i16, i16* %91, align 2
  %93 = sext i16 %92 to i64
  %94 = getelementptr inbounds i16, i16* %20, i64 40
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i64
  %97 = mul nsw i64 %96, %93
  %98 = getelementptr inbounds i16, i16* %21, i64 56
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i64
  %101 = getelementptr inbounds i16, i16* %20, i64 56
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i64
  %104 = mul nsw i64 %103, %100
  %105 = add nsw i64 %90, %83
  %106 = add nsw i64 %97, %105
  %107 = add nsw i64 %106, %104
  %108 = mul nsw i64 %107, 3264
  %109 = mul nsw i64 %105, 7274
  %110 = add nsw i64 %97, %83
  %111 = mul nsw i64 %110, 5492
  %112 = add nsw i64 %104, %83
  %113 = mul nsw i64 %112, 3000
  %114 = add nsw i64 %108, %113
  %115 = mul nsw i64 %83, -7562
  %116 = add nsw i64 %109, %115
  %117 = add nsw i64 %116, %111
  %118 = add nsw i64 %117, %114
  %119 = add nsw i64 %97, %90
  %120 = mul nsw i64 %119, -9527
  %121 = add nsw i64 %108, %120
  %122 = mul nsw i64 %90, 16984
  %123 = mul nsw i64 %97, -9766
  %124 = add nsw i64 %111, %123
  %125 = add nsw i64 %124, %121
  %126 = add nsw i64 %104, %90
  %127 = mul nsw i64 %126, -14731
  %128 = add nsw i64 %109, %122
  %129 = add nsw i64 %128, %127
  %130 = add nsw i64 %129, %121
  %131 = mul nsw i64 %104, 17223
  %132 = add nsw i64 %127, %131
  %133 = add nsw i64 %132, %114
  %134 = mul nsw i64 %90, -12019
  %135 = mul nsw i64 %97, 8203
  %136 = add nsw i64 %135, %134
  %137 = mul nsw i64 %104, -13802
  %138 = add nsw i64 %136, %137
  %139 = add nsw i64 %138, %108
  %140 = add nsw i64 %118, %64
  %141 = lshr i64 %140, 11
  %142 = trunc i64 %141 to i32
  store i32 %142, i32* %19, align 4
  %143 = sub nsw i64 %64, %118
  %144 = lshr i64 %143, 11
  %145 = trunc i64 %144 to i32
  %146 = getelementptr inbounds i32, i32* %19, i64 80
  store i32 %145, i32* %146, align 4
  %147 = add nsw i64 %130, %62
  %148 = lshr i64 %147, 11
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %149, i32* %150, align 4
  %151 = sub nsw i64 %62, %130
  %152 = lshr i64 %151, 11
  %153 = trunc i64 %152 to i32
  %154 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %153, i32* %154, align 4
  %155 = add nsw i64 %125, %70
  %156 = lshr i64 %155, 11
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %157, i32* %158, align 4
  %159 = sub nsw i64 %70, %125
  %160 = lshr i64 %159, 11
  %161 = trunc i64 %160 to i32
  %162 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %161, i32* %162, align 4
  %163 = add nsw i64 %133, %67
  %164 = lshr i64 %163, 11
  %165 = trunc i64 %164 to i32
  %166 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %165, i32* %166, align 4
  %167 = sub nsw i64 %67, %133
  %168 = lshr i64 %167, 11
  %169 = trunc i64 %168 to i32
  %170 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %169, i32* %170, align 4
  %171 = add nsw i64 %139, %74
  %172 = lshr i64 %171, 11
  %173 = trunc i64 %172 to i32
  %174 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %173, i32* %174, align 4
  %175 = sub nsw i64 %74, %139
  %176 = lshr i64 %175, 11
  %177 = trunc i64 %176 to i32
  %178 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %177, i32* %178, align 4
  %179 = lshr i64 %76, 11
  %180 = trunc i64 %179 to i32
  %181 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %180, i32* %181, align 4
  %182 = add nuw nsw i32 %18, 1
  %183 = getelementptr inbounds i16, i16* %21, i64 1
  %184 = getelementptr inbounds i16, i16* %20, i64 1
  %185 = getelementptr inbounds i32, i32* %19, i64 1
  %186 = icmp eq i32 %182, 8
  br i1 %186, label %14, label %17

187:                                              ; preds = %187, %14
  %188 = phi i64 [ 0, %14 ], [ %345, %187 ]
  %189 = phi i32* [ %13, %14 ], [ %344, %187 ]
  %190 = getelementptr inbounds i8*, i8** %3, i64 %188
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %16
  %193 = load i32, i32* %189, align 4
  %194 = sext i32 %193 to i64
  %195 = shl nsw i64 %194, 13
  %196 = add nsw i64 %195, 131072
  %197 = getelementptr inbounds i32, i32* %189, i64 2
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i32, i32* %189, i64 6
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %204 to i64
  %206 = sub nsw i64 %202, %205
  %207 = mul nsw i64 %206, 20862
  %208 = sub nsw i64 %202, %199
  %209 = mul nsw i64 %208, 3529
  %210 = add nsw i64 %205, %199
  %211 = mul nsw i64 %210, -9467
  %212 = sub nsw i64 %210, %202
  %213 = mul nsw i64 %212, 11116
  %214 = add nsw i64 %213, %196
  %215 = mul nsw i64 %202, -14924
  %216 = add nsw i64 %214, %207
  %217 = add nsw i64 %216, %215
  %218 = add i64 %217, %209
  %219 = mul nsw i64 %205, 17333
  %220 = add nsw i64 %216, %219
  %221 = mul nsw i64 %199, -12399
  %222 = add nsw i64 %214, %209
  %223 = add nsw i64 %222, %221
  %224 = add nsw i64 %214, %211
  %225 = mul nsw i64 %205, -6461
  %226 = add nsw i64 %224, %225
  %227 = mul nsw i64 %202, 15929
  %228 = mul nsw i64 %199, -11395
  %229 = add nsw i64 %227, %228
  %230 = add nsw i64 %229, %224
  %231 = mul nsw i64 %212, -11585
  %232 = add nsw i64 %231, %196
  %233 = getelementptr inbounds i32, i32* %189, i64 1
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %189, i64 3
  %237 = load i32, i32* %236, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i32, i32* %189, i64 5
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i32, i32* %189, i64 7
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = add nsw i64 %238, %235
  %246 = add nsw i64 %245, %241
  %247 = add nsw i64 %246, %244
  %248 = mul nsw i64 %247, 3264
  %249 = mul nsw i64 %245, 7274
  %250 = add nsw i64 %241, %235
  %251 = mul nsw i64 %250, 5492
  %252 = add nsw i64 %244, %235
  %253 = mul nsw i64 %252, 3000
  %254 = add nsw i64 %248, %253
  %255 = mul nsw i64 %235, -7562
  %256 = add nsw i64 %249, %255
  %257 = add nsw i64 %256, %251
  %258 = add nsw i64 %257, %254
  %259 = add nsw i64 %241, %238
  %260 = mul nsw i64 %259, -9527
  %261 = add nsw i64 %248, %260
  %262 = mul nsw i64 %238, 16984
  %263 = mul nsw i64 %241, -9766
  %264 = add nsw i64 %251, %263
  %265 = add nsw i64 %264, %261
  %266 = add nsw i64 %244, %238
  %267 = mul nsw i64 %266, -14731
  %268 = add nsw i64 %249, %262
  %269 = add nsw i64 %268, %267
  %270 = add nsw i64 %269, %261
  %271 = mul nsw i64 %244, 17223
  %272 = add nsw i64 %267, %271
  %273 = add nsw i64 %272, %254
  %274 = mul nsw i64 %238, -12019
  %275 = mul nsw i64 %241, 8203
  %276 = add nsw i64 %275, %274
  %277 = mul nsw i64 %244, -13802
  %278 = add nsw i64 %276, %277
  %279 = add nsw i64 %278, %248
  %280 = add nsw i64 %258, %220
  %281 = lshr i64 %280, 18
  %282 = and i64 %281, 1023
  %283 = getelementptr inbounds i8, i8* %15, i64 %282
  %284 = load i8, i8* %283, align 1
  store i8 %284, i8* %192, align 1
  %285 = sub nsw i64 %220, %258
  %286 = lshr i64 %285, 18
  %287 = and i64 %286, 1023
  %288 = getelementptr inbounds i8, i8* %15, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = getelementptr inbounds i8, i8* %192, i64 10
  store i8 %289, i8* %290, align 1
  %291 = add nsw i64 %270, %218
  %292 = lshr i64 %291, 18
  %293 = and i64 %292, 1023
  %294 = getelementptr inbounds i8, i8* %15, i64 %293
  %295 = load i8, i8* %294, align 1
  %296 = getelementptr inbounds i8, i8* %192, i64 1
  store i8 %295, i8* %296, align 1
  %297 = sub nsw i64 %218, %270
  %298 = lshr i64 %297, 18
  %299 = and i64 %298, 1023
  %300 = getelementptr inbounds i8, i8* %15, i64 %299
  %301 = load i8, i8* %300, align 1
  %302 = getelementptr inbounds i8, i8* %192, i64 9
  store i8 %301, i8* %302, align 1
  %303 = add nsw i64 %265, %226
  %304 = lshr i64 %303, 18
  %305 = and i64 %304, 1023
  %306 = getelementptr inbounds i8, i8* %15, i64 %305
  %307 = load i8, i8* %306, align 1
  %308 = getelementptr inbounds i8, i8* %192, i64 2
  store i8 %307, i8* %308, align 1
  %309 = sub nsw i64 %226, %265
  %310 = lshr i64 %309, 18
  %311 = and i64 %310, 1023
  %312 = getelementptr inbounds i8, i8* %15, i64 %311
  %313 = load i8, i8* %312, align 1
  %314 = getelementptr inbounds i8, i8* %192, i64 8
  store i8 %313, i8* %314, align 1
  %315 = add nsw i64 %273, %223
  %316 = lshr i64 %315, 18
  %317 = and i64 %316, 1023
  %318 = getelementptr inbounds i8, i8* %15, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = getelementptr inbounds i8, i8* %192, i64 3
  store i8 %319, i8* %320, align 1
  %321 = sub nsw i64 %223, %273
  %322 = lshr i64 %321, 18
  %323 = and i64 %322, 1023
  %324 = getelementptr inbounds i8, i8* %15, i64 %323
  %325 = load i8, i8* %324, align 1
  %326 = getelementptr inbounds i8, i8* %192, i64 7
  store i8 %325, i8* %326, align 1
  %327 = add nsw i64 %279, %230
  %328 = lshr i64 %327, 18
  %329 = and i64 %328, 1023
  %330 = getelementptr inbounds i8, i8* %15, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = getelementptr inbounds i8, i8* %192, i64 4
  store i8 %331, i8* %332, align 1
  %333 = sub nsw i64 %230, %279
  %334 = lshr i64 %333, 18
  %335 = and i64 %334, 1023
  %336 = getelementptr inbounds i8, i8* %15, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = getelementptr inbounds i8, i8* %192, i64 6
  store i8 %337, i8* %338, align 1
  %339 = lshr i64 %232, 18
  %340 = and i64 %339, 1023
  %341 = getelementptr inbounds i8, i8* %15, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = getelementptr inbounds i8, i8* %192, i64 5
  store i8 %342, i8* %343, align 1
  %344 = getelementptr inbounds i32, i32* %189, i64 8
  %345 = add nuw nsw i64 %188, 1
  %346 = icmp eq i64 %345, 11
  br i1 %346, label %347, label %187

347:                                              ; preds = %187
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_12x12(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [96 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [96 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 384, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [96 x i32], [96 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %179

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %174, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %177, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %176, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %175, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 32
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 32
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %31, 10033
  %36 = mul nsw i64 %35, %34
  %37 = add nsw i64 %36, %28
  %38 = sub nsw i64 %28, %36
  %39 = getelementptr inbounds i16, i16* %21, i64 16
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = getelementptr inbounds i16, i16* %20, i64 16
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i64
  %45 = mul nsw i64 %44, %41
  %46 = mul nsw i64 %45, 11190
  %47 = shl nsw i64 %45, 13
  %48 = getelementptr inbounds i16, i16* %21, i64 48
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i64
  %51 = getelementptr inbounds i16, i16* %20, i64 48
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i64
  %54 = shl nsw i64 %50, 13
  %55 = mul nsw i64 %54, %53
  %56 = sub nsw i64 %47, %55
  %57 = add nsw i64 %56, %28
  %58 = sub nsw i64 %28, %56
  %59 = add nsw i64 %55, %46
  %60 = add nsw i64 %59, %37
  %61 = sub nsw i64 %37, %59
  %62 = mul nsw i64 %45, 2998
  %63 = sub nsw i64 %62, %55
  %64 = add nsw i64 %63, %38
  %65 = sub nsw i64 %38, %63
  %66 = getelementptr inbounds i16, i16* %21, i64 8
  %67 = load i16, i16* %66, align 2
  %68 = sext i16 %67 to i64
  %69 = getelementptr inbounds i16, i16* %20, i64 8
  %70 = load i16, i16* %69, align 2
  %71 = sext i16 %70 to i64
  %72 = mul nsw i64 %71, %68
  %73 = getelementptr inbounds i16, i16* %21, i64 24
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i64
  %76 = getelementptr inbounds i16, i16* %20, i64 24
  %77 = load i16, i16* %76, align 2
  %78 = sext i16 %77 to i64
  %79 = mul nsw i64 %78, %75
  %80 = getelementptr inbounds i16, i16* %21, i64 40
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i64
  %83 = getelementptr inbounds i16, i16* %20, i64 40
  %84 = load i16, i16* %83, align 2
  %85 = sext i16 %84 to i64
  %86 = mul nsw i64 %85, %82
  %87 = getelementptr inbounds i16, i16* %21, i64 56
  %88 = load i16, i16* %87, align 2
  %89 = sext i16 %88 to i64
  %90 = getelementptr inbounds i16, i16* %20, i64 56
  %91 = load i16, i16* %90, align 2
  %92 = sext i16 %91 to i64
  %93 = mul nsw i64 %92, %89
  %94 = mul nsw i64 %79, 10703
  %95 = mul nsw i64 %79, -4433
  %96 = add nsw i64 %86, %72
  %97 = add nsw i64 %93, %96
  %98 = mul nsw i64 %97, 7053
  %99 = mul nsw i64 %96, 2139
  %100 = add nsw i64 %98, %99
  %101 = mul nsw i64 %72, 2295
  %102 = add nsw i64 %94, %101
  %103 = add nsw i64 %102, %100
  %104 = add nsw i64 %93, %86
  %105 = mul nsw i64 %104, -8565
  %106 = mul nsw i64 %86, -12112
  %107 = add nsw i64 %106, %95
  %108 = add nsw i64 %107, %105
  %109 = add nsw i64 %108, %100
  %110 = mul nsw i64 %93, 12998
  %111 = sub nsw i64 %110, %94
  %112 = add nsw i64 %111, %98
  %113 = add nsw i64 %112, %105
  %114 = mul nsw i64 %72, -5540
  %115 = add nsw i64 %95, %114
  %116 = mul nsw i64 %93, -16244
  %117 = add nsw i64 %115, %116
  %118 = add nsw i64 %117, %98
  %119 = sub nsw i64 %72, %93
  %120 = sub nsw i64 %79, %86
  %121 = add nsw i64 %119, %120
  %122 = mul nsw i64 %121, 4433
  %123 = mul nsw i64 %119, 6270
  %124 = add nsw i64 %122, %123
  %125 = mul nsw i64 %120, -15137
  %126 = add nsw i64 %122, %125
  %127 = add nsw i64 %103, %60
  %128 = lshr i64 %127, 11
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %19, align 4
  %130 = sub nsw i64 %60, %103
  %131 = lshr i64 %130, 11
  %132 = trunc i64 %131 to i32
  %133 = getelementptr inbounds i32, i32* %19, i64 88
  store i32 %132, i32* %133, align 4
  %134 = add nsw i64 %124, %57
  %135 = lshr i64 %134, 11
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %136, i32* %137, align 4
  %138 = sub nsw i64 %57, %124
  %139 = lshr i64 %138, 11
  %140 = trunc i64 %139 to i32
  %141 = getelementptr inbounds i32, i32* %19, i64 80
  store i32 %140, i32* %141, align 4
  %142 = add nsw i64 %109, %64
  %143 = lshr i64 %142, 11
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %144, i32* %145, align 4
  %146 = sub nsw i64 %64, %109
  %147 = lshr i64 %146, 11
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %148, i32* %149, align 4
  %150 = add nsw i64 %113, %65
  %151 = lshr i64 %150, 11
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %152, i32* %153, align 4
  %154 = sub nsw i64 %65, %113
  %155 = lshr i64 %154, 11
  %156 = trunc i64 %155 to i32
  %157 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %156, i32* %157, align 4
  %158 = add nsw i64 %126, %58
  %159 = lshr i64 %158, 11
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %160, i32* %161, align 4
  %162 = sub nsw i64 %58, %126
  %163 = lshr i64 %162, 11
  %164 = trunc i64 %163 to i32
  %165 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %164, i32* %165, align 4
  %166 = add nsw i64 %118, %61
  %167 = lshr i64 %166, 11
  %168 = trunc i64 %167 to i32
  %169 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %168, i32* %169, align 4
  %170 = sub nsw i64 %61, %118
  %171 = lshr i64 %170, 11
  %172 = trunc i64 %171 to i32
  %173 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %172, i32* %173, align 4
  %174 = add nuw nsw i32 %18, 1
  %175 = getelementptr inbounds i16, i16* %21, i64 1
  %176 = getelementptr inbounds i16, i16* %20, i64 1
  %177 = getelementptr inbounds i32, i32* %19, i64 1
  %178 = icmp eq i32 %174, 8
  br i1 %178, label %14, label %17

179:                                              ; preds = %179, %14
  %180 = phi i64 [ 0, %14 ], [ %331, %179 ]
  %181 = phi i32* [ %13, %14 ], [ %330, %179 ]
  %182 = getelementptr inbounds i8*, i8** %3, i64 %180
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 %16
  %185 = load i32, i32* %181, align 4
  %186 = sext i32 %185 to i64
  %187 = shl nsw i64 %186, 13
  %188 = add nsw i64 %187, 131072
  %189 = getelementptr inbounds i32, i32* %181, i64 4
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = mul nsw i64 %191, 10033
  %193 = add nsw i64 %188, %192
  %194 = sub nsw i64 %188, %192
  %195 = getelementptr inbounds i32, i32* %181, i64 2
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %197, 11190
  %199 = shl nsw i64 %197, 13
  %200 = getelementptr inbounds i32, i32* %181, i64 6
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = shl nsw i64 %202, 13
  %204 = sub nsw i64 %199, %203
  %205 = add nsw i64 %204, %188
  %206 = sub nsw i64 %188, %204
  %207 = add nsw i64 %203, %198
  %208 = add nsw i64 %207, %193
  %209 = sub nsw i64 %193, %207
  %210 = mul nsw i64 %197, 2998
  %211 = sub nsw i64 %210, %203
  %212 = add nsw i64 %211, %194
  %213 = sub nsw i64 %194, %211
  %214 = getelementptr inbounds i32, i32* %181, i64 1
  %215 = load i32, i32* %214, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i32, i32* %181, i64 3
  %218 = load i32, i32* %217, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i32, i32* %181, i64 5
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i32, i32* %181, i64 7
  %224 = load i32, i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = mul nsw i64 %219, 10703
  %227 = mul nsw i64 %219, -4433
  %228 = add nsw i64 %222, %216
  %229 = add nsw i64 %228, %225
  %230 = mul nsw i64 %229, 7053
  %231 = mul nsw i64 %228, 2139
  %232 = add nsw i64 %230, %231
  %233 = mul nsw i64 %216, 2295
  %234 = add nsw i64 %226, %233
  %235 = add nsw i64 %234, %232
  %236 = add nsw i64 %225, %222
  %237 = mul nsw i64 %236, -8565
  %238 = mul nsw i64 %222, -12112
  %239 = add nsw i64 %238, %227
  %240 = add nsw i64 %239, %237
  %241 = add nsw i64 %240, %232
  %242 = mul nsw i64 %225, 12998
  %243 = sub nsw i64 %242, %226
  %244 = add nsw i64 %243, %230
  %245 = add nsw i64 %244, %237
  %246 = mul nsw i64 %216, -5540
  %247 = add nsw i64 %227, %246
  %248 = mul nsw i64 %225, -16244
  %249 = add nsw i64 %247, %248
  %250 = add nsw i64 %249, %230
  %251 = sub nsw i64 %216, %225
  %252 = sub nsw i64 %219, %222
  %253 = add nsw i64 %251, %252
  %254 = mul nsw i64 %253, 4433
  %255 = mul nsw i64 %251, 6270
  %256 = add nsw i64 %254, %255
  %257 = mul nsw i64 %252, -15137
  %258 = add nsw i64 %254, %257
  %259 = add nsw i64 %235, %208
  %260 = lshr i64 %259, 18
  %261 = and i64 %260, 1023
  %262 = getelementptr inbounds i8, i8* %15, i64 %261
  %263 = load i8, i8* %262, align 1
  store i8 %263, i8* %184, align 1
  %264 = sub nsw i64 %208, %235
  %265 = lshr i64 %264, 18
  %266 = and i64 %265, 1023
  %267 = getelementptr inbounds i8, i8* %15, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = getelementptr inbounds i8, i8* %184, i64 11
  store i8 %268, i8* %269, align 1
  %270 = add nsw i64 %256, %205
  %271 = lshr i64 %270, 18
  %272 = and i64 %271, 1023
  %273 = getelementptr inbounds i8, i8* %15, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = getelementptr inbounds i8, i8* %184, i64 1
  store i8 %274, i8* %275, align 1
  %276 = sub nsw i64 %205, %256
  %277 = lshr i64 %276, 18
  %278 = and i64 %277, 1023
  %279 = getelementptr inbounds i8, i8* %15, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = getelementptr inbounds i8, i8* %184, i64 10
  store i8 %280, i8* %281, align 1
  %282 = add nsw i64 %241, %212
  %283 = lshr i64 %282, 18
  %284 = and i64 %283, 1023
  %285 = getelementptr inbounds i8, i8* %15, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = getelementptr inbounds i8, i8* %184, i64 2
  store i8 %286, i8* %287, align 1
  %288 = sub nsw i64 %212, %241
  %289 = lshr i64 %288, 18
  %290 = and i64 %289, 1023
  %291 = getelementptr inbounds i8, i8* %15, i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = getelementptr inbounds i8, i8* %184, i64 9
  store i8 %292, i8* %293, align 1
  %294 = add nsw i64 %245, %213
  %295 = lshr i64 %294, 18
  %296 = and i64 %295, 1023
  %297 = getelementptr inbounds i8, i8* %15, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = getelementptr inbounds i8, i8* %184, i64 3
  store i8 %298, i8* %299, align 1
  %300 = sub nsw i64 %213, %245
  %301 = lshr i64 %300, 18
  %302 = and i64 %301, 1023
  %303 = getelementptr inbounds i8, i8* %15, i64 %302
  %304 = load i8, i8* %303, align 1
  %305 = getelementptr inbounds i8, i8* %184, i64 8
  store i8 %304, i8* %305, align 1
  %306 = add nsw i64 %258, %206
  %307 = lshr i64 %306, 18
  %308 = and i64 %307, 1023
  %309 = getelementptr inbounds i8, i8* %15, i64 %308
  %310 = load i8, i8* %309, align 1
  %311 = getelementptr inbounds i8, i8* %184, i64 4
  store i8 %310, i8* %311, align 1
  %312 = sub nsw i64 %206, %258
  %313 = lshr i64 %312, 18
  %314 = and i64 %313, 1023
  %315 = getelementptr inbounds i8, i8* %15, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = getelementptr inbounds i8, i8* %184, i64 7
  store i8 %316, i8* %317, align 1
  %318 = add nsw i64 %250, %209
  %319 = lshr i64 %318, 18
  %320 = and i64 %319, 1023
  %321 = getelementptr inbounds i8, i8* %15, i64 %320
  %322 = load i8, i8* %321, align 1
  %323 = getelementptr inbounds i8, i8* %184, i64 5
  store i8 %322, i8* %323, align 1
  %324 = sub nsw i64 %209, %250
  %325 = lshr i64 %324, 18
  %326 = and i64 %325, 1023
  %327 = getelementptr inbounds i8, i8* %15, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = getelementptr inbounds i8, i8* %184, i64 6
  store i8 %328, i8* %329, align 1
  %330 = getelementptr inbounds i32, i32* %181, i64 8
  %331 = add nuw nsw i64 %180, 1
  %332 = icmp eq i64 %331, 12
  br i1 %332, label %333, label %179

333:                                              ; preds = %179
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_13x13(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [104 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [104 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 416, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [104 x i32], [104 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %205

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %200, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %203, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %202, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %201, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 16
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 16
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = getelementptr inbounds i16, i16* %21, i64 32
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %20, i64 32
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = getelementptr inbounds i16, i16* %21, i64 48
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds i16, i16* %20, i64 48
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = mul nsw i64 %48, %45
  %50 = add nsw i64 %49, %42
  %51 = sub nsw i64 %42, %49
  %52 = mul nsw i64 %50, 9465
  %53 = mul nsw i64 %51, 793
  %54 = add nsw i64 %53, %28
  %55 = mul nsw i64 %35, 11249
  %56 = add nsw i64 %52, %55
  %57 = add nsw i64 %56, %54
  %58 = mul nsw i64 %35, 4108
  %59 = sub nsw i64 %58, %52
  %60 = add nsw i64 %59, %54
  %61 = mul nsw i64 %50, 2592
  %62 = mul nsw i64 %51, 3989
  %63 = add nsw i64 %62, %28
  %64 = mul nsw i64 %35, 8672
  %65 = sub nsw i64 %64, %61
  %66 = add nsw i64 %65, %63
  %67 = mul nsw i64 %35, -10258
  %68 = add nsw i64 %61, %67
  %69 = add nsw i64 %68, %63
  %70 = mul nsw i64 %50, 3570
  %71 = mul nsw i64 %51, -7678
  %72 = add nsw i64 %28, %71
  %73 = mul nsw i64 %35, -1396
  %74 = sub nsw i64 %73, %70
  %75 = add nsw i64 %74, %72
  %76 = mul nsw i64 %35, -6581
  %77 = add nsw i64 %70, %76
  %78 = add nsw i64 %77, %72
  %79 = sub nsw i64 %51, %35
  %80 = mul nsw i64 %79, 11585
  %81 = add nsw i64 %80, %28
  %82 = getelementptr inbounds i16, i16* %21, i64 8
  %83 = load i16, i16* %82, align 2
  %84 = sext i16 %83 to i64
  %85 = getelementptr inbounds i16, i16* %20, i64 8
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i64
  %88 = mul nsw i64 %87, %84
  %89 = getelementptr inbounds i16, i16* %21, i64 24
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i64
  %92 = getelementptr inbounds i16, i16* %20, i64 24
  %93 = load i16, i16* %92, align 2
  %94 = sext i16 %93 to i64
  %95 = mul nsw i64 %94, %91
  %96 = getelementptr inbounds i16, i16* %21, i64 40
  %97 = load i16, i16* %96, align 2
  %98 = sext i16 %97 to i64
  %99 = getelementptr inbounds i16, i16* %20, i64 40
  %100 = load i16, i16* %99, align 2
  %101 = sext i16 %100 to i64
  %102 = mul nsw i64 %101, %98
  %103 = getelementptr inbounds i16, i16* %21, i64 56
  %104 = load i16, i16* %103, align 2
  %105 = sext i16 %104 to i64
  %106 = getelementptr inbounds i16, i16* %20, i64 56
  %107 = load i16, i16* %106, align 2
  %108 = sext i16 %107 to i64
  %109 = mul nsw i64 %108, %105
  %110 = add nsw i64 %95, %88
  %111 = mul nsw i64 %110, 10832
  %112 = add nsw i64 %102, %88
  %113 = mul nsw i64 %112, 9534
  %114 = add nsw i64 %109, %88
  %115 = mul nsw i64 %114, 7682
  %116 = mul nsw i64 %88, -16549
  %117 = add nsw i64 %111, %116
  %118 = add nsw i64 %117, %113
  %119 = add nsw i64 %118, %115
  %120 = add nsw i64 %102, %95
  %121 = mul nsw i64 %120, -2773
  %122 = mul nsw i64 %95, 6859
  %123 = mul nsw i64 %102, -12879
  %124 = add nsw i64 %121, %123
  %125 = add nsw i64 %124, %113
  %126 = add nsw i64 %109, %95
  %127 = mul nsw i64 %126, -9534
  %128 = add nsw i64 %111, %122
  %129 = add nsw i64 %128, %121
  %130 = add nsw i64 %129, %127
  %131 = mul nsw i64 %109, 18068
  %132 = add nsw i64 %127, %131
  %133 = add nsw i64 %132, %115
  %134 = add nsw i64 %109, %102
  %135 = mul nsw i64 %134, -5384
  %136 = add nsw i64 %125, %135
  %137 = add nsw i64 %133, %135
  %138 = mul nsw i64 %114, 2773
  %139 = mul nsw i64 %88, 2611
  %140 = mul nsw i64 %95, -3818
  %141 = sub nsw i64 %102, %95
  %142 = mul nsw i64 %141, 7682
  %143 = add nsw i64 %138, %142
  %144 = add nsw i64 %143, %139
  %145 = add nsw i64 %144, %140
  %146 = mul nsw i64 %102, 3150
  %147 = mul nsw i64 %109, -14273
  %148 = add nsw i64 %143, %146
  %149 = add nsw i64 %148, %147
  %150 = add nsw i64 %119, %57
  %151 = lshr i64 %150, 11
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %19, align 4
  %153 = sub nsw i64 %57, %119
  %154 = lshr i64 %153, 11
  %155 = trunc i64 %154 to i32
  %156 = getelementptr inbounds i32, i32* %19, i64 96
  store i32 %155, i32* %156, align 4
  %157 = add nsw i64 %130, %66
  %158 = lshr i64 %157, 11
  %159 = trunc i64 %158 to i32
  %160 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %159, i32* %160, align 4
  %161 = sub nsw i64 %66, %130
  %162 = lshr i64 %161, 11
  %163 = trunc i64 %162 to i32
  %164 = getelementptr inbounds i32, i32* %19, i64 88
  store i32 %163, i32* %164, align 4
  %165 = add nsw i64 %136, %60
  %166 = lshr i64 %165, 11
  %167 = trunc i64 %166 to i32
  %168 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %167, i32* %168, align 4
  %169 = sub nsw i64 %60, %136
  %170 = lshr i64 %169, 11
  %171 = trunc i64 %170 to i32
  %172 = getelementptr inbounds i32, i32* %19, i64 80
  store i32 %171, i32* %172, align 4
  %173 = add nsw i64 %137, %75
  %174 = lshr i64 %173, 11
  %175 = trunc i64 %174 to i32
  %176 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %175, i32* %176, align 4
  %177 = sub nsw i64 %75, %137
  %178 = lshr i64 %177, 11
  %179 = trunc i64 %178 to i32
  %180 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %179, i32* %180, align 4
  %181 = add nsw i64 %145, %78
  %182 = lshr i64 %181, 11
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %183, i32* %184, align 4
  %185 = sub nsw i64 %78, %145
  %186 = lshr i64 %185, 11
  %187 = trunc i64 %186 to i32
  %188 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %187, i32* %188, align 4
  %189 = add nsw i64 %149, %69
  %190 = lshr i64 %189, 11
  %191 = trunc i64 %190 to i32
  %192 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %191, i32* %192, align 4
  %193 = sub nsw i64 %69, %149
  %194 = lshr i64 %193, 11
  %195 = trunc i64 %194 to i32
  %196 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %195, i32* %196, align 4
  %197 = lshr i64 %81, 11
  %198 = trunc i64 %197 to i32
  %199 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %198, i32* %199, align 4
  %200 = add nuw nsw i32 %18, 1
  %201 = getelementptr inbounds i16, i16* %21, i64 1
  %202 = getelementptr inbounds i16, i16* %20, i64 1
  %203 = getelementptr inbounds i32, i32* %19, i64 1
  %204 = icmp eq i32 %200, 8
  br i1 %204, label %14, label %17

205:                                              ; preds = %205, %14
  %206 = phi i64 [ 0, %14 ], [ %385, %205 ]
  %207 = phi i32* [ %13, %14 ], [ %384, %205 ]
  %208 = getelementptr inbounds i8*, i8** %3, i64 %206
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 %16
  %211 = load i32, i32* %207, align 4
  %212 = sext i32 %211 to i64
  %213 = shl nsw i64 %212, 13
  %214 = add nsw i64 %213, 131072
  %215 = getelementptr inbounds i32, i32* %207, i64 2
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %207, i64 4
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i32, i32* %207, i64 6
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = add nsw i64 %223, %220
  %225 = sub nsw i64 %220, %223
  %226 = mul nsw i64 %224, 9465
  %227 = mul nsw i64 %225, 793
  %228 = add nsw i64 %227, %214
  %229 = mul nsw i64 %217, 11249
  %230 = add nsw i64 %226, %229
  %231 = add nsw i64 %230, %228
  %232 = mul nsw i64 %217, 4108
  %233 = sub nsw i64 %232, %226
  %234 = add nsw i64 %233, %228
  %235 = mul nsw i64 %224, 2592
  %236 = mul nsw i64 %225, 3989
  %237 = add nsw i64 %236, %214
  %238 = mul nsw i64 %217, 8672
  %239 = sub nsw i64 %238, %235
  %240 = add nsw i64 %239, %237
  %241 = mul nsw i64 %217, -10258
  %242 = add nsw i64 %235, %241
  %243 = add nsw i64 %242, %237
  %244 = mul nsw i64 %224, 3570
  %245 = mul nsw i64 %225, -7678
  %246 = add nsw i64 %214, %245
  %247 = mul nsw i64 %217, -1396
  %248 = sub nsw i64 %247, %244
  %249 = add nsw i64 %248, %246
  %250 = mul nsw i64 %217, -6581
  %251 = add nsw i64 %244, %250
  %252 = add nsw i64 %251, %246
  %253 = sub nsw i64 %225, %217
  %254 = mul nsw i64 %253, 11585
  %255 = add nsw i64 %254, %214
  %256 = getelementptr inbounds i32, i32* %207, i64 1
  %257 = load i32, i32* %256, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i32, i32* %207, i64 3
  %260 = load i32, i32* %259, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %207, i64 5
  %263 = load i32, i32* %262, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %207, i64 7
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = add nsw i64 %261, %258
  %269 = mul nsw i64 %268, 10832
  %270 = add nsw i64 %264, %258
  %271 = mul nsw i64 %270, 9534
  %272 = add nsw i64 %267, %258
  %273 = mul nsw i64 %272, 7682
  %274 = mul nsw i64 %258, -16549
  %275 = add nsw i64 %269, %274
  %276 = add nsw i64 %275, %271
  %277 = add nsw i64 %276, %273
  %278 = add nsw i64 %264, %261
  %279 = mul nsw i64 %278, -2773
  %280 = mul nsw i64 %261, 6859
  %281 = mul nsw i64 %264, -12879
  %282 = add nsw i64 %279, %281
  %283 = add nsw i64 %282, %271
  %284 = add nsw i64 %267, %261
  %285 = mul nsw i64 %284, -9534
  %286 = add nsw i64 %269, %280
  %287 = add nsw i64 %286, %279
  %288 = add nsw i64 %287, %285
  %289 = mul nsw i64 %267, 18068
  %290 = add nsw i64 %285, %289
  %291 = add nsw i64 %290, %273
  %292 = add nsw i64 %267, %264
  %293 = mul nsw i64 %292, -5384
  %294 = add nsw i64 %283, %293
  %295 = add nsw i64 %291, %293
  %296 = mul nsw i64 %272, 2773
  %297 = mul nsw i64 %258, 2611
  %298 = mul nsw i64 %261, -3818
  %299 = sub nsw i64 %264, %261
  %300 = mul nsw i64 %299, 7682
  %301 = add nsw i64 %296, %300
  %302 = add nsw i64 %301, %297
  %303 = add nsw i64 %302, %298
  %304 = mul nsw i64 %264, 3150
  %305 = mul nsw i64 %267, -14273
  %306 = add nsw i64 %301, %304
  %307 = add nsw i64 %306, %305
  %308 = add nsw i64 %277, %231
  %309 = lshr i64 %308, 18
  %310 = and i64 %309, 1023
  %311 = getelementptr inbounds i8, i8* %15, i64 %310
  %312 = load i8, i8* %311, align 1
  store i8 %312, i8* %210, align 1
  %313 = sub nsw i64 %231, %277
  %314 = lshr i64 %313, 18
  %315 = and i64 %314, 1023
  %316 = getelementptr inbounds i8, i8* %15, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = getelementptr inbounds i8, i8* %210, i64 12
  store i8 %317, i8* %318, align 1
  %319 = add nsw i64 %288, %240
  %320 = lshr i64 %319, 18
  %321 = and i64 %320, 1023
  %322 = getelementptr inbounds i8, i8* %15, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = getelementptr inbounds i8, i8* %210, i64 1
  store i8 %323, i8* %324, align 1
  %325 = sub nsw i64 %240, %288
  %326 = lshr i64 %325, 18
  %327 = and i64 %326, 1023
  %328 = getelementptr inbounds i8, i8* %15, i64 %327
  %329 = load i8, i8* %328, align 1
  %330 = getelementptr inbounds i8, i8* %210, i64 11
  store i8 %329, i8* %330, align 1
  %331 = add nsw i64 %294, %234
  %332 = lshr i64 %331, 18
  %333 = and i64 %332, 1023
  %334 = getelementptr inbounds i8, i8* %15, i64 %333
  %335 = load i8, i8* %334, align 1
  %336 = getelementptr inbounds i8, i8* %210, i64 2
  store i8 %335, i8* %336, align 1
  %337 = sub nsw i64 %234, %294
  %338 = lshr i64 %337, 18
  %339 = and i64 %338, 1023
  %340 = getelementptr inbounds i8, i8* %15, i64 %339
  %341 = load i8, i8* %340, align 1
  %342 = getelementptr inbounds i8, i8* %210, i64 10
  store i8 %341, i8* %342, align 1
  %343 = add nsw i64 %295, %249
  %344 = lshr i64 %343, 18
  %345 = and i64 %344, 1023
  %346 = getelementptr inbounds i8, i8* %15, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = getelementptr inbounds i8, i8* %210, i64 3
  store i8 %347, i8* %348, align 1
  %349 = sub nsw i64 %249, %295
  %350 = lshr i64 %349, 18
  %351 = and i64 %350, 1023
  %352 = getelementptr inbounds i8, i8* %15, i64 %351
  %353 = load i8, i8* %352, align 1
  %354 = getelementptr inbounds i8, i8* %210, i64 9
  store i8 %353, i8* %354, align 1
  %355 = add nsw i64 %303, %252
  %356 = lshr i64 %355, 18
  %357 = and i64 %356, 1023
  %358 = getelementptr inbounds i8, i8* %15, i64 %357
  %359 = load i8, i8* %358, align 1
  %360 = getelementptr inbounds i8, i8* %210, i64 4
  store i8 %359, i8* %360, align 1
  %361 = sub nsw i64 %252, %303
  %362 = lshr i64 %361, 18
  %363 = and i64 %362, 1023
  %364 = getelementptr inbounds i8, i8* %15, i64 %363
  %365 = load i8, i8* %364, align 1
  %366 = getelementptr inbounds i8, i8* %210, i64 8
  store i8 %365, i8* %366, align 1
  %367 = add nsw i64 %307, %243
  %368 = lshr i64 %367, 18
  %369 = and i64 %368, 1023
  %370 = getelementptr inbounds i8, i8* %15, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = getelementptr inbounds i8, i8* %210, i64 5
  store i8 %371, i8* %372, align 1
  %373 = sub nsw i64 %243, %307
  %374 = lshr i64 %373, 18
  %375 = and i64 %374, 1023
  %376 = getelementptr inbounds i8, i8* %15, i64 %375
  %377 = load i8, i8* %376, align 1
  %378 = getelementptr inbounds i8, i8* %210, i64 7
  store i8 %377, i8* %378, align 1
  %379 = lshr i64 %255, 18
  %380 = and i64 %379, 1023
  %381 = getelementptr inbounds i8, i8* %15, i64 %380
  %382 = load i8, i8* %381, align 1
  %383 = getelementptr inbounds i8, i8* %210, i64 6
  store i8 %382, i8* %383, align 1
  %384 = getelementptr inbounds i32, i32* %207, i64 8
  %385 = add nuw nsw i64 %206, 1
  %386 = icmp eq i64 %385, 13
  br i1 %386, label %387, label %205

387:                                              ; preds = %205
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_14x14(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [112 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [112 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 448, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 448, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [112 x i32], [112 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %197

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %192, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %195, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %194, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %193, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 32
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 32
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = mul nsw i64 %35, 10438
  %37 = mul nsw i64 %35, 2578
  %38 = add nsw i64 %36, %28
  %39 = add nsw i64 %37, %28
  %40 = mul nsw i64 %35, -7223
  %41 = add nsw i64 %40, %28
  %42 = mul nsw i64 %35, -11586
  %43 = add nsw i64 %42, %28
  %44 = ashr i64 %43, 11
  %45 = getelementptr inbounds i16, i16* %21, i64 16
  %46 = load i16, i16* %45, align 2
  %47 = sext i16 %46 to i64
  %48 = getelementptr inbounds i16, i16* %20, i64 16
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i64
  %51 = mul nsw i64 %50, %47
  %52 = getelementptr inbounds i16, i16* %21, i64 48
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i64
  %55 = getelementptr inbounds i16, i16* %20, i64 48
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i64
  %58 = mul nsw i64 %57, %54
  %59 = add nsw i64 %58, %51
  %60 = mul nsw i64 %59, 9058
  %61 = mul nsw i64 %51, 2237
  %62 = add nsw i64 %60, %61
  %63 = mul nsw i64 %58, -14084
  %64 = add nsw i64 %60, %63
  %65 = mul nsw i64 %51, 5027
  %66 = mul nsw i64 %58, -11295
  %67 = add nsw i64 %66, %65
  %68 = add nsw i64 %62, %38
  %69 = sub nsw i64 %38, %62
  %70 = add nsw i64 %64, %39
  %71 = sub nsw i64 %39, %64
  %72 = add nsw i64 %67, %41
  %73 = sub nsw i64 %41, %67
  %74 = getelementptr inbounds i16, i16* %21, i64 8
  %75 = load i16, i16* %74, align 2
  %76 = sext i16 %75 to i64
  %77 = getelementptr inbounds i16, i16* %20, i64 8
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i64
  %80 = mul nsw i64 %79, %76
  %81 = getelementptr inbounds i16, i16* %21, i64 24
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i64
  %84 = getelementptr inbounds i16, i16* %20, i64 24
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i64
  %87 = mul nsw i64 %86, %83
  %88 = getelementptr inbounds i16, i16* %21, i64 40
  %89 = load i16, i16* %88, align 2
  %90 = sext i16 %89 to i64
  %91 = getelementptr inbounds i16, i16* %20, i64 40
  %92 = load i16, i16* %91, align 2
  %93 = sext i16 %92 to i64
  %94 = mul nsw i64 %93, %90
  %95 = getelementptr inbounds i16, i16* %21, i64 56
  %96 = load i16, i16* %95, align 2
  %97 = sext i16 %96 to i64
  %98 = getelementptr inbounds i16, i16* %20, i64 56
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i64
  %101 = mul nsw i64 %100, %97
  %102 = shl nsw i64 %101, 13
  %103 = add nsw i64 %94, %80
  %104 = add nsw i64 %87, %80
  %105 = mul nsw i64 %104, 10935
  %106 = mul nsw i64 %103, 9810
  %107 = mul nsw i64 %80, -9232
  %108 = add nsw i64 %105, %107
  %109 = add nsw i64 %108, %106
  %110 = add nsw i64 %109, %102
  %111 = mul nsw i64 %103, 6164
  %112 = mul nsw i64 %80, -8693
  %113 = add nsw i64 %111, %112
  %114 = sub nsw i64 %80, %87
  %115 = mul nsw i64 %114, 3826
  %116 = sub nsw i64 %115, %102
  %117 = add nsw i64 %113, %116
  %118 = add nsw i64 %94, %87
  %119 = mul nsw i64 %118, -1297
  %120 = sub nsw i64 %119, %102
  %121 = mul nsw i64 %87, -3474
  %122 = add nsw i64 %105, %121
  %123 = add nsw i64 %122, %120
  %124 = mul nsw i64 %94, -19447
  %125 = add nsw i64 %106, %124
  %126 = add nsw i64 %125, %120
  %127 = sub nsw i64 %94, %87
  %128 = mul nsw i64 %127, 11512
  %129 = mul nsw i64 %94, -13850
  %130 = add nsw i64 %128, %129
  %131 = add nsw i64 %130, %111
  %132 = add nsw i64 %131, %102
  %133 = mul nsw i64 %87, 5529
  %134 = add nsw i64 %128, %133
  %135 = add nsw i64 %134, %116
  %136 = sub nsw i64 %114, %94
  %137 = add nsw i64 %136, %101
  %138 = shl nsw i64 %137, 2
  %139 = add nsw i64 %110, %68
  %140 = lshr i64 %139, 11
  %141 = trunc i64 %140 to i32
  store i32 %141, i32* %19, align 4
  %142 = sub nsw i64 %68, %110
  %143 = lshr i64 %142, 11
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds i32, i32* %19, i64 104
  store i32 %144, i32* %145, align 4
  %146 = add nsw i64 %123, %70
  %147 = lshr i64 %146, 11
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %148, i32* %149, align 4
  %150 = sub nsw i64 %70, %123
  %151 = lshr i64 %150, 11
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds i32, i32* %19, i64 96
  store i32 %152, i32* %153, align 4
  %154 = add nsw i64 %126, %72
  %155 = lshr i64 %154, 11
  %156 = trunc i64 %155 to i32
  %157 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %156, i32* %157, align 4
  %158 = sub nsw i64 %72, %126
  %159 = lshr i64 %158, 11
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds i32, i32* %19, i64 88
  store i32 %160, i32* %161, align 4
  %162 = add nsw i64 %138, %44
  %163 = trunc i64 %162 to i32
  %164 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %163, i32* %164, align 4
  %165 = sub nsw i64 %44, %138
  %166 = trunc i64 %165 to i32
  %167 = getelementptr inbounds i32, i32* %19, i64 80
  store i32 %166, i32* %167, align 4
  %168 = add nsw i64 %132, %73
  %169 = lshr i64 %168, 11
  %170 = trunc i64 %169 to i32
  %171 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %170, i32* %171, align 4
  %172 = sub nsw i64 %73, %132
  %173 = lshr i64 %172, 11
  %174 = trunc i64 %173 to i32
  %175 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %174, i32* %175, align 4
  %176 = add nsw i64 %135, %71
  %177 = lshr i64 %176, 11
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %178, i32* %179, align 4
  %180 = sub nsw i64 %71, %135
  %181 = lshr i64 %180, 11
  %182 = trunc i64 %181 to i32
  %183 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %182, i32* %183, align 4
  %184 = add nsw i64 %117, %69
  %185 = lshr i64 %184, 11
  %186 = trunc i64 %185 to i32
  %187 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %186, i32* %187, align 4
  %188 = sub nsw i64 %69, %117
  %189 = lshr i64 %188, 11
  %190 = trunc i64 %189 to i32
  %191 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %190, i32* %191, align 4
  %192 = add nuw nsw i32 %18, 1
  %193 = getelementptr inbounds i16, i16* %21, i64 1
  %194 = getelementptr inbounds i16, i16* %20, i64 1
  %195 = getelementptr inbounds i32, i32* %19, i64 1
  %196 = icmp eq i32 %192, 8
  br i1 %196, label %14, label %17

197:                                              ; preds = %197, %14
  %198 = phi i64 [ 0, %14 ], [ %372, %197 ]
  %199 = phi i32* [ %13, %14 ], [ %371, %197 ]
  %200 = getelementptr inbounds i8*, i8** %3, i64 %198
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 %16
  %203 = load i32, i32* %199, align 4
  %204 = sext i32 %203 to i64
  %205 = shl nsw i64 %204, 13
  %206 = add nsw i64 %205, 131072
  %207 = getelementptr inbounds i32, i32* %199, i64 4
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = mul nsw i64 %209, 10438
  %211 = mul nsw i64 %209, 2578
  %212 = add nsw i64 %206, %210
  %213 = add nsw i64 %206, %211
  %214 = mul nsw i64 %209, -7223
  %215 = add nsw i64 %206, %214
  %216 = mul nsw i64 %209, -11586
  %217 = add nsw i64 %206, %216
  %218 = getelementptr inbounds i32, i32* %199, i64 2
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i32, i32* %199, i64 6
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = add nsw i64 %223, %220
  %225 = mul nsw i64 %224, 9058
  %226 = mul nsw i64 %220, 2237
  %227 = add nsw i64 %225, %226
  %228 = mul nsw i64 %223, -14084
  %229 = add nsw i64 %225, %228
  %230 = mul nsw i64 %220, 5027
  %231 = mul nsw i64 %223, -11295
  %232 = add nsw i64 %231, %230
  %233 = add nsw i64 %227, %212
  %234 = sub nsw i64 %212, %227
  %235 = add nsw i64 %229, %213
  %236 = sub nsw i64 %213, %229
  %237 = add nsw i64 %232, %215
  %238 = sub nsw i64 %215, %232
  %239 = getelementptr inbounds i32, i32* %199, i64 1
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i32, i32* %199, i64 3
  %243 = load i32, i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i32, i32* %199, i64 5
  %246 = load i32, i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i32, i32* %199, i64 7
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = shl nsw i64 %250, 13
  %252 = add nsw i64 %247, %241
  %253 = add nsw i64 %244, %241
  %254 = mul nsw i64 %253, 10935
  %255 = mul nsw i64 %252, 9810
  %256 = mul nsw i64 %241, -9232
  %257 = add nsw i64 %254, %256
  %258 = add nsw i64 %257, %255
  %259 = add nsw i64 %258, %251
  %260 = mul nsw i64 %252, 6164
  %261 = mul nsw i64 %241, -8693
  %262 = add nsw i64 %260, %261
  %263 = sub nsw i64 %241, %244
  %264 = mul nsw i64 %263, 3826
  %265 = sub nsw i64 %264, %251
  %266 = add nsw i64 %262, %265
  %267 = add nsw i64 %247, %244
  %268 = mul nsw i64 %267, -1297
  %269 = sub nsw i64 %268, %251
  %270 = mul nsw i64 %244, -3474
  %271 = add nsw i64 %254, %270
  %272 = add nsw i64 %271, %269
  %273 = mul nsw i64 %247, -19447
  %274 = add nsw i64 %255, %273
  %275 = add nsw i64 %274, %269
  %276 = sub nsw i64 %247, %244
  %277 = mul nsw i64 %276, 11512
  %278 = mul nsw i64 %247, -13850
  %279 = add nsw i64 %251, %278
  %280 = add nsw i64 %279, %277
  %281 = add nsw i64 %280, %260
  %282 = mul nsw i64 %244, 5529
  %283 = add nsw i64 %277, %282
  %284 = add nsw i64 %283, %265
  %285 = sub nsw i64 %263, %247
  %286 = shl nsw i64 %285, 13
  %287 = add nsw i64 %286, %251
  %288 = add nsw i64 %259, %233
  %289 = lshr i64 %288, 18
  %290 = and i64 %289, 1023
  %291 = getelementptr inbounds i8, i8* %15, i64 %290
  %292 = load i8, i8* %291, align 1
  store i8 %292, i8* %202, align 1
  %293 = sub nsw i64 %233, %259
  %294 = lshr i64 %293, 18
  %295 = and i64 %294, 1023
  %296 = getelementptr inbounds i8, i8* %15, i64 %295
  %297 = load i8, i8* %296, align 1
  %298 = getelementptr inbounds i8, i8* %202, i64 13
  store i8 %297, i8* %298, align 1
  %299 = add nsw i64 %272, %235
  %300 = lshr i64 %299, 18
  %301 = and i64 %300, 1023
  %302 = getelementptr inbounds i8, i8* %15, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = getelementptr inbounds i8, i8* %202, i64 1
  store i8 %303, i8* %304, align 1
  %305 = sub nsw i64 %235, %272
  %306 = lshr i64 %305, 18
  %307 = and i64 %306, 1023
  %308 = getelementptr inbounds i8, i8* %15, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = getelementptr inbounds i8, i8* %202, i64 12
  store i8 %309, i8* %310, align 1
  %311 = add nsw i64 %275, %237
  %312 = lshr i64 %311, 18
  %313 = and i64 %312, 1023
  %314 = getelementptr inbounds i8, i8* %15, i64 %313
  %315 = load i8, i8* %314, align 1
  %316 = getelementptr inbounds i8, i8* %202, i64 2
  store i8 %315, i8* %316, align 1
  %317 = sub nsw i64 %237, %275
  %318 = lshr i64 %317, 18
  %319 = and i64 %318, 1023
  %320 = getelementptr inbounds i8, i8* %15, i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = getelementptr inbounds i8, i8* %202, i64 11
  store i8 %321, i8* %322, align 1
  %323 = add nsw i64 %287, %217
  %324 = lshr i64 %323, 18
  %325 = and i64 %324, 1023
  %326 = getelementptr inbounds i8, i8* %15, i64 %325
  %327 = load i8, i8* %326, align 1
  %328 = getelementptr inbounds i8, i8* %202, i64 3
  store i8 %327, i8* %328, align 1
  %329 = sub nsw i64 %217, %287
  %330 = lshr i64 %329, 18
  %331 = and i64 %330, 1023
  %332 = getelementptr inbounds i8, i8* %15, i64 %331
  %333 = load i8, i8* %332, align 1
  %334 = getelementptr inbounds i8, i8* %202, i64 10
  store i8 %333, i8* %334, align 1
  %335 = add nsw i64 %281, %238
  %336 = lshr i64 %335, 18
  %337 = and i64 %336, 1023
  %338 = getelementptr inbounds i8, i8* %15, i64 %337
  %339 = load i8, i8* %338, align 1
  %340 = getelementptr inbounds i8, i8* %202, i64 4
  store i8 %339, i8* %340, align 1
  %341 = sub nsw i64 %238, %281
  %342 = lshr i64 %341, 18
  %343 = and i64 %342, 1023
  %344 = getelementptr inbounds i8, i8* %15, i64 %343
  %345 = load i8, i8* %344, align 1
  %346 = getelementptr inbounds i8, i8* %202, i64 9
  store i8 %345, i8* %346, align 1
  %347 = add nsw i64 %284, %236
  %348 = lshr i64 %347, 18
  %349 = and i64 %348, 1023
  %350 = getelementptr inbounds i8, i8* %15, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = getelementptr inbounds i8, i8* %202, i64 5
  store i8 %351, i8* %352, align 1
  %353 = sub nsw i64 %236, %284
  %354 = lshr i64 %353, 18
  %355 = and i64 %354, 1023
  %356 = getelementptr inbounds i8, i8* %15, i64 %355
  %357 = load i8, i8* %356, align 1
  %358 = getelementptr inbounds i8, i8* %202, i64 8
  store i8 %357, i8* %358, align 1
  %359 = add nsw i64 %266, %234
  %360 = lshr i64 %359, 18
  %361 = and i64 %360, 1023
  %362 = getelementptr inbounds i8, i8* %15, i64 %361
  %363 = load i8, i8* %362, align 1
  %364 = getelementptr inbounds i8, i8* %202, i64 6
  store i8 %363, i8* %364, align 1
  %365 = sub nsw i64 %234, %266
  %366 = lshr i64 %365, 18
  %367 = and i64 %366, 1023
  %368 = getelementptr inbounds i8, i8* %15, i64 %367
  %369 = load i8, i8* %368, align 1
  %370 = getelementptr inbounds i8, i8* %202, i64 7
  store i8 %369, i8* %370, align 1
  %371 = getelementptr inbounds i32, i32* %199, i64 8
  %372 = add nuw nsw i64 %198, 1
  %373 = icmp eq i64 %372, 14
  br i1 %373, label %374, label %197

374:                                              ; preds = %197
  call void @llvm.lifetime.end.p0i8(i64 448, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_15x15(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [120 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [120 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 480, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [120 x i32], [120 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %205

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %200, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %203, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %202, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %201, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 16
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 16
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = getelementptr inbounds i16, i16* %21, i64 32
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %20, i64 32
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = getelementptr inbounds i16, i16* %21, i64 48
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds i16, i16* %20, i64 48
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = mul nsw i64 %48, %45
  %50 = mul nsw i64 %49, 9373
  %51 = mul nsw i64 %49, -3580
  %52 = add nsw i64 %51, %28
  %53 = add nsw i64 %50, %28
  %54 = mul nsw i64 %49, -11586
  %55 = add nsw i64 %54, %28
  %56 = sub nsw i64 %35, %42
  %57 = add nsw i64 %42, %35
  %58 = mul nsw i64 %57, 10958
  %59 = mul nsw i64 %56, 374
  %60 = mul nsw i64 %35, 11795
  %61 = add nsw i64 %59, %58
  %62 = add nsw i64 %61, %53
  %63 = sub nsw i64 %60, %58
  %64 = add nsw i64 %63, %59
  %65 = add nsw i64 %64, %52
  %66 = mul nsw i64 %57, 4482
  %67 = mul nsw i64 %56, -3271
  %68 = sub nsw i64 %53, %66
  %69 = add nsw i64 %68, %67
  %70 = sub nsw i64 %66, %60
  %71 = add nsw i64 %70, %67
  %72 = add nsw i64 %71, %52
  %73 = mul nsw i64 %57, 6476
  %74 = mul nsw i64 %56, 2896
  %75 = add nsw i64 %74, %73
  %76 = add nsw i64 %75, %52
  %77 = sub nsw i64 %53, %73
  %78 = add nsw i64 %77, %74
  %79 = mul nsw i64 %56, 5792
  %80 = add nsw i64 %55, %79
  %81 = mul nsw i64 %56, -11584
  %82 = add nsw i64 %81, %55
  %83 = getelementptr inbounds i16, i16* %21, i64 8
  %84 = load i16, i16* %83, align 2
  %85 = sext i16 %84 to i64
  %86 = getelementptr inbounds i16, i16* %20, i64 8
  %87 = load i16, i16* %86, align 2
  %88 = sext i16 %87 to i64
  %89 = mul nsw i64 %88, %85
  %90 = getelementptr inbounds i16, i16* %21, i64 24
  %91 = load i16, i16* %90, align 2
  %92 = sext i16 %91 to i64
  %93 = getelementptr inbounds i16, i16* %20, i64 24
  %94 = load i16, i16* %93, align 2
  %95 = sext i16 %94 to i64
  %96 = mul nsw i64 %95, %92
  %97 = getelementptr inbounds i16, i16* %21, i64 40
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i64
  %100 = getelementptr inbounds i16, i16* %20, i64 40
  %101 = load i16, i16* %100, align 2
  %102 = sext i16 %101 to i64
  %103 = mul nsw i64 %99, 10033
  %104 = mul nsw i64 %103, %102
  %105 = getelementptr inbounds i16, i16* %21, i64 56
  %106 = load i16, i16* %105, align 2
  %107 = sext i16 %106 to i64
  %108 = getelementptr inbounds i16, i16* %20, i64 56
  %109 = load i16, i16* %108, align 2
  %110 = sext i16 %109 to i64
  %111 = mul nsw i64 %110, %107
  %112 = sub nsw i64 %96, %111
  %113 = add nsw i64 %112, %89
  %114 = mul nsw i64 %113, 6810
  %115 = mul nsw i64 %89, 4209
  %116 = add nsw i64 %114, %115
  %117 = mul nsw i64 %112, -17828
  %118 = add nsw i64 %114, %117
  %119 = mul nsw i64 %96, -6810
  %120 = mul nsw i64 %96, -11018
  %121 = sub nsw i64 %89, %111
  %122 = mul nsw i64 %121, 11522
  %123 = add nsw i64 %122, %104
  %124 = mul nsw i64 %111, 20131
  %125 = sub nsw i64 %124, %120
  %126 = add nsw i64 %125, %123
  %127 = mul nsw i64 %89, -9113
  %128 = add nsw i64 %119, %127
  %129 = add nsw i64 %128, %123
  %130 = mul nsw i64 %121, 10033
  %131 = sub nsw i64 %130, %104
  %132 = add nsw i64 %111, %89
  %133 = mul nsw i64 %132, 4712
  %134 = mul nsw i64 %89, 3897
  %135 = add nsw i64 %119, %134
  %136 = sub nsw i64 %135, %104
  %137 = add nsw i64 %136, %133
  %138 = mul nsw i64 %111, -7121
  %139 = add nsw i64 %104, %120
  %140 = add nsw i64 %139, %138
  %141 = add nsw i64 %140, %133
  %142 = add nsw i64 %126, %62
  %143 = lshr i64 %142, 11
  %144 = trunc i64 %143 to i32
  store i32 %144, i32* %19, align 4
  %145 = sub nsw i64 %62, %126
  %146 = lshr i64 %145, 11
  %147 = trunc i64 %146 to i32
  %148 = getelementptr inbounds i32, i32* %19, i64 112
  store i32 %147, i32* %148, align 4
  %149 = add nsw i64 %116, %76
  %150 = lshr i64 %149, 11
  %151 = trunc i64 %150 to i32
  %152 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %151, i32* %152, align 4
  %153 = sub nsw i64 %76, %116
  %154 = lshr i64 %153, 11
  %155 = trunc i64 %154 to i32
  %156 = getelementptr inbounds i32, i32* %19, i64 104
  store i32 %155, i32* %156, align 4
  %157 = add nsw i64 %131, %80
  %158 = lshr i64 %157, 11
  %159 = trunc i64 %158 to i32
  %160 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %159, i32* %160, align 4
  %161 = sub nsw i64 %80, %131
  %162 = lshr i64 %161, 11
  %163 = trunc i64 %162 to i32
  %164 = getelementptr inbounds i32, i32* %19, i64 96
  store i32 %163, i32* %164, align 4
  %165 = add nsw i64 %137, %65
  %166 = lshr i64 %165, 11
  %167 = trunc i64 %166 to i32
  %168 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %167, i32* %168, align 4
  %169 = sub nsw i64 %65, %137
  %170 = lshr i64 %169, 11
  %171 = trunc i64 %170 to i32
  %172 = getelementptr inbounds i32, i32* %19, i64 88
  store i32 %171, i32* %172, align 4
  %173 = add nsw i64 %118, %78
  %174 = lshr i64 %173, 11
  %175 = trunc i64 %174 to i32
  %176 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %175, i32* %176, align 4
  %177 = sub nsw i64 %78, %118
  %178 = lshr i64 %177, 11
  %179 = trunc i64 %178 to i32
  %180 = getelementptr inbounds i32, i32* %19, i64 80
  store i32 %179, i32* %180, align 4
  %181 = add nsw i64 %141, %69
  %182 = lshr i64 %181, 11
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %183, i32* %184, align 4
  %185 = sub nsw i64 %69, %141
  %186 = lshr i64 %185, 11
  %187 = trunc i64 %186 to i32
  %188 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %187, i32* %188, align 4
  %189 = add nsw i64 %129, %72
  %190 = lshr i64 %189, 11
  %191 = trunc i64 %190 to i32
  %192 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %191, i32* %192, align 4
  %193 = sub nsw i64 %72, %129
  %194 = lshr i64 %193, 11
  %195 = trunc i64 %194 to i32
  %196 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %195, i32* %196, align 4
  %197 = lshr i64 %82, 11
  %198 = trunc i64 %197 to i32
  %199 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %198, i32* %199, align 4
  %200 = add nuw nsw i32 %18, 1
  %201 = getelementptr inbounds i16, i16* %21, i64 1
  %202 = getelementptr inbounds i16, i16* %20, i64 1
  %203 = getelementptr inbounds i32, i32* %19, i64 1
  %204 = icmp eq i32 %200, 8
  br i1 %204, label %14, label %17

205:                                              ; preds = %205, %14
  %206 = phi i64 [ 0, %14 ], [ %389, %205 ]
  %207 = phi i32* [ %13, %14 ], [ %388, %205 ]
  %208 = getelementptr inbounds i8*, i8** %3, i64 %206
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 %16
  %211 = load i32, i32* %207, align 4
  %212 = sext i32 %211 to i64
  %213 = shl nsw i64 %212, 13
  %214 = add nsw i64 %213, 131072
  %215 = getelementptr inbounds i32, i32* %207, i64 2
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %207, i64 4
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i32, i32* %207, i64 6
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = mul nsw i64 %223, 9373
  %225 = mul nsw i64 %223, -3580
  %226 = add nsw i64 %225, %214
  %227 = add nsw i64 %224, %214
  %228 = mul nsw i64 %223, -11586
  %229 = add nsw i64 %228, %214
  %230 = sub nsw i64 %217, %220
  %231 = add nsw i64 %220, %217
  %232 = mul nsw i64 %231, 10958
  %233 = mul nsw i64 %230, 374
  %234 = mul nsw i64 %217, 11795
  %235 = add nsw i64 %233, %232
  %236 = add nsw i64 %235, %227
  %237 = sub nsw i64 %234, %232
  %238 = add nsw i64 %237, %233
  %239 = add nsw i64 %238, %226
  %240 = mul nsw i64 %231, 4482
  %241 = mul nsw i64 %230, -3271
  %242 = sub nsw i64 %227, %240
  %243 = add nsw i64 %242, %241
  %244 = sub nsw i64 %240, %234
  %245 = add nsw i64 %244, %241
  %246 = add nsw i64 %245, %226
  %247 = mul nsw i64 %231, 6476
  %248 = mul nsw i64 %230, 2896
  %249 = add nsw i64 %248, %247
  %250 = add nsw i64 %249, %226
  %251 = sub nsw i64 %227, %247
  %252 = add nsw i64 %251, %248
  %253 = mul nsw i64 %230, 5792
  %254 = add nsw i64 %229, %253
  %255 = mul nsw i64 %230, -11584
  %256 = add nsw i64 %255, %229
  %257 = getelementptr inbounds i32, i32* %207, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds i32, i32* %207, i64 3
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i32, i32* %207, i64 5
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = mul nsw i64 %265, 10033
  %267 = getelementptr inbounds i32, i32* %207, i64 7
  %268 = load i32, i32* %267, align 4
  %269 = sext i32 %268 to i64
  %270 = sub nsw i64 %262, %269
  %271 = add nsw i64 %270, %259
  %272 = mul nsw i64 %271, 6810
  %273 = mul nsw i64 %259, 4209
  %274 = add nsw i64 %272, %273
  %275 = mul nsw i64 %270, -17828
  %276 = add nsw i64 %272, %275
  %277 = mul nsw i64 %262, -6810
  %278 = mul nsw i64 %262, -11018
  %279 = sub nsw i64 %259, %269
  %280 = mul nsw i64 %279, 11522
  %281 = add nsw i64 %280, %266
  %282 = mul nsw i64 %269, 20131
  %283 = sub nsw i64 %282, %278
  %284 = add nsw i64 %283, %281
  %285 = mul nsw i64 %259, -9113
  %286 = add nsw i64 %277, %285
  %287 = add nsw i64 %286, %281
  %288 = mul nsw i64 %279, 10033
  %289 = sub nsw i64 %288, %266
  %290 = add nsw i64 %269, %259
  %291 = mul nsw i64 %290, 4712
  %292 = mul nsw i64 %259, 3897
  %293 = add nsw i64 %277, %292
  %294 = sub nsw i64 %293, %266
  %295 = add nsw i64 %294, %291
  %296 = mul nsw i64 %269, -7121
  %297 = add nsw i64 %266, %278
  %298 = add nsw i64 %297, %296
  %299 = add nsw i64 %298, %291
  %300 = add nsw i64 %284, %236
  %301 = lshr i64 %300, 18
  %302 = and i64 %301, 1023
  %303 = getelementptr inbounds i8, i8* %15, i64 %302
  %304 = load i8, i8* %303, align 1
  store i8 %304, i8* %210, align 1
  %305 = sub nsw i64 %236, %284
  %306 = lshr i64 %305, 18
  %307 = and i64 %306, 1023
  %308 = getelementptr inbounds i8, i8* %15, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = getelementptr inbounds i8, i8* %210, i64 14
  store i8 %309, i8* %310, align 1
  %311 = add nsw i64 %274, %250
  %312 = lshr i64 %311, 18
  %313 = and i64 %312, 1023
  %314 = getelementptr inbounds i8, i8* %15, i64 %313
  %315 = load i8, i8* %314, align 1
  %316 = getelementptr inbounds i8, i8* %210, i64 1
  store i8 %315, i8* %316, align 1
  %317 = sub nsw i64 %250, %274
  %318 = lshr i64 %317, 18
  %319 = and i64 %318, 1023
  %320 = getelementptr inbounds i8, i8* %15, i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = getelementptr inbounds i8, i8* %210, i64 13
  store i8 %321, i8* %322, align 1
  %323 = add nsw i64 %289, %254
  %324 = lshr i64 %323, 18
  %325 = and i64 %324, 1023
  %326 = getelementptr inbounds i8, i8* %15, i64 %325
  %327 = load i8, i8* %326, align 1
  %328 = getelementptr inbounds i8, i8* %210, i64 2
  store i8 %327, i8* %328, align 1
  %329 = sub nsw i64 %254, %289
  %330 = lshr i64 %329, 18
  %331 = and i64 %330, 1023
  %332 = getelementptr inbounds i8, i8* %15, i64 %331
  %333 = load i8, i8* %332, align 1
  %334 = getelementptr inbounds i8, i8* %210, i64 12
  store i8 %333, i8* %334, align 1
  %335 = add nsw i64 %295, %239
  %336 = lshr i64 %335, 18
  %337 = and i64 %336, 1023
  %338 = getelementptr inbounds i8, i8* %15, i64 %337
  %339 = load i8, i8* %338, align 1
  %340 = getelementptr inbounds i8, i8* %210, i64 3
  store i8 %339, i8* %340, align 1
  %341 = sub nsw i64 %239, %295
  %342 = lshr i64 %341, 18
  %343 = and i64 %342, 1023
  %344 = getelementptr inbounds i8, i8* %15, i64 %343
  %345 = load i8, i8* %344, align 1
  %346 = getelementptr inbounds i8, i8* %210, i64 11
  store i8 %345, i8* %346, align 1
  %347 = add nsw i64 %276, %252
  %348 = lshr i64 %347, 18
  %349 = and i64 %348, 1023
  %350 = getelementptr inbounds i8, i8* %15, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = getelementptr inbounds i8, i8* %210, i64 4
  store i8 %351, i8* %352, align 1
  %353 = sub nsw i64 %252, %276
  %354 = lshr i64 %353, 18
  %355 = and i64 %354, 1023
  %356 = getelementptr inbounds i8, i8* %15, i64 %355
  %357 = load i8, i8* %356, align 1
  %358 = getelementptr inbounds i8, i8* %210, i64 10
  store i8 %357, i8* %358, align 1
  %359 = add nsw i64 %299, %243
  %360 = lshr i64 %359, 18
  %361 = and i64 %360, 1023
  %362 = getelementptr inbounds i8, i8* %15, i64 %361
  %363 = load i8, i8* %362, align 1
  %364 = getelementptr inbounds i8, i8* %210, i64 5
  store i8 %363, i8* %364, align 1
  %365 = sub nsw i64 %243, %299
  %366 = lshr i64 %365, 18
  %367 = and i64 %366, 1023
  %368 = getelementptr inbounds i8, i8* %15, i64 %367
  %369 = load i8, i8* %368, align 1
  %370 = getelementptr inbounds i8, i8* %210, i64 9
  store i8 %369, i8* %370, align 1
  %371 = add nsw i64 %287, %246
  %372 = lshr i64 %371, 18
  %373 = and i64 %372, 1023
  %374 = getelementptr inbounds i8, i8* %15, i64 %373
  %375 = load i8, i8* %374, align 1
  %376 = getelementptr inbounds i8, i8* %210, i64 6
  store i8 %375, i8* %376, align 1
  %377 = sub nsw i64 %246, %287
  %378 = lshr i64 %377, 18
  %379 = and i64 %378, 1023
  %380 = getelementptr inbounds i8, i8* %15, i64 %379
  %381 = load i8, i8* %380, align 1
  %382 = getelementptr inbounds i8, i8* %210, i64 8
  store i8 %381, i8* %382, align 1
  %383 = lshr i64 %256, 18
  %384 = and i64 %383, 1023
  %385 = getelementptr inbounds i8, i8* %15, i64 %384
  %386 = load i8, i8* %385, align 1
  %387 = getelementptr inbounds i8, i8* %210, i64 7
  store i8 %386, i8* %387, align 1
  %388 = getelementptr inbounds i32, i32* %207, i64 8
  %389 = add nuw nsw i64 %206, 1
  %390 = icmp eq i64 %389, 15
  br i1 %390, label %391, label %205

391:                                              ; preds = %205
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %9) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_idct_16x16(%struct.jpeg_decompress_struct* nocapture readonly, %struct.jpeg_component_info* nocapture readonly, i16* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = alloca [128 x i32], align 16
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast [128 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %9) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 512, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 20
  %11 = bitcast i8** %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds [128 x i32], [128 x i32]* %6, i64 0, i64 0
  br label %17

14:                                               ; preds = %17
  %15 = getelementptr inbounds i8, i8* %8, i64 128
  %16 = zext i32 %4 to i64
  br label %225

17:                                               ; preds = %17, %5
  %18 = phi i32 [ 0, %5 ], [ %220, %17 ]
  %19 = phi i32* [ %13, %5 ], [ %223, %17 ]
  %20 = phi i16* [ %12, %5 ], [ %222, %17 ]
  %21 = phi i16* [ %2, %5 ], [ %221, %17 ]
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i64
  %24 = load i16, i16* %20, align 2
  %25 = sext i16 %24 to i64
  %26 = shl nsw i64 %23, 13
  %27 = mul nsw i64 %26, %25
  %28 = or i64 %27, 1024
  %29 = getelementptr inbounds i16, i16* %21, i64 32
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds i16, i16* %20, i64 32
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = mul nsw i64 %35, 10703
  %37 = mul nsw i64 %35, 4433
  %38 = add nsw i64 %36, %28
  %39 = sub nsw i64 %28, %36
  %40 = add nsw i64 %37, %28
  %41 = sub nsw i64 %28, %37
  %42 = getelementptr inbounds i16, i16* %21, i64 16
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i64
  %45 = getelementptr inbounds i16, i16* %20, i64 16
  %46 = load i16, i16* %45, align 2
  %47 = sext i16 %46 to i64
  %48 = mul nsw i64 %47, %44
  %49 = getelementptr inbounds i16, i16* %21, i64 48
  %50 = load i16, i16* %49, align 2
  %51 = sext i16 %50 to i64
  %52 = getelementptr inbounds i16, i16* %20, i64 48
  %53 = load i16, i16* %52, align 2
  %54 = sext i16 %53 to i64
  %55 = mul nsw i64 %54, %51
  %56 = sub nsw i64 %48, %55
  %57 = mul nsw i64 %56, 2260
  %58 = mul nsw i64 %56, 11363
  %59 = mul nsw i64 %55, 20995
  %60 = add nsw i64 %58, %59
  %61 = mul nsw i64 %48, 7373
  %62 = add nsw i64 %57, %61
  %63 = mul nsw i64 %48, -4926
  %64 = add nsw i64 %58, %63
  %65 = mul nsw i64 %55, -4176
  %66 = add nsw i64 %57, %65
  %67 = add nsw i64 %60, %38
  %68 = sub nsw i64 %38, %60
  %69 = add nsw i64 %62, %40
  %70 = sub nsw i64 %40, %62
  %71 = add nsw i64 %64, %41
  %72 = sub nsw i64 %41, %64
  %73 = add nsw i64 %66, %39
  %74 = sub nsw i64 %39, %66
  %75 = getelementptr inbounds i16, i16* %21, i64 8
  %76 = load i16, i16* %75, align 2
  %77 = sext i16 %76 to i64
  %78 = getelementptr inbounds i16, i16* %20, i64 8
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i64
  %81 = mul nsw i64 %80, %77
  %82 = getelementptr inbounds i16, i16* %21, i64 24
  %83 = load i16, i16* %82, align 2
  %84 = sext i16 %83 to i64
  %85 = getelementptr inbounds i16, i16* %20, i64 24
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i64
  %88 = mul nsw i64 %87, %84
  %89 = getelementptr inbounds i16, i16* %21, i64 40
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i64
  %92 = getelementptr inbounds i16, i16* %20, i64 40
  %93 = load i16, i16* %92, align 2
  %94 = sext i16 %93 to i64
  %95 = mul nsw i64 %94, %91
  %96 = getelementptr inbounds i16, i16* %21, i64 56
  %97 = load i16, i16* %96, align 2
  %98 = sext i16 %97 to i64
  %99 = getelementptr inbounds i16, i16* %20, i64 56
  %100 = load i16, i16* %99, align 2
  %101 = sext i16 %100 to i64
  %102 = mul nsw i64 %101, %98
  %103 = add nsw i64 %95, %81
  %104 = add nsw i64 %88, %81
  %105 = mul nsw i64 %104, 11086
  %106 = mul nsw i64 %103, 10217
  %107 = add nsw i64 %102, %81
  %108 = mul nsw i64 %107, 8956
  %109 = sub nsw i64 %81, %102
  %110 = mul nsw i64 %109, 7350
  %111 = mul nsw i64 %103, 5461
  %112 = sub nsw i64 %81, %88
  %113 = mul nsw i64 %112, 3363
  %114 = mul nsw i64 %81, -18730
  %115 = add nsw i64 %105, %114
  %116 = add nsw i64 %115, %106
  %117 = add nsw i64 %116, %108
  %118 = mul nsw i64 %81, -15038
  %119 = add nsw i64 %113, %118
  %120 = add nsw i64 %119, %111
  %121 = add nsw i64 %120, %110
  %122 = add nsw i64 %95, %88
  %123 = mul nsw i64 %122, 1136
  %124 = mul nsw i64 %88, 589
  %125 = mul nsw i64 %95, -9222
  %126 = add nsw i64 %123, %125
  %127 = add nsw i64 %126, %106
  %128 = sub nsw i64 %95, %88
  %129 = mul nsw i64 %128, 11529
  %130 = mul nsw i64 %95, -6278
  %131 = add nsw i64 %129, %130
  %132 = add nsw i64 %131, %111
  %133 = mul nsw i64 %88, 16154
  %134 = add nsw i64 %102, %88
  %135 = mul nsw i64 %134, -5461
  %136 = add nsw i64 %105, %124
  %137 = add nsw i64 %136, %123
  %138 = add nsw i64 %137, %135
  %139 = mul nsw i64 %102, 8728
  %140 = add nsw i64 %135, %139
  %141 = add nsw i64 %140, %108
  %142 = mul nsw i64 %134, -10217
  %143 = mul nsw i64 %102, 25733
  %144 = add nsw i64 %142, %143
  %145 = add nsw i64 %144, %110
  %146 = add nsw i64 %113, %133
  %147 = add nsw i64 %146, %129
  %148 = add nsw i64 %147, %142
  %149 = add nsw i64 %102, %95
  %150 = mul nsw i64 %149, -11086
  %151 = add nsw i64 %127, %150
  %152 = add nsw i64 %141, %150
  %153 = sub nsw i64 %102, %95
  %154 = mul nsw i64 %153, 3363
  %155 = add nsw i64 %145, %154
  %156 = add nsw i64 %132, %154
  %157 = add nsw i64 %117, %67
  %158 = lshr i64 %157, 11
  %159 = trunc i64 %158 to i32
  store i32 %159, i32* %19, align 4
  %160 = sub nsw i64 %67, %117
  %161 = lshr i64 %160, 11
  %162 = trunc i64 %161 to i32
  %163 = getelementptr inbounds i32, i32* %19, i64 120
  store i32 %162, i32* %163, align 4
  %164 = add nsw i64 %138, %69
  %165 = lshr i64 %164, 11
  %166 = trunc i64 %165 to i32
  %167 = getelementptr inbounds i32, i32* %19, i64 8
  store i32 %166, i32* %167, align 4
  %168 = sub nsw i64 %69, %138
  %169 = lshr i64 %168, 11
  %170 = trunc i64 %169 to i32
  %171 = getelementptr inbounds i32, i32* %19, i64 112
  store i32 %170, i32* %171, align 4
  %172 = add nsw i64 %151, %71
  %173 = lshr i64 %172, 11
  %174 = trunc i64 %173 to i32
  %175 = getelementptr inbounds i32, i32* %19, i64 16
  store i32 %174, i32* %175, align 4
  %176 = sub nsw i64 %71, %151
  %177 = lshr i64 %176, 11
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i32, i32* %19, i64 104
  store i32 %178, i32* %179, align 4
  %180 = add nsw i64 %152, %73
  %181 = lshr i64 %180, 11
  %182 = trunc i64 %181 to i32
  %183 = getelementptr inbounds i32, i32* %19, i64 24
  store i32 %182, i32* %183, align 4
  %184 = sub nsw i64 %73, %152
  %185 = lshr i64 %184, 11
  %186 = trunc i64 %185 to i32
  %187 = getelementptr inbounds i32, i32* %19, i64 96
  store i32 %186, i32* %187, align 4
  %188 = add nsw i64 %155, %74
  %189 = lshr i64 %188, 11
  %190 = trunc i64 %189 to i32
  %191 = getelementptr inbounds i32, i32* %19, i64 32
  store i32 %190, i32* %191, align 4
  %192 = sub nsw i64 %74, %155
  %193 = lshr i64 %192, 11
  %194 = trunc i64 %193 to i32
  %195 = getelementptr inbounds i32, i32* %19, i64 88
  store i32 %194, i32* %195, align 4
  %196 = add nsw i64 %156, %72
  %197 = lshr i64 %196, 11
  %198 = trunc i64 %197 to i32
  %199 = getelementptr inbounds i32, i32* %19, i64 40
  store i32 %198, i32* %199, align 4
  %200 = sub nsw i64 %72, %156
  %201 = lshr i64 %200, 11
  %202 = trunc i64 %201 to i32
  %203 = getelementptr inbounds i32, i32* %19, i64 80
  store i32 %202, i32* %203, align 4
  %204 = add nsw i64 %148, %70
  %205 = lshr i64 %204, 11
  %206 = trunc i64 %205 to i32
  %207 = getelementptr inbounds i32, i32* %19, i64 48
  store i32 %206, i32* %207, align 4
  %208 = sub nsw i64 %70, %148
  %209 = lshr i64 %208, 11
  %210 = trunc i64 %209 to i32
  %211 = getelementptr inbounds i32, i32* %19, i64 72
  store i32 %210, i32* %211, align 4
  %212 = add nsw i64 %121, %68
  %213 = lshr i64 %212, 11
  %214 = trunc i64 %213 to i32
  %215 = getelementptr inbounds i32, i32* %19, i64 56
  store i32 %214, i32* %215, align 4
  %216 = sub nsw i64 %68, %121
  %217 = lshr i64 %216, 11
  %218 = trunc i64 %217 to i32
  %219 = getelementptr inbounds i32, i32* %19, i64 64
  store i32 %218, i32* %219, align 4
  %220 = add nuw nsw i32 %18, 1
  %221 = getelementptr inbounds i16, i16* %21, i64 1
  %222 = getelementptr inbounds i16, i16* %20, i64 1
  %223 = getelementptr inbounds i32, i32* %19, i64 1
  %224 = icmp eq i32 %220, 8
  br i1 %224, label %14, label %17

225:                                              ; preds = %225, %14
  %226 = phi i64 [ 0, %14 ], [ %431, %225 ]
  %227 = phi i32* [ %13, %14 ], [ %430, %225 ]
  %228 = getelementptr inbounds i8*, i8** %3, i64 %226
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %16
  %231 = load i32, i32* %227, align 4
  %232 = sext i32 %231 to i64
  %233 = shl nsw i64 %232, 13
  %234 = add nsw i64 %233, 131072
  %235 = getelementptr inbounds i32, i32* %227, i64 4
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = mul nsw i64 %237, 10703
  %239 = mul nsw i64 %237, 4433
  %240 = add nsw i64 %234, %238
  %241 = sub nsw i64 %234, %238
  %242 = add nsw i64 %234, %239
  %243 = sub nsw i64 %234, %239
  %244 = getelementptr inbounds i32, i32* %227, i64 2
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %227, i64 6
  %248 = load i32, i32* %247, align 4
  %249 = sext i32 %248 to i64
  %250 = sub nsw i64 %246, %249
  %251 = mul nsw i64 %250, 2260
  %252 = mul nsw i64 %250, 11363
  %253 = mul nsw i64 %249, 20995
  %254 = add nsw i64 %252, %253
  %255 = mul nsw i64 %246, 7373
  %256 = add nsw i64 %251, %255
  %257 = mul nsw i64 %246, -4926
  %258 = add nsw i64 %252, %257
  %259 = mul nsw i64 %249, -4176
  %260 = add nsw i64 %251, %259
  %261 = add nsw i64 %254, %240
  %262 = sub nsw i64 %240, %254
  %263 = add nsw i64 %256, %242
  %264 = sub nsw i64 %242, %256
  %265 = add nsw i64 %258, %243
  %266 = sub nsw i64 %243, %258
  %267 = add nsw i64 %260, %241
  %268 = sub nsw i64 %241, %260
  %269 = getelementptr inbounds i32, i32* %227, i64 1
  %270 = load i32, i32* %269, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i32, i32* %227, i64 3
  %273 = load i32, i32* %272, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i32, i32* %227, i64 5
  %276 = load i32, i32* %275, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i32, i32* %227, i64 7
  %279 = load i32, i32* %278, align 4
  %280 = sext i32 %279 to i64
  %281 = add nsw i64 %277, %271
  %282 = add nsw i64 %274, %271
  %283 = mul nsw i64 %282, 11086
  %284 = mul nsw i64 %281, 10217
  %285 = add nsw i64 %280, %271
  %286 = mul nsw i64 %285, 8956
  %287 = sub nsw i64 %271, %280
  %288 = mul nsw i64 %287, 7350
  %289 = mul nsw i64 %281, 5461
  %290 = sub nsw i64 %271, %274
  %291 = mul nsw i64 %290, 3363
  %292 = mul nsw i64 %271, -18730
  %293 = add nsw i64 %283, %292
  %294 = add nsw i64 %293, %284
  %295 = add nsw i64 %294, %286
  %296 = mul nsw i64 %271, -15038
  %297 = add nsw i64 %291, %296
  %298 = add nsw i64 %297, %289
  %299 = add nsw i64 %298, %288
  %300 = add nsw i64 %277, %274
  %301 = mul nsw i64 %300, 1136
  %302 = mul nsw i64 %274, 589
  %303 = mul nsw i64 %277, -9222
  %304 = add nsw i64 %301, %303
  %305 = add nsw i64 %304, %284
  %306 = sub nsw i64 %277, %274
  %307 = mul nsw i64 %306, 11529
  %308 = mul nsw i64 %277, -6278
  %309 = add nsw i64 %307, %308
  %310 = add nsw i64 %309, %289
  %311 = mul nsw i64 %274, 16154
  %312 = add nsw i64 %280, %274
  %313 = mul nsw i64 %312, -5461
  %314 = add nsw i64 %283, %302
  %315 = add nsw i64 %314, %301
  %316 = add nsw i64 %315, %313
  %317 = mul nsw i64 %280, 8728
  %318 = add nsw i64 %313, %317
  %319 = add nsw i64 %318, %286
  %320 = mul nsw i64 %312, -10217
  %321 = mul nsw i64 %280, 25733
  %322 = add nsw i64 %320, %321
  %323 = add nsw i64 %322, %288
  %324 = add nsw i64 %291, %311
  %325 = add nsw i64 %324, %307
  %326 = add nsw i64 %325, %320
  %327 = add nsw i64 %280, %277
  %328 = mul nsw i64 %327, -11086
  %329 = add nsw i64 %305, %328
  %330 = add nsw i64 %319, %328
  %331 = sub nsw i64 %280, %277
  %332 = mul nsw i64 %331, 3363
  %333 = add nsw i64 %323, %332
  %334 = add nsw i64 %310, %332
  %335 = add nsw i64 %295, %261
  %336 = lshr i64 %335, 18
  %337 = and i64 %336, 1023
  %338 = getelementptr inbounds i8, i8* %15, i64 %337
  %339 = load i8, i8* %338, align 1
  store i8 %339, i8* %230, align 1
  %340 = sub nsw i64 %261, %295
  %341 = lshr i64 %340, 18
  %342 = and i64 %341, 1023
  %343 = getelementptr inbounds i8, i8* %15, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = getelementptr inbounds i8, i8* %230, i64 15
  store i8 %344, i8* %345, align 1
  %346 = add nsw i64 %316, %263
  %347 = lshr i64 %346, 18
  %348 = and i64 %347, 1023
  %349 = getelementptr inbounds i8, i8* %15, i64 %348
  %350 = load i8, i8* %349, align 1
  %351 = getelementptr inbounds i8, i8* %230, i64 1
  store i8 %350, i8* %351, align 1
  %352 = sub nsw i64 %263, %316
  %353 = lshr i64 %352, 18
  %354 = and i64 %353, 1023
  %355 = getelementptr inbounds i8, i8* %15, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = getelementptr inbounds i8, i8* %230, i64 14
  store i8 %356, i8* %357, align 1
  %358 = add nsw i64 %329, %265
  %359 = lshr i64 %358, 18
  %360 = and i64 %359, 1023
  %361 = getelementptr inbounds i8, i8* %15, i64 %360
  %362 = load i8, i8* %361, align 1
  %363 = getelementptr inbounds i8, i8* %230, i64 2
  store i8 %362, i8* %363, align 1
  %364 = sub nsw i64 %265, %329
  %365 = lshr i64 %364, 18
  %366 = and i64 %365, 1023
  %367 = getelementptr inbounds i8, i8* %15, i64 %366
  %368 = load i8, i8* %367, align 1
  %369 = getelementptr inbounds i8, i8* %230, i64 13
  store i8 %368, i8* %369, align 1
  %370 = add nsw i64 %330, %267
  %371 = lshr i64 %370, 18
  %372 = and i64 %371, 1023
  %373 = getelementptr inbounds i8, i8* %15, i64 %372
  %374 = load i8, i8* %373, align 1
  %375 = getelementptr inbounds i8, i8* %230, i64 3
  store i8 %374, i8* %375, align 1
  %376 = sub nsw i64 %267, %330
  %377 = lshr i64 %376, 18
  %378 = and i64 %377, 1023
  %379 = getelementptr inbounds i8, i8* %15, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = getelementptr inbounds i8, i8* %230, i64 12
  store i8 %380, i8* %381, align 1
  %382 = add nsw i64 %333, %268
  %383 = lshr i64 %382, 18
  %384 = and i64 %383, 1023
  %385 = getelementptr inbounds i8, i8* %15, i64 %384
  %386 = load i8, i8* %385, align 1
  %387 = getelementptr inbounds i8, i8* %230, i64 4
  store i8 %386, i8* %387, align 1
  %388 = sub nsw i64 %268, %333
  %389 = lshr i64 %388, 18
  %390 = and i64 %389, 1023
  %391 = getelementptr inbounds i8, i8* %15, i64 %390
  %392 = load i8, i8* %391, align 1
  %393 = getelementptr inbounds i8, i8* %230, i64 11
  store i8 %392, i8* %393, align 1
  %394 = add nsw i64 %334, %266
  %395 = lshr i64 %394, 18
  %396 = and i64 %395, 1023
  %397 = getelementptr inbounds i8, i8* %15, i64 %396
  %398 = load i8, i8* %397, align 1
  %399 = getelementptr inbounds i8, i8* %230, i64 5
  store i8 %398, i8* %399, align 1
  %400 = sub nsw i64 %266, %334
  %401 = lshr i64 %400, 18
  %402 = and i64 %401, 1023
  %403 = getelementptr inbounds i8, i8* %15, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = getelementptr inbounds i8, i8* %230, i64 10
  store i8 %404, i8* %405, align 1
  %406 = add nsw i64 %326, %264
  %407 = lshr i64 %406, 18
  %408 = and i64 %407, 1023
  %409 = getelementptr inbounds i8, i8* %15, i64 %408
  %410 = load i8, i8* %409, align 1
  %411 = getelementptr inbounds i8, i8* %230, i64 6
  store i8 %410, i8* %411, align 1
  %412 = sub nsw i64 %264, %326
  %413 = lshr i64 %412, 18
  %414 = and i64 %413, 1023
  %415 = getelementptr inbounds i8, i8* %15, i64 %414
  %416 = load i8, i8* %415, align 1
  %417 = getelementptr inbounds i8, i8* %230, i64 9
  store i8 %416, i8* %417, align 1
  %418 = add nsw i64 %299, %262
  %419 = lshr i64 %418, 18
  %420 = and i64 %419, 1023
  %421 = getelementptr inbounds i8, i8* %15, i64 %420
  %422 = load i8, i8* %421, align 1
  %423 = getelementptr inbounds i8, i8* %230, i64 7
  store i8 %422, i8* %423, align 1
  %424 = sub nsw i64 %262, %299
  %425 = lshr i64 %424, 18
  %426 = and i64 %425, 1023
  %427 = getelementptr inbounds i8, i8* %15, i64 %426
  %428 = load i8, i8* %427, align 1
  %429 = getelementptr inbounds i8, i8* %230, i64 8
  store i8 %428, i8* %429, align 1
  %430 = getelementptr inbounds i32, i32* %227, i64 8
  %431 = add nuw nsw i64 %226, 1
  %432 = icmp eq i64 %431, 16
  br i1 %432, label %433, label %225

433:                                              ; preds = %225
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %9) #2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
