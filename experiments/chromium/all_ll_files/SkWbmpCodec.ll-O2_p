; ModuleID = '../../third_party/skia/src/codec/SkWbmpCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkWbmpCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkWbmpCodec = type { %class.SkCodec.base, i64, %"class.std::__1::unique_ptr.16", %class.SkAutoTMalloc }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.10, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.0, [8 x i8] }
%struct.anon.0 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkSwizzler* }
%class.SkSwizzler = type <{ %class.SkSampler.base, [4 x i8], void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%class.SkStream = type { i32 (...)** }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.32", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.32" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.33", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.33" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN11SkWbmpCodecD2Ev = comdat any

$_ZN11SkWbmpCodecD0Ev = comdat any

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK7SkCodec18onGetScanlineOrderEv = comdat any

$_ZNK11SkWbmpCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN11SkWbmpCodec10getSamplerEb = comdat any

@_ZTV11SkWbmpCodec = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkWbmpCodec*)* @_ZN11SkWbmpCodecD2Ev to i8*), i8* bitcast (void (%class.SkWbmpCodec*)* @_ZN11SkWbmpCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkWbmpCodec*)* @_ZNK11SkWbmpCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkWbmpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN11SkWbmpCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkWbmpCodec*)* @_ZN11SkWbmpCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkWbmpCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN11SkWbmpCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkWbmpCodec*)* @_ZNK11SkWbmpCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkWbmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN11SkWbmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkWbmpCodec*, i32)* @_ZN11SkWbmpCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkWbmpCodec*, i8*, i32, i64)* @_ZN11SkWbmpCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkWbmpCodec*, i1)* @_ZN11SkWbmpCodec10getSamplerEb to i8*)] }, align 8
@_ZTV14SkMemoryStream = external unnamed_addr constant { [18 x i8*] }, align 8

@_ZN11SkWbmpCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%class.SkWbmpCodec*, %struct.SkEncodedInfo*, %class.SkStream*), void (%class.SkWbmpCodec*, %struct.SkEncodedInfo*, %class.SkStream*)* @_ZN11SkWbmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkWbmpCodec8onRewindEv(%class.SkWbmpCodec* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.SkStream*, %class.SkStream** %2, align 8
  %4 = tail call fastcc zeroext i1 @_ZL11read_headerP8SkStreamP7SkISize(%class.SkStream* %3, %struct.SkISize* null)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL11read_headerP8SkStreamP7SkISize(%class.SkStream*, %struct.SkISize*) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 -86, i8* %5, align 1
  %6 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  %7 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %7, i64 2
  %9 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %8, align 8
  %10 = call i64 %9(%class.SkStream* %0, i8* nonnull %5, i64 1) #9
  %11 = icmp eq i64 %10, 1
  %12 = load i8, i8* %5, align 1
  %13 = icmp eq i8 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %25

15:                                               ; preds = %2
  %16 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %6, align 8
  %17 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, i64 2
  %18 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %17, align 8
  %19 = call i64 %18(%class.SkStream* %0, i8* nonnull %5, i64 1) #9
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = load i8, i8* %5, align 1
  %23 = and i8 %22, -97
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %15, %21, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  br label %75

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  br label %27

27:                                               ; preds = %36, %26
  %28 = phi i64 [ 0, %26 ], [ %41, %36 ]
  %29 = icmp ugt i64 %28, 144115188075855871
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %6, align 8
  %32 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %31, i64 2
  %33 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %32, align 8
  %34 = call i64 %33(%class.SkStream* %0, i8* nonnull %4, i64 1) #9
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = shl i64 %28, 7
  %38 = load i8, i8* %4, align 1
  %39 = and i8 %38, 127
  %40 = zext i8 %39 to i64
  %41 = or i64 %37, %40
  %42 = icmp slt i8 %38, 0
  br i1 %42, label %27, label %44

43:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br label %75

44:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  %45 = add i64 %41, -1
  %46 = icmp ult i64 %45, 65535
  br i1 %46, label %47, label %75

47:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 -86, i8* %3, align 1
  br label %48

48:                                               ; preds = %57, %47
  %49 = phi i64 [ 0, %47 ], [ %62, %57 ]
  %50 = icmp ugt i64 %49, 144115188075855871
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %6, align 8
  %53 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %52, i64 2
  %54 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %53, align 8
  %55 = call i64 %54(%class.SkStream* %0, i8* nonnull %3, i64 1) #9
  %56 = icmp eq i64 %55, 1
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = shl i64 %49, 7
  %59 = load i8, i8* %3, align 1
  %60 = and i8 %59, 127
  %61 = zext i8 %60 to i64
  %62 = or i64 %58, %61
  %63 = icmp slt i8 %59, 0
  br i1 %63, label %48, label %65

64:                                               ; preds = %48, %51
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %75

65:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %66 = add i64 %62, -1
  %67 = icmp ult i64 %66, 65535
  br i1 %67, label %68, label %75

68:                                               ; preds = %65
  %69 = icmp eq %struct.SkISize* %1, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %68
  %71 = shl i64 %62, 32
  %72 = and i64 %41, 4294967295
  %73 = or i64 %71, %72
  %74 = bitcast %struct.SkISize* %1 to i64*
  store i64 %73, i64* %74, align 4
  br label %75

75:                                               ; preds = %44, %65, %68, %70, %43, %64, %25
  %76 = phi i1 [ false, %25 ], [ false, %44 ], [ false, %65 ], [ true, %68 ], [ true, %70 ], [ false, %43 ], [ false, %64 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkWbmpCodec7readRowEPh(%class.SkWbmpCodec* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %class.SkStream*, %class.SkStream** %3, align 8
  %5 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.SkStream* %4 to i64 (%class.SkStream*, i8*, i64)***
  %8 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %8, i64 2
  %10 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %9, align 8
  %11 = tail call i64 %10(%class.SkStream* %4, i8* %1, i64 %6) #9
  %12 = load i64, i64* %5, align 8
  %13 = icmp eq i64 %11, %12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkWbmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEE(%class.SkWbmpCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkWbmpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* %4, %struct.SkEncodedInfo* dereferenceable(32) %1, i32 0, %class.SkStream* %2, i32 1) #9
  %5 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWbmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 7
  %10 = ashr i32 %9, 3
  %11 = sext i32 %10 to i64
  store i64 %11, i64* %6, align 8
  %12 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::unique_ptr.16"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec*, %struct.SkEncodedInfo* dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK11SkWbmpCodec18onGetEncodedFormatEv(%class.SkWbmpCodec* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11SkWbmpCodec19conversionSupportedERK11SkImageInfobb(%class.SkWbmpCodec* nocapture readnone, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %18 [
    i32 4, label %11
    i32 6, label %11
    i32 11, label %11
    i32 2, label %11
    i32 13, label %7
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %10 = icmp eq %class.SkColorSpace* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7, %4, %4, %4, %4
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = icmp ne i32 %13, 1
  %17 = or i1 %16, %2
  br label %18

18:                                               ; preds = %7, %4, %15, %11
  %19 = phi i1 [ false, %7 ], [ %17, %15 ], [ false, %11 ], [ false, %4 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkWbmpCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkWbmpCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24), i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %8 = load %struct.SkIRect*, %struct.SkIRect** %7, align 8
  %9 = icmp eq %struct.SkIRect* %8, null
  br i1 %9, label %10, label %56

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 1
  %12 = tail call %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* dereferenceable(32) %11, i32* null, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %4, %struct.SkIRect* null) #9
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %14 = bitcast %struct.SkISize* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %10
  %22 = tail call i8* @_Z15sk_malloc_throwmm(i64 %19, i64 1) #9
  br label %23

23:                                               ; preds = %10, %21
  %24 = phi i8* [ %22, %21 ], [ null, %10 ]
  %25 = icmp sgt i32 %17, 0
  br i1 %25, label %26, label %45

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %40, %26
  %29 = phi i32 [ 0, %26 ], [ %42, %40 ]
  %30 = phi i8* [ %2, %26 ], [ %41, %40 ]
  %31 = load %class.SkStream*, %class.SkStream** %27, align 8
  %32 = load i64, i64* %18, align 8
  %33 = bitcast %class.SkStream* %31 to i64 (%class.SkStream*, i8*, i64)***
  %34 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %33, align 8
  %35 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %34, i64 2
  %36 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %35, align 8
  %37 = tail call i64 %36(%class.SkStream* %31, i8* %24, i64 %32) #9
  %38 = load i64, i64* %18, align 8
  %39 = icmp eq i64 %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %28
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %12, i8* %30, i8* %24) #9
  %41 = getelementptr inbounds i8, i8* %30, i64 %3
  %42 = add nuw nsw i32 %29, 1
  %43 = icmp eq i32 %42, %17
  br i1 %43, label %45, label %28

44:                                               ; preds = %28
  store i32 %29, i32* %5, align 4
  br label %45

45:                                               ; preds = %40, %23, %44
  %46 = phi i32 [ 1, %44 ], [ 0, %23 ], [ 0, %40 ]
  %47 = icmp eq i8* %24, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  tail call void @_Z7sk_freePv(i8* nonnull %24) #9
  br label %49

49:                                               ; preds = %45, %48
  %50 = icmp eq %class.SkSwizzler* %12, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = bitcast %class.SkSwizzler* %12 to void (%class.SkSwizzler*)***
  %53 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %53, i64 2
  %55 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %54, align 8
  tail call void %55(%class.SkSwizzler* nonnull %12) #9
  br label %56

56:                                               ; preds = %51, %49, %6
  %57 = phi i32 [ 9, %6 ], [ %46, %49 ], [ %46, %51 ]
  ret i32 %57
}

declare %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* dereferenceable(32), i32*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24), %struct.SkIRect*) local_unnamed_addr #1

declare void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkWbmpCodec6IsWbmpEPKvm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMemoryStream, align 8
  %4 = bitcast %class.SkMemoryStream* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %3, i64 0, i32 1, i32 0
  %7 = bitcast %class.SkMemoryStream* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream* nonnull %3, i8* %0, i64 %1, i1 zeroext false) #9
  %8 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = call fastcc zeroext i1 @_ZL11read_headerP8SkStreamP7SkISize(%class.SkStream* nonnull %8, %struct.SkISize* null)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV14SkMemoryStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %10 = load %class.SkData*, %class.SkData** %6, align 8
  %11 = icmp eq %class.SkData* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %10) #9
  %17 = bitcast %class.SkData* %10 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %17) #9
  br label %18

18:                                               ; preds = %2, %12, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %9
}

declare void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream*, i8*, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN11SkWbmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkISize, align 4
  %4 = alloca %struct.SkEncodedInfo, align 8
  %5 = bitcast %struct.SkISize* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %3, i64 0, i32 0
  store i32 -1431655766, i32* %6, align 4
  %7 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %3, i64 0, i32 1
  store i32 -1431655766, i32* %7, align 4
  %8 = call fastcc zeroext i1 @_ZL11read_headerP8SkStreamP7SkISize(%class.SkStream* %0, %struct.SkISize* nonnull %3)
  br i1 %8, label %9, label %48

9:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  %10 = bitcast %struct.SkEncodedInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i32, i32* %6, align 4
  %12 = load i32, i32* %7, align 4
  %13 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 0
  store i32 %11, i32* %13, align 8, !alias.scope !2
  %14 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 1
  store i32 %12, i32* %14, align 4, !alias.scope !2
  %15 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 2
  store i32 0, i32* %15, align 8, !alias.scope !2
  %16 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 3
  store i32 0, i32* %16, align 4, !alias.scope !2
  %17 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 4
  store i8 1, i8* %17, align 8, !alias.scope !2
  %18 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 5
  %19 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 0, i64* %19, align 8, !alias.scope !2
  %20 = call i8* @_Znwm(i64 1168) #10
  %21 = bitcast i8* %20 to %class.SkCodec*
  call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nonnull %21, %struct.SkEncodedInfo* nonnull dereferenceable(32) %4, i32 0, %class.SkStream* %0, i32 1) #9
  %22 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWbmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 1144
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds i8, i8* %20, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 7
  %29 = ashr i32 %28, 3
  %30 = sext i32 %29 to i64
  store i64 %30, i64* %24, align 8
  %31 = getelementptr inbounds i8, i8* %20, i64 1152
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  %32 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %33 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %32, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %32, align 8
  %34 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %9
  %36 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %33, i64 0, i32 1, i32 0
  %37 = load %class.SkData*, %class.SkData** %36, align 8
  %38 = icmp eq %class.SkData* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %37) #9
  %44 = bitcast %class.SkData* %37 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %44) #9
  br label %45

45:                                               ; preds = %43, %39, %35
  %46 = bitcast %"class.SkEncodedInfo::ICCProfile"* %33 to i8*
  call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %45, %9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  br label %55

48:                                               ; preds = %2
  store i32 7, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %49 = icmp eq %class.SkStream* %0, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = bitcast %class.SkStream* %0 to void (%class.SkStream*)***
  %52 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %52, i64 1
  %54 = load void (%class.SkStream*)*, void (%class.SkStream*)** %53, align 8
  call void %54(%class.SkStream* nonnull %0) #9
  br label %55

55:                                               ; preds = %47, %48, %50
  %56 = phi %class.SkCodec* [ %21, %47 ], [ null, %48 ], [ null, %50 ]
  ret %class.SkCodec* %56
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkWbmpCodec14onGetScanlinesEPvim(%class.SkWbmpCodec* nocapture readonly, i8*, i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %30

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %24, %7
  %12 = phi i32 [ 0, %7 ], [ %28, %24 ]
  %13 = phi i8* [ %1, %7 ], [ %27, %24 ]
  %14 = load i8*, i8** %5, align 8
  %15 = load %class.SkStream*, %class.SkStream** %8, align 8
  %16 = load i64, i64* %9, align 8
  %17 = bitcast %class.SkStream* %15 to i64 (%class.SkStream*, i8*, i64)***
  %18 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %18, i64 2
  %20 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %19, align 8
  %21 = tail call i64 %20(%class.SkStream* %15, i8* %14, i64 %16) #9
  %22 = load i64, i64* %9, align 8
  %23 = icmp eq i64 %21, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %11
  %25 = load %class.SkSwizzler*, %class.SkSwizzler** %10, align 8
  %26 = load i8*, i8** %5, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %25, i8* %13, i8* %26) #9
  %27 = getelementptr inbounds i8, i8* %13, i64 %3
  %28 = add nuw nsw i32 %12, 1
  %29 = icmp eq i32 %28, %2
  br i1 %29, label %30, label %11

30:                                               ; preds = %11, %24, %4
  %31 = phi i32 [ %2, %4 ], [ %2, %24 ], [ %12, %11 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkWbmpCodec15onSkipScanlinesEi(%class.SkWbmpCodec* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %5, %3
  %7 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %class.SkStream*, %class.SkStream** %7, align 8
  %9 = bitcast %class.SkStream* %8 to i64 (%class.SkStream*, i8*, i64)***
  %10 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %10, i64 2
  %12 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %11, align 8
  %13 = tail call i64 %12(%class.SkStream* %8, i8* null, i64 %6) #9
  %14 = icmp eq i64 %13, %6
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkWbmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkWbmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %5 = load %struct.SkIRect*, %struct.SkIRect** %4, align 8
  %6 = icmp eq %struct.SkIRect* %5, null
  br i1 %6, label %7, label %33

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 1
  %9 = tail call %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* dereferenceable(32) %8, i32* null, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %2, %struct.SkIRect* null) #9
  %10 = ptrtoint %class.SkSwizzler* %9 to i64
  %11 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SkSwizzler*, %class.SkSwizzler** %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr.16"* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %class.SkSwizzler* %13, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %7
  %17 = bitcast %class.SkSwizzler* %13 to void (%class.SkSwizzler*)***
  %18 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %18, i64 2
  %20 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %19, align 8
  tail call void %20(%class.SkSwizzler* nonnull %13) #9
  br label %21

21:                                               ; preds = %16, %7
  %22 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call i8* @_Z15sk_malloc_throwmm(i64 %23, i64 1) #9
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi i8* [ %26, %25 ], [ null, %21 ]
  %29 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  store i8* %28, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_Z7sk_freePv(i8* nonnull %30) #9
  br label %33

33:                                               ; preds = %32, %27, %3
  %34 = phi i32 [ 9, %3 ], [ 0, %27 ], [ 0, %32 ]
  ret i32 %34
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWbmpCodecD2Ev(%class.SkWbmpCodec*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWbmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.SkSwizzler*, %class.SkSwizzler** %8, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %8, align 8
  %10 = icmp eq %class.SkSwizzler* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.SkSwizzler* %9 to void (%class.SkSwizzler*)***
  %13 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %13, i64 2
  %15 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %14, align 8
  tail call void %15(%class.SkSwizzler* nonnull %9) #9
  br label %16

16:                                               ; preds = %7, %11
  %17 = bitcast %class.SkWbmpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %17) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWbmpCodecD0Ev(%class.SkWbmpCodec*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWbmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.SkSwizzler*, %class.SkSwizzler** %8, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %8, align 8
  %10 = icmp eq %class.SkSwizzler* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.SkSwizzler* %9 to void (%class.SkSwizzler*)***
  %13 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %13, i64 2
  %15 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %14, align 8
  tail call void %15(%class.SkSwizzler* nonnull %9) #9
  br label %16

16:                                               ; preds = %7, %11
  %17 = bitcast %class.SkWbmpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %17) #9
  %18 = bitcast %class.SkWbmpCodec* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK7SkCodec18onGetScanlineOrderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11SkWbmpCodec14usesColorXformEv(%class.SkWbmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret %class.SkFrameHolder* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkSampler* @_ZN11SkWbmpCodec10getSamplerEb(%class.SkWbmpCodec*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkWbmpCodec, %class.SkWbmpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = bitcast %class.SkSwizzler** %3 to %class.SkSampler**
  %5 = load %class.SkSampler*, %class.SkSampler** %4, align 8
  ret %class.SkSampler* %5
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #7

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!5 = distinct !{!5, !6, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi: argument 0"}
!6 = distinct !{!6, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi"}
