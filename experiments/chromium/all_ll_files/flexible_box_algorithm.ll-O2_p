; ModuleID = '../../third_party/blink/renderer/core/layout/flexible_box_algorithm.cc'
source_filename = "../../third_party/blink/renderer/core/layout/flexible_box_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::FlexItem" = type { %"class.blink::FlexLayoutAlgorithm"*, i32, %"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.absl::optional.1874", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutPoint", i8, i8, i8, i8, %"class.blink::NGBlockNode", %class.scoped_refptr.1641 }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1874" = type { %"class.absl::optional_internal::optional_data.1875" }
%"class.absl::optional_internal::optional_data.1875" = type { %"class.absl::optional_internal::optional_data_base.1876" }
%"class.absl::optional_internal::optional_data_base.1876" = type { %"class.absl::optional_internal::optional_data_dtor_base.1877" }
%"class.absl::optional_internal::optional_data_dtor_base.1877" = type { i8, %union.anon.1878 }
%union.anon.1878 = type { %"struct.blink::MinMaxSizes" }
%"struct.blink::NGPhysicalBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%class.scoped_refptr.1641 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1642", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1789, %union.anon.1807, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1642" = type { %"class.base::RefCounted.1643" }
%"class.base::RefCounted.1643" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1644, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1644 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1645 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1645 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1679 }
%class.scoped_refptr.1679 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1680", [4 x i8], %"class.std::__1::unique_ptr.1682", i64, %"class.WTF::Vector.1686", %"class.WTF::Vector.1691", %"class.WTF::Vector.1697", %"class.WTF::Vector.1715", %class.scoped_refptr.1546, %"class.WTF::HashMap.1721", %"class.WTF::Vector.1726", %"class.WTF::Vector.1686", %"class.WTF::Vector.1731", %"class.WTF::HashMap.1736", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1680" = type { %"class.base::RefCountedThreadSafe.1681" }
%"class.base::RefCountedThreadSafe.1681" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.std::__1::unique_ptr.1682" = type { %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.1684" }
%"struct.std::__1::__compressed_pair_elem.1684" = type { i8* }
%"class.WTF::Vector.1691" = type { %"class.WTF::VectorBuffer.1692" }
%"class.WTF::VectorBuffer.1692" = type { %"class.WTF::VectorBufferBase.1693", [8 x i8] }
%"class.WTF::VectorBufferBase.1693" = type { %class.scoped_refptr.1694*, i32, i32 }
%class.scoped_refptr.1694 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1697" = type { %"class.WTF::VectorBuffer.1698" }
%"class.WTF::VectorBuffer.1698" = type { %"class.WTF::VectorBufferBase.1699" }
%"class.WTF::VectorBufferBase.1699" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1701", %"class.std::__1::unique_ptr.1707" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1700 }
%class.scoped_refptr.1700 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1701" = type { %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.1703" }
%"struct.std::__1::__compressed_pair_elem.1703" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1715" = type { %"class.WTF::VectorBuffer.1716" }
%"class.WTF::VectorBuffer.1716" = type { %"class.WTF::VectorBufferBase.1717" }
%"class.WTF::VectorBufferBase.1717" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1718", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1718" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.1721" = type { %"class.WTF::HashTable.1722" }
%"class.WTF::HashTable.1722" = type <{ %"struct.WTF::KeyValuePair.1725"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1725" = type opaque
%"class.WTF::Vector.1726" = type { %"class.WTF::VectorBuffer.1727" }
%"class.WTF::VectorBuffer.1727" = type { %"class.WTF::VectorBufferBase.1728" }
%"class.WTF::VectorBufferBase.1728" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688", [16 x i8] }
%"class.WTF::VectorBufferBase.1688" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1731" = type { %"class.WTF::VectorBuffer.1732" }
%"class.WTF::VectorBuffer.1732" = type { %"class.WTF::VectorBufferBase.1733" }
%"class.WTF::VectorBufferBase.1733" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"struct.WTF::KeyValuePair.1740"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1740" = type { i8**, %"class.std::__1::unique_ptr.1963" }
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1741" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1744, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1761" }
%class.scoped_refptr.1744 = type { %"class.base::RefCountedData.1745"* }
%"class.base::RefCountedData.1745" = type { %"class.base::RefCountedThreadSafe.1746", %"class.WTF::Vector.1747" }
%"class.base::RefCountedThreadSafe.1746" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1747" = type { %"class.WTF::VectorBuffer.1748" }
%"class.WTF::VectorBuffer.1748" = type { %"class.WTF::VectorBufferBase.1749" }
%"class.WTF::VectorBufferBase.1749" = type { %class.scoped_refptr.1750*, i32, i32 }
%class.scoped_refptr.1750 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1751", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1753" }
%"class.WTF::RefCounted.1751" = type { %"class.base::RefCounted.1752" }
%"class.base::RefCounted.1752" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1764", %"class.WTF::Vector.1777", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [320 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1767", %"class.WTF::Vector.1767", %class.scoped_refptr.1772, i8, [7 x i8] }>
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [8 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1772 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1773", %"class.WTF::Vector.1747", %"class.WTF::Vector.1747" }
%"class.WTF::RefCounted.1773" = type { %"class.base::RefCounted.1774" }
%"class.base::RefCounted.1774" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1777" = type { %"class.WTF::VectorBuffer.1778" }
%"class.WTF::VectorBuffer.1778" = type { %"class.WTF::VectorBufferBase.1779", [288 x i8] }
%"class.WTF::VectorBufferBase.1779" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1767", %"class.WTF::Vector.1767" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1780 }
%class.scoped_refptr.1780 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1789 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1790", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1792, %"class.std::__1::unique_ptr.1795" }
%"class.WTF::RefCounted.1790" = type { %"class.base::RefCounted.1791" }
%"class.base::RefCounted.1791" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1928" }
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1930" }
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1951 }
%class.scoped_refptr.1951 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1961" }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1952", %"class.WTF::Vector.1952" }
%"class.WTF::Vector.1952" = type { %"class.WTF::VectorBuffer.1953" }
%"class.WTF::VectorBuffer.1953" = type { %"class.WTF::VectorBufferBase.1954" }
%"class.WTF::VectorBufferBase.1954" = type { %class.scoped_refptr.1951*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1937 }
%class.scoped_refptr.1937 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1938", %"class.WTF::Vector.630", %"class.WTF::Vector.1940", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1938" = type { %"class.base::RefCounted.1939" }
%"class.base::RefCounted.1939" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1940" = type { %"class.WTF::VectorBuffer.1941" }
%"class.WTF::VectorBuffer.1941" = type { %"class.WTF::VectorBufferBase.1942" }
%"class.WTF::VectorBufferBase.1942" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1943 }
%union.anon.1943 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1792 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1793", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1793" = type { %"class.base::RefCounted.1794" }
%"class.base::RefCounted.1794" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.WTF::Vector.1798"* }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800" }
%"class.WTF::VectorBufferBase.1800" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1801 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1801 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1807 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1646", %class.scoped_refptr.1808, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1809, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1679, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1810", %"class.absl::optional.1826" }
%"class.absl::optional.1646" = type { %"class.absl::optional_internal::optional_data.1647" }
%"class.absl::optional_internal::optional_data.1647" = type { %"class.absl::optional_internal::optional_data_base.1648" }
%"class.absl::optional_internal::optional_data_base.1648" = type { %"class.absl::optional_internal::optional_data_dtor_base.1649" }
%"class.absl::optional_internal::optional_data_dtor_base.1649" = type { i8, %union.anon.1650 }
%union.anon.1650 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1808 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1879", [4 x i8], %union.anon.1881, %class.scoped_refptr.1808, i32, [4 x i8] }>
%"class.WTF::RefCounted.1879" = type { %"class.base::RefCounted.1880" }
%"class.base::RefCounted.1880" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1881 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%union.anon.1809 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1810" = type { %"class.std::__1::__compressed_pair.1811" }
%"class.std::__1::__compressed_pair.1811" = type { %"struct.std::__1::__compressed_pair_elem.1812" }
%"struct.std::__1::__compressed_pair_elem.1812" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1813", %"class.WTF::Vector.1818", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1813" = type { %"class.WTF::VectorBuffer.1814" }
%"class.WTF::VectorBuffer.1814" = type { %"class.WTF::VectorBufferBase.1815" }
%"class.WTF::VectorBufferBase.1815" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1818" = type { %"class.WTF::VectorBuffer.1819" }
%"class.WTF::VectorBuffer.1819" = type { %"class.WTF::VectorBufferBase.1820" }
%"class.WTF::VectorBufferBase.1820" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1826" = type { %"class.absl::optional_internal::optional_data.1827" }
%"class.absl::optional_internal::optional_data.1827" = type { %"class.absl::optional_internal::optional_data_base.1828" }
%"class.absl::optional_internal::optional_data_base.1828" = type { %"class.absl::optional_internal::optional_data_dtor_base.1829" }
%"class.absl::optional_internal::optional_data_dtor_base.1829" = type { i8, %union.anon.1830 }
%union.anon.1830 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.blink::FlexLayoutAlgorithm" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::ComputedStyle"*, %"class.blink::LayoutUnit", %"class.WTF::Vector.1631", %"class.WTF::Vector.1636", i64 }
%"class.WTF::Vector.1631" = type { %"class.WTF::VectorBuffer.1632" }
%"class.WTF::VectorBuffer.1632" = type { %"class.WTF::VectorBufferBase.1633", [1152 x i8] }
%"class.WTF::VectorBufferBase.1633" = type { %"class.blink::FlexItem"*, i32, i32 }
%"class.WTF::Vector.1636" = type { %"class.WTF::VectorBuffer.1637" }
%"class.WTF::VectorBuffer.1637" = type { %"class.WTF::VectorBufferBase.1638" }
%"class.WTF::VectorBufferBase.1638" = type { %"class.blink::FlexLine"*, i32, i32 }
%"class.blink::FlexLine" = type { %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexItemVectorView", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", double, double, double, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FlexItemVectorView" = type { %"class.WTF::Vector.1631"*, i32, i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1641, %"class.WTF::Vector.1831", %"class.std::__1::unique_ptr.1836", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1857, %"class.blink::Persistent.1858" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833", [8 x i8] }
%"class.WTF::VectorBufferBase.1833" = type { %class.scoped_refptr.1641*, i32, i32 }
%"class.std::__1::unique_ptr.1836" = type { %"class.std::__1::__compressed_pair.1837" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1839", %"class.absl::optional.1844", %"class.absl::optional.1849" }
%"class.absl::optional.1839" = type { %"class.absl::optional_internal::optional_data.1840" }
%"class.absl::optional_internal::optional_data.1840" = type { %"class.absl::optional_internal::optional_data_base.1841" }
%"class.absl::optional_internal::optional_data_base.1841" = type { %"class.absl::optional_internal::optional_data_dtor_base.1842" }
%"class.absl::optional_internal::optional_data_dtor_base.1842" = type { i8, %union.anon.1843 }
%union.anon.1843 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1844" = type { %"class.absl::optional_internal::optional_data.1845" }
%"class.absl::optional_internal::optional_data.1845" = type { %"class.absl::optional_internal::optional_data_base.1846" }
%"class.absl::optional_internal::optional_data_base.1846" = type { %"class.absl::optional_internal::optional_data_dtor_base.1847" }
%"class.absl::optional_internal::optional_data_dtor_base.1847" = type { i8, [3 x i8], %union.anon.1848 }
%union.anon.1848 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1849" = type { %"class.absl::optional_internal::optional_data.1850" }
%"class.absl::optional_internal::optional_data.1850" = type { %"class.absl::optional_internal::optional_data_base.1851" }
%"class.absl::optional_internal::optional_data_base.1851" = type { %"class.absl::optional_internal::optional_data_dtor_base.1852" }
%"class.absl::optional_internal::optional_data_dtor_base.1852" = type { i8, %union.anon.1853 }
%union.anon.1853 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1857 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1858" = type { %"class.blink::PersistentBase.1859" }
%"class.blink::PersistentBase.1859" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1862", %"struct.blink::PhysicalRect", %"class.blink::Member.1872" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1862" = type { %"class.std::__1::__compressed_pair.1863" }
%"class.std::__1::__compressed_pair.1863" = type { %"struct.std::__1::__compressed_pair_elem.1864" }
%"struct.std::__1::__compressed_pair_elem.1864" = type { %"class.WTF::HashSet.1865"* }
%"class.WTF::HashSet.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1872" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1932" }
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934" }
%"class.WTF::VectorBufferBase.1934" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1651", %"class.absl::optional.1651", %"class.absl::optional.1651" }
%"class.absl::optional.1651" = type { %"class.absl::optional_internal::optional_data.1652" }
%"class.absl::optional_internal::optional_data.1652" = type { %"class.absl::optional_internal::optional_data_base.1653" }
%"class.absl::optional_internal::optional_data_base.1653" = type { %"class.absl::optional_internal::optional_data_dtor_base.1654" }
%"class.absl::optional_internal::optional_data_dtor_base.1654" = type { i8, %union.anon.1655 }
%union.anon.1655 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1947" }
%"class.WTF::VectorBuffer.1947" = type { %"class.WTF::VectorBufferBase.1948", [32 x i8] }
%"class.WTF::VectorBufferBase.1948" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.1882 }
%union.anon.1882 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutFlexibleBox" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.WTF::HashMap.1883", %"class.WTF::HashSet.1888", %"class.blink::OrderIterator", i32, i32, i8, [7 x i8] }>
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.WTF::HashMap.1883" = type { %"class.WTF::HashTable.1884" }
%"class.WTF::HashTable.1884" = type <{ %"struct.WTF::KeyValuePair.1887"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1887" = type opaque
%"class.WTF::HashSet.1888" = type { %"class.WTF::HashTable.1889" }
%"class.WTF::HashTable.1889" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1892", %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.WTF::Vector.1900" = type { %"class.WTF::VectorBuffer.1901" }
%"class.WTF::VectorBuffer.1901" = type { %"class.WTF::VectorBufferBase.1902", [64 x i8] }
%"class.WTF::VectorBufferBase.1902" = type { %"class.blink::FlexItem"**, i32, i32 }
%"class.WTF::Vector.1905" = type { %"class.WTF::VectorBuffer.1906" }
%"class.WTF::VectorBuffer.1906" = type { %"class.WTF::VectorBufferBase.1907" }
%"class.WTF::VectorBufferBase.1907" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8FlexItemEEEmm = comdat any

$_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexLineEEEmm = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior = internal global %"class.blink::StyleContentAlignmentData" zeroinitializer, align 4
@_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior = internal global i64 0, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink8FlexItemEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FlexItem *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FlexLineEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FlexLine]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutUnit]\00", align 1
@switch.table._ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE = private unnamed_addr constant [4 x i32] [i32 3, i32 6, i32 6, i32 7], align 4

@_ZN5blink8FlexItemC1EPKNS_19FlexLayoutAlgorithmEPNS_9LayoutBoxERKNS_13ComputedStyleENS_10LayoutUnitENS_11MinMaxSizesEN4absl8optionalISA_EES9_S9_NS_18NGPhysicalBoxStrutENS_10NGBoxStrutEb = hidden unnamed_addr alias void (%"class.blink::FlexItem"*, %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"*, i32, i64, %"class.absl::optional.1874"*, i32, i32, %"struct.blink::NGPhysicalBoxStrut"*, %"struct.blink::NGBoxStrut"*, i1), void (%"class.blink::FlexItem"*, %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"*, i32, i64, %"class.absl::optional.1874"*, i32, i32, %"struct.blink::NGPhysicalBoxStrut"*, %"struct.blink::NGBoxStrut"*, i1)* @_ZN5blink8FlexItemC2EPKNS_19FlexLayoutAlgorithmEPNS_9LayoutBoxERKNS_13ComputedStyleENS_10LayoutUnitENS_11MinMaxSizesEN4absl8optionalISA_EES9_S9_NS_18NGPhysicalBoxStrutENS_10NGBoxStrutEb
@_ZN5blink19FlexLayoutAlgorithmC1EPKNS_13ComputedStyleENS_10LayoutUnitENS_11LogicalSizeEPNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::FlexLayoutAlgorithm"*, %"class.blink::ComputedStyle"*, i32, i64, %"class.blink::Document"*), void (%"class.blink::FlexLayoutAlgorithm"*, %"class.blink::ComputedStyle"*, i32, i64, %"class.blink::Document"*)* @_ZN5blink19FlexLayoutAlgorithmC2EPKNS_13ComputedStyleENS_10LayoutUnitENS_11LogicalSizeEPNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FlexItemC2EPKNS_19FlexLayoutAlgorithmEPNS_9LayoutBoxERKNS_13ComputedStyleENS_10LayoutUnitENS_11MinMaxSizesEN4absl8optionalISA_EES9_S9_NS_18NGPhysicalBoxStrutENS_10NGBoxStrutEb(%"class.blink::FlexItem"* nocapture, %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32, i64, %"class.absl::optional.1874"* nocapture readonly byval(%"class.absl::optional.1874") align 8, i32, i32, %"struct.blink::NGPhysicalBoxStrut"* nocapture readonly byval(%"struct.blink::NGPhysicalBoxStrut") align 8, %"struct.blink::NGBoxStrut"* nocapture readonly byval(%"struct.blink::NGBoxStrut") align 8, i1 zeroext) unnamed_addr #0 align 2 {
  %13 = trunc i64 %5 to i32
  %14 = lshr i64 %5, 32
  %15 = trunc i64 %14 to i32
  %16 = zext i1 %11 to i8
  %17 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  store %"class.blink::FlexLayoutAlgorithm"* %1, %"class.blink::FlexLayoutAlgorithm"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 1
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 2
  store %"class.blink::LayoutBox"* %2, %"class.blink::LayoutBox"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  store %"class.blink::ComputedStyle"* %3, %"class.blink::ComputedStyle"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 4, i32 0
  store i32 %4, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 %13, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 5, i32 1, i32 0
  store i32 %15, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional.1874", %"class.absl::optional.1874"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 8 %25, i64 12, i1 false)
  %26 = icmp slt i32 %15, %4
  %27 = select i1 %26, i32 %15, i32 %4
  %28 = icmp sgt i32 %27, %13
  %29 = select i1 %28, i32 %27, i32 %13
  %30 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 7, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 8, i32 0
  store i32 %7, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 9, i32 0
  store i32 %8, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10
  %34 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %33 to i8*
  %35 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 8 %35, i64 16, i1 false)
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 11
  %37 = bitcast %"struct.blink::NGBoxStrut"* %36 to i8*
  %38 = bitcast %"struct.blink::NGBoxStrut"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 8 %38, i64 16, i1 false)
  %39 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 12, i32 0
  %40 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 15
  %41 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 16, i1 false)
  store i8 %16, i8* %40, align 4
  %42 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 16
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 17
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 19, i32 0, i32 0
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 19, i32 0, i32 1
  %46 = load i8, i8* %45, align 8
  %47 = and i8 %46, -2
  store i8 %47, i8* %45, align 8
  %48 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 20, i32 0
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %48, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8FlexItem20MainAxisIsInlineAxisEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  br label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %27 = load i16, i16* %26, align 4
  %28 = lshr i16 %27, 5
  %29 = and i16 %28, 2
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 3
  br label %32

32:                                               ; preds = %18, %25
  %33 = phi i1 [ %24, %18 ], [ %31, %25 ]
  %34 = xor i1 %10, %33
  %35 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = and i160 %39, 15211807202738752817960438464512
  %41 = icmp ne i160 %40, 0
  %42 = xor i1 %34, %41
  ret i1 %42
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm16IsHorizontalFlowEv(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = lshr i160 %6, 32
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 30
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 15
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %14, align 8
  br i1 %13, label %16, label %23

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 13
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 8
  %22 = icmp slt i24 %21, 0
  br label %30

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 12
  %25 = load i16, i16* %24, align 4
  %26 = lshr i16 %25, 5
  %27 = and i16 %26, 2
  %28 = or i16 %27, 1
  %29 = icmp eq i16 %28, 3
  br label %30

30:                                               ; preds = %16, %23
  %31 = phi i1 [ %22, %16 ], [ %29, %23 ]
  %32 = xor i1 %8, %31
  ret i1 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem20FlowAwareMarginStartEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %26

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  %25 = xor i1 %10, %24
  br i1 %24, label %34, label %38

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  %33 = xor i1 %10, %32
  br i1 %32, label %34, label %41

34:                                               ; preds = %26, %18
  %35 = phi i1 [ %33, %26 ], [ %25, %18 ]
  %36 = and i160 %8, 5070602400912917605986812821504
  %37 = icmp eq i160 %36, 0
  br label %50

38:                                               ; preds = %18
  %39 = and i160 %8, 324518553658426726783156020576256
  %40 = icmp ne i160 %39, 0
  br label %44

41:                                               ; preds = %26
  %42 = and i16 %28, 96
  %43 = icmp eq i16 %42, 32
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi i1 [ %33, %41 ], [ %25, %38 ]
  %46 = phi i1 [ %43, %41 ], [ %40, %38 ]
  %47 = and i160 %8, 41538374868278621028243970633760768
  %48 = icmp eq i160 %47, 0
  %49 = xor i1 %48, %46
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i1 [ %35, %34 ], [ %45, %44 ]
  %52 = phi i1 [ %37, %34 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3
  %54 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1
  %55 = select i1 %52, %"class.blink::LayoutUnit"* %53, %"class.blink::LayoutUnit"* %54
  %56 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0
  %57 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2
  %58 = select i1 %52, %"class.blink::LayoutUnit"* %56, %"class.blink::LayoutUnit"* %57
  %59 = select i1 %51, %"class.blink::LayoutUnit"* %55, %"class.blink::LayoutUnit"* %58
  %60 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  ret i32 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm17IsLeftToRightFlowEv(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = lshr i160 %6, 32
  %8 = trunc i160 %7 to i32
  %9 = and i32 %8, 30
  %10 = or i32 %9, 1
  %11 = icmp eq i32 %10, 15
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  br i1 %11, label %14, label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 13
  %18 = bitcast [3 x i8]* %17 to i24*
  %19 = load i24, i24* %18, align 8
  %20 = icmp slt i24 %19, 0
  br i1 %20, label %28, label %31

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 12
  %23 = load i16, i16* %22, align 4
  %24 = lshr i16 %23, 5
  %25 = and i16 %24, 2
  %26 = or i16 %25, 1
  %27 = icmp eq i16 %26, 3
  br i1 %27, label %28, label %34

28:                                               ; preds = %14, %21
  %29 = and i160 %6, 5070602400912917605986812821504
  %30 = icmp eq i160 %29, 0
  ret i1 %30

31:                                               ; preds = %14
  %32 = and i160 %6, 324518553658426726783156020576256
  %33 = icmp ne i160 %32, 0
  br label %37

34:                                               ; preds = %21
  %35 = and i16 %23, 96
  %36 = icmp eq i16 %35, 32
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi i1 [ %36, %34 ], [ %33, %31 ]
  %39 = and i160 %6, 41538374868278621028243970633760768
  %40 = icmp eq i160 %39, 0
  %41 = xor i1 %40, %38
  ret i1 %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem18FlowAwareMarginEndEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %26

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  %25 = xor i1 %10, %24
  br i1 %24, label %34, label %38

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  %33 = xor i1 %10, %32
  br i1 %32, label %34, label %41

34:                                               ; preds = %26, %18
  %35 = phi i1 [ %33, %26 ], [ %25, %18 ]
  %36 = and i160 %8, 5070602400912917605986812821504
  %37 = icmp eq i160 %36, 0
  br label %50

38:                                               ; preds = %18
  %39 = and i160 %8, 324518553658426726783156020576256
  %40 = icmp ne i160 %39, 0
  br label %44

41:                                               ; preds = %26
  %42 = and i16 %28, 96
  %43 = icmp eq i16 %42, 32
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi i1 [ %33, %41 ], [ %25, %38 ]
  %46 = phi i1 [ %43, %41 ], [ %40, %38 ]
  %47 = and i160 %8, 41538374868278621028243970633760768
  %48 = icmp eq i160 %47, 0
  %49 = xor i1 %48, %46
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i1 [ %35, %34 ], [ %45, %44 ]
  %52 = phi i1 [ %37, %34 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1
  %54 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3
  %55 = select i1 %52, %"class.blink::LayoutUnit"* %53, %"class.blink::LayoutUnit"* %54
  %56 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2
  %57 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0
  %58 = select i1 %52, %"class.blink::LayoutUnit"* %56, %"class.blink::LayoutUnit"* %57
  %59 = select i1 %51, %"class.blink::LayoutUnit"* %55, %"class.blink::LayoutUnit"* %58
  %60 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  ret i32 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem21FlowAwareMarginBeforeEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 102
  %10 = trunc i160 %9 to i8
  %11 = and i8 %10, 3
  %12 = lshr i160 %8, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br i1 %25, label %33, label %40

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br i1 %32, label %33, label %40

33:                                               ; preds = %26, %19
  switch i8 %11, label %42 [
    i8 0, label %34
    i8 2, label %37
    i8 1, label %37
  ]

34:                                               ; preds = %33
  %35 = and i160 %8, 41538374868278621028243970633760768
  %36 = icmp eq i160 %35, 0
  br i1 %36, label %46, label %48

37:                                               ; preds = %33, %33
  %38 = and i160 %8, 41538374868278621028243970633760768
  %39 = icmp eq i160 %38, 0
  br i1 %39, label %42, label %44

40:                                               ; preds = %19, %26
  %41 = zext i8 %11 to i32
  switch i32 %41, label %50 [
    i32 0, label %42
    i32 3, label %44
    i32 2, label %46
    i32 1, label %48
  ]

42:                                               ; preds = %37, %33, %40
  %43 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  br label %51

44:                                               ; preds = %37, %40
  %45 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  br label %51

46:                                               ; preds = %34, %40
  %47 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  br label %51

48:                                               ; preds = %34, %40
  %49 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  br label %51

50:                                               ; preds = %40
  unreachable

51:                                               ; preds = %48, %46, %44, %42
  %52 = phi i32* [ %49, %48 ], [ %47, %46 ], [ %45, %44 ], [ %43, %42 ]
  %53 = load i32, i32* %52, align 4
  ret i32 %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19FlexLayoutAlgorithm25GetTransformedWritingModeEv(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = lshr i160 %6, 102
  %8 = trunc i160 %7 to i8
  %9 = and i8 %8, 3
  %10 = lshr i160 %6, 32
  %11 = trunc i160 %10 to i32
  %12 = and i32 %11, 30
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 15
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  br i1 %14, label %17, label %24

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 13
  %21 = bitcast [3 x i8]* %20 to i24*
  %22 = load i24, i24* %21, align 8
  %23 = icmp slt i24 %22, 0
  br i1 %23, label %33, label %31

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 12
  %26 = load i16, i16* %25, align 4
  %27 = lshr i16 %26, 5
  %28 = and i16 %27, 2
  %29 = or i16 %28, 1
  %30 = icmp eq i16 %29, 3
  br i1 %30, label %33, label %31

31:                                               ; preds = %24, %17
  %32 = zext i8 %9 to i32
  br label %42

33:                                               ; preds = %24, %17
  switch i8 %9, label %42 [
    i8 0, label %34
    i8 2, label %38
    i8 1, label %38
  ]

34:                                               ; preds = %33
  %35 = and i160 %6, 41538374868278621028243970633760768
  %36 = icmp eq i160 %35, 0
  %37 = select i1 %36, i32 2, i32 1
  br label %42

38:                                               ; preds = %33, %33
  %39 = and i160 %6, 41538374868278621028243970633760768
  %40 = icmp eq i160 %39, 0
  %41 = select i1 %40, i32 0, i32 3
  br label %42

42:                                               ; preds = %31, %33, %34, %38
  %43 = phi i32 [ %41, %38 ], [ %37, %34 ], [ %32, %31 ], [ 0, %33 ]
  ret i32 %43
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem20MainAxisMarginExtentEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  br label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %27 = load i16, i16* %26, align 4
  %28 = lshr i16 %27, 5
  %29 = and i16 %28, 2
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 3
  br label %32

32:                                               ; preds = %18, %25
  %33 = phi i1 [ %24, %18 ], [ %31, %25 ]
  %34 = xor i1 %10, %33
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %39) #14
  br label %51

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %47) #14
  br label %51

51:                                               ; preds = %43, %35
  %52 = phi { i32, i1 } [ %50, %43 ], [ %42, %35 ]
  %53 = phi i32 [ %49, %43 ], [ %41, %35 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  ret i32 %56
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem21CrossAxisMarginExtentEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  br label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %27 = load i16, i16* %26, align 4
  %28 = lshr i16 %27, 5
  %29 = and i16 %28, 2
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 3
  br label %32

32:                                               ; preds = %18, %25
  %33 = phi i1 [ %24, %18 ], [ %31, %25 ]
  %34 = xor i1 %10, %33
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %39) #14
  br label %51

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %47) #14
  br label %51

51:                                               ; preds = %43, %35
  %52 = phi { i32, i1 } [ %50, %43 ], [ %42, %35 ]
  %53 = phi i32 [ %49, %43 ], [ %41, %35 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem15MarginBoxAscentEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 2
  %3 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutBox"* %3, null
  br i1 %4, label %72, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutBox"* %3 to i32 (%"class.blink::LayoutBox"*)***
  %7 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %7, i64 180
  %9 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBox"* nonnull %3) #14
  %11 = icmp eq i32 %10, -64
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 13, i32 0
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %12, %5
  %16 = phi i32 [ %14, %12 ], [ %10, %5 ]
  %17 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %18 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %18, i64 0, i32 2
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 102
  %25 = trunc i160 %24 to i8
  %26 = and i8 %25, 3
  %27 = lshr i160 %23, 32
  %28 = trunc i160 %27 to i32
  %29 = and i32 %28, 30
  %30 = or i32 %29, 1
  %31 = icmp eq i32 %30, 15
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %32, align 8
  br i1 %31, label %34, label %41

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %36, i64 0, i32 13
  %38 = bitcast [3 x i8]* %37 to i24*
  %39 = load i24, i24* %38, align 8
  %40 = icmp slt i24 %39, 0
  br i1 %40, label %48, label %55

41:                                               ; preds = %15
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 12
  %43 = load i16, i16* %42, align 4
  %44 = lshr i16 %43, 5
  %45 = and i16 %44, 2
  %46 = or i16 %45, 1
  %47 = icmp eq i16 %46, 3
  br i1 %47, label %48, label %55

48:                                               ; preds = %41, %34
  switch i8 %26, label %57 [
    i8 0, label %49
    i8 2, label %52
    i8 1, label %52
  ]

49:                                               ; preds = %48
  %50 = and i160 %23, 41538374868278621028243970633760768
  %51 = icmp eq i160 %50, 0
  br i1 %51, label %61, label %63

52:                                               ; preds = %48, %48
  %53 = and i160 %23, 41538374868278621028243970633760768
  %54 = icmp eq i160 %53, 0
  br i1 %54, label %57, label %59

55:                                               ; preds = %41, %34
  %56 = zext i8 %26 to i32
  switch i32 %56, label %65 [
    i32 0, label %57
    i32 3, label %59
    i32 2, label %61
    i32 1, label %63
  ]

57:                                               ; preds = %55, %52, %48
  %58 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  br label %66

59:                                               ; preds = %55, %52
  %60 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  br label %66

61:                                               ; preds = %55, %49
  %62 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  br label %66

63:                                               ; preds = %55, %49
  %64 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  br label %66

65:                                               ; preds = %55
  unreachable

66:                                               ; preds = %57, %59, %61, %63
  %67 = phi i32* [ %64, %63 ], [ %62, %61 ], [ %60, %59 ], [ %58, %57 ]
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %68) #14
  br label %203

72:                                               ; preds = %1
  %73 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %74 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %74, i64 0, i32 2
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 9
  %78 = bitcast [20 x i8]* %77 to i160*
  %79 = load i160, i160* %78, align 8
  %80 = lshr i160 %79, 102
  %81 = trunc i160 %80 to i8
  %82 = and i8 %81, 3
  %83 = lshr i160 %79, 32
  %84 = trunc i160 %83 to i32
  %85 = and i32 %84, 30
  %86 = or i32 %85, 1
  %87 = icmp eq i32 %86, 15
  %88 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %88, align 8
  br i1 %87, label %90, label %97

90:                                               ; preds = %72
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %89, i64 0, i32 2, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %92, i64 0, i32 13
  %94 = bitcast [3 x i8]* %93 to i24*
  %95 = load i24, i24* %94, align 8
  %96 = icmp slt i24 %95, 0
  br i1 %96, label %104, label %111

97:                                               ; preds = %72
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %89, i64 0, i32 12
  %99 = load i16, i16* %98, align 4
  %100 = lshr i16 %99, 5
  %101 = and i16 %100, 2
  %102 = or i16 %101, 1
  %103 = icmp eq i16 %102, 3
  br i1 %103, label %104, label %111

104:                                              ; preds = %97, %90
  switch i8 %82, label %113 [
    i8 0, label %105
    i8 2, label %108
    i8 1, label %108
  ]

105:                                              ; preds = %104
  %106 = and i160 %79, 41538374868278621028243970633760768
  %107 = icmp eq i160 %106, 0
  br i1 %107, label %117, label %119

108:                                              ; preds = %104, %104
  %109 = and i160 %79, 41538374868278621028243970633760768
  %110 = icmp eq i160 %109, 0
  br i1 %110, label %113, label %115

111:                                              ; preds = %97, %90
  %112 = zext i8 %82 to i32
  switch i32 %112, label %121 [
    i32 0, label %113
    i32 3, label %115
    i32 2, label %117
    i32 1, label %119
  ]

113:                                              ; preds = %111, %108, %104
  %114 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  br label %122

115:                                              ; preds = %111, %108
  %116 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  br label %122

117:                                              ; preds = %111, %105
  %118 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  br label %122

119:                                              ; preds = %111, %105
  %120 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  br label %122

121:                                              ; preds = %111
  unreachable

122:                                              ; preds = %113, %115, %117, %119
  %123 = phi i32* [ %120, %119 ], [ %118, %117 ], [ %116, %115 ], [ %114, %113 ]
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 20, i32 0
  %126 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %126, i64 0, i32 3, i32 0
  %128 = bitcast %"class.blink::NGPhysicalFragment"** %127 to %"class.blink::NGPhysicalBoxFragment"**
  %129 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 0, i32 1
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 0, i32 3
  %133 = bitcast i24* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = lshr i32 %134, 10
  %136 = and i32 %135, 3
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %122
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %131, i64 0, i32 5, i32 0
  %140 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %139, align 8
  br label %143

141:                                              ; preds = %122
  %142 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %131, i32 %136) #14
  br label %143

143:                                              ; preds = %141, %138
  %144 = phi %"class.blink::ComputedStyle"* [ %140, %138 ], [ %142, %141 ]
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %144, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8
  %148 = lshr i160 %147, 102
  %149 = trunc i160 %148 to i8
  %150 = and i8 %149, 3
  %151 = icmp eq i8 %82, %150
  br i1 %151, label %152, label %174

152:                                              ; preds = %143
  %153 = load i32, i32* %133, align 8
  %154 = and i32 %153, 8388608
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %162, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 4, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  %160 = shl nuw i64 %159, 32
  %161 = or i64 %160, 1
  br label %174

162:                                              ; preds = %152
  %163 = and i32 %153, 4194304
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 3, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  %169 = shl nuw i64 %168, 32
  br label %170

170:                                              ; preds = %165, %162
  %171 = phi i64 [ %169, %165 ], [ 0, %162 ]
  %172 = phi i64 [ 1, %165 ], [ 0, %162 ]
  %173 = or i64 %172, %171
  br label %174

174:                                              ; preds = %170, %156, %143
  %175 = phi i64 [ %160, %156 ], [ %171, %170 ], [ 0, %143 ]
  %176 = phi i64 [ %161, %156 ], [ %173, %170 ], [ 0, %143 ]
  %177 = or i64 %176, %175
  %178 = trunc i64 %177 to i8
  %179 = lshr i64 %175, 32
  %180 = trunc i64 %179 to i32
  %181 = icmp eq i8 %178, 0
  br i1 %181, label %182, label %198

182:                                              ; preds = %174
  %183 = icmp eq i8 %82, 0
  %184 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 0, i32 2, i32 1, i32 0
  %185 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %129, i64 0, i32 0, i32 2, i32 0, i32 0
  %186 = select i1 %183, i32* %184, i32* %185
  %187 = load i32, i32* %186, align 4
  br i1 %183, label %198, label %188

188:                                              ; preds = %182
  %189 = sdiv i32 %187, 2
  %190 = sext i32 %189 to i64
  %191 = tail call i1 @llvm.is.constant.i64(i64 %190) #14
  br i1 %191, label %198, label %192

192:                                              ; preds = %188
  %193 = icmp slt i32 %187, -1
  %194 = select i1 %193, i32 -2147483648, i32 2147483647
  %195 = add nsw i64 %190, 2147483648
  %196 = icmp ult i64 %195, 4294967296
  %197 = select i1 %196, i32 %189, i32 %194, !prof !2
  br label %198

198:                                              ; preds = %174, %182, %188, %192
  %199 = phi i32 [ %180, %174 ], [ %197, %192 ], [ %187, %182 ], [ %189, %188 ]
  %200 = icmp slt i32 %199, 0
  %201 = select i1 %200, i32 -2147483648, i32 2147483647
  %202 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %199) #14
  br label %203

203:                                              ; preds = %198, %66
  %204 = phi { i32, i1 } [ %202, %198 ], [ %71, %66 ]
  %205 = phi i32 [ %201, %198 ], [ %70, %66 ]
  %206 = extractvalue { i32, i1 } %204, 1
  %207 = extractvalue { i32, i1 } %204, 0
  %208 = select i1 %206, i32 %205, i32 %207
  ret i32 %208
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem23AvailableAlignmentSpaceEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  br label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %27 = load i16, i16* %26, align 4
  %28 = lshr i16 %27, 5
  %29 = and i16 %28, 2
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 3
  br label %32

32:                                               ; preds = %25, %18
  %33 = phi i1 [ %24, %18 ], [ %31, %25 ]
  %34 = xor i1 %10, %33
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %39) #14
  br label %51

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %47) #14
  br label %51

51:                                               ; preds = %35, %43
  %52 = phi { i32, i1 } [ %42, %35 ], [ %50, %43 ]
  %53 = phi i32 [ %41, %35 ], [ %49, %43 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 13, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %58) #14
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  %65 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 5
  %66 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZNK3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1636"* %65, i32 %67) #14
  %69 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %68, i64 0, i32 14, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %64, -1
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 %64) #14
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  ret i32 %76
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8FlexItem25HasAutoMarginsInCrossAxisEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = lshr i160 %8, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  br label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %27 = load i16, i16* %26, align 4
  %28 = lshr i16 %27, 5
  %29 = and i16 %28, 2
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 3
  br label %32

32:                                               ; preds = %18, %25
  %33 = phi i1 [ %24, %18 ], [ %31, %25 ]
  %34 = xor i1 %10, %33
  %35 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  %36 = bitcast %"class.blink::ComputedStyle"** %35 to %"class.blink::ComputedStyleBase"**
  %37 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %37, i64 0, i32 7, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %38, align 8
  br i1 %34, label %40, label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 12, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 9, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br label %56

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 10, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 11, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br label %56

56:                                               ; preds = %48, %52, %40, %44
  %57 = phi i1 [ true, %40 ], [ %47, %44 ], [ true, %48 ], [ %55, %52 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8FlexItem9AlignmentEv(%"class.blink::FlexItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %3 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %3, i64 0, i32 2
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %5, %"class.blink::ComputedStyle"* dereferenceable(104) %7)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %4 = bitcast [20 x i8]* %3 to i160*
  %5 = load i160, i160* %4, align 8
  %6 = lshr i160 %5, 32
  %7 = trunc i160 %6 to i32
  %8 = and i32 %7, 30
  %9 = or i32 %8, 1
  %10 = icmp eq i32 %9, 15
  br i1 %10, label %11, label %26

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %15, i64 0, i32 13
  %17 = bitcast [3 x i8]* %16 to i24*
  %18 = load i24, i24* %17, align 8
  %19 = lshr i24 %18, 11
  %20 = and i24 %19, 7
  %21 = zext i24 %20 to i32
  switch i32 %21, label %25 [
    i32 0, label %40
    i32 1, label %72
    i32 2, label %22
    i32 3, label %23
    i32 4, label %24
  ]

22:                                               ; preds = %11
  br label %72

23:                                               ; preds = %11
  br label %72

24:                                               ; preds = %11
  br label %72

25:                                               ; preds = %11
  unreachable

26:                                               ; preds = %2
  %27 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %1, i32 3, %"class.blink::ComputedStyle"* %0) #14
  %28 = and i32 %27, 15
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  br label %72

33:                                               ; preds = %26
  %34 = load i160, i160* %4, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %35, align 8
  %37 = lshr i160 %34, 32
  %38 = trunc i160 %37 to i32
  %39 = and i32 %38, 30
  br label %40

40:                                               ; preds = %33, %11
  %41 = phi i32 [ %39, %33 ], [ %8, %11 ]
  %42 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %36, %33 ], [ %13, %11 ]
  %43 = phi i160 [ %34, %33 ], [ %5, %11 ]
  %44 = and i160 %43, 15211807202738752817960438464512
  %45 = icmp eq i160 %44, 0
  %46 = or i32 %41, 1
  %47 = icmp eq i32 %46, 15
  br i1 %47, label %48, label %55

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %42, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %50, i64 0, i32 13
  %52 = bitcast [3 x i8]* %51 to i24*
  %53 = load i24, i24* %52, align 8
  %54 = icmp slt i24 %53, 0
  br label %62

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %42, i64 0, i32 12
  %57 = load i16, i16* %56, align 4
  %58 = lshr i16 %57, 5
  %59 = and i16 %58, 2
  %60 = or i16 %59, 1
  %61 = icmp eq i16 %60, 3
  br label %62

62:                                               ; preds = %48, %55
  %63 = phi i1 [ %54, %48 ], [ %61, %55 ]
  %64 = xor i1 %45, %63
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 0
  %70 = xor i1 %64, %69
  %71 = select i1 %70, i32 11, i32 4
  br label %72

72:                                               ; preds = %30, %11, %22, %23, %24, %62
  %73 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %32, %30 ], [ %42, %62 ], [ %13, %22 ], [ %13, %23 ], [ %13, %24 ], [ %13, %11 ]
  %74 = phi i32 [ %28, %30 ], [ %71, %62 ], [ 3, %22 ], [ 11, %23 ], [ 12, %24 ], [ 6, %11 ]
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %73, i64 0, i32 12
  %76 = load i16, i16* %75, align 4
  %77 = and i16 %76, 384
  %78 = icmp eq i16 %77, 256
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  switch i32 %74, label %81 [
    i32 11, label %82
    i32 12, label %80
  ]

80:                                               ; preds = %79
  br label %82

81:                                               ; preds = %79
  br label %82

82:                                               ; preds = %79, %81, %80, %72
  %83 = phi i32 [ 11, %80 ], [ %74, %72 ], [ 12, %79 ], [ %74, %81 ]
  ret i32 %83
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8FlexItem27UpdateAutoMarginsInMainAxisENS_10LayoutUnitE(%"class.blink::FlexItem"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %4 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %4, i64 0, i32 2
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = lshr i160 %9, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br label %33

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i1 [ %25, %19 ], [ %32, %26 ]
  %35 = xor i1 %11, %34
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to %"class.blink::ComputedStyleBase"**
  %38 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 7, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %39, align 8
  br i1 %35, label %41, label %55

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 10, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  store i32 %1, i32* %46, align 4
  %47 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %39, align 8
  br label %48

48:                                               ; preds = %45, %41
  %49 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %47, %45 ], [ %40, %41 ]
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 11, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %69

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  store i32 %1, i32* %54, align 4
  br label %69

55:                                               ; preds = %33
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 12, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 %1, i32* %60, align 4
  %61 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %39, align 8
  br label %62

62:                                               ; preds = %59, %55
  %63 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %61, %59 ], [ %40, %55 ]
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %63, i64 0, i32 9, i32 2
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  store i32 %1, i32* %68, align 4
  br label %69

69:                                               ; preds = %62, %67, %48, %53
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8FlexItem28UpdateAutoMarginsInCrossAxisENS_10LayoutUnitE(%"class.blink::FlexItem"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %4 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %4, i64 0, i32 2
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = lshr i160 %9, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br label %33

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i1 [ %25, %19 ], [ %32, %26 ]
  %35 = xor i1 %11, %34
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to %"class.blink::ComputedStyleBase"**
  %38 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 7, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 12
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 9
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 10
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 11
  %45 = select i1 %35, %"class.blink::Length"* %41, %"class.blink::Length"* %43
  %46 = select i1 %35, %"class.blink::Length"* %42, %"class.blink::Length"* %44
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 0, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %105

50:                                               ; preds = %33
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %105

54:                                               ; preds = %50
  %55 = sdiv i32 %1, 2
  %56 = sext i32 %55 to i64
  %57 = tail call i1 @llvm.is.constant.i64(i64 %56) #14
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = icmp slt i32 %1, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = add nsw i64 %56, 2147483648
  %62 = icmp ult i64 %61, 4294967296
  %63 = select i1 %62, i32 %55, i32 %60, !prof !2
  br label %64

64:                                               ; preds = %54, %58
  %65 = phi i1 [ true, %54 ], [ false, %58 ]
  %66 = phi i32 [ %55, %54 ], [ %63, %58 ]
  %67 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 14, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %66, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %66) #14
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !3
  store i32 %74, i32* %67, align 4
  br i1 %65, label %81, label %75

75:                                               ; preds = %64
  %76 = icmp slt i32 %1, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = add nsw i64 %56, 2147483648
  %79 = icmp ult i64 %78, 4294967296
  %80 = select i1 %79, i32 %55, i32 %77, !prof !2
  br label %81

81:                                               ; preds = %64, %75
  %82 = phi i32 [ %80, %75 ], [ %55, %64 ]
  br i1 %35, label %83, label %94

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 %82, i32* %84, align 4
  br i1 %57, label %91, label %85

85:                                               ; preds = %83
  %86 = icmp slt i32 %1, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = add nsw i64 %56, 2147483648
  %89 = icmp ult i64 %88, 4294967296
  %90 = select i1 %89, i32 %55, i32 %87, !prof !2
  br label %91

91:                                               ; preds = %83, %85
  %92 = phi i32 [ %90, %85 ], [ %55, %83 ]
  %93 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  store i32 %92, i32* %93, align 4
  br label %183

94:                                               ; preds = %81
  %95 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  store i32 %82, i32* %95, align 4
  br i1 %57, label %102, label %96

96:                                               ; preds = %94
  %97 = icmp slt i32 %1, -1
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = add nsw i64 %56, 2147483648
  %100 = icmp ult i64 %99, 4294967296
  %101 = select i1 %100, i32 %55, i32 %98, !prof !2
  br label %102

102:                                              ; preds = %94, %96
  %103 = phi i32 [ %101, %96 ], [ %55, %94 ]
  %104 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  store i32 %103, i32* %104, align 4
  br label %183

105:                                              ; preds = %50, %33
  br i1 %16, label %106, label %121

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %108, i64 0, i32 13
  %110 = bitcast [3 x i8]* %109 to i24*
  %111 = load i24, i24* %110, align 8
  %112 = icmp slt i24 %111, 0
  br i1 %112, label %113, label %136

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = lshr i160 %116, 115
  %118 = trunc i160 %117 to i8
  %119 = and i8 %118, 1
  %120 = xor i8 %119, 1
  br label %143

121:                                              ; preds = %105
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %123 = load i16, i16* %122, align 4
  %124 = lshr i16 %123, 5
  %125 = and i16 %124, 2
  %126 = or i16 %125, 1
  %127 = icmp eq i16 %126, 3
  br i1 %127, label %128, label %136

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 9
  %130 = bitcast [20 x i8]* %129 to i160*
  %131 = load i160, i160* %130, align 8
  %132 = lshr i160 %131, 115
  %133 = trunc i160 %132 to i8
  %134 = and i8 %133, 1
  %135 = xor i8 %134, 1
  br label %143

136:                                              ; preds = %121, %106
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = and i160 %139, 15211807202738752817960438464512
  %141 = icmp ne i160 %140, 5070602400912917605986812821504
  %142 = zext i1 %141 to i8
  br label %143

143:                                              ; preds = %128, %113, %136
  %144 = phi i8 [ %142, %136 ], [ %120, %113 ], [ %135, %128 ]
  br i1 %49, label %145, label %162

145:                                              ; preds = %143
  %146 = and i8 %144, 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %157, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 14, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %1, 0
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %150, i32 %1) #14
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %152, i32 %155, !prof !3
  store i32 %156, i32* %149, align 4
  br label %157

157:                                              ; preds = %145, %148
  br i1 %35, label %158, label %160

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 %1, i32* %159, align 4
  br label %183

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  store i32 %1, i32* %161, align 4
  br label %183

162:                                              ; preds = %143
  %163 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 2
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %183

166:                                              ; preds = %162
  %167 = and i8 %144, 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %178

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 14, i32 1, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp slt i32 %1, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %1) #14
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !3
  store i32 %177, i32* %170, align 4
  br label %178

178:                                              ; preds = %166, %169
  br i1 %35, label %179, label %181

179:                                              ; preds = %178
  %180 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  store i32 %1, i32* %180, align 4
  br label %183

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  store i32 %1, i32* %182, align 4
  br label %183

183:                                              ; preds = %160, %158, %181, %179, %162, %91, %102
  %184 = phi i1 [ true, %102 ], [ true, %91 ], [ true, %160 ], [ true, %158 ], [ true, %181 ], [ true, %179 ], [ false, %162 ]
  ret i1 %184
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm12IsColumnFlowEv(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = lshr i160 %6, 32
  %8 = trunc i160 %7 to i32
  %9 = and i32 %8, 30
  %10 = or i32 %9, 1
  %11 = icmp eq i32 %10, 15
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  br i1 %11, label %14, label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 13
  %18 = bitcast [3 x i8]* %17 to i24*
  %19 = load i24, i24* %18, align 8
  %20 = icmp slt i24 %19, 0
  br label %28

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 12
  %23 = load i16, i16* %22, align 4
  %24 = lshr i16 %23, 5
  %25 = and i16 %24, 2
  %26 = or i16 %25, 1
  %27 = icmp eq i16 %26, 3
  br label %28

28:                                               ; preds = %14, %21
  %29 = phi i1 [ %20, %14 ], [ %27, %21 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FlexItem20ComputeStretchedSizeEv(%"class.blink::FlexItem"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 9
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 0
  %7 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %7, i64 0, i32 5
  %9 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZNK3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1636"* %8, i32 %10) #14
  %12 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %12, i64 0, i32 2
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  %20 = lshr i160 %17, 32
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 30
  %23 = or i32 %22, 1
  %24 = icmp eq i32 %23, 15
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %25, align 8
  br i1 %24, label %27, label %34

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %29, i64 0, i32 13
  %31 = bitcast [3 x i8]* %30 to i24*
  %32 = load i24, i24* %31, align 8
  %33 = icmp slt i24 %32, 0
  br label %41

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 12
  %36 = load i16, i16* %35, align 4
  %37 = lshr i16 %36, 5
  %38 = and i16 %37, 2
  %39 = or i16 %38, 1
  %40 = icmp eq i16 %39, 3
  br label %41

41:                                               ; preds = %34, %27
  %42 = phi i1 [ %33, %27 ], [ %40, %34 ]
  %43 = xor i1 %19, %42
  br i1 %43, label %44, label %52

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 2, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %48) #14
  br label %60

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 3, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 10, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %56) #14
  br label %60

60:                                               ; preds = %44, %52
  %61 = phi { i32, i1 } [ %51, %44 ], [ %59, %52 ]
  %62 = phi i32 [ %50, %44 ], [ %58, %52 ]
  %63 = extractvalue { i32, i1 } %61, 1
  %64 = extractvalue { i32, i1 } %61, 0
  %65 = select i1 %63, i32 %62, i32 %64
  %66 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %11, i64 0, i32 14, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %65, -1
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %67, i32 %65) #14
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !3
  store i32 %73, i32* %3, align 4
  %74 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, %73
  %77 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %78 = select i1 %76, %"class.blink::LayoutUnit"* %77, %"class.blink::LayoutUnit"* %4
  %79 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5)
  %81 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 2
  %82 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %81, align 8
  %83 = icmp eq %"class.blink::LayoutBox"* %82, null
  br i1 %24, label %84, label %91

84:                                               ; preds = %60
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %86, i64 0, i32 13
  %88 = bitcast [3 x i8]* %87 to i24*
  %89 = load i24, i24* %88, align 8
  %90 = icmp slt i24 %89, 0
  br label %98

91:                                               ; preds = %60
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 12
  %93 = load i16, i16* %92, align 4
  %94 = lshr i16 %93, 5
  %95 = and i16 %94, 2
  %96 = or i16 %95, 1
  %97 = icmp eq i16 %96, 3
  br label %98

98:                                               ; preds = %84, %91
  %99 = phi i1 [ %90, %84 ], [ %97, %91 ]
  %100 = xor i1 %19, %99
  %101 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 3
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = and i160 %105, 15211807202738752817960438464512
  %107 = icmp ne i160 %106, 0
  %108 = xor i1 %100, %107
  br i1 %83, label %165, label %109

109:                                              ; preds = %98
  br i1 %108, label %110, label %128

110:                                              ; preds = %109
  %111 = icmp eq i160 %106, 0
  %112 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 5, i32 0, i32 0
  %113 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %113, i64 0, i32 3
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %113, i64 0, i32 8
  %116 = select i1 %111, %"class.blink::Length"* %114, %"class.blink::Length"* %115
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %116, i64 0, i32 2
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %128

120:                                              ; preds = %110
  %121 = bitcast %"class.blink::LayoutBox"* %82 to i32 (%"class.blink::LayoutBox"*)***
  %122 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %121, align 8
  %123 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %122, i64 166
  %124 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %123, align 8
  %125 = tail call i32 %124(%"class.blink::LayoutBox"* nonnull %82) #14
  %126 = tail call i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* nonnull %82, i32 %80, i32 %125) #14
  %127 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 13, i32 0
  store i32 %126, i32* %127, align 8
  br label %229

128:                                              ; preds = %110, %109
  br i1 %24, label %129, label %136

129:                                              ; preds = %128
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %131, i64 0, i32 13
  %133 = bitcast [3 x i8]* %132 to i24*
  %134 = load i24, i24* %133, align 8
  %135 = icmp slt i24 %134, 0
  br label %143

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 12
  %138 = load i16, i16* %137, align 4
  %139 = lshr i16 %138, 5
  %140 = and i16 %139, 2
  %141 = or i16 %140, 1
  %142 = icmp eq i16 %141, 3
  br label %143

143:                                              ; preds = %129, %136
  %144 = phi i1 [ %135, %129 ], [ %142, %136 ]
  %145 = xor i1 %19, %144
  %146 = xor i1 %107, %145
  br i1 %146, label %229, label %147

147:                                              ; preds = %143
  %148 = icmp eq i160 %106, 0
  %149 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 5, i32 0, i32 0
  %150 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %150, i64 0, i32 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %150, i64 0, i32 3
  %153 = select i1 %148, %"class.blink::Length"* %151, %"class.blink::Length"* %152
  %154 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %153, i64 0, i32 2
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %229

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %82, i64 0, i32 0, i32 0, i32 7
  %159 = bitcast %"class.blink::LayoutObject"** %158 to %"class.blink::LayoutFlexibleBox"**
  %160 = load %"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutFlexibleBox"** %159, align 8
  %161 = tail call i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"* %160) #14
  %162 = bitcast %"class.blink::LayoutFlexibleBox"* %160 to %"class.blink::LayoutBlock"*
  %163 = tail call i32 @_ZNK5blink9LayoutBox29ConstrainLogicalWidthByMinMaxENS_10LayoutUnitES1_PKNS_11LayoutBlockEb(%"class.blink::LayoutBox"* nonnull %82, i32 %80, i32 %161, %"class.blink::LayoutBlock"* %162, i1 zeroext true) #14
  %164 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 13, i32 0
  store i32 %163, i32* %164, align 8
  br label %229

165:                                              ; preds = %98
  br i1 %108, label %166, label %176

166:                                              ; preds = %165
  %167 = icmp eq i160 %106, 0
  %168 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 5, i32 0, i32 0
  %169 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %169, i64 0, i32 3
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %169, i64 0, i32 8
  %172 = select i1 %167, %"class.blink::Length"* %170, %"class.blink::Length"* %171
  %173 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %172, i64 0, i32 2
  %174 = load i8, i8* %173, align 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %205, label %176

176:                                              ; preds = %166, %165
  br i1 %24, label %177, label %184

177:                                              ; preds = %176
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %179 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %179, i64 0, i32 13
  %181 = bitcast [3 x i8]* %180 to i24*
  %182 = load i24, i24* %181, align 8
  %183 = icmp slt i24 %182, 0
  br label %191

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 12
  %186 = load i16, i16* %185, align 4
  %187 = lshr i16 %186, 5
  %188 = and i16 %187, 2
  %189 = or i16 %188, 1
  %190 = icmp eq i16 %189, 3
  br label %191

191:                                              ; preds = %177, %184
  %192 = phi i1 [ %183, %177 ], [ %190, %184 ]
  %193 = xor i1 %19, %192
  %194 = xor i1 %107, %193
  br i1 %194, label %229, label %195

195:                                              ; preds = %191
  %196 = icmp eq i160 %106, 0
  %197 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 5, i32 0, i32 0
  %198 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %198, i64 0, i32 8
  %200 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %198, i64 0, i32 3
  %201 = select i1 %196, %"class.blink::Length"* %199, %"class.blink::Length"* %200
  %202 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %201, i64 0, i32 2
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %229

205:                                              ; preds = %195, %166
  %206 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %207 = load i8, i8* %206, align 4, !range !4
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %210, !prof !3

209:                                              ; preds = %205
  tail call void @llvm.trap() #14
  unreachable

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %212 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %212)
  store i32 %80, i32* %2, align 4
  %213 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %211, i64 0, i32 0
  %214 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %215 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %214, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = icmp slt i32 %216, %80
  %218 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %219 = select i1 %217, %"class.blink::LayoutUnit"* %214, %"class.blink::LayoutUnit"* %218
  %220 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %211, i64 0, i32 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %219, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp slt i32 %221, %223
  %225 = select i1 %224, %"class.blink::LayoutUnit"* %219, %"class.blink::LayoutUnit"* %213
  %226 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %212)
  %228 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %0, i64 0, i32 13, i32 0
  store i32 %227, i32* %228, align 8
  br label %229

229:                                              ; preds = %191, %195, %210, %120, %157, %147, %143
  ret void
}

declare i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #6

declare i32 @_ZNK5blink9LayoutBox29ConstrainLogicalWidthByMinMaxENS_10LayoutUnitES1_PKNS_11LayoutBlockEb(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBlock"*, i1 zeroext) local_unnamed_addr #6

declare i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #6

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink8FlexItem15AlignmentOffsetENS_10LayoutUnitENS_12ItemPositionES1_S1_bb(i32, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #7 align 2 {
  switch i32 %1, label %30 [
    i32 4, label %23
    i32 6, label %8
    i32 12, label %31
    i32 3, label %7
  ]

7:                                                ; preds = %6
  br i1 %4, label %31, label %30

8:                                                ; preds = %6
  %9 = sdiv i32 %0, 2
  %10 = sext i32 %9 to i64
  %11 = tail call i1 @llvm.is.constant.i64(i64 %10) #14
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = icmp slt i32 %0, -1
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = add nsw i64 %10, 2147483648
  %16 = icmp ult i64 %15, 4294967296
  %17 = select i1 %16, i32 %9, i32 %14, !prof !2
  br label %18

18:                                               ; preds = %8, %12
  %19 = phi i32 [ %17, %12 ], [ %9, %8 ]
  br i1 %5, label %20, label %31

20:                                               ; preds = %18
  %21 = icmp sgt i32 %19, 0
  %22 = select i1 %21, i32 %19, i32 0
  br label %31

23:                                               ; preds = %6
  %24 = icmp sgt i32 %2, -1
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %2) #14
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !3
  br label %31

30:                                               ; preds = %7, %6
  br label %31

31:                                               ; preds = %20, %18, %6, %7, %30, %23
  %32 = phi i32 [ 0, %30 ], [ %29, %23 ], [ %0, %7 ], [ %0, %6 ], [ %22, %20 ], [ %19, %18 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FlexLine16FreezeViolationsERN3WTF6VectorIPNS_8FlexItemELj8ENS1_18PartitionAllocatorEEE(%"class.blink::FlexLine"* nocapture, %"class.WTF::Vector.1900"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 0
  %9 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %9, i64 0, i32 2
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 6
  %18 = bitcast double* %3 to i8*
  %19 = bitcast double* %17 to i64*
  br label %21

20:                                               ; preds = %89, %2
  ret void

21:                                               ; preds = %7, %89
  %22 = phi i64 [ 0, %7 ], [ %111, %89 ]
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(8) %"class.blink::FlexItem"** @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1900"* %1, i32 %23) #14
  %25 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %25, i64 0, i32 3
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = tail call dereferenceable(8) %"class.blink::FlexItem"** @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1900"* %1, i32 %23) #14
  %29 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %29, i64 0, i32 12, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = tail call dereferenceable(8) %"class.blink::FlexItem"** @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1900"* %1, i32 %23) #14
  %33 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %33, i64 0, i32 4, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %35) #14
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !3
  %42 = load i32, i32* %12, align 4
  %43 = icmp sgt i32 %41, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %41) #14
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !3
  store i32 %48, i32* %12, align 4
  %49 = load i160, i160* %14, align 8
  %50 = lshr i160 %49, 32
  %51 = trunc i160 %50 to i32
  %52 = and i32 %51, 30
  %53 = or i32 %52, 1
  %54 = icmp eq i32 %53, 15
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %55, align 8
  br i1 %54, label %57, label %64

57:                                               ; preds = %21
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %59, i64 0, i32 6
  %61 = load float, float* %60, align 4
  %62 = fcmp ogt float %61, 0.000000e+00
  br i1 %62, label %63, label %67

63:                                               ; preds = %57
  br label %67

64:                                               ; preds = %21
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %56, i64 0, i32 8
  %66 = load float, float* %65, align 4
  br label %67

67:                                               ; preds = %57, %63, %64
  %68 = phi float [ %66, %64 ], [ %61, %63 ], [ 0.000000e+00, %57 ]
  %69 = fpext float %68 to double
  %70 = load double, double* %15, align 8
  %71 = fsub double %70, %69
  store double %71, double* %15, align 8
  %72 = load i160, i160* %14, align 8
  %73 = lshr i160 %72, 32
  %74 = trunc i160 %73 to i32
  %75 = and i32 %74, 30
  %76 = or i32 %75, 1
  %77 = icmp eq i32 %76, 15
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %55, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %79, align 8
  br i1 %77, label %81, label %86

81:                                               ; preds = %67
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %80, i64 0, i32 6
  %83 = load float, float* %82, align 4
  %84 = fcmp ogt float %83, 0.000000e+00
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  br label %89

86:                                               ; preds = %67
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %80, i64 0, i32 5
  %88 = load float, float* %87, align 8
  br label %89

89:                                               ; preds = %81, %85, %86
  %90 = phi float [ %88, %86 ], [ %83, %85 ], [ 0.000000e+00, %81 ]
  %91 = fpext float %90 to double
  %92 = load double, double* %16, align 8
  %93 = fsub double %92, %91
  store double %93, double* %16, align 8
  %94 = tail call dereferenceable(8) %"class.blink::FlexItem"** @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1900"* %1, i32 %23) #14
  %95 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %95, i64 0, i32 4, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sitofp i32 %97 to float
  %99 = fmul float %98, 1.562500e-02
  %100 = fmul float %90, %99
  %101 = fpext float %100 to double
  %102 = load double, double* %17, align 8
  %103 = fsub double %102, %101
  store double %103, double* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  store double 0.000000e+00, double* %3, align 8
  %104 = fcmp olt double %103, 0.000000e+00
  %105 = select i1 %104, double* %3, double* %17
  %106 = bitcast double* %105 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %108 = tail call dereferenceable(8) %"class.blink::FlexItem"** @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1900"* %1, i32 %23) #14
  %109 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %109, i64 0, i32 16
  store i8 1, i8* %110, align 1
  %111 = add nuw nsw i64 %22, 1
  %112 = load i32, i32* %4, align 4
  %113 = zext i32 %112 to i64
  %114 = icmp ult i64 %111, %113
  br i1 %114, label %21, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FlexLine21FreezeInflexibleItemsEv(%"class.blink::FlexLine"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.1900", align 8
  %3 = alloca %"class.blink::FlexItem"*, align 8
  %4 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 8, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sge i32 %5, %7
  %9 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %7, i32 %10) #14
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !3
  %17 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  store i32 %16, i32* %17, align 4
  %18 = bitcast %"class.WTF::Vector.1900"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 64, i1 false)
  %20 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0, i32 1, i64 0
  %21 = bitcast %"class.WTF::Vector.1900"* %2 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %39, label %29

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 0
  %31 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %31, i64 0, i32 2
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = bitcast %"class.blink::FlexItem"** %3 to i8*
  %38 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0, i32 0, i32 0
  br label %53

39:                                               ; preds = %119, %1
  call void @_ZN5blink8FlexLine16FreezeViolationsERN3WTF6VectorIPNS_8FlexItemELj8ENS1_18PartitionAllocatorEEE(%"class.blink::FlexLine"* %0, %"class.WTF::Vector.1900"* nonnull dereferenceable(80) %2)
  %40 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 9, i32 0
  %41 = load i32, i32* %17, align 4
  store i32 %41, i32* %40, align 8
  %42 = load i32, i32* %23, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %39
  store i32 0, i32* %23, align 4
  br label %45

45:                                               ; preds = %44, %39
  %46 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %46, align 8
  %48 = bitcast i8* %20 to %"class.blink::FlexItem"**
  %49 = icmp eq %"class.blink::FlexItem"** %47, %48
  br i1 %49, label %52, label %50, !prof !2

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %2, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1901"* nonnull %51, %"class.blink::FlexItem"** %47) #14
  br label %52

52:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %18) #14
  ret void

53:                                               ; preds = %29, %119
  %54 = phi i32 [ %27, %29 ], [ %122, %119 ]
  %55 = phi i64 [ 0, %29 ], [ %120, %119 ]
  %56 = trunc i64 %55 to i32
  %57 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %34, align 8
  %58 = add i32 %54, %56
  %59 = call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %57, i32 %58) #14
  %60 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %59, i64 0, i32 3
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %60, align 8
  %62 = load i160, i160* %36, align 8
  %63 = lshr i160 %62, 32
  %64 = trunc i160 %63 to i32
  %65 = and i32 %64, 30
  %66 = or i32 %65, 1
  %67 = icmp eq i32 %66, 15
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %68, align 8
  br i1 %8, label %80, label %70

70:                                               ; preds = %53
  br i1 %67, label %71, label %77

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %69, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %73, i64 0, i32 6
  %75 = load float, float* %74, align 4
  %76 = fcmp ogt float %75, 0.000000e+00
  br i1 %76, label %90, label %102

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %69, i64 0, i32 8
  %79 = load float, float* %78, align 4
  br label %90

80:                                               ; preds = %53
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %69, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %81, align 8
  br i1 %67, label %83, label %87

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %82, i64 0, i32 6
  %85 = load float, float* %84, align 4
  %86 = fcmp ogt float %85, 0.000000e+00
  br i1 %86, label %90, label %102

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %82, i64 0, i32 5
  %89 = load float, float* %88, align 8
  br label %90

90:                                               ; preds = %83, %71, %87, %77
  %91 = phi float [ %79, %77 ], [ %89, %87 ], [ %75, %71 ], [ %85, %83 ]
  %92 = fcmp oeq float %91, 0.000000e+00
  br i1 %92, label %102, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %59, i64 0, i32 4, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %59, i64 0, i32 7, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %8, label %100, label %98

98:                                               ; preds = %93
  %99 = icmp sgt i32 %95, %97
  br i1 %99, label %102, label %119

100:                                              ; preds = %93
  %101 = icmp slt i32 %95, %97
  br i1 %101, label %102, label %119

102:                                              ; preds = %83, %71, %100, %98, %90
  %103 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %59, i64 0, i32 7, i32 0
  %104 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %59, i64 0, i32 12, i32 0
  %105 = load i32, i32* %103, align 4
  store i32 %105, i32* %104, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  store %"class.blink::FlexItem"* %59, %"class.blink::FlexItem"** %3, align 8
  %106 = load i32, i32* %23, align 4
  %107 = load i32, i32* %22, align 8
  %108 = icmp eq i32 %106, %107
  br i1 %108, label %117, label %109, !prof !3

109:                                              ; preds = %102
  %110 = ptrtoint %"class.blink::FlexItem"* %59 to i64
  %111 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %38, align 8
  %112 = zext i32 %106 to i64
  %113 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %111, i64 %112
  %114 = bitcast %"class.blink::FlexItem"** %113 to i64*
  store i64 %110, i64* %114, align 8
  %115 = load i32, i32* %23, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %23, align 4
  br label %118

117:                                              ; preds = %102
  call void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1900"* nonnull %2, %"class.blink::FlexItem"** nonnull dereferenceable(8) %3) #14
  br label %118

118:                                              ; preds = %109, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #14
  br label %119

119:                                              ; preds = %98, %118, %100
  %120 = add nuw nsw i64 %55, 1
  %121 = load i32, i32* %24, align 4
  %122 = load i32, i32* %26, align 8
  %123 = sub i32 %121, %122
  %124 = zext i32 %123 to i64
  %125 = icmp ult i64 %120, %124
  br i1 %125, label %53, label %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8FlexLine22ResolveFlexibleLengthsEv(%"class.blink::FlexLine"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.WTF::Vector.1900", align 8
  %4 = alloca %"class.WTF::Vector.1900", align 8
  %5 = alloca %"class.blink::FlexItem"*, align 8
  %6 = alloca %"class.blink::FlexItem"*, align 8
  %7 = bitcast %"class.WTF::Vector.1900"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 64, i1 false)
  %9 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0, i32 1, i64 0
  %10 = bitcast %"class.WTF::Vector.1900"* %3 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = bitcast %"class.WTF::Vector.1900"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 64, i1 false)
  %15 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0, i32 1, i64 0
  %16 = bitcast %"class.WTF::Vector.1900"* %4 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 7, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 8, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sge i32 %20, %22
  %24 = xor i1 %23, true
  %25 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 5
  %27 = select i1 %23, double* %26, double* %25
  %28 = load double, double* %27, align 8
  %29 = fcmp ogt double %28, 0.000000e+00
  %30 = fcmp olt double %28, 1.000000e+00
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %56

32:                                               ; preds = %1
  %33 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 9, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to double
  %36 = fmul double %35, 1.562500e-02
  %37 = fmul double %28, %36
  %38 = fmul double %37, 6.400000e+01
  %39 = fcmp ult double %38, 0xC1E0000000000000
  %40 = fcmp ugt double %38, 0x41DFFFFFFFC00000
  %41 = fcmp ogt double %38, 0xC1E0000000000000
  %42 = select i1 %41, double %38, double 0xC1E0000000000000
  %43 = fptosi double %42 to i32
  %44 = select i1 %39, i32 0, i32 2147483647
  %45 = select i1 %40, i32 %44, i32 %43
  %46 = icmp slt i32 %45, 0
  %47 = sub nsw i32 0, %45
  %48 = select i1 %46, i32 %47, i32 %45
  %49 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  %52 = sub nsw i32 0, %50
  %53 = select i1 %51, i32 %52, i32 %50
  %54 = icmp slt i32 %48, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %32
  store i32 %45, i32* %49, align 4
  br label %56

56:                                               ; preds = %32, %55, %1
  %57 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  %64 = load i32, i32* %63, align 4
  br label %297

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 0
  %67 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %67, i64 0, i32 2
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  %72 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 6
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = bitcast i32* %2 to i8*
  %76 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %77 = bitcast %"class.blink::FlexItem"** %6 to i8*
  %78 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.blink::FlexItem"** %5 to i8*
  %80 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0, i32 0, i32 0
  br label %83

81:                                               ; preds = %281
  %82 = icmp eq i32 %283, 0
  br i1 %82, label %293, label %290

83:                                               ; preds = %65, %281
  %84 = phi i32 [ %60, %65 ], [ %286, %281 ]
  %85 = phi i64 [ 0, %65 ], [ %284, %281 ]
  %86 = phi i32 [ 0, %65 ], [ %283, %281 ]
  %87 = phi i32 [ 0, %65 ], [ %282, %281 ]
  %88 = trunc i64 %85 to i32
  %89 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %70, align 8
  %90 = add i32 %84, %88
  %91 = call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %89, i32 %90) #14
  %92 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 16
  %93 = load i8, i8* %92, align 1, !range !4
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %281

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 4, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = load i32, i32* %71, align 4
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %135

100:                                              ; preds = %95
  %101 = load double, double* %25, align 8
  %102 = fcmp ogt double %101, 0.000000e+00
  %103 = and i1 %102, %24
  %104 = call double @llvm.fabs.f64(double %101) #13
  %105 = fcmp one double %104, 0x7FF0000000000000
  %106 = and i1 %103, %105
  br i1 %106, label %107, label %186

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 3
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  %110 = load i160, i160* %74, align 8
  %111 = lshr i160 %110, 32
  %112 = trunc i160 %111 to i32
  %113 = and i32 %112, 30
  %114 = or i32 %113, 1
  %115 = icmp eq i32 %114, 15
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %109, i64 0, i32 0, i32 3, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %116, align 8
  br i1 %115, label %118, label %125

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %117, i64 0, i32 2, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %120, i64 0, i32 6
  %122 = load float, float* %121, align 4
  %123 = fcmp ogt float %122, 0.000000e+00
  br i1 %123, label %124, label %128

124:                                              ; preds = %118
  br label %128

125:                                              ; preds = %107
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %117, i64 0, i32 8
  %127 = load float, float* %126, align 4
  br label %128

128:                                              ; preds = %118, %124, %125
  %129 = phi float [ %127, %125 ], [ %122, %124 ], [ 0.000000e+00, %118 ]
  %130 = sitofp i32 %98 to float
  %131 = fmul float %130, 1.562500e-02
  %132 = fmul float %131, %129
  %133 = fpext float %132 to double
  %134 = fdiv double %133, %101
  br label %186

135:                                              ; preds = %95
  %136 = icmp slt i32 %98, 0
  br i1 %136, label %137, label %186

137:                                              ; preds = %135
  %138 = load double, double* %72, align 8
  %139 = fcmp ogt double %138, 0.000000e+00
  %140 = and i1 %23, %139
  %141 = call double @llvm.fabs.f64(double %138) #13
  %142 = fcmp one double %141, 0x7FF0000000000000
  %143 = and i1 %140, %142
  br i1 %143, label %144, label %186

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 3
  %146 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %145, align 8
  %147 = load i160, i160* %74, align 8
  %148 = lshr i160 %147, 32
  %149 = trunc i160 %148 to i32
  %150 = and i32 %149, 30
  %151 = or i32 %150, 1
  %152 = icmp eq i32 %151, 15
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %146, i64 0, i32 0, i32 3, i32 0, i32 0
  %154 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %154, i64 0, i32 2, i32 0, i32 0
  %156 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %155, align 8
  br i1 %152, label %157, label %161

157:                                              ; preds = %144
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %156, i64 0, i32 6
  %159 = load float, float* %158, align 4
  %160 = fcmp ogt float %159, 0.000000e+00
  br i1 %160, label %164, label %186

161:                                              ; preds = %144
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %156, i64 0, i32 5
  %163 = load float, float* %162, align 8
  br label %164

164:                                              ; preds = %157, %161
  %165 = phi float [ %163, %161 ], [ %159, %157 ]
  %166 = fcmp une float %165, 0.000000e+00
  br i1 %166, label %167, label %186

167:                                              ; preds = %164
  br i1 %152, label %168, label %173

168:                                              ; preds = %167
  %169 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %156, i64 0, i32 6
  %170 = load float, float* %169, align 4
  %171 = fcmp ogt float %170, 0.000000e+00
  br i1 %171, label %172, label %176

172:                                              ; preds = %168
  br label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %156, i64 0, i32 5
  %175 = load float, float* %174, align 8
  br label %176

176:                                              ; preds = %168, %172, %173
  %177 = phi float [ %175, %173 ], [ %170, %172 ], [ 0.000000e+00, %168 ]
  %178 = sitofp i32 %98 to float
  %179 = fmul float %178, 1.562500e-02
  %180 = fmul float %179, %177
  %181 = sitofp i32 %97 to float
  %182 = fmul float %181, 1.562500e-02
  %183 = fmul float %182, %180
  %184 = fpext float %183 to double
  %185 = fdiv double %184, %138
  br label %186

186:                                              ; preds = %157, %100, %135, %137, %164, %176, %128
  %187 = phi double [ %134, %128 ], [ %185, %176 ], [ 0.000000e+00, %164 ], [ 0.000000e+00, %137 ], [ 0.000000e+00, %135 ], [ 0.000000e+00, %100 ], [ 0.000000e+00, %157 ]
  %188 = call double @llvm.fabs.f64(double %187) #13
  %189 = fcmp ueq double %188, 0x7FF0000000000000
  br i1 %189, label %207, label %190

190:                                              ; preds = %186
  %191 = fptrunc double %187 to float
  %192 = fmul float %191, 6.400000e+01
  %193 = call float @llvm.round.f32(float %192) #14
  %194 = fcmp ult float %193, 0xC1E0000000000000
  %195 = fcmp ugt float %193, 0x41DFFFFFE0000000
  %196 = fcmp ogt float %193, 0xC1E0000000000000
  %197 = select i1 %196, float %193, float 0xC1E0000000000000
  %198 = fptosi float %197 to i32
  %199 = select i1 %194, i32 0, i32 2147483647
  %200 = select i1 %195, i32 %199, i32 %198
  %201 = icmp slt i32 %200, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %200) #14
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !3
  br label %207

207:                                              ; preds = %186, %190
  %208 = phi i32 [ %206, %190 ], [ %97, %186 ]
  %209 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75)
  store i32 %208, i32* %2, align 4
  %210 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %209, i64 0, i32 0
  %211 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 5, i32 1
  %212 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %211, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp slt i32 %213, %208
  %215 = select i1 %214, %"class.blink::LayoutUnit"* %211, %"class.blink::LayoutUnit"* %76
  %216 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %209, i64 0, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %215, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp slt i32 %217, %219
  %221 = select i1 %220, %"class.blink::LayoutUnit"* %215, %"class.blink::LayoutUnit"* %210
  %222 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %221, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75)
  %224 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %91, i64 0, i32 12, i32 0
  store i32 %223, i32* %224, align 4
  %225 = icmp sgt i32 %97, -1
  %226 = select i1 %225, i32 -2147483648, i32 2147483647
  %227 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %223, i32 %97) #14
  %228 = extractvalue { i32, i1 } %227, 1
  %229 = extractvalue { i32, i1 } %227, 0
  %230 = select i1 %228, i32 %226, i32 %229, !prof !3
  %231 = icmp slt i32 %230, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %87, i32 %230) #14
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !3
  %237 = icmp sgt i32 %208, -1
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %223, i32 %208) #14
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !3
  %243 = icmp sgt i32 %242, 0
  br i1 %243, label %244, label %257

244:                                              ; preds = %207
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #14
  store %"class.blink::FlexItem"* %91, %"class.blink::FlexItem"** %5, align 8
  %245 = load i32, i32* %12, align 4
  %246 = load i32, i32* %11, align 8
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %256, label %248, !prof !3

248:                                              ; preds = %244
  %249 = ptrtoint %"class.blink::FlexItem"* %91 to i64
  %250 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %80, align 8
  %251 = zext i32 %245 to i64
  %252 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %250, i64 %251
  %253 = bitcast %"class.blink::FlexItem"** %252 to i64*
  store i64 %249, i64* %253, align 8
  %254 = load i32, i32* %12, align 4
  %255 = add i32 %254, 1
  store i32 %255, i32* %12, align 4
  br label %272

256:                                              ; preds = %244
  call void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1900"* nonnull %3, %"class.blink::FlexItem"** nonnull dereferenceable(8) %5) #14
  br label %272

257:                                              ; preds = %207
  %258 = icmp slt i32 %242, 0
  br i1 %258, label %259, label %274

259:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #14
  store %"class.blink::FlexItem"* %91, %"class.blink::FlexItem"** %6, align 8
  %260 = load i32, i32* %18, align 4
  %261 = load i32, i32* %17, align 8
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %271, label %263, !prof !3

263:                                              ; preds = %259
  %264 = ptrtoint %"class.blink::FlexItem"* %91 to i64
  %265 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %78, align 8
  %266 = zext i32 %260 to i64
  %267 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %265, i64 %266
  %268 = bitcast %"class.blink::FlexItem"** %267 to i64*
  store i64 %264, i64* %268, align 8
  %269 = load i32, i32* %18, align 4
  %270 = add i32 %269, 1
  store i32 %270, i32* %18, align 4
  br label %272

271:                                              ; preds = %259
  call void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1900"* nonnull %4, %"class.blink::FlexItem"** nonnull dereferenceable(8) %6) #14
  br label %272

272:                                              ; preds = %271, %263, %256, %248
  %273 = phi i8* [ %79, %248 ], [ %79, %256 ], [ %77, %263 ], [ %77, %271 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #14
  br label %274

274:                                              ; preds = %272, %257
  %275 = icmp slt i32 %242, 0
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %242) #14
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !3
  br label %281

281:                                              ; preds = %83, %274
  %282 = phi i32 [ %236, %274 ], [ %87, %83 ]
  %283 = phi i32 [ %280, %274 ], [ %86, %83 ]
  %284 = add nuw nsw i64 %85, 1
  %285 = load i32, i32* %57, align 4
  %286 = load i32, i32* %59, align 8
  %287 = sub i32 %285, %286
  %288 = zext i32 %287 to i64
  %289 = icmp ult i64 %284, %288
  br i1 %289, label %83, label %81

290:                                              ; preds = %81
  %291 = icmp slt i32 %283, 0
  %292 = select i1 %291, %"class.WTF::Vector.1900"* %4, %"class.WTF::Vector.1900"* %3
  call void @_ZN5blink8FlexLine16FreezeViolationsERN3WTF6VectorIPNS_8FlexItemELj8ENS1_18PartitionAllocatorEEE(%"class.blink::FlexLine"* %0, %"class.WTF::Vector.1900"* nonnull dereferenceable(80) %292)
  br label %310

293:                                              ; preds = %81
  %294 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp sgt i32 %282, -1
  br i1 %296, label %297, label %301

297:                                              ; preds = %62, %293
  %298 = phi i32 [ %64, %62 ], [ %295, %293 ]
  %299 = phi i32* [ %63, %62 ], [ %294, %293 ]
  %300 = phi i32 [ 0, %62 ], [ %282, %293 ]
  br label %301

301:                                              ; preds = %293, %297
  %302 = phi i32 [ %298, %297 ], [ %295, %293 ]
  %303 = phi i32* [ %299, %297 ], [ %294, %293 ]
  %304 = phi i32 [ %300, %297 ], [ %282, %293 ]
  %305 = phi i32 [ -2147483648, %297 ], [ 2147483647, %293 ]
  %306 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %302, i32 %304) #14
  %307 = extractvalue { i32, i1 } %306, 1
  %308 = extractvalue { i32, i1 } %306, 0
  %309 = select i1 %307, i32 %305, i32 %308, !prof !3
  store i32 %309, i32* %303, align 4
  br label %310

310:                                              ; preds = %301, %290
  %311 = phi i1 [ true, %301 ], [ false, %290 ]
  %312 = load i32, i32* %18, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %315, label %314, !prof !3

314:                                              ; preds = %310
  store i32 0, i32* %18, align 4
  br label %315

315:                                              ; preds = %314, %310
  %316 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0, i32 0, i32 0
  %317 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %316, align 8
  %318 = bitcast i8* %15 to %"class.blink::FlexItem"**
  %319 = icmp eq %"class.blink::FlexItem"** %317, %318
  br i1 %319, label %322, label %320, !prof !2

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1901"* nonnull %321, %"class.blink::FlexItem"** %317) #14
  br label %322

322:                                              ; preds = %315, %320
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #14
  %323 = load i32, i32* %12, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %326, label %325, !prof !3

325:                                              ; preds = %322
  store i32 0, i32* %12, align 4
  br label %326

326:                                              ; preds = %325, %322
  %327 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0, i32 0, i32 0
  %328 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %327, align 8
  %329 = bitcast i8* %9 to %"class.blink::FlexItem"**
  %330 = icmp eq %"class.blink::FlexItem"** %328, %329
  br i1 %330, label %333, label %331, !prof !2

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1901"* nonnull %332, %"class.blink::FlexItem"** %328) #14
  br label %333

333:                                              ; preds = %326, %331
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #14
  ret i1 %311
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink8FlexLine33ApplyMainAxisAutoMarginAdjustmentEv(%"class.blink::FlexLine"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %110, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 0
  %7 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %7, i64 0, i32 2
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = lshr i160 %12, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 30
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %20, align 8
  br i1 %19, label %22, label %29

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %24, i64 0, i32 13
  %26 = bitcast [3 x i8]* %25 to i24*
  %27 = load i24, i24* %26, align 8
  %28 = icmp slt i24 %27, 0
  br label %36

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 12
  %31 = load i16, i16* %30, align 4
  %32 = lshr i16 %31, 5
  %33 = and i16 %32, 2
  %34 = or i16 %33, 1
  %35 = icmp eq i16 %34, 3
  br label %36

36:                                               ; preds = %22, %29
  %37 = phi i1 [ %28, %22 ], [ %35, %29 ]
  %38 = xor i1 %14, %37
  %39 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %110, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 0
  br label %48

46:                                               ; preds = %48
  %47 = icmp eq i32 %74, 0
  br i1 %47, label %110, label %81

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %42, %44 ], [ %77, %48 ]
  %50 = phi i32 [ 0, %44 ], [ %74, %48 ]
  %51 = phi i64 [ 0, %44 ], [ %75, %48 ]
  %52 = trunc i64 %51 to i32
  %53 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %45, align 8
  %54 = add i32 %49, %52
  %55 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %53, i32 %54) #14
  %56 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %55, i64 0, i32 3
  %57 = bitcast %"class.blink::ComputedStyle"** %56 to %"class.blink::ComputedStyleBase"**
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 7, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 12, i32 2
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 9, i32 2
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 10, i32 2
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 11, i32 2
  %65 = select i1 %38, i8* %64, i8* %62
  %66 = select i1 %38, i8* %63, i8* %61
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  %69 = zext i1 %68 to i32
  %70 = add nsw i32 %50, %69
  %71 = load i8, i8* %65, align 1
  %72 = icmp eq i8 %71, 0
  %73 = zext i1 %72 to i32
  %74 = add nsw i32 %70, %73
  %75 = add nuw nsw i64 %51, 1
  %76 = load i32, i32* %39, align 4
  %77 = load i32, i32* %41, align 8
  %78 = sub i32 %76, %77
  %79 = zext i32 %78 to i64
  %80 = icmp ult i64 %75, %79
  br i1 %80, label %48, label %46

81:                                               ; preds = %46
  %82 = icmp sgt i32 %74, 33554431
  br i1 %82, label %88, label %83

83:                                               ; preds = %81
  %84 = icmp slt i32 %74, -33554432
  %85 = shl i32 %74, 6
  %86 = select i1 %84, i32 -2147483648, i32 %85
  %87 = sext i32 %86 to i64
  br label %88

88:                                               ; preds = %83, %81
  %89 = phi i64 [ 2147483647, %81 ], [ %87, %83 ]
  %90 = load i32, i32* %2, align 4
  %91 = sext i32 %90 to i64
  %92 = shl nsw i64 %91, 6
  %93 = sdiv i64 %92, %89
  %94 = tail call i1 @llvm.is.constant.i64(i64 %93) #14
  br i1 %94, label %102, label %95

95:                                               ; preds = %88
  %96 = icmp slt i64 %93, 0
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = add i64 %93, 2147483648
  %99 = icmp ult i64 %98, 4294967296
  %100 = trunc i64 %93 to i32
  %101 = select i1 %99, i32 %100, i32 %97, !prof !2
  br label %108

102:                                              ; preds = %88
  %103 = icmp sgt i64 %93, 2147483647
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = icmp sgt i64 %93, -2147483648
  %106 = select i1 %105, i64 %93, i64 -2147483648
  %107 = trunc i64 %106 to i32
  br label %108

108:                                              ; preds = %95, %102, %104
  %109 = phi i32 [ %101, %95 ], [ %107, %104 ], [ 2147483647, %102 ]
  store i32 0, i32* %2, align 4
  br label %110

110:                                              ; preds = %36, %46, %1, %108
  %111 = phi i32 [ %109, %108 ], [ 0, %1 ], [ 0, %46 ], [ 0, %36 ]
  ret i32 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FlexLine24ComputeLineItemsPositionENS_10LayoutUnitES1_RS1_(%"class.blink::FlexLine"* nocapture, i32, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to %"class.blink::StyleContentAlignmentData"*
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 0
  %9 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %9, i64 0, i32 2
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = lshr i160 %14, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 30
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 11, i32 0
  store i32 %1, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 8, i32 0
  %29 = load i32, i32* %28, align 4
  br label %37

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.blink::FlexItemVectorView", %"class.blink::FlexItemVectorView"* %21, i64 0, i32 0
  br label %116

32:                                               ; preds = %183
  %33 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %8, align 8
  %34 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 8, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %200, -1
  br i1 %36, label %37, label %42

37:                                               ; preds = %27, %32
  %38 = phi i32 [ %29, %27 ], [ %35, %32 ]
  %39 = phi i32 [ 0, %27 ], [ %204, %32 ]
  %40 = phi i32 [ 0, %27 ], [ %200, %32 ]
  %41 = phi %"class.blink::FlexLayoutAlgorithm"* [ %9, %27 ], [ %33, %32 ]
  br label %42

42:                                               ; preds = %32, %37
  %43 = phi i32 [ %38, %37 ], [ %35, %32 ]
  %44 = phi i32 [ %39, %37 ], [ %204, %32 ]
  %45 = phi i32 [ %40, %37 ], [ %200, %32 ]
  %46 = phi %"class.blink::FlexLayoutAlgorithm"* [ %41, %37 ], [ %33, %32 ]
  %47 = phi i32 [ -2147483648, %37 ], [ 2147483647, %32 ]
  %48 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %45) #14
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !3
  %52 = add i32 %44, -1
  %53 = icmp ugt i32 %52, 33554430
  %54 = shl i32 %52, 6
  %55 = select i1 %53, i32 2147483647, i32 %54
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %46, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %59, %56
  %61 = sdiv i64 %60, 64
  %62 = ashr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = trunc i64 %61 to i32
  %65 = ashr i32 %64, 31
  %66 = icmp eq i32 %65, %63
  br i1 %66, label %71, label %67

67:                                               ; preds = %42
  %68 = xor i32 %58, %55
  %69 = lshr i32 %68, 31
  %70 = add nuw i32 %69, 2147483647
  br label %71

71:                                               ; preds = %42, %67
  %72 = phi i32 [ %64, %42 ], [ %70, %67 ]
  %73 = icmp sgt i32 %72, -1
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %72) #14
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !3
  %79 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 10, i32 0
  store i32 %78, i32* %79, align 4
  %80 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #14
  %81 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %11)
  store i32 %81, i32* %5, align 4
  %82 = tail call i32 @_ZN5blink8FlexLine33ApplyMainAxisAutoMarginAdjustmentEv(%"class.blink::FlexLine"* %0)
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %22, align 4
  %85 = load i32, i32* %24, align 8
  %86 = sub i32 %84, %85
  %87 = call i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* dereferenceable(104) %11, i32 %83, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %6, i32 %86)
  %88 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 16, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %87, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %87) #14
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !3
  store i32 %95, i32* %88, align 4
  %96 = icmp slt i32 %1, 0
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %87, i32 %1) #14
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !3
  %102 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %8, align 8
  %103 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %102, i64 0, i32 4
  %104 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZNK3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %103, i32 0) #14
  %105 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %104, i64 0, i32 19, i32 0, i32 0
  %106 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %105, align 8
  %107 = icmp eq %"class.blink::LayoutBox"* %106, null
  %108 = load i160, i160* %13, align 8
  %109 = lshr i160 %108, 32
  %110 = trunc i160 %109 to i32
  %111 = and i32 %110, 30
  %112 = or i32 %111, 1
  %113 = icmp eq i32 %112, 15
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 3, i32 0, i32 0
  %115 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %114, align 8
  br i1 %107, label %256, label %207

116:                                              ; preds = %30, %183
  %117 = phi i32 [ %25, %30 ], [ %203, %183 ]
  %118 = phi i64 [ 0, %30 ], [ %201, %183 ]
  %119 = phi i32 [ 0, %30 ], [ %200, %183 ]
  %120 = trunc i64 %118 to i32
  %121 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %31, align 8
  %122 = add i32 %117, %120
  %123 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %121, i32 %122) #14
  %124 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 12, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 8, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 %127) #14
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !3
  %134 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 0
  %135 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %135, i64 0, i32 2
  %137 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %137, i64 0, i32 0, i32 9
  %139 = bitcast [20 x i8]* %138 to i160*
  %140 = load i160, i160* %139, align 8
  %141 = and i160 %140, 15211807202738752817960438464512
  %142 = icmp eq i160 %141, 0
  %143 = lshr i160 %140, 32
  %144 = trunc i160 %143 to i32
  %145 = and i32 %144, 30
  %146 = or i32 %145, 1
  %147 = icmp eq i32 %146, 15
  %148 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %137, i64 0, i32 0, i32 3, i32 0, i32 0
  %149 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %148, align 8
  br i1 %147, label %150, label %157

150:                                              ; preds = %116
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %149, i64 0, i32 2, i32 0, i32 0
  %152 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %152, i64 0, i32 13
  %154 = bitcast [3 x i8]* %153 to i24*
  %155 = load i24, i24* %154, align 8
  %156 = icmp slt i24 %155, 0
  br label %164

157:                                              ; preds = %116
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %149, i64 0, i32 12
  %159 = load i16, i16* %158, align 4
  %160 = lshr i16 %159, 5
  %161 = and i16 %160, 2
  %162 = or i16 %161, 1
  %163 = icmp eq i16 %162, 3
  br label %164

164:                                              ; preds = %157, %150
  %165 = phi i1 [ %156, %150 ], [ %163, %157 ]
  %166 = xor i1 %142, %165
  br i1 %166, label %167, label %175

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 10, i32 3, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 10, i32 1, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %171) #14
  br label %183

175:                                              ; preds = %164
  %176 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 10, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %123, i64 0, i32 10, i32 2, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %179, 0
  %181 = select i1 %180, i32 -2147483648, i32 2147483647
  %182 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %177, i32 %179) #14
  br label %183

183:                                              ; preds = %167, %175
  %184 = phi { i32, i1 } [ %174, %167 ], [ %182, %175 ]
  %185 = phi i32 [ %173, %167 ], [ %181, %175 ]
  %186 = extractvalue { i32, i1 } %184, 1
  %187 = extractvalue { i32, i1 } %184, 0
  %188 = select i1 %186, i32 %185, i32 %187
  %189 = icmp slt i32 %188, 0
  %190 = select i1 %189, i32 -2147483648, i32 2147483647
  %191 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %188) #14
  %192 = extractvalue { i32, i1 } %191, 1
  %193 = extractvalue { i32, i1 } %191, 0
  %194 = select i1 %192, i32 %190, i32 %193, !prof !3
  %195 = icmp slt i32 %194, 0
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %194) #14
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !3
  %201 = add nuw nsw i64 %118, 1
  %202 = load i32, i32* %22, align 4
  %203 = load i32, i32* %24, align 8
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = icmp ult i64 %201, %205
  br i1 %206, label %116, label %32

207:                                              ; preds = %71
  br i1 %113, label %208, label %218

208:                                              ; preds = %207
  %209 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %115, i64 0, i32 2, i32 0, i32 0
  %210 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %210, i64 0, i32 13
  %212 = bitcast [3 x i8]* %211 to i24*
  %213 = load i24, i24* %212, align 8
  %214 = icmp sgt i24 %213, -1
  br i1 %214, label %215, label %223

215:                                              ; preds = %208
  %216 = and i160 %108, 324518553658426726783156020576256
  %217 = icmp ne i160 %216, 0
  br label %223

218:                                              ; preds = %207
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %115, i64 0, i32 12
  %220 = load i16, i16* %219, align 4
  %221 = and i16 %220, 96
  %222 = icmp eq i16 %221, 32
  br label %223

223:                                              ; preds = %208, %215, %218
  %224 = phi i1 [ %222, %218 ], [ false, %208 ], [ %217, %215 ]
  %225 = icmp slt i32 %83, 0
  %226 = and i1 %19, %225
  br i1 %226, label %227, label %324

227:                                              ; preds = %223
  br i1 %113, label %228, label %241

228:                                              ; preds = %227
  %229 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %115, i64 0, i32 2, i32 0, i32 0
  %230 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %230, i64 0, i32 13
  %232 = bitcast [3 x i8]* %231 to i24*
  %233 = load i24, i24* %232, align 8
  %234 = icmp sgt i24 %233, -1
  br i1 %234, label %238, label %235

235:                                              ; preds = %228
  %236 = and i160 %108, 41538374868278621028243970633760768
  %237 = icmp eq i160 %236, 0
  br i1 %237, label %324, label %251

238:                                              ; preds = %228
  %239 = and i160 %108, 324518553658426726783156020576256
  %240 = icmp ne i160 %239, 0
  br label %246

241:                                              ; preds = %227
  %242 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %115, i64 0, i32 12
  %243 = load i16, i16* %242, align 4
  %244 = and i16 %243, 96
  %245 = icmp eq i16 %244, 32
  br label %246

246:                                              ; preds = %238, %241
  %247 = phi i1 [ %245, %241 ], [ %240, %238 ]
  %248 = and i160 %108, 41538374868278621028243970633760768
  %249 = icmp eq i160 %248, 0
  %250 = xor i1 %249, %247
  br i1 %250, label %324, label %251

251:                                              ; preds = %235, %246
  %252 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %83) #14
  %253 = extractvalue { i32, i1 } %252, 1
  %254 = extractvalue { i32, i1 } %252, 0
  %255 = select i1 %253, i32 -2147483648, i32 %254, !prof !3
  br label %324

256:                                              ; preds = %71
  br i1 %113, label %257, label %264

257:                                              ; preds = %256
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %115, i64 0, i32 2, i32 0, i32 0
  %259 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %259, i64 0, i32 13
  %261 = bitcast [3 x i8]* %260 to i24*
  %262 = load i24, i24* %261, align 8
  %263 = icmp slt i24 %262, 0
  br i1 %263, label %324, label %271

264:                                              ; preds = %256
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %115, i64 0, i32 12
  %266 = load i16, i16* %265, align 4
  %267 = lshr i16 %266, 5
  %268 = and i16 %267, 2
  %269 = or i16 %268, 1
  %270 = icmp eq i16 %269, 3
  br i1 %270, label %324, label %271

271:                                              ; preds = %257, %264
  %272 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %8, align 8
  %273 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %272, i64 0, i32 2
  %274 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %274, i64 0, i32 0, i32 9
  %276 = bitcast [20 x i8]* %275 to i160*
  %277 = load i160, i160* %276, align 8
  %278 = lshr i160 %277, 32
  %279 = trunc i160 %278 to i32
  %280 = and i32 %279, 30
  %281 = or i32 %280, 1
  %282 = icmp eq i32 %281, 15
  %283 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %274, i64 0, i32 0, i32 3, i32 0, i32 0
  %284 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %283, align 8
  br i1 %282, label %285, label %292

285:                                              ; preds = %271
  %286 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %284, i64 0, i32 2, i32 0, i32 0
  %287 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %287, i64 0, i32 13
  %289 = bitcast [3 x i8]* %288 to i24*
  %290 = load i24, i24* %289, align 8
  %291 = icmp slt i24 %290, 0
  br i1 %291, label %299, label %302

292:                                              ; preds = %271
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %284, i64 0, i32 12
  %294 = load i16, i16* %293, align 4
  %295 = lshr i16 %294, 5
  %296 = and i16 %295, 2
  %297 = or i16 %296, 1
  %298 = icmp eq i16 %297, 3
  br i1 %298, label %299, label %305

299:                                              ; preds = %292, %285
  %300 = and i160 %277, 5070602400912917605986812821504
  %301 = icmp eq i160 %300, 0
  br label %313

302:                                              ; preds = %285
  %303 = and i160 %277, 324518553658426726783156020576256
  %304 = icmp ne i160 %303, 0
  br label %308

305:                                              ; preds = %292
  %306 = and i16 %294, 96
  %307 = icmp eq i16 %306, 32
  br label %308

308:                                              ; preds = %305, %302
  %309 = phi i1 [ %307, %305 ], [ %304, %302 ]
  %310 = and i160 %277, 41538374868278621028243970633760768
  %311 = icmp eq i160 %310, 0
  %312 = xor i1 %311, %309
  br label %313

313:                                              ; preds = %299, %308
  %314 = phi i1 [ %301, %299 ], [ %312, %308 ]
  %315 = xor i1 %314, true
  %316 = and i1 %19, %315
  %317 = icmp slt i32 %83, 0
  %318 = and i1 %317, %316
  br i1 %318, label %319, label %324

319:                                              ; preds = %313
  %320 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %83) #14
  %321 = extractvalue { i32, i1 } %320, 1
  %322 = extractvalue { i32, i1 } %320, 0
  %323 = select i1 %321, i32 -2147483648, i32 %322, !prof !3
  br label %324

324:                                              ; preds = %313, %257, %264, %235, %246, %319, %223, %251
  %325 = phi i32 [ %101, %246 ], [ %255, %251 ], [ %101, %223 ], [ %101, %313 ], [ %323, %319 ], [ %101, %235 ], [ %101, %264 ], [ %101, %257 ]
  %326 = phi i1 [ %224, %246 ], [ %224, %251 ], [ %224, %223 ], [ %315, %313 ], [ true, %319 ], [ %224, %235 ], [ false, %264 ], [ false, %257 ]
  %327 = load i32, i32* %22, align 4
  %328 = load i32, i32* %24, align 8
  %329 = icmp eq i32 %327, %328
  br i1 %329, label %338, label %330

330:                                              ; preds = %324
  %331 = getelementptr inbounds %"class.blink::FlexItemVectorView", %"class.blink::FlexItemVectorView"* %21, i64 0, i32 0
  %332 = bitcast i32* %7 to i8*
  %333 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 15
  %334 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %333, i64 0, i32 0
  %335 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %336 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 2, i32 0
  %337 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  br label %353

338:                                              ; preds = %878, %324
  %339 = phi i32 [ 0, %324 ], [ %651, %878 ]
  %340 = phi i32 [ %325, %324 ], [ %879, %878 ]
  %341 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 12, i32 0
  store i32 %340, i32* %341, align 4
  %342 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %343 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 13, i32 0
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 8
  %345 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %0, i64 0, i32 14, i32 0
  store i32 %339, i32* %345, align 4
  %346 = load i32, i32* %342, align 4
  %347 = icmp slt i32 %339, 0
  %348 = select i1 %347, i32 -2147483648, i32 2147483647
  %349 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %346, i32 %339) #14
  %350 = extractvalue { i32, i1 } %349, 1
  %351 = extractvalue { i32, i1 } %349, 0
  %352 = select i1 %350, i32 %348, i32 %351, !prof !3
  store i32 %352, i32* %342, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #14
  ret void

353:                                              ; preds = %330, %878
  %354 = phi i32 [ 0, %330 ], [ %651, %878 ]
  %355 = phi i32 [ 0, %330 ], [ %649, %878 ]
  %356 = phi i32 [ %328, %330 ], [ %849, %878 ]
  %357 = phi i64 [ 0, %330 ], [ %880, %878 ]
  %358 = phi i32 [ %325, %330 ], [ %879, %878 ]
  %359 = trunc i64 %357 to i32
  %360 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %331, align 8
  %361 = add i32 %356, %359
  %362 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %360, i32 %361) #14
  %363 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 0
  %364 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %364, i64 0, i32 2
  %366 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %365, align 8
  %367 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %366, i64 0, i32 0, i32 9
  %368 = bitcast [20 x i8]* %367 to i160*
  %369 = load i160, i160* %368, align 8
  %370 = and i160 %369, 15211807202738752817960438464512
  %371 = icmp eq i160 %370, 0
  %372 = lshr i160 %369, 32
  %373 = trunc i160 %372 to i32
  %374 = and i32 %373, 30
  %375 = or i32 %374, 1
  %376 = icmp eq i32 %375, 15
  %377 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %366, i64 0, i32 0, i32 3, i32 0, i32 0
  %378 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %377, align 8
  br i1 %376, label %379, label %386

379:                                              ; preds = %353
  %380 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %378, i64 0, i32 2, i32 0, i32 0
  %381 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %381, i64 0, i32 13
  %383 = bitcast [3 x i8]* %382 to i24*
  %384 = load i24, i24* %383, align 8
  %385 = icmp slt i24 %384, 0
  br label %393

386:                                              ; preds = %353
  %387 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %378, i64 0, i32 12
  %388 = load i16, i16* %387, align 4
  %389 = lshr i16 %388, 5
  %390 = and i16 %389, 2
  %391 = or i16 %390, 1
  %392 = icmp eq i16 %391, 3
  br label %393

393:                                              ; preds = %386, %379
  %394 = phi i1 [ %385, %379 ], [ %392, %386 ]
  %395 = xor i1 %371, %394
  %396 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 3
  %397 = bitcast %"class.blink::ComputedStyle"** %396 to %"class.blink::ComputedStyleBase"**
  %398 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %397, align 8
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %398, i64 0, i32 7, i32 0, i32 0
  %400 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %399, align 8
  %401 = bitcast %"class.blink::ComputedStyleBase"* %398 to %"class.blink::ComputedStyle"*
  br i1 %395, label %402, label %416

402:                                              ; preds = %393
  %403 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %400, i64 0, i32 10, i32 2
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %409

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 3, i32 0
  store i32 %82, i32* %407, align 4
  %408 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %399, align 8
  br label %409

409:                                              ; preds = %406, %402
  %410 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %408, %406 ], [ %400, %402 ]
  %411 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %410, i64 0, i32 11, i32 2
  %412 = load i8, i8* %411, align 1
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %414, label %430

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 1, i32 0
  store i32 %82, i32* %415, align 4
  br label %430

416:                                              ; preds = %393
  %417 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %400, i64 0, i32 12, i32 2
  %418 = load i8, i8* %417, align 1
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %420, label %423

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 0, i32 0
  store i32 %82, i32* %421, align 4
  %422 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %399, align 8
  br label %423

423:                                              ; preds = %420, %416
  %424 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %422, %420 ], [ %400, %416 ]
  %425 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %424, i64 0, i32 9, i32 2
  %426 = load i8, i8* %425, align 1
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %430

428:                                              ; preds = %423
  %429 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 2, i32 0
  store i32 %82, i32* %429, align 4
  br label %430

430:                                              ; preds = %409, %414, %423, %428
  %431 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %365, align 8
  %432 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %431, %"class.blink::ComputedStyle"* dereferenceable(104) %401) #14
  %433 = icmp eq i32 %432, 4
  %434 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %363, align 8
  %435 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %434, i64 0, i32 2
  %436 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %435, align 8
  %437 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %436, i64 0, i32 0, i32 9
  %438 = bitcast [20 x i8]* %437 to i160*
  %439 = load i160, i160* %438, align 8
  br i1 %433, label %447, label %440

440:                                              ; preds = %430
  %441 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %436, i64 0, i32 0, i32 3, i32 0, i32 0
  %442 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %441, align 8
  %443 = and i160 %439, 15211807202738752817960438464512
  %444 = lshr i160 %439, 32
  %445 = trunc i160 %444 to i32
  %446 = and i32 %445, 30
  br label %588

447:                                              ; preds = %430
  %448 = and i160 %439, 15211807202738752817960438464512
  %449 = icmp eq i160 %448, 0
  %450 = lshr i160 %439, 32
  %451 = trunc i160 %450 to i32
  %452 = and i32 %451, 30
  %453 = or i32 %452, 1
  %454 = icmp eq i32 %453, 15
  %455 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %436, i64 0, i32 0, i32 3, i32 0, i32 0
  %456 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %455, align 8
  br i1 %454, label %457, label %464

457:                                              ; preds = %447
  %458 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %456, i64 0, i32 2, i32 0, i32 0
  %459 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %459, i64 0, i32 13
  %461 = bitcast [3 x i8]* %460 to i24*
  %462 = load i24, i24* %461, align 8
  %463 = icmp slt i24 %462, 0
  br label %471

464:                                              ; preds = %447
  %465 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %456, i64 0, i32 12
  %466 = load i16, i16* %465, align 4
  %467 = lshr i16 %466, 5
  %468 = and i16 %467, 2
  %469 = or i16 %468, 1
  %470 = icmp eq i16 %469, 3
  br label %471

471:                                              ; preds = %464, %457
  %472 = phi i1 [ %463, %457 ], [ %470, %464 ]
  %473 = xor i1 %449, %472
  %474 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %397, align 8
  %475 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %474, i64 0, i32 7, i32 0, i32 0
  %476 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %475, align 8
  br i1 %473, label %477, label %485

477:                                              ; preds = %471
  %478 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %476, i64 0, i32 12, i32 2
  %479 = load i8, i8* %478, align 1
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %588, label %481

481:                                              ; preds = %477
  %482 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %476, i64 0, i32 9, i32 2
  %483 = load i8, i8* %482, align 1
  %484 = icmp eq i8 %483, 0
  br i1 %484, label %588, label %493

485:                                              ; preds = %471
  %486 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %476, i64 0, i32 10, i32 2
  %487 = load i8, i8* %486, align 1
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %588, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %476, i64 0, i32 11, i32 2
  %491 = load i8, i8* %490, align 1
  %492 = icmp eq i8 %491, 0
  br i1 %492, label %588, label %493

493:                                              ; preds = %481, %489
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %332)
  %494 = tail call i32 @_ZNK5blink8FlexItem15MarginBoxAscentEv(%"class.blink::FlexItem"* %362)
  store i32 %494, i32* %7, align 4
  %495 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %363, align 8
  %496 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %495, i64 0, i32 2
  %497 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %496, align 8
  %498 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %497, i64 0, i32 0, i32 9
  %499 = bitcast [20 x i8]* %498 to i160*
  %500 = load i160, i160* %499, align 8
  %501 = and i160 %500, 15211807202738752817960438464512
  %502 = icmp eq i160 %501, 0
  %503 = lshr i160 %500, 32
  %504 = trunc i160 %503 to i32
  %505 = and i32 %504, 30
  %506 = or i32 %505, 1
  %507 = icmp eq i32 %506, 15
  %508 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %497, i64 0, i32 0, i32 3, i32 0, i32 0
  %509 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %508, align 8
  br i1 %507, label %510, label %517

510:                                              ; preds = %493
  %511 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %509, i64 0, i32 2, i32 0, i32 0
  %512 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %511, align 8
  %513 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %512, i64 0, i32 13
  %514 = bitcast [3 x i8]* %513 to i24*
  %515 = load i24, i24* %514, align 8
  %516 = icmp slt i24 %515, 0
  br label %524

517:                                              ; preds = %493
  %518 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %509, i64 0, i32 12
  %519 = load i16, i16* %518, align 4
  %520 = lshr i16 %519, 5
  %521 = and i16 %520, 2
  %522 = or i16 %521, 1
  %523 = icmp eq i16 %522, 3
  br label %524

524:                                              ; preds = %517, %510
  %525 = phi i1 [ %516, %510 ], [ %523, %517 ]
  %526 = xor i1 %502, %525
  br i1 %526, label %527, label %535

527:                                              ; preds = %524
  %528 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 0, i32 0
  %529 = load i32, i32* %528, align 4
  %530 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 2, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = icmp slt i32 %531, 0
  %533 = select i1 %532, i32 -2147483648, i32 2147483647
  %534 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %529, i32 %531) #14
  br label %543

535:                                              ; preds = %524
  %536 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 3, i32 0
  %537 = load i32, i32* %536, align 4
  %538 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 1, i32 0
  %539 = load i32, i32* %538, align 4
  %540 = icmp slt i32 %539, 0
  %541 = select i1 %540, i32 -2147483648, i32 2147483647
  %542 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %537, i32 %539) #14
  br label %543

543:                                              ; preds = %527, %535
  %544 = phi { i32, i1 } [ %534, %527 ], [ %542, %535 ]
  %545 = phi i32 [ %533, %527 ], [ %541, %535 ]
  %546 = extractvalue { i32, i1 } %544, 1
  %547 = extractvalue { i32, i1 } %544, 0
  %548 = select i1 %546, i32 %545, i32 %547
  %549 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 13, i32 0
  %550 = load i32, i32* %549, align 4
  %551 = icmp slt i32 %550, 0
  %552 = select i1 %551, i32 -2147483648, i32 2147483647
  %553 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %548, i32 %550) #14
  %554 = extractvalue { i32, i1 } %553, 1
  %555 = extractvalue { i32, i1 } %553, 0
  %556 = select i1 %554, i32 %552, i32 %555, !prof !3
  %557 = icmp sgt i32 %494, -1
  %558 = select i1 %557, i32 -2147483648, i32 2147483647
  %559 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %556, i32 %494) #14
  %560 = extractvalue { i32, i1 } %559, 1
  %561 = extractvalue { i32, i1 } %559, 0
  %562 = select i1 %560, i32 %558, i32 %561
  %563 = load i32, i32* %334, align 4
  %564 = icmp slt i32 %563, %494
  %565 = select i1 %564, %"class.blink::LayoutUnit"* %335, %"class.blink::LayoutUnit"* %333
  %566 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %565, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  store i32 %567, i32* %334, align 8
  %568 = icmp slt i32 %355, %562
  %569 = select i1 %568, i32 %562, i32 %355
  %570 = icmp slt i32 %569, 0
  %571 = select i1 %570, i32 -2147483648, i32 2147483647
  %572 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %567, i32 %569) #14
  %573 = extractvalue { i32, i1 } %572, 1
  %574 = extractvalue { i32, i1 } %572, 0
  %575 = select i1 %573, i32 %571, i32 %574, !prof !3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %332)
  %576 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %363, align 8
  %577 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %576, i64 0, i32 2
  %578 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %577, align 8
  %579 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %578, i64 0, i32 0, i32 9
  %580 = bitcast [20 x i8]* %579 to i160*
  %581 = load i160, i160* %580, align 8
  %582 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %578, i64 0, i32 0, i32 3, i32 0, i32 0
  %583 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %582, align 8
  %584 = and i160 %581, 15211807202738752817960438464512
  %585 = lshr i160 %581, 32
  %586 = trunc i160 %585 to i32
  %587 = and i32 %586, 30
  br label %642

588:                                              ; preds = %440, %485, %477, %481, %489
  %589 = phi i32 [ %446, %440 ], [ %452, %485 ], [ %452, %477 ], [ %452, %481 ], [ %452, %489 ]
  %590 = phi i160 [ %443, %440 ], [ %448, %485 ], [ %448, %477 ], [ %448, %481 ], [ %448, %489 ]
  %591 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %442, %440 ], [ %456, %485 ], [ %456, %477 ], [ %456, %481 ], [ %456, %489 ]
  %592 = icmp eq i160 %590, 0
  %593 = or i32 %589, 1
  %594 = icmp eq i32 %593, 15
  br i1 %594, label %595, label %602

595:                                              ; preds = %588
  %596 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %591, i64 0, i32 2, i32 0, i32 0
  %597 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %596, align 8
  %598 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %597, i64 0, i32 13
  %599 = bitcast [3 x i8]* %598 to i24*
  %600 = load i24, i24* %599, align 8
  %601 = icmp slt i24 %600, 0
  br label %609

602:                                              ; preds = %588
  %603 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %591, i64 0, i32 12
  %604 = load i16, i16* %603, align 4
  %605 = lshr i16 %604, 5
  %606 = and i16 %605, 2
  %607 = or i16 %606, 1
  %608 = icmp eq i16 %607, 3
  br label %609

609:                                              ; preds = %602, %595
  %610 = phi i1 [ %601, %595 ], [ %608, %602 ]
  %611 = xor i1 %592, %610
  br i1 %611, label %612, label %620

612:                                              ; preds = %609
  %613 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 0, i32 0
  %614 = load i32, i32* %613, align 4
  %615 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 2, i32 0
  %616 = load i32, i32* %615, align 4
  %617 = icmp slt i32 %616, 0
  %618 = select i1 %617, i32 -2147483648, i32 2147483647
  %619 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %614, i32 %616) #14
  br label %628

620:                                              ; preds = %609
  %621 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 3, i32 0
  %622 = load i32, i32* %621, align 4
  %623 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 1, i32 0
  %624 = load i32, i32* %623, align 4
  %625 = icmp slt i32 %624, 0
  %626 = select i1 %625, i32 -2147483648, i32 2147483647
  %627 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %622, i32 %624) #14
  br label %628

628:                                              ; preds = %612, %620
  %629 = phi { i32, i1 } [ %619, %612 ], [ %627, %620 ]
  %630 = phi i32 [ %618, %612 ], [ %626, %620 ]
  %631 = extractvalue { i32, i1 } %629, 1
  %632 = extractvalue { i32, i1 } %629, 0
  %633 = select i1 %631, i32 %630, i32 %632
  %634 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 13, i32 0
  %635 = load i32, i32* %634, align 4
  %636 = icmp slt i32 %633, 0
  %637 = select i1 %636, i32 -2147483648, i32 2147483647
  %638 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %635, i32 %633) #14
  %639 = extractvalue { i32, i1 } %638, 1
  %640 = extractvalue { i32, i1 } %638, 0
  %641 = select i1 %639, i32 %637, i32 %640, !prof !3
  br label %642

642:                                              ; preds = %628, %543
  %643 = phi i32 [ %589, %628 ], [ %587, %543 ]
  %644 = phi i160 [ %590, %628 ], [ %584, %543 ]
  %645 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %591, %628 ], [ %583, %543 ]
  %646 = phi i160 [ %439, %628 ], [ %581, %543 ]
  %647 = phi %"class.blink::FlexLayoutAlgorithm"* [ %434, %628 ], [ %576, %543 ]
  %648 = phi i32 [ %641, %628 ], [ %575, %543 ]
  %649 = phi i32 [ %355, %628 ], [ %569, %543 ]
  %650 = icmp slt i32 %354, %648
  %651 = select i1 %650, i32 %648, i32 %354
  %652 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %647, i64 0, i32 2
  %653 = icmp eq i160 %644, 0
  %654 = or i32 %643, 1
  %655 = icmp eq i32 %654, 15
  br i1 %655, label %656, label %664

656:                                              ; preds = %642
  %657 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %645, i64 0, i32 2, i32 0, i32 0
  %658 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %657, align 8
  %659 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %658, i64 0, i32 13
  %660 = bitcast [3 x i8]* %659 to i24*
  %661 = load i24, i24* %660, align 8
  %662 = icmp slt i24 %661, 0
  %663 = xor i1 %653, %662
  br i1 %662, label %672, label %676

664:                                              ; preds = %642
  %665 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %645, i64 0, i32 12
  %666 = load i16, i16* %665, align 4
  %667 = lshr i16 %666, 5
  %668 = and i16 %667, 2
  %669 = or i16 %668, 1
  %670 = icmp eq i16 %669, 3
  %671 = xor i1 %653, %670
  br i1 %670, label %672, label %679

672:                                              ; preds = %664, %656
  %673 = phi i1 [ %671, %664 ], [ %663, %656 ]
  %674 = and i160 %646, 5070602400912917605986812821504
  %675 = icmp eq i160 %674, 0
  br label %688

676:                                              ; preds = %656
  %677 = and i160 %646, 324518553658426726783156020576256
  %678 = icmp ne i160 %677, 0
  br label %682

679:                                              ; preds = %664
  %680 = and i16 %666, 96
  %681 = icmp eq i16 %680, 32
  br label %682

682:                                              ; preds = %679, %676
  %683 = phi i1 [ %671, %679 ], [ %663, %676 ]
  %684 = phi i1 [ %681, %679 ], [ %678, %676 ]
  %685 = and i160 %646, 41538374868278621028243970633760768
  %686 = icmp eq i160 %685, 0
  %687 = xor i1 %686, %684
  br label %688

688:                                              ; preds = %672, %682
  %689 = phi i1 [ %673, %672 ], [ %683, %682 ]
  %690 = phi i1 [ %675, %672 ], [ %687, %682 ]
  %691 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 3
  %692 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 1
  %693 = select i1 %690, %"class.blink::LayoutUnit"* %691, %"class.blink::LayoutUnit"* %692
  %694 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 0
  %695 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 2
  %696 = select i1 %690, %"class.blink::LayoutUnit"* %694, %"class.blink::LayoutUnit"* %695
  %697 = select i1 %689, %"class.blink::LayoutUnit"* %693, %"class.blink::LayoutUnit"* %696
  %698 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %697, i64 0, i32 0
  %699 = load i32, i32* %698, align 4
  %700 = icmp slt i32 %699, 0
  %701 = select i1 %700, i32 -2147483648, i32 2147483647
  %702 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %358, i32 %699) #14
  %703 = extractvalue { i32, i1 } %702, 1
  %704 = extractvalue { i32, i1 } %702, 0
  %705 = select i1 %703, i32 %701, i32 %704, !prof !3
  %706 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 12, i32 0
  %707 = load i32, i32* %706, align 4
  %708 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 8, i32 0
  %709 = load i32, i32* %708, align 4
  %710 = icmp slt i32 %709, 0
  %711 = select i1 %710, i32 -2147483648, i32 2147483647
  %712 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %707, i32 %709) #14
  %713 = extractvalue { i32, i1 } %712, 1
  %714 = extractvalue { i32, i1 } %712, 0
  %715 = select i1 %713, i32 %711, i32 %714, !prof !3
  br i1 %326, label %716, label %730

716:                                              ; preds = %688
  %717 = load i32, i32* %336, align 4
  %718 = icmp sgt i32 %705, -1
  %719 = select i1 %718, i32 -2147483648, i32 2147483647
  %720 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %717, i32 %705) #14
  %721 = extractvalue { i32, i1 } %720, 1
  %722 = extractvalue { i32, i1 } %720, 0
  %723 = select i1 %721, i32 %719, i32 %722, !prof !3
  %724 = icmp sgt i32 %715, -1
  %725 = select i1 %724, i32 -2147483648, i32 2147483647
  %726 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %723, i32 %715) #14
  %727 = extractvalue { i32, i1 } %726, 1
  %728 = extractvalue { i32, i1 } %726, 0
  %729 = select i1 %727, i32 %725, i32 %728, !prof !3
  br label %730

730:                                              ; preds = %688, %716
  %731 = phi i32 [ %729, %716 ], [ %705, %688 ]
  %732 = lshr i160 %646, 102
  %733 = trunc i160 %732 to i8
  %734 = and i8 %733, 3
  br i1 %655, label %735, label %742

735:                                              ; preds = %730
  %736 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %645, i64 0, i32 2, i32 0, i32 0
  %737 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %736, align 8
  %738 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %737, i64 0, i32 13
  %739 = bitcast [3 x i8]* %738 to i24*
  %740 = load i24, i24* %739, align 8
  %741 = icmp slt i24 %740, 0
  br i1 %741, label %749, label %756

742:                                              ; preds = %730
  %743 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %645, i64 0, i32 12
  %744 = load i16, i16* %743, align 4
  %745 = lshr i16 %744, 5
  %746 = and i16 %745, 2
  %747 = or i16 %746, 1
  %748 = icmp eq i16 %747, 3
  br i1 %748, label %749, label %756

749:                                              ; preds = %742, %735
  switch i8 %734, label %758 [
    i8 0, label %750
    i8 2, label %753
    i8 1, label %753
  ]

750:                                              ; preds = %749
  %751 = and i160 %646, 41538374868278621028243970633760768
  %752 = icmp eq i160 %751, 0
  br i1 %752, label %762, label %764

753:                                              ; preds = %749, %749
  %754 = and i160 %646, 41538374868278621028243970633760768
  %755 = icmp eq i160 %754, 0
  br i1 %755, label %758, label %760

756:                                              ; preds = %742, %735
  %757 = zext i8 %734 to i32
  switch i32 %757, label %766 [
    i32 0, label %758
    i32 3, label %760
    i32 2, label %762
    i32 1, label %764
  ]

758:                                              ; preds = %756, %753, %749
  %759 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 0, i32 0
  br label %767

760:                                              ; preds = %756, %753
  %761 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 2, i32 0
  br label %767

762:                                              ; preds = %756, %750
  %763 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 3, i32 0
  br label %767

764:                                              ; preds = %756, %750
  %765 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 10, i32 1, i32 0
  br label %767

766:                                              ; preds = %756
  unreachable

767:                                              ; preds = %758, %760, %762, %764
  %768 = phi i32* [ %765, %764 ], [ %763, %762 ], [ %761, %760 ], [ %759, %758 ]
  %769 = load i32, i32* %768, align 4
  %770 = load i32, i32* %337, align 4
  %771 = icmp slt i32 %769, 0
  %772 = select i1 %771, i32 -2147483648, i32 2147483647
  %773 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %770, i32 %769) #14
  %774 = extractvalue { i32, i1 } %773, 1
  %775 = extractvalue { i32, i1 } %773, 0
  %776 = select i1 %774, i32 %772, i32 %775, !prof !3
  %777 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %362, i64 0, i32 14
  %778 = bitcast %"class.blink::LayoutPoint"* %777 to i64*
  %779 = zext i32 %776 to i64
  %780 = shl nuw i64 %779, 32
  %781 = zext i32 %731 to i64
  %782 = or i64 %780, %781
  store i64 %782, i64* %778, align 4
  %783 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %652, align 8
  %784 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %783, i64 0, i32 0, i32 9
  %785 = bitcast [20 x i8]* %784 to i160*
  %786 = load i160, i160* %785, align 8
  %787 = and i160 %786, 15211807202738752817960438464512
  %788 = icmp eq i160 %787, 0
  %789 = lshr i160 %786, 32
  %790 = trunc i160 %789 to i32
  %791 = and i32 %790, 30
  %792 = or i32 %791, 1
  %793 = icmp eq i32 %792, 15
  %794 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %783, i64 0, i32 0, i32 3, i32 0, i32 0
  %795 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %794, align 8
  br i1 %793, label %796, label %804

796:                                              ; preds = %767
  %797 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %795, i64 0, i32 2, i32 0, i32 0
  %798 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %797, align 8
  %799 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %798, i64 0, i32 13
  %800 = bitcast [3 x i8]* %799 to i24*
  %801 = load i24, i24* %800, align 8
  %802 = icmp slt i24 %801, 0
  %803 = xor i1 %788, %802
  br i1 %802, label %812, label %816

804:                                              ; preds = %767
  %805 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %795, i64 0, i32 12
  %806 = load i16, i16* %805, align 4
  %807 = lshr i16 %806, 5
  %808 = and i16 %807, 2
  %809 = or i16 %808, 1
  %810 = icmp eq i16 %809, 3
  %811 = xor i1 %788, %810
  br i1 %810, label %812, label %819

812:                                              ; preds = %804, %796
  %813 = phi i1 [ %811, %804 ], [ %803, %796 ]
  %814 = and i160 %786, 5070602400912917605986812821504
  %815 = icmp eq i160 %814, 0
  br label %828

816:                                              ; preds = %796
  %817 = and i160 %786, 324518553658426726783156020576256
  %818 = icmp ne i160 %817, 0
  br label %822

819:                                              ; preds = %804
  %820 = and i16 %806, 96
  %821 = icmp eq i16 %820, 32
  br label %822

822:                                              ; preds = %819, %816
  %823 = phi i1 [ %811, %819 ], [ %803, %816 ]
  %824 = phi i1 [ %821, %819 ], [ %818, %816 ]
  %825 = and i160 %786, 41538374868278621028243970633760768
  %826 = icmp eq i160 %825, 0
  %827 = xor i1 %826, %824
  br label %828

828:                                              ; preds = %812, %822
  %829 = phi i1 [ %813, %812 ], [ %823, %822 ]
  %830 = phi i1 [ %815, %812 ], [ %827, %822 ]
  %831 = select i1 %830, %"class.blink::LayoutUnit"* %692, %"class.blink::LayoutUnit"* %691
  %832 = select i1 %830, %"class.blink::LayoutUnit"* %695, %"class.blink::LayoutUnit"* %694
  %833 = select i1 %829, %"class.blink::LayoutUnit"* %831, %"class.blink::LayoutUnit"* %832
  %834 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %833, i64 0, i32 0
  %835 = load i32, i32* %834, align 4
  %836 = icmp slt i32 %835, 0
  %837 = select i1 %836, i32 -2147483648, i32 2147483647
  %838 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %715, i32 %835) #14
  %839 = extractvalue { i32, i1 } %838, 1
  %840 = extractvalue { i32, i1 } %838, 0
  %841 = select i1 %839, i32 %837, i32 %840, !prof !3
  %842 = icmp slt i32 %841, 0
  %843 = select i1 %842, i32 -2147483648, i32 2147483647
  %844 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %705, i32 %841) #14
  %845 = extractvalue { i32, i1 } %844, 1
  %846 = extractvalue { i32, i1 } %844, 0
  %847 = select i1 %845, i32 %843, i32 %846, !prof !3
  %848 = load i32, i32* %22, align 4
  %849 = load i32, i32* %24, align 8
  %850 = sub i32 %848, %849
  %851 = add i32 %850, -1
  %852 = zext i32 %851 to i64
  %853 = icmp eq i64 %357, %852
  br i1 %853, label %878, label %854

854:                                              ; preds = %828
  %855 = call i32 @_ZN5blink19FlexLayoutAlgorithm39ContentDistributionSpaceBetweenChildrenENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(i32 %83, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %6, i32 %850)
  %856 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %8, align 8
  %857 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %856, i64 0, i32 0, i32 0
  %858 = load i32, i32* %857, align 4
  %859 = icmp slt i32 %858, 0
  %860 = select i1 %859, i32 -2147483648, i32 2147483647
  %861 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %855, i32 %858) #14
  %862 = extractvalue { i32, i1 } %861, 1
  %863 = extractvalue { i32, i1 } %861, 0
  %864 = select i1 %862, i32 %860, i32 %863, !prof !3
  %865 = icmp slt i32 %864, 0
  %866 = select i1 %865, i32 -2147483648, i32 2147483647
  %867 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %847, i32 %864) #14
  %868 = extractvalue { i32, i1 } %867, 1
  %869 = extractvalue { i32, i1 } %867, 0
  %870 = select i1 %868, i32 %866, i32 %869, !prof !3
  %871 = load i32, i32* %88, align 4
  %872 = icmp slt i32 %855, 0
  %873 = select i1 %872, i32 -2147483648, i32 2147483647
  %874 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %871, i32 %855) #14
  %875 = extractvalue { i32, i1 } %874, 1
  %876 = extractvalue { i32, i1 } %874, 0
  %877 = select i1 %875, i32 %873, i32 %876, !prof !3
  store i32 %877, i32* %88, align 4
  br label %878

878:                                              ; preds = %828, %854
  %879 = phi i32 [ %847, %828 ], [ %870, %854 ]
  %880 = add nuw nsw i64 %357, 1
  %881 = zext i32 %850 to i64
  %882 = icmp ult i64 %880, %881
  br i1 %882, label %353, label %338
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %3 = bitcast [20 x i8]* %2 to i160*
  %4 = load i160, i160* %3, align 8
  %5 = lshr i160 %4, 32
  %6 = trunc i160 %5 to i32
  %7 = and i32 %6, 30
  %8 = or i32 %7, 1
  %9 = icmp eq i32 %8, 15
  br i1 %9, label %10, label %29

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %14, i64 0, i32 13
  %16 = bitcast [3 x i8]* %15 to i24*
  %17 = load i24, i24* %16, align 8
  %18 = lshr i24 %17, 20
  %19 = and i24 %18, 3
  %20 = zext i24 %19 to i64
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i24 %17, -1
  %24 = and i160 %4, 324518553658426726783156020576256
  %25 = icmp ne i160 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %27, label %41

27:                                               ; preds = %10
  switch i32 %22, label %40 [
    i32 7, label %41
    i32 6, label %28
  ]

28:                                               ; preds = %27
  br label %41

29:                                               ; preds = %1
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %46, !prof !5

32:                                               ; preds = %29
  %33 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %32
  %36 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %37 = and i16 %36, -512
  %38 = or i16 %37, 64
  store i16 %38, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %39 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  br label %46

40:                                               ; preds = %27
  br label %41

41:                                               ; preds = %10, %27, %40, %28
  %42 = phi i32 [ %22, %40 ], [ 6, %27 ], [ 7, %28 ], [ %22, %10 ]
  %43 = and i24 %17, 3145728
  %44 = icmp eq i24 %43, 1048576
  %45 = zext i1 %44 to i32
  br label %62

46:                                               ; preds = %29, %32, %35
  %47 = tail call i32 @_ZNK5blink13ComputedStyle30ResolvedJustifyContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %0, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %48 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %58, !prof !5

50:                                               ; preds = %46
  %51 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %55 = and i16 %54, -512
  %56 = or i16 %55, 64
  store i16 %56, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %57 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  br label %58

58:                                               ; preds = %46, %50, %53
  %59 = tail call i32 @_ZNK5blink13ComputedStyle34ResolvedJustifyContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %0, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %60, align 8
  br label %62

62:                                               ; preds = %58, %41
  %63 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %12, %41 ], [ %61, %58 ]
  %64 = phi i32 [ %42, %41 ], [ %47, %58 ]
  %65 = phi i32 [ %45, %41 ], [ %59, %58 ]
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %63, i64 0, i32 11, i32 0
  %67 = load i16, i16* %66, align 4
  %68 = and i16 %67, 384
  %69 = xor i1 %9, true
  %70 = icmp eq i32 %65, 4
  %71 = and i1 %70, %69
  %72 = trunc i32 %64 to i16
  %73 = and i16 %72, 15
  %74 = trunc i32 %65 to i16
  %75 = shl i16 %74, 4
  %76 = and i16 %75, 112
  %77 = or i16 %76, %73
  %78 = select i1 %71, i16 6, i16 %77
  %79 = or i16 %78, %68
  %80 = zext i16 %79 to i32
  ret i32 %80
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32, %"class.blink::StyleContentAlignmentData"* nocapture readonly dereferenceable(4), i32) local_unnamed_addr #3 align 2 {
  %5 = icmp slt i32 %1, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = lshr i160 %9, 32
  %11 = trunc i160 %10 to i32
  %12 = and i32 %11, 30
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 15
  br i1 %14, label %108, label %15

15:                                               ; preds = %6, %4
  %16 = getelementptr inbounds %"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* %2, i64 0, i32 0
  %17 = load i16, i16* %16, align 4
  %18 = and i16 %17, 15
  %19 = zext i16 %18 to i32
  switch i32 %19, label %30 [
    i32 7, label %108
    i32 3, label %20
  ]

20:                                               ; preds = %15
  %21 = sdiv i32 %1, 2
  %22 = sext i32 %21 to i64
  %23 = tail call i1 @llvm.is.constant.i64(i64 %22) #14
  br i1 %23, label %108, label %24

24:                                               ; preds = %20
  %25 = icmp slt i32 %1, -1
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = add nsw i64 %22, 2147483648
  %28 = icmp ult i64 %27, 4294967296
  %29 = select i1 %28, i32 %21, i32 %26, !prof !2
  br label %108

30:                                               ; preds = %15
  %31 = lshr i16 %17, 4
  %32 = and i16 %31, 7
  %33 = zext i16 %32 to i32
  switch i32 %33, label %108 [
    i32 2, label %34
    i32 3, label %71
  ]

34:                                               ; preds = %30
  %35 = icmp sgt i32 %1, 0
  %36 = icmp ne i32 %3, 0
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %61

38:                                               ; preds = %34
  %39 = shl i32 %3, 1
  %40 = icmp ugt i32 %39, 33554430
  %41 = shl i32 %3, 7
  %42 = select i1 %40, i32 2147483647, i32 %41
  %43 = sext i32 %1 to i64
  %44 = shl nsw i64 %43, 6
  %45 = sext i32 %42 to i64
  %46 = sdiv i64 %44, %45
  %47 = tail call i1 @llvm.is.constant.i64(i64 %46) #14
  br i1 %47, label %55, label %48

48:                                               ; preds = %38
  %49 = icmp slt i64 %46, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = add nsw i64 %46, 2147483648
  %52 = icmp ult i64 %51, 4294967296
  %53 = trunc i64 %46 to i32
  %54 = select i1 %52, i32 %53, i32 %50, !prof !2
  br label %108

55:                                               ; preds = %38
  %56 = icmp sgt i64 %46, 2147483647
  br i1 %56, label %108, label %57

57:                                               ; preds = %55
  %58 = icmp sgt i64 %46, -2147483648
  %59 = select i1 %58, i64 %46, i64 -2147483648
  %60 = trunc i64 %59 to i32
  br label %108

61:                                               ; preds = %34
  %62 = sdiv i32 %1, 2
  %63 = sext i32 %62 to i64
  %64 = tail call i1 @llvm.is.constant.i64(i64 %63) #14
  br i1 %64, label %108, label %65

65:                                               ; preds = %61
  %66 = icmp slt i32 %1, -1
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = add nsw i64 %63, 2147483648
  %69 = icmp ult i64 %68, 4294967296
  %70 = select i1 %69, i32 %62, i32 %67, !prof !2
  br label %108

71:                                               ; preds = %30
  %72 = icmp sgt i32 %1, 0
  %73 = icmp ne i32 %3, 0
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %98

75:                                               ; preds = %71
  %76 = add i32 %3, 1
  %77 = icmp ugt i32 %76, 33554430
  %78 = shl i32 %76, 6
  %79 = select i1 %77, i32 2147483647, i32 %78
  %80 = sext i32 %1 to i64
  %81 = shl nsw i64 %80, 6
  %82 = sext i32 %79 to i64
  %83 = sdiv i64 %81, %82
  %84 = tail call i1 @llvm.is.constant.i64(i64 %83) #14
  br i1 %84, label %92, label %85

85:                                               ; preds = %75
  %86 = icmp slt i64 %83, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = add nsw i64 %83, 2147483648
  %89 = icmp ult i64 %88, 4294967296
  %90 = trunc i64 %83 to i32
  %91 = select i1 %89, i32 %90, i32 %87, !prof !2
  br label %108

92:                                               ; preds = %75
  %93 = icmp sgt i64 %83, 2147483647
  br i1 %93, label %108, label %94

94:                                               ; preds = %92
  %95 = icmp sgt i64 %83, -2147483648
  %96 = select i1 %95, i64 %83, i64 -2147483648
  %97 = trunc i64 %96 to i32
  br label %108

98:                                               ; preds = %71
  %99 = sdiv i32 %1, 2
  %100 = sext i32 %99 to i64
  %101 = tail call i1 @llvm.is.constant.i64(i64 %100) #14
  br i1 %101, label %108, label %102

102:                                              ; preds = %98
  %103 = icmp slt i32 %1, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = add nsw i64 %100, 2147483648
  %106 = icmp ult i64 %105, 4294967296
  %107 = select i1 %106, i32 %99, i32 %104, !prof !2
  br label %108

108:                                              ; preds = %98, %61, %20, %30, %15, %102, %94, %92, %85, %65, %57, %55, %48, %24, %6
  %109 = phi i32 [ 0, %6 ], [ %1, %15 ], [ %29, %24 ], [ %54, %48 ], [ %60, %57 ], [ 2147483647, %55 ], [ %70, %65 ], [ %91, %85 ], [ %97, %94 ], [ 2147483647, %92 ], [ %107, %102 ], [ 0, %30 ], [ %21, %20 ], [ %62, %61 ], [ %99, %98 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm11IsNGFlexBoxEv(%"class.blink::FlexLayoutAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4
  %3 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZNK3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %2, i32 0)
  %4 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %3, i64 0, i32 19, i32 0, i32 0
  %5 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  %6 = icmp ne %"class.blink::LayoutBox"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm39ContentDistributionSpaceBetweenChildrenENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(i32, %"class.blink::StyleContentAlignmentData"* nocapture readonly dereferenceable(4), i32) local_unnamed_addr #3 align 2 {
  %4 = icmp sgt i32 %0, 0
  %5 = icmp ugt i32 %2, 1
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %81

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* %1, i64 0, i32 0
  %9 = load i16, i16* %8, align 4
  %10 = lshr i16 %9, 4
  %11 = and i16 %10, 7
  %12 = zext i16 %11 to i32
  switch i32 %12, label %81 [
    i32 1, label %13
    i32 2, label %36
    i32 4, label %36
    i32 3, label %58
  ]

13:                                               ; preds = %7
  %14 = add i32 %2, -1
  %15 = icmp ugt i32 %14, 33554430
  %16 = shl i32 %14, 6
  %17 = select i1 %15, i32 2147483647, i32 %16
  %18 = sext i32 %0 to i64
  %19 = shl nsw i64 %18, 6
  %20 = sext i32 %17 to i64
  %21 = sdiv i64 %19, %20
  %22 = tail call i1 @llvm.is.constant.i64(i64 %21) #14
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = icmp slt i64 %21, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = add nsw i64 %21, 2147483648
  %27 = icmp ult i64 %26, 4294967296
  %28 = trunc i64 %21 to i32
  %29 = select i1 %27, i32 %28, i32 %25, !prof !2
  br label %81

30:                                               ; preds = %13
  %31 = icmp sgt i64 %21, 2147483647
  br i1 %31, label %81, label %32

32:                                               ; preds = %30
  %33 = icmp sgt i64 %21, -2147483648
  %34 = select i1 %33, i64 %21, i64 -2147483648
  %35 = trunc i64 %34 to i32
  br label %81

36:                                               ; preds = %7, %7
  %37 = icmp ugt i32 %2, 33554430
  %38 = shl i32 %2, 6
  %39 = select i1 %37, i32 2147483647, i32 %38
  %40 = sext i32 %0 to i64
  %41 = shl nsw i64 %40, 6
  %42 = sext i32 %39 to i64
  %43 = sdiv i64 %41, %42
  %44 = tail call i1 @llvm.is.constant.i64(i64 %43) #14
  br i1 %44, label %52, label %45

45:                                               ; preds = %36
  %46 = icmp slt i64 %43, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = add nsw i64 %43, 2147483648
  %49 = icmp ult i64 %48, 4294967296
  %50 = trunc i64 %43 to i32
  %51 = select i1 %49, i32 %50, i32 %47, !prof !2
  br label %81

52:                                               ; preds = %36
  %53 = icmp sgt i64 %43, 2147483647
  br i1 %53, label %81, label %54

54:                                               ; preds = %52
  %55 = icmp sgt i64 %43, -2147483648
  %56 = select i1 %55, i64 %43, i64 -2147483648
  %57 = trunc i64 %56 to i32
  br label %81

58:                                               ; preds = %7
  %59 = add i32 %2, 1
  %60 = icmp ugt i32 %59, 33554430
  %61 = shl i32 %59, 6
  %62 = select i1 %60, i32 2147483647, i32 %61
  %63 = sext i32 %0 to i64
  %64 = shl nsw i64 %63, 6
  %65 = sext i32 %62 to i64
  %66 = sdiv i64 %64, %65
  %67 = tail call i1 @llvm.is.constant.i64(i64 %66) #14
  br i1 %67, label %75, label %68

68:                                               ; preds = %58
  %69 = icmp slt i64 %66, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = add nsw i64 %66, 2147483648
  %72 = icmp ult i64 %71, 4294967296
  %73 = trunc i64 %66 to i32
  %74 = select i1 %72, i32 %73, i32 %70, !prof !2
  br label %81

75:                                               ; preds = %58
  %76 = icmp sgt i64 %66, 2147483647
  br i1 %76, label %81, label %77

77:                                               ; preds = %75
  %78 = icmp sgt i64 %66, -2147483648
  %79 = select i1 %78, i64 %66, i64 -2147483648
  %80 = trunc i64 %79 to i32
  br label %81

81:                                               ; preds = %7, %3, %77, %75, %68, %54, %52, %45, %32, %30, %23
  %82 = phi i32 [ %29, %23 ], [ %35, %32 ], [ 2147483647, %30 ], [ %51, %45 ], [ %57, %54 ], [ 2147483647, %52 ], [ %74, %68 ], [ %80, %77 ], [ 2147483647, %75 ], [ 0, %3 ], [ 0, %7 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm15GapBetweenItemsERKNS_13ComputedStyleENS_11LogicalSizeE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i64) local_unnamed_addr #0 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 32
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 30
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 15
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %14, align 8
  br i1 %13, label %16, label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 13
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 8
  %22 = icmp slt i24 %21, 0
  %23 = bitcast %"class.blink::ComputedStyle"* %0 to %"class.blink::ComputedStyleBase"*
  br i1 %22, label %32, label %73

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 12
  %26 = load i16, i16* %25, align 4
  %27 = lshr i16 %26, 5
  %28 = and i16 %27, 2
  %29 = or i16 %28, 1
  %30 = icmp eq i16 %29, 3
  %31 = bitcast %"class.blink::ComputedStyle"* %0 to %"class.blink::ComputedStyleBase"*
  br i1 %30, label %32, label %73

32:                                               ; preds = %16, %24
  %33 = phi %"class.blink::ComputedStyleBase"* [ %23, %16 ], [ %31, %24 ]
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %114, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %69, !prof !2

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %50 = load i8, i8* %49, align 2, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::Length"* %44 to float*
  %54 = load float, float* %53, align 4
  br label %59

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to float
  br label %59

59:                                               ; preds = %55, %52
  %60 = phi float [ %54, %52 ], [ %58, %55 ]
  %61 = fmul float %60, 6.400000e+01
  %62 = fcmp ult float %61, 0xC1E0000000000000
  %63 = fcmp ugt float %61, 0x41DFFFFFE0000000
  %64 = fcmp ogt float %61, 0xC1E0000000000000
  %65 = select i1 %64, float %61, float 0xC1E0000000000000
  %66 = fptosi float %65 to i32
  %67 = select i1 %62, i32 0, i32 2147483647
  %68 = select i1 %63, i32 %67, i32 %66
  br label %114

69:                                               ; preds = %43
  %70 = icmp eq i32 %5, -64
  %71 = select i1 %70, i32 0, i32 %5
  %72 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %44, i32 %71) #14
  br label %114

73:                                               ; preds = %16, %24
  %74 = phi %"class.blink::ComputedStyleBase"* [ %23, %16 ], [ %31, %24 ]
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %74, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 4, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %114, label %84

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 2
  br i1 %88, label %89, label %110, !prof !2

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %91 = load i8, i8* %90, align 2, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::Length"* %85 to float*
  %95 = load float, float* %94, align 4
  br label %100

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = sitofp i32 %98 to float
  br label %100

100:                                              ; preds = %96, %93
  %101 = phi float [ %95, %93 ], [ %99, %96 ]
  %102 = fmul float %101, 6.400000e+01
  %103 = fcmp ult float %102, 0xC1E0000000000000
  %104 = fcmp ugt float %102, 0x41DFFFFFE0000000
  %105 = fcmp ogt float %102, 0xC1E0000000000000
  %106 = select i1 %105, float %102, float 0xC1E0000000000000
  %107 = fptosi float %106 to i32
  %108 = select i1 %103, i32 0, i32 2147483647
  %109 = select i1 %104, i32 %108, i32 %107
  br label %114

110:                                              ; preds = %84
  %111 = icmp eq i32 %3, -64
  %112 = select i1 %111, i32 0, i32 %3
  %113 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %85, i32 %112) #14
  br label %114

114:                                              ; preds = %32, %73, %110, %100, %69, %59
  %115 = phi i32 [ %68, %59 ], [ %72, %69 ], [ 0, %32 ], [ %109, %100 ], [ %113, %110 ], [ 0, %73 ]
  ret i32 %115
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19FlexLayoutAlgorithm12IsColumnFlowERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %3 = bitcast [20 x i8]* %2 to i160*
  %4 = load i160, i160* %3, align 8
  %5 = lshr i160 %4, 32
  %6 = trunc i160 %5 to i32
  %7 = and i32 %6, 30
  %8 = or i32 %7, 1
  %9 = icmp eq i32 %8, 15
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %10, align 8
  br i1 %9, label %12, label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %11, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %14, i64 0, i32 13
  %16 = bitcast [3 x i8]* %15 to i24*
  %17 = load i24, i24* %16, align 8
  %18 = icmp slt i24 %17, 0
  br label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %11, i64 0, i32 12
  %21 = load i16, i16* %20, align 4
  %22 = lshr i16 %21, 5
  %23 = and i16 %22, 2
  %24 = or i16 %23, 1
  %25 = icmp eq i16 %24, 3
  br label %26

26:                                               ; preds = %19, %12
  %27 = phi i1 [ %18, %12 ], [ %25, %19 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm15GapBetweenLinesERKNS_13ComputedStyleENS_11LogicalSizeE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i64) local_unnamed_addr #0 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 32
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 30
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 15
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %14, align 8
  br i1 %13, label %16, label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 13
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 8
  %22 = icmp slt i24 %21, 0
  %23 = bitcast %"class.blink::ComputedStyle"* %0 to %"class.blink::ComputedStyleBase"*
  br i1 %22, label %73, label %32

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 12
  %26 = load i16, i16* %25, align 4
  %27 = lshr i16 %26, 5
  %28 = and i16 %27, 2
  %29 = or i16 %28, 1
  %30 = icmp eq i16 %29, 3
  %31 = bitcast %"class.blink::ComputedStyle"* %0 to %"class.blink::ComputedStyleBase"*
  br i1 %30, label %73, label %32

32:                                               ; preds = %16, %24
  %33 = phi %"class.blink::ComputedStyleBase"* [ %23, %16 ], [ %31, %24 ]
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %114, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %69, !prof !2

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %39, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %50 = load i8, i8* %49, align 2, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::Length"* %44 to float*
  %54 = load float, float* %53, align 4
  br label %59

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to float
  br label %59

59:                                               ; preds = %55, %52
  %60 = phi float [ %54, %52 ], [ %58, %55 ]
  %61 = fmul float %60, 6.400000e+01
  %62 = fcmp ult float %61, 0xC1E0000000000000
  %63 = fcmp ugt float %61, 0x41DFFFFFE0000000
  %64 = fcmp ogt float %61, 0xC1E0000000000000
  %65 = select i1 %64, float %61, float 0xC1E0000000000000
  %66 = fptosi float %65 to i32
  %67 = select i1 %62, i32 0, i32 2147483647
  %68 = select i1 %63, i32 %67, i32 %66
  br label %114

69:                                               ; preds = %43
  %70 = icmp eq i32 %5, -64
  %71 = select i1 %70, i32 0, i32 %5
  %72 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %44, i32 %71) #14
  br label %114

73:                                               ; preds = %16, %24
  %74 = phi %"class.blink::ComputedStyleBase"* [ %23, %16 ], [ %31, %24 ]
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %74, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 4, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %114, label %84

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 2
  br i1 %88, label %89, label %110, !prof !2

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %80, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %91 = load i8, i8* %90, align 2, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::Length"* %85 to float*
  %95 = load float, float* %94, align 4
  br label %100

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = sitofp i32 %98 to float
  br label %100

100:                                              ; preds = %96, %93
  %101 = phi float [ %95, %93 ], [ %99, %96 ]
  %102 = fmul float %101, 6.400000e+01
  %103 = fcmp ult float %102, 0xC1E0000000000000
  %104 = fcmp ugt float %102, 0x41DFFFFFE0000000
  %105 = fcmp ogt float %102, 0xC1E0000000000000
  %106 = select i1 %105, float %102, float 0xC1E0000000000000
  %107 = fptosi float %106 to i32
  %108 = select i1 %103, i32 0, i32 2147483647
  %109 = select i1 %104, i32 %108, i32 %107
  br label %114

110:                                              ; preds = %84
  %111 = icmp eq i32 %3, -64
  %112 = select i1 %111, i32 0, i32 %3
  %113 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %85, i32 %112) #14
  br label %114

114:                                              ; preds = %73, %32, %110, %100, %69, %59
  %115 = phi i32 [ %68, %59 ], [ %72, %69 ], [ 0, %32 ], [ %109, %100 ], [ %113, %110 ], [ 0, %73 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FlexLayoutAlgorithmC2EPKNS_13ComputedStyleENS_10LayoutUnitENS_11LogicalSizeEPNS_8DocumentE(%"class.blink::FlexLayoutAlgorithm"*, %"class.blink::ComputedStyle"*, i32, i64, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm15GapBetweenItemsERKNS_13ComputedStyleENS_11LogicalSizeE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i64 %3)
  %7 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm15GapBetweenLinesERKNS_13ComputedStyleENS_11LogicalSizeE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i64 %3)
  %9 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 1, i32 0
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  store %"class.blink::ComputedStyle"* %1, %"class.blink::ComputedStyle"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %14 = bitcast %"class.WTF::Vector.1631"* %12 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = bitcast %"class.WTF::Vector.1636"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %24, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %24, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 4, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %28, %5
  %33 = icmp eq %"class.blink::Document"* %4, null
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 2
  %35 = select i1 %33, %"class.blink::UseCounter"* null, %"class.blink::UseCounter"* %34
  %36 = icmp eq %"class.blink::UseCounter"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::UseCounter"* %35 to void (%"class.blink::UseCounter"*, i32)***
  %39 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %39, i64 3
  %41 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %40, align 8
  tail call void %41(%"class.blink::UseCounter"* nonnull %35, i32 3307) #14
  br label %42

42:                                               ; preds = %32, %37
  %43 = load i32, i32* %7, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = load i32, i32* %9, align 4
  %47 = icmp eq i32 %46, 0
  %48 = or i1 %36, %47
  br i1 %48, label %55, label %50

49:                                               ; preds = %42
  br i1 %36, label %55, label %50

50:                                               ; preds = %45, %49
  %51 = bitcast %"class.blink::UseCounter"* %35 to void (%"class.blink::UseCounter"*, i32)***
  %52 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %52, i64 3
  %54 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %53, align 8
  tail call void %54(%"class.blink::UseCounter"* nonnull %35, i32 3308) #14
  br label %55

55:                                               ; preds = %28, %45, %50, %49
  %56 = load i8, i8* %25, align 4, !range !4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %79, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %24, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %60 = load i8, i8* %59, align 1
  switch i8 %60, label %79 [
    i8 8, label %61
    i8 1, label %61
  ]

61:                                               ; preds = %58, %58
  %62 = icmp eq %"class.blink::Document"* %4, null
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 2
  %64 = icmp eq %"class.blink::UseCounter"* %63, null
  %65 = or i1 %62, %64
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.blink::UseCounter"* %63 to void (%"class.blink::UseCounter"*, i32)***
  %68 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %68, i64 3
  %70 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %69, align 8
  tail call void %70(%"class.blink::UseCounter"* nonnull %63, i32 3290) #14
  %71 = and i64 %3, -4294967296
  %72 = icmp ne i64 %71, -274877906944
  %73 = or i1 %72, %65
  br i1 %73, label %79, label %74

74:                                               ; preds = %66
  %75 = bitcast %"class.blink::UseCounter"* %63 to void (%"class.blink::UseCounter"*, i32)***
  %76 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %76, i64 3
  %78 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %77, align 8
  tail call void %78(%"class.blink::UseCounter"* nonnull %63, i32 3291) #14
  br label %79

79:                                               ; preds = %61, %55, %66, %58, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FlexLine"* @_ZN5blink19FlexLayoutAlgorithm19ComputeNextFlexLineENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp ult i64 %4, %8
  br i1 %9, label %10, label %330

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  %14 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  br label %16

16:                                               ; preds = %10, %284
  %17 = phi i64 [ %4, %10 ], [ %309, %284 ]
  %18 = phi i8 [ 0, %10 ], [ 1, %284 ]
  %19 = phi i32 [ 0, %10 ], [ %203, %284 ]
  %20 = phi double [ 0.000000e+00, %10 ], [ %236, %284 ]
  %21 = phi i32 [ 0, %10 ], [ %305, %284 ]
  %22 = phi <2 x double> [ zeroinitializer, %10 ], [ %244, %284 ]
  %23 = trunc i64 %17 to i32
  %24 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %5, i32 %23) #14
  %25 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %27, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = and i16 %29, 384
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 8, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 0
  %36 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %36, i64 0, i32 2
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %42, align 8
  %44 = and i160 %41, 15211807202738752817960438464512
  %45 = lshr i160 %41, 32
  %46 = trunc i160 %45 to i32
  %47 = and i32 %46, 30
  br label %130

48:                                               ; preds = %16
  %49 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 7, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 8, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %52) #14
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !3
  %59 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 0
  %60 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %60, i64 0, i32 2
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = and i160 %65, 15211807202738752817960438464512
  %67 = icmp eq i160 %66, 0
  %68 = lshr i160 %65, 32
  %69 = trunc i160 %68 to i32
  %70 = and i32 %69, 30
  %71 = or i32 %70, 1
  %72 = icmp eq i32 %71, 15
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  br i1 %72, label %75, label %82

75:                                               ; preds = %48
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %77, i64 0, i32 13
  %79 = bitcast [3 x i8]* %78 to i24*
  %80 = load i24, i24* %79, align 8
  %81 = icmp slt i24 %80, 0
  br label %89

82:                                               ; preds = %48
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 12
  %84 = load i16, i16* %83, align 4
  %85 = lshr i16 %84, 5
  %86 = and i16 %85, 2
  %87 = or i16 %86, 1
  %88 = icmp eq i16 %87, 3
  br label %89

89:                                               ; preds = %82, %75
  %90 = phi i1 [ %81, %75 ], [ %88, %82 ]
  %91 = xor i1 %67, %90
  br i1 %91, label %92, label %100

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 3, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 1, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %96) #14
  br label %108

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 2, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %104, 0
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %102, i32 %104) #14
  br label %108

108:                                              ; preds = %92, %100
  %109 = phi { i32, i1 } [ %99, %92 ], [ %107, %100 ]
  %110 = phi i32 [ %98, %92 ], [ %106, %100 ]
  %111 = extractvalue { i32, i1 } %109, 1
  %112 = extractvalue { i32, i1 } %109, 0
  %113 = select i1 %111, i32 %110, i32 %112
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %113) #14
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !3
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %119) #14
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !3
  %126 = load i32, i32* %13, align 4
  %127 = icmp sle i32 %125, %126
  %128 = icmp eq i8 %18, 0
  %129 = or i1 %128, %127
  br i1 %129, label %130, label %313

130:                                              ; preds = %32, %108
  %131 = phi i32 [ %47, %32 ], [ %70, %108 ]
  %132 = phi i160 [ %44, %32 ], [ %66, %108 ]
  %133 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %43, %32 ], [ %74, %108 ]
  %134 = phi i32 [ %34, %32 ], [ %52, %108 ]
  %135 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 4, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp slt i32 %134, 0
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %134) #14
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !3
  %143 = icmp eq i160 %132, 0
  %144 = or i32 %131, 1
  %145 = icmp eq i32 %144, 15
  br i1 %145, label %146, label %153

146:                                              ; preds = %130
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %133, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %148, i64 0, i32 13
  %150 = bitcast [3 x i8]* %149 to i24*
  %151 = load i24, i24* %150, align 8
  %152 = icmp slt i24 %151, 0
  br label %160

153:                                              ; preds = %130
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %133, i64 0, i32 12
  %155 = load i16, i16* %154, align 4
  %156 = lshr i16 %155, 5
  %157 = and i16 %156, 2
  %158 = or i16 %157, 1
  %159 = icmp eq i16 %158, 3
  br label %160

160:                                              ; preds = %153, %146
  %161 = phi i1 [ %152, %146 ], [ %159, %153 ]
  %162 = xor i1 %143, %161
  br i1 %162, label %163, label %171

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 3, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 1, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %167, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %165, i32 %167) #14
  br label %179

171:                                              ; preds = %160
  %172 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 2, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp slt i32 %175, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %173, i32 %175) #14
  br label %179

179:                                              ; preds = %163, %171
  %180 = phi { i32, i1 } [ %170, %163 ], [ %178, %171 ]
  %181 = phi i32 [ %169, %163 ], [ %177, %171 ]
  %182 = extractvalue { i32, i1 } %180, 1
  %183 = extractvalue { i32, i1 } %180, 0
  %184 = select i1 %182, i32 %181, i32 %183
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %142, i32 %184) #14
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !3
  %191 = load i32, i32* %14, align 4
  %192 = icmp slt i32 %191, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %190, i32 %191) #14
  %195 = extractvalue { i32, i1 } %194, 1
  %196 = extractvalue { i32, i1 } %194, 0
  %197 = select i1 %195, i32 %193, i32 %196, !prof !3
  %198 = icmp slt i32 %197, 0
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %197) #14
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !3
  %204 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 3
  %205 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %25, i64 0, i32 9
  %207 = bitcast [20 x i8]* %206 to i160*
  %208 = load i160, i160* %207, align 8
  %209 = lshr i160 %208, 32
  %210 = trunc i160 %209 to i32
  %211 = and i32 %210, 30
  %212 = or i32 %211, 1
  %213 = icmp eq i32 %212, 15
  %214 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %205, i64 0, i32 0, i32 3, i32 0, i32 0
  %215 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %214, align 8
  br i1 %213, label %216, label %226

216:                                              ; preds = %179
  %217 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %215, i64 0, i32 2, i32 0, i32 0
  %218 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %218, i64 0, i32 6
  %220 = load float, float* %219, align 4
  %221 = fcmp ogt float %220, 0.000000e+00
  %222 = select i1 %221, float %220, float 0.000000e+00
  %223 = fpext float %222 to double
  %224 = fadd double %20, %223
  br i1 %221, label %225, label %235

225:                                              ; preds = %216
  br label %235

226:                                              ; preds = %179
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %215, i64 0, i32 8
  %228 = load float, float* %227, align 4
  %229 = fpext float %228 to double
  %230 = fadd double %20, %229
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %215, i64 0, i32 2, i32 0, i32 0
  %232 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %232, i64 0, i32 5
  %234 = load float, float* %233, align 8
  br label %235

235:                                              ; preds = %216, %225, %226
  %236 = phi double [ %230, %226 ], [ %224, %225 ], [ %224, %216 ]
  %237 = phi float [ %234, %226 ], [ %220, %225 ], [ 0.000000e+00, %216 ]
  %238 = sitofp i32 %136 to float
  %239 = fmul float %238, 1.562500e-02
  %240 = fmul float %237, %239
  %241 = insertelement <2 x float> undef, float %237, i32 0
  %242 = insertelement <2 x float> %241, float %240, i32 1
  %243 = fpext <2 x float> %242 to <2 x double>
  %244 = fadd <2 x double> %22, %243
  %245 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 7, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %246, i32 %134) #14
  %248 = extractvalue { i32, i1 } %247, 1
  %249 = extractvalue { i32, i1 } %247, 0
  %250 = select i1 %248, i32 %138, i32 %249, !prof !3
  br i1 %145, label %251, label %258

251:                                              ; preds = %235
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %133, i64 0, i32 2, i32 0, i32 0
  %253 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %253, i64 0, i32 13
  %255 = bitcast [3 x i8]* %254 to i24*
  %256 = load i24, i24* %255, align 8
  %257 = icmp slt i24 %256, 0
  br label %265

258:                                              ; preds = %235
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %133, i64 0, i32 12
  %260 = load i16, i16* %259, align 4
  %261 = lshr i16 %260, 5
  %262 = and i16 %261, 2
  %263 = or i16 %262, 1
  %264 = icmp eq i16 %263, 3
  br label %265

265:                                              ; preds = %258, %251
  %266 = phi i1 [ %257, %251 ], [ %264, %258 ]
  %267 = xor i1 %143, %266
  br i1 %267, label %268, label %276

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 3, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 1, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp slt i32 %272, 0
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %270, i32 %272) #14
  br label %284

276:                                              ; preds = %265
  %277 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 10, i32 2, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = icmp slt i32 %280, 0
  %282 = select i1 %281, i32 -2147483648, i32 2147483647
  %283 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %278, i32 %280) #14
  br label %284

284:                                              ; preds = %276, %268
  %285 = phi { i32, i1 } [ %283, %276 ], [ %275, %268 ]
  %286 = phi i32 [ %282, %276 ], [ %274, %268 ]
  %287 = extractvalue { i32, i1 } %285, 1
  %288 = extractvalue { i32, i1 } %285, 0
  %289 = select i1 %287, i32 %286, i32 %288
  %290 = icmp slt i32 %289, 0
  %291 = select i1 %290, i32 -2147483648, i32 2147483647
  %292 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %250, i32 %289) #14
  %293 = extractvalue { i32, i1 } %292, 1
  %294 = extractvalue { i32, i1 } %292, 0
  %295 = select i1 %293, i32 %291, i32 %294, !prof !3
  %296 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %295, i32 %191) #14
  %297 = extractvalue { i32, i1 } %296, 1
  %298 = extractvalue { i32, i1 } %296, 0
  %299 = select i1 %297, i32 %193, i32 %298, !prof !3
  %300 = icmp slt i32 %299, 0
  %301 = select i1 %300, i32 -2147483648, i32 2147483647
  %302 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %299) #14
  %303 = extractvalue { i32, i1 } %302, 1
  %304 = extractvalue { i32, i1 } %302, 0
  %305 = select i1 %303, i32 %301, i32 %304, !prof !3
  %306 = load i32, i32* %15, align 4
  %307 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 0, i32 1
  store i32 %306, i32* %307, align 8
  %308 = load i64, i64* %3, align 8
  %309 = add i64 %308, 1
  store i64 %309, i64* %3, align 8
  %310 = load i32, i32* %6, align 4
  %311 = zext i32 %310 to i64
  %312 = icmp ult i64 %309, %311
  br i1 %312, label %16, label %313

313:                                              ; preds = %284, %108
  %314 = phi i32 [ %21, %108 ], [ %305, %284 ]
  %315 = phi double [ %20, %108 ], [ %236, %284 ]
  %316 = phi i32 [ %19, %108 ], [ %203, %284 ]
  %317 = phi <2 x double> [ %22, %108 ], [ %244, %284 ]
  %318 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, -1
  %321 = select i1 %320, i32 -2147483648, i32 2147483647
  %322 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %314, i32 %319) #14
  %323 = extractvalue { i32, i1 } %322, 1
  %324 = extractvalue { i32, i1 } %322, 0
  %325 = select i1 %323, i32 %321, i32 %324, !prof !3
  %326 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %316, i32 %319) #14
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %321, i32 %328, !prof !3
  br label %330

330:                                              ; preds = %2, %313
  %331 = phi double [ %315, %313 ], [ 0.000000e+00, %2 ]
  %332 = phi i32 [ %325, %313 ], [ 0, %2 ]
  %333 = phi i32 [ %329, %313 ], [ 0, %2 ]
  %334 = phi <2 x double> [ %317, %313 ], [ zeroinitializer, %2 ]
  %335 = load i64, i64* %3, align 8
  %336 = and i64 %4, 4294967295
  %337 = icmp ugt i64 %335, %336
  br i1 %337, label %338, label %392

338:                                              ; preds = %330
  %339 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5
  %340 = ptrtoint %"class.blink::FlexLayoutAlgorithm"* %0 to i64
  %341 = ptrtoint %"class.WTF::Vector.1631"* %5 to i64
  %342 = shl i64 %335, 32
  %343 = or i64 %342, %336
  %344 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %345 = load i32, i32* %344, align 4
  %346 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %347 = load i32, i32* %346, align 8
  %348 = icmp eq i32 %345, %347
  br i1 %348, label %349, label %371, !prof !3

349:                                              ; preds = %338
  %350 = add i32 %345, 1
  %351 = lshr i32 %345, 2
  %352 = add i32 %350, %351
  %353 = icmp ugt i32 %352, 4
  %354 = select i1 %353, i32 %352, i32 4
  %355 = icmp ugt i32 %354, %350
  %356 = select i1 %355, i32 %354, i32 %350
  %357 = icmp ult i32 %345, %356
  br i1 %357, label %358, label %371, !prof !2

358:                                              ; preds = %349
  %359 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %339, i64 0, i32 0, i32 0, i32 0
  %360 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %359, align 8
  %361 = icmp eq %"class.blink::FlexLine"* %360, null
  br i1 %361, label %362, label %370

362:                                              ; preds = %358
  %363 = zext i32 %356 to i64
  %364 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexLineEEEmm(i64 %363) #14
  %365 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %364, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FlexLineEEEPKcv, i64 0, i64 0)) #14
  %366 = ptrtoint i8* %365 to i64
  %367 = bitcast %"class.WTF::Vector.1636"* %339 to i64*
  store atomic i64 %366, i64* %367 monotonic, align 8
  %368 = udiv i64 %364, 96
  %369 = trunc i64 %368 to i32
  store i32 %369, i32* %346, align 8
  br label %371

370:                                              ; preds = %358
  tail call void @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1636"* %339, i32 %356) #14
  br label %371

371:                                              ; preds = %338, %349, %362, %370
  %372 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %339, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %372, align 8
  %374 = load i32, i32* %344, align 4
  %375 = zext i32 %374 to i64
  %376 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375
  %377 = bitcast %"class.blink::FlexLine"* %376 to i64*
  store i64 %340, i64* %377, align 8
  %378 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 1
  %379 = bitcast %"class.blink::FlexItemVectorView"* %378 to i64*
  store i64 %341, i64* %379, align 8
  %380 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 1, i32 1
  %381 = bitcast i32* %380 to i64*
  store i64 %343, i64* %381, align 8
  %382 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 2, i32 0
  store i32 %1, i32* %382, align 8
  %383 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 3, i32 0
  store i32 %333, i32* %383, align 4
  %384 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 4
  store double %331, double* %384, align 8
  %385 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 5
  %386 = bitcast double* %385 to <2 x double>*
  store <2 x double> %334, <2 x double>* %386, align 8
  %387 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 7, i32 0
  store i32 %332, i32* %387, align 8
  %388 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %373, i64 %375, i32 8
  %389 = bitcast %"class.blink::LayoutUnit"* %388 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %389, i8 0, i64 36, i1 false) #14
  %390 = load i32, i32* %344, align 4
  %391 = add i32 %390, 1
  store i32 %391, i32* %344, align 4
  br label %392

392:                                              ; preds = %330, %371
  %393 = phi %"class.blink::FlexLine"* [ %376, %371 ], [ null, %330 ]
  ret %"class.blink::FlexLine"* %393
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19FlexLayoutAlgorithm16IsHorizontalFlowERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %3 = bitcast [20 x i8]* %2 to i160*
  %4 = load i160, i160* %3, align 8
  %5 = and i160 %4, 15211807202738752817960438464512
  %6 = icmp eq i160 %5, 0
  %7 = lshr i160 %4, 32
  %8 = trunc i160 %7 to i32
  %9 = and i32 %8, 30
  %10 = or i32 %9, 1
  %11 = icmp eq i32 %10, 15
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  br i1 %11, label %14, label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 13
  %18 = bitcast [3 x i8]* %17 to i24*
  %19 = load i24, i24* %18, align 8
  %20 = icmp slt i24 %19, 0
  br label %28

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 12
  %23 = load i16, i16* %22, align 4
  %24 = lshr i16 %23, 5
  %25 = and i16 %24, 2
  %26 = or i16 %25, 1
  %27 = icmp eq i16 %26, 3
  br label %28

28:                                               ; preds = %21, %14
  %29 = phi i1 [ %20, %14 ], [ %27, %21 ]
  %30 = xor i1 %6, %29
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(4) %"class.blink::StyleContentAlignmentData"* @_ZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !5

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %8 = and i16 %7, -512
  %9 = or i16 %8, 64
  store i16 %9, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  br label %11

11:                                               ; preds = %3, %6, %0
  ret %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm30ShouldApplyMinSizeAutoForChildERKNS_9LayoutBoxE(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = lshr i160 %7, 32
  %11 = trunc i160 %10 to i32
  %12 = and i32 %11, 30
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 15
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  br i1 %14, label %17, label %24

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 13
  %21 = bitcast [3 x i8]* %20 to i24*
  %22 = load i24, i24* %21, align 8
  %23 = icmp slt i24 %22, 0
  br label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 12
  %26 = load i16, i16* %25, align 4
  %27 = lshr i16 %26, 5
  %28 = and i16 %27, 2
  %29 = or i16 %28, 1
  %30 = icmp eq i16 %29, 3
  br label %31

31:                                               ; preds = %17, %24
  %32 = phi i1 [ %23, %17 ], [ %30, %24 ]
  %33 = xor i1 %9, %32
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 7
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 6
  %41 = select i1 %33, %"class.blink::Length"* %39, %"class.blink::Length"* %40
  br i1 %14, label %42, label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %44, i64 0, i32 13
  %46 = bitcast [3 x i8]* %45 to i24*
  %47 = load i24, i24* %46, align 8
  %48 = icmp slt i24 %47, 0
  br label %56

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 12
  %51 = load i16, i16* %50, align 4
  %52 = lshr i16 %51, 5
  %53 = and i16 %52, 2
  %54 = or i16 %53, 1
  %55 = icmp eq i16 %54, 3
  br label %56

56:                                               ; preds = %42, %49
  %57 = phi i1 [ %48, %42 ], [ %55, %49 ]
  %58 = xor i1 %9, %57
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = and i160 %61, 15211807202738752817960438464512
  %63 = icmp eq i160 %62, 0
  %64 = xor i1 %58, %63
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 2
  %66 = load i8, i8* %65, align 1
  br i1 %64, label %67, label %69

67:                                               ; preds = %56
  switch i8 %66, label %68 [
    i8 3, label %75
    i8 4, label %75
    i8 5, label %75
    i8 7, label %69
  ]

68:                                               ; preds = %67
  br label %69

69:                                               ; preds = %56, %67, %68
  %70 = phi i1 [ false, %68 ], [ true, %67 ], [ false, %56 ]
  %71 = icmp eq i8 %66, 0
  %72 = or i1 %70, %71
  %73 = xor i1 %72, true
  %74 = or i1 %14, %73
  br i1 %74, label %174, label %76

75:                                               ; preds = %67, %67, %67
  br i1 %14, label %174, label %76

76:                                               ; preds = %69, %75
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %82, i64 0, i32 45
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 24
  %86 = icmp eq i32 %85, 24
  br i1 %86, label %87, label %134

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %89 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %88 to i96*
  %90 = load i96, i96* %89, align 4
  %91 = and i96 %90, 1207959552
  %92 = icmp eq i96 %91, 134217728
  br i1 %92, label %134, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, i64 92
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* %34, i32 43) #14
  br i1 %98, label %134, label %99

99:                                               ; preds = %93
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %101 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, i64 92
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.blink::LayoutObject"* %34, i32 46) #14
  br i1 %103, label %124, label %104

104:                                              ; preds = %99
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %106 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %105, i64 92
  %107 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.blink::LayoutObject"* %34, i32 48) #14
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %111 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, i64 92
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.blink::LayoutObject"* %34, i32 45) #14
  br i1 %113, label %124, label %114

114:                                              ; preds = %109
  %115 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, i64 92
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, align 8
  %118 = tail call zeroext i1 %117(%"class.blink::LayoutObject"* %34, i32 49) #14
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, i64 92
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.blink::LayoutObject"* %34, i32 50) #14
  br i1 %123, label %124, label %129

124:                                              ; preds = %119, %114, %109, %104, %99
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, i64 92
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %34, i32 45) #14
  br i1 %128, label %129, label %134

129:                                              ; preds = %119, %124
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, i64 92
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, align 8
  %133 = tail call zeroext i1 %132(%"class.blink::LayoutObject"* %34, i32 44) #14
  br i1 %133, label %134, label %174

134:                                              ; preds = %129, %87, %93, %124, %76
  %135 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %135, i64 0, i32 0, i32 9
  %137 = bitcast [20 x i8]* %136 to i160*
  %138 = load i160, i160* %137, align 8
  %139 = and i160 %138, 15211807202738752817960438464512
  %140 = icmp eq i160 %139, 0
  %141 = lshr i160 %138, 32
  %142 = trunc i160 %141 to i32
  %143 = and i32 %142, 30
  %144 = or i32 %143, 1
  %145 = icmp eq i32 %144, 15
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %135, i64 0, i32 0, i32 3, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %146, align 8
  br i1 %145, label %148, label %155

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %147, i64 0, i32 2, i32 0, i32 0
  %150 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %150, i64 0, i32 13
  %152 = bitcast [3 x i8]* %151 to i24*
  %153 = load i24, i24* %152, align 8
  %154 = icmp slt i24 %153, 0
  br label %162

155:                                              ; preds = %134
  %156 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %147, i64 0, i32 12
  %157 = load i16, i16* %156, align 4
  %158 = lshr i16 %157, 5
  %159 = and i16 %158, 2
  %160 = or i16 %159, 1
  %161 = icmp eq i16 %160, 3
  br label %162

162:                                              ; preds = %148, %155
  %163 = phi i1 [ %154, %148 ], [ %161, %155 ]
  %164 = xor i1 %140, %163
  %165 = bitcast %"class.blink::ComputedStyle"** %35 to %"class.blink::ComputedStyleBase"**
  %166 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %166, i64 0, i32 9
  %168 = bitcast [20 x i8]* %167 to i160*
  %169 = load i160, i160* %168, align 8
  %170 = select i1 %164, i160 74, i160 77
  %171 = lshr i160 %169, %170
  %172 = and i160 %171, 7
  %173 = icmp eq i160 %172, 2
  br label %174

174:                                              ; preds = %129, %69, %162, %75
  %175 = phi i1 [ false, %69 ], [ false, %75 ], [ false, %129 ], [ %173, %162 ]
  ret i1 %175
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19FlexLayoutAlgorithm24MainAxisOverflowForChildERKNS_9LayoutBoxE(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = lshr i160 %7, 32
  %11 = trunc i160 %10 to i32
  %12 = and i32 %11, 30
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 15
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  br i1 %14, label %17, label %24

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 13
  %21 = bitcast [3 x i8]* %20 to i24*
  %22 = load i24, i24* %21, align 8
  %23 = icmp slt i24 %22, 0
  br label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 12
  %26 = load i16, i16* %25, align 4
  %27 = lshr i16 %26, 5
  %28 = and i16 %27, 2
  %29 = or i16 %28, 1
  %30 = icmp eq i16 %29, 3
  br label %31

31:                                               ; preds = %17, %24
  %32 = phi i1 [ %23, %17 ], [ %30, %24 ]
  %33 = xor i1 %9, %32
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %35 = bitcast %"class.blink::ComputedStyle"** %34 to %"class.blink::ComputedStyleBase"**
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = select i1 %33, i160 74, i160 77
  %41 = lshr i160 %39, %40
  %42 = trunc i160 %41 to i32
  %43 = and i32 %42, 7
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19FlexLayoutAlgorithm25IntrinsicContentBlockSizeEv(%"class.blink::FlexLayoutAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %103

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 30
  %17 = or i32 %16, 1
  %18 = icmp eq i32 %17, 15
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %19, align 8
  br i1 %18, label %21, label %28

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %23, i64 0, i32 13
  %25 = bitcast [3 x i8]* %24 to i24*
  %26 = load i24, i24* %25, align 8
  %27 = icmp slt i24 %26, 0
  br i1 %27, label %35, label %53

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 12
  %30 = load i16, i16* %29, align 4
  %31 = lshr i16 %30, 5
  %32 = and i16 %31, 2
  %33 = or i16 %32, 1
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %35, label %53

35:                                               ; preds = %28, %21
  store i32 0, i32* %2, align 4
  %36 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %36, align 8
  %38 = zext i32 %5 to i64
  %39 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %37, i64 %38
  %40 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  br label %41

41:                                               ; preds = %35, %41
  %42 = phi i32 [ 0, %35 ], [ %50, %41 ]
  %43 = phi %"class.blink::FlexLine"* [ %37, %35 ], [ %51, %41 ]
  %44 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %43, i64 0, i32 7
  %45 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, %42
  %48 = select i1 %47, %"class.blink::LayoutUnit"* %40, %"class.blink::LayoutUnit"* %44
  %49 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %2, align 4
  %51 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %43, i64 1
  %52 = icmp eq %"class.blink::FlexLine"* %51, %39
  br i1 %52, label %103, label %41

53:                                               ; preds = %21, %28
  %54 = add i32 %5, -1
  %55 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZNK3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1636"* %3, i32 %54) #14
  %56 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %55, i64 0, i32 13, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %55, i64 0, i32 14, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %59) #14
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !3
  %66 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZNK3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1636"* %3, i32 0) #14
  %67 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %66, i64 0, i32 13, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, -1
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 %68) #14
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !3
  %75 = load i32, i32* %4, align 4
  %76 = add i32 %75, -1
  %77 = icmp ugt i32 %76, 33554430
  %78 = shl i32 %76, 6
  %79 = select i1 %77, i32 2147483647, i32 %78
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = mul nsw i64 %80, %83
  %85 = sdiv i64 %84, 64
  %86 = ashr i64 %85, 32
  %87 = trunc i64 %86 to i32
  %88 = trunc i64 %85 to i32
  %89 = ashr i32 %88, 31
  %90 = icmp eq i32 %89, %87
  br i1 %90, label %95, label %91

91:                                               ; preds = %53
  %92 = xor i32 %79, %82
  %93 = lshr i32 %92, 31
  %94 = add nuw i32 %93, 2147483647
  br label %95

95:                                               ; preds = %53, %91
  %96 = phi i32 [ %88, %53 ], [ %94, %91 ]
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %96) #14
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !3
  store i32 %102, i32* %2, align 4
  br label %103

103:                                              ; preds = %41, %95, %7
  %104 = phi i32 [ %102, %95 ], [ 0, %7 ], [ %50, %41 ]
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FlexLayoutAlgorithm14AlignFlexLinesENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to %"class.blink::StyleContentAlignmentData"*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm20ResolvedAlignContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %7)
  store i32 %8, i32* %3, align 4
  %9 = trunc i32 %8 to i16
  %10 = and i16 %9, 15
  %11 = icmp eq i16 %10, 6
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %171, label %16

16:                                               ; preds = %12, %2
  %17 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %171, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ComputedStyle"** %6 to %"class.blink::ComputedStyleBase"**
  %22 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %24, i64 0, i32 12
  %26 = load i16, i16* %25, align 4
  %27 = and i16 %26, 384
  %28 = icmp eq i16 %27, 0
  %29 = bitcast %"class.blink::ComputedStyleBase"* %22 to %"class.blink::ComputedStyle"*
  br i1 %28, label %171, label %30

30:                                               ; preds = %20
  %31 = add i32 %18, -1
  %32 = icmp ugt i32 %31, 33554430
  %33 = shl i32 %31, 6
  %34 = select i1 %32, i32 2147483647, i32 %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %38, %35
  %40 = sdiv i64 %39, 64
  %41 = ashr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = trunc i64 %40 to i32
  %44 = ashr i32 %43, 31
  %45 = icmp eq i32 %44, %42
  br i1 %45, label %50, label %46

46:                                               ; preds = %30
  %47 = xor i32 %37, %34
  %48 = lshr i32 %47, 31
  %49 = add nuw i32 %48, 2147483647
  br label %50

50:                                               ; preds = %46, %30
  %51 = phi i32 [ %43, %30 ], [ %49, %46 ]
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %51) #14
  %53 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %54 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %53, align 8
  %55 = zext i32 %18 to i64
  %56 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %54, i64 %55
  %57 = extractvalue { i32, i1 } %52, 1
  %58 = icmp sgt i32 %51, -1
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = extractvalue { i32, i1 } %52, 0
  %61 = select i1 %57, i32 %59, i32 %60, !prof !3
  br label %70

62:                                               ; preds = %70
  %63 = call i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* dereferenceable(104) %29, i32 %80, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %4, i32 %18)
  %64 = and i16 %9, 112
  %65 = icmp eq i16 %64, 64
  %66 = icmp sgt i32 %80, 0
  %67 = and i1 %65, %66
  %68 = sext i32 %80 to i64
  %69 = shl nsw i64 %68, 6
  br label %83

70:                                               ; preds = %50, %70
  %71 = phi %"class.blink::FlexLine"* [ %81, %70 ], [ %54, %50 ]
  %72 = phi i32 [ %80, %70 ], [ %61, %50 ]
  %73 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %71, i64 0, i32 14, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %72, i32 %74) #14
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !3
  %81 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %71, i64 1
  %82 = icmp eq %"class.blink::FlexLine"* %81, %56
  br i1 %82, label %62, label %70

83:                                               ; preds = %62, %153
  %84 = phi %"class.blink::FlexLine"* [ %54, %62 ], [ %169, %153 ]
  %85 = phi i32 [ %63, %62 ], [ %168, %153 ]
  %86 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %84, i64 0, i32 13, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %85, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %87, i32 %85) #14
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !3
  store i32 %93, i32* %86, align 4
  %94 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %84, i64 0, i32 1, i32 0
  %95 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %94, align 8
  %96 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %84, i64 0, i32 1, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %84, i64 0, i32 1, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %97, i64 %102
  %104 = icmp eq i32 %99, %101
  br i1 %104, label %108, label %105

105:                                              ; preds = %83
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %97, i64 %106
  br label %109

108:                                              ; preds = %109, %83
  br i1 %67, label %119, label %153

109:                                              ; preds = %105, %109
  %110 = phi %"class.blink::FlexItem"* [ %117, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %110, i64 0, i32 14, i32 1, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %85) #14
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %89, i32 %115, !prof !3
  store i32 %116, i32* %111, align 4
  %117 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %110, i64 1
  %118 = icmp eq %"class.blink::FlexItem"* %117, %103
  br i1 %118, label %108, label %109

119:                                              ; preds = %108
  %120 = load i32, i32* %17, align 4
  %121 = icmp ugt i32 %120, 33554430
  %122 = shl i32 %120, 6
  %123 = select i1 %121, i32 2147483647, i32 %122
  %124 = sext i32 %123 to i64
  %125 = sdiv i64 %69, %124
  %126 = tail call i1 @llvm.is.constant.i64(i64 %125) #14
  br i1 %126, label %134, label %127

127:                                              ; preds = %119
  %128 = icmp slt i64 %125, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = add nsw i64 %125, 2147483648
  %131 = icmp ult i64 %130, 4294967296
  %132 = trunc i64 %125 to i32
  %133 = select i1 %131, i32 %132, i32 %129, !prof !2
  br label %140

134:                                              ; preds = %119
  %135 = icmp sgt i64 %125, 2147483647
  br i1 %135, label %144, label %136

136:                                              ; preds = %134
  %137 = icmp sgt i64 %125, -2147483648
  %138 = select i1 %137, i64 %125, i64 -2147483648
  %139 = trunc i64 %138 to i32
  br label %140

140:                                              ; preds = %127, %136
  %141 = phi i32 [ %133, %127 ], [ %139, %136 ]
  %142 = icmp slt i32 %141, 0
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  br label %144

144:                                              ; preds = %134, %140
  %145 = phi i32 [ %141, %140 ], [ 2147483647, %134 ]
  %146 = phi i32 [ %143, %140 ], [ 2147483647, %134 ]
  %147 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %84, i64 0, i32 14, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %145) #14
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %146, i32 %151, !prof !3
  store i32 %152, i32* %147, align 4
  br label %153

153:                                              ; preds = %144, %108
  %154 = load i32, i32* %17, align 4
  %155 = call i32 @_ZN5blink19FlexLayoutAlgorithm39ContentDistributionSpaceBetweenChildrenENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(i32 %80, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %4, i32 %154)
  %156 = load i32, i32* %36, align 4
  %157 = icmp slt i32 %156, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %155, i32 %156) #14
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !3
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %162) #14
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !3
  %169 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %84, i64 1
  %170 = icmp eq %"class.blink::FlexLine"* %169, %56
  br i1 %170, label %171, label %83

171:                                              ; preds = %153, %20, %16, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm20ResolvedAlignContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !5

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %9 = and i16 %8, -512
  %10 = or i16 %9, 64
  store i16 %10, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  br label %12

12:                                               ; preds = %1, %4, %7
  %13 = tail call i32 @_ZNK5blink13ComputedStyle28ResolvedAlignContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %0, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %24, !prof !5

16:                                               ; preds = %12
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %21 = and i16 %20, -512
  %22 = or i16 %21, 64
  store i16 %22, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %23 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  br label %24

24:                                               ; preds = %12, %16, %19
  %25 = tail call i32 @_ZNK5blink13ComputedStyle32ResolvedAlignContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %0, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink19FlexLayoutAlgorithm30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #14
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %29, i64 0, i32 12, i32 0
  %31 = load i16, i16* %30, align 4
  %32 = and i16 %31, 384
  %33 = trunc i32 %13 to i16
  %34 = and i16 %33, 15
  %35 = trunc i32 %25 to i16
  %36 = shl i16 %35, 4
  %37 = and i16 %36, 112
  %38 = or i16 %37, %34
  %39 = or i16 %38, %32
  %40 = zext i16 %39 to i32
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FlexLayoutAlgorithm13AlignChildrenEv(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.1905", align 8
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"class.WTF::Vector.1905"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %2, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #14
  %9 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  %18 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::ComputedStyle"** %19 to %"class.blink::ComputedStyleBase"**
  %21 = bitcast i32* %4 to i8*
  %22 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  br label %33

23:                                               ; preds = %63, %1
  %24 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::ComputedStyle"** %24 to %"class.blink::ComputedStyleBase"**
  %26 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %28, i64 0, i32 12
  %30 = load i16, i16* %29, align 4
  %31 = and i16 %30, 384
  %32 = icmp eq i16 %31, 256
  br i1 %32, label %162, label %270

33:                                               ; preds = %16, %63
  %34 = phi %"class.blink::FlexLine"* [ %10, %16 ], [ %64, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #14
  store i32 2147483647, i32* %18, align 4
  %35 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %34, i64 0, i32 15, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %34, i64 0, i32 1, i32 0
  %38 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %34, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %34, i64 0, i32 1, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %40, i64 %45
  %47 = icmp eq i32 %42, %44
  br i1 %47, label %51, label %48

48:                                               ; preds = %33
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %40, i64 %49
  br label %66

51:                                               ; preds = %159, %33
  %52 = load i32, i32* %8, align 4
  %53 = load i32, i32* %7, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %62, label %55, !prof !3

55:                                               ; preds = %51
  %56 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %57 = zext i32 %52 to i64
  %58 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %56, i64 %57, i32 0
  %59 = load i32, i32* %18, align 4
  store i32 %59, i32* %58, align 4
  %60 = load i32, i32* %8, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %8, align 4
  br label %63

62:                                               ; preds = %51
  call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1905"* nonnull %2, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3) #14
  br label %63

63:                                               ; preds = %55, %62
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #14
  %64 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %34, i64 1
  %65 = icmp eq %"class.blink::FlexLine"* %64, %14
  br i1 %65, label %23, label %33

66:                                               ; preds = %48, %159
  %67 = phi %"class.blink::FlexItem"* [ %160, %159 ], [ %50, %48 ]
  %68 = call i32 @_ZNK5blink8FlexItem23AvailableAlignmentSpaceEv(%"class.blink::FlexItem"* %67)
  %69 = icmp sgt i32 %68, 0
  %70 = select i1 %69, i32 %68, i32 0
  %71 = call zeroext i1 @_ZN5blink8FlexItem28UpdateAutoMarginsInCrossAxisENS_10LayoutUnitE(%"class.blink::FlexItem"* %67, i32 %70)
  br i1 %71, label %159, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %67, i64 0, i32 0
  %74 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %74, i64 0, i32 2
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %67, i64 0, i32 3
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %76, %"class.blink::ComputedStyle"* dereferenceable(104) %78) #14
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %81, label %83

81:                                               ; preds = %72
  call void @_ZN5blink8FlexItem20ComputeStretchedSizeEv(%"class.blink::FlexItem"* %67)
  %82 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %67, i64 0, i32 17
  store i8 1, i8* %82, align 2
  br label %83

83:                                               ; preds = %81, %72
  %84 = call i32 @_ZNK5blink8FlexItem23AvailableAlignmentSpaceEv(%"class.blink::FlexItem"* %67)
  %85 = call i32 @_ZNK5blink8FlexItem15MarginBoxAscentEv(%"class.blink::FlexItem"* %67)
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = lshr i160 %89, 32
  %91 = trunc i160 %90 to i32
  %92 = and i32 %91, 30
  %93 = or i32 %92, 1
  %94 = icmp eq i32 %93, 15
  switch i32 %79, label %128 [
    i32 4, label %117
    i32 6, label %102
    i32 12, label %124
    i32 3, label %95
  ]

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 3, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %97, i64 0, i32 12
  %99 = load i16, i16* %98, align 4
  %100 = and i16 %99, 384
  %101 = icmp eq i16 %100, 256
  br i1 %101, label %124, label %128

102:                                              ; preds = %83
  %103 = sdiv i32 %84, 2
  %104 = sext i32 %103 to i64
  %105 = call i1 @llvm.is.constant.i64(i64 %104) #14
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = icmp slt i32 %84, -1
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = add nsw i64 %104, 2147483648
  %110 = icmp ult i64 %109, 4294967296
  %111 = select i1 %110, i32 %103, i32 %108, !prof !2
  br label %112

112:                                              ; preds = %106, %102
  %113 = phi i32 [ %111, %106 ], [ %103, %102 ]
  br i1 %94, label %114, label %124

114:                                              ; preds = %112
  %115 = icmp sgt i32 %113, 0
  %116 = select i1 %115, i32 %113, i32 0
  br label %128

117:                                              ; preds = %83
  %118 = icmp sgt i32 %85, -1
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %85) #14
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !3
  br label %124

124:                                              ; preds = %83, %95, %112, %117
  %125 = phi i32 [ %123, %117 ], [ %84, %95 ], [ %84, %83 ], [ %113, %112 ]
  %126 = icmp slt i32 %125, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  br label %128

128:                                              ; preds = %83, %95, %114, %124
  %129 = phi i32 [ %125, %124 ], [ 0, %95 ], [ 0, %83 ], [ %116, %114 ]
  %130 = phi i32 [ %127, %124 ], [ 2147483647, %114 ], [ 2147483647, %95 ], [ 2147483647, %83 ]
  %131 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %67, i64 0, i32 14, i32 1, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %132, i32 %129) #14
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %130, i32 %135, !prof !3
  store i32 %136, i32* %131, align 4
  %137 = icmp eq i32 %79, 4
  br i1 %137, label %138, label %159

138:                                              ; preds = %128
  %139 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %20, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %139, i64 0, i32 3, i32 0, i32 0
  %141 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %141, i64 0, i32 12
  %143 = load i16, i16* %142, align 4
  %144 = and i16 %143, 384
  %145 = icmp eq i16 %144, 256
  br i1 %145, label %146, label %159

146:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  %147 = call i32 @_ZNK5blink8FlexItem23AvailableAlignmentSpaceEv(%"class.blink::FlexItem"* %67)
  %148 = icmp sgt i32 %129, -1
  %149 = select i1 %148, i32 -2147483648, i32 2147483647
  %150 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %147, i32 %129) #14
  %151 = extractvalue { i32, i1 } %150, 1
  %152 = extractvalue { i32, i1 } %150, 0
  %153 = select i1 %151, i32 %149, i32 %152, !prof !3
  store i32 %153, i32* %4, align 4
  %154 = load i32, i32* %18, align 4
  %155 = icmp slt i32 %153, %154
  %156 = select i1 %155, %"class.blink::LayoutUnit"* %22, %"class.blink::LayoutUnit"* %3
  %157 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %18, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  br label %159

159:                                              ; preds = %128, %138, %146, %66
  %160 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %67, i64 1
  %161 = icmp eq %"class.blink::FlexItem"* %160, %46
  br i1 %161, label %51, label %66

162:                                              ; preds = %23
  %163 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %9, align 8
  %164 = load i32, i32* %11, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %163, i64 %165
  %167 = icmp eq i32 %164, 0
  br i1 %167, label %270, label %168

168:                                              ; preds = %162, %192
  %169 = phi %"class.blink::FlexLine"* [ %193, %192 ], [ %163, %162 ]
  %170 = phi i32 [ %171, %192 ], [ 0, %162 ]
  %171 = add i32 %170, 1
  %172 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1905"* nonnull %2, i32 %170) #14
  %173 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %172, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %169, i64 0, i32 1, i32 0
  %176 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %175, align 8
  %177 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %169, i64 0, i32 1, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %169, i64 0, i32 1, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %178, i64 %183
  %185 = icmp eq i32 %180, %182
  br i1 %185, label %192, label %186

186:                                              ; preds = %168
  %187 = zext i32 %180 to i64
  %188 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %178, i64 %187
  %189 = icmp ne i32 %174, 0
  %190 = icmp slt i32 %174, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  br label %195

192:                                              ; preds = %267, %168
  %193 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %169, i64 1
  %194 = icmp eq %"class.blink::FlexLine"* %193, %166
  br i1 %194, label %270, label %168

195:                                              ; preds = %186, %267
  %196 = phi %"class.blink::FlexItem"* [ %188, %186 ], [ %268, %267 ]
  %197 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %196, i64 0, i32 0
  %198 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %198, i64 0, i32 2
  %200 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %196, i64 0, i32 3
  %202 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %201, align 8
  %203 = call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %200, %"class.blink::ComputedStyle"* dereferenceable(104) %202) #14
  %204 = icmp eq i32 %203, 4
  br i1 %204, label %205, label %267

205:                                              ; preds = %195
  %206 = load %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexLayoutAlgorithm"** %197, align 8
  %207 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %206, i64 0, i32 2
  %208 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %208, i64 0, i32 0, i32 9
  %210 = bitcast [20 x i8]* %209 to i160*
  %211 = load i160, i160* %210, align 8
  %212 = and i160 %211, 15211807202738752817960438464512
  %213 = icmp eq i160 %212, 0
  %214 = lshr i160 %211, 32
  %215 = trunc i160 %214 to i32
  %216 = and i32 %215, 30
  %217 = or i32 %216, 1
  %218 = icmp eq i32 %217, 15
  %219 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %208, i64 0, i32 0, i32 3, i32 0, i32 0
  %220 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %219, align 8
  br i1 %218, label %221, label %228

221:                                              ; preds = %205
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %220, i64 0, i32 2, i32 0, i32 0
  %223 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %223, i64 0, i32 13
  %225 = bitcast [3 x i8]* %224 to i24*
  %226 = load i24, i24* %225, align 8
  %227 = icmp slt i24 %226, 0
  br label %235

228:                                              ; preds = %205
  %229 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %220, i64 0, i32 12
  %230 = load i16, i16* %229, align 4
  %231 = lshr i16 %230, 5
  %232 = and i16 %231, 2
  %233 = or i16 %232, 1
  %234 = icmp eq i16 %233, 3
  br label %235

235:                                              ; preds = %228, %221
  %236 = phi i1 [ %227, %221 ], [ %234, %228 ]
  %237 = xor i1 %213, %236
  %238 = bitcast %"class.blink::ComputedStyle"** %201 to %"class.blink::ComputedStyleBase"**
  %239 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %239, i64 0, i32 7, i32 0, i32 0
  %241 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %240, align 8
  br i1 %237, label %242, label %251

242:                                              ; preds = %235
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %241, i64 0, i32 12, i32 2
  %244 = load i8, i8* %243, align 1
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %267, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %241, i64 0, i32 9, i32 2
  %248 = load i8, i8* %247, align 1
  %249 = icmp ne i8 %248, 0
  %250 = and i1 %189, %249
  br i1 %250, label %260, label %267

251:                                              ; preds = %235
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %241, i64 0, i32 10, i32 2
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %267, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %241, i64 0, i32 11, i32 2
  %257 = load i8, i8* %256, align 1
  %258 = icmp ne i8 %257, 0
  %259 = and i1 %189, %258
  br i1 %259, label %260, label %267

260:                                              ; preds = %255, %246
  %261 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %196, i64 0, i32 14, i32 1, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %262, i32 %174) #14
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %191, i32 %265, !prof !3
  store i32 %266, i32* %261, align 4
  br label %267

267:                                              ; preds = %255, %246, %251, %242, %260, %195
  %268 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %196, i64 1
  %269 = icmp eq %"class.blink::FlexItem"* %268, %184
  br i1 %269, label %192, label %195

270:                                              ; preds = %192, %162, %23
  %271 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %272 = icmp eq %"class.blink::LayoutUnit"* %271, null
  %273 = bitcast %"class.blink::LayoutUnit"* %271 to i8*
  br i1 %272, label %279, label %274, !prof !2

274:                                              ; preds = %270
  %275 = load i32, i32* %8, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %278, label %277, !prof !3

277:                                              ; preds = %274
  store i32 0, i32* %8, align 4
  br label %278

278:                                              ; preds = %277, %274
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %273) #14
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %6, align 8
  br label %279

279:                                              ; preds = %270, %278
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FlexLayoutAlgorithm18FlipForWrapReverseENS_10LayoutUnitES1_(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = icmp sgt i32 %1, -1
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  br label %15

14:                                               ; preds = %57, %3
  ret void

15:                                               ; preds = %11, %57
  %16 = phi %"class.blink::FlexLine"* [ %5, %11 ], [ %58, %57 ]
  %17 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 0, i32 13, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %1) #14
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %13, i32 %21, !prof !3
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %22) #14
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !3
  %29 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 0, i32 14, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %30) #14
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !3
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %22) #14
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %24, i32 %39, !prof !3
  %41 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 0, i32 1, i32 0
  %42 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 0, i32 1, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 0, i32 1, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %44, i64 %49
  %51 = icmp eq i32 %46, %48
  br i1 %51, label %57, label %52

52:                                               ; preds = %15
  %53 = zext i32 %46 to i64
  %54 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %44, i64 %53
  %55 = icmp slt i32 %40, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  br label %60

57:                                               ; preds = %60, %15
  %58 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 1
  %59 = icmp eq %"class.blink::FlexLine"* %58, %9
  br i1 %59, label %14, label %15

60:                                               ; preds = %52, %60
  %61 = phi %"class.blink::FlexItem"* [ %54, %52 ], [ %68, %60 ]
  %62 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %61, i64 0, i32 14, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %40) #14
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %56, i32 %66, !prof !3
  store i32 %67, i32* %62, align 4
  %68 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %61, i64 1
  %69 = icmp eq %"class.blink::FlexItem"* %68, %50
  br i1 %69, label %57, label %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %3 = bitcast [20 x i8]* %2 to i160*
  %4 = load i160, i160* %3, align 8
  %5 = lshr i160 %4, 102
  %6 = trunc i160 %5 to i8
  %7 = and i8 %6, 3
  %8 = lshr i160 %4, 32
  %9 = trunc i160 %8 to i32
  %10 = and i32 %9, 30
  %11 = or i32 %10, 1
  %12 = icmp eq i32 %11, 15
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  br i1 %12, label %15, label %22

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %17, i64 0, i32 13
  %19 = bitcast [3 x i8]* %18 to i24*
  %20 = load i24, i24* %19, align 8
  %21 = icmp slt i24 %20, 0
  br i1 %21, label %31, label %29

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %14, i64 0, i32 12
  %24 = load i16, i16* %23, align 4
  %25 = lshr i16 %24, 5
  %26 = and i16 %25, 2
  %27 = or i16 %26, 1
  %28 = icmp eq i16 %27, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %15, %22
  %30 = zext i8 %7 to i32
  br label %40

31:                                               ; preds = %15, %22
  switch i8 %7, label %40 [
    i8 0, label %32
    i8 2, label %36
    i8 1, label %36
  ]

32:                                               ; preds = %31
  %33 = and i160 %4, 41538374868278621028243970633760768
  %34 = icmp eq i160 %33, 0
  %35 = select i1 %34, i32 2, i32 1
  br label %40

36:                                               ; preds = %31, %31
  %37 = and i160 %4, 41538374868278621028243970633760768
  %38 = icmp eq i160 %37, 0
  %39 = select i1 %38, i32 0, i32 3
  br label %40

40:                                               ; preds = %31, %36, %32, %29
  %41 = phi i32 [ %39, %36 ], [ %35, %32 ], [ %30, %29 ], [ 0, %31 ]
  ret i32 %41
}

declare i32 @_ZNK5blink13ComputedStyle30ResolvedJustifyContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #6

declare i32 @_ZNK5blink13ComputedStyle34ResolvedJustifyContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #6

declare i32 @_ZNK5blink13ComputedStyle28ResolvedAlignContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #6

declare i32 @_ZNK5blink13ComputedStyle32ResolvedAlignContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #6

declare i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"*, i32, %"class.blink::ComputedStyle"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FlexLayoutAlgorithm19LayoutColumnReverseENS_10LayoutUnitES1_(%"class.blink::FlexLayoutAlgorithm"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %0, i64 0, i32 2
  %13 = icmp slt i32 %2, 0
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #14
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17
  br label %19

19:                                               ; preds = %11, %29
  %20 = phi %"class.blink::FlexLine"* [ %5, %11 ], [ %30, %29 ]
  %21 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %20, i64 0, i32 1, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %20, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %20, i64 0, i32 1, i32 0
  br label %32

28:                                               ; preds = %29, %3
  ret void

29:                                               ; preds = %65, %19
  %30 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %20, i64 1
  %31 = icmp eq %"class.blink::FlexLine"* %30, %9
  br i1 %31, label %28, label %19

32:                                               ; preds = %26, %65
  %33 = phi i32 [ %24, %26 ], [ %98, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %96, %65 ]
  %35 = load %"class.WTF::Vector.1631"*, %"class.WTF::Vector.1631"** %27, align 8
  %36 = add i32 %33, %34
  %37 = tail call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"* %35, i32 %36) #14
  %38 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 12, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 8, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %41) #14
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !3
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8
  %52 = lshr i160 %51, 102
  %53 = trunc i160 %52 to i8
  %54 = and i8 %53, 3
  switch i8 %54, label %64 [
    i8 0, label %55
    i8 1, label %58
    i8 3, label %58
    i8 2, label %61
  ]

55:                                               ; preds = %32
  %56 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 10, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 10, i32 2, i32 0
  br label %65

58:                                               ; preds = %32, %32
  %59 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 10, i32 1, i32 0
  %60 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 10, i32 3, i32 0
  br label %65

61:                                               ; preds = %32
  %62 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 10, i32 3, i32 0
  %63 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 10, i32 1, i32 0
  br label %65

64:                                               ; preds = %32
  unreachable

65:                                               ; preds = %55, %58, %61
  %66 = phi i32* [ %57, %55 ], [ %60, %58 ], [ %63, %61 ]
  %67 = phi i32* [ %56, %55 ], [ %59, %58 ], [ %62, %61 ]
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %66, align 4
  %70 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %37, i64 0, i32 14, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, -1
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %71) #14
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !3
  %78 = icmp sgt i32 %47, -1
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %47) #14
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !3
  %84 = icmp sgt i32 %69, -1
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %69) #14
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !3
  %90 = icmp slt i32 %68, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %68) #14
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !3
  store i32 %95, i32* %70, align 4
  %96 = add nuw i32 %34, 1
  %97 = load i32, i32* %21, align 4
  %98 = load i32, i32* %23, align 8
  %99 = sub i32 %97, %98
  %100 = icmp ult i32 %96, %99
  br i1 %100, label %32, label %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"class.blink::FlexItem"* @_ZNK3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 %25
  ret %"class.blink::FlexItem"* %26
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::FlexLine"* @_ZNK3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1636"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %24, i64 %25
  ret %"class.blink::FlexLine"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1631"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1631", %"class.WTF::Vector.1631"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 %25
  ret %"class.blink::FlexItem"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1901"*, %"class.blink::FlexItem"**) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::FlexItem"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #14
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #13

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::FlexItem"** @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1900"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %24, i64 %25
  ret %"class.blink::FlexItem"** %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1900"*, %"class.blink::FlexItem"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %6, align 8
  %8 = icmp ugt %"class.blink::FlexItem"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %7, i64 %10
  %12 = icmp ugt %"class.blink::FlexItem"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1900"* %0, i32 %5) #14
  %14 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::FlexItem"** %1 to i64
  %17 = ptrtoint %"class.blink::FlexItem"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1900"* %0, i32 %5) #14
  %20 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::FlexItem"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::FlexItem"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %23, i64 %26
  %28 = bitcast %"class.blink::FlexItem"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::FlexItem"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1900"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %31, align 8
  %33 = icmp eq %"class.blink::FlexItem"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8FlexItemEEEmm(i64 %37) #14
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink8FlexItemEEEPKcv, i64 0, i64 0)) #14
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1900"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1900"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1900"* %0, i32 %27) #14
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1900"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %5, align 8
  %7 = icmp eq %"class.blink::FlexItem"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::FlexItem"**
  %10 = icmp eq %"class.blink::FlexItem"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1900"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1900"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::FlexItem"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #14
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1901"* %19, %"class.blink::FlexItem"** nonnull %6) #14
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8FlexItemEEEmm(i64 %30) #14
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink8FlexItemEEEPKcv, i64 0, i64 0)) #14
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::FlexItem"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::FlexItem"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #14
  %46 = load %"class.blink::FlexItem"**, %"class.blink::FlexItem"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::FlexItem"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::FlexItem"**
  %51 = icmp eq %"class.blink::FlexItem"** %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1901"* %53, %"class.blink::FlexItem"** %48) #14
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1900"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1900", %"class.WTF::Vector.1900"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8FlexItemEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1636"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %24

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1636"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::FlexLine"* [ %20, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::FlexLine"* [ %19, %14 ], [ null, %4 ]
  %17 = bitcast %"class.blink::FlexLine"* %16 to i8*
  %18 = bitcast %"class.blink::FlexLine"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 96, i1 false) #14
  %19 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %16, i64 1
  %20 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %15, i64 1
  %21 = icmp eq %"class.blink::FlexLine"* %20, %10
  br i1 %21, label %22, label %14

22:                                               ; preds = %14, %4
  %23 = bitcast %"class.blink::FlexLine"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #14
  br label %57

24:                                               ; preds = %2
  %25 = zext i32 %1 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexLineEEEmm(i64 %25) #14
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FlexLineEEEPKcv, i64 0, i64 0)) #14
  %28 = udiv i64 %26, 96
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %31, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = bitcast %"class.blink::FlexLine"* %31 to i8*
  br label %52

39:                                               ; preds = %24
  %40 = bitcast i8* %27 to %"class.blink::FlexLine"*
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi %"class.blink::FlexLine"* [ %47, %41 ], [ %31, %39 ]
  %43 = phi %"class.blink::FlexLine"* [ %46, %41 ], [ %40, %39 ]
  %44 = bitcast %"class.blink::FlexLine"* %43 to i8*
  %45 = bitcast %"class.blink::FlexLine"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 96, i1 false) #14
  %46 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %43, i64 1
  %47 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %42, i64 1
  %48 = icmp eq %"class.blink::FlexLine"* %47, %35
  br i1 %48, label %49, label %41

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::Vector.1636"* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %37, %49
  %53 = phi i8* [ %51, %49 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #14
  %54 = bitcast %"class.WTF::Vector.1636"* %0 to i64*
  store atomic i64 %29, i64* %54 monotonic, align 8
  %55 = trunc i64 %28 to i32
  %56 = getelementptr inbounds %"class.WTF::Vector.1636", %"class.WTF::Vector.1636"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %52, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexLineEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 22347776
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 22347776) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = mul i64 %0, 96
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1905"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutUnit"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutUnit"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutUnit"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1905"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutUnit"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutUnit"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutUnit"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.1905"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.1905"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutUnit"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutUnit"* %1 to i64
  %56 = ptrtoint %"class.blink::LayoutUnit"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutUnit"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1905"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutUnit"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutUnit"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.1905"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.1905"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutUnit"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutUnit"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutUnit"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutUnit"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %101, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %100, i64 %103, i32 0
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %105, align 4
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1905"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1905", %"class.WTF::Vector.1905"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
