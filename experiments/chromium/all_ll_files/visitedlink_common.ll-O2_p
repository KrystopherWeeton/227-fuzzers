; ModuleID = '../../components/visitedlink/common/visitedlink_common.cc'
source_filename = "../../components/visitedlink/common/visitedlink_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.visitedlink::VisitedLinkCommon" = type <{ i32 (...)**, i64*, i32, [8 x i8], [4 x i8] }>
%struct.md5_state_st = type { [4 x i32], i32, i32, [64 x i8], i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN11visitedlink17VisitedLinkCommon17null_fingerprint_E = hidden local_unnamed_addr constant i64 0, align 8
@_ZN11visitedlink17VisitedLinkCommon10null_hash_E = hidden local_unnamed_addr constant i32 -1, align 4
@_ZTVN11visitedlink17VisitedLinkCommonE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.visitedlink::VisitedLinkCommon"*)* @_ZN11visitedlink17VisitedLinkCommonD2Ev to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkCommon"*)* @_ZN11visitedlink17VisitedLinkCommonD0Ev to i8*)] }, align 8

@_ZN11visitedlink17VisitedLinkCommonC1Ev = hidden unnamed_addr alias void (%"class.visitedlink::VisitedLinkCommon"*), void (%"class.visitedlink::VisitedLinkCommon"*)* @_ZN11visitedlink17VisitedLinkCommonC2Ev
@_ZN11visitedlink17VisitedLinkCommonD1Ev = hidden unnamed_addr alias void (%"class.visitedlink::VisitedLinkCommon"*), void (%"class.visitedlink::VisitedLinkCommon"*)* @_ZN11visitedlink17VisitedLinkCommonD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11visitedlink17VisitedLinkCommonC2Ev(%"class.visitedlink::VisitedLinkCommon"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11visitedlink17VisitedLinkCommonE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 1
  %4 = bitcast i64** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11visitedlink17VisitedLinkCommonD2Ev(%"class.visitedlink::VisitedLinkCommon"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink17VisitedLinkCommonD0Ev(%"class.visitedlink::VisitedLinkCommon"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.visitedlink::VisitedLinkCommon"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11visitedlink17VisitedLinkCommon9IsVisitedEPKcm(%"class.visitedlink::VisitedLinkCommon"*, i8*, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %struct.md5_state_st, align 4
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"struct.base::MD5Digest", align 8
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %56, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %56, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %56, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 3, i64 0
  %19 = bitcast %struct.md5_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 92, i1 false) #8
  call void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st* nonnull %4) #8
  %20 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %18, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 8, i64* %22, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  %23 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %1, i8** %24, align 8
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %2, i64* %25, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  %26 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #8
  call void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"* nonnull %7, %struct.md5_state_st* nonnull %4) #8
  %27 = bitcast %"struct.base::MD5Digest"* %7 to i64*
  %28 = load i64, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %19) #8
  %29 = load i32, i32* %14, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %17
  %32 = sext i32 %29 to i64
  %33 = urem i64 %28, %32
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %31, %17
  %36 = phi i32 [ %34, %31 ], [ -1, %17 ]
  %37 = load i64*, i64** %10, align 8
  %38 = icmp eq i64* %37, null
  br label %39

39:                                               ; preds = %49, %35
  %40 = phi i1 [ undef, %35 ], [ %55, %49 ]
  %41 = phi i32 [ %36, %35 ], [ %52, %49 ]
  br i1 %38, label %56, label %42

42:                                               ; preds = %39
  %43 = sext i32 %41 to i64
  %44 = getelementptr inbounds i64, i64* %37, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = icmp eq i64 %45, %28
  br i1 %48, label %56, label %49

49:                                               ; preds = %47
  %50 = add nsw i32 %41, 1
  %51 = icmp eq i32 %50, %29
  %52 = select i1 %51, i32 0, i32 %50
  %53 = icmp eq i32 %52, %36
  %54 = xor i1 %53, true
  %55 = and i1 %40, %54
  br i1 %53, label %56, label %39

56:                                               ; preds = %49, %47, %42, %39, %13, %9, %3
  %57 = phi i1 [ false, %3 ], [ false, %9 ], [ false, %13 ], [ false, %39 ], [ false, %42 ], [ true, %47 ], [ %55, %49 ]
  ret i1 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11visitedlink17VisitedLinkCommon9IsVisitedEm(%"class.visitedlink::VisitedLinkCommon"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = urem i64 %1, %7
  %9 = trunc i64 %8 to i32
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -1, %2 ]
  %12 = getelementptr inbounds %"class.visitedlink::VisitedLinkCommon", %"class.visitedlink::VisitedLinkCommon"* %0, i64 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br label %15

15:                                               ; preds = %25, %10
  %16 = phi i1 [ undef, %10 ], [ %31, %25 ]
  %17 = phi i32 [ %11, %10 ], [ %28, %25 ]
  br i1 %14, label %32, label %18

18:                                               ; preds = %15
  %19 = sext i32 %17 to i64
  %20 = getelementptr inbounds i64, i64* %13, i64 %19
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %18
  %24 = icmp eq i64 %21, %1
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = add nsw i32 %17, 1
  %27 = icmp eq i32 %26, %4
  %28 = select i1 %27, i32 0, i32 %26
  %29 = icmp eq i32 %28, %11
  %30 = xor i1 %29, true
  %31 = and i1 %16, %30
  br i1 %29, label %32, label %15

32:                                               ; preds = %25, %15, %23, %18
  %33 = phi i1 [ %31, %25 ], [ true, %23 ], [ false, %18 ], [ false, %15 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11visitedlink17VisitedLinkCommon9IsVisitedERK4GURL(%"class.visitedlink::VisitedLinkCommon"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3 align 2 {
  %3 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #8
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = tail call zeroext i1 @_ZNK11visitedlink17VisitedLinkCommon9IsVisitedEPKcm(%"class.visitedlink::VisitedLinkCommon"* %0, i8* %11, i64 %20)
  ret i1 %21
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11visitedlink17VisitedLinkCommon21ComputeURLFingerprintEPKcmPKh(i8*, i64, i8*) local_unnamed_addr #3 align 2 {
  %4 = alloca %struct.md5_state_st, align 4
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"struct.base::MD5Digest", align 8
  %8 = bitcast %struct.md5_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 92, i1 false)
  call void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st* nonnull %4) #8
  %9 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 8, i64* %11, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  %12 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %0, i8** %13, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %1, i64* %14, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  %15 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"* nonnull %7, %struct.md5_state_st* nonnull %4) #8
  %16 = bitcast %"struct.base::MD5Digest"* %7 to i64*
  %17 = load i64, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %8) #8
  ret i64 %17
}

declare void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st*) local_unnamed_addr #6

declare void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"*, %struct.md5_state_st*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
