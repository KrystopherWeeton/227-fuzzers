; ModuleID = '../../components/viz/service/display_embedder/software_output_surface.cc'
source_filename = "../../components/viz/service/display_embedder/software_output_surface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::SoftwareOutputSurface" = type { %"class.viz::OutputSurface", %"class.viz::OutputSurfaceClient"*, %"class.base::RepeatingCallback", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.std::__1::queue", %"class.ui::LatencyTracker", i8, %"class.base::WeakPtrFactory" }
%"class.viz::OutputSurface" = type { i32 (...)**, %"struct.viz::OutputSurface::Capabilities", %class.scoped_refptr, %"class.std::__1::unique_ptr", i32, %class.SkMatrix44 }
%"struct.viz::OutputSurface::Capabilities" = type { i32, i32, i8, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, [15 x i32] }
%class.scoped_refptr = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::SoftwareOutputDevice"* }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::OutputSurfaceClient" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.10", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::vector"**, %"class.std::__1::vector"**, %"class.std::__1::vector"**, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.16" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::vector"** }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.ui::LatencyTracker" = type { %"class.base::TimeDelta", i8, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.32", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.33" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i8 }
%"class.viz::SoftwareOutputDevice" = type { i32 (...)**, %class.scoped_refptr.0, %"class.viz::SoftwareOutputDeviceClient"*, %"class.gfx::Size", %"class.gfx::Rect", %class.sk_sp, %"class.std::__1::unique_ptr.2" }
%class.scoped_refptr.0 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.viz::SoftwareOutputDeviceClient" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.gfx::VSyncProvider"* }
%"class.gfx::VSyncProvider" = type { i32 (...)** }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.viz::OutputSurfaceFrame" = type { %"class.gfx::Size", %"class.absl::optional", %"class.std::__1::vector.38", %"class.std::__1::vector", i8, %"class.std::__1::unique_ptr.45" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.gfx::Rect"* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::OnceCallback.52" = type { %"class.base::internal::CallbackBase" }
%"struct.gfx::SwapTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"struct.gfx::PresentationFeedback" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.viz::SkiaOutputSurface" = type opaque
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback.53" }
%"class.base::OnceCallback.53" = type { %"class.base::internal::CallbackBase" }
%"struct.std::__1::__split_buffer.55" = type { %"class.std::__1::vector"**, %"class.std::__1::vector"**, %"class.std::__1::vector"**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::allocator.24"* }
%"class.std::__1::allocator.24" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN3viz21SoftwareOutputSurface23SetDisplayTransformHintEN3gfx16OverlayTransformE = comdat any

$_ZN3viz13OutputSurface30SetNeedsMeasureNextDrawLatencyEv = comdat any

$_ZN3viz13OutputSurface12SetFrameRateEf = comdat any

$_ZNSt3__112__deque_baseINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE5clearEv = comdat any

$_ZNSt3__15dequeINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS7_EEE10push_frontEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEERNS4_IS7_EEE10push_frontERKS7_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EES5_EEEFvS9_EE7RunOnceEPNS0_13BindStateBaseES9_ = comdat any

$_ZN4base8internal9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEFvS5_S6_EE7RunOnceEPNS0_13BindStateBaseEOS5_OS6_ = comdat any

$_ZN4base8internal9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE = comdat any

$_ZNSt3__15dequeINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE9pop_frontEv = comdat any

@_ZTVN3viz21SoftwareOutputSurfaceE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurfaceD2Ev to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurfaceD0Ev to i8*), i8* bitcast (%"class.viz::SkiaOutputSurface"* (%"class.viz::OutputSurface"*)* @_ZN3viz13OutputSurface19AsSkiaOutputSurfaceEv to i8*), i8* bitcast (i32 (%"class.viz::OutputSurface"*)* @_ZNK3viz13OutputSurface16GetSurfaceHandleEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*, %"class.viz::OutputSurfaceClient"*)* @_ZN3viz21SoftwareOutputSurface12BindToClientEPNS_19OutputSurfaceClientE to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface16EnsureBackbufferEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface17DiscardBackbufferEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface15BindFramebufferEv to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, %"class.gfx::Rect"*)* @_ZN3viz13OutputSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, i1)* @_ZN3viz13OutputSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.viz::SoftwareOutputSurface"*)* @_ZNK3viz21SoftwareOutputSurface25IsDisplayedAsOverlayPlaneEv to i8*), i8* bitcast (i32 (%"class.viz::SoftwareOutputSurface"*)* @_ZNK3viz21SoftwareOutputSurface19GetOverlayTextureIdEv to i8*), i8* bitcast ({ i64, i64 } (%"class.viz::OutputSurface"*)* @_ZNK3viz13OutputSurface17GetOverlayMailboxEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i32, i1)* @_ZN3viz21SoftwareOutputSurface7ReshapeERKN3gfx4SizeEfRKNS1_10ColorSpaceENS1_12BufferFormatEb to i8*), i8* bitcast (i1 (%"class.viz::SoftwareOutputSurface"*)* @_ZNK3viz21SoftwareOutputSurface22HasExternalStencilTestEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface20ApplyExternalStencilEv to i8*), i8* bitcast (i32 (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface31GetFramebufferCopyTextureFormatEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*, %"class.viz::OutputSurfaceFrame"*)* @_ZN3viz21SoftwareOutputSurface11SwapBuffersENS_18OutputSurfaceFrameE to i8*), i8* bitcast ({ i64, i64 } (%"class.viz::OutputSurface"*)* @_ZNK3viz13OutputSurface27GetCurrentFramebufferDamageEv to i8*), i8* bitcast (i32 (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface14UpdateGpuFenceEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*, %"class.base::RepeatingCallback"*)* @_ZN3viz21SoftwareOutputSurface32SetUpdateVSyncParametersCallbackEN4base17RepeatingCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, %"class.base::RepeatingCallback"*)* @_ZN3viz13OutputSurface19SetGpuVSyncCallbackEN4base17RepeatingCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, i1)* @_ZN3viz13OutputSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*, i32)* @_ZN3viz21SoftwareOutputSurface23SetDisplayTransformHintEN3gfx16OverlayTransformE to i8*), i8* bitcast (i32 (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurface19GetDisplayTransformEv to i8*), i8* bitcast (void (%"class.base::ScopedClosureRunner"*, %"class.viz::OutputSurface"*)* @_ZN3viz13OutputSurface20GetCacheBackBufferCbEv to i8*), i8* bitcast (void (%"class.viz::SoftwareOutputSurface"*, i1)* @_ZN3viz21SoftwareOutputSurface29SetNeedsSwapSizeNotificationsEb to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*)* @_ZN3viz13OutputSurface30SetNeedsMeasureNextDrawLatencyEv to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, float)* @_ZN3viz13OutputSurface12SetFrameRateEf to i8*), i8* bitcast (void ()* @_ZN3viz13OutputSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3viz21SoftwareOutputSurfaceC1ENSt3__110unique_ptrINS_20SoftwareOutputDeviceENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputDevice"*), void (%"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputDevice"*)* @_ZN3viz21SoftwareOutputSurfaceC2ENSt3__110unique_ptrINS_20SoftwareOutputDeviceENS1_14default_deleteIS3_EEEE
@_ZN3viz21SoftwareOutputSurfaceD1Ev = hidden unnamed_addr alias void (%"class.viz::SoftwareOutputSurface"*), void (%"class.viz::SoftwareOutputSurface"*)* @_ZN3viz21SoftwareOutputSurfaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurfaceC2ENSt3__110unique_ptrINS_20SoftwareOutputDeviceENS1_14default_deleteIS3_EEEE(%"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputDevice"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0
  tail call void @_ZN3viz13OutputSurfaceC2ENSt3__110unique_ptrINS_20SoftwareOutputDeviceENS1_14default_deleteIS3_EEEE(%"class.viz::OutputSurface"* %3, %"class.viz::SoftwareOutputDevice"* %1) #9
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN3viz21SoftwareOutputSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 4, i32 0
  %7 = bitcast %"class.viz::OutputSurfaceClient"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  store i64 16666, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5
  %9 = bitcast %"class.std::__1::queue"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #9
  %10 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 6
  tail call void @_ZN2ui14LatencyTrackerC1Ev(%"class.ui::LatencyTracker"* %10) #9
  %11 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 7
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 8, i32 0
  %13 = ptrtoint %"class.viz::SoftwareOutputSurface"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %12, i64 %13) #9
  %14 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %14, align 8
  %16 = bitcast %"class.viz::SoftwareOutputDevice"* %15 to i32 (%"class.viz::SoftwareOutputDevice"*)***
  %17 = load i32 (%"class.viz::SoftwareOutputDevice"*)**, i32 (%"class.viz::SoftwareOutputDevice"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.viz::SoftwareOutputDevice"*)*, i32 (%"class.viz::SoftwareOutputDevice"*)** %17, i64 9
  %19 = load i32 (%"class.viz::SoftwareOutputDevice"*)*, i32 (%"class.viz::SoftwareOutputDevice"*)** %18, align 8
  %20 = tail call i32 %19(%"class.viz::SoftwareOutputDevice"* %15) #9
  %21 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %20, i32* %21, align 8
  ret void
}

declare void @_ZN3viz13OutputSurfaceC2ENSt3__110unique_ptrINS_20SoftwareOutputDeviceENS1_14default_deleteIS3_EEEE(%"class.viz::OutputSurface"*, %"class.viz::SoftwareOutputDevice"*) unnamed_addr #1

declare void @_ZN2ui14LatencyTrackerC1Ev(%"class.ui::LatencyTracker"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurfaceD2Ev(%"class.viz::SoftwareOutputSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN3viz21SoftwareOutputSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #9
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 6
  tail call void @_ZN2ui14LatencyTrackerD1Ev(%"class.ui::LatencyTracker"* %4) #9
  %5 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE5clearEv(%"class.std::__1::__deque_base"* %6) #9
  %7 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %7, align 8
  %9 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %10 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %9, align 8
  %11 = icmp eq %"class.std::__1::vector"** %8, %10
  br i1 %11, label %30, label %12

12:                                               ; preds = %1, %12
  %13 = phi %"class.std::__1::vector"** [ %16, %12 ], [ %8, %1 ]
  %14 = bitcast %"class.std::__1::vector"** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #10
  %16 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %13, i64 1
  %17 = icmp eq %"class.std::__1::vector"** %16, %10
  br i1 %17, label %18, label %12

18:                                               ; preds = %12
  %19 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %7, align 8
  %20 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %9, align 8
  %21 = icmp eq %"class.std::__1::vector"** %20, %19
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"class.std::__1::vector"** %19 to i64
  %24 = getelementptr %"class.std::__1::vector"*, %"class.std::__1::vector"** %20, i64 -1
  %25 = ptrtoint %"class.std::__1::vector"** %24 to i64
  %26 = sub i64 %25, %23
  %27 = lshr i64 %26, 3
  %28 = xor i64 %27, -1
  %29 = getelementptr %"class.std::__1::vector"*, %"class.std::__1::vector"** %20, i64 %28
  store %"class.std::__1::vector"** %29, %"class.std::__1::vector"*** %9, align 8
  br label %30

30:                                               ; preds = %22, %18, %1
  %31 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %31, align 8
  %33 = icmp eq %"class.std::__1::vector"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %37) #9
  %38 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0
  tail call void @_ZN3viz13OutputSurfaceD2Ev(%"class.viz::OutputSurface"* %38) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui14LatencyTrackerD1Ev(%"class.ui::LatencyTracker"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz13OutputSurfaceD2Ev(%"class.viz::OutputSurface"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurfaceD0Ev(%"class.viz::SoftwareOutputSurface"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz21SoftwareOutputSurfaceD2Ev(%"class.viz::SoftwareOutputSurface"* %0) #9
  %2 = bitcast %"class.viz::SoftwareOutputSurface"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz21SoftwareOutputSurface12BindToClientEPNS_19OutputSurfaceClientE(%"class.viz::SoftwareOutputSurface"* nocapture, %"class.viz::OutputSurfaceClient"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 1
  store %"class.viz::OutputSurfaceClient"* %1, %"class.viz::OutputSurfaceClient"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface16EnsureBackbufferEv(%"class.viz::SoftwareOutputSurface"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %2, align 8
  %4 = bitcast %"class.viz::SoftwareOutputDevice"* %3 to void (%"class.viz::SoftwareOutputDevice"*)***
  %5 = load void (%"class.viz::SoftwareOutputDevice"*)**, void (%"class.viz::SoftwareOutputDevice"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %5, i64 6
  %7 = load void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %6, align 8
  tail call void %7(%"class.viz::SoftwareOutputDevice"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface17DiscardBackbufferEv(%"class.viz::SoftwareOutputSurface"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %2, align 8
  %4 = bitcast %"class.viz::SoftwareOutputDevice"* %3 to void (%"class.viz::SoftwareOutputDevice"*)***
  %5 = load void (%"class.viz::SoftwareOutputDevice"*)**, void (%"class.viz::SoftwareOutputDevice"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %5, i64 5
  %7 = load void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %6, align 8
  tail call void %7(%"class.viz::SoftwareOutputDevice"* %3) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface15BindFramebufferEv(%"class.viz::SoftwareOutputSurface"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface7ReshapeERKN3gfx4SizeEfRKNS1_10ColorSpaceENS1_12BufferFormatEb(%"class.viz::SoftwareOutputSurface"* nocapture readonly, %"class.gfx::Size"* dereferenceable(8), float, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %7, align 8
  %9 = bitcast %"class.viz::SoftwareOutputDevice"* %8 to void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)***
  %10 = load void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)**, void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)*, void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)** %10, i64 2
  %12 = load void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)*, void (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Size"*, float)** %11, align 8
  tail call void %12(%"class.viz::SoftwareOutputDevice"* %8, %"class.gfx::Size"* dereferenceable(8) %1, float %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface11SwapBuffersENS_18OutputSurfaceFrameE(%"class.viz::SoftwareOutputSurface"*, %"class.viz::OutputSurfaceFrame"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.base::OnceCallback.52", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %10 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %11, align 8
  %13 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %1, i64 0, i32 3, i32 0, i32 1
  %14 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %13, align 8
  %15 = icmp eq %"class.ui::LatencyInfo"* %12, %14
  br i1 %15, label %16, label %107

16:                                               ; preds = %107, %2
  %17 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::vector"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::vector"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  %26 = mul i64 %24, 170
  %27 = add i64 %26, -1
  %28 = select i1 %25, i64 0, i64 %27
  %29 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, %30
  %34 = icmp eq i64 %28, %33
  %35 = inttoptr i64 %22 to %"class.std::__1::vector"**
  %36 = inttoptr i64 %19 to %"class.std::__1::vector"**
  br i1 %34, label %37, label %44

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNSt3__15dequeINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %38) #9
  %39 = load i64, i64* %31, align 8
  %40 = load i64, i64* %29, align 8
  %41 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %20, align 8
  %42 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %17, align 8
  %43 = add i64 %40, %39
  br label %44

44:                                               ; preds = %37, %16
  %45 = phi i64 [ %43, %37 ], [ %33, %16 ]
  %46 = phi %"class.std::__1::vector"** [ %42, %37 ], [ %36, %16 ]
  %47 = phi %"class.std::__1::vector"** [ %41, %37 ], [ %35, %16 ]
  %48 = icmp eq %"class.std::__1::vector"** %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = udiv i64 %45, 170
  %51 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %47, i64 %50
  %52 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %51, align 8
  %53 = urem i64 %45, 170
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 %53
  br label %55

55:                                               ; preds = %44, %49
  %56 = phi %"class.std::__1::vector"* [ %54, %49 ], [ null, %44 ]
  %57 = bitcast %"class.std::__1::vector"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #9
  %58 = bitcast %"class.std::__1::vector"* %10 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector"* %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = bitcast %"class.ui::LatencyInfo"** %13 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %56, i64 0, i32 0, i32 1
  %64 = bitcast %"class.ui::LatencyInfo"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.ui::LatencyInfo"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %56, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.ui::LatencyInfo"** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #9
  %71 = load i64, i64* %31, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %31, align 8
  %73 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %73, align 8
  %75 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #9
  %76 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9, !noalias !2
  %77 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 8, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %77) #9, !noalias !2
  %78 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 8, i32 0, i32 1
  %79 = load i64, i64* %78, align 8, !noalias !2
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %80, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %79) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #9, !noalias !2
  %81 = call i8* @_Znwm(i64 72) #10, !noalias !5
  %82 = bitcast i8* %81 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %82, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EES5_EEEFvS9_EE7RunOnceEPNS0_13BindStateBaseES9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #9, !noalias !5
  %83 = getelementptr inbounds i8, i8* %81, i64 32
  %84 = bitcast i8* %83 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"*)* @_ZN3viz21SoftwareOutputSurface19SwapBuffersCallbackEN4base9TimeTicksERKN3gfx4SizeE to i64), i64 0>, <2 x i64>* %84, align 8, !noalias !5
  %85 = getelementptr inbounds i8, i8* %81, i64 48
  %86 = bitcast i8* %85 to %"class.base::internal::WeakReference"*
  %87 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %86, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %87) #9, !noalias !5
  %88 = getelementptr inbounds i8, i8* %81, i64 56
  %89 = bitcast i8* %88 to i64*
  %90 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8, !noalias !5
  store i64 %91, i64* %89, align 8, !noalias !5
  %92 = getelementptr inbounds i8, i8* %81, i64 64
  %93 = bitcast i8* %92 to i64*
  store i64 %9, i64* %93, align 8, !noalias !5
  %94 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %81, i8** %94, align 8, !alias.scope !5
  %95 = bitcast %"class.viz::SoftwareOutputDevice"* %74 to void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)***
  %96 = load void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)**, void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)*, void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)** %96, i64 8
  %98 = load void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)*, void (%"class.viz::SoftwareOutputDevice"*, %"class.base::OnceCallback"*)** %97, align 8
  call void %98(%"class.viz::SoftwareOutputDevice"* %74, %"class.base::OnceCallback"* nonnull %5) #9
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %99) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #9
  %100 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %73, align 8
  %101 = bitcast %"class.viz::SoftwareOutputDevice"* %100 to %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)***
  %102 = load %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)**, %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)*, %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)** %102, i64 7
  %104 = load %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)*, %"class.gfx::VSyncProvider"* (%"class.viz::SoftwareOutputDevice"*)** %103, align 8
  %105 = call %"class.gfx::VSyncProvider"* %104(%"class.viz::SoftwareOutputDevice"* %100) #9
  %106 = icmp eq %"class.gfx::VSyncProvider"* %105, null
  br i1 %106, label %137, label %111

107:                                              ; preds = %2, %107
  %108 = phi %"class.ui::LatencyInfo"* [ %109, %107 ], [ %12, %2 ]
  tail call void @_ZN2ui11LatencyInfo29AddLatencyNumberWithTimestampENS_20LatencyComponentTypeEN4base9TimeTicksE(%"class.ui::LatencyInfo"* %108, i32 11, i64 %9) #9
  tail call void @_ZN2ui11LatencyInfo29AddLatencyNumberWithTimestampENS_20LatencyComponentTypeEN4base9TimeTicksE(%"class.ui::LatencyInfo"* %108, i32 12, i64 %9) #9
  %109 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %108, i64 1
  %110 = icmp eq %"class.ui::LatencyInfo"* %109, %14
  br i1 %110, label %16, label %107

111:                                              ; preds = %55
  %112 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %112, align 8
  %114 = icmp eq %"class.base::internal::BindStateBase"* %113, null
  br i1 %114, label %137, label %115

115:                                              ; preds = %111
  %116 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #9
  %117 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9, !noalias !10
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %77) #9, !noalias !10
  %118 = load i64, i64* %78, align 8, !noalias !10
  %119 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %119, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %118) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9, !noalias !10
  %120 = call i8* @_Znwm(i64 64) #10, !noalias !13
  %121 = bitcast i8* %120 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %121, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEFvS5_S6_EE7RunOnceEPNS0_13BindStateBaseEOS5_OS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #9, !noalias !13
  %122 = getelementptr inbounds i8, i8* %120, i64 32
  %123 = bitcast i8* %122 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::SoftwareOutputSurface"*, i64, i64)* @_ZN3viz21SoftwareOutputSurface21UpdateVSyncParametersEN4base9TimeTicksENS1_9TimeDeltaE to i64), i64 0>, <2 x i64>* %123, align 8, !noalias !13
  %124 = getelementptr inbounds i8, i8* %120, i64 48
  %125 = bitcast i8* %124 to %"class.base::internal::WeakReference"*
  %126 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %125, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %126) #9, !noalias !13
  %127 = getelementptr inbounds i8, i8* %120, i64 56
  %128 = bitcast i8* %127 to i64*
  %129 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8, !noalias !13
  store i64 %130, i64* %128, align 8, !noalias !13
  %131 = bitcast %"class.base::OnceCallback.52"* %7 to i8**
  store i8* %120, i8** %131, align 8, !alias.scope !13
  %132 = bitcast %"class.gfx::VSyncProvider"* %105 to void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)***
  %133 = load void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)**, void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)*, void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)** %133, i64 2
  %135 = load void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)*, void (%"class.gfx::VSyncProvider"*, %"class.base::OnceCallback.52"*)** %134, align 8
  call void %135(%"class.gfx::VSyncProvider"* nonnull %105, %"class.base::OnceCallback.52"* nonnull %7) #9
  %136 = getelementptr inbounds %"class.base::OnceCallback.52", %"class.base::OnceCallback.52"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %136) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %119) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #9
  br label %137

137:                                              ; preds = %111, %55, %115
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN2ui11LatencyInfo29AddLatencyNumberWithTimestampENS_20LatencyComponentTypeEN4base9TimeTicksE(%"class.ui::LatencyInfo"*, i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface19SwapBuffersCallbackEN4base9TimeTicksERKN3gfx4SizeE(%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"* dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.gfx::SwapTimings", align 8
  %6 = alloca %"struct.gfx::GpuFenceHandle", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"struct.gfx::PresentationFeedback", align 8
  %9 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  %12 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = udiv i64 %13, 170
  %15 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, i64 %14
  %16 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %15, align 8
  %17 = urem i64 %13, 170
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 %17
  %19 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = bitcast %"class.std::__1::vector"* %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %4 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 %17, i32 0, i32 1
  %24 = bitcast %"class.ui::LatencyInfo"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %27 = bitcast %"class.ui::LatencyInfo"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 %17, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.ui::LatencyInfo"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"class.ui::LatencyInfo"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %"class.std::__1::vector"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  call void @_ZN2ui14LatencyTracker25OnGpuSwapBuffersCompletedENSt3__16vectorINS_11LatencyInfoENS1_9allocatorIS3_EEEEb(%"class.ui::LatencyTracker"* %9, %"class.std::__1::vector"* nonnull %4, i1 zeroext false) #9
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %35 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %34, align 8
  %36 = icmp eq %"class.ui::LatencyInfo"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %3
  %38 = bitcast %"class.ui::LatencyInfo"* %35 to i8*
  %39 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %26, align 8
  %40 = icmp eq %"class.ui::LatencyInfo"* %39, %35
  br i1 %40, label %48, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"class.ui::LatencyInfo"* [ %43, %41 ], [ %39, %37 ]
  %43 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %42, i64 -1
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %43) #9
  %44 = icmp eq %"class.ui::LatencyInfo"* %43, %35
  br i1 %44, label %45, label %41

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::vector"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %37
  %49 = phi i8* [ %47, %45 ], [ %38, %37 ]
  store %"class.ui::LatencyInfo"* %35, %"class.ui::LatencyInfo"** %26, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %3, %48
  %51 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 5, i32 0
  call void @_ZNSt3__15dequeINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE9pop_frontEv(%"class.std::__1::deque"* %51) #9
  %52 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 1
  %53 = load %"class.viz::OutputSurfaceClient"*, %"class.viz::OutputSurfaceClient"** %52, align 8
  %54 = bitcast %"struct.gfx::SwapTimings"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"struct.gfx::SwapTimings", %"struct.gfx::SwapTimings"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.gfx::SwapTimings", %"struct.gfx::SwapTimings"* %5, i64 0, i32 1, i32 0, i32 0
  store i64 %1, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.gfx::SwapTimings", %"struct.gfx::SwapTimings"* %5, i64 0, i32 2, i32 0, i32 0
  %58 = bitcast i64* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false)
  call void @_ZN3gfx14GpuFenceHandleC1Ev(%"struct.gfx::GpuFenceHandle"* nonnull %6) #9
  %59 = bitcast %"class.viz::OutputSurfaceClient"* %53 to void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::SwapTimings"*, %"struct.gfx::GpuFenceHandle"*)***
  %60 = load void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::SwapTimings"*, %"struct.gfx::GpuFenceHandle"*)**, void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::SwapTimings"*, %"struct.gfx::GpuFenceHandle"*)*** %59, align 8
  %61 = load void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::SwapTimings"*, %"struct.gfx::GpuFenceHandle"*)*, void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::SwapTimings"*, %"struct.gfx::GpuFenceHandle"*)** %60, align 8
  call void %61(%"class.viz::OutputSurfaceClient"* %53, %"struct.gfx::SwapTimings"* nonnull dereferenceable(40) %5, %"struct.gfx::GpuFenceHandle"* nonnull %6) #9
  call void @_ZN3gfx14GpuFenceHandleD1Ev(%"struct.gfx::GpuFenceHandle"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #9
  %62 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %64 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 3, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 4, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = call i64 @_ZNK4base9TimeTicks17SnappedToNextTickES0_NS_9TimeDeltaE(%"class.base::TimeTicks"* nonnull %7, i64 %66, i64 %68) #9
  %70 = load i64, i64* %63, align 8
  %71 = sub nsw i64 %69, %70
  %72 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 7
  %73 = load i8, i8* %72, align 8, !range !18
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %50
  %76 = load %"class.viz::OutputSurfaceClient"*, %"class.viz::OutputSurfaceClient"** %52, align 8
  %77 = bitcast %"class.viz::OutputSurfaceClient"* %76 to void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)***
  %78 = load void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)**, void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)*, void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)** %78, i64 4
  %80 = load void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)*, void (%"class.viz::OutputSurfaceClient"*, %"class.gfx::Size"*)** %79, align 8
  call void %80(%"class.viz::OutputSurfaceClient"* %76, %"class.gfx::Size"* dereferenceable(8) %2) #9
  %81 = load i64, i64* %63, align 8
  br label %82

82:                                               ; preds = %50, %75
  %83 = phi i64 [ %70, %50 ], [ %81, %75 ]
  %84 = load %"class.viz::OutputSurfaceClient"*, %"class.viz::OutputSurfaceClient"** %52, align 8
  %85 = bitcast %"struct.gfx::PresentationFeedback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %85) #9
  %86 = getelementptr inbounds %"struct.gfx::PresentationFeedback", %"struct.gfx::PresentationFeedback"* %8, i64 0, i32 0, i32 0, i32 0
  store i64 %83, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.gfx::PresentationFeedback", %"struct.gfx::PresentationFeedback"* %8, i64 0, i32 1, i32 0
  store i64 %71, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.gfx::PresentationFeedback", %"struct.gfx::PresentationFeedback"* %8, i64 0, i32 2
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.gfx::PresentationFeedback", %"struct.gfx::PresentationFeedback"* %8, i64 0, i32 3, i32 0, i32 0
  %90 = bitcast i64* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 32, i1 false) #9
  %91 = bitcast %"class.viz::OutputSurfaceClient"* %84 to void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)***
  %92 = load void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)**, void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)*, void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)** %92, i64 5
  %94 = load void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)*, void (%"class.viz::OutputSurfaceClient"*, %"struct.gfx::PresentationFeedback"*)** %93, align 8
  call void %94(%"class.viz::OutputSurfaceClient"* %84, %"struct.gfx::PresentationFeedback"* nonnull dereferenceable(56) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %85) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface21UpdateVSyncParametersEN4base9TimeTicksENS1_9TimeDeltaE(%"class.viz::SoftwareOutputSurface"* nocapture, i64, i64) #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 4, i32 0
  store i64 %2, i64* %7, align 8
  %8 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*)**
  %16 = load void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*)** %15, align 8
  call void %16(%"class.base::internal::BindStateBase"* %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3viz21SoftwareOutputSurface25IsDisplayedAsOverlayPlaneEv(%"class.viz::SoftwareOutputSurface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3viz21SoftwareOutputSurface19GetOverlayTextureIdEv(%"class.viz::SoftwareOutputSurface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3viz21SoftwareOutputSurface22HasExternalStencilTestEv(%"class.viz::SoftwareOutputSurface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface20ApplyExternalStencilEv(%"class.viz::SoftwareOutputSurface"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3viz21SoftwareOutputSurface31GetFramebufferCopyTextureFormatEv(%"class.viz::SoftwareOutputSurface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

declare void @_ZN2ui14LatencyTracker25OnGpuSwapBuffersCompletedENSt3__16vectorINS_11LatencyInfoENS1_9allocatorIS3_EEEEb(%"class.ui::LatencyTracker"*, %"class.std::__1::vector"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3gfx14GpuFenceHandleC1Ev(%"struct.gfx::GpuFenceHandle"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx14GpuFenceHandleD1Ev(%"struct.gfx::GpuFenceHandle"*) unnamed_addr #2

declare i64 @_ZNK4base9TimeTicks17SnappedToNextTickES0_NS_9TimeDeltaE(%"class.base::TimeTicks"*, i64, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3viz21SoftwareOutputSurface14UpdateGpuFenceEv(%"class.viz::SoftwareOutputSurface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SoftwareOutputSurface32SetUpdateVSyncParametersCallbackEN4base17RepeatingCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE(%"class.viz::SoftwareOutputSurface"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3viz21SoftwareOutputSurface19GetDisplayTransformEv(%"class.viz::SoftwareOutputSurface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz21SoftwareOutputSurface29SetNeedsSwapSizeNotificationsEb(%"class.viz::SoftwareOutputSurface"* nocapture, i1 zeroext) unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.viz::SoftwareOutputSurface", %"class.viz::SoftwareOutputSurface"* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 8
  ret void
}

declare %"class.viz::SkiaOutputSurface"* @_ZN3viz13OutputSurface19AsSkiaOutputSurfaceEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare i32 @_ZNK3viz13OutputSurface16GetSurfaceHandleEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare void @_ZN3viz13OutputSurface16SetDrawRectangleERKN3gfx4RectE(%"class.viz::OutputSurface"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN3viz13OutputSurface17SetEnableDCLayersEb(%"class.viz::OutputSurface"*, i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK3viz13OutputSurface17GetOverlayMailboxEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare { i64, i64 } @_ZNK3viz13OutputSurface27GetCurrentFramebufferDamageEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare void @_ZN3viz13OutputSurface19SetGpuVSyncCallbackEN4base17RepeatingCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE(%"class.viz::OutputSurface"*, %"class.base::RepeatingCallback"*) unnamed_addr #1

declare void @_ZN3viz13OutputSurface18SetGpuVSyncEnabledEb(%"class.viz::OutputSurface"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz21SoftwareOutputSurface23SetDisplayTransformHintEN3gfx16OverlayTransformE(%"class.viz::SoftwareOutputSurface"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3viz13OutputSurface20GetCacheBackBufferCbEv(%"class.base::ScopedClosureRunner"* sret, %"class.viz::OutputSurface"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz13OutputSurface30SetNeedsMeasureNextDrawLatencyEv(%"class.viz::OutputSurface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz13OutputSurface12SetFrameRateEf(%"class.viz::OutputSurface"*, float) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3viz13OutputSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 170
  %7 = urem i64 %5, 170
  %8 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %9, align 8
  %11 = icmp eq %"class.std::__1::vector"** %10, %3
  %12 = ptrtoint %"class.std::__1::vector"** %10 to i64
  %13 = ptrtoint %"class.std::__1::vector"** %3 to i64
  %14 = bitcast %"class.std::__1::vector"** %3 to i8**
  br i1 %11, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

17:                                               ; preds = %1
  %18 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %8, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 %7
  %20 = ptrtoint %"class.std::__1::vector"* %19 to i64
  %21 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %5
  %24 = udiv i64 %23, 170
  %25 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, i64 %24
  %26 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  %27 = urem i64 %23, 170
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 %27
  br label %29

29:                                               ; preds = %15, %17
  %30 = phi i64* [ %21, %17 ], [ %16, %15 ]
  %31 = phi i64 [ %20, %17 ], [ 0, %15 ]
  %32 = phi %"class.std::__1::vector"* [ %28, %17 ], [ null, %15 ]
  %33 = inttoptr i64 %31 to %"class.std::__1::vector"*
  %34 = icmp eq %"class.std::__1::vector"* %32, %33
  br i1 %34, label %35, label %51

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::vector"*** %9 to i64*
  br label %43

37:                                               ; preds = %83
  %38 = bitcast %"class.std::__1::vector"*** %9 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"*** %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = inttoptr i64 %41 to i8**
  br label %43

43:                                               ; preds = %35, %37
  %44 = phi i64* [ %36, %35 ], [ %38, %37 ]
  %45 = phi i8** [ %14, %35 ], [ %42, %37 ]
  %46 = phi i64 [ %13, %35 ], [ %41, %37 ]
  %47 = phi i64 [ %12, %35 ], [ %39, %37 ]
  store i64 0, i64* %30, align 8
  %48 = sub i64 %47, %46
  %49 = ashr exact i64 %48, 3
  %50 = icmp ugt i64 %49, 2
  br i1 %50, label %88, label %99

51:                                               ; preds = %29, %83
  %52 = phi %"class.std::__1::vector"* [ %86, %83 ], [ %33, %29 ]
  %53 = phi %"class.std::__1::vector"** [ %85, %83 ], [ %8, %29 ]
  %54 = phi i64 [ %84, %83 ], [ %31, %29 ]
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 0, i32 0, i32 0
  %56 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %55, align 8
  %57 = icmp eq %"class.ui::LatencyInfo"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.ui::LatencyInfo"* %56 to i8*
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 0, i32 0, i32 1
  %61 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %60, align 8
  %62 = icmp eq %"class.ui::LatencyInfo"* %61, %56
  br i1 %62, label %70, label %63

63:                                               ; preds = %58, %63
  %64 = phi %"class.ui::LatencyInfo"* [ %65, %63 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %64, i64 -1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %65) #9
  %66 = icmp eq %"class.ui::LatencyInfo"* %65, %56
  br i1 %66, label %67, label %63

67:                                               ; preds = %63
  %68 = inttoptr i64 %54 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %58
  %71 = phi i8* [ %69, %67 ], [ %59, %58 ]
  store %"class.ui::LatencyInfo"* %56, %"class.ui::LatencyInfo"** %60, align 8
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %51, %70
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 1
  %74 = ptrtoint %"class.std::__1::vector"* %73 to i64
  %75 = bitcast %"class.std::__1::vector"** %53 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = icmp eq i64 %77, 4080
  br i1 %78, label %79, label %83

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %53, i64 1
  %81 = bitcast %"class.std::__1::vector"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %72, %79
  %84 = phi i64 [ %82, %79 ], [ %74, %72 ]
  %85 = phi %"class.std::__1::vector"** [ %80, %79 ], [ %53, %72 ]
  %86 = inttoptr i64 %84 to %"class.std::__1::vector"*
  %87 = icmp eq %"class.std::__1::vector"* %32, %86
  br i1 %87, label %37, label %51

88:                                               ; preds = %43, %88
  %89 = phi i8** [ %98, %88 ], [ %45, %43 ]
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #10
  %91 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %2, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 1
  store %"class.std::__1::vector"** %92, %"class.std::__1::vector"*** %2, align 8
  %93 = load i64, i64* %44, align 8
  %94 = ptrtoint %"class.std::__1::vector"** %92 to i64
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp ugt i64 %96, 2
  %98 = bitcast %"class.std::__1::vector"** %92 to i8**
  br i1 %97, label %88, label %99

99:                                               ; preds = %88, %43
  %100 = phi i64 [ %49, %43 ], [ %96, %88 ]
  switch i64 %100, label %104 [
    i64 1, label %102
    i64 2, label %101
  ]

101:                                              ; preds = %99
  br label %102

102:                                              ; preds = %99, %101
  %103 = phi i64 [ 170, %101 ], [ 85, %99 ]
  store i64 %103, i64* %4, align 8
  br label %104

104:                                              ; preds = %102, %99
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector"*, align 8
  %3 = alloca %"class.std::__1::vector"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.55", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 169
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -170
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  %12 = bitcast %"class.std::__1::vector"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, i64 1
  store %"class.std::__1::vector"** %14, %"class.std::__1::vector"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %17, align 8
  %19 = icmp eq %"class.std::__1::vector"** %16, %18
  %20 = ptrtoint %"class.std::__1::vector"** %18 to i64
  %21 = bitcast %"class.std::__1::vector"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %23, align 8
  %25 = icmp ugt %"class.std::__1::vector"** %14, %24
  %26 = ptrtoint %"class.std::__1::vector"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.std::__1::vector"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %14, i64 %32
  %34 = ptrtoint %"class.std::__1::vector"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::vector"** %33 to i8*
  %40 = bitcast %"class.std::__1::vector"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #9
  %41 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.std::__1::vector"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %33, i64 %36
  store %"class.std::__1::vector"** %44, %"class.std::__1::vector"*** %15, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %43, i64 %32
  store %"class.std::__1::vector"** %45, %"class.std::__1::vector"*** %10, align 8
  %46 = bitcast %"class.std::__1::vector"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.std::__1::vector"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to %"class.std::__1::vector"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %60, i64 %57
  %63 = ptrtoint %"class.std::__1::vector"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %60, i64 %53
  %65 = ptrtoint %"class.std::__1::vector"** %64 to i64
  %66 = ptrtoint %"class.std::__1::vector"** %14 to i64
  %67 = ptrtoint %"class.std::__1::vector"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.std::__1::vector"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.std::__1::vector"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.std::__1::vector"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %79, i64 1
  %87 = ptrtoint %"class.std::__1::vector"** %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !19

91:                                               ; preds = %78
  %92 = ptrtoint %"class.std::__1::vector"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.std::__1::vector"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::vector"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::vector"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::vector"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.std::__1::vector"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 1
  %106 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 1
  %107 = bitcast %"class.std::__1::vector"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::vector"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 2
  %111 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 2
  %112 = bitcast %"class.std::__1::vector"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::vector"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 3
  %116 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 3
  %117 = bitcast %"class.std::__1::vector"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::vector"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 4
  %121 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 4
  %122 = bitcast %"class.std::__1::vector"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 5
  %126 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 5
  %127 = bitcast %"class.std::__1::vector"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 6
  %131 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 6
  %132 = bitcast %"class.std::__1::vector"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::vector"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 7
  %136 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 7
  %137 = bitcast %"class.std::__1::vector"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::vector"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %99, i64 8
  %141 = ptrtoint %"class.std::__1::vector"** %140 to i64
  %142 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %101, i64 8
  %143 = icmp eq %"class.std::__1::vector"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.std::__1::vector"** %70 to i64
  %146 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.std::__1::vector"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.std::__1::vector"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.std::__1::vector"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.std::__1::vector"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::vector"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  %156 = bitcast %"class.std::__1::vector"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %15, align 8
  %161 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %160, i64 1
  store %"class.std::__1::vector"** %161, %"class.std::__1::vector"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.std::__1::vector"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.std::__1::vector"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.std::__1::vector"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.std::__1::vector"**
  %181 = inttoptr i64 %169 to %"class.std::__1::vector"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.std::__1::vector"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #9
  %186 = tail call i8* @_Znwm(i64 4080) #10
  %187 = bitcast %"class.std::__1::vector"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::vector"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #9
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::vector"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #9
  %190 = tail call i8* @_Znwm(i64 4080) #10
  %191 = bitcast %"class.std::__1::vector"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::vector"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #9
  %192 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %167, align 8
  %193 = bitcast %"class.std::__1::vector"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %192, i64 1
  store %"class.std::__1::vector"** %195, %"class.std::__1::vector"*** %167, align 8
  %196 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %164, align 8
  %197 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %172, align 8
  %198 = icmp eq %"class.std::__1::vector"** %196, %197
  %199 = ptrtoint %"class.std::__1::vector"** %197 to i64
  %200 = bitcast %"class.std::__1::vector"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %202, align 8
  %204 = icmp ugt %"class.std::__1::vector"** %195, %203
  %205 = ptrtoint %"class.std::__1::vector"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.std::__1::vector"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %195, i64 %211
  %213 = ptrtoint %"class.std::__1::vector"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.std::__1::vector"** %212 to i8*
  %219 = bitcast %"class.std::__1::vector"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #9
  %220 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.std::__1::vector"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %212, i64 %215
  store %"class.std::__1::vector"** %223, %"class.std::__1::vector"*** %164, align 8
  %224 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %222, i64 %211
  store %"class.std::__1::vector"** %224, %"class.std::__1::vector"*** %167, align 8
  %225 = bitcast %"class.std::__1::vector"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #11
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to %"class.std::__1::vector"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %237, i64 %234
  %240 = ptrtoint %"class.std::__1::vector"** %239 to i64
  %241 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %237, i64 %230
  %242 = ptrtoint %"class.std::__1::vector"** %241 to i64
  %243 = ptrtoint %"class.std::__1::vector"** %195 to i64
  %244 = ptrtoint %"class.std::__1::vector"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.std::__1::vector"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.std::__1::vector"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.std::__1::vector"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %256, i64 1
  %264 = ptrtoint %"class.std::__1::vector"** %263 to i64
  %265 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !21

268:                                              ; preds = %255
  %269 = ptrtoint %"class.std::__1::vector"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.std::__1::vector"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.std::__1::vector"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.std::__1::vector"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.std::__1::vector"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.std::__1::vector"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 1
  %283 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 1
  %284 = bitcast %"class.std::__1::vector"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 2
  %288 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 2
  %289 = bitcast %"class.std::__1::vector"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.std::__1::vector"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 3
  %293 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 3
  %294 = bitcast %"class.std::__1::vector"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.std::__1::vector"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 4
  %298 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 4
  %299 = bitcast %"class.std::__1::vector"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.std::__1::vector"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 5
  %303 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 5
  %304 = bitcast %"class.std::__1::vector"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.std::__1::vector"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 6
  %308 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 6
  %309 = bitcast %"class.std::__1::vector"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::vector"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 7
  %313 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 7
  %314 = bitcast %"class.std::__1::vector"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.std::__1::vector"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %276, i64 8
  %318 = ptrtoint %"class.std::__1::vector"** %317 to i64
  %319 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %278, i64 8
  %320 = icmp eq %"class.std::__1::vector"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.std::__1::vector"** %247 to i64
  %323 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.std::__1::vector"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.std::__1::vector"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.std::__1::vector"** %325 to i8*
  call void @_ZdlPv(i8* %330) #10
  %331 = bitcast %"class.std::__1::vector"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %164, align 8
  %336 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %335, i64 1
  store %"class.std::__1::vector"** %336, %"class.std::__1::vector"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.55"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #9
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.55"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.std::__1::vector"** null, %"class.std::__1::vector"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.24"** %342 to %"class.std::__1::__compressed_pair.21"**
  store %"class.std::__1::__compressed_pair.21"* %346, %"class.std::__1::__compressed_pair.21"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #11
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to %"class.std::__1::vector"**
  %355 = bitcast %"struct.std::__1::__split_buffer.55"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %354, i64 %171
  store %"class.std::__1::vector"** %356, %"class.std::__1::vector"*** %340, align 8
  store %"class.std::__1::vector"** %356, %"class.std::__1::vector"*** %339, align 8
  %357 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %354, i64 %345
  store %"class.std::__1::vector"** %357, %"class.std::__1::vector"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4080) #10
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.std::__1::vector"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.std::__1::vector"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.std::__1::vector"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %356, i64 %370
  store %"class.std::__1::vector"** %371, %"class.std::__1::vector"*** %340, align 8
  store %"class.std::__1::vector"** %371, %"class.std::__1::vector"*** %339, align 8
  %372 = ptrtoint %"class.std::__1::vector"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #11
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.55"* %4 to i64*
  %382 = bitcast %"class.std::__1::vector"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #10
  %386 = bitcast i8* %385 to %"class.std::__1::vector"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %386, i64 %383
  %389 = ptrtoint %"class.std::__1::vector"** %388 to i64
  %390 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %386, i64 %377
  %391 = ptrtoint %"class.std::__1::vector"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.std::__1::vector"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.std::__1::vector"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #10
  %394 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %164, align 8
  %395 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %167, align 8
  %396 = ptrtoint %"class.std::__1::vector"** %395 to i64
  %397 = ptrtoint %"class.std::__1::vector"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.std::__1::vector"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.std::__1::vector"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.std::__1::vector"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.std::__1::vector"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %406, i64 1
  store %"class.std::__1::vector"** %408, %"class.std::__1::vector"*** %340, align 8
  %409 = icmp eq %"class.std::__1::vector"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.std::__1::vector"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.55"* %4 to i64*
  %413 = bitcast %"class.std::__1::vector"*** %339 to i64*
  %414 = bitcast %"class.std::__1::vector"*** %340 to i64*
  %415 = bitcast %"class.std::__1::vector"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.std::__1::vector"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.55"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.std::__1::vector"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.std::__1::vector"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.std::__1::vector"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.std::__1::vector"**
  %441 = inttoptr i64 %434 to %"class.std::__1::vector"**
  %442 = icmp eq %"class.std::__1::vector"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.std::__1::vector"*, %"class.std::__1::vector"** %441, i64 -1
  %445 = ptrtoint %"class.std::__1::vector"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.std::__1::vector"*, %"class.std::__1::vector"** %441, i64 %448
  store %"class.std::__1::vector"** %449, %"class.std::__1::vector"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #10
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #9
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.std::__1::vector"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEERNS4_IS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.55"* nonnull %4, %"class.std::__1::vector"** dereferenceable(8) %457)
  %458 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %167, align 8
  %459 = icmp eq %"class.std::__1::vector"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::vector"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %5, align 8
  %7 = icmp eq %"class.std::__1::vector"** %4, %6
  %8 = ptrtoint %"class.std::__1::vector"** %6 to i64
  %9 = bitcast %"class.std::__1::vector"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %13, align 8
  %15 = icmp ugt %"class.std::__1::vector"** %12, %14
  %16 = ptrtoint %"class.std::__1::vector"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.std::__1::vector"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, i64 %22
  %24 = ptrtoint %"class.std::__1::vector"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::vector"** %23 to i8*
  %30 = bitcast %"class.std::__1::vector"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.std::__1::vector"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %23, i64 %26
  store %"class.std::__1::vector"** %34, %"class.std::__1::vector"*** %3, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %33, i64 %22
  store %"class.std::__1::vector"** %35, %"class.std::__1::vector"*** %11, align 8
  %36 = bitcast %"class.std::__1::vector"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.std::__1::vector"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.std::__1::vector"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %50, i64 %47
  %53 = ptrtoint %"class.std::__1::vector"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %50, i64 %43
  %55 = ptrtoint %"class.std::__1::vector"** %54 to i64
  %56 = ptrtoint %"class.std::__1::vector"** %12 to i64
  %57 = ptrtoint %"class.std::__1::vector"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.std::__1::vector"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.std::__1::vector"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.std::__1::vector"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %69, i64 1
  %77 = ptrtoint %"class.std::__1::vector"** %76 to i64
  %78 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !22

81:                                               ; preds = %68
  %82 = ptrtoint %"class.std::__1::vector"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.std::__1::vector"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.std::__1::vector"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::vector"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.std::__1::vector"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.std::__1::vector"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 1
  %96 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 1
  %97 = bitcast %"class.std::__1::vector"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 2
  %101 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 2
  %102 = bitcast %"class.std::__1::vector"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::vector"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 3
  %106 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 3
  %107 = bitcast %"class.std::__1::vector"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::vector"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 4
  %111 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 4
  %112 = bitcast %"class.std::__1::vector"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::vector"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 5
  %116 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 5
  %117 = bitcast %"class.std::__1::vector"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::vector"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 6
  %121 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 6
  %122 = bitcast %"class.std::__1::vector"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 7
  %126 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 7
  %127 = bitcast %"class.std::__1::vector"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %89, i64 8
  %131 = ptrtoint %"class.std::__1::vector"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, i64 8
  %133 = icmp eq %"class.std::__1::vector"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.std::__1::vector"** %60 to i64
  %136 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.std::__1::vector"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.std::__1::vector"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.std::__1::vector"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.std::__1::vector"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::vector"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"class.std::__1::vector"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.std::__1::vector"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %152, i64 1
  store %"class.std::__1::vector"** %153, %"class.std::__1::vector"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::vector"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %5, align 8
  %7 = icmp eq %"class.std::__1::vector"** %4, %6
  %8 = ptrtoint %"class.std::__1::vector"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %12, align 8
  %14 = icmp ult %"class.std::__1::vector"** %11, %13
  %15 = bitcast %"class.std::__1::vector"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::vector"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::vector"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::vector"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %23, i64 %29
  %31 = bitcast %"class.std::__1::vector"** %30 to i8*
  %32 = bitcast %"class.std::__1::vector"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::vector"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::vector"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::vector"** %36, %"class.std::__1::vector"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %35, i64 %22
  store %"class.std::__1::vector"** %37, %"class.std::__1::vector"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.std::__1::vector"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::vector"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::vector"** %55 to i64
  %57 = ptrtoint %"class.std::__1::vector"** %4 to i64
  %58 = ptrtoint %"class.std::__1::vector"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::vector"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::vector"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::vector"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::vector"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !23

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::vector"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::vector"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::vector"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::vector"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::vector"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::vector"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 1
  %98 = bitcast %"class.std::__1::vector"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 2
  %103 = bitcast %"class.std::__1::vector"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 3
  %108 = bitcast %"class.std::__1::vector"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::vector"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 4
  %113 = bitcast %"class.std::__1::vector"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 5
  %118 = bitcast %"class.std::__1::vector"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::vector"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 6
  %123 = bitcast %"class.std::__1::vector"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 7
  %128 = bitcast %"class.std::__1::vector"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::vector"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 8
  %134 = icmp eq %"class.std::__1::vector"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::vector"** %61 to i64
  %137 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::vector"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::vector"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::vector"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::vector"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::vector"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::vector"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %148, i64 -1
  %150 = bitcast %"class.std::__1::vector"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %153, i64 -1
  store %"class.std::__1::vector"** %154, %"class.std::__1::vector"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEERNS4_IS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.55"*, %"class.std::__1::vector"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %5, align 8
  %7 = icmp eq %"class.std::__1::vector"** %4, %6
  %8 = ptrtoint %"class.std::__1::vector"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %12, align 8
  %14 = icmp ult %"class.std::__1::vector"** %11, %13
  %15 = bitcast %"class.std::__1::vector"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::vector"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::vector"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::vector"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %23, i64 %29
  %31 = bitcast %"class.std::__1::vector"** %30 to i8*
  %32 = bitcast %"class.std::__1::vector"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::vector"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::vector"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::vector"** %36, %"class.std::__1::vector"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %35, i64 %22
  store %"class.std::__1::vector"** %37, %"class.std::__1::vector"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.55"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.std::__1::vector"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::vector"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::vector"** %55 to i64
  %57 = ptrtoint %"class.std::__1::vector"** %4 to i64
  %58 = ptrtoint %"class.std::__1::vector"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::vector"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::vector"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::vector"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::vector"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !24

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::vector"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::vector"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::vector"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::vector"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::vector"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::vector"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 1
  %98 = bitcast %"class.std::__1::vector"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 2
  %103 = bitcast %"class.std::__1::vector"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 3
  %108 = bitcast %"class.std::__1::vector"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::vector"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 4
  %113 = bitcast %"class.std::__1::vector"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 5
  %118 = bitcast %"class.std::__1::vector"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::vector"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 6
  %123 = bitcast %"class.std::__1::vector"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 7
  %128 = bitcast %"class.std::__1::vector"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::vector"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %92, i64 8
  %134 = icmp eq %"class.std::__1::vector"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::vector"** %61 to i64
  %137 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::vector"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::vector"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::vector"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::vector"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::vector"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::vector"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %148, i64 -1
  %150 = bitcast %"class.std::__1::vector"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %153, i64 -1
  store %"class.std::__1::vector"** %154, %"class.std::__1::vector"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EES5_EEEFvS9_EE7RunOnceEPNS0_13BindStateBaseES9_(%"class.base::internal::BindStateBase"*, %"class.gfx::Size"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  br i1 %7, label %8, label %46

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.viz::SoftwareOutputSurface"**
  %11 = load %"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputSurface"** %10, align 8
  %12 = icmp eq %"class.viz::SoftwareOutputSurface"* %11, null
  br i1 %12, label %46, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.viz::SoftwareOutputSurface"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"*)**
  %38 = load void (%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"*)*, void (%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"*)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"*)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.viz::SoftwareOutputSurface"*, i64, %"class.gfx::Size"*)* [ %38, %32 ], [ %40, %39 ]
  %43 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %44 = bitcast void (%"class.base::internal::BindStateBase"*)** %43 to i64*
  %45 = load i64, i64* %44, align 8
  call void %42(%"class.viz::SoftwareOutputSurface"* %29, i64 %45, %"class.gfx::Size"* dereferenceable(8) %1) #9
  br label %46

46:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::SoftwareOutputSurface"**
  %9 = load %"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputSurface"** %8, align 8
  %10 = icmp ne %"class.viz::SoftwareOutputSurface"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEFvS5_S6_EE7RunOnceEPNS0_13BindStateBaseEOS5_OS6_(%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  br i1 %8, label %9, label %48

9:                                                ; preds = %3
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.viz::SoftwareOutputSurface"**
  %12 = load %"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputSurface"** %11, align 8
  %13 = icmp eq %"class.viz::SoftwareOutputSurface"* %12, null
  br i1 %13, label %48, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.viz::SoftwareOutputSurface"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.viz::SoftwareOutputSurface"*, i64, i64)**
  %39 = load void (%"class.viz::SoftwareOutputSurface"*, i64, i64)*, void (%"class.viz::SoftwareOutputSurface"*, i64, i64)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.viz::SoftwareOutputSurface"*, i64, i64)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.viz::SoftwareOutputSurface"*, i64, i64)* [ %39, %33 ], [ %41, %40 ]
  %44 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  call void %43(%"class.viz::SoftwareOutputSurface"* %30, i64 %45, i64 %47) #9
  br label %48

48:                                               ; preds = %3, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::SoftwareOutputSurface"**
  %9 = load %"class.viz::SoftwareOutputSurface"*, %"class.viz::SoftwareOutputSurface"** %8, align 8
  %10 = icmp ne %"class.viz::SoftwareOutputSurface"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind
declare void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_6vectorIN2ui11LatencyInfoENS_9allocatorIS3_EEEENS4_IS6_EEE9pop_frontEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 170
  %7 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, i64 %6
  %8 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %9 = urem i64 %5, 170
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 %9
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %11, align 8
  %13 = icmp eq %"class.ui::LatencyInfo"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.ui::LatencyInfo"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 %9, i32 0, i32 1
  %17 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %16, align 8
  %18 = icmp eq %"class.ui::LatencyInfo"* %17, %12
  br i1 %18, label %26, label %19

19:                                               ; preds = %14, %19
  %20 = phi %"class.ui::LatencyInfo"* [ %21, %19 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %20, i64 -1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %21) #9
  %22 = icmp eq %"class.ui::LatencyInfo"* %21, %12
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::vector"* %10 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %14
  %27 = phi i8* [ %25, %23 ], [ %15, %14 ]
  store %"class.ui::LatencyInfo"* %12, %"class.ui::LatencyInfo"** %16, align 8
  tail call void @_ZdlPv(i8* %27) #10
  %28 = load i64, i64* %4, align 8
  br label %29

29:                                               ; preds = %1, %26
  %30 = phi i64 [ %5, %1 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = add i64 %30, 1
  store i64 %34, i64* %4, align 8
  %35 = icmp ult i64 %34, 340
  br i1 %35, label %44, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"*** %2 to i8***
  %38 = load i8**, i8*** %37, align 8
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #10
  %40 = load %"class.std::__1::vector"**, %"class.std::__1::vector"*** %2, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector"*, %"class.std::__1::vector"** %40, i64 1
  store %"class.std::__1::vector"** %41, %"class.std::__1::vector"*** %2, align 8
  %42 = load i64, i64* %4, align 8
  %43 = add i64 %42, -170
  store i64 %43, i64* %4, align 8
  br label %44

44:                                               ; preds = %29, %36
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3viz21SoftwareOutputSurfaceEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3viz21SoftwareOutputSurfaceEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EERS5_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS4_EERS5_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS2_EERS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksERKN3gfx4SizeEEJNS_7WeakPtrIS2_EERS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base14WeakPtrFactoryIN3viz21SoftwareOutputSurfaceEE10GetWeakPtrEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base14WeakPtrFactoryIN3viz21SoftwareOutputSurfaceEE10GetWeakPtrEv"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN3viz21SoftwareOutputSurfaceEFvNS_9TimeTicksENS_9TimeDeltaEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!18 = !{i8 0, i8 2}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !20}
!24 = distinct !{!24, !20}
